// Class: ReadBDTG
// Automatically generated by MethodBase::MakeClass
//

/* configuration options =====================================================

#GEN -*-*-*-*-*-*-*-*-*-*-*- general info -*-*-*-*-*-*-*-*-*-*-*-

Method         : BDT::BDTG
TMVA Release   : 4.2.1         [262657]
ROOT Release   : 6.10/04       [395780]
Creator        : wfawcett
Date           : Wed Mar 14 12:41:04 2018
Host           : Linux lcgapp-slc6-x86-64-3.cern.ch 2.6.32-642.4.2.el6.x86_64 #1 SMP Wed Aug 24 09:19:54 CEST 2016 x86_64 x86_64 x86_64 GNU/Linux
Dir            : /atlas/users/wfawcett/fcc/testTMVA/tmvatutorial
Training events: 66730
Analysis type  : [Classification]


#OPT -*-*-*-*-*-*-*-*-*-*-*-*- options -*-*-*-*-*-*-*-*-*-*-*-*-

# Set by User:
V: "False" [Verbose output (short form of "VerbosityLevel" below - overrides the latter one)]
H: "False" [Print method-specific help message]
NTrees: "1000" [Number of trees in the forest]
MaxDepth: "2" [Max depth of the decision tree allowed]
MinNodeSize: "2.5%" [Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%)]
nCuts: "20" [Number of grid points in variable range used in finding optimal cut in node splitting]
BoostType: "Grad" [Boosting type for the trees in the forest (note: AdaCost is still experimental)]
UseBaggedBoost: "True" [Use only a random subsample of all events for growing the trees in each boost iteration.]
Shrinkage: "1.000000e-01" [Learning rate for GradBoost algorithm]
BaggedSampleFraction: "5.000000e-01" [Relative size of bagged event sample to original size of the data sample (used whenever bagging is used (i.e. UseBaggedBoost, Bagging,)]
# Default:
VerbosityLevel: "Default" [Verbosity level]
VarTransform: "None" [List of variable transformations performed before training, e.g., "D_Background,P_Signal,G,N_AllClasses" for: "Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed)"]
CreateMVAPdfs: "False" [Create PDFs for classifier outputs (signal and background)]
IgnoreNegWeightsInTraining: "False" [Events with negative weights are ignored in the training (but are included for testing and performance evaluation)]
AdaBoostR2Loss: "quadratic" [Type of Loss function in AdaBoostR2]
AdaBoostBeta: "5.000000e-01" [Learning rate  for AdaBoost algorithm]
UseRandomisedTrees: "False" [Determine at each node splitting the cut variable only as the best out of a random subset of variables (like in RandomForests)]
UseNvars: "3" [Size of the subset of variables used with RandomisedTree option]
UsePoissonNvars: "True" [Interpret "UseNvars" not as fixed number but as mean of a Poisson distribution in each split with RandomisedTree option]
UseYesNoLeaf: "True" [Use Sig or Bkg categories, or the purity=S/(S+B) as classification of the leaf node -> Real-AdaBoost]
NegWeightTreatment: "pray" [How to treat events with negative weights in the BDT training (particular the boosting) : IgnoreInTraining;  Boost With inverse boostweight; Pair events with negative and positive weights in training sample and *annihilate* them (experimental!)]
Css: "1.000000e+00" [AdaCost: cost of true signal selected signal]
Cts_sb: "1.000000e+00" [AdaCost: cost of true signal selected bkg]
Ctb_ss: "1.000000e+00" [AdaCost: cost of true bkg    selected signal]
Cbb: "1.000000e+00" [AdaCost: cost of true bkg    selected bkg ]
NodePurityLimit: "5.000000e-01" [In boosting/pruning, nodes with purity > NodePurityLimit are signal; background otherwise.]
SeparationType: "giniindex" [Separation criterion for node splitting]
RegressionLossFunctionBDTG: "huber" [Loss function for BDTG regression.]
HuberQuantile: "7.000000e-01" [In the Huber loss function this is the quantile that separates the core from the tails in the residuals distribution.]
DoBoostMonitor: "False" [Create control plot with ROC integral vs tree number]
UseFisherCuts: "False" [Use multivariate splits using the Fisher criterion]
MinLinCorrForFisher: "8.000000e-01" [The minimum linear correlation between two variables demanded for use in Fisher criterion in node splitting]
UseExclusiveVars: "False" [Variables already used in fisher criterion are not anymore analysed individually for node splitting]
DoPreselection: "False" [and and apply automatic pre-selection for 100% efficient signal (bkg) cuts prior to training]
SigToBkgFraction: "1.000000e+00" [Sig to Bkg ratio used in Training (similar to NodePurityLimit, which cannot be used in real adaboost]
PruneMethod: "nopruning" [Note: for BDTs use small trees (e.g.MaxDepth=3) and NoPruning:  Pruning: Method used for pruning (removal) of statistically insignificant branches ]
PruneStrength: "0.000000e+00" [Pruning strength]
PruningValFraction: "5.000000e-01" [Fraction of events to use for optimizing automatic pruning.]
SkipNormalization: "False" [Skip normalization at initialization, to keep expectation value of BDT output according to the fraction of events]
nEventsMin: "0" [deprecated: Use MinNodeSize (in % of training events) instead]
UseBaggedGrad: "False" [deprecated: Use *UseBaggedBoost* instead:  Use only a random subsample of all events for growing the trees in each iteration.]
GradBaggingFraction: "5.000000e-01" [deprecated: Use *BaggedSampleFraction* instead: Defines the fraction of events to be used in each iteration, e.g. when UseBaggedGrad=kTRUE. ]
UseNTrainEvents: "0" [deprecated: Use *BaggedSampleFraction* instead: Number of randomly picked training events used in randomised (and bagged) trees]
NNodesMax: "0" [deprecated: Use MaxDepth instead to limit the tree size]
##


#VAR -*-*-*-*-*-*-*-*-*-*-*-* variables *-*-*-*-*-*-*-*-*-*-*-*-

NVar 9
abs(tracks50.kappa_123-tracks50.kappa_013)   abs_tracks50.kappa_123_M_tracks50.kappa_013_ abs(tracks50.kappa_123-tracks50.kappa_013)   |deltaKappa|                                 units                                            'F'    [0,0.0202130563557]
tracks50.pT                   tracks50.pT                   tracks50.pT                   pT                            units                             'F'    [1.04492533207,4657.1328125]
abs(tracks50.zresiduum)       abs_tracks50.zresiduum_       abs(tracks50.zresiduum)       |zresiduum|                   units                             'F'    [0,0.499984741211]
abs(tracks50.beamlineIntersect) abs_tracks50.beamlineIntersect_ abs(tracks50.beamlineIntersect) |beamlineIntersect|             units                               'F'    [0.000624999636784,264.918731689]
abs(tracks50.hit1phi-tracks50.hit2phi)   abs_tracks50.hit1phi_M_tracks50.hit2phi_ abs(tracks50.hit1phi-tracks50.hit2phi)   |dPhi12|                                 units                                        'F'    [9.89437103271e-06,0.0608730316162]
abs(tracks50.hit2phi-tracks50.hit3phi)   abs_tracks50.hit2phi_M_tracks50.hit3phi_ abs(tracks50.hit2phi-tracks50.hit3phi)   |dPhi23|                                 units                                        'F'    [1.81198120117e-05,0.120913997293]
abs(tracks50.hit1phi-tracks50.hit3phi)   abs_tracks50.hit1phi_M_tracks50.hit3phi_ abs(tracks50.hit1phi-tracks50.hit3phi)   |dPhi13|                                 units                                        'F'    [1.19209289551e-07,0.0608789920807]
tracks50.z_phi12*tracks50.z_phi23   tracks50.z_phi12_T_tracks50.z_phi23 tracks50.z_phi12*tracks50.z_phi23   z phi12*23                          units                                   'F'    [-0.00729546556249,0.000926246808376]
abs(tracks50.zresiduum/tracks50.eta)   abs_tracks50.zresiduum_D_tracks50.eta_ abs(tracks50.zresiduum/tracks50.eta)   |zresiduum/eta|                        units                                      'F'    [0,7568.68798828]
NSpec 0


============================================================================ */

#include <vector>
#include <cmath>
#include <string>
#include <iostream>

#define NN new BDTGNode
   
#ifndef BDTGNode__def
#define BDTGNode__def
   
class BDTGNode {
   
public:
   
   // constructor of an essentially "empty" node floating in space
   BDTGNode ( BDTGNode* left,BDTGNode* right,
                          int selector, double cutValue, bool cutType, 
                          int nodeType, double purity, double response ) :
   fLeft         ( left         ),
   fRight        ( right        ),
   fSelector     ( selector     ),
   fCutValue     ( cutValue     ),
   fCutType      ( cutType      ),
   fNodeType     ( nodeType     ),
   fPurity       ( purity       ),
   fResponse     ( response     ){
   }

   virtual ~BDTGNode();

   // test event if it descends the tree at this node to the right
   virtual bool GoesRight( const std::vector<double>& inputValues ) const;
   BDTGNode* GetRight( void )  {return fRight; };

   // test event if it descends the tree at this node to the left 
   virtual bool GoesLeft ( const std::vector<double>& inputValues ) const;
   BDTGNode* GetLeft( void ) { return fLeft; };   

   // return  S/(S+B) (purity) at this node (from  training)

   double GetPurity( void ) const { return fPurity; } 
   // return the node type
   int    GetNodeType( void ) const { return fNodeType; }
   double GetResponse(void) const {return fResponse;}

private:

   BDTGNode*   fLeft;     // pointer to the left daughter node
   BDTGNode*   fRight;    // pointer to the right daughter node
   int                     fSelector; // index of variable used in node selection (decision tree)   
   double                  fCutValue; // cut value applied on this node to discriminate bkg against sig
   bool                    fCutType;  // true: if event variable > cutValue ==> signal , false otherwise
   int                     fNodeType; // Type of node: -1 == Bkg-leaf, 1 == Signal-leaf, 0 = internal 
   double                  fPurity;   // Purity of node from training
   double                  fResponse; // Regression response value of node
}; 
   
//_______________________________________________________________________
   BDTGNode::~BDTGNode()
{
   if (fLeft  != NULL) delete fLeft;
   if (fRight != NULL) delete fRight;
}; 
   
//_______________________________________________________________________
bool BDTGNode::GoesRight( const std::vector<double>& inputValues ) const
{
   // test event if it descends the tree at this node to the right
   bool result;
     result = (inputValues[fSelector] > fCutValue );
   if (fCutType == true) return result; //the cuts are selecting Signal ;
   else return !result;
}
   
//_______________________________________________________________________
bool BDTGNode::GoesLeft( const std::vector<double>& inputValues ) const
{
   // test event if it descends the tree at this node to the left
   if (!this->GoesRight(inputValues)) return true;
   else return false;
}
   
#endif
   
#ifndef IClassifierReader__def
#define IClassifierReader__def

class IClassifierReader {

 public:

   // constructor
   IClassifierReader() : fStatusIsClean( true ) {}
   virtual ~IClassifierReader() {}

   // return classifier response
   virtual double GetMvaValue( const std::vector<double>& inputValues ) const = 0;

   // returns classifier status
   bool IsStatusClean() const { return fStatusIsClean; }

 protected:

   bool fStatusIsClean;
};

#endif

class ReadBDTG : public IClassifierReader {

 public:

   // constructor
   ReadBDTG( std::vector<std::string>& theInputVars ) 
      : IClassifierReader(),
        fClassName( "ReadBDTG" ),
        fNvars( 9 ),
        fIsNormalised( false )
   {      
      // the training input variables
      const char* inputVars[] = { "abs(tracks50.kappa_123-tracks50.kappa_013)", "tracks50.pT", "abs(tracks50.zresiduum)", "abs(tracks50.beamlineIntersect)", "abs(tracks50.hit1phi-tracks50.hit2phi)", "abs(tracks50.hit2phi-tracks50.hit3phi)", "abs(tracks50.hit1phi-tracks50.hit3phi)", "tracks50.z_phi12*tracks50.z_phi23", "abs(tracks50.zresiduum/tracks50.eta)" };

      // sanity checks
      if (theInputVars.size() <= 0) {
         std::cout << "Problem in class \"" << fClassName << "\": empty input vector" << std::endl;
         fStatusIsClean = false;
      }

      if (theInputVars.size() != fNvars) {
         std::cout << "Problem in class \"" << fClassName << "\": mismatch in number of input values: "
                   << theInputVars.size() << " != " << fNvars << std::endl;
         fStatusIsClean = false;
      }

      // validate input variables
      for (size_t ivar = 0; ivar < theInputVars.size(); ivar++) {
         if (theInputVars[ivar] != inputVars[ivar]) {
            std::cout << "Problem in class \"" << fClassName << "\": mismatch in input variable names" << std::endl
                      << " for variable [" << ivar << "]: " << theInputVars[ivar].c_str() << " != " << inputVars[ivar] << std::endl;
            fStatusIsClean = false;
         }
      }

      // initialize min and max vectors (for normalisation)
      fVmin[0] = 0;
      fVmax[0] = 0;
      fVmin[1] = 0;
      fVmax[1] = 0;
      fVmin[2] = 0;
      fVmax[2] = 0;
      fVmin[3] = 0;
      fVmax[3] = 0;
      fVmin[4] = 0;
      fVmax[4] = 0;
      fVmin[5] = 0;
      fVmax[5] = 0;
      fVmin[6] = 0;
      fVmax[6] = 0;
      fVmin[7] = 0;
      fVmax[7] = 0;
      fVmin[8] = 0;
      fVmax[8] = 0;

      // initialize input variable types
      fType[0] = 'F';
      fType[1] = 'F';
      fType[2] = 'F';
      fType[3] = 'F';
      fType[4] = 'F';
      fType[5] = 'F';
      fType[6] = 'F';
      fType[7] = 'F';
      fType[8] = 'F';

      // initialize constants
      Initialize();

   }

   // destructor
   virtual ~ReadBDTG() {
      Clear(); // method-specific
   }

   // the classifier response
   // "inputValues" is a vector of input values in the same order as the 
   // variables given to the constructor
   double GetMvaValue( const std::vector<double>& inputValues ) const;

 private:

   // method-specific destructor
   void Clear();

   // common member variables
   const char* fClassName;

   const size_t fNvars;
   size_t GetNvar()           const { return fNvars; }
   char   GetType( int ivar ) const { return fType[ivar]; }

   // normalisation of input variables
   const bool fIsNormalised;
   bool IsNormalised() const { return fIsNormalised; }
   double fVmin[9];
   double fVmax[9];
   double NormVariable( double x, double xmin, double xmax ) const {
      // normalise to output range: [-1, 1]
      return 2*(x - xmin)/(xmax - xmin) - 1.0;
   }

   // type of input variable: 'F' or 'I'
   char   fType[9];

   // initialize internal variables
   void Initialize();
   double GetMvaValue__( const std::vector<double>& inputValues ) const;

   // private members (method specific)
   std::vector<BDTGNode*> fForest;       // i.e. root nodes of decision trees
   std::vector<double>                fBoostWeights; // the weights applied in the individual boosts
};

double ReadBDTG::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTGNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTGNode*)current->GetRight();
         else current=(BDTGNode*)current->GetLeft();
      }
      myMVA += current->GetResponse();
   }
   return 2.0/(1.0+exp(-2.0*myMVA))-1.0;
};

void ReadBDTG::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989149,0.160241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823444,0.0563465) , 
0, 0.000137226, 1, 0, 0.898819,0.398819) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00010184,-0.0261801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00175593,-0.0261301) , 
2, 0.380842, 1, 0, 0.000501869,-0.499498) , 
0, 0.00288677, 1, 0, 0.498889,-0.00111135)    );
  // itree = 1
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917797,0.0876701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.569698,0.00422964) , 
0, 0.00219561, 1, 0, 0.896595,0.345389) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00242373,-0.025441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.90808e-05,-0.0255141) , 
0, 0.00783891, 1, 0, 0.000573596,-0.486345) , 
0, 0.00288551, 1, 0, 0.496541,-0.0259623)    );
  // itree = 2
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920717,0.0808161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572323,0.00424533) , 
0, 0.00219347, 1, 0, 0.899184,0.307349) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00188155,-0.0248401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.87034e-05,-0.0248944) , 
0, 0.00783973, 1, 0, 0.000497913,-0.473692) , 
0, 0.00288725, 1, 0, 0.498136,-0.041199)    );
  // itree = 3
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935394,0.0830542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777229,0.025419) , 
2, 0.261897, 1, 0, 0.899837,0.271712) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00124045,-0.0242872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.96961e-05,-0.0243225) , 
0, 0.00784529, 1, 0, 0.000310494,-0.46149) , 
0, 0.00288758, 1, 0, 0.499158,-0.0548805)    );
  // itree = 4
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916683,0.0660817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56053,-0.00014665) , 
0, 0.00219881, 1, 0, 0.896199,0.23633) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 5.15145e-05,-0.0237896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00130111,-0.0237498) , 
2, 0.380827, 1, 0, 0.000352104,-0.449386) , 
0, 0.00288733, 1, 0, 0.498667,-0.0679555)    );
  // itree = 5
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937339,0.0730784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747711,0.0143452) , 
2, 0.332926, 1, 0, 0.910893,0.22361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00210576,-0.0232267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000146607,-0.0232889) , 
0, 0.00784254, 1, 0, 0.000600681,-0.437399) , 
0, 0.00288733, 1, 0, 0.496577,-0.0772463)    );
  // itree = 6
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987263,0.103691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832314,0.0296136) , 
0, 0.000135019, 1, 0, 0.90269,0.188879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 5.45161e-05,-0.0228277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00113988,-0.0227937) , 
7, -0.000266015, 1, 0, 0.000381116,-0.426194) , 
0, 0.00288758, 1, 0, 0.497083,-0.0876093)    );
  // itree = 7
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947337,0.0694298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790176,0.0154398) , 
2, 0.214279, 1, 0, 0.901128,0.16383) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00162488,-0.022343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.022395) , 
0, 0.00784529, 1, 0, 0.000360819,-0.415092) , 
0, 0.00288758, 1, 0, 0.509973,-0.0875648)    );
  // itree = 8
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668074,-0.0123434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909137,0.0459184) , 
5, 0.00715851, 1, 0, 0.896681,0.140029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00131439,-0.0219445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.51953e-05,-0.0219855) , 
0, 0.00949305, 1, 0, 0.000453063,-0.404171) , 
0, 0.00288725, 1, 0, 0.491686,-0.105888)    );
  // itree = 9
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91704,0.0466252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647353,-0.0144522) , 
3, 112.736, 1, 0, 0.900983,0.128682) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0028509,-0.0215066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000294412,-0.0215941) , 
0, 0.00784417, 1, 0, 0.000846419,-0.393235) , 
0, 0.00288725, 1, 0, 0.499262,-0.104244)    );
  // itree = 10
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918156,0.043935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65254,-0.0130283) , 
3, 112.426, 1, 0, 0.901302,0.114534) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00237091,-0.0211635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000202088,-0.0212375) , 
0, 0.00784304, 1, 0, 0.000672561,-0.383155) , 
0, 0.00288758, 1, 0, 0.505354,-0.104267)    );
  // itree = 11
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920522,0.0419033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68141,-0.00954389) , 
2, 0.380867, 1, 0, 0.897926,0.0981783) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00220274,-0.0208251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.020907) , 
4, 0.0202931, 1, 0, 0.000672738,-0.373168) , 
0, 0.00288733, 1, 0, 0.50335,-0.109101)    );
  // itree = 12
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989967,0.090515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829049,0.011883) , 
0, 0.000137226, 1, 0, 0.902354,0.0910671) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000149418,-0.0205819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00127092,-0.0205394) , 
2, 0.380827, 1, 0, 0.000417101,-0.3637) , 
0, 0.00288725, 1, 0, 0.494534,-0.114561)    );
  // itree = 13
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674736,-0.0215563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916733,0.0352148) , 
5, 0.00725428, 1, 0, 0.903918,0.0810056) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 5.17446e-05,-0.0202832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0020224,-0.0202063) , 
2, 0.380843, 1, 0, 0.000514663,-0.354128) , 
0, 0.00288758, 1, 0, 0.50532,-0.110983)    );
  // itree = 14
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949586,0.0509175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787625,-0.00133029) , 
2, 0.214237, 1, 0, 0.903446,0.0708774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0199999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00108688,-0.0199564) , 
6, 0.040584, 1, 0, 0.000343278,-0.345086) , 
0, 0.00288758, 1, 0, 0.497019,-0.11632)    );
  // itree = 15
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930409,0.0369583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690222,-0.0119183) , 
2, 0.380941, 1, 0, 0.907833,0.0662465) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000767093,-0.0196987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0197282) , 
5, 0.0345499, 1, 0, 0.000349923,-0.336094) , 
0, 0.00288725, 1, 0, 0.50129,-0.113998)    );
  // itree = 16
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917866,0.0275893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585913,-0.0175287) , 
0, 0.00219881, 1, 0, 0.898472,0.0499404) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 9.96502e-05,-0.0194678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00113988,-0.0194261) , 
2, 0.380716, 1, 0, 0.000343365,-0.327356) , 
0, 0.00288758, 1, 0, 0.49479,-0.119643)    );
  // itree = 17
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933659,0.0338668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725569,-0.0110709) , 
2, 0.309514, 1, 0, 0.898919,0.0447522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 5.79337e-05,-0.0192354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000886614,-0.0191916) , 
2, 0.333242, 1, 0, 0.000342411,-0.318938) , 
0, 0.00288503, 1, 0, 0.49585,-0.118386)    );
  // itree = 18
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917918,0.0250605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.661084,-0.0240585) , 
3, 112.738, 1, 0, 0.902592,0.0423864) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0189969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000939613,-0.0189578) , 
2, 0.380766, 1, 0, 0.000233913,-0.310654) , 
0, 0.00288758, 1, 0, 0.502266,-0.114238)    );
  // itree = 19
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921566,0.0239586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570739,-0.0209819) , 
0, 0.00219832, 1, 0, 0.901267,0.0360555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 9.93544e-05,-0.0187722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00182558,-0.0186963) , 
2, 0.380851, 1, 0, 0.000497029,-0.302313) , 
0, 0.00288725, 1, 0, 0.498508,-0.115239)    );
  // itree = 20
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991378,0.0826727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827836,-0.00329898) , 
0, 0.000136045, 1, 0, 0.902284,0.0321836) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0185669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00130026,-0.0185102) , 
7, -0.000268085, 1, 0, 0.000387887,-0.294564) , 
0, 0.00288758, 1, 0, 0.500806,-0.113268)    );
  // itree = 21
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674297,-0.0316842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913974,0.018156) , 
5, 0.00709197, 1, 0, 0.902178,0.0275521) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000102359,-0.018363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00216394,-0.0182674) , 
2, 0.380752, 1, 0, 0.00058716,-0.286711) , 
0, 0.00288677, 1, 0, 0.504031,-0.111228)    );
  // itree = 22
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924342,0.0201583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591791,-0.0196535) , 
0, 0.00218517, 1, 0, 0.903186,0.0250798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00194106,-0.0180874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0181774) , 
0, 0.00783875, 1, 0, 0.00043054,-0.279413) , 
0, 0.00288677, 1, 0, 0.502079,-0.110211)    );
  // itree = 23
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955972,0.0397771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815683,-0.00906395) , 
2, 0.166626, 1, 0, 0.903716,0.0226043) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.017997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000377077,-0.0179791) , 
6, 0.0405805, 1, 0, 0.000117274,-0.272467) , 
0, 0.00288758, 1, 0, 0.503657,-0.108035)    );
  // itree = 24
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912537,0.012321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653666,-0.0293803) , 
3, 112.938, 1, 0, 0.896875,0.0127041) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000110304,-0.0178166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00181629,-0.0177331) , 
7, -0.000265323, 1, 0, 0.0006192,-0.264887) , 
0, 0.00288733, 1, 0, 0.498647,-0.110636)    );
  // itree = 25
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990032,0.0758495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822213,-0.00881581) , 
0, 0.000137426, 1, 0, 0.898129,0.0116771) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 5.1798e-05,-0.0176546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00159995,-0.0175767) , 
2, 0.380843, 1, 0, 0.000430428,-0.258196) , 
0, 0.00288758, 1, 0, 0.502198,-0.107351)    );
  // itree = 26
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922993,0.0138317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59271,-0.0168313) , 
0, 0.00219561, 1, 0, 0.90415,0.0146312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000111405,-0.0174936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00128364,-0.0174313) , 
6, 0.0406083, 1, 0, 0.000466149,-0.251454) , 
0, 0.00288758, 1, 0, 0.501257,-0.103999)    );
  // itree = 27
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924549,0.0136741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684502,-0.0201956) , 
2, 0.380859, 1, 0, 0.902761,0.0105843) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00140108,-0.017274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0173472) , 
0, 0.00948687, 1, 0, 0.000424148,-0.244967) , 
0, 0.00288551, 1, 0, 0.50038,-0.103374)    );
  // itree = 28
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986722,0.0651766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822322,-0.00979157) , 
0, 0.000136392, 1, 0, 0.896584,0.00355445) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 5.11994e-05,-0.0171998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00164001,-0.0171132) , 
2, 0.380842, 1, 0, 0.000429201,-0.238604) , 
0, 0.00288733, 1, 0, 0.498707,-0.10396)    );
  // itree = 29
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915632,0.00887636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678344,-0.0249642) , 
3, 112.426, 1, 0, 0.902276,0.0071737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0170644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00109354,-0.0170019) , 
6, 0.0377049, 1, 0, 0.000382276,-0.232459) , 
0, 0.00288733, 1, 0, 0.498474,-0.100116)    );
  // itree = 30
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70587,-0.0322221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91316,0.00833516) , 
5, 0.00734678, 1, 0, 0.902537,0.00681237) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00138325,-0.0168535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.97946e-05,-0.0169274) , 
0, 0.00784038, 1, 0, 0.000347947,-0.226462) , 
0, 0.00288758, 1, 0, 0.500299,-0.0971923)    );
  // itree = 31
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936005,0.015739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744856,-0.0170233) , 
2, 0.285645, 1, 0, 0.898662,0.00237425) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000102568,-0.0167967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00200446,-0.0166838) , 
2, 0.380843, 1, 0, 0.000549322,-0.220382) , 
0, 0.00288733, 1, 0, 0.502078,-0.0959892)    );
  // itree = 32
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679466,-0.0329938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921741,0.0116426) , 
5, 0.00735498, 1, 0, 0.908623,0.00973744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0166804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00116379,-0.0166122) , 
2, 0.380669, 1, 0, 0.000272254,-0.214941) , 
0, 0.00288733, 1, 0, 0.502164,-0.0907994)    );
  // itree = 33
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920374,0.00668021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550729,-0.0197833) , 
0, 0.00219561, 1, 0, 0.89704,-0.000329751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00100547,-0.016499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000117304,-0.0165563) , 
3, 37.867, 1, 0, 0.000423065,-0.209217) , 
0, 0.00288758, 1, 0, 0.49719,-0.0934838)    );
  // itree = 34
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954173,0.02672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802814,-0.0157771) , 
2, 0.166662, 1, 0, 0.897301,-0.00174578) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00254052,-0.0162866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000101326,-0.0164429) , 
0, 0.00783973, 1, 0, 0.000633689,-0.203576) , 
0, 0.00288725, 1, 0, 0.503595,-0.0903648)    );
  // itree = 35
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924352,0.00782571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559148,-0.0171991) , 
0, 0.00219881, 1, 0, 0.901951,0.00230339) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00123609,-0.0162638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.84132e-05,-0.0163342) , 
0, 0.00784038, 1, 0, 0.000346347,-0.19858) , 
0, 0.00288758, 1, 0, 0.499022,-0.0874718)    );
  // itree = 36
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959211,0.0294255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81627,-0.0145076) , 
2, 0.142853, 1, 0, 0.899185,-0.00198681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00141062,-0.0161412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.60163e-05,-0.0162335) , 
4, 0.0202992, 1, 0, 0.000467838,-0.193314) , 
0, 0.00288758, 1, 0, 0.501159,-0.0867222)    );
  // itree = 37
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867183,-0.0198384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919908,0.0140832) , 
5, 0.0173887, 1, 0, 0.899312,-0.00200169) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 4.73975e-05,-0.0161335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00158684,-0.0160279) , 
2, 0.404578, 1, 0, 0.000373555,-0.188397) , 
0, 0.00288758, 1, 0, 0.492422,-0.0863707)    );
  // itree = 38
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912789,0.00240986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659414,-0.0248319) , 
3, 112.674, 1, 0, 0.897148,-0.00515721) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 5.78225e-05,-0.0160363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000889794,-0.0159772) , 
6, 0.0405976, 1, 0, 0.000317949,-0.183562) , 
0, 0.00288677, 1, 0, 0.503809,-0.0834033)    );
  // itree = 39
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649662,-0.0304954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912387,0.00391004) , 
5, 0.00704275, 1, 0, 0.899056,-0.00252239) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00253137,-0.0157624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000148828,-0.0159354) , 
0, 0.00784038, 1, 0, 0.000661785,-0.178456) , 
0, 0.00288758, 1, 0, 0.502359,-0.080208)    );
  // itree = 40
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917738,0.00604052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668222,-0.033564) , 
4, 0.02942, 1, 0, 0.90515,0.00202288) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00114235,-0.0157708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000103377,-0.0158508) , 
3, 25.2776, 1, 0, 0.000353297,-0.174146) , 
0, 0.00288551, 1, 0, 0.504988,-0.0758909)    );
  // itree = 41
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991828,0.0706735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828249,-0.0107736) , 
0, 0.000137426, 1, 0, 0.902867,-0.000613208) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00151545,-0.0156544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0157716) , 
4, 0.0203044, 1, 0, 0.000469905,-0.169508) , 
0, 0.00288664, 1, 0, 0.502722,-0.0755055)    );
  // itree = 42
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991862,0.0683134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812472,-0.0133898) , 
0, 0.000137395, 1, 0, 0.894259,-0.00928776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 4.97125e-05,-0.0156844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00157486,-0.0155648) , 
2, 0.380865, 1, 0, 0.000415636,-0.165169) , 
0, 0.00288758, 1, 0, 0.491069,-0.0796019)    );
  // itree = 43
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863832,-0.0201766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924982,0.0133249) , 
5, 0.0158826, 1, 0, 0.905359,-0.000203415) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 5.4457e-05,-0.0156042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00218768,-0.015428) , 
6, 0.040597, 1, 0, 0.000688761,-0.160615) , 
0, 0.00288725, 1, 0, 0.499058,-0.0722467)    );
  // itree = 44
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920422,0.00569065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666787,-0.0251099) , 
3, 112.937, 1, 0, 0.905386,0.000519228) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.015531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00211486,-0.0153548) , 
2, 0.380851, 1, 0, 0.000509177,-0.156627) , 
0, 0.00288733, 1, 0, 0.50329,-0.069311)    );
  // itree = 45
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953352,0.019175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809871,-0.0141679) , 
2, 0.166463, 1, 0, 0.900821,-0.00497353) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00137066,-0.0153429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0154564) , 
0, 0.00785439, 1, 0, 0.000308902,-0.152775) , 
0, 0.00288733, 1, 0, 0.500296,-0.070712)    );
  // itree = 46
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899582,-0.00643887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953219,0.0659652) , 
7, 0.000835047, 1, 0, 0.903141,-0.00329154) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000665353,-0.0153267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.12691e-05,-0.0153812) , 
3, 25.2755, 1, 0, 0.000195949,-0.148928) , 
0, 0.00288733, 1, 0, 0.503085,-0.0678167)    );
  // itree = 47
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674507,-0.0246237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919128,0.0051463) , 
5, 0.00709863, 1, 0, 0.907488,0.00118107) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000993857,-0.0152259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0153156) , 
5, 0.0345006, 1, 0, 0.000442526,-0.144826) , 
0, 0.00288758, 1, 0, 0.489426,-0.0661146)    );
  // itree = 48
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922662,0.00242107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558792,-0.017395) , 
0, 0.00219881, 1, 0, 0.900538,-0.00547757) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000103698,-0.0152386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00114857,-0.0151447) , 
2, 0.38082, 1, 0, 0.000354591,-0.141163) , 
0, 0.00288733, 1, 0, 0.503543,-0.0653171)    );
  // itree = 49
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921355,0.00171563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527586,-0.019649) , 
0, 0.00219881, 1, 0, 0.896611,-0.00844191) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.015184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000986445,-0.0150904) , 
6, 0.0377049, 1, 0, 0.000345025,-0.137506) , 
0, 0.00288758, 1, 0, 0.497039,-0.0659813)    );
  // itree = 50
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924409,0.00684219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662309,-0.0225598) , 
3, 112.578, 1, 0, 0.908396,0.00194609) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0151247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000216152,-0.0151) , 
4, 0.0174011, 1, 0, 0.000157916,-0.134137) , 
0, 0.00288608, 1, 0, 0.508343,-0.0579947)    );
  // itree = 51
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689078,-0.0238193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91708,0.00302712) , 
5, 0.00731416, 1, 0, 0.904898,-0.00231158) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00338364,-0.0147204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.99432e-05,-0.0150555) , 
0, 0.00783987, 1, 0, 0.000780092,-0.13004) , 
0, 0.00288733, 1, 0, 0.502531,-0.0591558)    );
  // itree = 52
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992725,0.0669123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829934,-0.0102895) , 
0, 0.000137226, 1, 0, 0.903918,-0.00497664) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0028012,-0.0147157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.0126e-05,-0.0149969) , 
0, 0.00784069, 1, 0, 0.00066247,-0.126791) , 
0, 0.00288551, 1, 0, 0.502825,-0.0590685)    );
  // itree = 53
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963665,0.0277874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.841007,-0.014814) , 
2, 0.0952167, 1, 0, 0.895953,-0.0112348) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 5.17802e-05,-0.0149408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00150744,-0.014789) , 
2, 0.380843, 1, 0, 0.000395526,-0.123767) , 
0, 0.00288733, 1, 0, 0.502198,-0.0607127)    );
  // itree = 54
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915246,-0.00031638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666456,-0.0182714) , 
2, 0.40475, 1, 0, 0.896979,-0.00867887) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 4.95979e-05,-0.014903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00217113,-0.0146572) , 
2, 0.380716, 1, 0, 0.000535377,-0.120557) , 
0, 0.00288503, 1, 0, 0.499315,-0.0583084)    );
  // itree = 55
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892816,-0.0110442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938248,0.0319056) , 
5, 0.0252113, 1, 0, 0.902852,-0.0045431) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00126994,-0.0146981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0148391) , 
5, 0.0345598, 1, 0, 0.000564144,-0.117278) , 
0, 0.00288758, 1, 0, 0.494191,-0.0556026)    );
  // itree = 56
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957275,0.0191138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808363,-0.0151294) , 
2, 0.14277, 1, 0, 0.893759,-0.0116484) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00010028,-0.0147763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00221034,-0.0145371) , 
2, 0.380525, 1, 0, 0.000580821,-0.114215) , 
0, 0.00288733, 1, 0, 0.496521,-0.0572645)    );
  // itree = 57
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921916,0.00405546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771799,-0.0236844) , 
3, 87.8404, 1, 0, 0.902178,-0.00599841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000988191,-0.0146248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.31317e-05,-0.0147331) , 
4, 0.0174149, 1, 0, 0.000308823,-0.111541) , 
0, 0.00288725, 1, 0, 0.50081,-0.0529693)    );
  // itree = 58
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873432,-0.0171012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927939,0.0152441) , 
5, 0.0180755, 1, 0, 0.904888,-0.00228893) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00222289,-0.0144266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.78948e-05,-0.0146848) , 
0, 0.00784806, 1, 0, 0.000523808,-0.108429) , 
0, 0.00288733, 1, 0, 0.49502,-0.0503927)    );
  // itree = 59
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93624,0.00749771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725837,-0.0138385) , 
2, 0.309514, 1, 0, 0.900746,-0.00415313) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00235505,-0.0143532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.36808e-05,-0.0146386) , 
4, 0.0174314, 1, 0, 0.000668697,-0.105481) , 
0, 0.00288758, 1, 0, 0.505278,-0.0486736)    );
  // itree = 60
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692408,-0.0232532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910343,0.000525514) , 
5, 0.00705935, 1, 0, 0.899991,-0.00485737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00200446,-0.0143505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145999) , 
0, 0.00783973, 1, 0, 0.000435862,-0.102984) , 
0, 0.00288725, 1, 0, 0.505151,-0.0479277)    );
  // itree = 61
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928979,0.00611662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568491,-0.0141925) , 
0, 0.00219832, 1, 0, 0.907568,0.00148258) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000108672,-0.0145434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00110639,-0.0144139) , 
6, 0.0405773, 1, 0, 0.000414493,-0.100344) , 
0, 0.00288758, 1, 0, 0.493486,-0.0449975)    );
  // itree = 62
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903612,-0.00486263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961261,0.0683471) , 
7, 0.000843183, 1, 0, 0.907017,-0.0015965) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000494366,-0.0144484) , 
5, 0.0230086, 1, 0, 0.0003558,-0.0977964) , 
0, 0.00288758, 1, 0, 0.506131,-0.0441319)    );
  // itree = 63
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913108,-0.00100764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664527,-0.0221202) , 
3, 112.732, 1, 0, 0.897775,-0.00918826) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000101531,-0.0144602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00199781,-0.0142022) , 
2, 0.380891, 1, 0, 0.000544641,-0.0950653) , 
0, 0.00288758, 1, 0, 0.498655,-0.0473894)    );
  // itree = 64
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913176,-0.00116841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634288,-0.0217704) , 
3, 112.673, 1, 0, 0.896269,-0.0102761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000156291,-0.0144129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00176906,-0.0141892) , 
2, 0.380752, 1, 0, 0.000550901,-0.0926235) , 
0, 0.00288551, 1, 0, 0.504155,-0.0463249)    );
  // itree = 65
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910256,-0.00033373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770972,-0.0262056) , 
4, 0.0281136, 1, 0, 0.895054,-0.00991967) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 5.55823e-05,-0.0143895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00185473,-0.0141287) , 
6, 0.0405835, 1, 0, 0.000613526,-0.0901532) , 
0, 0.00288758, 1, 0, 0.494356,-0.0458633)    );
  // itree = 66
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970931,0.0359165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856591,-0.0101127) , 
2, 0.0714125, 1, 0, 0.899394,-0.00535285) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00010215,-0.0143649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00196622,-0.0140714) , 
2, 0.380586, 1, 0, 0.000572724,-0.0879956) , 
0, 0.00288514, 1, 0, 0.497151,-0.0423374)    );
  // itree = 67
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922385,0.00641197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644695,-0.0374453) , 
4, 0.02942, 1, 0, 0.908121,0.000500601) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00179648,-0.0140552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143241) , 
0, 0.00784239, 1, 0, 0.000388788,-0.085758) , 
0, 0.00288725, 1, 0, 0.503683,-0.0379317)    );
  // itree = 68
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659772,-0.0209939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914163,0.00123324) , 
5, 0.00710017, 1, 0, 0.901884,-0.00424951) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0012831,-0.0140884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000155645,-0.0142662) , 
3, 25.253, 1, 0, 0.000431212,-0.0834946) , 
0, 0.00288608, 1, 0, 0.501576,-0.0394398)    );
  // itree = 69
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.855182,-0.0185479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925172,0.0113126) , 
5, 0.0162328, 1, 0, 0.90192,-0.0037641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00115248,-0.0140724) , 
6, 0.040597, 1, 0, 0.000347057,-0.0814244) , 
0, 0.00288733, 1, 0, 0.499392,-0.0384374)    );
  // itree = 70
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923336,0.0043279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670358,-0.0159314) , 
2, 0.404515, 1, 0, 0.904249,-0.00128904) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000878672,-0.0140809) , 
6, 0.0405811, 1, 0, 0.000278657,-0.0793916) , 
0, 0.00288758, 1, 0, 0.506916,-0.0356184)    );
  // itree = 71
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91432,0.000199266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714857,-0.0258142) , 
4, 0.0290246, 1, 0, 0.90035,-0.00751001) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00211715,-0.0138383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141914) , 
0, 0.00784529, 1, 0, 0.000467838,-0.0771384) , 
0, 0.00288758, 1, 0, 0.503932,-0.0381829)    );
  // itree = 72
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918304,0.00248107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660393,-0.029468) , 
4, 0.0294261, 1, 0, 0.904557,-0.00413338) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00127711,-0.0139413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.73165e-05,-0.0141514) , 
4, 0.0202992, 1, 0, 0.000435175,-0.0751805) , 
0, 0.00288438, 1, 0, 0.507451,-0.0353385)    );
  // itree = 73
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750893,-0.0191099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915797,0.00218761) , 
5, 0.00881853, 1, 0, 0.903136,-0.00335611) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00228457,-0.013727) , 
2, 0.380851, 1, 0, 0.000546334,-0.0731211) , 
0, 0.00288725, 1, 0, 0.503704,-0.03423)    );
  // itree = 74
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916807,0.00110252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650385,-0.0180175) , 
3, 112.673, 1, 0, 0.900664,-0.00505023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00201563,-0.013739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.86214e-05,-0.0140933) , 
0, 0.00783849, 1, 0, 0.000490186,-0.0712863) , 
0, 0.00288664, 1, 0, 0.494652,-0.0349252)    );
  // itree = 75
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915025,0.00129566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529659,-0.0248099) , 
3, 125.259, 1, 0, 0.897729,-0.00653148) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000546674,-0.0139713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140781) , 
6, 0.0434814, 1, 0, 0.000395734,-0.0695256) , 
0, 0.00288608, 1, 0, 0.504473,-0.0341386)    );
  // itree = 76
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917545,0.000486326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64037,-0.0166498) , 
3, 112.732, 1, 0, 0.900675,-0.00589714) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000326771,-0.013984) , 
4, 0.0174016, 1, 0, 0.000235375,-0.0678891) , 
0, 0.00288733, 1, 0, 0.502452,-0.0333133)    );
  // itree = 77
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904222,-0.00418574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955763,0.065409) , 
7, 0.000835951, 1, 0, 0.907587,9.63473e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00170885,-0.013687) , 
2, 0.380669, 1, 0, 0.00039563,-0.0659732) , 
0, 0.00288725, 1, 0, 0.508509,-0.028968)    );
  // itree = 78
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86743,-0.0158907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935758,0.0199897) , 
5, 0.0198834, 1, 0, 0.900988,-0.00428314) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00109744,-0.0137745) , 
6, 0.0405909, 1, 0, 0.000348753,-0.0643175) , 
0, 0.00288758, 1, 0, 0.49879,-0.0310926)    );
  // itree = 79
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945767,0.0173988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00329329,-0.016275) , 
0, 0.000962442, 1, 0, 0.161393,-0.0612639) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4662,-0.028258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846011,0.00294651) , 
5, 0.0133158, 1, 0, 0.81707,-0.00384514) , 
7, 0.000145067, 1, 0, 0.497146,-0.0318614)    );
  // itree = 80
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915147,0.00172107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631602,-0.0316001) , 
4, 0.029409, 1, 0, 0.899931,-0.00676488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00146238,-0.0136299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.19609e-05,-0.0139332) , 
5, 0.0288085, 1, 0, 0.00058337,-0.0606829) , 
0, 0.00288758, 1, 0, 0.503181,-0.030551)    );
  // itree = 81
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899322,-0.00563101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953413,0.0595177) , 
7, 0.000834459, 1, 0, 0.902701,-0.00408973) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000511758,-0.0138064) , 
4, 0.0173966, 1, 0, 0.000383542,-0.0593185) , 
0, 0.00288733, 1, 0, 0.497107,-0.0289152)    );
  // itree = 82
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923904,0.00213797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602263,-0.0144143) , 
0, 0.00218382, 1, 0, 0.904621,-0.00346227) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000252258,-0.0138407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140277) , 
6, 0.0463771, 1, 0, 0.000195238,-0.0581307) , 
0, 0.00288514, 1, 0, 0.502686,-0.0277574)    );
  // itree = 83
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852626,-0.0142907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931318,0.0121514) , 
5, 0.0152576, 1, 0, 0.908397,0.00124941) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000103342,-0.0138527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00182357,-0.0134583) , 
2, 0.380851, 1, 0, 0.000512106,-0.0561411) , 
0, 0.00288733, 1, 0, 0.509018,-0.0239967)    );
  // itree = 84
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920982,0.00475548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795228,-0.0193367) , 
4, 0.0277484, 1, 0, 0.905457,-0.00103587) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000678082,-0.0136914) , 
4, 0.017396, 1, 0, 0.000496524,-0.0547081) , 
0, 0.00288608, 1, 0, 0.50031,-0.0250647)    );
  // itree = 85
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939184,0.010097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72936,-0.0588277) , 
4, 0.028111, 1, 0, 0.925601,-0.00011142) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00121491,-0.0165508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.745039,0.022564) , 
7, 0.000534736, 1, 0, 0.112822,-0.051221) , 
0, 0.00192442, 1, 0, 0.502586,-0.0267117)    );
  // itree = 86
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918229,0.00225515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000818006,-0.0147751) , 
0, 0.00268354, 1, 0, 0.643257,-0.0150405) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000268442,-0.0137393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000179084,-0.0211118) , 
6, 0.0318461, 1, 0, 0.00023016,-0.0697522) , 
4, 0.0318825, 1, 0, 0.498499,-0.0273572)    );
  // itree = 87
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93775,0.00762428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723287,-0.0514962) , 
4, 0.028136, 1, 0, 0.924471,-0.00235744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000761627,-0.0162936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767486,0.0167538) , 
7, 0.000535427, 1, 0, 0.119432,-0.0481134) , 
0, 0.00192488, 1, 0, 0.507807,-0.0260394)    );
  // itree = 88
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942431,0.0111704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727018,-0.0557969) , 
4, 0.0280531, 1, 0, 0.928283,0.000715208) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000722046,-0.016462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74993,0.0170609) , 
7, 0.000535657, 1, 0, 0.112597,-0.0473481) , 
0, 0.00192505, 1, 0, 0.49846,-0.0246116)    );
  // itree = 89
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945526,0.0141856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826216,-0.0470111) , 
4, 0.0252596, 1, 0, 0.929216,0.000289192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000879671,-0.016058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760238,0.0141874) , 
7, 0.000535657, 1, 0, 0.11636,-0.0449165) , 
0, 0.00192451, 1, 0, 0.507716,-0.0231518)    );
  // itree = 90
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937989,0.00568451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706922,-0.0455754) , 
4, 0.0280842, 1, 0, 0.922825,-0.00549347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000538796,-0.0165536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757759,0.0164319) , 
7, 0.000538844, 1, 0, 0.116237,-0.0448195) , 
0, 0.00192505, 1, 0, 0.49837,-0.0261882)    );
  // itree = 91
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939892,0.0079212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800237,-0.043872) , 
4, 0.026245, 1, 0, 0.92468,-0.004404) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000848247,-0.0168556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749016,0.00987027) , 
7, 0.000535657, 1, 0, 0.109944,-0.048311) , 
0, 0.00192488, 1, 0, 0.490063,-0.027826)    );
  // itree = 92
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977058,0.0371374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147194,-0.0144445) , 
0, 0.00192442, 1, 0, 0.718236,0.00297389) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.321681,-0.0240994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41227,-0.00987954) , 
5, 0.0172953, 1, 0, 0.392343,-0.0442263) , 
2, 0.0952352, 1, 0, 0.50203,-0.0283399)    );
  // itree = 93
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921043,0.00189919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000559413,-0.0148943) , 
0, 0.00267622, 1, 0, 0.633286,-0.0133388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000282011,-0.0135806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0209925) , 
6, 0.0319136, 1, 0, 0.000158123,-0.0593391) , 
4, 0.0318962, 1, 0, 0.496148,-0.0233026)    );
  // itree = 94
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939925,0.00466779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.755194,-0.0328099) , 
4, 0.0278692, 1, 0, 0.927224,-0.00374614) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000670799,-0.0167386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727916,0.0123047) , 
7, 0.000534736, 1, 0, 0.116116,-0.0419179) , 
0, 0.00192505, 1, 0, 0.506872,-0.0235284)    );
  // itree = 95
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583299,-0.0114283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889966,0.0165063) , 
7, 0.000570037, 1, 0, 0.646277,-0.0145352) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0216378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000130404,-0.0135881) , 
0, 0.0144958, 1, 0, 7.53125e-05,-0.0585789) , 
4, 0.0318873, 1, 0, 0.498916,-0.024579)    );
  // itree = 96
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976716,0.0349484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15784,-0.0161343) , 
0, 0.00192442, 1, 0, 0.747911,0.00199406) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0856921,-0.0278013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444399,-0.0101356) , 
5, 0.011519, 1, 0, 0.408305,-0.036306) , 
2, 0.0714264, 1, 0, 0.501843,-0.025757)    );
  // itree = 97
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985539,0.0546774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16735,-0.0150029) , 
0, 0.00191314, 1, 0, 0.779592,0.0106071) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.214584,-0.0263354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466158,-0.00877488) , 
5, 0.0113163, 1, 0, 0.439681,-0.030346) , 
2, 0.0476016, 1, 0, 0.508763,-0.0220229)    );
  // itree = 98
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961653,0.00911484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158559,-0.0137194) , 
0, 0.00192442, 1, 0, 0.671654,-0.0094961) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.160223,-0.0240979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.367644,-0.00754913) , 
5, 0.0172454, 1, 0, 0.326619,-0.0395854) , 
2, 0.166626, 1, 0, 0.497535,-0.0246804)    );
  // itree = 99
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613737,0.00579131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0510312,-0.0162885) , 
2, 0.0476045, 1, 0, 0.161708,-0.0365058) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93611,-0.0230636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708853,0.00598551) , 
0, 0.00103445, 1, 0, 0.812417,-0.00232693) , 
7, 0.000143226, 1, 0, 0.496277,-0.0189324)    );
  // itree = 100
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944202,0.00876503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736782,-0.0324819) , 
4, 0.0281399, 1, 0, 0.931349,0.000976266) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000783134,-0.0168193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754954,0.0211609) , 
7, 0.000535657, 1, 0, 0.114857,-0.0342873) , 
0, 0.00192505, 1, 0, 0.503027,-0.0175226)    );
  // itree = 101
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946906,0.0124234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838836,-0.0371196) , 
4, 0.0243937, 1, 0, 0.928421,-0.00225535) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000941326,-0.016556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754793,0.0145328) , 
7, 0.000538844, 1, 0, 0.115064,-0.0357354) , 
0, 0.00192484, 1, 0, 0.503407,-0.0197501)    );
  // itree = 102
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945593,0.00891761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787919,-0.0337547) , 
4, 0.0262382, 1, 0, 0.928064,-0.00303621) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000954175,-0.0161423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750096,0.0137884) , 
7, 0.000538844, 1, 0, 0.113843,-0.0328439) , 
0, 0.00192505, 1, 0, 0.498269,-0.0187705)    );
  // itree = 103
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944068,0.00700307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743537,-0.0283477) , 
4, 0.028136, 1, 0, 0.931064,-3.32698e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000906625,-0.0166976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758494,0.0142457) , 
7, 0.000534736, 1, 0, 0.116398,-0.0335319) , 
0, 0.00192505, 1, 0, 0.506791,-0.0174792)    );
  // itree = 104
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991264,0.058373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856617,-0.012395) , 
0, 9.16609e-05, 1, 0, 0.927563,-0.00436479) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00207603,-0.0204105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169066,-0.00687123) , 
4, 0.0231914, 1, 0, 0.112248,-0.0346383) , 
0, 0.00192488, 1, 0, 0.49384,-0.0204694)    );
  // itree = 105
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782612,-0.00338339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0949648,-0.0273565) , 
2, 0.214237, 1, 0, 0.609013,-0.0378596) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736721,0.00280873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000129563,-0.0158759) , 
5, 0.0320988, 1, 0, 0.455444,-0.0120053) , 
5, 0.0172953, 1, 0, 0.502412,-0.0199127)    );
  // itree = 106
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945164,0.00899355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829647,-0.0340097) , 
4, 0.0244112, 1, 0, 0.924844,-0.00607229) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00123421,-0.0218802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156626,-0.0085093) , 
5, 0.0230519, 1, 0, 0.115181,-0.0357814) , 
0, 0.00192488, 1, 0, 0.499664,-0.0216735)    );
  // itree = 107
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673151,-0.00321679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.22366e-05,-0.0176322) , 
4, 0.0318917, 1, 0, 0.536012,-0.0132052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0624064,-0.020104) , 
3, 151.044, 1, 0, 0.500887,-0.0176336)    );
  // itree = 108
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.259986,-0.0203439) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653556,-0.00418323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0171898) , 
4, 0.0318954, 1, 0, 0.512013,-0.0150817) , 
5, 0.00577507, 1, 0, 0.499651,-0.0181117)    );
  // itree = 109
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533863,-0.00515627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0255911,-0.0174078) , 
2, 0.0714125, 1, 0, 0.162684,-0.0324103) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.377187,-0.0294557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851015,0.00154908) , 
5, 0.0128977, 1, 0, 0.817852,-0.00466542) , 
7, 0.000144607, 1, 0, 0.501139,-0.0180775)    );
  // itree = 110
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869702,0.0249927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649252,-0.0180186) , 
4, 0.0172641, 1, 0, 0.762996,0.000864677) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0997667,-0.0254913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440879,-0.00804568) , 
5, 0.0112374, 1, 0, 0.41018,-0.0248095) , 
2, 0.0714264, 1, 0, 0.506507,-0.0177999)    );
  // itree = 111
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.241831,-0.0214278) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657059,-0.00381924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000248924,-0.0172484) , 
4, 0.0318906, 1, 0, 0.512184,-0.0144049) , 
5, 0.0057652, 1, 0, 0.498526,-0.0177181)    );
  // itree = 112
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663649,-0.00556523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0181358) , 
4, 0.0318836, 1, 0, 0.533914,-0.0162006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.056183,-0.0219015) , 
3, 151.138, 1, 0, 0.495534,-0.0207796)    );
  // itree = 113
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.459803,-0.010395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852271,0.00742306) , 
7, 0.000543647, 1, 0, 0.536566,-0.0118721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.061459,-0.0184685) , 
3, 151.383, 1, 0, 0.499873,-0.015665)    );
  // itree = 114
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917437,0.000757886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00111789,-0.015303) , 
0, 0.00268354, 1, 0, 0.643336,-0.00977322) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0203804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000129954,-0.0133392) , 
0, 0.0144408, 1, 0, 7.53878e-05,-0.0364403) , 
4, 0.0318825, 1, 0, 0.496528,-0.0158593)    );
  // itree = 115
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594109,0.0066279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.047633,-0.016688) , 
2, 0.0714264, 1, 0, 0.196996,-0.0248885) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928831,-0.0223083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72891,0.0094575) , 
0, 0.00110113, 1, 0, 0.818965,0.000837872) , 
7, 0.00017957, 1, 0, 0.501393,-0.0122978)    );
  // itree = 116
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.182983,-0.0135775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831511,5.11095e-05) , 
7, 0.000143227, 1, 0, 0.534491,-0.0116893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0506619,-0.0187022) , 
3, 151.161, 1, 0, 0.498306,-0.015319)    );
  // itree = 117
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993603,0.0648049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858958,-0.00693318) , 
0, 9.15976e-05, 1, 0, 0.930163,0.00339363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00102718,-0.016671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744078,0.0139199) , 
7, 0.000535427, 1, 0, 0.119986,-0.0235414) , 
0, 0.00192505, 1, 0, 0.506333,-0.010697)    );
  // itree = 118
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683464,-0.00155693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000183334,-0.0166243) , 
4, 0.0318825, 1, 0, 0.543489,-0.00878847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0557,-0.0182471) , 
3, 151.382, 1, 0, 0.505432,-0.0121573)    );
  // itree = 119
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623915,-0.0060542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914387,0.0296793) , 
7, 0.000747214, 1, 0, 0.6498,-0.00500947) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0202879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133629) , 
4, 0.0443042, 1, 0, 0,-0.0342147) , 
4, 0.0318873, 1, 0, 0.505866,-0.0114785)    );
  // itree = 120
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678382,-0.00259629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.96031e-05,-0.0170067) , 
4, 0.0318906, 1, 0, 0.537092,-0.00997341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0542215,-0.0173807) , 
3, 151.178, 1, 0, 0.499253,-0.0132055)    );
  // itree = 121
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94102,0.00697526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.786918,-0.0273531) , 
4, 0.026245, 1, 0, 0.924678,-0.00229144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00218268,-0.0202255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173549,-0.00591911) , 
4, 0.0231792, 1, 0, 0.116508,-0.0264346) , 
0, 0.00192442, 1, 0, 0.499834,-0.0149832)    );
  // itree = 122
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.223684,-0.0202034) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931229,-0.00021449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.12322,-0.0113476) , 
0, 0.00192488, 1, 0, 0.515426,-0.0118981) , 
5, 0.00578211, 1, 0, 0.500637,-0.0143526)    );
  // itree = 123
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689691,0.0216611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0925405,-0.0163931) , 
2, 0.0238042, 1, 0, 0.166348,-0.0235332) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819297,0.00170529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940536,0.0562147) , 
7, 0.000851687, 1, 0, 0.826148,0.00780775) , 
7, 0.000143227, 1, 0, 0.508432,-0.00728397)    );
  // itree = 124
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939313,0.0056039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723719,-0.0225713) , 
4, 0.0280699, 1, 0, 0.924895,-0.000878596) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000880874,-0.0223603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160042,-0.00543416) , 
5, 0.0229833, 1, 0, 0.118252,-0.0232361) , 
0, 0.00192484, 1, 0, 0.503473,-0.012559)    );
  // itree = 125
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980328,0.0325392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169366,-0.0141182) , 
0, 0.00191314, 1, 0, 0.757774,0.00585388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.357075,-0.0201973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417873,-0.00221255) , 
5, 0.0172657, 1, 0, 0.403857,-0.0161161) , 
2, 0.0714264, 1, 0, 0.499604,-0.0101724)    );
  // itree = 126
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.788301,0.00165112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00829288,-0.0213046) , 
5, 0.0305469, 1, 0, 0.638731,-0.00600637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0212782) , 
6, 0.0318831, 1, 0, 0,-0.0299337) , 
4, 0.0318825, 1, 0, 0.49295,-0.0114674)    );
  // itree = 127
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947486,0.0122382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824296,-0.024471) , 
4, 0.0243584, 1, 0, 0.925136,-0.000645296) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00237594,-0.0208154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169579,-0.00325822) , 
4, 0.0231899, 1, 0, 0.113813,-0.0216373) , 
0, 0.00192505, 1, 0, 0.499832,-0.0116495)    );
  // itree = 128
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6753,-0.00340219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00017771,-0.0178085) , 
4, 0.0318836, 1, 0, 0.534448,-0.0104907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0547304,-0.0183049) , 
3, 151.37, 1, 0, 0.49894,-0.0132576)    );
  // itree = 129
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.261458,-0.0184325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649647,-0.00325413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0171626) , 
4, 0.0318906, 1, 0, 0.509464,-0.0100945) , 
5, 0.0058408, 1, 0, 0.497353,-0.012498)    );
  // itree = 130
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789628,0.00208128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0083576,-0.0190503) , 
5, 0.0305358, 1, 0, 0.644195,-0.00388631) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000177606,-0.0205803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133012) , 
4, 0.0443183, 1, 0, 8.08069e-05,-0.0278188) , 
4, 0.0318954, 1, 0, 0.506792,-0.00899161)    );
  // itree = 131
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.497414,-0.00938265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868971,0.00909194) , 
7, 0.000378211, 1, 0, 0.643204,-0.0033008) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000180803,-0.0185709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132973) , 
4, 0.0442976, 1, 0, 7.93177e-05,-0.0245235) , 
4, 0.0318846, 1, 0, 0.50261,-0.00794031)    );
  // itree = 132
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935051,0.00245711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131083,-0.00932847) , 
0, 0.00192442, 1, 0, 0.541189,-0.00629551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0505322,-0.0196306) , 
3, 151.37, 1, 0, 0.503251,-0.00994349)    );
  // itree = 133
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659538,-0.00402351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0178828) , 
4, 0.0289715, 1, 0, 0.497334,-0.0115748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619319,-0.00356564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600766,0.0260021) , 
2, 0.214081, 1, 0, 0.609964,0.0289711) , 
6, 0.0579807, 1, 0, 0.503558,-0.00933416)    );
  // itree = 134
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585744,0.00700224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0341791,-0.0170256) , 
2, 0.0713545, 1, 0, 0.178291,-0.0179513) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703688,-0.0167564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836632,0.00569225) , 
5, 0.01557, 1, 0, 0.814991,0.00225571) , 
7, 0.00015575, 1, 0, 0.501707,-0.00768702)    );
  // itree = 135
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782013,0.00059791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104075,-0.0252467) , 
2, 0.19036, 1, 0, 0.590753,-0.0281843) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7455,0.0056664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00012775,-0.0164646) , 
5, 0.0312382, 1, 0, 0.462751,-0.00323916) , 
5, 0.0168369, 1, 0, 0.499714,-0.0104426)    );
  // itree = 136
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669712,-0.00243924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000141157,-0.0176697) , 
4, 0.0290079, 1, 0, 0.496432,-0.00947146) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665873,0.00203232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612283,0.0330558) , 
2, 0.21428, 1, 0, 0.638301,0.0379138) , 
6, 0.0579821, 1, 0, 0.503868,-0.00698779)    );
  // itree = 137
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553936,0.00943151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0240557,-0.0169637) , 
2, 0.0714024, 1, 0, 0.161484,-0.0158617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527851,-0.0261868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853527,0.00800551) , 
5, 0.0134841, 1, 0, 0.827941,0.00564345) , 
7, 0.000145066, 1, 0, 0.503205,-0.00483507)    );
  // itree = 138
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.275573,-0.0187285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55252,-0.00355781) , 
5, 0.00575579, 1, 0, 0.540269,-0.00735701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0575211,-0.0173683) , 
3, 151.161, 1, 0, 0.501555,-0.0101695)    );
  // itree = 139
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807099,-6.57891e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171549,-0.0226034) , 
2, 0.166473, 1, 0, 0.6004,-0.0249527) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0558205,-0.019169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528923,0.00237304) , 
4, 0.0173966, 1, 0, 0.453331,-0.0029631) , 
5, 0.0172454, 1, 0, 0.497371,-0.00954802)    );
  // itree = 140
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684968,0.0291999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0928955,-0.016901) , 
2, 0.023787, 1, 0, 0.165241,-0.0181057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936057,-0.0142348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.694943,0.00893047) , 
0, 0.00110113, 1, 0, 0.805603,0.00376822) , 
7, 0.000143226, 1, 0, 0.50026,-0.00666192)    );
  // itree = 141
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559056,-0.00331323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218423,-0.0150763) , 
2, 0.452271, 1, 0, 0.538787,-0.00689627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0537739,-0.0185055) , 
3, 151.37, 1, 0, 0.502866,-0.00937576)    );
  // itree = 142
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948466,0.0141561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771818,-0.0242967) , 
4, 0.0260322, 1, 0, 0.927944,0.00472257) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00218845,-0.0201492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.170327,-0.0019127) , 
4, 0.0232022, 1, 0, 0.114698,-0.0164623) , 
0, 0.00192484, 1, 0, 0.501406,-0.00638865)    );
  // itree = 143
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247811,-0.0197014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647823,-0.00294019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000164333,-0.0177998) , 
4, 0.0318906, 1, 0, 0.506489,-0.00864042) , 
5, 0.00563445, 1, 0, 0.494989,-0.0107581)    );
  // itree = 144
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630332,-0.0115524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502138,-0.000549379) , 
5, 0.0169553, 1, 0, 0.54077,-0.0064957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0486537,-0.0175639) , 
3, 151.371, 1, 0, 0.502189,-0.0092124)    );
  // itree = 145
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875289,0.00757592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0851763,-0.0243144) , 
2, 0.0713501, 1, 0, 0.479297,-0.0364331) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643135,0.0020682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000186975,-0.0180484) , 
4, 0.0318755, 1, 0, 0.503466,-0.003318) , 
5, 0.011532, 1, 0, 0.499857,-0.00826309)    );
  // itree = 146
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240372,-0.0164506) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550112,-0.00399549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0531068,-0.0177333) , 
3, 151.382, 1, 0, 0.51177,-0.00812729) , 
5, 0.00577507, 1, 0, 0.499144,-0.00999347)    );
  // itree = 147
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86284,0.0167718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0905263,-0.0244761) , 
2, 0.0713414, 1, 0, 0.482565,-0.0281444) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651132,0.00116991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000182115,-0.0173023) , 
4, 0.0318906, 1, 0, 0.50659,-0.00363179) , 
5, 0.0115123, 1, 0, 0.503105,-0.00718718)    );
  // itree = 148
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859547,0.00944206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0863833,-0.0224834) , 
2, 0.0713501, 1, 0, 0.468107,-0.0272869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721788,0.00251293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000132178,-0.0173335) , 
5, 0.0323668, 1, 0, 0.500728,-0.00340505) , 
5, 0.011532, 1, 0, 0.495838,-0.00698549)    );
  // itree = 149
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946957,0.0127738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851157,-0.0195622) , 
4, 0.0243791, 1, 0, 0.930415,0.00464458) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00101627,-0.0174317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741509,0.0137523) , 
7, 0.000534736, 1, 0, 0.11335,-0.0148716) , 
0, 0.00192405, 1, 0, 0.494471,-0.00576825)    );
  // itree = 150
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.612655,0.0125086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0504232,-0.0180541) , 
2, 0.0476083, 1, 0, 0.158711,-0.0163587) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939754,-0.0115461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718861,0.0108391) , 
0, 0.00110545, 1, 0, 0.823036,0.00601309) , 
7, 0.000144606, 1, 0, 0.49876,-0.00490724)    );
  // itree = 151
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260525,-0.0206204) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532433,-0.0038888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.233305,-0.0145142) , 
2, 0.452282, 1, 0, 0.513815,-0.007353) , 
5, 0.00575579, 1, 0, 0.501917,-0.00977335)    );
  // itree = 152
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933294,0.00209447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.120643,-0.00921518) , 
0, 0.00192505, 1, 0, 0.519056,-0.0051847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.194035,-0.0143018) , 
2, 0.452243, 1, 0, 0.498482,-0.00726676)    );
  // itree = 153
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781112,0.00386514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0780496,-0.023374) , 
2, 0.214288, 1, 0, 0.602219,-0.0195119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0635412,-0.0194287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526396,0.00447042) , 
4, 0.0174128, 1, 0, 0.452982,-0.00052417) , 
5, 0.0172311, 1, 0, 0.498078,-0.00626186)    );
  // itree = 154
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618702,-0.00461229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904299,0.0240431) , 
7, 0.00074757, 1, 0, 0.644643,-0.00246948) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0224019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132189) , 
0, 0.0154447, 1, 0, 0,-0.0214267) , 
4, 0.0318825, 1, 0, 0.507807,-0.00649346)    );
  // itree = 155
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517894,-0.0139337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545925,-0.00209138) , 
5, 0.0113096, 1, 0, 0.541884,-0.00605306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0577342,-0.0167804) , 
3, 151.138, 1, 0, 0.504981,-0.00843728)    );
  // itree = 156
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962734,0.0877797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73824,-0.00147817) , 
5, 0.0101094, 1, 0, 0.798601,0.0120956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.137228,-0.021047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.482041,-0.00486601) , 
4, 0.00870241, 1, 0, 0.4564,-0.010192) , 
2, 0.0238088, 1, 0, 0.495178,-0.00766634)    );
  // itree = 157
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662757,-0.00149163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000291281,-0.0182496) , 
4, 0.0289954, 1, 0, 0.496374,-0.00675758) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615893,-0.00424662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599776,0.0229081) , 
2, 0.214705, 1, 0, 0.607698,0.0233817) , 
6, 0.0579817, 1, 0, 0.502464,-0.00510869)    );
  // itree = 158
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924582,0.000805941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0923717,-0.0131611) , 
0, 0.00192442, 1, 0, 0.502732,-0.00834901) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650461,0.0104085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617614,0.0137051) , 
2, 0.213728, 1, 0, 0.63401,0.0245604) , 
6, 0.0579806, 1, 0, 0.509868,-0.00655992)    );
  // itree = 159
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668572,-0.000441911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.93374e-05,-0.0190217) , 
4, 0.0318897, 1, 0, 0.530306,-0.00438839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.055579,-0.0168698) , 
3, 151.177, 1, 0, 0.49482,-0.00666637)    );
  // itree = 160
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904791,0.0482443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696713,-0.0127806) , 
4, 0.0144914, 1, 0, 0.797496,0.00872707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.50678,-0.0149019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441752,-0.00512562) , 
5, 0.0172375, 1, 0, 0.459598,-0.0134562) , 
2, 0.0238037, 1, 0, 0.497903,-0.0109414)    );
  // itree = 161
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676129,-0.00415382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473786,-0.0293151) , 
7, 0.000505716, 1, 0, 0.664693,-0.0138336) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0581141,-0.0232047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439153,0.013434) , 
4, 0.0231973, 1, 0, 0.33678,-0.000542422) , 
5, 0.0230462, 1, 0, 0.503025,-0.00728077)    );
  // itree = 162
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696785,0.00338138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0199734) , 
4, 0.0319182, 1, 0, 0.564416,-0.000443587) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.384741,-0.0279232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190907,-0.00480143) , 
2, 0.118742, 1, 0, 0.2478,-0.0212133) , 
3, 88.3073, 1, 0, 0.493196,-0.00511554)    );
  // itree = 163
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.797581,0.0130517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516655,-0.0168862) , 
4, 0.0203168, 1, 0, 0.670843,-0.000622441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.129559,-0.0190808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.365507,-0.00151162) , 
5, 0.0168258, 1, 0, 0.324794,-0.0122592) , 
2, 0.166662, 1, 0, 0.495333,-0.00652441)    );
  // itree = 164
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79561,0.00501429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000977202,-0.0218673) , 
5, 0.0306711, 1, 0, 0.650266,0.0010874) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0206183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000121173,-0.0129921) , 
4, 0.0429496, 1, 0, 7.23118e-05,-0.0166312) , 
4, 0.0319182, 1, 0, 0.496794,-0.00309491)    );
  // itree = 165
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825173,0.00116848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0289048) , 
4, 0.0231528, 1, 0, 0.655745,-0.0114648) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719647,0.0148793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000128239,-0.0170975) , 
5, 0.0314977, 1, 0, 0.347854,0.0023659) , 
5, 0.0224259, 1, 0, 0.49629,-0.00430192)    );
  // itree = 166
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947461,0.0128786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845327,-0.0233702) , 
4, 0.0238225, 1, 0, 0.926853,0.00117744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000751363,-0.0226765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157587,-0.00150567) , 
5, 0.0229852, 1, 0, 0.116439,-0.013349) , 
0, 0.00192505, 1, 0, 0.499088,-0.00649014)    );
  // itree = 167
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897216,0.0448284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631523,-0.0149676) , 
4, 0.0173457, 1, 0, 0.775494,0.00754626) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413783,-0.015804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436469,-0.00205326) , 
5, 0.0165637, 1, 0, 0.431533,-0.00913173) , 
2, 0.0476016, 1, 0, 0.500356,-0.00579466)    );
  // itree = 168
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931329,0.00124324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0011284,-0.0168607) , 
0, 0.00192505, 1, 0, 0.419173,-0.00915142) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504246,-0.0219304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89391,0.0238356) , 
5, 0.0236604, 1, 0, 0.841614,0.0158675) , 
7, 0.000534735, 1, 0, 0.50136,-0.00428394)    );
  // itree = 169
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84009,0.00111486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000165871,-0.0316204) , 
4, 0.0232428, 1, 0, 0.665645,-0.0146264) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0621371,-0.0188117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444715,0.00793351) , 
4, 0.0231963, 1, 0, 0.336644,-0.00123807) , 
5, 0.0230199, 1, 0, 0.501388,-0.00794218)    );
  // itree = 170
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631081,0.0159289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.054679,-0.0159165) , 
2, 0.0476045, 1, 0, 0.166654,-0.0107526) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930008,-0.0111182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704845,0.00761908) , 
0, 0.00114367, 1, 0, 0.811272,0.00176901) , 
7, 0.000151443, 1, 0, 0.495994,-0.0043552)    );
  // itree = 171
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946781,0.0130509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878316,-0.013683) , 
4, 0.0239311, 1, 0, 0.933655,0.00731277) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00194242,-0.0209997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.175119,0.00376427) , 
4, 0.023173, 1, 0, 0.116293,-0.00963355) , 
0, 0.00192505, 1, 0, 0.503734,-0.00160076)    );
  // itree = 172
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944066,0.00860976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710643,-0.0180134) , 
4, 0.0281219, 1, 0, 0.928586,0.00364851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00182625,-0.0218008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17786,0.00291861) , 
4, 0.0231876, 1, 0, 0.118969,-0.0103704) , 
0, 0.00192484, 1, 0, 0.508582,-0.00362405)    );
  // itree = 173
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859798,0.00440414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0932615,-0.0219144) , 
2, 0.0713501, 1, 0, 0.48462,-0.0242712) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933697,-0.0188865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337581,-0.000123395) , 
0, 0.000962418, 1, 0, 0.502151,-0.00565792) , 
5, 0.011532, 1, 0, 0.499613,-0.00835185)    );
  // itree = 174
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.837914,-0.00474992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.090491,-0.0214616) , 
2, 0.0714125, 1, 0, 0.455117,-0.02771) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713555,0.00418231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.46778e-05,-0.0196708) , 
4, 0.0303986, 1, 0, 0.517693,-0.00123926) , 
4, 0.0116445, 1, 0, 0.507732,-0.00545296)    );
  // itree = 175
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836737,-0.000579826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0313883) , 
4, 0.0232068, 1, 0, 0.669976,-0.0141573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0551643,-0.022231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442888,0.0133755) , 
4, 0.0232078, 1, 0, 0.335198,0.000535934) , 
5, 0.0230459, 1, 0, 0.50498,-0.00691572)    );
  // itree = 176
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.238136,-0.0180699) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653505,0.000222301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0169477) , 
4, 0.0318917, 1, 0, 0.511402,-0.0030904) , 
5, 0.00579096, 1, 0, 0.498331,-0.00482523)    );
  // itree = 177
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779286,-0.00364331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0983813,-0.020826) , 
2, 0.213998, 1, 0, 0.610519,-0.0187422) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0429121,-0.0212838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535204,0.00345169) , 
4, 0.0173966, 1, 0, 0.45601,-0.00145186) , 
5, 0.0172768, 1, 0, 0.503139,-0.00672588)    );
  // itree = 178
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924986,0.000260725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0882768,-0.0114367) , 
0, 0.00192484, 1, 0, 0.485752,-0.00603396) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629565,0.015613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559925,0.0189707) , 
2, 0.214059, 1, 0, 0.592943,0.0286797) , 
6, 0.05798, 1, 0, 0.491635,-0.00412885)    );
  // itree = 179
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240262,-0.0184522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68898,0.000530854) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.365193,-0.00609752) , 
2, 0.142822, 1, 0, 0.509124,-0.00525789) , 
5, 0.0057652, 1, 0, 0.496185,-0.00657998)    );
  // itree = 180
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877279,0.0129865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0923728,-0.0206597) , 
2, 0.0713501, 1, 0, 0.493852,-0.0176787) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722393,0.00365437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.63844e-05,-0.018552) , 
5, 0.0323668, 1, 0, 0.503418,-0.000659346) , 
5, 0.011532, 1, 0, 0.502041,-0.00310903)    );
  // itree = 181
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946539,0.0100592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858427,-0.014044) , 
4, 0.0243775, 1, 0, 0.931592,0.0039634) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00254493,-0.0201741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168659,0.00316495) , 
4, 0.0231985, 1, 0, 0.114255,-0.008309) , 
0, 0.00192484, 1, 0, 0.504198,-0.00245396)    );
  // itree = 182
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653057,-0.00944904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.32657,-0.00161253) , 
5, 0.0220654, 1, 0, 0.48803,-0.00755125) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623396,0.00548876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600249,0.0207466) , 
2, 0.214268, 1, 0, 0.611851,0.0246191) , 
6, 0.0579799, 1, 0, 0.49466,-0.00582886)    );
  // itree = 183
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78597,0.00328793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0637108,-0.021234) , 
2, 0.214279, 1, 0, 0.604118,-0.0144809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.754838,0.00642024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0207474) , 
5, 0.0312227, 1, 0, 0.467885,-0.000684435) , 
5, 0.0168194, 1, 0, 0.5068,-0.00462538)    );
  // itree = 184
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.228536,-0.0177836) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938363,0.00568086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124909,-0.00758901) , 
0, 0.00192505, 1, 0, 0.51721,-0.00071584) , 
5, 0.00579096, 1, 0, 0.502953,-0.00246163)    );
  // itree = 185
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8372,7.0874e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000360675,-0.0278373) , 
4, 0.0231885, 1, 0, 0.674394,-0.0111981) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0729188,-0.0204417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437905,0.0099054) , 
4, 0.023207, 1, 0, 0.333936,-7.50207e-05) , 
5, 0.0229688, 1, 0, 0.501204,-0.00553985)    );
  // itree = 186
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800212,0.00369062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000909361,-0.0251843) , 
5, 0.0306355, 1, 0, 0.643543,-0.000170515) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000131658,-0.0128937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.020146) , 
6, 0.0318831, 1, 0, 7.5767e-05,-0.0136958) , 
4, 0.0318836, 1, 0, 0.497321,-0.003244)    );
  // itree = 187
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243323,-0.0190356) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527227,-0.0032168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229251,-0.0122145) , 
2, 0.452271, 1, 0, 0.509028,-0.00501386) , 
5, 0.00577224, 1, 0, 0.495686,-0.00640735)    );
  // itree = 188
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.847901,0.00215965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0319713) , 
4, 0.0231792, 1, 0, 0.669085,-0.0109426) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0616887,-0.0227892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440223,0.0117924) , 
4, 0.0232232, 1, 0, 0.334857,-0.000332116) , 
5, 0.0230594, 1, 0, 0.503576,-0.00568829)    );
  // itree = 189
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770615,0.00238014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0948598,-0.0188011) , 
2, 0.214279, 1, 0, 0.600226,-0.0114907) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0366332,-0.0215884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526989,0.00366636) , 
4, 0.0173939, 1, 0, 0.450286,-0.000792801) , 
5, 0.017289, 1, 0, 0.495734,-0.00403541)    );
  // itree = 190
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994018,0.0620536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714569,-0.0326509) , 
0, 4.57784e-05, 1, 0, 0.938148,-0.011673) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908968,0.0121052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121483,-0.00748861) , 
0, 0.00187949, 1, 0, 0.305007,-0.000415688) , 
0, 0.000962442, 1, 0, 0.5005,-0.00389156)    );
  // itree = 191
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230987,-0.0176527) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616289,0.00384032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.434666,-0.00707189) , 
4, 0.020294, 1, 0, 0.512312,-0.00300725) , 
5, 0.00577507, 1, 0, 0.498425,-0.00465266)    );
  // itree = 192
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959729,0.0157138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00249868,-0.0153144) , 
0, 0.000962256, 1, 0, 0.163667,-0.00638538) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941759,-0.0136707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71988,0.0109939) , 
0, 0.00110545, 1, 0, 0.824053,0.0041658) , 
7, 0.000145067, 1, 0, 0.500835,-0.000998361)    );
  // itree = 193
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805968,0.00543852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00204283,-0.0258276) , 
5, 0.0296187, 1, 0, 0.648685,0.000917326) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000162123,-0.0236858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160184,0.0114453) , 
5, 0.0288041, 1, 0, 0.100476,-0.0125017) , 
4, 0.0289995, 1, 0, 0.495255,-0.00283833)    );
  // itree = 194
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801744,0.0181045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589127,-0.0140155) , 
4, 0.0174884, 1, 0, 0.687329,0.000446491) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0783097,-0.0209027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401147,-0.00255539) , 
4, 0.0144951, 1, 0, 0.350521,-0.0108044) , 
2, 0.142814, 1, 0, 0.501329,-0.00576676)    );
  // itree = 195
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949628,0.0504477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.543821,-0.0207634) , 
5, 0.0194996, 1, 0, 0.813414,0.00631776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.330041,-0.0151433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475048,-0.00369073) , 
5, 0.011519, 1, 0, 0.458396,-0.0070887) , 
2, 0.0238088, 1, 0, 0.498071,-0.00559044)    );
  // itree = 196
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.263393,-0.0160401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511572,-0.00468903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61003,0.00946537) , 
6, 0.05798, 1, 0, 0.517155,-0.00386535) , 
5, 0.00584932, 1, 0, 0.505,-0.0052988)    );
  // itree = 197
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825837,-0.00111517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000167532,-0.0310805) , 
4, 0.0231792, 1, 0, 0.653115,-0.0114603) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73877,0.0152786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.42057e-05,-0.0192111) , 
5, 0.0314873, 1, 0, 0.353421,0.00243616) , 
5, 0.0224199, 1, 0, 0.499873,-0.00435467)    );
  // itree = 198
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842398,0.0011607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000168093,-0.0282143) , 
4, 0.0231862, 1, 0, 0.668804,-0.0103125) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0634716,-0.021299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441826,0.00674185) , 
4, 0.023224, 1, 0, 0.334328,-0.00201293) , 
5, 0.0230064, 1, 0, 0.501487,-0.00616073)    );
  // itree = 199
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993132,0.0550607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684599,-0.0343389) , 
0, 4.57697e-05, 1, 0, 0.931773,-0.0182472) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905429,0.0104375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118399,-0.00799769) , 
0, 0.00188533, 1, 0, 0.29674,-0.00111387) , 
0, 0.000962256, 1, 0, 0.492598,-0.00639816)    );
  // itree = 200
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894722,0.0119088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212509,-0.0185354) , 
2, 0.0475493, 1, 0, 0.501139,-0.0161711) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943889,-0.0103823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.342305,0.00253596) , 
0, 0.000962526, 1, 0, 0.5076,-0.000651594) , 
5, 0.0115307, 1, 0, 0.506669,-0.00288923)    );
  // itree = 201
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991687,0.0457651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723203,-0.0257463) , 
0, 4.57697e-05, 1, 0, 0.939387,-0.0104148) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908728,0.0120095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126206,-0.00804982) , 
0, 0.00188102, 1, 0, 0.306677,-0.000703974) , 
0, 0.000962442, 1, 0, 0.501745,-0.00369787)    );
  // itree = 202
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768093,-0.00182256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103735,-0.0185157) , 
2, 0.214279, 1, 0, 0.599926,-0.0143705) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0252886,-0.0272438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53077,7.74854e-05) , 
4, 0.0174066, 1, 0, 0.449294,-0.004897) , 
5, 0.0173311, 1, 0, 0.495546,-0.00780592)    );
  // itree = 203
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937088,0.060668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758219,-0.00215733) , 
5, 0.0101089, 1, 0, 0.806642,0.0070531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9118,-0.0166075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.286236,-0.00379688) , 
0, 0.000962442, 1, 0, 0.457614,-0.00992247) , 
2, 0.0238042, 1, 0, 0.4973,-0.0079923)    );
  // itree = 204
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814038,0.0193984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520254,-0.0163051) , 
4, 0.0202667, 1, 0, 0.683964,0.00195421) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.204602,-0.016955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382055,2.85298e-05) , 
5, 0.0172454, 1, 0, 0.344251,-0.0086548) , 
2, 0.142822, 1, 0, 0.493586,-0.00399117)    );
  // itree = 205
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940094,0.00668491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00100478,-0.0163055) , 
0, 0.00192505, 1, 0, 0.418616,-0.00274687) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891903,-0.0143207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801619,0.0274807) , 
0, 0.00163449, 1, 0, 0.843647,0.0120404) , 
7, 0.000534737, 1, 0, 0.500274,9.40826e-05)    );
  // itree = 206
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591589,-0.00139839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.276261,-0.011787) , 
3, 88.0837, 1, 0, 0.523688,-0.00428149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20605,-0.0120408) , 
2, 0.452367, 1, 0, 0.503895,-0.00556624)    );
  // itree = 207
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741765,-0.00725833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616836,0.00299434) , 
5, 0.0165262, 1, 0, 0.654933,-0.00152927) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0220162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156783,0.00677143) , 
5, 0.0288085, 1, 0, 0.0989425,-0.0110078) , 
4, 0.0289857, 1, 0, 0.495905,-0.00424038)    );
  // itree = 208
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253275,-0.0153288) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936692,0.00208571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124548,-0.00845059) , 
0, 0.00192505, 1, 0, 0.517837,-0.00300219) , 
5, 0.00575529, 1, 0, 0.505477,-0.00435138)    );
  // itree = 209
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995346,0.0643063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690638,-0.0261756) , 
0, 4.57784e-05, 1, 0, 0.930991,-0.0130193) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.168133,-0.0136435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340481,0.000838825) , 
4, 0.0144974, 1, 0, 0.307323,-0.00269924) , 
0, 0.000962256, 1, 0, 0.503371,-0.00594333)    );
  // itree = 210
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996342,0.0657924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698153,-0.0286164) , 
0, 4.57784e-05, 1, 0, 0.938758,-0.0125016) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00228598,-0.0163994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709745,0.00361836) , 
7, 0.000143227, 1, 0, 0.307229,-0.00279433) , 
0, 0.000962418, 1, 0, 0.505876,-0.00584775)    );
  // itree = 211
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930613,0.00537317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00211003,-0.0171337) , 
0, 0.00260973, 1, 0, 0.665573,0.00130878) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0243811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156256,0.00724159) , 
5, 0.0282524, 1, 0, 0.101074,-0.0102802) , 
4, 0.0289852, 1, 0, 0.504708,-0.0019937)    );
  // itree = 212
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771007,-0.000160829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0961001,-0.0172585) , 
2, 0.214237, 1, 0, 0.598243,-0.0116113) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.501414,-0.00659983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315229,0.0116084) , 
2, 0.357034, 1, 0, 0.460004,-0.00166138) , 
5, 0.0173033, 1, 0, 0.502867,-0.00474653)    );
  // itree = 213
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993998,0.046444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705204,-0.0236473) , 
0, 4.58225e-05, 1, 0, 0.93642,-0.0127106) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00306479,-0.0154694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709415,0.00700664) , 
7, 0.000144605, 1, 0, 0.307892,0.000105792) , 
0, 0.000962442, 1, 0, 0.502042,-0.00385315)    );
  // itree = 214
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953033,0.0129934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00352254,-0.0188011) , 
0, 0.00162704, 1, 0, 0.61378,0.000272244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.388567,-0.0182207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424108,0.00125445) , 
5, 0.0230459, 1, 0, 0.412532,-0.00844183) , 
4, 0.0202908, 1, 0, 0.497996,-0.00474124)    );
  // itree = 215
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666922,-0.00750033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329192,0.00210491) , 
5, 0.021468, 1, 0, 0.49531,-0.00416369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839171,-0.0225821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421415,-0.00210841) , 
0, 0.00191221, 1, 0, 0.555427,-0.0195943) , 
6, 0.055081, 1, 0, 0.50165,-0.00579095)    );
  // itree = 216
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662393,-0.0088445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333584,-0.00541392) , 
5, 0.0220346, 1, 0, 0.494595,-0.008297) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639772,-0.00323836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584795,0.0148683) , 
2, 0.21504, 1, 0, 0.61134,0.00925616) , 
6, 0.0579815, 1, 0, 0.500828,-0.00735982)    );
  // itree = 217
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997283,0.0673123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705006,-0.0238118) , 
0, 4.57697e-05, 1, 0, 0.940811,-0.0101611) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906254,0.011367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121475,-0.00679232) , 
0, 0.00188396, 1, 0, 0.302959,0.000638387) , 
0, 0.000962418, 1, 0, 0.501803,-0.00272827)    );
  // itree = 218
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518066,-0.00438071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0402005,-0.0176035) , 
2, 0.333323, 1, 0, 0.42346,-0.00838811) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633524,-0.00441422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492877,0.0130467) , 
2, 0.35707, 1, 0, 0.601661,0.000992336) , 
6, 0.040586, 1, 0, 0.492934,-0.00473101)    );
  // itree = 219
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562709,-0.00403249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.31402,0.0149253) , 
3, 107.931, 1, 0, 0.543003,-0.00266585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0631625,-0.0147926) , 
3, 151.139, 1, 0, 0.505476,-0.00420365)    );
  // itree = 220
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993938,0.0382674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69705,-0.0223198) , 
0, 4.57784e-05, 1, 0, 0.934103,-0.0145774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00254379,-0.015898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72423,0.00552079) , 
7, 0.000144606, 1, 0, 0.302776,-0.000522288) , 
0, 0.000962526, 1, 0, 0.496131,-0.00482689)    );
  // itree = 221
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.24717,-0.0142632) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947916,-0.00953676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317555,0.000780666) , 
0, 0.000962526, 1, 0, 0.509009,-0.00194042) , 
5, 0.00578456, 1, 0, 0.496204,-0.00309402)    );
  // itree = 222
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993493,0.035869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673004,-0.0222656) , 
0, 4.57784e-05, 1, 0, 0.927913,-0.0178107) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00275399,-0.0151254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709454,0.00269258) , 
7, 0.000143226, 1, 0, 0.302234,-0.00203927) , 
0, 0.000961838, 1, 0, 0.494998,-0.00689822)    );
  // itree = 223
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951852,0.0211897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00193577,-0.0196495) , 
0, 0.00159176, 1, 0, 0.571067,0.00515767) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92647,-0.0237668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309765,-0.000382932) , 
0, 0.000962212, 1, 0, 0.46315,-0.00668631) , 
4, 0.0173966, 1, 0, 0.499011,-0.0027505)    );
  // itree = 224
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834398,0.0225795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501766,-0.00278606) , 
2, 0.0238037, 1, 0, 0.541018,-0.00141861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.05609,-0.0116753) , 
3, 151.382, 1, 0, 0.504371,-0.0025176)    );
  // itree = 225
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994433,0.0385361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691012,-0.0180135) , 
0, 4.57784e-05, 1, 0, 0.933021,-0.011527) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.176076,-0.0150403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338233,0.001034) , 
4, 0.0144907, 1, 0, 0.307081,-0.00331706) , 
0, 0.000962526, 1, 0, 0.500989,-0.00586039)    );
  // itree = 226
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906962,0.0810012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794618,-0.0013936) , 
4, 0.00873388, 1, 0, 0.820874,0.00728658) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925262,-0.014994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288822,-0.00465935) , 
0, 0.000962526, 1, 0, 0.461259,-0.0085296) , 
2, 0.0238088, 1, 0, 0.501093,-0.00677767)    );
  // itree = 227
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945172,-0.00875874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315554,8.61367e-05) , 
0, 0.000962526, 1, 0, 0.518233,-0.00260209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.194802,-0.0124378) , 
2, 0.452279, 1, 0, 0.498535,-0.00383673)    );
  // itree = 228
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958082,0.023127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00258577,-0.0214345) , 
0, 0.00157823, 1, 0, 0.589862,0.00536674) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0295083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530827,0.0010099) , 
5, 0.0172594, 1, 0, 0.455104,-0.00629291) , 
4, 0.0173902, 1, 0, 0.498969,-0.00249761)    );
  // itree = 229
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.733279,0.0217842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0608021,-0.016007) , 
2, 0.238042, 1, 0, 0.582182,0.00388902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526736,-0.0148296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349799,0.00767346) , 
2, 0.285658, 1, 0, 0.465903,-0.00559437) , 
4, 0.0174338, 1, 0, 0.504099,-0.00247919)    );
  // itree = 230
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95978,0.0175316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00279039,-0.0179943) , 
0, 0.00162704, 1, 0, 0.623081,0.00350639) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904328,-0.0229011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.274567,-0.00212073) , 
0, 0.000962418, 1, 0, 0.417866,-0.00892831) , 
4, 0.0202976, 1, 0, 0.505296,-0.00363064)    );
  // itree = 231
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994455,0.0385662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709243,-0.0186341) , 
0, 4.57784e-05, 1, 0, 0.939553,-0.0114606) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00439469,-0.0141588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724335,0.00414486) , 
7, 0.000151443, 1, 0, 0.30483,-0.000464392) , 
0, 0.000962442, 1, 0, 0.499484,-0.00383665)    );
  // itree = 232
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726391,0.00824511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387383,-0.00465207) , 
2, 0.142814, 1, 0, 0.54416,-0.00118827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0528663,-0.0142855) , 
3, 151.177, 1, 0, 0.50568,-0.00246484)    );
  // itree = 233
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99404,0.0306029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677106,-0.0193827) , 
0, 4.58225e-05, 1, 0, 0.930388,-0.013687) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906618,0.00877176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124533,-0.005751) , 
0, 0.00188111, 1, 0, 0.306506,8.60671e-05) , 
0, 0.000962526, 1, 0, 0.498904,-0.0041614)    );
  // itree = 234
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.242246,-0.0158009) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.698979,-0.00147295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.65899e-05,-0.0217871) , 
5, 0.033112, 1, 0, 0.510862,-0.00391474) , 
5, 0.00577465, 1, 0, 0.498049,-0.00488553)    );
  // itree = 235
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839323,0.000441345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.328646,-0.0235552) , 
4, 0.0202599, 1, 0, 0.665346,-0.0119561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00264121,-0.0223706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448731,0.00275173) , 
4, 0.0202933, 1, 0, 0.354247,-0.0026898) , 
5, 0.0222054, 1, 0, 0.501174,-0.00706612)    );
  // itree = 236
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99409,0.0296203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669395,-0.0192424) , 
0, 4.57784e-05, 1, 0, 0.929958,-0.0160637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00232867,-0.0170453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720297,0.00782343) , 
7, 0.000144606, 1, 0, 0.304736,0.00143939) , 
0, 0.000962526, 1, 0, 0.500019,-0.00402756)    );
  // itree = 237
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559646,0.007151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0205863,-0.0172813) , 
2, 0.261846, 1, 0, 0.40039,-0.00233819) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655476,-0.0164992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478215,0.0014699) , 
2, 0.261825, 1, 0, 0.590172,-0.00901418) , 
6, 0.0347934, 1, 0, 0.499753,-0.0058335)    );
  // itree = 238
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60996,-0.00172556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924214,0.0196088) , 
7, 0.000743568, 1, 0, 0.638442,0.000544681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00037993,-0.0117868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0182833) , 
6, 0.0318831, 1, 0, 0.000220287,-0.00766822) , 
4, 0.0318825, 1, 0, 0.491233,-0.00134966)    );
  // itree = 239
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799671,0.00273816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00340361,-0.0272677) , 
5, 0.0306003, 1, 0, 0.652291,-0.000397769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.019848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00028254,-0.0120122) , 
4, 0.0443082, 1, 0, 0.00015738,-0.00955945) , 
4, 0.0318951, 1, 0, 0.507291,-0.00243483)    );
  // itree = 240
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991228,0.00436686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72631,-0.0143804) , 
0, 4.58225e-05, 1, 0, 0.940322,-0.0112892) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0146315,-0.0194311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.339981,0.00114059) , 
4, 0.0116029, 1, 0, 0.298652,-0.00199524) , 
0, 0.000962442, 1, 0, 0.493248,-0.00481378)    );
  // itree = 241
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902954,0.0406795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672996,-0.0141766) , 
4, 0.0145455, 1, 0, 0.772937,0.00314647) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915707,-0.0145824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.274313,-0.00176275) , 
0, 0.000962526, 1, 0, 0.432608,-0.0060983) , 
2, 0.0476176, 1, 0, 0.499936,-0.00426939)    );
  // itree = 242
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.232031,-0.0171725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.581397,0.00908409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477971,-0.00446914) , 
4, 0.0174057, 1, 0, 0.511038,-0.000577323) , 
5, 0.00577507, 1, 0, 0.49652,-0.00173022)    );
  // itree = 243
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664077,0.00639183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440205,-0.00632667) , 
4, 0.0202933, 1, 0, 0.541981,-0.000444424) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673716,-0.0148511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0838513,0.0001736) , 
0, 0.00192451, 1, 0, 0.216969,-0.0156903) , 
2, 0.404638, 1, 0, 0.500361,-0.00239677)    );
  // itree = 244
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679975,0.000285763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124025,-0.0105918) , 
4, 0.0289715, 1, 0, 0.533856,-0.00202324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0501544,-0.0155321) , 
3, 150.92, 1, 0, 0.495677,-0.0031298)    );
  // itree = 245
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.249119,-0.0125633) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666421,0.00163184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.113452,-0.00845877) , 
4, 0.0290003, 1, 0, 0.515295,-0.00052932) , 
5, 0.00578211, 1, 0, 0.502163,-0.00139447)    );
  // itree = 246
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995877,0.0455748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701778,-0.0126156) , 
0, 4.57697e-05, 1, 0, 0.939026,-0.00621467) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00255559,-0.0156855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730907,0.00759304) , 
7, 0.000145067, 1, 0, 0.309213,0.00132665) , 
0, 0.000962442, 1, 0, 0.507139,-0.00104329)    );
  // itree = 247
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994474,0.0259781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684194,-0.0170615) , 
0, 4.57697e-05, 1, 0, 0.932837,-0.0132831) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00265526,-0.0152232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712319,0.0041638) , 
7, 0.000143226, 1, 0, 0.303122,-0.000182209) , 
0, 0.000962418, 1, 0, 0.496815,-0.00421189)    );
  // itree = 248
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994465,0.0245479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698358,-0.0136955) , 
0, 4.58225e-05, 1, 0, 0.937137,-0.00983729) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9053,0.00769686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122378,-0.00618199) , 
0, 0.00188246, 1, 0, 0.303519,-0.000541366) , 
0, 0.000962526, 1, 0, 0.499022,-0.00340963)    );
  // itree = 249
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995386,0.0328426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698727,-0.0131194) , 
0, 4.58225e-05, 1, 0, 0.935832,-0.00926838) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.459961,-0.016122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257592,0.00575344) , 
2, 0.095248, 1, 0, 0.307559,0.000395906) , 
0, 0.000962526, 1, 0, 0.503464,-0.00261756)    );
  // itree = 250
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946774,-0.0126727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.36836,-0.00125151) , 
0, 0.000962256, 1, 0, 0.573635,-0.00434572) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794088,-0.00987884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000192962,-0.0124331) , 
0, 0.00288758, 1, 0, 0.298006,-0.0116441) , 
3, 75.5888, 1, 0, 0.49536,-0.00641833)    );
  // itree = 251
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783952,-0.00223437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0881726,-0.0183697) , 
2, 0.214279, 1, 0, 0.603015,-0.0118937) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0439376,-0.0226475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539815,0.000833769) , 
4, 0.0174149, 1, 0, 0.458922,-0.00237733) , 
5, 0.017289, 1, 0, 0.502391,-0.00524814)    );
  // itree = 252
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816428,0.00618783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0243527) , 
5, 0.0265366, 1, 0, 0.64036,0.0016691) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0296018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440241,0.00570349) , 
5, 0.0230594, 1, 0, 0.341405,-0.00671028) , 
4, 0.0232052, 1, 0, 0.502529,-0.00219416)    );
  // itree = 253
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524687,-0.00215485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617291,0.00966908) , 
6, 0.0579818, 1, 0, 0.529806,-0.00107383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195561,-0.0103621) , 
2, 0.452243, 1, 0, 0.508263,-0.00194139)    );
  // itree = 254
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954169,0.0161455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00378895,-0.0198266) , 
0, 0.00162704, 1, 0, 0.618275,0.00210506) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881322,-0.0150248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160329,0.00579912) , 
0, 0.00192505, 1, 0, 0.415093,-0.00747378) , 
4, 0.0202846, 1, 0, 0.501353,-0.00340711)    );
  // itree = 255
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591125,0.000965696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430848,-0.00980735) , 
4, 0.0174022, 1, 0, 0.483818,-0.00622406) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672166,0.0174518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561615,0.00565135) , 
2, 0.214268, 1, 0, 0.613465,0.0128038) , 
6, 0.0579806, 1, 0, 0.490675,-0.0052176)    );
  // itree = 256
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769089,0.0210676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634796,-0.0108722) , 
4, 0.0144819, 1, 0, 0.680282,0.000670776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0784222,-0.0196303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401968,-0.00298004) , 
4, 0.0144974, 1, 0, 0.35088,-0.00824501) , 
2, 0.142853, 1, 0, 0.498777,-0.00424193)    );
  // itree = 257
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935548,0.0038825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0123847,-0.0264349) , 
0, 0.00135385, 1, 0, 0.602264,-0.00941521) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0322545,-0.0260533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531491,0.00291313) , 
4, 0.0173492, 1, 0, 0.453036,-0.00140082) , 
5, 0.0172732, 1, 0, 0.498961,-0.00386728)    );
  // itree = 258
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595988,-0.00410412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597162,0.0122567) , 
3, 15.6176, 1, 0, 0.596419,0.000761581) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924524,-0.0116629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.262863,-0.00456146) , 
0, 0.000962212, 1, 0, 0.451203,-0.0069291) , 
3, 25.2309, 1, 0, 0.492899,-0.00472088)    );
  // itree = 259
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8039,0.000680194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.134199,-0.0192134) , 
2, 0.190433, 1, 0, 0.61165,-0.0119469) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0494535,-0.0222145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527884,0.00541085) , 
4, 0.01742, 1, 0, 0.450575,0.000613661) , 
5, 0.0172737, 1, 0, 0.499075,-0.00316832)    );
  // itree = 260
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781126,0.0183537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579763,-0.00962603) , 
4, 0.0174066, 1, 0, 0.668869,0.001331) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121848,-0.0162445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379286,0.000844964) , 
5, 0.0166649, 1, 0, 0.331415,-0.00527873) , 
2, 0.166629, 1, 0, 0.500915,-0.00195873)    );
  // itree = 261
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93761,0.00483009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00933675,-0.0257899) , 
0, 0.00136139, 1, 0, 0.60428,-0.00880968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0462882,-0.0209995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5397,0.00196697) , 
4, 0.0174016, 1, 0, 0.46026,-0.000678491) , 
5, 0.0172594, 1, 0, 0.50417,-0.00315761)    );
  // itree = 262
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994894,0.0264528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676469,-0.0159406) , 
0, 4.57697e-05, 1, 0, 0.928391,-0.0129382) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00283653,-0.0155859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718471,0.00808941) , 
7, 0.000144605, 1, 0, 0.302107,0.00237307) , 
0, 0.000961676, 1, 0, 0.49506,-0.00234422)    );
  // itree = 263
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.699924,0.00222278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000165871,-0.019368) , 
5, 0.0344792, 1, 0, 0.542328,0.000379984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0551315,-0.010018) , 
3, 151.177, 1, 0, 0.504145,-0.000500902)    );
  // itree = 264
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996743,0.0445803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699299,-0.011966) , 
0, 4.57697e-05, 1, 0, 0.93713,-0.00636925) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.176017,-0.0160506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332094,0.00431244) , 
4, 0.0145011, 1, 0, 0.302649,-0.000271337) , 
0, 0.000962212, 1, 0, 0.499643,-0.00216462)    );
  // itree = 265
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994952,0.0258322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705986,-0.0124928) , 
0, 9.16451e-05, 1, 0, 0.939837,-0.00842422) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00289269,-0.0185668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707949,0.0071349) , 
7, 0.000143227, 1, 0, 0.304181,0.00120747) , 
0, 0.000962418, 1, 0, 0.50105,-0.00177555)    );
  // itree = 266
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948683,0.00751586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767958,-0.0203135) , 
4, 0.0278634, 1, 0, 0.935805,0.00267469) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00217291,-0.0194398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.174803,0.00868386) , 
4, 0.0232052, 1, 0, 0.116198,-0.00377333) , 
0, 0.00192505, 1, 0, 0.49882,-0.000763164)    );
  // itree = 267
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947106,0.0216251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00324501,-0.014945) , 
0, 0.000962442, 1, 0, 0.1665,-0.000952037) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.396792,-0.0237415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840315,-0.00382646) , 
5, 0.0129505, 1, 0, 0.807895,-0.00871367) , 
7, 0.000143226, 1, 0, 0.500503,-0.00499387)    );
  // itree = 268
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596258,0.0158394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0133132,-0.0179937) , 
2, 0.166573, 1, 0, 0.327171,8.81629e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934186,-0.0214981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4353,0.000504403) , 
0, 0.000962526, 1, 0, 0.596858,-0.00588371) , 
6, 0.0289979, 1, 0, 0.496437,-0.00366003)    );
  // itree = 269
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.219254,0.00664806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569363,-0.00900391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512418,-0.00203436) , 
4, 0.0136811, 1, 0, 0.522156,-0.00302992) , 
4, 0.00580854, 1, 0, 0.505915,-0.00260363)    );
  // itree = 270
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994829,0.0155983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71398,-0.0116175) , 
0, 4.57668e-05, 1, 0, 0.938099,-0.00815639) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136315,-0.0170424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347388,0.00150827) , 
4, 0.0116118, 1, 0, 0.304371,-0.000912806) , 
0, 0.000962526, 1, 0, 0.499269,-0.00314051)    );
  // itree = 271
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953916,0.0210124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00218955,-0.0217384) , 
0, 0.00157823, 1, 0, 0.570815,0.00334978) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909311,-0.011542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152596,0.00450461) , 
0, 0.00192335, 1, 0, 0.459428,-0.00491235) , 
4, 0.0174022, 1, 0, 0.496177,-0.0021865)    );
  // itree = 272
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995896,0.0269529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714992,-0.0122746) , 
0, 4.57784e-05, 1, 0, 0.93979,-0.00825667) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00444964,-0.0132893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722538,0.00458155) , 
7, 0.000151443, 1, 0, 0.310084,0.000863585) , 
0, 0.000962526, 1, 0, 0.508588,-0.00201143)    );
  // itree = 273
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580838,-0.0028003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636651,-0.0197059) , 
7, 0.000228363, 1, 0, 0.592923,-0.0113637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.539082,-0.011095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353193,0.00640755) , 
2, 0.238039, 1, 0, 0.458428,-0.00166885) , 
5, 0.0169618, 1, 0, 0.497484,-0.00448415)    );
  // itree = 274
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853611,0.0292052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0899847,-0.00584586) , 
2, 0.0713828, 1, 0, 0.453563,0.00475042) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932348,-0.0163343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349367,0.00123884) , 
0, 0.000962442, 1, 0, 0.512176,-0.00358817) , 
4, 0.0116235, 1, 0, 0.502611,-0.0022274)    );
  // itree = 275
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73029,0.0186191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0572521,-0.0154561) , 
2, 0.238088, 1, 0, 0.573669,0.00294001) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93108,-0.0184148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.302748,-0.00132473) , 
0, 0.000962442, 1, 0, 0.457685,-0.00519227) , 
4, 0.0174016, 1, 0, 0.495672,-0.00252878)    );
  // itree = 276
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558997,0.0164764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00572664,-0.0162938) , 
2, 0.19036, 1, 0, 0.328387,0.000840803) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931148,-0.0181918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431591,-0.00141428) , 
0, 0.000962526, 1, 0, 0.59131,-0.00669024) , 
6, 0.0289967, 1, 0, 0.493526,-0.00388936)    );
  // itree = 277
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931324,0.00361807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0114071,-0.0256525) , 
0, 0.00136139, 1, 0, 0.597074,-0.00776428) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0407246,-0.0272356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52996,0.00475567) , 
4, 0.0174011, 1, 0, 0.452641,-2.86606e-05) , 
5, 0.0172594, 1, 0, 0.496611,-0.00238362)    );
  // itree = 278
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700874,-0.00690139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388891,-0.0014902) , 
5, 0.0230229, 1, 0, 0.553637,-0.00457523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73706,0.0178475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131937) , 
0, 0.00288733, 1, 0, 0.164272,0.00879547) , 
3, 113.372, 1, 0, 0.50074,-0.00275878)    );
  // itree = 279
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562966,-0.0024027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117174,-0.0102382) , 
3, 125.981, 1, 0, 0.514061,-0.00313603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204587,-0.0124369) , 
2, 0.452279, 1, 0, 0.494573,-0.00398728)    );
  // itree = 280
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.806316,0.00369313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00123421,-0.0303181) , 
5, 0.0295344, 1, 0, 0.649728,0.000444121) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0224853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158828,0.0148216) , 
5, 0.028759, 1, 0, 0.10203,-0.00806753) , 
4, 0.028985, 1, 0, 0.49811,-0.00191213)    );
  // itree = 281
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996773,0.04107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701269,-0.0125147) , 
0, 4.57668e-05, 1, 0, 0.937962,-0.00717384) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00280773,-0.0169044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72534,0.0075562) , 
7, 0.000143225, 1, 0, 0.305203,0.00188221) , 
0, 0.000962256, 1, 0, 0.499976,-0.00090538)    );
  // itree = 282
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952741,0.0177615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00206114,-0.0253579) , 
0, 0.00159176, 1, 0, 0.587383,0.00190655) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916676,-0.0187718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.307361,-0.000447187) , 
0, 0.000961838, 1, 0, 0.459481,-0.00539902) , 
4, 0.0173939, 1, 0, 0.501334,-0.00300843)    );
  // itree = 283
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545097,-0.00225319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0501673,-0.0170633) , 
2, 0.309514, 1, 0, 0.434236,-0.00578733) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637286,-0.00462993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508917,0.00762459) , 
2, 0.285658, 1, 0, 0.592276,0.00110385) , 
6, 0.0405977, 1, 0, 0.497123,-0.0030452)    );
  // itree = 284
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616872,-0.000584638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.120231,-0.012764) , 
2, 0.214284, 1, 0, 0.44017,-0.00502562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661367,-0.00635859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522727,0.0102321) , 
2, 0.261859, 1, 0, 0.607844,0.00183499) , 
6, 0.0405903, 1, 0, 0.50752,-0.00226989)    );
  // itree = 285
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614213,-0.00831993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308098,-0.000350224) , 
5, 0.0172375, 1, 0, 0.422257,-0.00365798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857844,-0.0280135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777423,0.0116887) , 
0, 0.00179141, 1, 0, 0.815399,-0.0120263) , 
7, 0.000535657, 1, 0, 0.499364,-0.00529926)    );
  // itree = 286
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638098,0.00464121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488846,-0.00548308) , 
4, 0.0174011, 1, 0, 0.53981,-0.00181093) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722952,-0.0152306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0779067,-9.30265e-05) , 
0, 0.00191952, 1, 0, 0.219101,-0.0110378) , 
2, 0.404663, 1, 0, 0.500274,-0.00294836)    );
  // itree = 287
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524719,-0.00169524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.11422,-0.0106415) , 
2, 0.309514, 1, 0, 0.422377,-0.00319128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865141,-0.0275868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766323,0.00722038) , 
0, 0.00172255, 1, 0, 0.813232,-0.01339) , 
7, 0.000535657, 1, 0, 0.499281,-0.00519795)    );
  // itree = 288
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952175,0.017728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00123658,-0.0220225) , 
0, 0.00157823, 1, 0, 0.584015,0.00311046) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913815,-0.0191295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.310823,0.00142644) , 
0, 0.000962526, 1, 0, 0.464995,-0.00418061) , 
4, 0.0173943, 1, 0, 0.503798,-0.00180355)    );
  // itree = 289
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994532,0.0189606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692001,-0.0135271) , 
0, 4.58225e-05, 1, 0, 0.935172,-0.00978773) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.181885,-0.00780977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446969,0.00600521) , 
6, 0.0377003, 1, 0, 0.300383,0.000103911) , 
0, 0.000962442, 1, 0, 0.493735,-0.00290902)    );
  // itree = 290
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807666,0.0038741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000168093,-0.0211668) , 
4, 0.0290282, 1, 0, 0.683769,6.97774e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000263511,-0.0354634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19829,0.0175848) , 
4, 0.0260879, 1, 0, 0.11953,-0.00572371) , 
5, 0.0287121, 1, 0, 0.497663,-0.00184112)    );
  // itree = 291
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794671,0.0094701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642993,-0.0210962) , 
4, 0.0145089, 1, 0, 0.698238,-0.00777843) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893916,-0.0126592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250993,0.00895103) , 
0, 0.000962526, 1, 0, 0.381926,0.0023715) , 
2, 0.119019, 1, 0, 0.50602,-0.00161048)    );
  // itree = 292
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.492515,-0.00234804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503438,-0.020642) , 
6, 0.0524452, 1, 0, 0.493154,-0.00345112) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6702,-0.00483372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5545,0.012852) , 
2, 0.142866, 1, 0, 0.595599,0.0079156) , 
6, 0.055081, 1, 0, 0.503475,-0.00230592)    );
  // itree = 293
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995378,0.0273745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680162,-0.00959964) , 
0, 4.57784e-05, 1, 0, 0.930591,-0.00611902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0029892,-0.0169223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712423,0.00486643) , 
7, 0.000144607, 1, 0, 0.301751,0.000159782) , 
0, 0.000962256, 1, 0, 0.495963,-0.00177938)    );
  // itree = 294
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97036,0.010099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.162918,-0.0100379) , 
0, 0.0019189, 1, 0, 0.684819,0.00109742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863967,-0.0136494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211312,-0.000522757) , 
0, 0.000962526, 1, 0, 0.332615,-0.0046441) , 
2, 0.166616, 1, 0, 0.506479,-0.00180982)    );
  // itree = 295
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775385,0.000957027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0909277,-0.0165196) , 
2, 0.214279, 1, 0, 0.598462,-0.00706479) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0446816,-0.0264985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533601,0.00395016) , 
4, 0.01742, 1, 0, 0.454655,-0.000104973) , 
5, 0.017289, 1, 0, 0.498546,-0.00222916)    );
  // itree = 296
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619039,-0.00851024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419272,0.00206057) , 
5, 0.0155593, 1, 0, 0.478892,-0.00200922) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865956,-0.0221659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400641,0.00183944) , 
0, 0.00192009, 1, 0, 0.558278,-0.0107422) , 
6, 0.0492854, 1, 0, 0.496377,-0.00393271)    );
  // itree = 297
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800162,0.00445032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00707818,-0.0263256) , 
5, 0.0305713, 1, 0, 0.646668,0.00140734) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000179725,-0.0212255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013127) , 
4, 0.0443157, 1, 0, 7.97798e-05,-0.00747406) , 
4, 0.0318917, 1, 0, 0.504637,-0.000543564)    );
  // itree = 298
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70842,0.000212521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.39446e-05,-0.0262409) , 
4, 0.0202776, 1, 0, 0.433955,-0.00473412) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643432,-0.00676167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538096,0.0168929) , 
2, 0.261751, 1, 0, 0.603,0.00327044) , 
6, 0.040586, 1, 0, 0.501675,-0.00152746)    );
  // itree = 299
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834841,0.00401064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386107,-0.0163254) , 
4, 0.0144648, 1, 0, 0.597885,-0.00756534) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0415196,-0.023532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530167,0.00275777) , 
4, 0.0174066, 1, 0, 0.452273,-0.000719854) , 
5, 0.0172953, 1, 0, 0.497704,-0.00285565)    );
  // itree = 300
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942598,0.00931548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00168968,-0.0164902) , 
0, 0.00192505, 1, 0, 0.485017,0.00106545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850672,-0.0311713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426201,0.0143609) , 
0, 0.0019181, 1, 0, 0.579209,-0.0095458) , 
6, 0.049283, 1, 0, 0.505899,-0.00128707)    );
  // itree = 301
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571341,-0.00654039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43463,0.00396995) , 
3, 37.7955, 1, 0, 0.494306,-0.00102015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811296,-0.0221752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432748,-0.00432954) , 
0, 0.00191009, 1, 0, 0.561205,-0.017935) , 
6, 0.0550822, 1, 0, 0.501634,-0.00287301)    );
  // itree = 302
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.847978,0.0281548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709588,-0.00483827) , 
4, 0.0116111, 1, 0, 0.748686,0.00306743) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.890705,-0.0109911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261353,0.00136463) , 
0, 0.000962442, 1, 0, 0.404615,-0.00252026) , 
2, 0.0714264, 1, 0, 0.497167,-0.00101723)    );
  // itree = 303
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.256201,-0.0129025) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619171,0.00338635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433886,-0.00312122) , 
4, 0.0202933, 1, 0, 0.513086,-0.000467005) , 
5, 0.00578211, 1, 0, 0.500721,-0.0010972)    );
  // itree = 304
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244948,-0.0186398) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560751,0.000450515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250019,-0.00601796) , 
2, 0.380844, 1, 0, 0.511245,-0.000950344) , 
5, 0.00579096, 1, 0, 0.497889,-0.00191061)    );
  // itree = 305
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995356,0.0266197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685134,-0.010723) , 
0, 4.57668e-05, 1, 0, 0.93229,-0.00742122) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.177773,-0.0122507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334337,0.000139412) , 
4, 0.0144939, 1, 0, 0.305236,-0.00170788) , 
0, 0.000962256, 1, 0, 0.500703,-0.00348885)    );
  // itree = 306
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940023,0.00636717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0362026,-0.0137281) , 
0, 0.00192505, 1, 0, 0.489798,-8.26136e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82707,-0.0196011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411271,0.00481741) , 
0, 0.00191187, 1, 0, 0.547325,-0.00929574) , 
6, 0.0521838, 1, 0, 0.499122,-0.00157592)    );
  // itree = 307
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684705,0.0024607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.380075,-0.0249322) , 
6, 0.0317833, 1, 0, 0.598807,-0.00639975) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0371287,-0.026135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530117,0.00144284) , 
4, 0.0173966, 1, 0, 0.450228,-0.00131285) , 
5, 0.017289, 1, 0, 0.495447,-0.00286102)    );
  // itree = 308
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789514,0.000976569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117607,-0.0142194) , 
2, 0.19047, 1, 0, 0.602287,-0.00606845) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731352,0.00657745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0205069) , 
5, 0.0319856, 1, 0, 0.449969,0.00132213) , 
5, 0.0172311, 1, 0, 0.496015,-0.000912073)    );
  // itree = 309
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840118,0.00205229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0297256) , 
4, 0.0232555, 1, 0, 0.668431,-0.00646317) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0710386,-0.0240494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435089,0.01751) , 
4, 0.0232319, 1, 0, 0.330748,0.00179204) , 
5, 0.0229823, 1, 0, 0.498399,-0.00230647)    );
  // itree = 310
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802569,0.0196678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63055,-0.0179825) , 
6, 0.0463714, 1, 0, 0.774806,0.00260823) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.565925,-0.00830275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313836,-0.00276783) , 
5, 0.0231018, 1, 0, 0.427116,-0.00578425) , 
2, 0.0476045, 1, 0, 0.49595,-0.00412275)    );
  // itree = 311
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639078,-0.000817672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74097,0.0310043) , 
6, 0.0579806, 1, 0, 0.644781,0.000680594) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0205738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000284407,-0.0110778) , 
4, 0.0443117, 1, 0, 0.000153687,-0.0055437) , 
4, 0.0318825, 1, 0, 0.499857,-0.000718737)    );
  // itree = 312
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683769,0.00643761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512286,-0.0118959) , 
4, 0.01742, 1, 0, 0.576266,-0.00435939) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0193981,-0.0156894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491428,0.0141627) , 
6, 0.0376824, 1, 0, 0.258108,0.00129029) , 
2, 0.309514, 1, 0, 0.49277,-0.00287672)    );
  // itree = 313
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921763,-0.00085645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0127247,-0.0255403) , 
0, 0.00136809, 1, 0, 0.601172,-0.0110552) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0640213,-0.0259641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531973,0.000175618) , 
4, 0.0174387, 1, 0, 0.453204,-0.00307795) , 
5, 0.0172296, 1, 0, 0.498175,-0.0055024)    );
  // itree = 314
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.5737,-0.000998035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441166,-0.0123825) , 
3, 81.0858, 1, 0, 0.555754,-0.0024423) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678344,0.0125166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131563) , 
0, 0.00288725, 1, 0, 0.159524,0.00675487) , 
3, 113.537, 1, 0, 0.501293,-0.00117817)    );
  // itree = 315
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884575,0.00983985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0873738,-0.0180228) , 
2, 0.0713501, 1, 0, 0.486422,-0.0115747) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609813,0.00705061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466781,-0.00413348) , 
3, 25.2309, 1, 0, 0.508168,-0.000970487) , 
5, 0.0115387, 1, 0, 0.505064,-0.0024841)    );
  // itree = 316
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94843,0.0133829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00305668,-0.0210271) , 
0, 0.0015718, 1, 0, 0.573669,0.000489971) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0277583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529481,-0.000814958) , 
5, 0.0172903, 1, 0, 0.455243,-0.00634473) , 
4, 0.0173994, 1, 0, 0.493595,-0.00413128)    );
  // itree = 317
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851918,0.006931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0103913,-0.0286468) , 
5, 0.0232833, 1, 0, 0.640125,0.000926115) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000165507,-0.0285098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439397,0.00555214) , 
5, 0.0230229, 1, 0, 0.33967,-0.0050029) , 
4, 0.0232052, 1, 0, 0.501275,-0.00181388)    );
  // itree = 318
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715625,0.0132519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535565,-0.00744382) , 
4, 0.0173994, 1, 0, 0.605758,-0.000474817) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.162724,-0.0137759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.324573,0.00122663) , 
4, 0.0202846, 1, 0, 0.276827,-0.00631643) , 
2, 0.261897, 1, 0, 0.495009,-0.00244165)    );
  // itree = 319
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810935,0.00509505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0011155,-0.0305274) , 
5, 0.0295233, 1, 0, 0.654008,0.00118179) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0230637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160514,0.0127815) , 
5, 0.0287414, 1, 0, 0.102635,-0.00614232) , 
4, 0.028985, 1, 0, 0.499812,-0.000866458)    );
  // itree = 320
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780131,-0.00248105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0651967,-0.0163255) , 
2, 0.238088, 1, 0, 0.613313,-0.00838406) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755072,0.00565622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192108,-0.0119546) , 
5, 0.0271184, 1, 0, 0.456559,-0.000233214) , 
5, 0.0172657, 1, 0, 0.504576,-0.00273)    );
  // itree = 321
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.590989,-0.00205295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660196,-0.0156803) , 
7, 0.000225602, 1, 0, 0.608707,-0.00824661) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730532,0.00535438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.67966e-05,-0.0292645) , 
5, 0.031995, 1, 0, 0.45815,0.000202636) , 
5, 0.0172375, 1, 0, 0.503249,-0.00232829)    );
  // itree = 322
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.246212,-0.0221995) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657076,0.000485501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112317,-0.0130389) , 
4, 0.0289839, 1, 0, 0.509556,-0.00163498) , 
5, 0.00578109, 1, 0, 0.497716,-0.00251318)    );
  // itree = 323
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931145,0.00133114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0144795,-0.0239652) , 
0, 0.00135385, 1, 0, 0.608479,-0.00694483) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0382965,-0.021021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541343,0.00284422) , 
4, 0.0174016, 1, 0, 0.460913,0.000187404) , 
5, 0.0173033, 1, 0, 0.506572,-0.00201942)    );
  // itree = 324
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929686,-0.00438191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383253,0.0127665) , 
0, 0.00151376, 1, 0, 0.691498,0.00217088) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885513,-0.0264153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0820182,-0.00827436) , 
0, 0.00192488, 1, 0, 0.143818,-0.00619921) , 
5, 0.0282576, 1, 0, 0.504012,-0.000694427)    );
  // itree = 325
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92542,-0.0232733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415821,0.0034686) , 
0, 0.000680696, 1, 0, 0.612846,-0.00604626) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73714,0.00962881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.61222e-05,-0.0248864) , 
5, 0.0319955, 1, 0, 0.458985,0.00221996) , 
5, 0.0172439, 1, 0, 0.505316,-0.000269171)    );
  // itree = 326
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935356,0.000684287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0267685,-0.0227649) , 
0, 0.00133985, 1, 0, 0.605923,-0.00614707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0512515,-0.0188481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52884,0.00384634) , 
4, 0.0173939, 1, 0, 0.4522,0.000260332) , 
5, 0.0172375, 1, 0, 0.499196,-0.00169854)    );
  // itree = 327
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738721,0.0115248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.271291,-0.00992658) , 
2, 0.309514, 1, 0, 0.654565,0.00280809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0276698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44002,0.00782581) , 
5, 0.0229852, 1, 0, 0.343256,-0.00373905) , 
4, 0.0232137, 1, 0, 0.510596,-0.000219727)    );
  // itree = 328
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993489,0.00262408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690554,-0.00993333) , 
0, 4.57784e-05, 1, 0, 0.93271,-0.00740863) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.162374,-0.0144504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338207,0.00559767) , 
4, 0.0145066, 1, 0, 0.304166,0.000919352) , 
0, 0.000962526, 1, 0, 0.497351,-0.00164028)    );
  // itree = 329
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577152,0.0163809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.005952,-0.0131351) , 
2, 0.19047, 1, 0, 0.327738,0.00160868) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929511,-0.0177763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450269,-0.000103681) , 
0, 0.000962526, 1, 0, 0.607054,-0.00529518) , 
6, 0.0289979, 1, 0, 0.501804,-0.0026937)    );
  // itree = 330
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.25623,0.0153683) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598889,-0.00972138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476645,-0.00250705) , 
5, 0.0172657, 1, 0, 0.513748,-0.00410485) , 
4, 0.00580638, 1, 0, 0.500362,-0.00341723)    );
  // itree = 331
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848218,0.0117648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0268788) , 
5, 0.0180207, 1, 0, 0.583865,0.00334814) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535858,-0.0111982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348768,0.00354197) , 
2, 0.261825, 1, 0, 0.461179,-0.00346066) , 
4, 0.0174022, 1, 0, 0.500722,-0.0012661)    );
  // itree = 332
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953855,0.0198922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00339955,-0.0201578) , 
0, 0.00155267, 1, 0, 0.583311,0.00294343) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.78824e-05,-0.0226901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688389,0.000611658) , 
6, 0.0348023, 1, 0, 0.461038,-0.00256483) , 
4, 0.0173943, 1, 0, 0.500986,-0.000765222)    );
  // itree = 333
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65331,0.00139189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000120688,-0.0237862) , 
4, 0.0231899, 1, 0, 0.422994,-0.00205853) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871247,-0.0253675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777997,0.00869168) , 
0, 0.00179141, 1, 0, 0.822457,-0.0113523) , 
7, 0.000535657, 1, 0, 0.498926,-0.00382513)    );
  // itree = 334
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935581,-0.00169893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0118636,-0.0226485) , 
0, 0.00136139, 1, 0, 0.602925,-0.00892824) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735172,0.00425297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0279857) , 
5, 0.0320441, 1, 0, 0.448941,-0.000168189) , 
5, 0.0172657, 1, 0, 0.495424,-0.00281259)    );
  // itree = 335
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958674,0.0282209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00234541,-0.015642) , 
0, 0.000962526, 1, 0, 0.165799,0.000387856) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.376655,-0.0194791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835236,-0.0045612) , 
5, 0.0128459, 1, 0, 0.806924,-0.00713266) , 
7, 0.000145068, 1, 0, 0.504535,-0.00358558)    );
  // itree = 336
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664975,0.000646228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000143511,-0.0183145) , 
4, 0.0290079, 1, 0, 0.493466,-0.00113259) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.581767,0.00417821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594929,0.0175701) , 
1, 1.0715, 1, 0, 0.587691,0.00944016) , 
6, 0.0579806, 1, 0, 0.498742,-0.000540628)    );
  // itree = 337
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800722,0.0055764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581579,-0.018503) , 
4, 0.0174066, 1, 0, 0.679665,-0.00664225) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859437,-0.00925586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.216151,0.00395847) , 
0, 0.000961838, 1, 0, 0.338676,-0.000378224) , 
2, 0.142822, 1, 0, 0.488528,-0.00313103)    );
  // itree = 338
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932869,-0.0213789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420459,0.000513765) , 
0, 0.000684044, 1, 0, 0.616546,-0.00627177) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0340389,-0.0193184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537652,0.00393095) , 
4, 0.0174066, 1, 0, 0.455491,0.00101564) , 
5, 0.0173051, 1, 0, 0.504668,-0.00120951)    );
  // itree = 339
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993971,0.0106864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682961,-0.0100171) , 
0, 4.57697e-05, 1, 0, 0.931156,-0.00719966) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490854,-0.0137164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.26625,0.00321097) , 
2, 0.0714632, 1, 0, 0.30839,0.000161256) , 
0, 0.000962442, 1, 0, 0.501322,-0.00211915)    );
  // itree = 340
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641312,-0.000394304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279326,-0.0082776) , 
2, 0.357056, 1, 0, 0.576704,-0.00192296) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.480962,-0.0286696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.236057,-0.00203751) , 
2, 0.119016, 1, 0, 0.314022,-0.0105565) , 
3, 75.6861, 1, 0, 0.504162,-0.00430719)    );
  // itree = 341
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709179,0.002601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.48633e-05,-0.0295822) , 
4, 0.0202976, 1, 0, 0.437112,-0.002432) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704302,0.00673839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.275672,-0.0047607) , 
4, 0.0289893, 1, 0, 0.590422,0.0032708) , 
6, 0.040586, 1, 0, 0.498718,-0.000140391)    );
  // itree = 342
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.258034,-0.0202005) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569007,-0.00534509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.214207,0.00675511) , 
3, 100.923, 1, 0, 0.509476,-0.00284269) , 
5, 0.00577507, 1, 0, 0.497426,-0.00368852)    );
  // itree = 343
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226427,-0.0195368) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.49397,0.0034312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576877,-0.00630522) , 
6, 0.0521868, 1, 0, 0.507418,0.000620991) , 
5, 0.00580207, 1, 0, 0.493555,-0.000437258)    );
  // itree = 344
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.428997,-0.00482622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653384,0.0127325) , 
6, 0.0397511, 1, 0, 0.473487,-0.000582774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873885,-0.0155148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.36829,0.00354793) , 
0, 0.00191908, 1, 0, 0.57348,-0.00744923) , 
6, 0.0463871, 1, 0, 0.50105,-0.00247549)    );
  // itree = 345
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59236,0.000254607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62844,-0.0168568) , 
7, 0.000237047, 1, 0, 0.600549,-0.00610768) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0382541,-0.0207298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537847,0.00320163) , 
4, 0.0174011, 1, 0, 0.456621,-0.000302992) , 
5, 0.0172953, 1, 0, 0.501173,-0.0020998)    );
  // itree = 346
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.210429,-0.0165578) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589159,-0.00390439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.331675,0.00311753) , 
3, 75.6854, 1, 0, 0.518509,-0.0014895) , 
5, 0.0057652, 1, 0, 0.502669,-0.0020771)    );
  // itree = 347
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575837,-0.00189253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57611,-0.0114078) , 
3, 33.638, 1, 0, 0.575915,-0.00406881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.489413,-0.00473473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.235677,0.00544466) , 
2, 0.261854, 1, 0, 0.393815,-0.000435462) , 
3, 50.4571, 1, 0, 0.492473,-0.00240394)    );
  // itree = 348
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656254,-7.5204e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0192117) , 
4, 0.028985, 1, 0, 0.492895,-0.00190885) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57497,0.00830775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622521,0.0233006) , 
1, 1.06698, 1, 0, 0.599435,0.0121608) , 
6, 0.0579816, 1, 0, 0.498941,-0.00111034)    );
  // itree = 349
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953594,0.018558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00219225,-0.019829) , 
0, 0.00155337, 1, 0, 0.588687,0.0040156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585108,-0.0170841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398354,-0.000334278) , 
2, 0.119046, 1, 0, 0.455482,-0.00369117) , 
4, 0.0173943, 1, 0, 0.498834,-0.00118297)    );
  // itree = 350
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636324,-0.0157997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426163,-0.00307607) , 
6, 0.0173235, 1, 0, 0.499629,-0.00843158) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.727284,0.00175429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0296045) , 
5, 0.0323172, 1, 0, 0.50555,-0.000869998) , 
5, 0.011519, 1, 0, 0.504709,-0.00194476)    );
  // itree = 351
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.788796,0.00287264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871958,-0.0269925) , 
5, 0.0305469, 1, 0, 0.644348,0.000372771) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000267726,-0.010156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000182335,-0.0232108) , 
6, 0.031862, 1, 0, 0.000231576,-0.00591941) , 
4, 0.0318906, 1, 0, 0.499347,-0.00104369)    );
  // itree = 352
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695809,-0.0013218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359185,-0.0175506) , 
3, 88.0576, 1, 0, 0.632718,-0.00344656) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0852373,-0.0118988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358012,0.00471035) , 
5, 0.0172375, 1, 0, 0.3086,0.000355075) , 
2, 0.214279, 1, 0, 0.498707,-0.00187472)    );
  // itree = 353
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240027,-0.0130937) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649904,0.00297128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000172028,-0.0172341) , 
4, 0.0318706, 1, 0, 0.512873,0.00116538) , 
5, 0.00579442, 1, 0, 0.499275,0.000437589)    );
  // itree = 354
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932477,0.00687546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000607648,-0.00908799) , 
0, 0.00288438, 1, 0, 0.581859,0.00365035) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569213,-0.00800455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377656,0.0011291) , 
3, 59.3956, 1, 0, 0.465657,-0.00271515) , 
3, 25.1996, 1, 0, 0.500862,-0.000786638)    );
  // itree = 355
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.396652,-0.00225906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636115,0.0193708) , 
6, 0.0372824, 1, 0, 0.442109,0.00121167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.486419,-0.0151211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622279,0.000830629) , 
5, 0.0230519, 1, 0, 0.592311,-0.00459195) , 
6, 0.043495, 1, 0, 0.492367,-0.000730228)    );
  // itree = 356
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939959,0.00629752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00117546,-0.0146805) , 
0, 0.00192505, 1, 0, 0.455555,0.000593653) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903835,-0.011572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.323606,0.00429554) , 
0, 0.00192405, 1, 0, 0.58672,-0.00458932) , 
6, 0.0434887, 1, 0, 0.500987,-0.00120157)    );
  // itree = 357
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919798,-0.0117009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902987,0.0143644) , 
0, 0.00155824, 1, 0, 0.917228,-0.00738989) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00306049,-0.0177016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.170053,0.0115846) , 
4, 0.0231862, 1, 0, 0.117336,-0.000622434) , 
0, 0.00192488, 1, 0, 0.501591,-0.00387341)    );
  // itree = 358
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994388,0.0191171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.716465,-0.00941942) , 
0, 4.57784e-05, 1, 0, 0.938973,-0.00518452) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.181369,-0.0160884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.339218,0.00506429) , 
4, 0.0145089, 1, 0, 0.308319,0.000771492) , 
0, 0.000962442, 1, 0, 0.503071,-0.00106779)    );
  // itree = 359
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596473,-0.00256605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582491,-0.0176466) , 
3, 32.4362, 1, 0, 0.594743,-0.00441413) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685826,-0.00992207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369414,0.0026003) , 
2, 0.0476176, 1, 0, 0.428197,0.000386037) , 
3, 37.8477, 1, 0, 0.498577,-0.00164242)    );
  // itree = 360
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859635,0.04318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795025,0.00446349) , 
4, 0.00873532, 1, 0, 0.809992,0.00568493) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135557,-0.028825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483859,-0.00159728) , 
4, 0.00879032, 1, 0, 0.457211,-0.00266571) , 
2, 0.0238088, 1, 0, 0.497001,-0.00172384)    );
  // itree = 361
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951976,0.0109973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00251001,-0.0212941) , 
0, 0.00162981, 1, 0, 0.616412,0.000761979) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913643,-0.0148778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272708,-0.00134131) , 
0, 0.000962442, 1, 0, 0.417704,-0.00393051) , 
4, 0.0203306, 1, 0, 0.502521,-0.00192756)    );
  // itree = 362
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615568,0.00218931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.285487,-0.00786325) , 
3, 88.1897, 1, 0, 0.547706,-0.000254793) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691748,-0.0121638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0760782,0.00540665) , 
0, 0.00191952, 1, 0, 0.219186,-0.00915754) , 
2, 0.404663, 1, 0, 0.506074,-0.00138299)    );
  // itree = 363
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769801,0.00575826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44817,-0.00354469) , 
2, 0.0952148, 1, 0, 0.562114,-0.00130178) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707548,0.0088015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000324193,-0.00921571) , 
0, 0.00288733, 1, 0, 0.164248,0.00487151) , 
3, 113.537, 1, 0, 0.506014,-0.000431327)    );
  // itree = 364
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929549,0.00262226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00983614,-0.0271479) , 
0, 0.00135385, 1, 0, 0.60726,-0.00583149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0245036,-0.0190543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662447,0.00664799) , 
6, 0.034788, 1, 0, 0.455674,0.00222532) , 
5, 0.0172375, 1, 0, 0.501837,-0.000228205)    );
  // itree = 365
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723805,0.00883686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53321,-0.0131532) , 
4, 0.0174206, 1, 0, 0.610521,-0.00373831) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000737868,-0.016835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70719,0.00720753) , 
7, 0.00017745, 1, 0, 0.298073,0.0026915) , 
2, 0.237914, 1, 0, 0.496316,-0.00138811)    );
  // itree = 366
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914411,-0.00202344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558566,-0.0126729) , 
0, 0.00219881, 1, 0, 0.892963,-0.00484685) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000667678,-0.00485769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000150915,-0.0126901) , 
6, 0.0434799, 1, 0, 0.000536466,-0.000875046) , 
0, 0.00288733, 1, 0, 0.495083,-0.00307606)    );
  // itree = 367
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230467,-0.0128764) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578457,0.000838799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.270944,-0.00413454) , 
2, 0.333242, 1, 0, 0.509924,-0.00059224) , 
5, 0.0057652, 1, 0, 0.495923,-0.00113116)    );
  // itree = 368
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.497221,-0.00026874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54072,-0.0131365) , 
6, 0.0524629, 1, 0, 0.501798,-0.00171663) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660829,0.0396686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577322,0.00173454) , 
2, 0.214268, 1, 0, 0.617123,0.0113602) , 
6, 0.0579818, 1, 0, 0.508056,-0.00100702)    );
  // itree = 369
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572054,-0.00675961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54371,0.000416926) , 
3, 19.2176, 1, 0, 0.551581,-0.00139587) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817399,0.0143928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0404468,-0.000789855) , 
0, 0.00192488, 1, 0, 0.208776,0.00511064) , 
3, 100.914, 1, 0, 0.492917,-0.000282407)    );
  // itree = 370
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.257194,-0.01814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557588,-0.000579892) , 
5, 0.00576283, 1, 0, 0.543532,-0.000997868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.052998,-0.0124266) , 
3, 151.372, 1, 0, 0.504983,-0.00183895)    );
  // itree = 371
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899587,0.0573463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748846,-0.00384651) , 
4, 0.0115866, 1, 0, 0.806145,0.00432679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499793,-0.0111584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44495,-0.00367939) , 
5, 0.0168763, 1, 0, 0.459054,-0.0051335) , 
2, 0.0238042, 1, 0, 0.498461,-0.00405943)    );
  // itree = 372
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.266047,-0.0215797) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59426,0.00285393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288069,-0.00550785) , 
2, 0.309514, 1, 0, 0.517443,-0.000166153) , 
5, 0.0057652, 1, 0, 0.506207,-0.00107871)    );
  // itree = 373
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994461,0.0199148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696253,-0.0114611) , 
0, 4.57668e-05, 1, 0, 0.934391,-0.00677967) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.38326,0.00710073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164029,-0.00737741) , 
2, 0.285457, 1, 0, 0.303819,0.000459269) , 
0, 0.000962256, 1, 0, 0.49917,-0.00178335)    );
  // itree = 374
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.237946,0.0146094) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568308,-0.000407493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.120613,-0.0112856) , 
3, 125.983, 1, 0, 0.52034,-0.00119038) , 
4, 0.00580854, 1, 0, 0.505049,-0.000629021)    );
  // itree = 375
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951654,0.0105912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00366635,-0.0124609) , 
0, 0.00161814, 1, 0, 0.624771,0.00287316) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.382358,-0.0109393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430689,0.0036979) , 
5, 0.0229668, 1, 0, 0.415319,-0.00202627) , 
4, 0.0203018, 1, 0, 0.50416,5.18556e-05)    );
  // itree = 376
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569227,-0.000715139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396676,0.0150675) , 
3, 86.4838, 1, 0, 0.542359,0.00105288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0458219,-0.0150085) , 
3, 151.371, 1, 0, 0.502687,9.60302e-06)    );
  // itree = 377
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624163,-0.00486702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467451,-0.0223836) , 
7, 0.000244197, 1, 0, 0.601393,-0.00923693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761014,0.00548504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000825941,-0.0266598) , 
5, 0.0309635, 1, 0, 0.472434,0.00100295) , 
5, 0.0166827, 1, 0, 0.508133,-0.00183174)    );
  // itree = 378
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.795529,0.00792366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461552,-0.00702824) , 
2, 0.0714264, 1, 0, 0.558498,-0.00366089) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753335,0.00854765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131421) , 
0, 0.00288758, 1, 0, 0.213146,0.00431184) , 
3, 100.788, 1, 0, 0.500636,-0.0023251)    );
  // itree = 379
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7389,0.0146825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609597,-0.00468126) , 
3, 37.7635, 1, 0, 0.669658,0.00132259) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.393952,-0.00861468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268763,0.00329419) , 
3, 50.3927, 1, 0, 0.332103,-0.00346591) , 
2, 0.166629, 1, 0, 0.498583,-0.00110424)    );
  // itree = 380
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939393,0.00691703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000965304,-0.0149536) , 
0, 0.00192505, 1, 0, 0.473683,0.0012294) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869022,-0.0154275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356471,0.00352531) , 
0, 0.00192009, 1, 0, 0.565464,-0.0073322) , 
6, 0.0463876, 1, 0, 0.499577,-0.00118607)    );
  // itree = 381
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995374,0.0262388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69808,-0.0106136) , 
0, 4.57784e-05, 1, 0, 0.934226,-0.00625643) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00165114,-0.0202406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729663,0.0040267) , 
7, 0.000144606, 1, 0, 0.313028,0.000225566) , 
0, 0.000962418, 1, 0, 0.509153,-0.00182093)    );
  // itree = 382
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77969,0.000248412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0627717,-0.0127952) , 
2, 0.214155, 1, 0, 0.592693,-0.0046028) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.127721,-0.0190324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53602,0.00171322) , 
4, 0.0173997, 1, 0, 0.469597,-0.000665972) , 
5, 0.0169618, 1, 0, 0.506465,-0.0018451)    );
  // itree = 383
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980693,0.00777528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486532,-0.0199085) , 
0, 0.000961032, 1, 0, 0.748662,-0.0053165) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226524,-0.00901787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453262,0.00114183) , 
4, 0.0144992, 1, 0, 0.413309,-0.000840355) , 
2, 0.0714111, 1, 0, 0.504127,-0.00205255)    );
  // itree = 384
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630158,-0.00516597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366113,-0.0252481) , 
7, 0.000249105, 1, 0, 0.597362,-0.00939079) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74803,0.00127024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000576082,-0.0262933) , 
5, 0.0307531, 1, 0, 0.468567,-0.00155419) , 
5, 0.0165748, 1, 0, 0.504668,-0.00375073)    );
  // itree = 385
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596108,0.00870584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659689,-0.00671226) , 
6, 0.0550849, 1, 0, 0.603308,0.00366279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765033,-0.025232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423588,-0.0023801) , 
2, 0.0238037, 1, 0, 0.459513,-0.00336124) , 
3, 25.1743, 1, 0, 0.50169,-0.00130098)    );
  // itree = 386
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944035,0.012128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.001697,-0.0205537) , 
0, 0.0015718, 1, 0, 0.569713,0.00217882) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904264,-0.00840778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148884,3.02244e-06) , 
0, 0.00192488, 1, 0, 0.454931,-0.00443062) , 
4, 0.0174066, 1, 0, 0.492785,-0.00225093)    );
  // itree = 387
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485923,-0.00268737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537081,-0.0139509) , 
6, 0.0552186, 1, 0, 0.488545,-0.00259643) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623873,0.000960901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576315,0.01673) , 
6, 0.0595043, 1, 0, 0.600257,0.00842327) , 
6, 0.0579806, 1, 0, 0.494565,-0.00200259)    );
  // itree = 388
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840934,-0.0121487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638118,-0.031759) , 
3, 62.4324, 1, 0, 0.784043,-0.0126705) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.717388,0.0160207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407696,-0.00219603) , 
2, 0.0691198, 1, 0, 0.46008,-0.000400876) , 
2, 0.023795, 1, 0, 0.497305,-0.00181071)    );
  // itree = 389
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63978,0.00240183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000122404,-0.0244401) , 
4, 0.0232022, 1, 0, 0.418039,-0.000902747) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889399,-0.0105093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80215,0.0215271) , 
0, 0.00171166, 1, 0, 0.842844,0.00835773) , 
7, 0.000535427, 1, 0, 0.498818,0.000858173)    );
  // itree = 390
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692922,0.00306429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.29067e-05,-0.0235857) , 
4, 0.026103, 1, 0, 0.494861,0.000139815) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933062,0.0276133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41603,-0.0126993) , 
0, 0.000957846, 1, 0, 0.573454,-0.00645844) , 
6, 0.0521838, 1, 0, 0.507414,-0.000914051)    );
  // itree = 391
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225114,0.0274704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562703,0.008951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506827,-0.0037864) , 
4, 0.0110665, 1, 0, 0.512134,-0.00219755) , 
4, 0.00582008, 1, 0, 0.496126,-0.00148485)    );
  // itree = 392
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.804486,0.00660955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0203927) , 
4, 0.0289548, 1, 0, 0.685867,0.00291608) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000142763,-0.0290202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.194535,0.0262621) , 
4, 0.0260836, 1, 0, 0.12245,-0.00216494) , 
5, 0.0288156, 1, 0, 0.501992,0.00125786)    );
  // itree = 393
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618056,-0.000367531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937901,0.0246978) , 
7, 0.000743568, 1, 0, 0.647056,0.00154523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.022465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000289323,-0.00831721) , 
4, 0.0443018, 1, 0, 0.000158123,-0.00460275) , 
4, 0.0318825, 1, 0, 0.504636,0.000191702)    );
  // itree = 394
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596028,-0.0126614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589716,0.0139183) , 
4, 0.0145269, 1, 0, 0.591288,0.0033241) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.371686,-0.000708962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795022,-0.00961451) , 
7, 0.000535656, 1, 0, 0.45038,-0.0031113) , 
3, 25.2339, 1, 0, 0.49139,-0.00123834)    );
  // itree = 395
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994019,0.0128767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682978,-0.00905013) , 
0, 4.57697e-05, 1, 0, 0.929881,-0.00588265) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.288808,0.00422958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41915,-0.015085) , 
6, 0.0550843, 1, 0, 0.302647,0.000473593) , 
0, 0.000962526, 1, 0, 0.496685,-0.00149275)    );
  // itree = 396
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575657,-0.000201369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468138,-0.013023) , 
3, 71.9725, 1, 0, 0.558827,-0.00200557) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.772048,0.0105945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000141025,-0.0108) , 
0, 0.00288758, 1, 0, 0.213484,0.0048217) , 
3, 100.785, 1, 0, 0.501075,-0.000863854)    );
  // itree = 397
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222789,-0.0238468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730208,0.00245328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165598,-0.00789407) , 
5, 0.0276207, 1, 0, 0.517412,0.000407123) , 
5, 0.00575579, 1, 0, 0.502546,-0.000594467)    );
  // itree = 398
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937707,-0.00037132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860186,-0.0145228) , 
4, 0.022488, 1, 0, 0.915747,-0.00695047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00246336,-0.0183982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168782,0.0209737) , 
4, 0.0231899, 1, 0, 0.113783,0.000205143) , 
0, 0.00192505, 1, 0, 0.493915,-0.00318663)    );
  // itree = 399
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605526,0.00617393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477122,-0.00290834) , 
4, 0.0174066, 1, 0, 0.519899,-7.38719e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204854,-0.0106425) , 
2, 0.452367, 1, 0, 0.500312,-0.000798688)    );
  // itree = 400
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743992,0.00406836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410044,-0.0133248) , 
2, 0.142711, 1, 0, 0.575978,-0.00840883) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660499,0.00184767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0316064) , 
5, 0.0333043, 1, 0, 0.480486,3.15873e-05) , 
3, 12.6189, 1, 0, 0.495245,-0.00127298)    );
  // itree = 401
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814546,0.00764711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.026692) , 
5, 0.0283947, 1, 0, 0.642105,0.00275579) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770005,-0.0206676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145175,0.00846824) , 
0, 0.00192488, 1, 0, 0.239407,-0.0050835) , 
4, 0.0260865, 1, 0, 0.495702,-9.42269e-05)    );
  // itree = 402
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950438,0.0136145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00144507,-0.0208039) , 
0, 0.00157823, 1, 0, 0.570184,0.00222964) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545516,-0.0130007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358499,0.00291826) , 
2, 0.238037, 1, 0, 0.462702,-0.00392911) , 
4, 0.0174051, 1, 0, 0.498063,-0.00190291)    );
  // itree = 403
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871697,0.0554231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679845,-0.00440973) , 
3, 61.2934, 1, 0, 0.814617,0.00674029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674192,-0.0112375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395708,0.000375756) , 
2, 0.0918557, 1, 0, 0.46172,-0.00128269) , 
2, 0.0238088, 1, 0, 0.501294,-0.000382981)    );
  // itree = 404
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.847414,0.00655557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383977,-0.0189546) , 
4, 0.014552, 1, 0, 0.60624,-0.00634406) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757068,0.00799954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188636,-0.0084766) , 
5, 0.0271585, 1, 0, 0.453472,0.00160594) , 
5, 0.017289, 1, 0, 0.500599,-0.000846528)    );
  // itree = 405
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533519,-0.00195295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629524,-0.00760365) , 
6, 0.0463871, 1, 0, 0.560309,-0.00309597) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738155,0.0156961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000325594,-0.00651477) , 
0, 0.00288733, 1, 0, 0.165713,0.006648) , 
3, 113.528, 1, 0, 0.506089,-0.0017571)    );
  // itree = 406
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.219657,-0.0152665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662559,-0.00641939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462839,-0.000339971) , 
5, 0.0167453, 1, 0, 0.512369,-0.00144926) , 
5, 0.00577507, 1, 0, 0.497962,-0.00199821)    );
  // itree = 407
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585491,-0.0101391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560375,0.0143139) , 
3, 20.392, 1, 0, 0.580652,-0.00501283) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.296759,0.0233134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479046,-0.0015129) , 
4, 0.00872391, 1, 0, 0.460484,-6.81556e-05) , 
3, 25.1939, 1, 0, 0.496643,-0.00155601)    );
  // itree = 408
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899236,-0.00543744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000587618,-0.00303753) , 
0, 0.00288677, 1, 0, 0.413246,-0.00313292) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88515,-0.01342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.778904,0.016755) , 
0, 0.0017665, 1, 0, 0.828935,0.00253375) , 
7, 0.000534737, 1, 0, 0.493498,-0.00203893)    );
  // itree = 409
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624895,0.00607038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493287,-0.00451497) , 
4, 0.0174011, 1, 0, 0.539322,-0.000888311) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.236987,-0.0100086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179615,0.00596011) , 
3, 62.6043, 1, 0, 0.21226,-0.00576289) , 
2, 0.40475, 1, 0, 0.496165,-0.00153154)    );
  // itree = 410
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.238431,-0.0200227) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.15136,0.00406618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802678,-0.00521095) , 
7, 0.000143226, 1, 0, 0.502624,-0.00279445) , 
5, 0.0057652, 1, 0, 0.490009,-0.00348282)    );
  // itree = 411
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934736,-0.00190839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989389,0.0635426) , 
5, 0.02637, 1, 0, 0.942393,0.0025422) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170633,-0.0131279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332682,0.0004399) , 
4, 0.0144842, 1, 0, 0.301533,-0.00145318) , 
0, 0.000962026, 1, 0, 0.498737,-0.000223732)    );
  // itree = 412
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713286,-0.00597419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.40129,0.00438721) , 
5, 0.0230848, 1, 0, 0.569808,-0.00214552) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886339,0.0140935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.059553,-0.00576936) , 
0, 0.00192505, 1, 0, 0.327754,0.00408993) , 
3, 75.4901, 1, 0, 0.504909,-0.000473673)    );
  // itree = 413
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.412976,-0.00243693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659805,0.00868059) , 
6, 0.0319057, 1, 0, 0.557799,0.00332483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.113521,-0.0132381) , 
3, 125.981, 1, 0, 0.507225,0.00192859)    );
  // itree = 414
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704919,0.00461188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000208114,-0.0237987) , 
4, 0.0232137, 1, 0, 0.466479,0.000392628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889196,-0.00999375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366241,-0.000119944) , 
0, 0.00191956, 1, 0, 0.577011,-0.00546424) , 
6, 0.046384, 1, 0, 0.496322,-0.00118868)    );
  // itree = 415
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947515,0.0163005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00264564,-0.0146875) , 
0, 0.000962442, 1, 0, 0.169169,0.000319102) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81995,-0.00523065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507824,-0.0127932) , 
2, 0.452271, 1, 0, 0.804336,-0.00736612) , 
7, 0.000145068, 1, 0, 0.500213,-0.00368638)    );
  // itree = 416
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575514,0.00296184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.294927,-0.00581693) , 
3, 75.6854, 1, 0, 0.496,0.000104641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826443,-0.0258299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430568,0.0100267) , 
0, 0.0019131, 1, 0, 0.561869,-0.0104515) , 
6, 0.0550824, 1, 0, 0.50316,-0.00104274)    );
  // itree = 417
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839719,0.00279793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0280242) , 
4, 0.0232296, 1, 0, 0.66092,-0.00383652) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.141297,-0.0154269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437008,0.0101518) , 
4, 0.0231914, 1, 0, 0.352344,0.000949811) , 
5, 0.0226011, 1, 0, 0.504489,-0.00141012)    );
  // itree = 418
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95009,-0.00691451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371157,0.00302324) , 
0, 0.000962212, 1, 0, 0.576863,-0.000325212) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.449203,-0.0127581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.294743,-0.00114604) , 
4, 0.0202908, 1, 0, 0.354896,-0.00468924) , 
3, 63.0778, 1, 0, 0.497814,-0.00187937)    );
  // itree = 419
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936236,-0.00807792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220321,0.00416888) , 
0, 0.000962526, 1, 0, 0.418071,-0.000371927) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687569,-0.0183122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87362,0.00192116) , 
4, 0.0244431, 1, 0, 0.828768,-0.00492031) , 
7, 0.000534736, 1, 0, 0.497416,-0.00125065)    );
  // itree = 420
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96081,0.0202674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0037181,-0.0158705) , 
0, 0.00162981, 1, 0, 0.615903,0.00447656) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.351112,-0.0126543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451927,0.00398882) , 
5, 0.0226634, 1, 0, 0.420459,-0.00252523) , 
4, 0.0202976, 1, 0, 0.503835,0.000461723)    );
  // itree = 421
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.599953,-0.00977224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57416,0.00475318) , 
4, 0.0144796, 1, 0, 0.580441,0.000745318) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.353511,-0.00517887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783181,-0.0116891) , 
7, 0.000535426, 1, 0, 0.429557,-0.00597235) , 
3, 37.7947, 1, 0, 0.493667,-0.00311804)    );
  // itree = 422
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.345294,-0.0213214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639009,-0.000771752) , 
5, 0.0082337, 1, 0, 0.486166,-0.00864591) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.501137,-0.00131085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604541,0.00827719) , 
6, 0.05798, 1, 0, 0.507556,-0.000297305) , 
5, 0.0115118, 1, 0, 0.504463,-0.00150454)    );
  // itree = 423
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986853,0.00333529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713774,-0.010258) , 
0, 0.0001373, 1, 0, 0.938163,-0.00588618) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230282,0.00687085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449807,-0.00369921) , 
6, 0.043495, 1, 0, 0.303558,0.000853505) , 
0, 0.000962526, 1, 0, 0.499097,-0.00122318)    );
  // itree = 424
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226888,0.0219128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579814,-0.00145213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264815,-0.00937494) , 
3, 88.3079, 1, 0, 0.510467,-0.00232666) , 
4, 0.00581393, 1, 0, 0.495111,-0.0016353)    );
  // itree = 425
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929942,0.00407979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0645683,-0.00750512) , 
0, 0.00192488, 1, 0, 0.484725,0.000613567) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601735,-0.0171583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535492,-0.000496604) , 
5, 0.0289797, 1, 0, 0.559778,-0.0123962) , 
6, 0.0550842, 1, 0, 0.492477,-0.000730151)    );
  // itree = 426
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.242646,-0.0154725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661123,-0.00478592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.471041,0.00271605) , 
5, 0.0167622, 1, 0, 0.518736,0.000297493) , 
5, 0.00579096, 1, 0, 0.504761,-0.000254331)    );
  // itree = 427
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938925,0.00537438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00117877,-0.0146094) , 
0, 0.00192488, 1, 0, 0.471107,0.000550517) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879152,-0.010494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.373249,0.00328779) , 
0, 0.00192009, 1, 0, 0.578774,-0.00497227) , 
6, 0.0463876, 1, 0, 0.500669,-0.000965887)    );
  // itree = 428
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951831,0.0102286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00218503,-0.016424) , 
0, 0.00161602, 1, 0, 0.619132,0.00171486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.476773,-0.011596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346629,0.00727718) , 
2, 0.238053, 1, 0, 0.416617,-0.00217262) , 
4, 0.0202933, 1, 0, 0.503328,-0.00050812)    );
  // itree = 429
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.725563,0.00989379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531867,-0.0133766) , 
4, 0.01742, 1, 0, 0.606528,-0.0035191) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0455118,-0.0116744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510839,0.013632) , 
6, 0.0377159, 1, 0, 0.279123,0.00252643) , 
2, 0.261897, 1, 0, 0.4962,-0.00148189)    );
  // itree = 430
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.276745,-0.00546765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524764,-0.0294111) , 
4, 0.00663836, 1, 0, 0.349451,-0.0111682) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.55592,-0.000336822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.230535,-0.00730177) , 
2, 0.404638, 1, 0, 0.512709,-0.00117227) , 
4, 0.00871508, 1, 0, 0.497726,-0.00208961)    );
  // itree = 431
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939847,0.00204281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807583,-0.0193542) , 
4, 0.0243937, 1, 0, 0.91618,-0.00470748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000923296,-0.012088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740583,0.0110562) , 
7, 0.000535657, 1, 0, 0.115401,0.000275633) , 
0, 0.00192488, 1, 0, 0.496721,-0.00209726)    );
  // itree = 432
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780868,-0.00764096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502498,-0.0237226) , 
3, 75.57, 1, 0, 0.718608,-0.00742143) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.160912,-0.0112597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.434705,0.00155947) , 
4, 0.0144974, 1, 0, 0.390316,-0.000609836) , 
2, 0.0952167, 1, 0, 0.500981,-0.00290598)    );
  // itree = 433
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233338,-0.017383) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.332329,0.00700581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61731,-0.00240196) , 
6, 0.0289901, 1, 0, 0.515847,-0.000585625) , 
5, 0.00578211, 1, 0, 0.501361,-0.0011937)    );
  // itree = 434
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830167,-0.000441388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386088,-0.0189326) , 
4, 0.0144824, 1, 0, 0.601263,-0.00836218) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0382965,-0.0212577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528987,0.00266223) , 
4, 0.0174011, 1, 0, 0.452074,1.7558e-05) , 
5, 0.017289, 1, 0, 0.497416,-0.00252921)    );
  // itree = 435
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.249525,-0.0145874) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723268,0.00552109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.40097,-0.0030372) , 
2, 0.0951954, 1, 0, 0.507114,-0.00087126) , 
5, 0.00575579, 1, 0, 0.495211,-0.00140817)    );
  // itree = 436
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984677,0.00477301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696786,-0.00925219) , 
0, 0.000183113, 1, 0, 0.934795,-0.00436565) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911307,0.00700177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123696,-0.00517917) , 
0, 0.00188573, 1, 0, 0.307663,0.00056328) , 
0, 0.000962442, 1, 0, 0.50181,-0.000962607)    );
  // itree = 437
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586634,-0.00683399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444406,0.00465596) , 
5, 0.0161055, 1, 0, 0.485746,5.09856e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92108,0.0248148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414517,-0.0137196) , 
0, 0.000956104, 1, 0, 0.574395,-0.00844398) , 
6, 0.0550822, 1, 0, 0.494956,-0.000831539)    );
  // itree = 438
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595473,0.00273449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27334,-0.0109998) , 
2, 0.428441, 1, 0, 0.567979,0.000404279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.453452,-0.013199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.235166,0.00430646) , 
2, 0.237951, 1, 0, 0.361015,-0.00527706) , 
3, 63.0771, 1, 0, 0.494978,-0.00159966)    );
  // itree = 439
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932467,-0.0206236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392869,0.00332718) , 
0, 0.000680696, 1, 0, 0.601243,-0.00431484) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744002,0.00781307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000570027,-0.0276477) , 
5, 0.0307701, 1, 0, 0.461252,0.00175726) , 
5, 0.0165744, 1, 0, 0.499813,8.46692e-05)    );
  // itree = 440
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993616,0.00316833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709377,-0.00789991) , 
0, 4.57697e-05, 1, 0, 0.937435,-0.00487695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00292453,-0.023425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.716294,0.00705399) , 
7, 0.000144606, 1, 0, 0.298337,0.00165771) , 
0, 0.000962212, 1, 0, 0.494887,-0.000351976)    );
  // itree = 441
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.773027,0.00994476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465446,-0.00515209) , 
2, 0.0408005, 1, 0, 0.526492,-0.0022278) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.151443,0.0039133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519684,0.0133035) , 
6, 0.0492233, 1, 0, 0.264256,0.00615566) , 
2, 0.428441, 1, 0, 0.502893,-0.00147335)    );
  // itree = 442
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243956,0.0221443) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615677,-0.00614904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477954,0.00255651) , 
5, 0.0172657, 1, 0, 0.51906,-0.000218899) , 
4, 0.00580854, 1, 0, 0.503868,0.000327429)    );
  // itree = 443
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45784,-0.00154014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862355,0.00473247) , 
7, 0.000543647, 1, 0, 0.536,0.000263236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0561076,-0.0112454) , 
3, 151.161, 1, 0, 0.499347,-0.000345367)    );
  // itree = 444
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952488,0.013602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00219424,-0.0157315) , 
0, 0.00159176, 1, 0, 0.585638,0.00257236) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904246,-0.00805643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156089,-0.00132191) , 
0, 0.00192488, 1, 0, 0.463039,-0.00435062) , 
4, 0.0173949, 1, 0, 0.503253,-0.00207979)    );
  // itree = 445
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94635,-0.00478426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327603,0.00340853) , 
0, 0.000962026, 1, 0, 0.530008,0.00031713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.215443,-0.00695418) , 
2, 0.452367, 1, 0, 0.510445,-0.000159007)    );
  // itree = 446
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938852,0.00339335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00201339,-0.0139026) , 
0, 0.00192405, 1, 0, 0.479499,-0.000176069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84167,-0.0169657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424272,8.76349e-05) , 
0, 0.00191658, 1, 0, 0.570305,-0.0101845) , 
6, 0.049283, 1, 0, 0.499435,-0.0023734)    );
  // itree = 447
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8462,-0.000173376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0269641) , 
4, 0.0231975, 1, 0, 0.666515,-0.00424849) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0480067,-0.0205888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4468,0.0101182) , 
4, 0.0231973, 1, 0, 0.334027,0.000383588) , 
5, 0.0230519, 1, 0, 0.50055,-0.00193633)    );
  // itree = 448
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712599,0.00273324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0282167) , 
4, 0.020294, 1, 0, 0.437344,-0.00153269) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614217,0.00726581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610746,-0.0138118) , 
6, 0.0589476, 1, 0, 0.613918,0.00368801) , 
6, 0.040591, 1, 0, 0.507095,0.000529596)    );
  // itree = 449
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882404,0.0104678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0930157,-0.0168376) , 
2, 0.0713882, 1, 0, 0.500551,-0.00719015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729819,-0.00452956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.354,0.00138573) , 
5, 0.0219184, 1, 0, 0.490976,-0.00122415) , 
5, 0.0115123, 1, 0, 0.492311,-0.00205584)    );
  // itree = 450
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.437063,0.00228672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644966,0.0297085) , 
6, 0.0414209, 1, 0, 0.450471,0.00222826) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.27204,-0.0187218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640946,-0.00177232) , 
5, 0.0222114, 1, 0, 0.583631,-0.00588043) , 
6, 0.0434945, 1, 0, 0.495572,-0.000518129)    );
  // itree = 451
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954536,0.0149753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00157486,-0.0198635) , 
0, 0.00159176, 1, 0, 0.575458,0.00255336) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.539588,-0.0120254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358437,0.00200021) , 
2, 0.238037, 1, 0, 0.460451,-0.00385304) , 
4, 0.0174011, 1, 0, 0.498402,-0.00173899)    );
  // itree = 452
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.221917,-0.017437) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.329857,0.00695478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611051,-0.00525064) , 
6, 0.0290075, 1, 0, 0.510669,-0.0022139) , 
5, 0.00578211, 1, 0, 0.496067,-0.00285527)    );
  // itree = 453
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915996,-0.00941279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915361,0.0205949) , 
0, 0.00164858, 1, 0, 0.915926,-0.00565542) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00172406,-0.0158495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17092,0.011506) , 
4, 0.0231906, 1, 0, 0.113601,-0.000377019) , 
0, 0.00192488, 1, 0, 0.495198,-0.0028875)    );
  // itree = 454
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561545,0.000904634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379754,0.0397947) , 
3, 107.946, 1, 0, 0.553278,0.00126849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109248,-0.0112375) , 
3, 125.949, 1, 0, 0.502344,0.000191828)    );
  // itree = 455
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56922,0.00789494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68745,-0.00865899) , 
6, 0.0289967, 1, 0, 0.641722,-0.00225111) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.252335,-0.00592771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349608,0.00705828) , 
4, 0.0202933, 1, 0, 0.31975,0.00104735) , 
2, 0.19043, 1, 0, 0.49511,-0.000749132)    );
  // itree = 456
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583148,0.00198317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44017,-0.00562983) , 
4, 0.01742, 1, 0, 0.488431,-0.00222727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603633,0.00495632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594215,0.0218694) , 
3, 37.7071, 1, 0, 0.598665,0.0104654) , 
6, 0.0579806, 1, 0, 0.494492,-0.00152937)    );
  // itree = 457
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.249368,-0.0133021) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937738,0.00308273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127422,-0.00388417) , 
0, 0.00192488, 1, 0, 0.516657,0.000529258) , 
5, 0.00577168, 1, 0, 0.504484,0.000143946)    );
  // itree = 458
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934106,0.00134101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00848444,-0.0255018) , 
0, 0.00136139, 1, 0, 0.60427,-0.00513058) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0690956,-0.0193453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538373,0.00507517) , 
4, 0.0174161, 1, 0, 0.464037,0.001298) , 
5, 0.0172311, 1, 0, 0.506552,-0.000650981)    );
  // itree = 459
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645722,0.00468992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0224731) , 
4, 0.0231899, 1, 0, 0.414005,0.000340489) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887037,0.00129915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533764,-0.0195621) , 
5, 0.0298918, 1, 0, 0.833562,-0.00521695) , 
7, 0.000535427, 1, 0, 0.494936,-0.000731525)    );
  // itree = 460
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674477,-0.00490152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86382,-0.0174108) , 
7, 0.000535656, 1, 0, 0.7045,-0.00427957) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.447605,-0.0037592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.328793,0.00727018) , 
3, 37.8571, 1, 0, 0.377427,0.00137308) , 
2, 0.119021, 1, 0, 0.504703,-0.000826571)    );
  // itree = 461
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65791,0.00603805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000122653,-0.0221862) , 
4, 0.0231828, 1, 0, 0.4284,0.00116705) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649396,-0.0247474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868664,-0.000343351) , 
4, 0.0242337, 1, 0, 0.821958,-0.00984372) , 
7, 0.000538844, 1, 0, 0.503997,-0.000947952)    );
  // itree = 462
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961099,0.0185253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00235838,-0.0229988) , 
0, 0.00155267, 1, 0, 0.58071,0.00311447) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608226,-0.0188638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436598,-0.0013376) , 
2, 0.0476016, 1, 0, 0.460089,-0.00254669) , 
4, 0.0173994, 1, 0, 0.499515,-0.000696278)    );
  // itree = 463
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81058,5.27584e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138456,-0.0149822) , 
2, 0.166573, 1, 0, 0.591298,-0.00612905) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731133,0.00342077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.26568e-05,-0.0230996) , 
5, 0.0314864, 1, 0, 0.45008,0.000251041) , 
5, 0.0169618, 1, 0, 0.491035,-0.00159925)    );
  // itree = 464
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582027,-0.00132133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548117,0.0116469) , 
3, 50.39, 1, 0, 0.5737,0.00082958) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.463716,-0.019322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.228024,0.00393122) , 
2, 0.142533, 1, 0, 0.314668,-0.00399647) , 
3, 75.5888, 1, 0, 0.500194,-0.000539915)    );
  // itree = 465
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715626,-0.00766347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419649,0.00265568) , 
5, 0.0230496, 1, 0, 0.581468,-0.00279801) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905571,0.00981995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0704487,-0.00959133) , 
0, 0.00192505, 1, 0, 0.354974,0.00162466) , 
3, 63.0713, 1, 0, 0.500066,-0.00120851)    );
  // itree = 466
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7927,0.0133649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138538,-0.0120026) , 
4, 0.0289977, 1, 0, 0.666098,0.00387854) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.404993,-0.0319217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.32103,-0.000614034) , 
2, 0.182537, 1, 0, 0.326188,-0.00179313) , 
2, 0.166662, 1, 0, 0.494538,0.00101592)    );
  // itree = 467
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928241,-0.0242603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408408,0.000378537) , 
0, 0.000669405, 1, 0, 0.600948,-0.00607144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623907,-0.0266477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448775,0.00157768) , 
2, 0.0237914, 1, 0, 0.460991,-0.000128028) , 
5, 0.0172485, 1, 0, 0.504181,-0.00196214)    );
  // itree = 468
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925734,-0.0314007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391993,0.000217726) , 
0, 0.000684044, 1, 0, 0.594465,-0.0074962) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0532164,-0.0244352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542836,0.00542245) , 
4, 0.0173994, 1, 0, 0.4575,0.00109461) , 
5, 0.017236, 1, 0, 0.499544,-0.00154254)    );
  // itree = 469
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633438,-0.0183082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425512,-0.00122636) , 
6, 0.0172698, 1, 0, 0.497556,-0.00884149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.725986,0.00672173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000134299,-0.0297678) , 
5, 0.032322, 1, 0, 0.507881,0.00247798) , 
5, 0.0115123, 1, 0, 0.506398,0.000852447)    );
  // itree = 470
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691353,-0.00718125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392118,0.000972103) , 
5, 0.0230064, 1, 0, 0.551514,-0.00301434) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718212,0.0140578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000157216,-0.00861887) , 
0, 0.00288758, 1, 0, 0.156258,0.00578376) , 
3, 113.281, 1, 0, 0.496807,-0.0017966)    );
  // itree = 471
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986941,0.00688636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666135,-0.0113066) , 
0, 0.000183113, 1, 0, 0.930293,-0.00496368) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283946,0.00491033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383631,-0.00954204) , 
6, 0.0522008, 1, 0, 0.300518,0.000461216) , 
0, 0.000962526, 1, 0, 0.494251,-0.00120761)    );
  // itree = 472
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.410752,-0.000824291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642795,0.0155378) , 
6, 0.0372759, 1, 0, 0.45726,0.00132295) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.489244,-0.0108542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611045,-0.0019587) , 
5, 0.0230857, 1, 0, 0.584916,-0.00414962) , 
6, 0.0434887, 1, 0, 0.501047,-0.000554185)    );
  // itree = 473
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948227,0.00737776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00192341,-0.0104953) , 
0, 0.00192343, 1, 0, 0.485537,0.00201162) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859014,-0.0140387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416387,0.00283966) , 
0, 0.00191658, 1, 0, 0.572132,-0.00625774) , 
6, 0.0492854, 1, 0, 0.504882,0.000164288)    );
  // itree = 474
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.241688,0.0292249) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.501885,-0.0249921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515008,-0.000774888) , 
4, 0.00850564, 1, 0, 0.51453,-0.00112395) , 
4, 0.00585913, 1, 0, 0.500038,-0.000517519)    );
  // itree = 475
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648921,0.00129376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000122304,-0.0261836) , 
4, 0.0231907, 1, 0, 0.420726,-0.00127829) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.5566,-0.0239152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865803,-0.00309169) , 
4, 0.0237234, 1, 0, 0.819115,-0.0110602) , 
7, 0.000535426, 1, 0, 0.498641,-0.00319138)    );
  // itree = 476
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247977,-0.0126153) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611345,0.0101676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486877,-0.00339168) , 
3, 12.6158, 1, 0, 0.505527,-0.000951924) , 
5, 0.00579096, 1, 0, 0.492908,-0.00136147)    );
  // itree = 477
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931006,-0.0173766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406004,-0.000496526) , 
0, 0.000676924, 1, 0, 0.605025,-0.00520104) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0406943,-0.0273292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52728,0.00287424) , 
4, 0.0174011, 1, 0, 0.454155,-5.3187e-06) , 
5, 0.017289, 1, 0, 0.500047,-0.00158578)    );
  // itree = 478
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929488,9.6885e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0103246,-0.029706) , 
0, 0.00136809, 1, 0, 0.604262,-0.00550359) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522893,0.00579712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169847,-0.0115291) , 
3, 100.923, 1, 0, 0.453712,0.00123503) , 
5, 0.0172732, 1, 0, 0.5002,-0.000845764)    );
  // itree = 479
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517538,-0.00250705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878226,0.0094723) , 
7, 0.000534735, 1, 0, 0.595442,0.000775289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.359068,-0.00169571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774757,-0.00916894) , 
7, 0.000535426, 1, 0, 0.434766,-0.003296) , 
3, 37.7906, 1, 0, 0.502988,-0.00156736)    );
  // itree = 480
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913294,0.0558813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725439,-0.00379199) , 
4, 0.0143602, 1, 0, 0.815684,0.00508467) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920435,-0.00739787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.285728,-0.000614537) , 
0, 0.000962526, 1, 0, 0.456037,-0.00193024) , 
2, 0.0238042, 1, 0, 0.495362,-0.00116321)    );
  // itree = 481
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610296,-0.0066857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456544,0.00151262) , 
5, 0.0165681, 1, 0, 0.499758,-0.000776088) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645706,0.00709039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560718,0.0196122) , 
3, 37.8133, 1, 0, 0.600523,0.0106606) , 
6, 0.0579807, 1, 0, 0.505402,-0.000135442)    );
  // itree = 482
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.525519,-0.0167424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377744,0.00169651) , 
3, 50.1145, 1, 0, 0.461039,-0.00741859) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576102,-0.00715765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476993,-0.000311914) , 
3, 12.5995, 1, 0, 0.492076,-0.000957201) , 
5, 0.0111236, 1, 0, 0.487803,-0.00184688)    );
  // itree = 483
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513323,-0.00127418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577146,0.00843538) , 
6, 0.0550842, 1, 0, 0.520022,0.000137495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218818,-0.0113711) , 
2, 0.452367, 1, 0, 0.501395,-0.000516459)    );
  // itree = 484
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22003,0.0223884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.55206,-0.0163797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504084,-0.000379726) , 
4, 0.0110593, 1, 0, 0.508827,-0.00103247) , 
4, 0.00580854, 1, 0, 0.492677,-0.000520101)    );
  // itree = 485
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684593,0.00616106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449266,-0.00384672) , 
4, 0.0203122, 1, 0, 0.560219,0.000361995) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0294777,-0.0107491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493962,0.0277872) , 
6, 0.0405503, 1, 0, 0.249315,0.0067726) , 
2, 0.357062, 1, 0, 0.50069,0.00158945)    );
  // itree = 486
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.426102,-0.00437865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643657,0.00631778) , 
6, 0.0397367, 1, 0, 0.491088,-0.000325942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934845,0.023599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403216,-0.0103774) , 
0, 0.000957667, 1, 0, 0.560211,-0.00486701) , 
6, 0.0521819, 1, 0, 0.502528,-0.00107753)    );
  // itree = 487
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939099,-0.00626298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317732,0.00283535) , 
0, 0.000962526, 1, 0, 0.515547,-0.000306454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202937,-0.012757) , 
2, 0.452243, 1, 0, 0.495757,-0.00104745)    );
  // itree = 488
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.23543,-0.0186324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507454,0.000514539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.580573,-0.00639647) , 
6, 0.052182, 1, 0, 0.519446,-0.000774543) , 
5, 0.00576283, 1, 0, 0.505821,-0.00131126)    );
  // itree = 489
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996761,0.0378022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670674,-0.00897407) , 
0, 4.57697e-05, 1, 0, 0.930642,-0.00399811) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.166922,-0.0169714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336642,0.00429414) , 
4, 0.0144907, 1, 0, 0.305197,0.000268707) , 
0, 0.000962526, 1, 0, 0.49797,-0.0010464)    );
  // itree = 490
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595809,0.00236643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51972,-0.00719439) , 
3, 32.4339, 1, 0, 0.552402,-0.00220723) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721324,0.00945885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000160226,-0.00928069) , 
0, 0.00288725, 1, 0, 0.153923,0.00423198) , 
3, 113.537, 1, 0, 0.497962,-0.0013275)    );
  // itree = 491
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920716,-0.00975917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900943,0.0136703) , 
0, 0.00155716, 1, 0, 0.917596,-0.00506907) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00265904,-0.0148301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176631,0.0201459) , 
4, 0.0231899, 1, 0, 0.118728,0.000318017) , 
0, 0.00192405, 1, 0, 0.508819,-0.00231252)    );
  // itree = 492
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957863,0.0270966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0378548,-0.004722) , 
0, 0.000948518, 1, 0, 0.296962,0.00333723) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.274726,-0.0209563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636185,-0.00217601) , 
4, 0.0144901, 1, 0, 0.583053,-0.00358193) , 
6, 0.0260911, 1, 0, 0.493534,-0.00141691)    );
  // itree = 493
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.536831,-0.0206648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586563,-0.00119652) , 
5, 0.0116158, 1, 0, 0.578757,-0.00333244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.117498,-0.00357463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773108,0.0075518) , 
7, 0.000155749, 1, 0, 0.401986,0.00273642) , 
3, 50.4571, 1, 0, 0.49874,-0.000585316)    );
  // itree = 494
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958921,0.0150835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00265224,-0.0181246) , 
0, 0.000962418, 1, 0, 0.162349,-0.000183779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914778,-0.00389227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.200624,-0.0175685) , 
0, 0.00220226, 1, 0, 0.800156,-0.00686542) , 
7, 0.000143227, 1, 0, 0.494669,-0.00366515)    );
  // itree = 495
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.26189,0.026191) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585649,0.00164583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279059,-0.00897433) , 
3, 88.1779, 1, 0, 0.520435,-0.000636243) , 
4, 0.0058047, 1, 0, 0.506986,2.09317e-05)    );
  // itree = 496
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923383,-0.00873653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903126,0.0106356) , 
0, 0.00164876, 1, 0, 0.921148,-0.00529097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00146794,-0.0176757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.174802,0.015987) , 
4, 0.0231963, 1, 0, 0.117395,0.000248444) , 
0, 0.00192368, 1, 0, 0.499438,-0.00238457)    );
  // itree = 497
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678851,-0.0129378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573891,0.0111535) , 
5, 0.00752768, 1, 0, 0.58424,0.00279305) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.720176,-0.0193805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433492,-0.00100098) , 
4, 0.0194945, 1, 0, 0.462423,-0.00236107) , 
4, 0.01742, 1, 0, 0.503045,-0.000642338)    );
  // itree = 498
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706745,0.00215835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145184,-0.0107627) , 
5, 0.0287065, 1, 0, 0.535815,0.0001593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0550512,-0.0121962) , 
3, 151.371, 1, 0, 0.498146,-0.000631452)    );
  // itree = 499
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677206,0.00388313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369722,-0.0051296) , 
4, 0.0231963, 1, 0, 0.544847,7.3759e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222353,-0.016745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.222623,-0.000821792) , 
2, 0.441072, 1, 0, 0.222521,-0.00834893) , 
2, 0.404663, 1, 0, 0.504016,-0.000993181)    );
  // itree = 500
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737686,0.0102456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384295,-0.00330343) , 
2, 0.190369, 1, 0, 0.589848,0.00135675) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.36136,-0.00234581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800838,-0.00932862) , 
7, 0.000540997, 1, 0, 0.438714,-0.00331179) , 
3, 37.843, 1, 0, 0.504089,-0.00129237)    );
  // itree = 501
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701744,0.00564357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.79414e-05,-0.0270858) , 
5, 0.0266494, 1, 0, 0.488828,0.00192486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828356,-0.0145542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42988,0.0042875) , 
0, 0.00191658, 1, 0, 0.561132,-0.006032) , 
6, 0.052182, 1, 0, 0.500558,0.000633952)    );
  // itree = 502
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718071,0.0200583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416191,-0.00333504) , 
2, 0.16656, 1, 0, 0.586983,0.00270685) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.551511,-0.00490199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183597,0.00453981) , 
3, 108.453, 1, 0, 0.48708,-0.00241166) , 
3, 12.5841, 1, 0, 0.501998,-0.00164733)    );
  // itree = 503
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943716,0.00586535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.12189,-0.00309343) , 
0, 0.00192488, 1, 0, 0.545015,0.00191863) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694945,-0.00642308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000953491,-0.00279364) , 
0, 0.00288677, 1, 0, 0.225156,-0.00584743) , 
2, 0.380941, 1, 0, 0.494032,0.000680781)    );
  // itree = 504
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815678,0.00690019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0187385) , 
4, 0.0289954, 1, 0, 0.694917,0.00299004) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000278106,-0.0293416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.199434,0.0211921) , 
4, 0.0261255, 1, 0, 0.122198,-0.00182855) , 
5, 0.0287195, 1, 0, 0.508502,0.00142163)    );
  // itree = 505
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709679,0.00381771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458024,-0.00769177) , 
4, 0.0203044, 1, 0, 0.579038,-0.00154921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787979,0.00965561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.084196,-0.00103604) , 
0, 0.00192505, 1, 0, 0.26276,0.00392381) , 
2, 0.309429, 1, 0, 0.497665,-0.000141088)    );
  // itree = 506
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716882,0.00234749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502387,-0.0145433) , 
3, 62.9753, 1, 0, 0.651096,-0.00267593) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.214015,-0.00125769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814798,0.0114433) , 
7, 0.00055283, 1, 0, 0.334282,0.00227055) , 
2, 0.166629, 1, 0, 0.495797,-0.000251206)    );
  // itree = 507
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499919,-0.014989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.661634,0.00266769) , 
5, 0.00818149, 1, 0, 0.650326,0.000720042) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0191343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.162622,0.0133183) , 
5, 0.0288554, 1, 0, 0.105146,-0.00302607) , 
4, 0.0289923, 1, 0, 0.496,-0.000340388)    );
  // itree = 508
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844233,0.000754051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0264916,-0.0296962) , 
5, 0.0231811, 1, 0, 0.634564,-0.00364468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0203838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441671,0.0126182) , 
5, 0.0230519, 1, 0, 0.339191,0.000863163) , 
4, 0.0231914, 1, 0, 0.497973,-0.00156009)    );
  // itree = 509
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582843,-0.00779385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577351,0.00424332) , 
3, 15.0239, 1, 0, 0.578894,9.66686e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895793,0.00710983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19617,-0.0121558) , 
0, 0.000962526, 1, 0, 0.355552,-0.0045798) , 
3, 63.0766, 1, 0, 0.499028,-0.00157562)    );
  // itree = 510
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627677,0.00739483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489577,-0.00345344) , 
4, 0.017441, 1, 0, 0.537123,2.73339e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689049,-0.0101979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0828232,-0.00735285) , 
0, 0.00192505, 1, 0, 0.221046,-0.00838763) , 
2, 0.404614, 1, 0, 0.498324,-0.00100561)    );
  // itree = 511
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.500542,-0.00453685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131231,0.025565) , 
3, 113.537, 1, 0, 0.447865,-0.000613049) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60207,-0.00764922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443441,-0.0140296) , 
2, 0.404278, 1, 0, 0.579083,-0.00802585) , 
6, 0.043495, 1, 0, 0.49247,-0.00313289)    );
  // itree = 512
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657678,-0.0101205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534007,-0.00206287) , 
5, 0.0169696, 1, 0, 0.572516,-0.00313108) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.422323,-0.00306151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204023,0.018357) , 
2, 0.214229, 1, 0, 0.31593,0.00253403) , 
3, 75.3806, 1, 0, 0.500383,-0.00153847)    );
  // itree = 513
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929288,-0.0121564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160053,0.00498724) , 
0, 0.00192405, 1, 0, 0.586203,-0.00556753) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533331,0.00516784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.240947,-0.00547432) , 
2, 0.333327, 1, 0, 0.463132,0.00102496) , 
3, 25.1932, 1, 0, 0.499825,-0.000940552)    );
  // itree = 514
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222429,0.0109219) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584528,-0.00119575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.199803,-0.0109457) , 
3, 100.922, 1, 0, 0.519741,-0.00190237) , 
4, 0.00580221, 1, 0, 0.502296,-0.00147898)    );
  // itree = 515
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535395,0.0139943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0167605,-0.0120296) , 
2, 0.0952032, 1, 0, 0.1794,-0.000508744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751967,-0.00197185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822513,-0.00955532) , 
4, 0.018203, 1, 0, 0.800289,-0.00892016) , 
7, 0.000155749, 1, 0, 0.497356,-0.00481621)    );
  // itree = 516
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.182933,-0.0018193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792208,-0.00659212) , 
7, 0.000161184, 1, 0, 0.417504,-0.00256573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883609,-0.00696432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794784,0.0154451) , 
0, 0.00179141, 1, 0, 0.836761,0.00539879) , 
7, 0.000534736, 1, 0, 0.498027,-0.00103605)    );
  // itree = 517
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672704,0.00512926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713186,-0.0140133) , 
6, 0.0289901, 1, 0, 0.695827,-0.00453365) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0965679,-0.00845317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544523,0.0041431) , 
6, 0.0319112, 1, 0, 0.372997,0.000648573) , 
2, 0.119021, 1, 0, 0.498356,-0.00136375)    );
  // itree = 518
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857353,-0.0019535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315993,-0.0114831) , 
2, 0.09518, 1, 0, 0.597167,-0.00679128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750975,0.00584782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188114,-0.00987675) , 
5, 0.0271585, 1, 0, 0.453298,0.000576294) , 
5, 0.017289, 1, 0, 0.497097,-0.00166667)    );
  // itree = 519
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865253,0.00133341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.088801,-0.0214905) , 
2, 0.0713501, 1, 0, 0.479228,-0.00850906) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578898,0.00284609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.307243,-0.00848812) , 
3, 75.6915, 1, 0, 0.500385,-0.00034667) , 
5, 0.0115387, 1, 0, 0.497331,-0.00152517)    );
  // itree = 520
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69832,0.00394449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000144544,-0.0232639) , 
4, 0.0231956, 1, 0, 0.468569,0.000471743) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865897,-0.0134495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.354494,0.00408397) , 
0, 0.00191956, 1, 0, 0.562077,-0.00615559) , 
6, 0.0463876, 1, 0, 0.494599,-0.00137314)    );
  // itree = 521
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676379,0.00857118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512438,-0.000773102) , 
4, 0.0174155, 1, 0, 0.57125,0.00132628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741553,-0.00555106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0015857,0.0173338) , 
0, 0.00288758, 1, 0, 0.256762,-0.00364205) , 
2, 0.333232, 1, 0, 0.502485,0.000239931)    );
  // itree = 522
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987336,0.0315501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488948,-0.00861955) , 
0, 0.000958289, 1, 0, 0.73924,0.0022256) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87811,-0.0114916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250133,0.000951104) , 
0, 0.000962256, 1, 0, 0.385676,-0.00241476) , 
2, 0.0952352, 1, 0, 0.500908,-0.000902387)    );
  // itree = 523
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.531178,-0.00572574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478066,0.00265251) , 
4, 0.0144974, 1, 0, 0.491038,0.000307506) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596812,-0.0157237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582182,0.00208079) , 
2, 0.214059, 1, 0, 0.58941,-0.00875362) , 
6, 0.0579806, 1, 0, 0.496517,-0.000197205)    );
  // itree = 524
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774675,0.00754223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132773,-0.00923665) , 
4, 0.028902, 1, 0, 0.635547,0.00237396) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823841,-0.00641849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0937972,-0.0014325) , 
0, 0.00192505, 1, 0, 0.318869,-0.00398368) , 
2, 0.190406, 1, 0, 0.493324,-0.000481321)    );
  // itree = 525
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939605,0.00667108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000967294,-0.0107136) , 
0, 0.00192488, 1, 0, 0.455801,0.00153449) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.41474,-0.0134533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659239,0.00197938) , 
4, 0.0231721, 1, 0, 0.585287,-0.00180982) , 
6, 0.0434945, 1, 0, 0.500241,0.000386712)    );
  // itree = 526
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95936,0.0194798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00259976,-0.0119405) , 
0, 0.00162981, 1, 0, 0.607141,0.00558741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.389202,-0.0112792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420157,0.0077955) , 
5, 0.0230462, 1, 0, 0.410033,-0.000543882) , 
4, 0.0202992, 1, 0, 0.494612,0.00208706)    );
  // itree = 527
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753759,0.0129995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55056,-0.00817491) , 
3, 50.388, 1, 0, 0.66875,0.000778835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.397239,-0.0116857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288681,0.0014478) , 
3, 37.7963, 1, 0, 0.331244,-0.00361734) , 
2, 0.166616, 1, 0, 0.498199,-0.00144267)    );
  // itree = 528
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.26821,-0.00549469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462207,-0.0312694) , 
4, 0.00662531, 1, 0, 0.331426,-0.0112282) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695484,0.00231609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165058,-0.00930654) , 
5, 0.0282468, 1, 0, 0.520587,0.000112385) , 
4, 0.00870241, 1, 0, 0.502557,-0.000968538)    );
  // itree = 529
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.367865,0.00664688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618627,-0.00209013) , 
6, 0.0290116, 1, 0, 0.525334,-0.000171926) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0885364,-0.00464301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461386,-0.0105608) , 
6, 0.0463694, 1, 0, 0.213422,-0.00767933) , 
2, 0.428558, 1, 0, 0.495618,-0.000887139)    );
  // itree = 530
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716055,0.00051133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000147661,-0.030909) , 
4, 0.0202976, 1, 0, 0.434933,-0.00274361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582404,0.000156013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64314,0.0124504) , 
1, 1.2924, 1, 0, 0.607041,0.003492) , 
6, 0.040591, 1, 0, 0.503741,-0.00025065)    );
  // itree = 531
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.2349,0.035257) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576421,-0.0151386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503902,-0.00190947) , 
4, 0.013676, 1, 0, 0.515551,-0.00229912) , 
4, 0.0058132, 1, 0, 0.500095,-0.00148518)    );
  // itree = 532
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552849,0.0206688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0255902,-0.010213) , 
2, 0.0714125, 1, 0, 0.162854,-0.000556373) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888164,-0.0166209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756132,-0.00100681) , 
2, 0.118992, 1, 0, 0.811806,-0.00583867) , 
7, 0.000143225, 1, 0, 0.499945,-0.0033002)    );
  // itree = 533
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603536,-0.024679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907231,-0.00295761) , 
5, 0.00707209, 1, 0, 0.891036,-0.00496137) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0021662,0.0557061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000112823,-0.0112428) , 
4, 0.0202924, 1, 0, 0.000768158,0.000146402) , 
0, 0.00288664, 1, 0, 0.496102,-0.0026955)    );
  // itree = 534
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799327,-0.00201996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0311908) , 
5, 0.0286819, 1, 0, 0.647671,-0.00422861) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000146797,-0.0199373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712488,0.0169388) , 
6, 0.0521841, 1, 0, 0.243407,0.00272497) , 
4, 0.0260753, 1, 0, 0.501939,-0.00172193)    );
  // itree = 535
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52058,0.00391326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890142,0.0186396) , 
7, 0.000543647, 1, 0, 0.594611,0.0039657) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569691,-0.0052967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.325948,0.00216041) , 
3, 70.8857, 1, 0, 0.462807,-0.00128116) , 
3, 25.2309, 1, 0, 0.50194,0.000276628)    );
  // itree = 536
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244801,-0.0138688) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672189,0.00364427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117063,-0.00873147) , 
4, 0.0289572, 1, 0, 0.520664,0.00090852) , 
5, 0.00581198, 1, 0, 0.507334,0.000404905)    );
  // itree = 537
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838711,0.0208735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51641,-0.0046607) , 
2, 0.0475922, 1, 0, 0.589023,-0.00169129) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851271,0.00616885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131581) , 
0, 0.00384977, 1, 0, 0.407277,0.00312088) , 
3, 50.4579, 1, 0, 0.505936,0.000508632)    );
  // itree = 538
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93504,0.00149295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929614,0.0312297) , 
0, 0.00164876, 1, 0, 0.934457,0.00477996) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.078892,-0.0136552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.14546,0.0125896) , 
4, 0.0260777, 1, 0, 0.118484,-0.000812627) , 
0, 0.00192505, 1, 0, 0.504538,0.00183334)    );
  // itree = 539
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978043,0.000573052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701692,-0.0119769) , 
0, 0.000274618, 1, 0, 0.933652,-0.00533842) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00317084,-0.0181309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732913,0.0043724) , 
7, 0.000151443, 1, 0, 0.309202,0.000953559) , 
0, 0.000962212, 1, 0, 0.504245,-0.00101171)    );
  // itree = 540
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.423942,-0.00090425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602182,-0.00508876) , 
6, 0.0386658, 1, 0, 0.497798,-0.00203988) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672991,0.0234114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584272,0.00988989) , 
2, 0.214104, 1, 0, 0.627953,0.0111101) , 
6, 0.0579815, 1, 0, 0.5047,-0.00134256)    );
  // itree = 541
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934107,-0.0195229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398282,0.00236523) , 
0, 0.000680696, 1, 0, 0.596002,-0.00367252) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.754466,0.00730226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19878,-0.00521423) , 
5, 0.0270677, 1, 0, 0.461775,0.0018133) , 
5, 0.0172311, 1, 0, 0.503238,0.000118702)    );
  // itree = 542
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267652,-0.0243841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651782,-0.00600764) , 
5, 0.00636, 1, 0, 0.576474,-0.00803408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530195,0.00267629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176526,-0.0100434) , 
3, 100.916, 1, 0, 0.462633,2.29885e-05) , 
5, 0.0166649, 1, 0, 0.49505,-0.00227129)    );
  // itree = 543
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.406197,-0.0157502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563193,-0.00357973) , 
4, 0.00871336, 1, 0, 0.54835,-0.00298657) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684799,0.00582159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131228) , 
0, 0.00384967, 1, 0, 0.254751,0.00340304) , 
2, 0.357056, 1, 0, 0.493133,-0.00178488)    );
  // itree = 544
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.2363,0.0320381) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.557112,0.00274664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0801727,-0.0127446) , 
3, 138.564, 1, 0, 0.51699,0.000618085) , 
4, 0.00581561, 1, 0, 0.501366,0.00118013)    );
  // itree = 545
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93237,-0.00129819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0105249,-0.0256634) , 
0, 0.00135385, 1, 0, 0.600482,-0.00488117) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.047345,-0.0182651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536201,0.0015627) , 
4, 0.01742, 1, 0, 0.460374,-0.000210425) , 
5, 0.0173015, 1, 0, 0.504151,-0.0016698)    );
  // itree = 546
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846936,-0.000882598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0215565,-0.0313857) , 
5, 0.0231811, 1, 0, 0.64213,-0.00450445) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0207068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443705,0.0136458) , 
5, 0.0229852, 1, 0, 0.343691,0.00093637) , 
4, 0.0231528, 1, 0, 0.503265,-0.00197281)    );
  // itree = 547
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.542781,0.00217593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0653564,-0.0147469) , 
2, 0.357034, 1, 0, 0.45993,-0.000554388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605492,-0.0264121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576753,-0.00358716) , 
6, 0.0451454, 1, 0, 0.580259,-0.0057014) , 
6, 0.0434887, 1, 0, 0.501232,-0.00232107)    );
  // itree = 548
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929742,-0.00119585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918175,0.0237372) , 
0, 0.00146556, 1, 0, 0.9276,0.00376827) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0692999,-0.0137928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142946,0.00900391) , 
4, 0.0261255, 1, 0, 0.111994,-0.00164079) , 
0, 0.00192505, 1, 0, 0.494313,0.000894727)    );
  // itree = 549
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626806,-0.00396473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385254,0.00801079) , 
5, 0.0145969, 1, 0, 0.457405,0.000938989) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.241092,-0.020715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649755,-0.000482284) , 
5, 0.022235, 1, 0, 0.584658,-0.00536842) , 
6, 0.0434961, 1, 0, 0.500977,-0.00122069)    );
  // itree = 550
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.258842,0.0339594) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4705,-0.0235276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517672,-0.00232465) , 
4, 0.00843593, 1, 0, 0.51585,-0.00192213) , 
4, 0.00580854, 1, 0, 0.501577,-0.00108959)    );
  // itree = 551
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.333039,-0.0158582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629967,0.00192353) , 
5, 0.0082379, 1, 0, 0.472632,-0.00503144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675011,-0.00987663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428702,0.00249326) , 
2, 0.095255, 1, 0, 0.502344,-9.62731e-05) , 
5, 0.011532, 1, 0, 0.497995,-0.000818767)    );
  // itree = 552
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383282,-0.0193727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591144,0.00123038) , 
5, 0.00560007, 1, 0, 0.582491,-5.57142e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.749558,-0.00757365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000930265,0.00370295) , 
0, 0.00288725, 1, 0, 0.264221,-0.00619378) , 
2, 0.309454, 1, 0, 0.500755,-0.00163206)    );
  // itree = 553
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653387,-0.00511506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533418,0.00467951) , 
5, 0.0173575, 1, 0, 0.572993,0.000400079) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.286607,-0.00103679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715671,-0.00974843) , 
7, 0.000535425, 1, 0, 0.358333,-0.00317687) , 
3, 63.0778, 1, 0, 0.49657,-0.000873393)    );
  // itree = 554
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.728771,0.0139691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744256,-0.0143697) , 
6, 0.0289967, 1, 0, 0.737008,-0.002463) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.236479,-0.00734187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451246,0.00468221) , 
4, 0.0145256, 1, 0, 0.413756,0.00131211) , 
2, 0.0714125, 1, 0, 0.50355,0.000263449)    );
  // itree = 555
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233849,-0.0216411) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558674,0.000546698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0814651,-0.0112748) , 
3, 138.565, 1, 0, 0.517148,-0.000431553) , 
5, 0.0057652, 1, 0, 0.502557,-0.00108268)    );
  // itree = 556
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597543,-0.00086544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.263175,-0.00935934) , 
2, 0.404671, 1, 0, 0.559681,-0.00142086) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.747812,0.00893757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000144405,-0.00825811) , 
0, 0.00288733, 1, 0, 0.217754,0.00477116) , 
3, 100.922, 1, 0, 0.502318,-0.000382057)    );
  // itree = 557
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89225,0.0278859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425878,-0.00817233) , 
4, 0.0232319, 1, 0, 0.780051,0.00406914) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164306,-0.0135145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456179,-0.000943856) , 
5, 0.011219, 1, 0, 0.425757,-0.00189661) , 
2, 0.0476074, 1, 0, 0.49517,-0.000727801)    );
  // itree = 558
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.728194,0.0105095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485142,-0.000394692) , 
4, 0.0203047, 1, 0, 0.607366,0.00253257) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.317319,-0.010699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.178793,0.0125322) , 
3, 75.7058, 1, 0, 0.269402,-0.00480469) , 
2, 0.285706, 1, 0, 0.504431,0.000297828)    );
  // itree = 559
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575441,0.00607393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683347,0.0488542) , 
6, 0.0492854, 1, 0, 0.59886,0.00556662) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.314089,0.00658546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.574915,-0.00427829) , 
6, 0.0290115, 1, 0, 0.478535,-0.00132697) , 
3, 12.6014, 1, 0, 0.496923,-0.000273516)    );
  // itree = 560
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917571,-0.00196413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86433,-0.0213622) , 
5, 0.0277564, 1, 0, 0.913748,-0.00514146) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000727182,-0.0113988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756303,0.013593) , 
7, 0.000535426, 1, 0, 0.115051,0.000420305) , 
0, 0.00192368, 1, 0, 0.495034,-0.00222573)    );
  // itree = 561
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.209752,0.00572825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0856377,-0.0183168) , 
3, 63.0764, 1, 0, 0.15762,-0.001297) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83871,0.00133689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539392,0.0151646) , 
3, 113.371, 1, 0, 0.817951,0.00241516) , 
7, 0.000144607, 1, 0, 0.497489,0.000613633)    );
  // itree = 562
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583578,-0.00561317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.244856,0.00599704) , 
2, 0.309454, 1, 0, 0.497342,-0.00158873) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559242,-0.0227663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55686,-0.000423393) , 
3, 36.958, 1, 0, 0.558,-0.0165701) , 
6, 0.05798, 1, 0, 0.50075,-0.00243039)    );
  // itree = 563
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613409,0.00794494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492161,-0.00454429) , 
4, 0.0174155, 1, 0, 0.533853,-0.00040401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0974617,0.0180508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499696,0.0231425) , 
6, 0.0463366, 1, 0, 0.231521,0.00923503) , 
2, 0.428467, 1, 0, 0.50513,0.00051173)    );
  // itree = 564
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811324,0.00829278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00140703,-0.029134) , 
5, 0.0295344, 1, 0, 0.660881,0.00246501) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0193252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154185,0.0201334) , 
5, 0.0288085, 1, 0, 0.099725,-0.00304936) , 
4, 0.0289936, 1, 0, 0.501157,0.000895436)    );
  // itree = 565
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.336371,-0.00226752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597317,-0.0115175) , 
6, 0.028988, 1, 0, 0.437599,-0.00372172) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64597,-0.000225301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518687,0.0126787) , 
2, 0.285645, 1, 0, 0.60237,0.00335731) , 
6, 0.040586, 1, 0, 0.503675,-0.000882926)    );
  // itree = 566
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940339,-0.00301178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.320607,0.00341842) , 
0, 0.000962212, 1, 0, 0.516991,0.000612243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202134,-0.00975711) , 
2, 0.452367, 1, 0, 0.497147,-1.68731e-06)    );
  // itree = 567
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822903,0.00974136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479005,-0.00582903) , 
2, 0.0714068, 1, 0, 0.581871,-0.00220156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.088262,-0.00713444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750275,0.00758925) , 
7, 0.000145066, 1, 0, 0.358918,0.00195417) , 
3, 63.0713, 1, 0, 0.501488,-0.000703267)    );
  // itree = 568
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918465,-0.0224318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413317,0.00324434) , 
0, 0.000684044, 1, 0, 0.606477,-0.00501563) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0557252,-0.0261931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535927,0.00349834) , 
4, 0.0174155, 1, 0, 0.45663,-0.000298825) , 
5, 0.0172311, 1, 0, 0.501913,-0.00172422)    );
  // itree = 569
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948309,0.0132996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00354786,-0.0100857) , 
0, 0.00159176, 1, 0, 0.581728,0.00390681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912155,-0.0115951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311442,0.000767806) , 
0, 0.000962442, 1, 0, 0.466127,-0.0023909) , 
4, 0.01742, 1, 0, 0.503824,-0.00033728)    );
  // itree = 570
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702781,-0.00125034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.50872e-05,-0.0369111) , 
4, 0.0202992, 1, 0, 0.433547,-0.00342764) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706743,0.00512564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291153,-0.00488718) , 
4, 0.0289874, 1, 0, 0.598235,0.00182428) , 
6, 0.040586, 1, 0, 0.499296,-0.00133088)    );
  // itree = 571
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676399,0.0096122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.243273,-0.00618863) , 
2, 0.119004, 1, 0, 0.417351,-0.000970456) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872542,-0.0156572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790034,0.00481951) , 
0, 0.00163306, 1, 0, 0.828991,-0.00769842) , 
7, 0.000538845, 1, 0, 0.496357,-0.00226174)    );
  // itree = 572
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.795922,-0.00273385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463095,-0.0265656) , 
3, 88.0899, 1, 0, 0.744735,-0.00487187) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895684,0.0036722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.105374,-0.00652099) , 
0, 0.00192484, 1, 0, 0.412286,0.000407739) , 
2, 0.0714264, 1, 0, 0.502884,-0.00103105)    );
  // itree = 573
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929806,-0.0041528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385109,0.0121412) , 
0, 0.0015143, 1, 0, 0.692172,0.00108932) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813727,-0.0122772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000127534,-0.00910487) , 
0, 0.00384967, 1, 0, 0.125288,-0.00375128) , 
5, 0.0287065, 1, 0, 0.508775,-0.000476703)    );
  // itree = 574
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.418632,-0.00240629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649119,0.0161774) , 
6, 0.039346, 1, 0, 0.449463,1.62197e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928128,0.00638516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442531,-0.0131728) , 
0, 0.000959052, 1, 0, 0.59561,-0.00804492) , 
6, 0.0434886, 1, 0, 0.498112,-0.00266718)    );
  // itree = 575
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233819,0.01614) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560003,6.70514e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110096,-0.0153575) , 
3, 126.152, 1, 0, 0.510549,-0.00104792) , 
4, 0.00580706, 1, 0, 0.494806,-0.000573234)    );
  // itree = 576
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939151,-0.00263738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774864,-0.0182568) , 
4, 0.0260408, 1, 0, 0.919438,-0.00554494) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00154773,-0.0134291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41833,0.0160533) , 
6, 0.0492966, 1, 0, 0.113742,0.000547614) , 
0, 0.00192505, 1, 0, 0.49884,-0.00236444)    );
  // itree = 577
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851306,0.0203433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0249051) , 
5, 0.0182857, 1, 0, 0.578112,0.00531315) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596829,-0.0108245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411895,0.00255856) , 
2, 0.119011, 1, 0, 0.468047,-0.000833844) , 
4, 0.0173994, 1, 0, 0.504597,0.00120744)    );
  // itree = 578
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68717,0.0118794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164741,0.0211071) , 
6, 0.0144494, 1, 0, 0.31675,0.00617673) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580224,-0.0116058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483251,0.00117768) , 
5, 0.0172594, 1, 0, 0.510985,-0.00159356) , 
4, 0.00870463, 1, 0, 0.491878,-0.000829175)    );
  // itree = 579
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872358,-0.00661116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0880229,-0.0134905) , 
2, 0.0713327, 1, 0, 0.493767,-0.00878294) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729655,0.00256351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000196273,-0.0239899) , 
5, 0.0323597, 1, 0, 0.506471,0.000550698) , 
5, 0.0115605, 1, 0, 0.504691,-0.000757519)    );
  // itree = 580
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679189,0.00714242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.289901,-0.00496697) , 
4, 0.0174342, 1, 0, 0.454859,0.000583148) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591411,0.00746336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586814,-0.00874536) , 
1, 1.09881, 1, 0, 0.587675,-0.00518813) , 
6, 0.0434887, 1, 0, 0.49946,-0.00135489)    );
  // itree = 581
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.335305,-0.0228662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67949,0.0195743) , 
5, 0.008589, 1, 0, 0.467422,-0.00827742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.728953,0.00210432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000128239,-0.0185567) , 
5, 0.0315388, 1, 0, 0.501095,0.000426939) , 
5, 0.0112673, 1, 0, 0.496421,-0.000781211)    );
  // itree = 582
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816811,-0.0240745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715218,0.00929374) , 
2, 0.00453404, 1, 0, 0.722846,0.00177609) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846811,-0.00616587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000441841,-0.0036613) , 
0, 0.00288758, 1, 0, 0.394241,-0.0043357) , 
2, 0.0952352, 1, 0, 0.504764,-0.00228006)    );
  // itree = 583
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485914,-0.00305393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553853,-0.0112469) , 
6, 0.0497825, 1, 0, 0.494177,-0.00286545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906512,0.0308296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400019,-0.00470266) , 
0, 0.000955722, 1, 0, 0.555277,0.00402763) , 
6, 0.0550822, 1, 0, 0.500766,-0.00212217)    );
  // itree = 584
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655515,0.00833318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512453,-0.00245399) , 
4, 0.0174011, 1, 0, 0.562097,0.000536111) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706072,-0.00923079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00141169,0.0289082) , 
0, 0.00288758, 1, 0, 0.225936,-0.00673552) , 
2, 0.380859, 1, 0, 0.507715,-0.00064025)    );
  // itree = 585
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955964,0.00881276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00340441,-0.0105804) , 
0, 0.00162981, 1, 0, 0.610193,0.00211539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.392338,-0.0101208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415147,0.000224149) , 
5, 0.0230624, 1, 0, 0.407928,-0.00264294) , 
4, 0.0203122, 1, 0, 0.494664,-0.000602446)    );
  // itree = 586
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961271,0.019875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.328247,-0.0141976) , 
2, 0.0237834, 1, 0, 0.498885,-0.00709531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736871,0.00285434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188272,-0.00973199) , 
5, 0.0271286, 1, 0, 0.502363,-0.000211972) , 
5, 0.0115307, 1, 0, 0.501868,-0.00119125)    );
  // itree = 587
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654953,-0.00676725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789367,0.0495669) , 
5, 0.0215302, 1, 0, 0.666157,-0.00274142) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711524,0.0127908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0255233) , 
5, 0.0317477, 1, 0, 0.345649,0.00256902) , 
5, 0.022607, 1, 0, 0.501243,-8.98371e-06)    );
  // itree = 588
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595677,-0.00458868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560049,-0.0159276) , 
3, 32.4398, 1, 0, 0.591049,-0.00390448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713503,-0.0096754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375623,0.00382864) , 
2, 0.0476083, 1, 0, 0.436997,0.00104411) , 
3, 37.8469, 1, 0, 0.502958,-0.00107474)    );
  // itree = 589
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517085,-0.00215609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864408,0.00846327) , 
7, 0.000534735, 1, 0, 0.589547,0.000645613) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552734,-0.010663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337597,0.000810725) , 
3, 70.2852, 1, 0, 0.436782,-0.00299869) , 
3, 37.8461, 1, 0, 0.502626,-0.00142795)    );
  // itree = 590
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579945,-0.00495368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602029,-0.0384894) , 
3, 34.1952, 1, 0, 0.581685,-0.00448082) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.599337,-0.00372762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.289018,0.00520479) , 
2, 0.166443, 1, 0, 0.435352,0.000392969) , 
3, 37.7955, 1, 0, 0.497597,-0.00168017)    );
  // itree = 591
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928813,-0.00155879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979225,0.0523029) , 
5, 0.0254591, 1, 0, 0.937751,0.00293454) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.290364,0.000244115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395779,-0.011343) , 
6, 0.0550843, 1, 0, 0.301685,-0.00123755) , 
0, 0.000962418, 1, 0, 0.496502,4.02986e-05)    );
  // itree = 592
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.255884,-0.0161264) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.174547,0.0212625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598859,-0.00445631) , 
6, 0.0202931, 1, 0, 0.509975,-0.00205038) , 
5, 0.00577507, 1, 0, 0.498346,-0.00262183)    );
  // itree = 593
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582653,-0.00840822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743061,0.0158666) , 
5, 0.0156867, 1, 0, 0.610564,-0.00337247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758335,0.00552424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179963,-0.00736831) , 
5, 0.0271989, 1, 0, 0.448722,0.00088349) , 
5, 0.0173311, 1, 0, 0.498613,-0.000428485)    );
  // itree = 594
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.493176,-0.00976694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440648,0.00631057) , 
5, 0.00975105, 1, 0, 0.447424,0.00112483) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62987,0.013525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573717,-0.00716363) , 
1, 1.08084, 1, 0, 0.580642,-0.00404681) , 
6, 0.0434885, 1, 0, 0.49262,-0.000629719)    );
  // itree = 595
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957619,0.0141543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00222378,-0.0147654) , 
0, 0.00157823, 1, 0, 0.574813,0.00303914) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506042,-0.00308262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.323166,0.0117369) , 
2, 0.35704, 1, 0, 0.464862,9.91853e-05) , 
4, 0.0173994, 1, 0, 0.501127,0.00106887)    );
  // itree = 596
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753764,0.0311911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737427,0.01013) , 
4, 0.00871336, 1, 0, 0.739733,0.00428168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881675,-0.00924763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268635,0.000457001) , 
0, 0.000962527, 1, 0, 0.410837,-0.00191826) , 
2, 0.0714264, 1, 0, 0.501613,-0.000207062)    );
  // itree = 597
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978691,0.0260639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450543,-0.000727481) , 
0, 0.000962212, 1, 0, 0.684246,0.00336396) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0796549,-0.0149325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404383,0.00189908) , 
4, 0.0144992, 1, 0, 0.350913,-0.000903225) , 
2, 0.14277, 1, 0, 0.500437,0.00101091)    );
  // itree = 598
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611293,-0.00831959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41312,0.00495827) , 
5, 0.0149574, 1, 0, 0.471765,-0.000440906) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878426,-0.0101112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375393,-0.000258262) , 
0, 0.00191908, 1, 0, 0.581471,-0.00591483) , 
6, 0.0463871, 1, 0, 0.502195,-0.00195927)    );
  // itree = 599
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.258216,0.00794595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.776451,-0.0118072) , 
7, 6.26688e-05, 1, 0, 0.605563,-0.00583087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737024,0.00251112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000196017,-0.0229699) , 
5, 0.0319827, 1, 0, 0.455939,0.000218092) , 
5, 0.0172296, 1, 0, 0.501783,-0.00163527)    );
  // itree = 600
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448802,-0.0110998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.412828,0.00185422) , 
4, 0.0116269, 1, 0, 0.420018,-0.000529659) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969189,0.014807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721601,-0.00931171) , 
0, 0.000427915, 1, 0, 0.827492,-0.00681581) , 
7, 0.000535656, 1, 0, 0.499415,-0.00175453)    );
  // itree = 601
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567593,-0.0011068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643129,-0.018132) , 
7, 0.000208132, 1, 0, 0.586337,-0.00540567) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748756,0.00604686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000641686,-0.0266178) , 
5, 0.0309553, 1, 0, 0.46714,0.00120729) , 
5, 0.0166763, 1, 0, 0.500986,-0.000670501)    );
  // itree = 602
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589673,-0.0193124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576208,-0.00125785) , 
4, 0.0145127, 1, 0, 0.579463,-0.00330655) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.317784,0.000426042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793724,0.00812711) , 
7, 0.000535426, 1, 0, 0.395409,0.00152645) , 
3, 50.3798, 1, 0, 0.495126,-0.00109198)    );
  // itree = 603
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957405,0.0170693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0032377,-0.0197768) , 
0, 0.00155337, 1, 0, 0.587125,0.00300632) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925717,-0.00806456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314484,0.00164109) , 
0, 0.000962526, 1, 0, 0.468688,-0.000861006) , 
4, 0.0174155, 1, 0, 0.507412,0.000403448)    );
  // itree = 604
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488792,-0.0118477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491557,-6.46133e-05) , 
5, 0.0107282, 1, 0, 0.491179,-0.00108998) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908512,0.0169058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406002,-0.0152478) , 
0, 0.000956548, 1, 0, 0.558623,-0.00988118) , 
6, 0.0550821, 1, 0, 0.498417,-0.0020335)    );
  // itree = 605
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.292499,-0.0199408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530434,0.00113113) , 
5, 0.0058408, 1, 0, 0.519157,8.91257e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204776,-0.0119638) , 
2, 0.452279, 1, 0, 0.499049,-0.00052556)    );
  // itree = 606
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945025,0.00546435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000966233,-0.0108805) , 
0, 0.00192484, 1, 0, 0.475169,0.00108014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879306,-0.0106562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368261,-0.00116918) , 
0, 0.00191956, 1, 0, 0.574342,-0.00606156) , 
6, 0.046384, 1, 0, 0.50284,-0.000912519)    );
  // itree = 607
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994462,0.0312185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840338,-0.00813446) , 
0, 9.16609e-05, 1, 0, 0.920767,-0.00502441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000647757,-0.0158634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156224,0.00680496) , 
5, 0.0230459, 1, 0, 0.11611,-0.00034074) , 
0, 0.00192488, 1, 0, 0.501842,-0.00258597)    );
  // itree = 608
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935255,-0.0198059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422797,0.00354865) , 
0, 0.000669405, 1, 0, 0.621117,-0.00349011) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.484823,0.000292499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321498,0.0153542) , 
2, 0.357043, 1, 0, 0.449339,0.00169907) , 
5, 0.0173459, 1, 0, 0.501113,0.000135058)    );
  // itree = 609
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791486,0.00372187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00191222,-0.023306) , 
5, 0.0307001, 1, 0, 0.645333,0.00146637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000138179,-0.00645165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0252095) , 
6, 0.0318893, 1, 0, 7.80034e-05,-0.00301578) , 
4, 0.0318825, 1, 0, 0.502767,0.000476052)    );
  // itree = 610
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637681,-0.0328389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547827,-0.00420027) , 
4, 0.0145559, 1, 0, 0.569229,-0.00826506) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.441998,-0.00701308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479296,0.00197765) , 
5, 0.011074, 1, 0, 0.474288,0.00026408) , 
3, 12.6189, 1, 0, 0.488754,-0.00103545)    );
  // itree = 611
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93769,-0.00586747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.280736,0.00391969) , 
0, 0.000962212, 1, 0, 0.483259,-7.43181e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825173,-0.0138773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.412041,0.000679096) , 
0, 0.00190974, 1, 0, 0.544378,-0.00704791) , 
6, 0.0521868, 1, 0, 0.493261,-0.00121546)    );
  // itree = 612
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852316,-0.00176062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308374,-0.0249383) , 
4, 0.0144648, 1, 0, 0.594421,-0.00966084) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566712,0.00931096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377538,-0.00569357) , 
2, 0.166646, 1, 0, 0.458472,-0.000448604) , 
5, 0.0165807, 1, 0, 0.496025,-0.00299328)    );
  // itree = 613
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829629,0.0229761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742489,-0.0175371) , 
3, 12.4898, 1, 0, 0.756828,-0.00648444) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56622,-0.00332806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.232997,0.00543144) , 
4, 0.0260891, 1, 0, 0.430118,-0.00087931) , 
2, 0.0476045, 1, 0, 0.496016,-0.00200988)    );
  // itree = 614
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683295,0.00207453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0268636) , 
4, 0.0260955, 1, 0, 0.486235,-0.00110126) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831122,-0.0125379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.399329,-0.00272148) , 
0, 0.00191533, 1, 0, 0.541736,-0.00699702) , 
6, 0.052182, 1, 0, 0.495234,-0.00205713)    );
  // itree = 615
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988056,0.0023098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51516,-0.0229058) , 
0, 0.0009434, 1, 0, 0.789863,-0.00675411) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543895,-0.0032043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400907,0.00562045) , 
3, 37.7914, 1, 0, 0.460205,0.000761434) , 
2, 0.0238023, 1, 0, 0.498381,-0.000108901)    );
  // itree = 616
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719711,0.0112633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00316495,-0.0171516) , 
4, 0.0144533, 1, 0, 0.334463,0.00191535) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609155,-0.00142012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558971,-0.0159225) , 
1, 1.89622, 1, 0, 0.604312,-0.00203483) , 
6, 0.0289967, 1, 0, 0.504756,-0.00057748)    );
  // itree = 617
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721306,0.0124205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372456,-0.00407998) , 
4, 0.0232022, 1, 0, 0.578042,0.00252087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739657,-0.00870851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00093411,0.0118321) , 
0, 0.00288551, 1, 0, 0.26321,-0.00682551) , 
2, 0.309454, 1, 0, 0.496819,0.000109618)    );
  // itree = 618
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.285466,-0.0172477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557846,0.0013328) , 
5, 0.00571063, 1, 0, 0.545441,0.000267974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.116796,0.0161091) , 
3, 126.142, 1, 0, 0.497336,0.00101219)    );
  // itree = 619
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527839,-0.0278562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579718,-0.0028412) , 
4, 0.0115657, 1, 0, 0.571398,-0.00481695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490569,0.0138615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452051,-0.0019228) , 
4, 0.0144969, 1, 0, 0.460838,0.000607235) , 
3, 25.2289, 1, 0, 0.493758,-0.00100785)    );
  // itree = 620
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732281,0.00730916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144555,-0.005583) , 
4, 0.0289919, 1, 0, 0.594182,0.00274997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.360144,-0.00268612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787682,-0.0100876) , 
7, 0.000538844, 1, 0, 0.436914,-0.00351055) , 
3, 37.7947, 1, 0, 0.503478,-0.000860783)    );
  // itree = 621
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730835,0.0116366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0269269) , 
4, 0.0145011, 1, 0, 0.340008,0.00155825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520889,-0.0176824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598318,-0.00281927) , 
6, 0.0335505, 1, 0, 0.587617,-0.00358891) , 
6, 0.0289901, 1, 0, 0.496819,-0.00170145)    );
  // itree = 622
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.835582,-0.00153383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000331323,-0.0206448) , 
4, 0.0231862, 1, 0, 0.663224,-0.00373318) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0555723,-0.0181455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443376,0.00963417) , 
4, 0.0231393, 1, 0, 0.338194,0.0010122) , 
5, 0.0230064, 1, 0, 0.503695,-0.00140409)    );
  // itree = 623
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260789,-0.0240096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578914,-0.0014012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.217587,0.0109567) , 
3, 100.922, 1, 0, 0.51844,0.000103593) , 
5, 0.00582184, 1, 0, 0.506077,-0.000611907)    );
  // itree = 624
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.241933,0.0212754) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671002,-0.00643099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358652,0.00181344) , 
5, 0.0229728, 1, 0, 0.517108,-0.00218767) , 
4, 0.00580686, 1, 0, 0.502276,-0.00158457)    );
  // itree = 625
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.487509,-0.00119745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520193,-0.0105169) , 
6, 0.0524451, 1, 0, 0.491086,-0.00159018) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64335,0.0052745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602002,0.0139577) , 
2, 0.214059, 1, 0, 0.621819,0.00709268) , 
6, 0.0579806, 1, 0, 0.497987,-0.00113184)    );
  // itree = 626
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982543,0.00294313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.471774,-0.0173212) , 
0, 0.000962212, 1, 0, 0.742121,-0.00402431) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893815,0.0033546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.111251,-0.00307562) , 
0, 0.00192505, 1, 0, 0.414781,0.0009628) , 
2, 0.0714125, 1, 0, 0.504933,-0.000410681)    );
  // itree = 627
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946016,0.0124073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00171634,-0.0161131) , 
0, 0.00159176, 1, 0, 0.569786,0.00174488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908557,-0.00639567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152229,0.00791853) , 
0, 0.00192451, 1, 0, 0.461371,-0.00181991) , 
4, 0.0174102, 1, 0, 0.496963,-0.000649618)    );
  // itree = 628
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.257104,-0.00212475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456559,-0.0183344) , 
4, 0.00662531, 1, 0, 0.320515,-0.00638832) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.698689,0.000580568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.025857) , 
4, 0.0310451, 1, 0, 0.519786,-0.000768654) , 
4, 0.00869918, 1, 0, 0.500175,-0.00132171)    );
  // itree = 629
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518555,-0.0127093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656211,0.00386347) , 
5, 0.00868454, 1, 0, 0.645518,0.00151727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000172718,-0.0284919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000272324,0.00205802) , 
4, 0.0442827, 1, 0, 0.000228415,-0.00328128) , 
4, 0.0318688, 1, 0, 0.499499,0.000431437)    );
  // itree = 630
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978971,0.00607494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816479,-0.00932224) , 
0, 0.000274852, 1, 0, 0.892286,-0.0079128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0015857,0.0523824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133498) , 
4, 0.0202908, 1, 0, 0.000498166,8.32805e-05) , 
0, 0.00288758, 1, 0, 0.494988,-0.00435049)    );
  // itree = 631
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816983,-0.0226153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00126072,0.000387999) , 
0, 0.00186323, 1, 0, 0.141898,-0.00594588) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587897,-0.00120805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30089,0.00923116) , 
2, 0.428467, 1, 0, 0.562652,-3.2867e-05) , 
6, 0.0144951, 1, 0, 0.4998,-0.000916149)    );
  // itree = 632
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571395,-0.00477155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611531,0.0114229) , 
6, 0.0550856, 1, 0, 0.575237,-0.00163441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841942,0.0179006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158071,0.000295295) , 
0, 0.000962527, 1, 0, 0.273972,0.00303791) , 
2, 0.309349, 1, 0, 0.500021,-0.000467884)    );
  // itree = 633
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790915,0.0123538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924838,0.057562) , 
8, 0.0980399, 1, 0, 0.825469,0.00569459) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.573181,-0.0053652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335455,0.00252667) , 
4, 0.0231914, 1, 0, 0.456545,-0.00197935) , 
2, 0.0238088, 1, 0, 0.498036,-0.0011163)    );
  // itree = 634
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653291,0.0137365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.263913,-0.00246434) , 
6, 0.0203001, 1, 0, 0.441228,0.00331439) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585575,-0.00381681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314908,0.00318185) , 
2, 0.28564, 1, 0, 0.502687,-0.000906967) , 
4, 0.0116082, 1, 0, 0.492592,-0.000213563)    );
  // itree = 635
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761045,-0.00372643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0335313,-0.0218722) , 
2, 0.166097, 1, 0, 0.513569,-0.00696833) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.389102,-0.00888824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529891,0.00337892) , 
5, 0.0172296, 1, 0, 0.501495,0.000350414) , 
4, 0.0145011, 1, 0, 0.504415,-0.00141954)    );
  // itree = 636
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.262785,-0.0134779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540102,-0.00249049) , 
5, 0.00580256, 1, 0, 0.525947,-0.0018893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220757,0.0134673) , 
2, 0.452243, 1, 0, 0.506842,-0.00135055)    );
  // itree = 637
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.588927,0.00237538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491526,-0.00553541) , 
3, 46.2413, 1, 0, 0.546287,-0.000783044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0858004,0.0111213) , 
3, 138.757, 1, 0, 0.505301,-0.000259511)    );
  // itree = 638
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713587,0.000264134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387139,-0.00974433) , 
3, 88.0843, 1, 0, 0.657746,-0.00137424) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861777,0.00961329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0980548,-0.0043197) , 
0, 0.00192343, 1, 0, 0.327272,0.00298733) , 
2, 0.190406, 1, 0, 0.50749,0.000608828)    );
  // itree = 639
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697728,-0.0037811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417685,0.0034281) , 
2, 0.11553, 1, 0, 0.542274,0.000229495) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.257822,-0.00908631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.178108,-0.00316345) , 
4, 0.0260288, 1, 0, 0.216984,-0.0060991) , 
2, 0.404663, 1, 0, 0.501736,-0.000559192)    );
  // itree = 640
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.186672,-0.00635139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824164,0.0041858) , 
7, 0.000143226, 1, 0, 0.52935,0.00104549) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0941165,0.00238087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459923,-0.012481) , 
6, 0.0463694, 1, 0, 0.214557,-0.0046019) , 
2, 0.404671, 1, 0, 0.489414,0.000329025)    );
  // itree = 641
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.717332,0.0133813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611955,-0.00175369) , 
4, 0.0144962, 1, 0, 0.644948,0.00105632) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.351751,-0.00648853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296003,0.00237626) , 
4, 0.0231813, 1, 0, 0.319747,-0.00226002) , 
2, 0.19047, 1, 0, 0.496857,-0.000453881)    );
  // itree = 642
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954107,0.0119211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00174852,-0.0154126) , 
0, 0.00159176, 1, 0, 0.581577,0.00223247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.565234,-0.0111312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392243,0.00180091) , 
2, 0.142748, 1, 0, 0.456202,-0.00153397) , 
4, 0.0173868, 1, 0, 0.497032,-0.000307392)    );
  // itree = 643
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549876,-0.00237256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151635,0.0163016) , 
3, 113.537, 1, 0, 0.49681,-0.000424051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596468,0.00506965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60984,-0.0202915) , 
6, 0.0593669, 1, 0, 0.603161,-0.011516) , 
6, 0.0579807, 1, 0, 0.502678,-0.00103602)    );
  // itree = 644
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876236,0.0430144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137369,0.00828777) , 
2, 0.0238042, 1, 0, 0.342396,0.00588543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.386766,-0.0147653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535366,0.00187211) , 
5, 0.011519, 1, 0, 0.519221,0.000259509) , 
4, 0.00870211, 1, 0, 0.50301,0.000775276)    );
  // itree = 645
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9807,-0.00363407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685054,-0.0127683) , 
0, 0.000229113, 1, 0, 0.931232,-0.00685312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.293513,0.00445845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38478,-0.0116787) , 
6, 0.0550856, 1, 0, 0.303498,0.000276918) , 
0, 0.000962526, 1, 0, 0.495731,-0.00190653)    );
  // itree = 646
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513253,-0.012437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446562,0.0018499) , 
5, 0.00983681, 1, 0, 0.455592,-0.000491394) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889084,-0.0113486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.326419,-0.00202601) , 
0, 0.00192405, 1, 0, 0.583986,-0.00633389) , 
6, 0.0434944, 1, 0, 0.499735,-0.0025001)    );
  // itree = 647
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4792,0.00137795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523172,-0.0159535) , 
6, 0.0524618, 1, 0, 0.481698,7.10311e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928801,0.041036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425996,0.00962956) , 
0, 0.000956548, 1, 0, 0.583039,0.00919926) , 
6, 0.0550843, 1, 0, 0.492012,0.00100005)    );
  // itree = 648
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.438456,-0.00188652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623333,0.0193222) , 
6, 0.0414164, 1, 0, 0.450402,0.000158332) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583094,-0.0212714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583948,-0.00136945) , 
6, 0.0451507, 1, 0, 0.583844,-0.00444205) , 
6, 0.0434887, 1, 0, 0.495748,-0.00140497)    );
  // itree = 649
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.414213,-0.00792685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69044,0.009556) , 
6, 0.0202931, 1, 0, 0.635484,0.00251869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.16753,0.00109076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519231,-0.005579) , 
6, 0.0434892, 1, 0, 0.308189,-0.00200683) , 
2, 0.214279, 1, 0, 0.501081,0.000660294)    );
  // itree = 650
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931027,-0.0196723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382208,0.000768171) , 
0, 0.000677015, 1, 0, 0.588341,-0.00458721) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757061,0.0031473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000760531,-0.0238713) , 
5, 0.0309553, 1, 0, 0.471153,0.000410843) , 
5, 0.0166763, 1, 0, 0.504211,-0.000999067)    );
  // itree = 651
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683217,0.000223406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201767,-0.0116427) , 
3, 113.371, 1, 0, 0.627461,-0.000836714) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840809,0.006009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0976295,0.00203894) , 
0, 0.00192488, 1, 0, 0.307341,0.0029756) , 
2, 0.238023, 1, 0, 0.508858,0.000575733)    );
  // itree = 652
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.229351,0.013806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903184,-0.00375249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000423551,-0.000243248) , 
0, 0.00288758, 1, 0, 0.514301,-0.00222417) , 
4, 0.00580854, 1, 0, 0.498641,-0.00172224)    );
  // itree = 653
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839776,0.00595913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0690779,-0.0190697) , 
5, 0.0229794, 1, 0, 0.638376,0.00140262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0240055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43635,0.00369328) , 
5, 0.0230519, 1, 0, 0.341622,-0.00259121) , 
4, 0.0231973, 1, 0, 0.500734,-0.000449812)    );
  // itree = 654
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.347691,-0.00166892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539638,-0.012238) , 
6, 0.0303609, 1, 0, 0.363609,-0.00154356) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695218,-0.00243122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500656,0.00857068) , 
2, 0.214246, 1, 0, 0.610466,0.0019826) , 
6, 0.031889, 1, 0, 0.505299,0.000480371)    );
  // itree = 655
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601322,-0.00108177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414322,0.00531385) , 
3, 50.4571, 1, 0, 0.517372,0.000823329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221026,-0.0125955) , 
2, 0.452271, 1, 0, 0.499023,4.32617e-05)    );
  // itree = 656
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851687,0.00207607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268307,-0.0122444) , 
2, 0.118975, 1, 0, 0.619711,-0.00434747) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.122483,-0.0196593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529509,0.00368134) , 
4, 0.0173895, 1, 0, 0.459687,0.000689642) , 
5, 0.0169553, 1, 0, 0.50524,-0.000744234)    );
  // itree = 657
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580007,-0.00477712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847402,0.0111229) , 
7, 0.000428166, 1, 0, 0.649295,0.000302473) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770747,-0.0126796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136171,0.00106664) , 
0, 0.00192484, 1, 0, 0.232918,-0.0031795) , 
4, 0.0260955, 1, 0, 0.497142,-0.000969911)    );
  // itree = 658
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.469575,0.000979422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567338,-0.00717556) , 
6, 0.0469377, 1, 0, 0.490649,-0.00103535) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641453,0.0335757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584034,0.00158477) , 
2, 0.190467, 1, 0, 0.611017,0.00752884) , 
6, 0.0579806, 1, 0, 0.497224,-0.000567551)    );
  // itree = 659
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700317,0.00541519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118439,-0.00397007) , 
5, 0.0287802, 1, 0, 0.510601,0.0019473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201977,-0.00914939) , 
2, 0.452091, 1, 0, 0.491077,0.00141971)    );
  // itree = 660
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828609,9.47133e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0243289) , 
4, 0.0231472, 1, 0, 0.665003,-0.00354976) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121765,-0.0150358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.434299,0.0118026) , 
4, 0.0231914, 1, 0, 0.342952,0.00104974) , 
5, 0.0226528, 1, 0, 0.498819,-0.00117634)    );
  // itree = 661
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715435,0.00381689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0646558) , 
5, 0.0345006, 1, 0, 0.554328,0.00117545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.717084,-0.00667919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00152066,0.0341432) , 
0, 0.00288677, 1, 0, 0.247015,-0.00365784) , 
2, 0.357034, 1, 0, 0.496977,0.000273459)    );
  // itree = 662
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794375,0.00576582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00106219,-0.0224527) , 
5, 0.0306355, 1, 0, 0.645172,0.00260625) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0228538) , 
7, -0.00145993, 1, 0, 0,-0.00202693) , 
4, 0.0318843, 1, 0, 0.50111,0.00157169)    );
  // itree = 663
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923439,-0.00964215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940922,0.0322848) , 
0, 0.00164858, 1, 0, 0.925287,-0.00473015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00116726,-0.00570163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742453,0.0119159) , 
7, 0.000534736, 1, 0, 0.115588,0.00123466) , 
0, 0.00192488, 1, 0, 0.50119,-0.00160595)    );
  // itree = 664
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943893,-0.00743634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279911,0.00397536) , 
0, 0.000962256, 1, 0, 0.483536,-0.000423371) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587206,0.00387702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532464,-0.0152886) , 
1, 1.12656, 1, 0, 0.562421,-0.00556006) , 
6, 0.0521838, 1, 0, 0.496088,-0.00124075)    );
  // itree = 665
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577871,0.000426137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562566,-0.0149045) , 
3, 42.0508, 1, 0, 0.573828,-0.00219099) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.254145,-0.00361219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466975,0.00817612) , 
6, 0.0348086, 1, 0, 0.360505,0.00145589) , 
3, 63.0778, 1, 0, 0.497944,-0.000893721)    );
  // itree = 666
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672851,0.0142358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507458,-0.00277287) , 
4, 0.0174546, 1, 0, 0.567223,0.00108247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226206,-0.0126478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.259346,0.0101083) , 
4, 0.0231378, 1, 0, 0.247184,-0.00245262) , 
2, 0.333323, 1, 0, 0.494278,0.000276729)    );
  // itree = 667
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958888,0.0145191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00110134,-0.0211067) , 
0, 0.00155337, 1, 0, 0.590581,0.00209458) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6408,-0.0271859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448658,-0.0022059) , 
2, 0.0238023, 1, 0, 0.461465,-0.00212135) , 
4, 0.0174097, 1, 0, 0.50373,-0.000741315)    );
  // itree = 668
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715373,0.00958837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345697,-0.00532218) , 
2, 0.119044, 1, 0, 0.492575,-0.000513852) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918249,0.0118698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409836,-0.0157224) , 
0, 0.000956548, 1, 0, 0.565287,-0.00876424) , 
6, 0.0550855, 1, 0, 0.500194,-0.00137836)    );
  // itree = 669
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598419,0.0109409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561799,-0.00895336) , 
3, 34.2396, 1, 0, 0.595299,0.00358873) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547253,-0.0131711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401283,0.00200627) , 
3, 48.672, 1, 0, 0.427636,-0.000709898) , 
3, 37.8461, 1, 0, 0.498172,0.00109853)    );
  // itree = 670
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580662,0.00105048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124263,-0.00932418) , 
3, 126.143, 1, 0, 0.531227,-8.99734e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.246366,-0.00420702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190886,-0.0167993) , 
2, 0.462458, 1, 0, 0.22003,-0.00917247) , 
2, 0.428441, 1, 0, 0.500812,-0.000977641)    );
  // itree = 671
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244311,0.0158691) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672901,-0.00303899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.305383,0.0042881) , 
4, 0.0241671, 1, 0, 0.506212,-0.000362499) , 
4, 0.00580638, 1, 0, 0.492734,6.30458e-05)    );
  // itree = 672
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.291504,0.00101816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55039,-0.0120753) , 
6, 0.0248556, 1, 0, 0.39412,-0.00295867) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6032,-0.0126459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602415,0.00427533) , 
1, 1.07888, 1, 0, 0.602472,0.0014774) , 
6, 0.0347944, 1, 0, 0.50271,-0.000646663)    );
  // itree = 673
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954729,0.014366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00235681,-0.0129425) , 
0, 0.00159176, 1, 0, 0.586405,0.00293575) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.023276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529107,-0.00141023) , 
5, 0.0172454, 1, 0, 0.452842,-0.00301099) , 
4, 0.0173977, 1, 0, 0.495499,-0.00111173)    );
  // itree = 674
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919621,-0.0218291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413471,0.00315621) , 
0, 0.000684044, 1, 0, 0.610342,-0.00443893) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0354872,-0.0234168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531267,0.00437331) , 
4, 0.0174066, 1, 0, 0.453911,0.000729233) , 
5, 0.0172953, 1, 0, 0.501127,-0.000830692)    );
  // itree = 675
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919989,-0.0024706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919696,-0.0165771) , 
5, 0.0260968, 1, 0, 0.919958,-0.00407552) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000959768,-0.00817464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731755,0.0122142) , 
7, 0.000534737, 1, 0, 0.113703,0.00105256) , 
0, 0.00192505, 1, 0, 0.49548,-0.00137569)    );
  // itree = 676
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679673,-0.00264656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425912,-0.0144726) , 
2, 0.158651, 1, 0, 0.620371,-0.00331413) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0296268,-0.00748814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513334,0.00369776) , 
6, 0.0347766, 1, 0, 0.303844,0.000593234) , 
2, 0.238037, 1, 0, 0.503715,-0.00187407)    );
  // itree = 677
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571917,-0.00715214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552016,0.00633643) , 
3, 29.4329, 1, 0, 0.560826,-0.000354964) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815666,-0.010332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0488426,-0.00193648) , 
0, 0.0019181, 1, 0, 0.257741,-0.00564325) , 
3, 88.3027, 1, 0, 0.49469,-0.00150892)    );
  // itree = 678
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697768,0.00783748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.341552,-0.00621687) , 
2, 0.285627, 1, 0, 0.606324,0.00129154) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56105,-0.00988846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257264,0.00293698) , 
2, 0.238088, 1, 0, 0.437757,-0.00271278) , 
3, 37.7887, 1, 0, 0.508931,-0.00102203)    );
  // itree = 679
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784253,0.0154509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.367539,-0.0192689) , 
3, 99.7674, 1, 0, 0.734461,0.00226996) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.270633,-0.000953813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.805101,-0.00687635) , 
7, 0.00053838, 1, 0, 0.386361,-0.0022014) , 
2, 0.095209, 1, 0, 0.501599,-0.000721169)    );
  // itree = 680
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982061,0.00784241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.830969,-0.00634732) , 
0, 0.000273146, 1, 0, 0.901023,-0.00434909) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0013717,0.0339205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.82698e-05,-0.0118507) , 
4, 0.0202917, 1, 0, 0.00050174,4.04475e-05) , 
0, 0.00288725, 1, 0, 0.497599,-0.00238262)    );
  // itree = 681
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784489,-0.0132177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627619,-0.0257357) , 
6, 0.0463714, 1, 0, 0.758919,-0.00756475) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.182454,-0.0105437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466892,0.00063352) , 
4, 0.0116019, 1, 0, 0.430422,-0.000501979) , 
2, 0.0476045, 1, 0, 0.496208,-0.00191642)    );
  // itree = 682
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927431,-0.0112175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781024,0.00123875) , 
0, 0.00127838, 1, 0, 0.871066,-0.00484854) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 5.17268e-05,-0.0111767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000330959,0.0185992) , 
3, 113.551, 1, 0, 0.000118225,-0.000179214) , 
0, 0.00385011, 1, 0, 0.495476,-0.00283493)    );
  // itree = 683
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710467,0.00963601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000380058,-0.0218984) , 
4, 0.0202976, 1, 0, 0.440425,0.00182573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706959,0.0234066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58467,-0.00526421) , 
2, 0.023787, 1, 0, 0.592328,-0.00345661) , 
6, 0.0405903, 1, 0, 0.501894,-0.000311828)    );
  // itree = 684
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706719,-0.00645111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173766,0.00223915) , 
5, 0.0282623, 1, 0, 0.547685,-0.00296659) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659071,0.00920202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000166238,-0.00537132) , 
0, 0.00288758, 1, 0, 0.156377,0.00377596) , 
3, 113.528, 1, 0, 0.494655,-0.00205285)    );
  // itree = 685
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928912,-0.00539048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122731,0.00183114) , 
0, 0.00192505, 1, 0, 0.52725,-0.00221325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.308144,0.0179728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186043,0.000843791) , 
4, 0.0258086, 1, 0, 0.237349,0.00506865) , 
2, 0.428558, 1, 0, 0.500944,-0.00155247)    );
  // itree = 686
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.229875,0.0241629) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579965,-0.00820567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494774,0.00210652) , 
5, 0.0165807, 1, 0, 0.518453,-0.00036679) , 
4, 0.00581561, 1, 0, 0.502205,0.00013012)    );
  // itree = 687
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.40318,-0.0154717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704087,-0.00114174) , 
5, 0.00969069, 1, 0, 0.595268,-0.00385064) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.120045,-0.0176787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539575,0.0056262) , 
4, 0.0173966, 1, 0, 0.463818,0.0013609) , 
5, 0.0169553, 1, 0, 0.502539,-0.000174249)    );
  // itree = 688
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674506,-0.00399693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347486,0.00658948) , 
2, 0.237961, 1, 0, 0.559644,1.36457e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643092,-0.0132516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000166975,0.00108266) , 
0, 0.00288758, 1, 0, 0.157131,-0.0110994) , 
3, 113.383, 1, 0, 0.504329,-0.00151354)    );
  // itree = 689
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554418,-0.000656763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212507,0.0187929) , 
3, 100.914, 1, 0, 0.497454,0.000737161) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.808794,-0.0208443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430028,-0.000168973) , 
0, 0.00190974, 1, 0, 0.560919,-0.0120198) , 
6, 0.0550843, 1, 0, 0.504253,-0.00062953)    );
  // itree = 690
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578786,-0.0023535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54001,0.0075039) , 
3, 43.188, 1, 0, 0.562859,0.000824141) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70806,-0.0105724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000135203,-0.00597099) , 
0, 0.00288725, 1, 0, 0.201168,-0.00610451) , 
3, 100.774, 1, 0, 0.498374,-0.000411148)    );
  // itree = 691
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932746,-0.0287804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.252397,-0.00327154) , 
0, 0.000602754, 1, 0, 0.483659,-0.00775004) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.482011,-0.00201224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584096,0.00777596) , 
6, 0.0550842, 1, 0, 0.493607,-0.000216126) , 
5, 0.0115123, 1, 0, 0.492184,-0.00129391)    );
  // itree = 692
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578002,0.00806705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605246,-0.00749845) , 
6, 0.0492854, 1, 0, 0.583546,0.00139017) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.259626,-0.0119822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268717,0.0038442) , 
4, 0.0232707, 1, 0, 0.265343,-0.0039593) , 
2, 0.309514, 1, 0, 0.50122,6.14614e-06)    );
  // itree = 693
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260877,-0.00360883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888243,0.00678645) , 
7, 0.000212323, 1, 0, 0.476079,0.00110405) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567793,-0.0040246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622168,-0.0203236) , 
1, 1.2826, 1, 0, 0.576392,-0.00549189) , 
6, 0.0463839, 1, 0, 0.504239,-0.000747543)    );
  // itree = 694
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639233,0.00345343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.299055,-0.00834593) , 
3, 88.1076, 1, 0, 0.570805,0.00029051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744756,-0.00668929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00137797,0.00918831) , 
0, 0.00288758, 1, 0, 0.25462,-0.00437034) , 
2, 0.333211, 1, 0, 0.498958,-0.000768587)    );
  // itree = 695
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.480467,0.0174189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407274,-0.00216419) , 
5, 0.0115567, 1, 0, 0.420335,0.000432443) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863616,-0.0185921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.786951,-0.00108298) , 
0, 0.0017665, 1, 0, 0.823185,-0.0106328) , 
7, 0.000534737, 1, 0, 0.49901,-0.00172855)    );
  // itree = 696
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607259,-0.00238988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313915,0.00978073) , 
2, 0.279939, 1, 0, 0.530821,0.000458612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204137,-0.0114821) , 
2, 0.452271, 1, 0, 0.510147,-0.000173595)    );
  // itree = 697
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857979,0.0110386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0298598) , 
5, 0.018255, 1, 0, 0.583801,0.00217474) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.534374,-0.00901088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347785,0.00492363) , 
2, 0.261852, 1, 0, 0.461434,-0.00217997) , 
4, 0.0173921, 1, 0, 0.50145,-0.000755918)    );
  // itree = 698
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931969,-0.0173537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39816,0.000124574) , 
0, 0.000677015, 1, 0, 0.596674,-0.00406886) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0364431,-0.0184013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537382,0.00495015) , 
4, 0.0173939, 1, 0, 0.457113,0.00122713) , 
5, 0.0173064, 1, 0, 0.500674,-0.000425906)    );
  // itree = 699
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669697,0.0034355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000143034,-0.0179283) , 
4, 0.0289977, 1, 0, 0.497663,0.000703203) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622105,-0.0183543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55948,-0.00467817) , 
3, 36.958, 1, 0, 0.589116,-0.0137946) , 
6, 0.0579806, 1, 0, 0.502619,-8.24856e-05)    );
  // itree = 700
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993527,0.0080735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699262,-0.00913709) , 
0, 4.57784e-05, 1, 0, 0.934561,-0.0042419) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.363233,0.00439318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155373,-0.00662402) , 
2, 0.333221, 1, 0, 0.306135,0.000243458) , 
0, 0.000962442, 1, 0, 0.501799,-0.00115308)    );
  // itree = 701
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.431824,-0.014155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702529,0.0223134) , 
4, 0.0107951, 1, 0, 0.585844,0.00317083) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703862,-0.018592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425361,0.0013283) , 
4, 0.0194878, 1, 0, 0.453538,-0.000994602) , 
4, 0.0174155, 1, 0, 0.49613,0.000346346)    );
  // itree = 702
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992667,0.011069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826054,-0.0093905) , 
0, 9.15681e-05, 1, 0, 0.912495,-0.00724332) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000877019,-0.00758905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747988,0.0147747) , 
7, 0.000535657, 1, 0, 0.110938,0.00120895) , 
0, 0.00192488, 1, 0, 0.492331,-0.00281277)    );
  // itree = 703
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.254002,-0.0222917) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664018,0.00242475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348964,-0.00433749) , 
2, 0.19047, 1, 0, 0.521236,-0.000826896) , 
5, 0.00577119, 1, 0, 0.508095,-0.00145724)    );
  // itree = 704
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636106,-0.00453337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441474,-0.0226879) , 
2, 0.193775, 1, 0, 0.623982,-0.00332964) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.397543,0.0217925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296241,-0.000443847) , 
2, 0.25504, 1, 0, 0.313298,0.00137753) , 
2, 0.214233, 1, 0, 0.498405,-0.00142701)    );
  // itree = 705
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670988,-0.00352665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292271,0.00531735) , 
5, 0.0213246, 1, 0, 0.483798,-0.000467618) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914558,0.0155921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397959,-0.0108398) , 
0, 0.000957667, 1, 0, 0.547033,-0.00451814) , 
6, 0.0521838, 1, 0, 0.493978,-0.00111969)    );
  // itree = 706
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233463,-0.0119133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607381,0.00900439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501897,-0.000129591) , 
3, 12.6189, 1, 0, 0.517732,0.000583208) , 
5, 0.00577507, 1, 0, 0.504219,0.000149718)    );
  // itree = 707
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227577,-0.0202422) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575312,0.00846503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489655,-0.00200531) , 
4, 0.0174051, 1, 0, 0.517194,0.000300714) , 
5, 0.00577168, 1, 0, 0.502666,-0.000303599)    );
  // itree = 708
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712528,0.00354728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374833,-0.00335028) , 
2, 0.166662, 1, 0, 0.55094,-0.000318667) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79002,0.0149669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000274058,-0.00106209) , 
0, 0.00288514, 1, 0, 0.212819,0.00554661) , 
3, 100.922, 1, 0, 0.49307,0.000685177)    );
  // itree = 709
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.26402,-0.0106286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933337,0.00383868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121743,-0.00319944) , 
0, 0.00192505, 1, 0, 0.512743,0.000975011) , 
5, 0.00584003, 1, 0, 0.501491,0.0006416)    );
  // itree = 710
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225801,0.0128372) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.556642,-0.00292359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0735995,-0.0172941) , 
3, 138.756, 1, 0, 0.514181,-0.00233788) , 
4, 0.00582008, 1, 0, 0.49822,-0.00189845)    );
  // itree = 711
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708415,0.0160367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219036,-0.0130521) , 
3, 113.371, 1, 0, 0.656191,0.00347532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0864525,-0.0105296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383094,0.00155579) , 
5, 0.016676, 1, 0, 0.333952,-0.000629595) , 
2, 0.19047, 1, 0, 0.511173,0.00162797)    );
  // itree = 712
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575687,-0.00510606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45813,0.000839148) , 
5, 0.016526, 1, 0, 0.492566,-0.000658942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652907,0.00809583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558566,0.0269029) , 
3, 37.5301, 1, 0, 0.604994,0.00914214) , 
6, 0.05798, 1, 0, 0.49858,-0.000134643)    );
  // itree = 713
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639969,0.00161841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.324153,-0.00554447) , 
2, 0.204003, 1, 0, 0.520421,-0.000879564) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287634,0.0158771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187465,0.00595782) , 
4, 0.0259228, 1, 0, 0.234121,0.00591218) , 
2, 0.428467, 1, 0, 0.49437,-0.000261585)    );
  // itree = 714
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.512245,-0.00202164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17142,0.0173028) , 
2, 0.452367, 1, 0, 0.491689,-0.000562856) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898863,0.0228057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417823,-0.0140001) , 
0, 0.000956548, 1, 0, 0.564109,-0.00649607) , 
6, 0.0550822, 1, 0, 0.499478,-0.00120099)    );
  // itree = 715
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779593,0.0195263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68769,-0.0167835) , 
2, 0.0407933, 1, 0, 0.768196,0.00252147) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874348,-0.00528874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000257212,-0.00326886) , 
0, 0.00288725, 1, 0, 0.430502,-0.00313669) , 
2, 0.0476074, 1, 0, 0.498843,-0.00199162)    );
  // itree = 716
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93275,-0.00218987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758773,-0.00578201) , 
2, 0.261745, 1, 0, 0.89389,-0.00357612) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0011998,0.030957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000167718,-0.00755707) , 
4, 0.0202976, 1, 0, 0.00049577,0.000119474) , 
0, 0.00288677, 1, 0, 0.492608,-0.00191619)    );
  // itree = 717
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766931,0.00335477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.496474,-0.0109084) , 
4, 0.0202214, 1, 0, 0.639148,-0.00200634) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00141508,-0.0137688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723089,0.0061485) , 
7, 0.000193779, 1, 0, 0.303315,0.00166927) , 
2, 0.214237, 1, 0, 0.499213,-0.000474786)    );
  // itree = 718
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.541335,-0.00264972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201135,0.0152006) , 
2, 0.380836, 1, 0, 0.491594,-0.000285204) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.856156,0.0128427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39387,-0.0157514) , 
0, 0.000956548, 1, 0, 0.535286,-0.00746046) , 
6, 0.0550824, 1, 0, 0.496247,-0.00104942)    );
  // itree = 719
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93293,-0.00824149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268751,-0.000880793) , 
0, 0.000962526, 1, 0, 0.473602,-0.00195641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685721,0.014607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397688,-0.00355242) , 
4, 0.0289893, 1, 0, 0.587805,0.004459) , 
6, 0.0492829, 1, 0, 0.498093,-0.000580619)    );
  // itree = 720
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757105,0.0534815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817778,0.00122544) , 
6, 0.0176147, 1, 0, 0.801227,0.00360838) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883845,-0.00415836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000356643,-0.000834096) , 
0, 0.00288758, 1, 0, 0.456359,-0.00242551) , 
2, 0.0238088, 1, 0, 0.494643,-0.0017557)    );
  // itree = 721
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443578,0.000190938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622297,0.024292) , 
6, 0.0414204, 1, 0, 0.455326,0.000832711) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615387,-0.00718699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507736,0.0073838) , 
2, 0.333252, 1, 0, 0.586897,-0.00286934) , 
6, 0.043495, 1, 0, 0.499815,-0.000419063)    );
  // itree = 722
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813974,-0.0020529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147908,-0.0165283) , 
2, 0.0952167, 1, 0, 0.500357,-0.00593627) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722314,0.00262873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0269961,-0.0116942) , 
4, 0.0299467, 1, 0, 0.492888,0.000398547) , 
4, 0.0144951, 1, 0, 0.494699,-0.00113748)    );
  // itree = 723
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710611,0.0130357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532434,-0.00209818) , 
4, 0.01742, 1, 0, 0.600827,0.00135095) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.756763,-0.00754721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00133759,0.0142604) , 
0, 0.00288758, 1, 0, 0.275446,-0.00465881) , 
2, 0.285706, 1, 0, 0.501883,-0.000476543)    );
  // itree = 724
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569053,-0.00180476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592143,0.00831112) , 
6, 0.0550809, 1, 0, 0.571309,-0.000252144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73248,-0.00979638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0808441,-0.0027409) , 
0, 0.00192484, 1, 0, 0.248122,-0.00642985) , 
2, 0.333211, 1, 0, 0.497789,-0.00165748)    );
  // itree = 725
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839958,0.00603535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000348574,-0.0184177) , 
4, 0.0231079, 1, 0, 0.672206,0.00124196) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.063863,-0.0231008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429528,0.00607703) , 
4, 0.023207, 1, 0, 0.325026,-0.00247717) , 
5, 0.023012, 1, 0, 0.495546,-0.000650493)    );
  // itree = 726
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.548632,0.000145666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.661965,0.0117183) , 
6, 0.0550843, 1, 0, 0.560288,0.000836932) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719758,-0.0106947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000139977,-0.00272728) , 
0, 0.00288758, 1, 0, 0.204974,-0.00656229) , 
3, 100.914, 1, 0, 0.498817,-0.000443172)    );
  // itree = 727
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523458,-0.0025944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659466,-0.0123406) , 
6, 0.0434893, 1, 0, 0.570179,-0.00426914) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909358,0.00882237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.083031,-0.00215839) , 
0, 0.00192505, 1, 0, 0.410641,0.00270618) , 
3, 50.4612, 1, 0, 0.49874,-0.0011457)    );
  // itree = 728
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980142,0.0110011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465672,-0.0182921) , 
0, 0.000961032, 1, 0, 0.721645,-0.00346007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.399363,0.00970362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385547,-0.00227596) , 
4, 0.0202892, 1, 0, 0.390199,0.000915619) , 
2, 0.0952352, 1, 0, 0.500448,-0.000539866)    );
  // itree = 729
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675766,0.00403876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288593,-0.00731668) , 
2, 0.166662, 1, 0, 0.487521,-0.001648) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645987,0.0248178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370272,-0.0125652) , 
3, 75.5267, 1, 0, 0.570051,0.00546484) , 
6, 0.0521841, 1, 0, 0.500554,-0.000524753)    );
  // itree = 730
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519167,-0.00890769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353994,0.00118242) , 
3, 37.7955, 1, 0, 0.42208,-0.00146802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.890746,-0.00540112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.78063,0.0165253) , 
0, 0.00179141, 1, 0, 0.832729,0.0050829) , 
7, 0.000534736, 1, 0, 0.503073,-0.000175976)    );
  // itree = 731
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.51006,-0.000276673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575153,0.00628903) , 
6, 0.0521875, 1, 0, 0.520233,0.000490864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.222065,-0.00661711) , 
2, 0.452367, 1, 0, 0.501841,0.000172854)    );
  // itree = 732
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930938,-0.023603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389266,-0.00513807) , 
0, 0.000680696, 1, 0, 0.593223,-0.00628789) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0654861,-0.0176838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527789,0.0030587) , 
4, 0.0174022, 1, 0, 0.4532,0.000289725) , 
5, 0.0172311, 1, 0, 0.496554,-0.00174686)    );
  // itree = 733
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.258833,0.0327074) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591333,0.00205439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.271414,-0.00557322) , 
2, 0.333232, 1, 0, 0.518952,-0.000210332) , 
4, 0.00580686, 1, 0, 0.505611,0.000231401)    );
  // itree = 734
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925667,-0.00303333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38167,0.0124388) , 
0, 0.00149119, 1, 0, 0.688501,0.00173115) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821563,-0.015035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.0884e-05,-0.00991878) , 
0, 0.00384902, 1, 0, 0.141731,-0.00412421) , 
5, 0.0282524, 1, 0, 0.50193,-0.000266837)    );
  // itree = 735
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951789,0.0140986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00313749,-0.0171965) , 
0, 0.000962442, 1, 0, 0.167785,-0.000218739) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.449534,-0.0167658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856057,0.00792796) , 
4, 0.0134248, 1, 0, 0.820262,0.00452531) , 
7, 0.000144607, 1, 0, 0.504358,0.00222843)    );
  // itree = 736
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673259,-0.00204336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.318687,0.00831433) , 
5, 0.0214781, 1, 0, 0.49185,0.000577682) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635792,-0.015891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518593,0.00023624) , 
5, 0.0289797, 1, 0, 0.562762,-0.00872644) , 
6, 0.0550824, 1, 0, 0.499257,-0.000394128)    );
  // itree = 737
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.436454,-0.00128989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630667,0.0211836) , 
6, 0.0414209, 1, 0, 0.448478,0.000201263) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.860422,-0.00761345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000154475,-0.00674595) , 
0, 0.00384811, 1, 0, 0.58237,-0.00631584) , 
6, 0.0434945, 1, 0, 0.493983,-0.00201366)    );
  // itree = 738
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575182,-0.00633509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553189,0.00572146) , 
3, 16.823, 1, 0, 0.558903,0.00105924) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810995,-0.0096936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0493122,-0.00165269) , 
0, 0.00192343, 1, 0, 0.263605,-0.00522939) , 
3, 88.3088, 1, 0, 0.496179,-0.000276521)    );
  // itree = 739
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626566,0.0055522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476066,-0.00610576) , 
3, 37.7623, 1, 0, 0.543234,-0.000783741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.100169,-0.00319018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461174,-0.0130345) , 
6, 0.0463716, 1, 0, 0.220786,-0.00682884) , 
2, 0.404671, 1, 0, 0.502197,-0.00155307)    );
  // itree = 740
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941432,-0.0299188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257657,8.2968e-05) , 
0, 0.000600792, 1, 0, 0.486433,-0.00663082) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678144,-0.00347234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413979,0.00663039) , 
2, 0.119044, 1, 0, 0.507144,0.0017211) , 
5, 0.0115123, 1, 0, 0.504253,0.000555339)    );
  // itree = 741
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700271,0.00434896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000147806,-0.0241274) , 
4, 0.0231973, 1, 0, 0.472746,0.0007792) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868022,-0.00938137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369711,0.00224931) , 
0, 0.00192009, 1, 0, 0.573669,-0.00414517) , 
6, 0.046384, 1, 0, 0.500732,-0.000586314)    );
  // itree = 742
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708736,-0.00771068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613841,-0.017801) , 
6, 0.052182, 1, 0, 0.697787,-0.00477112) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.460112,0.00748003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272476,-0.00452679) , 
2, 0.300304, 1, 0, 0.376367,0.000557036) , 
2, 0.11898, 1, 0, 0.502593,-0.00153539)    );
  // itree = 743
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253206,-0.0141528) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.461983,0.00195365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597701,-0.00440243) , 
6, 0.0434893, 1, 0, 0.509833,-0.000672115) , 
5, 0.00575579, 1, 0, 0.498135,-0.00107818)    );
  // itree = 744
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.32201,0.00953307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867185,0.0165902) , 
7, 0.000212888, 1, 0, 0.605208,0.00527527) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.204146,0.0141475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499062,-0.000624262) , 
4, 0.00580614, 1, 0, 0.481608,0.000106149) , 
3, 12.6179, 1, 0, 0.500066,0.000878093)    );
  // itree = 745
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92622,-0.00133827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915128,0.0311632) , 
0, 0.00164876, 1, 0, 0.925018,0.00246494) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000844878,-0.0146917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152872,0.004582) , 
5, 0.0230462, 1, 0, 0.111882,-0.000481965) , 
0, 0.00192488, 1, 0, 0.495506,0.000908334)    );
  // itree = 746
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593753,-0.0105771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591006,0.02026) , 
3, 20.3708, 1, 0, 0.593252,-0.0047949) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.370272,-0.00605593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565073,0.00424014) , 
6, 0.037687, 1, 0, 0.45949,-0.000371164) , 
3, 25.1658, 1, 0, 0.499091,-0.00168082)    );
  // itree = 747
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45149,0.0262769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.328225,-0.0141791) , 
4, 0.00588044, 1, 0, 0.33809,-0.00295821) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724769,0.00473775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0284531) , 
4, 0.0318873, 1, 0, 0.606854,0.00161321) , 
6, 0.0289901, 1, 0, 0.507589,-7.51883e-05)    );
  // itree = 748
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.419055,1.89732e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650263,0.0166116) , 
6, 0.0399054, 1, 0, 0.476219,0.00182047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878615,-0.0100057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411452,0.00170954) , 
0, 0.00191956, 1, 0, 0.567777,-0.00306789) , 
6, 0.0492897, 1, 0, 0.496274,0.000749695)    );
  // itree = 749
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664875,-0.00302305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.378479,0.00417203) , 
2, 0.142741, 1, 0, 0.52172,0.000497913) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.148367,-0.00256539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486545,-0.015496) , 
6, 0.0492668, 1, 0, 0.248705,-0.00673886) , 
2, 0.428414, 1, 0, 0.497644,-0.000140268)    );
  // itree = 750
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.551172,0.00457895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.270493,-0.00634713) , 
3, 75.6854, 1, 0, 0.471529,0.000463315) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.536986,-0.0146104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589189,0.0011246) , 
4, 0.0260661, 1, 0, 0.564135,-0.00554372) , 
6, 0.0463919, 1, 0, 0.49738,-0.00121354)    );
  // itree = 751
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.497022,-0.0015667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514822,-0.0144114) , 
6, 0.0552119, 1, 0, 0.497937,-0.00141751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609843,0.0214449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.580313,0.00647361) , 
1, 1.06707, 1, 0, 0.593989,0.00736953) , 
6, 0.0579807, 1, 0, 0.503156,-0.000939991)    );
  // itree = 752
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.285678,-0.013032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490991,-0.0356196) , 
4, 0.00704552, 1, 0, 0.341732,-0.010495) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675756,0.00452346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441956,-0.00443643) , 
4, 0.018637, 1, 0, 0.51256,-0.000933308) , 
4, 0.00870102, 1, 0, 0.496554,-0.00182916)    );
  // itree = 753
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.528267,-0.000747559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582456,0.00693252) , 
6, 0.0521868, 1, 0, 0.536745,0.000434305) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0990811,-0.00231763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48279,-0.0131606) , 
6, 0.0463366, 1, 0, 0.221791,-0.00687661) , 
2, 0.404671, 1, 0, 0.497175,-0.000484213)    );
  // itree = 754
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.450127,0.00388323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2884,0.02144) , 
3, 37.7688, 1, 0, 0.353517,0.00537761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71449,-0.00416423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334257,0.00209661) , 
4, 0.0236478, 1, 0, 0.52666,-0.000992184) , 
4, 0.00875539, 1, 0, 0.510756,-0.000407082)    );
  // itree = 755
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.565073,-0.0183669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65187,-0.00328802) , 
5, 0.00814159, 1, 0, 0.64557,-0.00332992) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000288216,-0.0174329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702529,0.0164414) , 
6, 0.0521841, 1, 0, 0.240341,0.00205118) , 
4, 0.0260791, 1, 0, 0.49849,-0.00137682)    );
  // itree = 756
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.234603,-0.0128302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546637,0.00372839) , 
4, 0.00581861, 1, 0, 0.529386,0.0011463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.057357,-0.0106602) , 
3, 151.382, 1, 0, 0.492004,0.000493915)    );
  // itree = 757
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674542,-0.0213889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460187,0.00894577) , 
5, 0.021857, 1, 0, 0.568905,-0.00747783) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.565506,0.000664166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.231937,0.0176824) , 
3, 96.4682, 1, 0, 0.490245,0.00183717) , 
3, 12.5832, 1, 0, 0.502421,0.000395243)    );
  // itree = 758
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926427,0.00796812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00152493,-0.0177811) , 
0, 0.00259577, 1, 0, 0.652408,0.00308027) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744396,-0.00762184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131071) , 
0, 0.00288758, 1, 0, 0.107343,-0.00207555) , 
4, 0.0289977, 1, 0, 0.504449,0.00168072)    );
  // itree = 759
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896653,-0.00549151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000544576,0.0136419) , 
0, 0.00288758, 1, 0, 0.486845,-0.00260128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605812,0.0241679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52352,0.00124178) , 
2, 0.19048, 1, 0, 0.5602,0.00520682) , 
6, 0.0550822, 1, 0, 0.494586,-0.00177729)    );
  // itree = 760
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70405,0.00656713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.134183,-0.012366) , 
4, 0.0202976, 1, 0, 0.459187,0.000796081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923315,0.00364892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4331,-0.00732708) , 
0, 0.000961071, 1, 0, 0.585993,-0.00367529) , 
6, 0.0434886, 1, 0, 0.502673,-0.000737314)    );
  // itree = 761
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.714188,0.00264206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.405386,-0.00485406) , 
2, 0.102001, 1, 0, 0.524805,-0.00141072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.294522,0.0135074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169875,0.00402612) , 
4, 0.0260602, 1, 0, 0.228503,0.00511962) , 
2, 0.428441, 1, 0, 0.496176,-0.00077975)    );
  // itree = 762
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739283,0.0219565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316612,0.000479302) , 
4, 0.0260865, 1, 0, 0.602883,0.00607253) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.795902,-0.0203777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440847,-0.000797725) , 
2, 0.0238042, 1, 0, 0.479876,-0.00148796) , 
3, 12.6158, 1, 0, 0.498211,-0.000361011)    );
  // itree = 763
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779354,0.00780836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460859,-0.00519126) , 
2, 0.0577829, 1, 0, 0.545077,-0.00155) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.134141,0.00165993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503663,0.0263841) , 
6, 0.0492296, 1, 0, 0.233399,0.00451084) , 
2, 0.404671, 1, 0, 0.505399,-0.000778442)    );
  // itree = 764
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506766,0.0010334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104029,-0.00893974) , 
2, 0.357034, 1, 0, 0.431422,-0.000527086) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839528,-0.001718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822977,-0.0138123) , 
7, 0.0007138, 1, 0, 0.831282,-0.00984016) , 
7, 0.000554178, 1, 0, 0.503587,-0.00220785)    );
  // itree = 765
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.229369,0.0158618) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508259,-0.00392323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597025,0.0039402) , 
6, 0.0550824, 1, 0, 0.517731,-0.00149813) , 
4, 0.00580638, 1, 0, 0.501633,-0.00103016)    );
  // itree = 766
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230707,-0.0206483) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670631,0.00709267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347943,-0.00668017) , 
2, 0.166616, 1, 0, 0.509797,-0.00106917) , 
5, 0.00579096, 1, 0, 0.496187,-0.0017626)    );
  // itree = 767
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956534,0.0267196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0105118,-0.0151968) , 
0, 0.000962418, 1, 0, 0.178712,0.00067371) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805327,-0.00221851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814142,-0.00789508) , 
7, 0.000449279, 1, 0, 0.809852,-0.00489677) , 
7, 0.000155749, 1, 0, 0.501691,-0.00217693)    );
  // itree = 768
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.424402,-0.00338626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282516,0.0477842) , 
3, 50.1948, 1, 0, 0.357849,0.00535346) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689754,0.0063705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.434484,-0.00278852) , 
4, 0.0186491, 1, 0, 0.511255,-0.000155001) , 
4, 0.00870241, 1, 0, 0.49712,0.000352561)    );
  // itree = 769
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669694,-0.00400434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394919,-0.0189136) , 
3, 75.4602, 1, 0, 0.600462,-0.00514404) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.34041e-05,-0.0232865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.694754,0.00402212) , 
6, 0.040586, 1, 0, 0.412077,0.000437291) , 
4, 0.0202992, 1, 0, 0.493082,-0.00196264)    );
  // itree = 770
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902436,0.00529299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131887) , 
0, 0.00384811, 1, 0, 0.563993,0.00227486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.358887,-0.0228339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155799,0.000456914) , 
2, 0.0949838, 1, 0, 0.203362,-0.00492436) , 
3, 100.914, 1, 0, 0.500834,0.00101403)    );
  // itree = 771
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243681,-0.0228508) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.487734,0.00145333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596857,-0.00444103) , 
6, 0.0463919, 1, 0, 0.518709,-0.000624185) , 
4, 0.00580854, 1, 0, 0.503615,-0.0010934)    );
  // itree = 772
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853677,0.0108793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.031918) , 
5, 0.0180219, 1, 0, 0.58275,0.00211149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713416,-0.0156136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438772,-0.00498455) , 
4, 0.0194676, 1, 0, 0.46734,-0.00430937) , 
4, 0.0173943, 1, 0, 0.504819,-0.00222424)    );
  // itree = 773
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941837,0.0012782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849049,-0.0147619) , 
4, 0.0243262, 1, 0, 0.925667,-0.00295103) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0346908,-0.00417441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428511,0.0195161) , 
6, 0.0521841, 1, 0, 0.115746,0.00115101) , 
0, 0.00192505, 1, 0, 0.501087,-0.000800644)    );
  // itree = 774
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841785,0.00235354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.35055,-0.0160061) , 
4, 0.0144907, 1, 0, 0.597717,-0.00427421) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.756468,0.00475419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202195,-0.00671983) , 
5, 0.0266411, 1, 0, 0.452774,0.000282111) , 
5, 0.0169617, 1, 0, 0.495794,-0.00107022)    );
  // itree = 775
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.234776,0.0138257) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671308,-0.00656931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381839,0.00225308) , 
4, 0.0215481, 1, 0, 0.508837,-0.0011754) , 
4, 0.00581861, 1, 0, 0.493389,-0.000746097)    );
  // itree = 776
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709065,-0.00418816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.267988,0.00485329) , 
4, 0.0261106, 1, 0, 0.568487,-0.00113233) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796174,0.00853768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0875765,0.00076216) , 
0, 0.00192505, 1, 0, 0.26454,0.00310036) , 
2, 0.309454, 1, 0, 0.490067,-4.02683e-05)    );
  // itree = 777
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918929,-0.00342266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546733,-0.0131339) , 
0, 0.00219881, 1, 0, 0.8963,-0.00443728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000504052,0.0135121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136462) , 
6, 0.0463918, 1, 0, 0.000385406,-3.73847e-05) , 
0, 0.00288733, 1, 0, 0.498709,-0.00248468)    );
  // itree = 778
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724367,0.00860555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117671,-0.013049) , 
2, 0.0952167, 1, 0, 0.359466,-0.00234144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607861,0.00519312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56935,-0.00385303) , 
6, 0.053979, 1, 0, 0.599736,0.00155689) , 
6, 0.0318951, 1, 0, 0.498193,-9.06198e-05)    );
  // itree = 779
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955683,0.0175097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00273293,-0.0103938) , 
0, 0.000962442, 1, 0, 0.166777,0.000860868) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760387,0.000669654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8218,-0.0067784) , 
4, 0.0184297, 1, 0, 0.80157,-0.00467156) , 
7, 0.000145068, 1, 0, 0.49745,-0.00202106)    );
  // itree = 780
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.389519,-0.0225782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718076,-0.00270922) , 
6, 0.0173941, 1, 0, 0.666889,-0.00304811) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.858259,0.00792341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0986142,-0.00240145) , 
0, 0.00192488, 1, 0, 0.344305,0.00296769) , 
2, 0.166606, 1, 0, 0.507385,-7.35633e-05)    );
  // itree = 781
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979351,-0.00198924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712166,-0.00770826) , 
0, 0.000228823, 1, 0, 0.935967,-0.00357553) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.013567,-0.00733344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.734431,0.00635133) , 
7, 0.000161049, 1, 0, 0.307362,0.00190332) , 
0, 0.000962526, 1, 0, 0.505072,0.000180111)    );
  // itree = 782
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.590398,0.00683707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592822,-0.0170979) , 
3, 7.19812, 1, 0, 0.59142,-0.00427008) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549652,0.00662508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254091,-0.00442826) , 
2, 0.333252, 1, 0, 0.481772,0.00144138) , 
3, 12.5987, 1, 0, 0.498318,0.000579524)    );
  // itree = 783
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.588347,-0.00154737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581367,0.0135201) , 
3, 23.4261, 1, 0, 0.585848,0.00148953) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623299,-0.00668416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125602,0.00489609) , 
5, 0.0278344, 1, 0, 0.425833,-0.002856) , 
3, 37.8461, 1, 0, 0.494452,-0.000992508)    );
  // itree = 784
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915325,-0.00352008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583247,-0.00999942) , 
0, 0.00219347, 1, 0, 0.8962,-0.00401504) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000403552,0.00882783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138063) , 
6, 0.0463855, 1, 0, 0.000310654,-5.67025e-05) , 
0, 0.00288758, 1, 0, 0.499198,-0.00226095)    );
  // itree = 785
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925734,-0.0240674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261679,0.00763992) , 
0, 0.000600792, 1, 0, 0.488074,-0.00335577) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.426817,0.00695425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626435,-0.00202006) , 
6, 0.0434945, 1, 0, 0.500491,0.00084126) , 
5, 0.0115086, 1, 0, 0.498693,0.000233453)    );
  // itree = 786
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589834,0.00475372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551274,-0.00802219) , 
3, 23.973, 1, 0, 0.564662,-0.00216093) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764746,0.00880375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000431025,0.0193267) , 
0, 0.00288514, 1, 0, 0.220916,0.00469128) , 
3, 100.695, 1, 0, 0.506671,-0.00100496)    );
  // itree = 787
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830406,0.0020022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.016061,-0.0275734) , 
5, 0.0232552, 1, 0, 0.627815,-0.00253434) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000164783,-0.0186491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440656,0.0140844) , 
5, 0.0230624, 1, 0, 0.34003,0.00153103) , 
4, 0.0231914, 1, 0, 0.496794,-0.000683483)    );
  // itree = 788
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658662,0.00600938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.222226,-0.00458497) , 
2, 0.142825, 1, 0, 0.423259,-0.000274198) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861761,-0.0181507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824311,0.00110236) , 
2, 0.11897, 1, 0, 0.836019,-0.00455004) , 
7, 0.000534736, 1, 0, 0.503536,-0.0011058)    );
  // itree = 789
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991511,0.0133744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525301,-0.024615) , 
0, 0.000950997, 1, 0, 0.807696,-0.00500779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862407,0.00570914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000126392,-0.00458457) , 
0, 0.00385011, 1, 0, 0.464077,0.00253396) , 
2, 0.0238088, 1, 0, 0.50243,0.0016922)    );
  // itree = 790
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631554,0.00918694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.244303,-0.0104616) , 
2, 0.40464, 1, 0, 0.589236,0.00226564) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.514782,-0.00728847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.262334,0.0065238) , 
2, 0.285706, 1, 0, 0.433922,-0.00165726) , 
3, 37.843, 1, 0, 0.499684,3.75727e-06)    );
  // itree = 791
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.407632,0.000214238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837473,-0.00751106) , 
7, 0.00047394, 1, 0, 0.498143,-0.00154085) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630217,0.0316677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594007,0.0108031) , 
2, 0.214071, 1, 0, 0.612153,0.0100529) , 
6, 0.05798, 1, 0, 0.504263,-0.000918501)    );
  // itree = 792
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793512,0.0135449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393532,-0.00554633) , 
2, 0.0476045, 1, 0, 0.484649,-0.0014218) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.467295,-0.000438808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657882,0.0132304) , 
4, 0.0260924, 1, 0, 0.583231,0.00481556) , 
6, 0.0492859, 1, 0, 0.505839,-8.11062e-05)    );
  // itree = 793
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920302,-0.010439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157517,0.0110594) , 
0, 0.00192292, 1, 0, 0.578951,-0.00346228) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893309,0.00629347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000117855,-0.00762365) , 
0, 0.00288758, 1, 0, 0.439446,0.00282758) , 
3, 37.7906, 1, 0, 0.499818,0.000105594)    );
  // itree = 794
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231019,-0.0190572) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74475,-0.00795766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426873,0.00282136) , 
2, 0.0714387, 1, 0, 0.512567,0.000396518) , 
5, 0.0058408, 1, 0, 0.497842,-9.85426e-05)    );
  // itree = 795
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863939,0.0302691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.077265,0.000807869) , 
2, 0.0714068, 1, 0, 0.448561,0.00445742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674509,-0.0150927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418321,-0.000836974) , 
2, 0.119044, 1, 0, 0.5091,-0.00264813) , 
4, 0.0115945, 1, 0, 0.499139,-0.00147901)    );
  // itree = 796
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303088,0.0195396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461486,0.00170886) , 
4, 0.00581311, 1, 0, 0.451768,0.0012678) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603776,-0.0264232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587122,-0.00606444) , 
6, 0.0451464, 1, 0, 0.589084,-0.00722179) , 
6, 0.0434893, 1, 0, 0.498132,-0.00159862)    );
  // itree = 797
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92408,-0.020367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401719,-0.00368365) , 
0, 0.000680696, 1, 0, 0.597505,-0.00666253) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0553222,-0.0232189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539276,0.00302727) , 
4, 0.0173994, 1, 0, 0.462668,0.000399002) , 
5, 0.0172454, 1, 0, 0.504434,-0.00178833)    );
  // itree = 798
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.276933,-0.0130224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855217,0.00921483) , 
7, 0.000191551, 1, 0, 0.587438,0.00186882) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577268,-0.0117636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.40355,-0.000312406) , 
3, 48.0561, 1, 0, 0.459876,-0.00217932) , 
3, 25.2297, 1, 0, 0.497794,-0.000976008)    );
  // itree = 799
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60906,-0.00659561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43909,0.0115742) , 
5, 0.0159935, 1, 0, 0.489565,0.00152751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905761,0.0058426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416026,-0.011869) , 
0, 0.000955934, 1, 0, 0.565205,-0.00585714) , 
6, 0.052182, 1, 0, 0.501948,0.00031852)    );
  // itree = 800
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677185,0.00380761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.07495e-05,-0.0224608) , 
4, 0.0261255, 1, 0, 0.483377,0.00071277) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686354,-0.0161638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455816,-0.000717024) , 
5, 0.028759, 1, 0, 0.563049,-0.00730962) , 
6, 0.052182, 1, 0, 0.495931,-0.000551403)    );
  // itree = 801
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.795351,-0.0190015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.487537,3.6501e-05) , 
2, 0.0215367, 1, 0, 0.522735,-0.000810053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197811,-0.0160772) , 
2, 0.452367, 1, 0, 0.502261,-0.00149742)    );
  // itree = 802
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707891,0.000849269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381529,-0.0197535) , 
6, 0.031749, 1, 0, 0.611964,-0.00309117) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0139305,-0.0441784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536891,0.00348372) , 
4, 0.0174022, 1, 0, 0.455603,0.000235217) , 
5, 0.0173648, 1, 0, 0.503688,-0.000787743)    );
  // itree = 803
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.858325,0.0758756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806247,0.0127119) , 
4, 0.00868173, 1, 0, 0.81807,0.00495853) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567962,-0.00460641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.280732,0.00183236) , 
2, 0.27316, 1, 0, 0.465133,-0.00114336) , 
2, 0.0238023, 1, 0, 0.505512,-0.000445243)    );
  // itree = 804
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926531,-0.0194825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397897,-0.00197545) , 
0, 0.000684044, 1, 0, 0.600767,-0.00483787) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0612165,-0.0161808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538456,0.0023429) , 
4, 0.0173966, 1, 0, 0.462854,0.000138448) , 
5, 0.0172311, 1, 0, 0.505161,-0.0013881)    );
  // itree = 805
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637557,0.00300824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0267568) , 
4, 0.023224, 1, 0, 0.417013,-9.98257e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880323,-0.00420131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781149,0.0163944) , 
0, 0.0017665, 1, 0, 0.82725,0.00552304) , 
7, 0.000534737, 1, 0, 0.496292,0.000986805)    );
  // itree = 806
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472906,-0.00170409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616225,-0.0171565) , 
6, 0.0469379, 1, 0, 0.480544,-0.00135523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936688,0.0260321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.412363,0.00256573) , 
0, 0.000959052, 1, 0, 0.574085,0.00447731) , 
6, 0.0492853, 1, 0, 0.501052,-7.64814e-05)    );
  // itree = 807
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510271,-0.00706611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351504,0.0051518) , 
3, 37.8438, 1, 0, 0.418453,-0.000286639) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.465607,-0.0215375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874636,0.000575039) , 
4, 0.0235631, 1, 0, 0.81841,-0.00459124) , 
7, 0.000535426, 1, 0, 0.496172,-0.0011231)    );
  // itree = 808
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705548,-0.00471394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430263,0.0133443) , 
5, 0.0221962, 1, 0, 0.571747,0.000240084) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842174,-0.00739778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132365) , 
0, 0.00288758, 1, 0, 0.358749,-0.0045676) , 
3, 63.0727, 1, 0, 0.496084,-0.00146775)    );
  // itree = 809
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562319,-0.00192907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383353,0.0153404) , 
3, 37.7725, 1, 0, 0.458512,0.00330428) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681217,-0.00971617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.412541,0.00030841) , 
2, 0.119052, 1, 0, 0.505392,-0.00130809) , 
4, 0.0116019, 1, 0, 0.497907,-0.000571646)    );
  // itree = 810
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73016,0.00279601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389569,-0.0042233) , 
2, 0.166629, 1, 0, 0.567718,-0.000710384) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.315214,-0.0243318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168776,-2.66879e-05) , 
2, 0.0949961, 1, 0, 0.204708,-0.0062418) , 
3, 100.785, 1, 0, 0.504717,-0.00167037)    );
  // itree = 811
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706481,0.00800218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0201195,-0.0170391) , 
5, 0.0273098, 1, 0, 0.494533,0.00244067) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607968,0.00452159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499588,-0.0162468) , 
2, 0.309495, 1, 0, 0.57354,-0.00526672) , 
6, 0.0550824, 1, 0, 0.502822,0.00163212)    );
  // itree = 812
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971246,0.0412249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933803,-0.00448436) , 
4, 0.0124012, 1, 0, 0.944127,0.00232459) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.223099,-0.000132272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.755964,-0.0090452) , 
7, 0.000535656, 1, 0, 0.305444,-0.00208788) , 
0, 0.000962526, 1, 0, 0.501814,-0.000731214)    );
  // itree = 813
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683456,-0.0154684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570093,0.0144898) , 
5, 0.00733437, 1, 0, 0.579945,0.00393247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719664,-0.0135323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388188,-0.00298876) , 
4, 0.0215603, 1, 0, 0.460609,-0.00345344) , 
4, 0.0174206, 1, 0, 0.499662,-0.00103639)    );
  // itree = 814
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702686,-0.0108214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379105,0.00662501) , 
2, 0.261726, 1, 0, 0.61136,-0.00339854) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634363,0.0062914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000274308,-0.0249015) , 
4, 0.0319043, 1, 0, 0.492339,0.00223529) , 
3, 12.5987, 1, 0, 0.510028,0.00139799)    );
  // itree = 815
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899183,-0.0153239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00266198,0.032726) , 
0, 0.00221927, 1, 0, 0.511853,-0.00623243) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576226,0.00502868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332915,-0.00490566) , 
2, 0.285715, 1, 0, 0.496723,0.00036356) , 
4, 0.0144987, 1, 0, 0.500329,-0.00120836)    );
  // itree = 816
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.557687,-0.000204201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63978,-0.00663391) , 
6, 0.0521867, 1, 0, 0.570596,-0.00100128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844307,0.00730482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000200674,-0.00240856) , 
0, 0.00288758, 1, 0, 0.317803,0.00337628) , 
3, 75.6854, 1, 0, 0.500877,0.000206017)    );
  // itree = 817
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.717274,-0.00677697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500292,0.00758749) , 
2, 0.0872803, 1, 0, 0.602052,0.000662445) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.365497,-0.0177065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260319,-9.10945e-05) , 
2, 0.318588, 1, 0, 0.288161,-0.00317394) , 
2, 0.261897, 1, 0, 0.499345,-0.000592846)    );
  // itree = 818
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472856,0.0120882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61803,-0.00520525) , 
4, 0.00872575, 1, 0, 0.6038,-0.00179963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825999,0.0181767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167368,0.00137603) , 
0, 0.000962526, 1, 0, 0.273134,0.00308244) , 
2, 0.285706, 1, 0, 0.502536,-0.000304525)    );
  // itree = 819
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971655,0.0107966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764989,-0.00891182) , 
8, 0.262568, 1, 0, 0.94293,0.00115169) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.223681,-0.00143821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740425,-0.00868916) , 
7, 0.000535657, 1, 0, 0.306864,-0.0023976) , 
0, 0.000962212, 1, 0, 0.502797,-0.00130429)    );
  // itree = 820
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669559,0.00351653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521173,-0.00362102) , 
3, 37.785, 1, 0, 0.588616,-0.000351391) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831564,0.010681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.146871,-0.011719) , 
0, 0.000962256, 1, 0, 0.257417,-0.00406107) , 
2, 0.309514, 1, 0, 0.501941,-0.00132221)    );
  // itree = 821
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543637,-0.00129615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629362,0.00836365) , 
6, 0.0521868, 1, 0, 0.557545,0.000404545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735236,0.0210968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000162472,-0.00660518) , 
0, 0.00288733, 1, 0, 0.161447,0.00663259) , 
3, 113.528, 1, 0, 0.503805,0.00124952)    );
  // itree = 822
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.457179,-0.000931007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625065,0.0122936) , 
6, 0.0447081, 1, 0, 0.486045,0.00079275) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913103,0.0128385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39656,-0.0149234) , 
0, 0.000957846, 1, 0, 0.548773,-0.00769853) , 
6, 0.0521841, 1, 0, 0.496311,-0.000596951)    );
  // itree = 823
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587396,-0.00332702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573452,-0.0239593) , 
3, 34.1956, 1, 0, 0.586224,-0.00320037) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.41473,0.0038935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528204,-0.00886792) , 
6, 0.0550842, 1, 0, 0.426045,0.000791446) , 
3, 37.7955, 1, 0, 0.494144,-0.000905654)    );
  // itree = 824
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.404222,-0.000318076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.841995,-0.00666046) , 
7, 0.000475515, 1, 0, 0.493303,-0.00159133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66435,0.0262105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533509,6.05276e-05) , 
2, 0.237837, 1, 0, 0.603787,0.00601775) , 
6, 0.05798, 1, 0, 0.499326,-0.00117652)    );
  // itree = 825
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589552,-0.00253169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556561,-0.0132724) , 
3, 43.2487, 1, 0, 0.585615,-0.00242645) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.111918,-0.00175546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794543,0.00883899) , 
7, 0.000144606, 1, 0, 0.408593,0.00287891) , 
3, 50.4612, 1, 0, 0.506492,-5.5144e-05)    );
  // itree = 826
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.788246,0.0210809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67262,-0.0164492) , 
2, 0.0385393, 1, 0, 0.768887,0.00326496) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.215198,-0.0156719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.457853,-7.87796e-05) , 
5, 0.0115471, 1, 0, 0.433299,-0.00112794) , 
2, 0.0476176, 1, 0, 0.501498,-0.000235198)    );
  // itree = 827
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.346677,-0.0230814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692402,0.0281312) , 
5, 0.00855085, 1, 0, 0.478491,-0.00630688) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667975,0.00781253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385561,-0.00296887) , 
2, 0.142822, 1, 0, 0.505188,-7.08709e-05) , 
5, 0.011219, 1, 0, 0.501542,-0.000922547)    );
  // itree = 828
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713402,0.00789762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589547,0.04364) , 
6, 0.0550856, 1, 0, 0.703276,0.003535) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.433253,-0.00406266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196928,0.0059064) , 
3, 88.3096, 1, 0, 0.37528,-0.0010821) , 
2, 0.119011, 1, 0, 0.503703,0.000725675)    );
  // itree = 829
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943353,-0.00535137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.294518,0.00252087) , 
0, 0.000962526, 1, 0, 0.49327,-0.000136448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642846,-0.0228267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594079,-0.0095322) , 
2, 0.190303, 1, 0, 0.616755,-0.0135272) , 
6, 0.0579807, 1, 0, 0.499928,-0.000858462)    );
  // itree = 830
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909958,-0.0103294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000428979,-0.00374072) , 
0, 0.00192488, 1, 0, 0.161415,-0.00118878) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936018,-0.00335535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700999,0.00848493) , 
0, 0.00110545, 1, 0, 0.812189,0.00274985) , 
7, 0.000143227, 1, 0, 0.496391,0.000838568)    );
  // itree = 831
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807625,0.00652727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0204727) , 
4, 0.0289385, 1, 0, 0.687471,0.00223096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864851,-0.0114117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.0275e-05,-0.00800842) , 
0, 0.00385011, 1, 0, 0.119263,-0.00234747) , 
5, 0.0287535, 1, 0, 0.498287,0.00070658)    );
  // itree = 832
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.252352,-0.0169228) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59173,-0.00623455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.471184,5.83464e-05) , 
3, 25.2309, 1, 0, 0.50715,-0.000832124) , 
5, 0.00567305, 1, 0, 0.495684,-0.00132229)    );
  // itree = 833
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.745827,-0.00902907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416523,-0.0222407) , 
3, 88.0645, 1, 0, 0.693545,-0.00588908) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.469705,0.00560789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303292,-0.0028686) , 
5, 0.0230124, 1, 0, 0.369876,0.000843223) , 
2, 0.119021, 1, 0, 0.497077,-0.00180255)    );
  // itree = 834
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.288994,-0.019923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551894,0.00230265) , 
5, 0.00567089, 1, 0, 0.541094,0.000654398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0726067,-0.0101874) , 
3, 138.756, 1, 0, 0.497278,-2.21235e-05)    );
  // itree = 835
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930965,-0.000164326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790309,0.010919) , 
0, 0.00128117, 1, 0, 0.877383,0.00410829) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000143306,0.00300935) , 
5, 0.0345006, 1, 0, 7.94013e-05,-0.000140442) , 
0, 0.00384811, 1, 0, 0.499191,0.00227673)    );
  // itree = 836
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0953684,-0.0292619) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702062,0.00354951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374918,-0.00456426) , 
2, 0.166616, 1, 0, 0.540078,-0.000727533) , 
6, 0.0086971, 1, 0, 0.503066,-0.0015024)    );
  // itree = 837
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646706,0.00335553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00833178,-0.0218255) , 
4, 0.0231828, 1, 0, 0.421029,0.000119351) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958798,0.0125904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730005,-0.0110237) , 
0, 0.000430638, 1, 0, 0.827703,-0.00783621) , 
7, 0.000543648, 1, 0, 0.496692,-0.0013608)    );
  // itree = 838
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816471,0.00736389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499392,-0.00577962) , 
2, 0.0476176, 1, 0, 0.568535,-0.0021234) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776971,0.00935495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000243099,0.0133071) , 
0, 0.00385011, 1, 0, 0.263856,0.0036432) , 
3, 88.1868, 1, 0, 0.503006,-0.000883142)    );
  // itree = 839
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481117,0.000518149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855548,0.0071617) , 
7, 0.000543647, 1, 0, 0.549838,0.00110242) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730179,-0.0062462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000903905,0.01949) , 
0, 0.00288758, 1, 0, 0.217523,-0.00362081) , 
2, 0.380867, 1, 0, 0.495986,0.000337014)    );
  // itree = 840
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.467519,0.00231551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654056,-0.0047734) , 
6, 0.0377018, 1, 0, 0.55461,-0.00111654) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702764,-0.0124919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0315771,-0.00289221) , 
0, 0.00192488, 1, 0, 0.167292,-0.0075109) , 
3, 113.528, 1, 0, 0.503689,-0.00195721)    );
  // itree = 841
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838449,-5.17205e-07) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000163353,-0.0188709) , 
4, 0.0231885, 1, 0, 0.663292,-0.0023529) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0607416,-0.0119351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43136,0.010513) , 
4, 0.0232022, 1, 0, 0.327881,0.00156868) , 
5, 0.0230519, 1, 0, 0.495396,-0.000389888)    );
  // itree = 842
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654171,-0.00887574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527302,0.000685605) , 
5, 0.0172657, 1, 0, 0.56897,-0.00128353) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810083,0.00949556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000230278,0.00436121) , 
0, 0.00288758, 1, 0, 0.259494,0.00372102) , 
3, 88.3067, 1, 0, 0.500889,-0.000182588)    );
  // itree = 843
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983676,0.0082931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71108,-0.00894004) , 
0, 0.000229113, 1, 0, 0.938524,-0.00183187) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00267121,-0.00935836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735781,0.00543608) , 
7, 0.000144606, 1, 0, 0.309786,0.00162148) , 
0, 0.000962442, 1, 0, 0.505352,0.000547326)    );
  // itree = 844
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52758,-0.0272899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583393,-0.00196397) , 
5, 0.0113247, 1, 0, 0.574927,-0.00302324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646375,0.00266722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0312198) , 
5, 0.0336207, 1, 0, 0.466733,0.000631145) , 
3, 25.2309, 1, 0, 0.499422,-0.000472992)    );
  // itree = 845
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75991,-0.0206465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735458,-0.010708) , 
4, 0.00876142, 1, 0, 0.739086,-0.00605646) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.49004,0.0100201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376566,-0.00102868) , 
3, 25.1967, 1, 0, 0.408645,0.00099085) , 
2, 0.0714264, 1, 0, 0.49914,-0.000939132)    );
  // itree = 846
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765606,0.00748823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432946,-0.00227062) , 
2, 0.0646101, 1, 0, 0.52185,-0.000230068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220872,0.0112335) , 
2, 0.452367, 1, 0, 0.503537,0.000173346)    );
  // itree = 847
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816861,0.0119342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512832,-0.00773994) , 
2, 0.0476045, 1, 0, 0.582642,-0.00312511) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917716,0.00699382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0778357,-0.00320336) , 
0, 0.00192488, 1, 0, 0.394853,0.00171593) , 
3, 50.4571, 1, 0, 0.496197,-0.000896639)    );
  // itree = 848
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629477,0.00873219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4283,-0.00254703) , 
3, 50.4607, 1, 0, 0.539043,0.00117704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0913209,-0.00423834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462033,-0.0119013) , 
6, 0.0463344, 1, 0, 0.215259,-0.00647654) , 
2, 0.404671, 1, 0, 0.497532,0.000195803)    );
  // itree = 849
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488359,-0.0100836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474769,0.00336783) , 
5, 0.0099501, 1, 0, 0.476601,0.000269737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881558,-0.00968868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362761,-0.00186575) , 
0, 0.0019183, 1, 0, 0.57366,-0.00490167) , 
6, 0.0463871, 1, 0, 0.503774,-0.00117809)    );
  // itree = 850
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.419207,0.000586031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433197,-0.0090386) , 
6, 0.0376842, 1, 0, 0.423961,-0.00135813) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718241,-0.00841168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877365,0.0126396) , 
4, 0.0244692, 1, 0, 0.838076,0.00457164) , 
7, 0.000535426, 1, 0, 0.503221,-0.0002232)    );
  // itree = 851
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723676,0.00156964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404538,-0.0233255) , 
3, 88.1648, 1, 0, 0.670097,-0.00227376) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793477,0.00539284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000111943,-0.00450211) , 
0, 0.00384977, 1, 0, 0.352871,0.00265409) , 
2, 0.142825, 1, 0, 0.496338,0.000425452)    );
  // itree = 852
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631535,-0.00658001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416571,-0.0241613) , 
2, 0.204032, 1, 0, 0.61329,-0.00417963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859796,0.00932589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.191853,-0.00113812) , 
0, 0.000962442, 1, 0, 0.305395,0.00111381) , 
2, 0.238088, 1, 0, 0.500462,-0.00223985)    );
  // itree = 853
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690075,0.006079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486668,-0.00448244) , 
4, 0.0202917, 1, 0, 0.577531,-2.16878e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816625,-0.00899027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.42566e-05,-0.00697945) , 
0, 0.00288733, 1, 0, 0.304286,-0.00450746) , 
3, 75.5011, 1, 0, 0.498916,-0.00129838)    );
  // itree = 854
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953435,-0.00168511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849514,0.0156881) , 
2, 0.285366, 1, 0, 0.937852,0.00144341) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.168526,-0.0174085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335777,-0.00130833) , 
4, 0.0145011, 1, 0, 0.303796,-0.00198746) , 
0, 0.000962442, 1, 0, 0.500157,-0.000924953)    );
  // itree = 855
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692384,0.00378919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536666,-0.00696277) , 
3, 37.7947, 1, 0, 0.607028,-0.00129367) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.856327,0.0111103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179125,-0.000215641) , 
0, 0.000962526, 1, 0, 0.289073,0.0014843) , 
2, 0.261897, 1, 0, 0.502052,-0.000376486)    );
  // itree = 856
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955896,0.0126293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00319237,-0.0118643) , 
0, 0.00162704, 1, 0, 0.622011,0.00349593) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.386952,-0.00913897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429431,0.00391149) , 
5, 0.0229688, 1, 0, 0.416017,-0.00078323) , 
4, 0.0202924, 1, 0, 0.505141,0.00106816)    );
  // itree = 857
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.269936,0.00410586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58801,-0.0181669) , 
4, 0.00663119, 1, 0, 0.455038,-0.00516986) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.489467,0.00296847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620562,-0.00545587) , 
6, 0.052182, 1, 0, 0.512838,8.80761e-05) , 
4, 0.0115999, 1, 0, 0.503445,-0.000766364)    );
  // itree = 858
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498546,-0.0130174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418382,0.00387677) , 
5, 0.00951896, 1, 0, 0.429152,8.83032e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567069,0.00860513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599982,-0.00915373) , 
1, 1.11241, 1, 0, 0.59351,-0.00455456) , 
6, 0.0405976, 1, 0, 0.495281,-0.00177976)    );
  // itree = 859
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920295,-0.00326428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906148,-0.0199694) , 
5, 0.026093, 1, 0, 0.918764,-0.00529237) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00143899,-0.0118203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437534,0.01242) , 
6, 0.0492922, 1, 0, 0.11821,0.000353523) , 
0, 0.00192505, 1, 0, 0.498329,-0.00232726)    );
  // itree = 860
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918569,-0.00890399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916115,0.0181243) , 
0, 0.0016499, 1, 0, 0.918303,-0.00470557) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000859147,-0.00929161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777978,0.00851338) , 
7, 0.000554179, 1, 0, 0.116027,0.000379762) , 
0, 0.00192505, 1, 0, 0.500825,-0.00205933)    );
  // itree = 861
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830953,0.0206625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125931,-0.0192757) , 
2, 0.0237673, 1, 0, 0.311251,-0.0073773) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695325,0.00636379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450564,-0.00524623) , 
4, 0.0186246, 1, 0, 0.523871,-0.00102232) , 
4, 0.00869622, 1, 0, 0.50287,-0.00165004)    );
  // itree = 862
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739202,0.00617449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381256,-0.014246) , 
2, 0.14274, 1, 0, 0.554119,-0.00540732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.389903,0.000601391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594847,0.00742926) , 
6, 0.037687, 1, 0, 0.483079,0.00193023) , 
3, 12.6158, 1, 0, 0.49429,0.000772243)    );
  // itree = 863
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603767,0.00806772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536737,-0.00393773) , 
3, 11.9962, 1, 0, 0.547723,-0.0010008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.113976,0.00976513) , 
3, 125.968, 1, 0, 0.501951,-0.000462568)    );
  // itree = 864
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928543,-0.0197836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421733,0.000844094) , 
0, 0.000676924, 1, 0, 0.613279,-0.00444882) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755242,0.00416429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184666,-0.00932787) , 
5, 0.0271585, 1, 0, 0.450719,0.000144832) , 
5, 0.017289, 1, 0, 0.499971,-0.00124692)    );
  // itree = 865
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.476394,-0.0108684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498369,0.00220372) , 
5, 0.0107433, 1, 0, 0.495254,2.54428e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609641,-0.0176738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544855,0.000552643) , 
5, 0.0289366, 1, 0, 0.569166,-0.00729285) , 
6, 0.0550843, 1, 0, 0.503152,-0.000756549)    );
  // itree = 866
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554311,-0.00366626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20636,0.00757671) , 
2, 0.357132, 1, 0, 0.492798,-0.000936765) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918183,0.0173008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413253,-0.015028) , 
0, 0.000958289, 1, 0, 0.572388,-0.00791192) , 
6, 0.0521838, 1, 0, 0.505557,-0.00205497)    );
  // itree = 867
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705608,0.0300036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171106,0.00294235) , 
6, 0.0146512, 1, 0, 0.345578,0.00849199) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75705,-0.0137948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46026,0.0026188) , 
2, 0.0476252, 1, 0, 0.515529,0.000181712) , 
4, 0.00872714, 1, 0, 0.499614,0.000959899)    );
  // itree = 868
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.438783,0.00279763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226605,0.0390951) , 
3, 50.3571, 1, 0, 0.327118,0.00609511) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610644,-0.0213381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503415,-0.00138783) , 
4, 0.0112081, 1, 0, 0.509983,-0.00116693) , 
4, 0.00871336, 1, 0, 0.492518,-0.00047337)    );
  // itree = 869
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233634,0.0438827) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538317,-0.0012669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.234396,0.0127546) , 
2, 0.452367, 1, 0, 0.520482,-0.000257517) , 
4, 0.00580854, 1, 0, 0.504273,0.000321775)    );
  // itree = 870
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731917,0.00838816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141444,-0.00741092) , 
4, 0.0289839, 1, 0, 0.58665,0.00261758) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.35723,-0.00156719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796957,-0.00681881) , 
7, 0.000535657, 1, 0, 0.434051,-0.00174164) , 
3, 37.8461, 1, 0, 0.499428,0.000125964)    );
  // itree = 871
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616013,-0.00444256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.318117,0.00797182) , 
2, 0.236872, 1, 0, 0.516763,-7.36122e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209454,-0.0152269) , 
2, 0.452271, 1, 0, 0.497958,-0.000969139)    );
  // itree = 872
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.590505,0.0014015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584777,0.0282206) , 
3, 45.6535, 1, 0, 0.590076,0.00129049) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571202,-0.0118314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283038,-1.17534e-05) , 
2, 0.142869, 1, 0, 0.401655,-0.00302132) , 
3, 50.4612, 1, 0, 0.504045,-0.000678242)    );
  // itree = 873
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260973,-0.00845327) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726753,0.0115337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407424,4.64143e-05) , 
2, 0.0952537, 1, 0, 0.512215,0.00106133) , 
5, 0.0057652, 1, 0, 0.500371,0.000744416)    );
  // itree = 874
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579794,0.000952692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522976,-0.0103189) , 
3, 50.4622, 1, 0, 0.562481,-0.00139216) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807446,0.00813646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000239048,0.00202313) , 
0, 0.00288733, 1, 0, 0.262818,0.00398761) , 
3, 88.3088, 1, 0, 0.498492,-0.00024339)    );
  // itree = 875
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942858,-0.00185374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762095,-0.014868) , 
4, 0.026245, 1, 0, 0.922513,-0.00398597) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000684415,-0.0128499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73837,0.0109531) , 
7, 0.000534736, 1, 0, 0.112409,0.000104002) , 
0, 0.00192488, 1, 0, 0.497011,-0.00183774)    );
  // itree = 876
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625548,-0.00854077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.487021,-0.000802992) , 
3, 25.1967, 1, 0, 0.528009,-0.00162626) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.271189,0.0256837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.232393,0.00981969) , 
3, 50.5057, 1, 0, 0.251604,0.00721258) , 
2, 0.428558, 1, 0, 0.503218,-0.000833509)    );
  // itree = 877
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691924,0.012061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.480709,-0.00285414) , 
4, 0.0203025, 1, 0, 0.574266,0.00139143) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833053,-0.00890842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000169321,0.000525428) , 
0, 0.00288725, 1, 0, 0.357314,-0.00495062) , 
3, 63.0771, 1, 0, 0.497483,-0.000853117)    );
  // itree = 878
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93844,-0.0162989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180911,-0.00565235) , 
0, 0.000722428, 1, 0, 0.43954,-0.00482122) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937482,-0.00507813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340086,0.00459) , 
0, 0.000962442, 1, 0, 0.505821,0.000554668) , 
4, 0.0115956, 1, 0, 0.495079,-0.000316601)    );
  // itree = 879
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984259,0.0113422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479347,-0.0234483) , 
0, 0.000962212, 1, 0, 0.744327,-0.00411027) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899747,0.0046506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106878,-0.0043048) , 
0, 0.00192451, 1, 0, 0.406913,0.00115897) , 
2, 0.0714068, 1, 0, 0.500302,-0.00029944)    );
  // itree = 880
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.113507,-0.0206744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630473,0.00292933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44377,-0.00420138) , 
3, 50.3798, 1, 0, 0.546848,-0.000295961) , 
6, 0.0115961, 1, 0, 0.498554,-0.000927287)    );
  // itree = 881
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.251099,0.006912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833077,-0.00962499) , 
7, 0.000161048, 1, 0, 0.580836,-0.00411903) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562513,0.0133788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.256983,-0.00220664) , 
2, 0.190406, 1, 0, 0.404221,0.00178039) , 
3, 50.3474, 1, 0, 0.500931,-0.00144998)    );
  // itree = 882
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692503,0.00447218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.62657e-05,-0.0299931) , 
4, 0.0202849, 1, 0, 0.431998,0.000179869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703602,0.00893014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5576,-0.0104563) , 
2, 0.0713414, 1, 0, 0.585434,-0.00609973) , 
6, 0.040586, 1, 0, 0.493601,-0.00234132)    );
  // itree = 883
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70496,0.00380672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892658,0.027528) , 
7, 0.000610868, 1, 0, 0.725513,0.0024721) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879748,-0.00788388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253252,0.000271719) , 
0, 0.000962442, 1, 0, 0.386961,-0.00144077) , 
2, 0.0952167, 1, 0, 0.499045,-0.000145333)    );
  // itree = 884
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.216832,0.0163534) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495911,-0.0029423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605056,0.00605121) , 
6, 0.0521841, 1, 0, 0.513199,-0.000475911) , 
4, 0.00580854, 1, 0, 0.496153,-6.78408e-05)    );
  // itree = 885
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524422,-0.0357204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587528,-0.00567918) , 
3, 2.40318, 1, 0, 0.575129,-0.00896998) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545962,-0.00209314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17267,0.00823357) , 
3, 108.734, 1, 0, 0.478984,-0.000188869) , 
3, 12.6158, 1, 0, 0.49378,-0.00154021)    );
  // itree = 886
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227947,-0.0185739) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718288,0.00540827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164642,-0.00769601) , 
5, 0.0276333, 1, 0, 0.510088,0.00122071) , 
5, 0.00577515, 1, 0, 0.495543,0.000672874)    );
  // itree = 887
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636062,-0.00580217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.36224,0.00293291) , 
4, 0.0203117, 1, 0, 0.48841,-0.000807718) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904818,0.0208787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404561,-0.0180372) , 
0, 0.000955043, 1, 0, 0.561271,-0.00779164) , 
6, 0.0550848, 1, 0, 0.496176,-0.0015521)    );
  // itree = 888
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.217243,-0.0016519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443922,0.0329855) , 
4, 0.00497956, 1, 0, 0.331199,0.0037516) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597809,-0.0225814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508581,-0.00081567) , 
4, 0.0112013, 1, 0, 0.514078,-0.0011426) , 
4, 0.00870667, 1, 0, 0.496376,-0.000668865)    );
  // itree = 889
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789504,0.0159161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521371,-0.00381626) , 
2, 0.0317354, 1, 0, 0.57216,-0.000857849) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821336,0.0299191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.153309,0.001996) , 
0, 0.000962526, 1, 0, 0.260664,0.00373691) , 
2, 0.333252, 1, 0, 0.501898,0.000178554)    );
  // itree = 890
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833158,-0.0234834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930726,-0.00293135) , 
5, 0.00967257, 1, 0, 0.920609,-0.00496423) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000816949,-0.00648241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750115,0.0112924) , 
7, 0.000538844, 1, 0, 0.118344,0.000931325) , 
0, 0.00192488, 1, 0, 0.502503,-0.00189171)    );
  // itree = 891
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931785,0.00194798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0124649,-0.0238193) , 
0, 0.00136809, 1, 0, 0.602001,-0.00267404) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.417297,0.00449801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59236,-0.00456239) , 
6, 0.0521887, 1, 0, 0.454243,0.000637869) , 
5, 0.017001, 1, 0, 0.497334,-0.000327997)    );
  // itree = 892
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935499,-0.000681622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.012651,-0.0181401) , 
0, 0.00136139, 1, 0, 0.610119,-0.00337839) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730252,0.00488624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0247734) , 
5, 0.0321082, 1, 0, 0.449485,0.00139308) , 
5, 0.0173064, 1, 0, 0.497792,-4.18173e-05)    );
  // itree = 893
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.146741,5.48708e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856419,-0.0109856) , 
7, 0.000105905, 1, 0, 0.435181,-0.00354386) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.58224,-0.00188919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641649,0.0221418) , 
1, 1.38213, 1, 0, 0.59632,0.00114412) , 
6, 0.040591, 1, 0, 0.500169,-0.00165319)    );
  // itree = 894
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920037,-0.00272502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906986,-0.0162472) , 
5, 0.0240742, 1, 0, 0.917652,-0.00535192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00210371,-0.0109875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177475,0.0139317) , 
4, 0.0232022, 1, 0, 0.116647,0.000162781) , 
0, 0.00192484, 1, 0, 0.500412,-0.00247933)    );
  // itree = 895
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.525931,-0.0142106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332986,-0.00342983) , 
5, 0.00871284, 1, 0, 0.359596,-0.00258665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655535,0.00179539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450581,0.0124) , 
2, 0.33326, 1, 0, 0.609574,0.00247659) , 
6, 0.0318951, 1, 0, 0.502132,0.000300378)    );
  // itree = 896
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671264,0.0210996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180878,0.0392962) , 
6, 0.01446, 1, 0, 0.335085,0.00848324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574118,-0.000306507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163676,-0.0101429) , 
3, 113.371, 1, 0, 0.518231,-0.000918951) , 
4, 0.00870241, 1, 0, 0.501525,-6.13253e-05)    );
  // itree = 897
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.449033,-0.0029625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847785,0.00610045) , 
7, 0.000540999, 1, 0, 0.524599,-7.24332e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223019,-0.0111782) , 
2, 0.452279, 1, 0, 0.506445,-0.000573885)    );
  // itree = 898
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630063,-0.00335272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670228,-0.0198772) , 
4, 0.0220807, 1, 0, 0.633301,-0.00351088) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000175741,-0.0174303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432254,0.00944183) , 
5, 0.0230594, 1, 0, 0.339077,0.00111467) , 
4, 0.0231862, 1, 0, 0.4991,-0.00140109)    );
  // itree = 899
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708724,0.00578876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308312,-0.00645089) , 
2, 0.357034, 1, 0, 0.647343,0.00146155) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764696,-0.0165967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142575,0.00658956) , 
0, 0.00192505, 1, 0, 0.238418,-0.00325338) , 
4, 0.0260919, 1, 0, 0.498216,-0.000257891)    );
  // itree = 900
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820499,0.00718707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00104087,-0.0472089) , 
5, 0.0232096, 1, 0, 0.601633,0.00117823) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.379507,-0.0113818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415896,0.000829753) , 
5, 0.0230124, 1, 0, 0.404161,-0.00225913) , 
4, 0.0202976, 1, 0, 0.487987,-0.000799991)    );
  // itree = 901
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880207,0.0392942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762209,-0.0238075) , 
4, 0.0086316, 1, 0, 0.788171,-0.00647799) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.539151,0.00593301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332112,-0.00248867) , 
3, 63.0764, 1, 0, 0.462995,0.00117737) , 
2, 0.0238088, 1, 0, 0.500853,0.000286104)    );
  // itree = 902
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243057,0.0369513) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572293,0.00390897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163331,-0.0133203) , 
3, 113.282, 1, 0, 0.517241,0.00053991) , 
4, 0.00580854, 1, 0, 0.502516,0.0010858)    );
  // itree = 903
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513253,-0.0187174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715845,0.00733285) , 
4, 0.00591571, 1, 0, 0.70265,0.00127364) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413137,-0.0070139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126334,0.0172935) , 
3, 113.528, 1, 0, 0.367301,-0.00240118) , 
2, 0.119021, 1, 0, 0.497553,-0.000973849)    );
  // itree = 904
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977135,0.000777936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71573,-0.00796844) , 
0, 0.000274935, 1, 0, 0.934497,-0.00239731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.17332,-0.0115898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333635,0.00758936) , 
4, 0.0145011, 1, 0, 0.30377,0.00143546) , 
0, 0.000962442, 1, 0, 0.499652,0.00024513)    );
  // itree = 905
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934846,0.00200802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973584,0.037153) , 
5, 0.0255808, 1, 0, 0.941489,0.0033214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.482496,-0.0127161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260622,0.00170425) , 
2, 0.0713882, 1, 0, 0.30202,-0.000602499) , 
0, 0.000961071, 1, 0, 0.496331,0.000589829)    );
  // itree = 906
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907998,-0.008957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00165931,0.0346807) , 
0, 0.00288664, 1, 0, 0.580142,-0.00439262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.114599,-0.00829137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76961,0.00694337) , 
7, 0.000144605, 1, 0, 0.408215,0.00161921) , 
3, 50.4612, 1, 0, 0.50266,-0.00168327)    );
  // itree = 907
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750146,0.0185458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636971,0.0026736) , 
4, 0.0145089, 1, 0, 0.673733,0.00249047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.420025,0.00686842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.320086,-0.00240442) , 
3, 12.6345, 1, 0, 0.333254,-0.000602607) , 
2, 0.166662, 1, 0, 0.500854,0.000919951)    );
  // itree = 908
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559081,0.00247902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599585,-0.00594953) , 
6, 0.0492893, 1, 0, 0.567362,-0.000182487) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722485,-0.00707193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00115209,0.0222388) , 
0, 0.00288551, 1, 0, 0.249909,-0.00414651) , 
2, 0.333323, 1, 0, 0.495163,-0.00108404)    );
  // itree = 909
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.484107,-0.00153294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.111086,0.0240407) , 
3, 113.537, 1, 0, 0.427149,0.000324111) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838507,-0.0144803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76006,0.00681673) , 
2, 0.333374, 1, 0, 0.818683,-0.0080614) , 
7, 0.000534737, 1, 0, 0.504938,-0.0013419)    );
  // itree = 910
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.612861,-0.00672489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24028,0.00537979) , 
2, 0.261897, 1, 0, 0.497121,-0.00147036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930794,0.0392034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417041,0.000710897) , 
0, 0.000958289, 1, 0, 0.570453,0.00499462) , 
6, 0.0521868, 1, 0, 0.508748,-0.000445319)    );
  // itree = 911
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938724,0.000995259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823344,-0.0135353) , 
4, 0.0243713, 1, 0, 0.918056,-0.00315789) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000833016,-0.00593228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767106,0.0100194) , 
7, 0.000540999, 1, 0, 0.11607,0.000807119) , 
0, 0.00192451, 1, 0, 0.496923,-0.00107581)    );
  // itree = 912
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985657,0.00700836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681125,-0.0118649) , 
0, 0.000183079, 1, 0, 0.932627,-0.00409932) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00263578,-0.0162483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718297,0.00691419) , 
7, 0.000145067, 1, 0, 0.309957,0.00188338) , 
0, 0.000962526, 1, 0, 0.503051,2.81004e-05)    );
  // itree = 913
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683621,-0.00538392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.31916,0.00189098) , 
5, 0.0205981, 1, 0, 0.49247,-0.00123443) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608143,-0.0242188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548363,-0.00750326) , 
2, 0.118954, 1, 0, 0.565168,-0.0101802) , 
6, 0.0521838, 1, 0, 0.504056,-0.00266011)    );
  // itree = 914
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793842,-0.0418796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801264,-0.00300029) , 
2, 0.00453404, 1, 0, 0.799505,-0.007754) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.335696,0.00411044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585029,-0.00274803) , 
6, 0.0376927, 1, 0, 0.456961,-0.000118884) , 
2, 0.0238088, 1, 0, 0.495354,-0.000974641)    );
  // itree = 915
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613886,0.0125538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513523,-0.000892372) , 
3, 12.6156, 1, 0, 0.528941,0.000242145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.137826,-0.00697619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479428,-0.0138046) , 
6, 0.0492234, 1, 0, 0.23814,-0.00874072) , 
2, 0.428475, 1, 0, 0.50244,-0.000576478)    );
  // itree = 916
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732264,0.00903086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264978,-0.0126927) , 
5, 0.0270368, 1, 0, 0.581584,0.00136718) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.557437,-0.00986994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416032,-0.00127084) , 
5, 0.0172657, 1, 0, 0.45843,-0.00253699) , 
3, 25.1902, 1, 0, 0.49485,-0.00138243)    );
  // itree = 917
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582932,-0.00609318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455281,0.00192132) , 
3, 25.2306, 1, 0, 0.49297,-0.000139276) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928609,0.0246447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424813,-0.0157414) , 
0, 0.000955722, 1, 0, 0.577369,-0.00627395) , 
6, 0.0550809, 1, 0, 0.501907,-0.000788849)    );
  // itree = 918
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.182447,0.00419458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801865,-0.00421817) , 
7, 0.000163406, 1, 0, 0.421738,-0.000766553) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881358,-0.00304101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792657,0.0146888) , 
0, 0.00179141, 1, 0, 0.835589,0.00483585) , 
7, 0.000535657, 1, 0, 0.500471,0.000299265)    );
  // itree = 919
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752419,-0.0120823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.32705,0.00157532) , 
2, 0.0476045, 1, 0, 0.420472,-0.000262661) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853233,-0.0148534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771043,0.00206812) , 
0, 0.00179141, 1, 0, 0.809929,-0.00717686) , 
7, 0.000534737, 1, 0, 0.49617,-0.00160656)    );
  // itree = 920
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.321837,-0.00857821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751629,0.0129671) , 
6, 0.011623, 1, 0, 0.708757,0.00356481) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.117627,-0.012248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418375,0.000749614) , 
4, 0.0144974, 1, 0, 0.369631,-0.000839404) , 
2, 0.119004, 1, 0, 0.500006,0.000853765)    );
  // itree = 921
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.835086,0.0126798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0186521) , 
4, 0.0231862, 1, 0, 0.66734,0.00422152) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0541973,-0.0185448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.427195,-0.000360301) , 
4, 0.0231914, 1, 0, 0.324866,-0.00214526) , 
5, 0.0230519, 1, 0, 0.496481,0.00104516)    );
  // itree = 922
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98155,0.013033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.820792,-0.00692929) , 
0, 0.000272784, 1, 0, 0.896004,-0.00413278) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000584464,0.0216528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139292) , 
6, 0.0463922, 1, 0, 0.000453404,2.34212e-05) , 
0, 0.00288733, 1, 0, 0.492678,-0.00226097)    );
  // itree = 923
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.209256,-0.0223264) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.58431,0.000648126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.273148,-0.00897383) , 
3, 88.3067, 1, 0, 0.51955,-0.000833796) , 
4, 0.00580854, 1, 0, 0.501119,-0.00151408)    );
  // itree = 924
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796514,0.0349279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687919,-0.000782086) , 
5, 0.0108277, 1, 0, 0.709102,0.00197301) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86775,-0.00437413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.105065,0.000696532) , 
0, 0.00192488, 1, 0, 0.370366,-0.00175112) , 
2, 0.119044, 1, 0, 0.502259,-0.000301061)    );
  // itree = 925
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.23321,0.0288559) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782693,-0.0294957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483914,0.000457679) , 
2, 0.0237961, 1, 0, 0.515784,-0.000826891) , 
4, 0.00581393, 1, 0, 0.500154,-0.000254309)    );
  // itree = 926
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570239,0.00612863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350803,-0.0036422) , 
3, 63.0713, 1, 0, 0.49061,0.000846333) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640195,0.0002579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530774,-0.0219082) , 
6, 0.059504, 1, 0, 0.586196,-0.00993046) , 
6, 0.0579816, 1, 0, 0.495655,0.000277562)    );
  // itree = 927
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803751,0.0168282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626089,-0.00898606) , 
2, 0.0340053, 1, 0, 0.686603,-0.00187755) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.23685,0.000150655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810767,0.0092533) , 
7, 0.000549324, 1, 0, 0.354309,0.00171163) , 
2, 0.142853, 1, 0, 0.504341,9.10973e-05)    );
  // itree = 928
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632465,-0.00564082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311407,0.00941021) , 
5, 0.0137521, 1, 0, 0.408554,0.000432215) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892287,-0.00771644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000910048,0.0107619) , 
0, 0.00288733, 1, 0, 0.597731,-0.00549764) , 
6, 0.0376918, 1, 0, 0.494876,-0.0022736)    );
  // itree = 929
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713551,0.00921558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616439,-0.00388358) , 
4, 0.0145455, 1, 0, 0.64744,-1.08793e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794251,-0.00549193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000925186,0.0136751) , 
0, 0.00288758, 1, 0, 0.316547,-0.00288326) , 
2, 0.190433, 1, 0, 0.495346,-0.00133116)    );
  // itree = 930
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.210922,0.00328797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538674,-0.00899594) , 
6, 0.0197369, 1, 0, 0.367055,-0.00168357) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638354,0.000718438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422922,0.00807872) , 
2, 0.357056, 1, 0, 0.596362,0.00131693) , 
6, 0.0318891, 1, 0, 0.499974,5.56785e-05)    );
  // itree = 931
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74854,0.0235767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67977,-0.00767031) , 
6, 0.0463938, 1, 0, 0.735317,0.00340664) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.50579,-0.00479907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317287,0.00700479) , 
5, 0.0229748, 1, 0, 0.395235,-0.00040273) , 
2, 0.0952352, 1, 0, 0.506986,0.000849036)    );
  // itree = 932
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787663,-0.00970905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284136,0.00569641) , 
2, 0.0476176, 1, 0, 0.411547,0.000651812) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.890829,-0.00962864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00142944,0.0385448) , 
0, 0.00288758, 1, 0, 0.590942,-0.00639514) , 
6, 0.0377026, 1, 0, 0.494995,-0.00262617)    );
  // itree = 933
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601616,-0.00686326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492816,0.00254309) , 
4, 0.0173764, 1, 0, 0.528949,-0.000269701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0570481,-0.0124168) , 
3, 151, 1, 0, 0.493915,-0.000872432)    );
  // itree = 934
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956813,0.0114676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930048,-0.0114894) , 
4, 0.0142604, 1, 0, 0.938986,-0.00280271) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00243422,-0.0170771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715527,0.00667849) , 
7, 0.000145068, 1, 0, 0.30606,0.00136386) , 
0, 0.000962418, 1, 0, 0.50191,7.45719e-05)    );
  // itree = 935
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800137,0.00463183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461698,-0.00791768) , 
2, 0.0714264, 1, 0, 0.561117,-0.00309593) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945648,0.0295667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.133172,-0.000391796) , 
0, 0.000961714, 1, 0, 0.26169,0.00215837) , 
3, 88.3067, 1, 0, 0.497376,-0.0019774)    );
  // itree = 936
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685638,-0.00294078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.310377,0.00522455) , 
2, 0.142814, 1, 0, 0.486488,0.00070934) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575697,-0.0196737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533083,0.00184521) , 
2, 0.190212, 1, 0, 0.553088,-0.006622) , 
6, 0.052187, 1, 0, 0.497118,-0.000460878)    );
  // itree = 937
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70977,0.00261634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.51247e-05,-0.037196) , 
4, 0.020294, 1, 0, 0.437147,-0.000963623) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70305,0.0298321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605112,0.00368535) , 
6, 0.0425327, 1, 0, 0.614554,0.00325715) , 
6, 0.0405977, 1, 0, 0.507845,0.000718393)    );
  // itree = 938
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.241005,-0.0195401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.434435,-0.00127929) , 
5, 0.00575579, 1, 0, 0.423056,-0.0011532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819809,-0.00511527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709734,-0.0130111) , 
2, 0.404298, 1, 0, 0.804542,-0.00776796) , 
7, 0.000538844, 1, 0, 0.497624,-0.00244617)    );
  // itree = 939
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642892,0.00569958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431955,-0.00126371) , 
4, 0.0202985, 1, 0, 0.524146,0.000726516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.207602,-0.00842494) , 
2, 0.452243, 1, 0, 0.50486,0.000298373)    );
  // itree = 940
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646953,-0.00663357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79072,0.0175921) , 
5, 0.0219589, 1, 0, 0.658171,-0.00337198) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0497617,-0.0176223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444103,0.0136065) , 
4, 0.0231914, 1, 0, 0.331087,0.0015101) , 
5, 0.0230594, 1, 0, 0.496625,-0.000960727)    );
  // itree = 941
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918327,-0.0218255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544327,0.0474351) , 
5, 0.0199891, 1, 0, 0.800897,-0.00457147) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914925,0.00236153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115849,-0.00427932) , 
0, 0.00192484, 1, 0, 0.466584,0.00039321) , 
2, 0.0238042, 1, 0, 0.504937,-0.000176359)    );
  // itree = 942
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907291,-0.00385075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000687756,0.0238189) , 
0, 0.00288758, 1, 0, 0.479723,-0.00153465) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643955,-0.00450665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55288,0.0167172) , 
3, 25.0452, 1, 0, 0.581585,0.00462222) , 
6, 0.0521868, 1, 0, 0.49534,-0.000590686)    );
  // itree = 943
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592257,-0.0321737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.469879,-0.00498168) , 
3, 25.1413, 1, 0, 0.507579,-0.0067993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582679,0.00391774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308944,-0.00474394) , 
2, 0.309514, 1, 0, 0.501983,0.000211377) , 
4, 0.0145085, 1, 0, 0.503337,-0.00148522)    );
  // itree = 944
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936464,-0.000345482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803649,0.0129516) , 
0, 0.00128167, 1, 0, 0.886536,0.00431294) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000345641,0.0362499) , 
4, 0.0405949, 1, 0, 0.00012302,-6.38593e-05) , 
0, 0.00384977, 1, 0, 0.507526,0.00244152)    );
  // itree = 945
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.242069,0.0185614) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.42503,-0.0231525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51103,-0.000626427) , 
4, 0.00847652, 1, 0, 0.507352,-0.000674291) , 
4, 0.00585468, 1, 0, 0.492831,-0.000230235)    );
  // itree = 946
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515812,0.00780269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00992211,-0.0129018) , 
2, 0.333145, 1, 0, 0.411126,0.0013539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617946,-0.00567653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468146,0.0124114) , 
2, 0.428075, 1, 0, 0.602762,-0.00237458) , 
6, 0.0376997, 1, 0, 0.499582,-0.000367089)    );
  // itree = 947
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824985,0.00724058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223572,-0.00667283) , 
5, 0.02458, 1, 0, 0.64957,0.00208695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.302706,-0.0126583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192987,0.0192111) , 
5, 0.0288085, 1, 0, 0.242264,-0.00157619) , 
4, 0.0260955, 1, 0, 0.502386,0.000763242)    );
  // itree = 948
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532678,0.000633699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130467,-0.0104986) , 
2, 0.285706, 1, 0, 0.417454,-0.00125317) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901723,-7.65339e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815147,0.0202582) , 
0, 0.00179141, 1, 0, 0.856969,0.0075675) , 
7, 0.000534736, 1, 0, 0.499807,0.000399582)    );
  // itree = 949
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580888,-0.000409698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545692,-0.00845026) , 
3, 42.0452, 1, 0, 0.566907,-0.0020013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.060481,-0.00961896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659979,0.01525) , 
7, 0.000151442, 1, 0, 0.264229,0.00237291) , 
3, 88.3073, 1, 0, 0.500997,-0.00104881)    );
  // itree = 950
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944972,-0.026998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253888,0.00376633) , 
0, 0.000604638, 1, 0, 0.493278,-0.00464683) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.487878,0.0175018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508743,-0.00281653) , 
4, 0.0174336, 1, 0, 0.502775,0.000345861) , 
5, 0.0114992, 1, 0, 0.501412,-0.000370528)    );
  // itree = 951
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595816,0.00660809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309092,-0.00703091) , 
4, 0.0174177, 1, 0, 0.421428,-0.000225259) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866491,-0.00391064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809042,0.0204946) , 
0, 0.00179141, 1, 0, 0.836379,0.00572242) , 
7, 0.000538844, 1, 0, 0.500291,0.000905115)    );
  // itree = 952
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70523,0.00607545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.17948e-05,-0.0219781) , 
4, 0.0231993, 1, 0, 0.471945,0.00142834) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671337,0.00461102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494299,-0.0136726) , 
3, 37.7098, 1, 0, 0.5671,-0.00599016) , 
6, 0.046384, 1, 0, 0.498105,-0.000611172)    );
  // itree = 953
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64783,-0.0275255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913033,-0.00278044) , 
5, 0.00699947, 1, 0, 0.89981,-0.00436987) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00140584,0.0489892) , 
2, 0.261839, 1, 0, 0.000662641,0.000357346) , 
0, 0.00288758, 1, 0, 0.500652,-0.00227132)    );
  // itree = 954
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657655,-0.00698747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353012,0.0050608) , 
5, 0.0216229, 1, 0, 0.498078,-0.00110515) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530591,-0.0159455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561192,0.00243017) , 
1, 1.07137, 1, 0, 0.544232,-0.00913961) , 
6, 0.0579807, 1, 0, 0.500775,-0.00157459)    );
  // itree = 955
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552302,-0.0164953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300341,0.0168293) , 
5, 0.00846908, 1, 0, 0.33701,0.00102354) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903156,-0.00641841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00105513,0.00556126) , 
0, 0.00288758, 1, 0, 0.599369,-0.00388548) , 
6, 0.0289967, 1, 0, 0.502267,-0.00206859)    );
  // itree = 956
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.612485,-0.00486641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315719,0.00334223) , 
2, 0.244873, 1, 0, 0.525917,-0.00104129) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.134357,-0.00552392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481523,-0.0120996) , 
6, 0.0492728, 1, 0, 0.238618,-0.00641368) , 
2, 0.428558, 1, 0, 0.499217,-0.00154058)    );
  // itree = 957
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.58603,0.00158131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530366,-0.00589023) , 
3, 33.6438, 1, 0, 0.556293,-0.00116561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732622,-0.0119023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131164) , 
0, 0.00288733, 1, 0, 0.211635,-0.00671177) , 
3, 100.924, 1, 0, 0.497151,-0.00211731)    );
  // itree = 958
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68409,-0.00628737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416227,0.00334294) , 
5, 0.0220769, 1, 0, 0.548993,-0.00140298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119189,0.00827232) , 
3, 126.152, 1, 0, 0.502548,-0.000908149)    );
  // itree = 959
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569487,0.00322358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613254,-0.00737836) , 
6, 0.0492854, 1, 0, 0.578432,1.0548e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748024,-0.00861148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0827009,0.00263062) , 
0, 0.00191956, 1, 0, 0.24934,-0.00429639) , 
2, 0.333323, 1, 0, 0.504101,-0.000962246)    );
  // itree = 960
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924306,-0.0166476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.487694,0.0020561) , 
0, 0.000713507, 1, 0, 0.658859,-0.00331908) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964492,0.0205199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.207212,-0.00173921) , 
0, 0.000961838, 1, 0, 0.340677,0.00106155) , 
5, 0.0226494, 1, 0, 0.496233,-0.00108009)    );
  // itree = 961
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942198,0.00992604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169857,-0.0119057) , 
0, 0.000959452, 1, 0, 0.397362,-0.00156851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794364,0.00925415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.238738,-0.00733026) , 
5, 0.0287219, 1, 0, 0.613077,0.00308121) , 
6, 0.0347935, 1, 0, 0.508416,0.000825233)    );
  // itree = 962
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.219294,-0.000151486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440478,0.0313407) , 
7, 2.57407e-05, 1, 0, 0.326693,0.00394614) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582683,-0.000152844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.271688,-0.0105131) , 
3, 88.3079, 1, 0, 0.515875,-0.00120548) , 
4, 0.00870463, 1, 0, 0.497763,-0.000712271)    );
  // itree = 963
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91395,-0.00329874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558028,-0.0162519) , 
0, 0.00219561, 1, 0, 0.892465,-0.00421549) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00169921,0.0305916) , 
2, 0.380752, 1, 0, 0.000395422,3.47608e-05) , 
0, 0.00288725, 1, 0, 0.502725,-0.00235858)    );
  // itree = 964
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443622,0.00204586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832062,0.00719974) , 
7, 0.000534736, 1, 0, 0.518375,0.00165546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197632,-0.0166073) , 
2, 0.452271, 1, 0, 0.498169,0.000948509)    );
  // itree = 965
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421017,-0.00132761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628959,0.0117512) , 
6, 0.039905, 1, 0, 0.473293,0.00118504) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570631,-0.00329942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451794,-0.0158137) , 
2, 0.428308, 1, 0, 0.555557,-0.00441317) , 
6, 0.0492894, 1, 0, 0.491572,-5.88439e-05)    );
  // itree = 966
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585726,0.000781035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115942,-0.0109685) , 
3, 125.87, 1, 0, 0.535181,-0.000398317) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260362,-0.017231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180816,-0.00224574) , 
3, 50.4749, 1, 0, 0.216449,-0.00906843) , 
2, 0.428467, 1, 0, 0.503526,-0.0012594)    );
  // itree = 967
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697997,-0.00516671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384513,0.00215926) , 
2, 0.129185, 1, 0, 0.5227,-0.000262226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.207621,-0.00747741) , 
2, 0.452271, 1, 0, 0.503286,-0.000611832)    );
  // itree = 968
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92679,0.000603971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847665,0.0109018) , 
0, 0.00150801, 1, 0, 0.903706,0.00334138) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000441123,0.0139813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0149582) , 
6, 0.0463736, 1, 0, 0.000346436,-0.000120658) , 
0, 0.00288758, 1, 0, 0.500767,0.00179716)    );
  // itree = 969
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809046,0.00908428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477066,-0.00539982) , 
2, 0.0714068, 1, 0, 0.575533,-0.00170462) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878574,0.0146448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0585301,-0.00205029) , 
0, 0.00192505, 1, 0, 0.309117,0.00358404) , 
3, 75.6949, 1, 0, 0.500169,-0.00020856)    );
  // itree = 970
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638482,-0.0126112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368561,-0.00346478) , 
6, 0.0176536, 1, 0, 0.452954,-0.00560307) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935472,0.006348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.13,-0.00514082) , 
0, 0.00192206, 1, 0, 0.502327,0.00124572) , 
4, 0.0115909, 1, 0, 0.494604,0.000174366)    );
  // itree = 971
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574101,-0.00417582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862062,-0.0101227) , 
7, 0.000535657, 1, 0, 0.624985,-0.00269433) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.837482,0.00711528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0911148,-0.0079116) , 
0, 0.00192451, 1, 0, 0.311686,0.00152025) , 
2, 0.21422, 1, 0, 0.497365,-0.000977559)    );
  // itree = 972
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801457,-0.0125596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710515,0.0155064) , 
2, 0.00906808, 1, 0, 0.723705,0.00287653) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878939,-0.00868594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247436,9.95121e-06) , 
0, 0.000962526, 1, 0, 0.382409,-0.00173314) , 
2, 0.0952167, 1, 0, 0.495655,-0.000203594)    );
  // itree = 973
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.483601,0.00933157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493348,-0.00149057) , 
4, 0.0116019, 1, 0, 0.491692,0.000148068) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812057,-0.0113893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436155,-0.00145131) , 
0, 0.00190905, 1, 0, 0.568053,-0.00721664) , 
6, 0.0550824, 1, 0, 0.49964,-0.000618448)    );
  // itree = 974
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758006,-0.00452435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688818,-0.0360883) , 
2, 0.0544085, 1, 0, 0.745703,-0.00493441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.445438,-0.000398925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226274,0.0164561) , 
2, 0.418355, 1, 0, 0.412468,0.000871052) , 
2, 0.0714264, 1, 0, 0.503421,-0.000713493)    );
  // itree = 975
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849345,0.0165021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687862,-0.0183735) , 
5, 0.0113579, 1, 0, 0.725523,-0.00438932) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527184,0.0230129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.331174,-0.00299677) , 
2, 0.172288, 1, 0, 0.384093,0.00067795) , 
2, 0.095209, 1, 0, 0.49586,-0.000980824)    );
  // itree = 976
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865035,0.0142733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00257385,-0.0202898) , 
5, 0.0181986, 1, 0, 0.582198,0.00281321) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.720032,-0.00941769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.263184,0.00112576) , 
4, 0.0256985, 1, 0, 0.461195,-0.0030896) , 
4, 0.0174206, 1, 0, 0.500843,-0.0011555)    );
  // itree = 977
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533113,0.00159297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0834693,-0.0147588) , 
3, 138.767, 1, 0, 0.495019,-8.97311e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59346,-0.0185104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52885,0.00248496) , 
5, 0.0290534, 1, 0, 0.554475,-0.00798381) , 
6, 0.055081, 1, 0, 0.50137,-0.000933073)    );
  // itree = 978
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.113894,-0.0174336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470744,-0.000263491) , 
6, 0.0115922, 1, 0, 0.423248,-0.000753032) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892909,0.0147728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.580516,-0.00785406) , 
5, 0.0298088, 1, 0, 0.845845,0.0070883) , 
7, 0.000534736, 1, 0, 0.506741,0.000796193)    );
  // itree = 979
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622304,-0.00681192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.26844,0.00252204) , 
2, 0.23787, 1, 0, 0.491711,-0.00139255) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543606,0.00458164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655831,0.0234722) , 
6, 0.0592306, 1, 0, 0.572082,0.00549105) , 
6, 0.0550842, 1, 0, 0.500069,-0.000676725)    );
  // itree = 980
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558808,-0.00637188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456839,0.0017071) , 
4, 0.0145085, 1, 0, 0.48336,-0.000352866) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929931,0.0181155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393916,-0.012499) , 
0, 0.000958289, 1, 0, 0.547783,-0.004415) , 
6, 0.0521838, 1, 0, 0.493856,-0.0010147)    );
  // itree = 981
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934925,-0.00639666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226166,-0.000950657) , 
0, 0.000962526, 1, 0, 0.42646,-0.00123379) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941719,0.024415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818658,-0.000447186) , 
6, 0.0483489, 1, 0, 0.837387,0.00178656) , 
7, 0.000534737, 1, 0, 0.506786,-0.00064339)    );
  // itree = 982
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.218838,0.0222187) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564653,0.00256194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123099,-0.0136985) , 
3, 125.868, 1, 0, 0.518348,0.000461313) , 
4, 0.0058047, 1, 0, 0.501258,0.000930761)    );
  // itree = 983
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.289064,0.0133616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600258,-0.00683034) , 
4, 0.00585672, 1, 0, 0.583576,-0.00263628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0533662,-0.0072067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519082,0.0106462) , 
6, 0.0405702, 1, 0, 0.266503,0.00179389) , 
2, 0.309335, 1, 0, 0.501524,-0.00148985)    );
  // itree = 984
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695122,0.00139819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000171832,-0.0356694) , 
5, 0.0333341, 1, 0, 0.542032,2.32232e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0571215,-0.014946) , 
3, 151.382, 1, 0, 0.503708,-0.000623652)    );
  // itree = 985
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641505,-0.0248844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42544,-0.00844343) , 
6, 0.0173235, 1, 0, 0.500348,-0.00816299) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732312,0.0449141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476931,-0.00222271) , 
2, 0.0238299, 1, 0, 0.49903,-0.000461566) , 
5, 0.0114925, 1, 0, 0.499212,-0.00152155)    );
  // itree = 986
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918413,-0.0125268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902962,0.0113997) , 
0, 0.00137382, 1, 0, 0.91508,-0.00505773) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.141471,0.011654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0978867,-0.0108466) , 
2, 0.190433, 1, 0, 0.114924,-0.000474094) , 
0, 0.00192343, 1, 0, 0.496972,-0.00266263)    );
  // itree = 987
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976124,0.00820417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454331,-0.0161142) , 
0, 0.00095954, 1, 0, 0.714235,-0.00333249) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576126,0.0131727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356366,0.000544129) , 
2, 0.133792, 1, 0, 0.386834,0.00106536) , 
2, 0.0952352, 1, 0, 0.495527,-0.000394678)    );
  // itree = 988
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965677,0.00105062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864991,0.0220049) , 
2, 0.261897, 1, 0, 0.948382,0.0032304) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.279675,-0.00129224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398495,-0.0108097) , 
6, 0.0521841, 1, 0, 0.299008,-0.00200804) , 
0, 0.000962442, 1, 0, 0.496666,-0.000413559)    );
  // itree = 989
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667378,0.0116953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484103,0.000325708) , 
4, 0.020283, 1, 0, 0.565832,0.00220495) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.349105,-0.0206313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.162579,0.00796925) , 
2, 0.0951276, 1, 0, 0.205292,-0.00326336) , 
3, 100.785, 1, 0, 0.5039,0.00126563)    );
  // itree = 990
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690482,0.00275762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0646042,-0.0174046) , 
5, 0.0266593, 1, 0, 0.491792,0.000303283) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63385,-0.0175159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532048,0.000383352) , 
5, 0.0289566, 1, 0, 0.569905,-0.00855569) , 
6, 0.055081, 1, 0, 0.500125,-0.00064181)    );
  // itree = 991
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777284,0.0242883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646041,0.00137711) , 
5, 0.0115369, 1, 0, 0.66981,0.00226864) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.808204,-0.00415917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000722243,0.0100894) , 
0, 0.00288725, 1, 0, 0.337243,-0.00206127) , 
2, 0.166606, 1, 0, 0.503003,9.68669e-05)    );
  // itree = 992
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.714506,-0.00333393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523076,0.00674644) , 
2, 0.108782, 1, 0, 0.651229,-1.71228e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783268,-0.0067397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000499995,0.00383282) , 
0, 0.00288733, 1, 0, 0.315623,-0.00397294) , 
2, 0.190418, 1, 0, 0.496559,-0.00184023)    );
  // itree = 993
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56913,-0.00153834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673417,0.00758268) , 
6, 0.0550822, 1, 0, 0.579999,-0.000123854) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582394,-0.0224898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.266071,-0.00156912) , 
2, 0.0475319, 1, 0, 0.312993,-0.00352552) , 
3, 75.5901, 1, 0, 0.503477,-0.00109875)    );
  // itree = 994
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435263,-0.00544816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736893,0.00707634) , 
6, 0.0173941, 1, 0, 0.687315,0.00161057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227243,0.00187743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536691,-0.00748415) , 
6, 0.0434892, 1, 0, 0.350428,-0.00169251) , 
2, 0.142825, 1, 0, 0.502878,-0.000197781)    );
  // itree = 995
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965717,0.0208555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910992,-0.00197348) , 
4, 0.0179018, 1, 0, 0.936593,0.00278705) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509093,-0.0255229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.28907,-0.00178828) , 
2, 0.0238313, 1, 0, 0.303902,-0.00152137) , 
0, 0.000962526, 1, 0, 0.499001,-0.000192807)    );
  // itree = 996
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957685,0.00467574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851094,0.0229353) , 
2, 0.309448, 1, 0, 0.943486,0.00395896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532208,-0.0245674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283239,-0.00270477) , 
2, 0.0238023, 1, 0, 0.299611,-0.00203237) , 
0, 0.000962442, 1, 0, 0.494037,-0.000223219)    );
  // itree = 997
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824518,0.00924749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.161493,-0.0155051) , 
2, 0.0952167, 1, 0, 0.517151,-0.00389787) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552408,-0.000994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303404,0.00622158) , 
2, 0.333232, 1, 0, 0.4908,0.000375298) , 
4, 0.0144987, 1, 0, 0.497027,-0.000634496)    );
  // itree = 998
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.249913,-0.0302478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575174,-0.001041) , 
4, 0.00580557, 1, 0, 0.557837,-0.00121647) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.402694,0.0312539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112322,-0.00340848) , 
5, 0.023073, 1, 0, 0.213743,0.00503168) , 
3, 100.914, 1, 0, 0.499467,-0.00015657)    );
  // itree = 999
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566507,-0.000457273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.273644,0.0126335) , 
2, 0.428467, 1, 0, 0.540446,0.000358086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.05395,-0.0101757) , 
3, 150.991, 1, 0, 0.499398,-0.000146942)    );
   return;
};
 
// Clean up
inline void ReadBDTG::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDTG::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
         if (IsNormalised()) {
            // normalise variables
            std::vector<double> iV;
            iV.reserve(inputValues.size());
            int ivar = 0;
            for (std::vector<double>::const_iterator varIt = inputValues.begin();
                 varIt != inputValues.end(); varIt++, ivar++) {
               iV.push_back(NormVariable( *varIt, fVmin[ivar], fVmax[ivar] ));
            }
            retval = GetMvaValue__( iV );
         }
         else {
            retval = GetMvaValue__( inputValues );
         }
      }

      return retval;
   }
