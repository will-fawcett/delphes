// Class: ReadBDTG
// Automatically generated by MethodBase::MakeClass
//

/* configuration options =====================================================

#GEN -*-*-*-*-*-*-*-*-*-*-*- general info -*-*-*-*-*-*-*-*-*-*-*-

Method         : BDT::BDTG
TMVA Release   : 4.2.1         [262657]
ROOT Release   : 6.10/04       [395780]
Creator        : wfawcett
Date           : Wed Mar 14 12:22:36 2018
Host           : Linux lcgapp-slc6-x86-64-3.cern.ch 2.6.32-642.4.2.el6.x86_64 #1 SMP Wed Aug 24 09:19:54 CEST 2016 x86_64 x86_64 x86_64 GNU/Linux
Dir            : /atlas/users/wfawcett/fcc/testTMVA/tmvatutorial
Training events: 66730
Analysis type  : [Classification]


#OPT -*-*-*-*-*-*-*-*-*-*-*-*- options -*-*-*-*-*-*-*-*-*-*-*-*-

# Set by User:
V: "False" [Verbose output (short form of "VerbosityLevel" below - overrides the latter one)]
H: "False" [Print method-specific help message]
NTrees: "1000" [Number of trees in the forest]
MaxDepth: "3" [Max depth of the decision tree allowed]
MinNodeSize: "2.5%" [Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%)]
nCuts: "20" [Number of grid points in variable range used in finding optimal cut in node splitting]
BoostType: "Grad" [Boosting type for the trees in the forest (note: AdaCost is still experimental)]
UseBaggedBoost: "True" [Use only a random subsample of all events for growing the trees in each boost iteration.]
Shrinkage: "1.000000e-01" [Learning rate for GradBoost algorithm]
BaggedSampleFraction: "5.000000e-01" [Relative size of bagged event sample to original size of the data sample (used whenever bagging is used (i.e. UseBaggedBoost, Bagging,)]
# Default:
VerbosityLevel: "Default" [Verbosity level]
VarTransform: "None" [List of variable transformations performed before training, e.g., "D_Background,P_Signal,G,N_AllClasses" for: "Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed)"]
CreateMVAPdfs: "False" [Create PDFs for classifier outputs (signal and background)]
IgnoreNegWeightsInTraining: "False" [Events with negative weights are ignored in the training (but are included for testing and performance evaluation)]
AdaBoostR2Loss: "quadratic" [Type of Loss function in AdaBoostR2]
AdaBoostBeta: "5.000000e-01" [Learning rate  for AdaBoost algorithm]
UseRandomisedTrees: "False" [Determine at each node splitting the cut variable only as the best out of a random subset of variables (like in RandomForests)]
UseNvars: "3" [Size of the subset of variables used with RandomisedTree option]
UsePoissonNvars: "True" [Interpret "UseNvars" not as fixed number but as mean of a Poisson distribution in each split with RandomisedTree option]
UseYesNoLeaf: "True" [Use Sig or Bkg categories, or the purity=S/(S+B) as classification of the leaf node -> Real-AdaBoost]
NegWeightTreatment: "pray" [How to treat events with negative weights in the BDT training (particular the boosting) : IgnoreInTraining;  Boost With inverse boostweight; Pair events with negative and positive weights in training sample and *annihilate* them (experimental!)]
Css: "1.000000e+00" [AdaCost: cost of true signal selected signal]
Cts_sb: "1.000000e+00" [AdaCost: cost of true signal selected bkg]
Ctb_ss: "1.000000e+00" [AdaCost: cost of true bkg    selected signal]
Cbb: "1.000000e+00" [AdaCost: cost of true bkg    selected bkg ]
NodePurityLimit: "5.000000e-01" [In boosting/pruning, nodes with purity > NodePurityLimit are signal; background otherwise.]
SeparationType: "giniindex" [Separation criterion for node splitting]
RegressionLossFunctionBDTG: "huber" [Loss function for BDTG regression.]
HuberQuantile: "7.000000e-01" [In the Huber loss function this is the quantile that separates the core from the tails in the residuals distribution.]
DoBoostMonitor: "False" [Create control plot with ROC integral vs tree number]
UseFisherCuts: "False" [Use multivariate splits using the Fisher criterion]
MinLinCorrForFisher: "8.000000e-01" [The minimum linear correlation between two variables demanded for use in Fisher criterion in node splitting]
UseExclusiveVars: "False" [Variables already used in fisher criterion are not anymore analysed individually for node splitting]
DoPreselection: "False" [and and apply automatic pre-selection for 100% efficient signal (bkg) cuts prior to training]
SigToBkgFraction: "1.000000e+00" [Sig to Bkg ratio used in Training (similar to NodePurityLimit, which cannot be used in real adaboost]
PruneMethod: "nopruning" [Note: for BDTs use small trees (e.g.MaxDepth=3) and NoPruning:  Pruning: Method used for pruning (removal) of statistically insignificant branches ]
PruneStrength: "0.000000e+00" [Pruning strength]
PruningValFraction: "5.000000e-01" [Fraction of events to use for optimizing automatic pruning.]
SkipNormalization: "False" [Skip normalization at initialization, to keep expectation value of BDT output according to the fraction of events]
nEventsMin: "0" [deprecated: Use MinNodeSize (in % of training events) instead]
UseBaggedGrad: "False" [deprecated: Use *UseBaggedBoost* instead:  Use only a random subsample of all events for growing the trees in each iteration.]
GradBaggingFraction: "5.000000e-01" [deprecated: Use *BaggedSampleFraction* instead: Defines the fraction of events to be used in each iteration, e.g. when UseBaggedGrad=kTRUE. ]
UseNTrainEvents: "0" [deprecated: Use *BaggedSampleFraction* instead: Number of randomly picked training events used in randomised (and bagged) trees]
NNodesMax: "0" [deprecated: Use MaxDepth instead to limit the tree size]
##


#VAR -*-*-*-*-*-*-*-*-*-*-*-* variables *-*-*-*-*-*-*-*-*-*-*-*-

NVar 9
abs(tracks50.kappa_123-tracks50.kappa_013)   abs_tracks50.kappa_123_M_tracks50.kappa_013_ abs(tracks50.kappa_123-tracks50.kappa_013)   |deltaKappa|                                 units                                            'F'    [0,0.0202130563557]
tracks50.pT                   tracks50.pT                   tracks50.pT                   pT                            units                             'F'    [1.04492533207,4657.1328125]
abs(tracks50.zresiduum)       abs_tracks50.zresiduum_       abs(tracks50.zresiduum)       |zresiduum|                   units                             'F'    [0,0.499984741211]
abs(tracks50.beamlineIntersect) abs_tracks50.beamlineIntersect_ abs(tracks50.beamlineIntersect) |beamlineIntersect|             units                               'F'    [0.000624999636784,264.918731689]
abs(tracks50.hit1phi-tracks50.hit2phi)   abs_tracks50.hit1phi_M_tracks50.hit2phi_ abs(tracks50.hit1phi-tracks50.hit2phi)   |dPhi12|                                 units                                        'F'    [9.89437103271e-06,0.0608730316162]
abs(tracks50.hit2phi-tracks50.hit3phi)   abs_tracks50.hit2phi_M_tracks50.hit3phi_ abs(tracks50.hit2phi-tracks50.hit3phi)   |dPhi23|                                 units                                        'F'    [1.81198120117e-05,0.120913997293]
abs(tracks50.hit1phi-tracks50.hit3phi)   abs_tracks50.hit1phi_M_tracks50.hit3phi_ abs(tracks50.hit1phi-tracks50.hit3phi)   |dPhi13|                                 units                                        'F'    [1.19209289551e-07,0.0608789920807]
tracks50.z_phi12*tracks50.z_phi23   tracks50.z_phi12_T_tracks50.z_phi23 tracks50.z_phi12*tracks50.z_phi23   z phi12*23                          units                                   'F'    [-0.00729546556249,0.000926246808376]
abs(tracks50.zresiduum/tracks50.eta)   abs_tracks50.zresiduum_D_tracks50.eta_ abs(tracks50.zresiduum/tracks50.eta)   |zresiduum/eta|                        units                                      'F'    [0,7568.68798828]
NSpec 0


============================================================================ */

#include <vector>
#include <cmath>
#include <string>
#include <iostream>

#define NN new BDTGNode
   
#ifndef BDTGNode__def
#define BDTGNode__def
   
class BDTGNode {
   
public:
   
   // constructor of an essentially "empty" node floating in space
   BDTGNode ( BDTGNode* left,BDTGNode* right,
                          int selector, double cutValue, bool cutType, 
                          int nodeType, double purity, double response ) :
   fLeft         ( left         ),
   fRight        ( right        ),
   fSelector     ( selector     ),
   fCutValue     ( cutValue     ),
   fCutType      ( cutType      ),
   fNodeType     ( nodeType     ),
   fPurity       ( purity       ),
   fResponse     ( response     ){
   }

   virtual ~BDTGNode();

   // test event if it descends the tree at this node to the right
   virtual bool GoesRight( const std::vector<double>& inputValues ) const;
   BDTGNode* GetRight( void )  {return fRight; };

   // test event if it descends the tree at this node to the left 
   virtual bool GoesLeft ( const std::vector<double>& inputValues ) const;
   BDTGNode* GetLeft( void ) { return fLeft; };   

   // return  S/(S+B) (purity) at this node (from  training)

   double GetPurity( void ) const { return fPurity; } 
   // return the node type
   int    GetNodeType( void ) const { return fNodeType; }
   double GetResponse(void) const {return fResponse;}

private:

   BDTGNode*   fLeft;     // pointer to the left daughter node
   BDTGNode*   fRight;    // pointer to the right daughter node
   int                     fSelector; // index of variable used in node selection (decision tree)   
   double                  fCutValue; // cut value applied on this node to discriminate bkg against sig
   bool                    fCutType;  // true: if event variable > cutValue ==> signal , false otherwise
   int                     fNodeType; // Type of node: -1 == Bkg-leaf, 1 == Signal-leaf, 0 = internal 
   double                  fPurity;   // Purity of node from training
   double                  fResponse; // Regression response value of node
}; 
   
//_______________________________________________________________________
   BDTGNode::~BDTGNode()
{
   if (fLeft  != NULL) delete fLeft;
   if (fRight != NULL) delete fRight;
}; 
   
//_______________________________________________________________________
bool BDTGNode::GoesRight( const std::vector<double>& inputValues ) const
{
   // test event if it descends the tree at this node to the right
   bool result;
     result = (inputValues[fSelector] > fCutValue );
   if (fCutType == true) return result; //the cuts are selecting Signal ;
   else return !result;
}
   
//_______________________________________________________________________
bool BDTGNode::GoesLeft( const std::vector<double>& inputValues ) const
{
   // test event if it descends the tree at this node to the left
   if (!this->GoesRight(inputValues)) return true;
   else return false;
}
   
#endif
   
#ifndef IClassifierReader__def
#define IClassifierReader__def

class IClassifierReader {

 public:

   // constructor
   IClassifierReader() : fStatusIsClean( true ) {}
   virtual ~IClassifierReader() {}

   // return classifier response
   virtual double GetMvaValue( const std::vector<double>& inputValues ) const = 0;

   // returns classifier status
   bool IsStatusClean() const { return fStatusIsClean; }

 protected:

   bool fStatusIsClean;
};

#endif

class ReadBDTG : public IClassifierReader {

 public:

   // constructor
   ReadBDTG( std::vector<std::string>& theInputVars ) 
      : IClassifierReader(),
        fClassName( "ReadBDTG" ),
        fNvars( 9 ),
        fIsNormalised( false )
   {      
      // the training input variables
      const char* inputVars[] = { "abs(tracks50.kappa_123-tracks50.kappa_013)", "tracks50.pT", "abs(tracks50.zresiduum)", "abs(tracks50.beamlineIntersect)", "abs(tracks50.hit1phi-tracks50.hit2phi)", "abs(tracks50.hit2phi-tracks50.hit3phi)", "abs(tracks50.hit1phi-tracks50.hit3phi)", "tracks50.z_phi12*tracks50.z_phi23", "abs(tracks50.zresiduum/tracks50.eta)" };

      // sanity checks
      if (theInputVars.size() <= 0) {
         std::cout << "Problem in class \"" << fClassName << "\": empty input vector" << std::endl;
         fStatusIsClean = false;
      }

      if (theInputVars.size() != fNvars) {
         std::cout << "Problem in class \"" << fClassName << "\": mismatch in number of input values: "
                   << theInputVars.size() << " != " << fNvars << std::endl;
         fStatusIsClean = false;
      }

      // validate input variables
      for (size_t ivar = 0; ivar < theInputVars.size(); ivar++) {
         if (theInputVars[ivar] != inputVars[ivar]) {
            std::cout << "Problem in class \"" << fClassName << "\": mismatch in input variable names" << std::endl
                      << " for variable [" << ivar << "]: " << theInputVars[ivar].c_str() << " != " << inputVars[ivar] << std::endl;
            fStatusIsClean = false;
         }
      }

      // initialize min and max vectors (for normalisation)
      fVmin[0] = 0;
      fVmax[0] = 0;
      fVmin[1] = 0;
      fVmax[1] = 0;
      fVmin[2] = 0;
      fVmax[2] = 0;
      fVmin[3] = 0;
      fVmax[3] = 0;
      fVmin[4] = 0;
      fVmax[4] = 0;
      fVmin[5] = 0;
      fVmax[5] = 0;
      fVmin[6] = 0;
      fVmax[6] = 0;
      fVmin[7] = 0;
      fVmax[7] = 0;
      fVmin[8] = 0;
      fVmax[8] = 0;

      // initialize input variable types
      fType[0] = 'F';
      fType[1] = 'F';
      fType[2] = 'F';
      fType[3] = 'F';
      fType[4] = 'F';
      fType[5] = 'F';
      fType[6] = 'F';
      fType[7] = 'F';
      fType[8] = 'F';

      // initialize constants
      Initialize();

   }

   // destructor
   virtual ~ReadBDTG() {
      Clear(); // method-specific
   }

   // the classifier response
   // "inputValues" is a vector of input values in the same order as the 
   // variables given to the constructor
   double GetMvaValue( const std::vector<double>& inputValues ) const;

 private:

   // method-specific destructor
   void Clear();

   // common member variables
   const char* fClassName;

   const size_t fNvars;
   size_t GetNvar()           const { return fNvars; }
   char   GetType( int ivar ) const { return fType[ivar]; }

   // normalisation of input variables
   const bool fIsNormalised;
   bool IsNormalised() const { return fIsNormalised; }
   double fVmin[9];
   double fVmax[9];
   double NormVariable( double x, double xmin, double xmax ) const {
      // normalise to output range: [-1, 1]
      return 2*(x - xmin)/(xmax - xmin) - 1.0;
   }

   // type of input variable: 'F' or 'I'
   char   fType[9];

   // initialize internal variables
   void Initialize();
   double GetMvaValue__( const std::vector<double>& inputValues ) const;

   // private members (method specific)
   std::vector<BDTGNode*> fForest;       // i.e. root nodes of decision trees
   std::vector<double>                fBoostWeights; // the weights applied in the individual boosts
};

double ReadBDTG::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTGNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTGNode*)current->GetRight();
         else current=(BDTGNode*)current->GetLeft();
      }
      myMVA += current->GetResponse();
   }
   return 2.0/(1.0+exp(-2.0*myMVA))-1.0;
};

void ReadBDTG::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992932,0.164792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956735,0.127639) , 
2, 0.355922, 1, 0, 0.989149,0.489149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886151,0.0817564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639692,0.0160184) , 
2, 0.261592, 1, 0, 0.823444,0.323444) , 
0, 0.000137226, 1, 0, 0.898819,0.398819) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000348171,-0.0261726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0261831) , 
2, 0.10888, 1, 0, 0.00010184,-0.499898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00175593,-0.0261301) , 
2, 0.380842, 1, 0, 0.000501869,-0.499498) , 
0, 0.00288677, 1, 0, 0.498889,-0.00111135)    );
  // itree = 1
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936624,0.0987224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774048,0.0340825) , 
4, 0.0270964, 1, 0, 0.917797,0.362176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.569698,0.00443909) , 
0, 0.00219561, 1, 0, 0.896595,0.342772) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00242373,-0.025441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000174116,-0.0255101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0255157) , 
2, 0.14277, 1, 0, 4.90808e-05,-0.48687) , 
0, 0.00783891, 1, 0, 0.000573596,-0.486345) , 
0, 0.00288551, 1, 0, 0.496541,-0.0274112)    );
  // itree = 2
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957069,0.102519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826112,0.0435783) , 
2, 0.214279, 1, 0, 0.920717,0.320261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572323,0.00443955) , 
0, 0.00219347, 1, 0, 0.899184,0.303149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00188155,-0.0248401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0248975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000253319,-0.0248896) , 
4, 0.0406048, 1, 0, 9.87034e-05,-0.474083) , 
0, 0.00783973, 1, 0, 0.000497913,-0.473692) , 
0, 0.00288725, 1, 0, 0.498136,-0.0435246)    );
  // itree = 3
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650291,0.00231515) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926112,0.0764562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708648,0.0125887) , 
3, 112.576, 1, 0, 0.913875,0.279566) , 
5, 0.00715851, 1, 0, 0.899837,0.265677) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00124045,-0.0242872) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0243241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000169607,-0.0243187) , 
0, 0.0166805, 1, 0, 4.96961e-05,-0.461737) , 
0, 0.00784529, 1, 0, 0.000310494,-0.46149) , 
0, 0.00288758, 1, 0, 0.499158,-0.0582273)    );
  // itree = 4
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934725,0.0746179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665967,0.00359077) , 
4, 0.0283604, 1, 0, 0.916683,0.245181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56053,-0.000401654) , 
0, 0.00219881, 1, 0, 0.896199,0.230851) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0237913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000180586,-0.0237852) , 
2, 0.271984, 1, 0, 5.15145e-05,-0.44968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00130111,-0.0237497) , 
2, 0.380827, 1, 0, 0.000352104,-0.449386) , 
0, 0.00288733, 1, 0, 0.498667,-0.0710033)    );
  // itree = 5
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992296,0.11223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872118,0.0434771) , 
0, 0.000104704, 1, 0, 0.930673,0.228479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583905,0.0021717) , 
0, 0.00219881, 1, 0, 0.910893,0.216621) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00210576,-0.0232267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0232938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000244215,-0.0232856) , 
6, 0.0203025, 1, 0, 0.000146607,-0.437835) , 
0, 0.00784254, 1, 0, 0.000600681,-0.437399) , 
0, 0.00288733, 1, 0, 0.496577,-0.0810543)    );
  // itree = 6
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730922,0.00459053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925661,0.0600006) , 
5, 0.00734678, 1, 0, 0.915975,0.190788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687965,0.00167699) , 
3, 112.732, 1, 0, 0.90269,0.180366) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000163708,-0.0228237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0228297) , 
2, 0.167028, 1, 0, 5.45161e-05,-0.426498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00113988,-0.0227937) , 
7, -0.000266015, 1, 0, 0.000381116,-0.426194) , 
0, 0.00288758, 1, 0, 0.497083,-0.0922955)    );
  // itree = 7
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959634,0.0759181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838113,0.0250927) , 
3, 99.9342, 1, 0, 0.950876,0.192121) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.403851,-0.0256411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889186,0.0447185) , 
5, 0.0174637, 1, 0, 0.802216,0.0929448) , 
2, 0.19047, 1, 0, 0.901128,0.158932) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00162488,-0.022343) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0223946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0223959) , 
2, 0.357029, 1, 0, 0,-0.415426) , 
0, 0.00784529, 1, 0, 0.000360819,-0.415092) , 
0, 0.00288758, 1, 0, 0.509973,-0.0903358)    );
  // itree = 8
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983398,0.0883748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992504,0.104042) , 
6, 0.0521682, 1, 0, 0.98505,0.181755) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869566,0.0322782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614759,-0.00677164) , 
2, 0.30952, 1, 0, 0.822575,0.0936102) , 
0, 0.000137426, 1, 0, 0.896681,0.133814) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00131439,-0.0219445) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000169607,-0.0219814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0219875) , 
3, 37.8059, 1, 0, 5.51953e-05,-0.404535) , 
0, 0.00949305, 1, 0, 0.000453063,-0.404171) , 
0, 0.00288725, 1, 0, 0.491686,-0.109295)    );
  // itree = 9
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93536,0.0523537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622789,-0.000663451) , 
0, 0.00219347, 1, 0, 0.91704,0.130642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647353,-0.00662317) , 
3, 112.736, 1, 0, 0.900983,0.119877) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0028509,-0.0215066) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000894777,-0.021572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.7606e-05,-0.0216025) , 
2, 0.142857, 1, 0, 0.000294412,-0.393752) , 
0, 0.00784417, 1, 0, 0.000846419,-0.393235) , 
0, 0.00288725, 1, 0, 0.499262,-0.109119)    );
  // itree = 10
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.717718,-0.00642139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933543,0.0491533) , 
5, 0.00704275, 1, 0, 0.922079,0.119774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.55038,-0.0193822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851485,0.0277481) , 
5, 0.0245235, 1, 0, 0.698636,-0.0274613) , 
2, 0.380836, 1, 0, 0.901302,0.106083) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00237091,-0.0211635) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.02545e-05,-0.0212424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000539624,-0.0212249) , 
3, 100.925, 1, 0, 0.000202088,-0.383581) , 
0, 0.00784304, 1, 0, 0.000672561,-0.383155) , 
0, 0.00288758, 1, 0, 0.505354,-0.109003)    );
  // itree = 11
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722962,-0.00525253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928883,0.0434171) , 
5, 0.00736598, 1, 0, 0.917126,0.102754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659,-0.00992431) , 
2, 0.404671, 1, 0, 0.897926,0.0899194) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00220274,-0.0208251) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0209091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0209059) , 
0, 0.0127971, 1, 0, 0,-0.37382) , 
4, 0.0202931, 1, 0, 0.000672738,-0.373168) , 
0, 0.00288733, 1, 0, 0.50335,-0.113728)    );
  // itree = 12
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990132,0.0871715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988773,0.0908419) , 
7, 0.000749759, 1, 0, 0.989967,0.125897) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635321,-0.0226567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855549,0.0193988) , 
0, 0.000792681, 1, 0, 0.829049,0.0477266) , 
0, 0.000137226, 1, 0, 0.902354,0.0833365) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 6.9317e-05,-0.0205856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000353897,-0.0205724) , 
4, 0.0434931, 1, 0, 0.000149418,-0.36396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00127092,-0.0205392) , 
2, 0.380827, 1, 0, 0.000417101,-0.363701) , 
0, 0.00288725, 1, 0, 0.494534,-0.118796)    );
  // itree = 13
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974034,0.0712455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913232,0.0291413) , 
2, 0.0589309, 1, 0, 0.937729,0.0938916) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519239,-0.0244096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885925,0.032241) , 
5, 0.0226349, 1, 0, 0.735107,-0.0233011) , 
2, 0.309429, 1, 0, 0.903918,0.074336) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0202867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00010637,-0.0202797) , 
5, 0.0401818, 1, 0, 5.17446e-05,-0.354578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0020224,-0.0202062) , 
2, 0.380843, 1, 0, 0.000514663,-0.354129) , 
0, 0.00288758, 1, 0, 0.50532,-0.11471)    );
  // itree = 14
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980427,0.0749575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937517,0.0379643) , 
2, 0.0306048, 1, 0, 0.949586,0.087687) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491653,-0.0285327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902151,0.0332338) , 
5, 0.0198986, 1, 0, 0.787625,0.00137077) , 
2, 0.214237, 1, 0, 0.903446,0.0630972) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0200033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0199983) , 
0, 0.0103146, 1, 0, 0,-0.345419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00108688,-0.0199564) , 
6, 0.040584, 1, 0, 0.000343278,-0.345086) , 
0, 0.00288758, 1, 0, 0.497019,-0.120599)    );
  // itree = 15
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944365,0.0413756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773341,-0.00662559) , 
3, 99.9342, 1, 0, 0.930409,0.0701547) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.521352,-0.0223945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848766,0.0180125) , 
5, 0.0238629, 1, 0, 0.690222,-0.0625802) , 
2, 0.380941, 1, 0, 0.907833,0.0576789) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000161601,-0.0197247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00144287,-0.0196693) , 
5, 0.0197792, 1, 0, 0.000767093,-0.335721) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0197295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0197275) , 
4, 0.0260999, 1, 0, 0,-0.336407) , 
5, 0.0345499, 1, 0, 0.000349923,-0.336094) , 
0, 0.00288725, 1, 0, 0.50129,-0.118727)    );
  // itree = 16
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930444,0.0302785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.755159,-0.0199157) , 
4, 0.0281293, 1, 0, 0.917866,0.0512941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585913,-0.012198) , 
0, 0.00219881, 1, 0, 0.898472,0.04234) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0194738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000157298,-0.0194645) , 
5, 0.0287065, 1, 0, 9.96502e-05,-0.327579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00113988,-0.019426) , 
2, 0.380716, 1, 0, 0.000343365,-0.327357) , 
0, 0.00288758, 1, 0, 0.49479,-0.123828)    );
  // itree = 17
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930896,0.0260303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981819,0.0919086) , 
7, 0.00083446, 1, 0, 0.933659,0.0558605) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513253,-0.0258343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860944,0.0170296) , 
5, 0.022647, 1, 0, 0.725569,-0.0522874) , 
2, 0.309514, 1, 0, 0.898919,0.0378056) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0192593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.57276e-05,-0.0192238) , 
4, 0.0202214, 1, 0, 5.79337e-05,-0.319249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000886614,-0.0191914) , 
2, 0.333242, 1, 0, 0.000342411,-0.318937) , 
0, 0.00288503, 1, 0, 0.49585,-0.122216)    );
  // itree = 18
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99025,0.0783616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97665,0.0707372) , 
2, 0.333252, 1, 0, 0.988666,0.0754457) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652104,-0.0301708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853969,0.00731571) , 
0, 0.000790788, 1, 0, 0.83067,0.00198247) , 
0, 0.000137092, 1, 0, 0.902592,0.0354238) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0189955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0190001) , 
7, -0.000282145, 1, 0, 0,-0.310861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000939613,-0.0189577) , 
2, 0.380766, 1, 0, 0.000233913,-0.310654) , 
0, 0.00288758, 1, 0, 0.502266,-0.118111)    );
  // itree = 19
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948812,0.0347696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770732,-0.00711725) , 
2, 0.309146, 1, 0, 0.921566,0.0391063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570739,-0.0165701) , 
0, 0.00219832, 1, 0, 0.901267,0.0287978) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0187773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000286027,-0.0187627) , 
4, 0.0405949, 1, 0, 9.93544e-05,-0.302681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00182558,-0.0186962) , 
2, 0.380851, 1, 0, 0.000497029,-0.302314) , 
0, 0.00288725, 1, 0, 0.498508,-0.119251)    );
  // itree = 20
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992567,0.0784373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984381,0.0745065) , 
2, 0.308466, 1, 0, 0.991378,0.0634607) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.55549,-0.0342363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852683,0.0043031) , 
0, 0.000654398, 1, 0, 0.827836,-0.00718966) , 
0, 0.000136045, 1, 0, 0.902284,0.024972) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.018566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0185691) , 
2, 0.333282, 1, 0, 0,-0.294904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00130026,-0.0185099) , 
7, -0.000268085, 1, 0, 0.000387887,-0.294564) , 
0, 0.00288758, 1, 0, 0.500806,-0.117269)    );
  // itree = 21
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674297,-0.0225254) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926161,0.0191367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71391,-0.0141208) , 
3, 112.426, 1, 0, 0.913974,0.0289509) , 
5, 0.00709197, 1, 0, 0.902178,0.020994) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0183692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000164423,-0.0183592) , 
5, 0.0287535, 1, 0, 0.000102359,-0.287158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00216394,-0.0182673) , 
2, 0.380752, 1, 0, 0.00058716,-0.28671) , 
0, 0.00288677, 1, 0, 0.504031,-0.11489)    );
  // itree = 22
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934493,0.0220249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750036,-0.0301377) , 
4, 0.0283846, 1, 0, 0.924342,0.0289138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591791,-0.0166619) , 
0, 0.00218517, 1, 0, 0.903186,0.0187774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00194106,-0.0180871) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0181764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0181804) , 
2, 0.357043, 1, 0, 0,-0.279794) , 
0, 0.00783875, 1, 0, 0.00043054,-0.279414) , 
0, 0.00288677, 1, 0, 0.502079,-0.113713)    );
  // itree = 23
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968486,0.0449157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79493,-0.00519472) , 
0, 0.00202044, 1, 0, 0.955972,0.0432774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.469616,-0.0344916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891391,0.013176) , 
5, 0.0174741, 1, 0, 0.815683,-0.0268166) , 
2, 0.166626, 1, 0, 0.903716,0.0171678) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0179957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0179996) , 
7, -0.000520428, 1, 0, 0,-0.27257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000377077,-0.017979) , 
6, 0.0405805, 1, 0, 0.000117274,-0.272467) , 
0, 0.00288758, 1, 0, 0.503657,-0.111065)    );
  // itree = 24
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909052,0.00457155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964938,0.0718184) , 
7, 0.00083595, 1, 0, 0.912537,0.0168168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653666,-0.0215932) , 
3, 112.938, 1, 0, 0.896875,0.00764034) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000194206,-0.0178114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0178238) , 
2, 0.285623, 1, 0, 0.000110304,-0.265336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00181629,-0.0177328) , 
7, -0.000265323, 1, 0, 0.0006192,-0.264887) , 
0, 0.00288733, 1, 0, 0.498647,-0.11345)    );
  // itree = 25
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990565,0.0688729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987662,0.0732891) , 
2, 0.26101, 1, 0, 0.990032,0.0444055) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704834,-0.0331091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855935,0.00310049) , 
0, 0.00105521, 1, 0, 0.822213,-0.025701) , 
0, 0.000137426, 1, 0, 0.898129,0.00601305) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.56529e-05,-0.0176518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.017661) , 
7, -0.00029862, 1, 0, 5.1798e-05,-0.25853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00159995,-0.0175766) , 
2, 0.380843, 1, 0, 0.000430428,-0.258196) , 
0, 0.00288758, 1, 0, 0.502198,-0.110517)    );
  // itree = 26
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935895,0.0180071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751266,-0.0304993) , 
4, 0.0281219, 1, 0, 0.922993,0.0173877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59271,-0.0149993) , 
0, 0.00219561, 1, 0, 0.90415,0.00955729) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0175004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000341462,-0.0174798) , 
0, 0.0152547, 1, 0, 0.000111405,-0.251788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00128364,-0.0174312) , 
6, 0.0406083, 1, 0, 0.000466149,-0.251454) , 
0, 0.00288758, 1, 0, 0.501257,-0.106811)    );
  // itree = 27
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936435,0.0165751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710716,-0.0292825) , 
4, 0.0283663, 1, 0, 0.922141,0.0148208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572172,-0.0166948) , 
0, 0.00219832, 1, 0, 0.902761,0.00632747) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00140108,-0.0172737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0173463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0173496) , 
2, 0.333099, 1, 0, 0,-0.245328) , 
0, 0.00948687, 1, 0, 0.000424148,-0.244967) , 
0, 0.00288551, 1, 0, 0.50038,-0.105733)    );
  // itree = 28
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995282,0.0784459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927597,0.00227097) , 
8, 0.266532, 1, 0, 0.986722,0.032902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630187,-0.032955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847104,-0.00282569) , 
0, 0.000786526, 1, 0, 0.822322,-0.0293043) , 
0, 0.000136392, 1, 0, 0.896584,-0.00120444) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.51997e-05,-0.0171968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0172063) , 
7, -0.000293282, 1, 0, 5.11994e-05,-0.238936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00164001,-0.0171131) , 
2, 0.380842, 1, 0, 0.000429201,-0.238604) , 
0, 0.00288733, 1, 0, 0.498707,-0.106606)    );
  // itree = 29
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961152,0.0300426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857721,-0.0141856) , 
3, 87.4425, 1, 0, 0.949351,0.0238388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470991,-0.0349964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878873,0.00393854) , 
7, 0.000287819, 1, 0, 0.820849,-0.0343791) , 
2, 0.166626, 1, 0, 0.902276,0.00251148) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0170632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0170669) , 
2, 0.33312, 1, 0, 0,-0.232815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00109354,-0.0170018) , 
6, 0.0377049, 1, 0, 0.000382276,-0.232459) , 
0, 0.00288733, 1, 0, 0.498474,-0.102691)    );
  // itree = 30
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935696,0.012482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81914,-0.0188098) , 
4, 0.0270964, 1, 0, 0.922967,0.00981637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577512,-0.0149346) , 
0, 0.00219347, 1, 0, 0.902537,0.00189289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00138325,-0.0168532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 6.98635e-05,-0.0169252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0169333) , 
2, 0.357069, 1, 0, 4.97946e-05,-0.226698) , 
0, 0.00784038, 1, 0, 0.000347947,-0.226461) , 
0, 0.00288758, 1, 0, 0.500299,-0.0999183)    );
  // itree = 31
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982045,0.0579082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919989,0.000285914) , 
2, 0.0373971, 1, 0, 0.939245,0.0153877) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.463285,-0.0304142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861694,0.00523622) , 
6, 0.0405504, 1, 0, 0.757777,-0.0614068) , 
2, 0.261841, 1, 0, 0.898662,-0.00178657) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0168038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00031972,-0.0167817) , 
0, 0.0152627, 1, 0, 0.000102568,-0.220779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00200446,-0.0166836) , 
2, 0.380843, 1, 0, 0.000549322,-0.220382) , 
0, 0.00288733, 1, 0, 0.502078,-0.0983126)    );
  // itree = 32
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679466,-0.026886) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919524,0.00311472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951769,0.0585287) , 
7, 0.000836511, 1, 0, 0.921741,0.0126977) , 
5, 0.00735498, 1, 0, 0.908623,0.00410389) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0166789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0166838) , 
7, -0.000291212, 1, 0, 0,-0.215156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00116379,-0.016612) , 
2, 0.380669, 1, 0, 0.000272254,-0.214941) , 
0, 0.00288733, 1, 0, 0.502164,-0.093912)    );
  // itree = 33
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932977,0.00822441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71351,-0.019392) , 
3, 112.734, 1, 0, 0.920374,0.00542953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550729,-0.0170756) , 
0, 0.00219561, 1, 0, 0.89704,-0.00433481) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00100547,-0.016499) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0165633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000343408,-0.0165427) , 
6, 0.0377132, 1, 0, 0.000117304,-0.209516) , 
3, 37.867, 1, 0, 0.000423065,-0.209217) , 
0, 0.00288758, 1, 0, 0.49719,-0.0957028)    );
  // itree = 34
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932985,0.00963773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698685,-0.0336701) , 
4, 0.0283663, 1, 0, 0.917868,0.00299701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56207,-0.0166287) , 
0, 0.00219561, 1, 0, 0.897301,-0.00534424) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00254052,-0.0162862) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000352241,-0.0164252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0164502) , 
2, 0.142979, 1, 0, 0.000101326,-0.204047) , 
0, 0.00783973, 1, 0, 0.000633689,-0.203576) , 
0, 0.00288725, 1, 0, 0.503595,-0.0923832)    );
  // itree = 35
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937302,0.0112356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762389,-0.0262455) , 
4, 0.0281051, 1, 0, 0.924352,0.00686048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559148,-0.0143577) , 
0, 0.00219881, 1, 0, 0.901951,-0.00128186) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00123609,-0.0162635) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000359385,-0.0163166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.016341) , 
7, -0.00221245, 1, 0, 9.84132e-05,-0.198756) , 
0, 0.00784038, 1, 0, 0.000346347,-0.19858) , 
0, 0.00288758, 1, 0, 0.499022,-0.0894549)    );
  // itree = 36
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966977,0.0299541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895427,-0.00479115) , 
3, 87.3943, 1, 0, 0.959211,0.0220687) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.534514,-0.0333838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883488,0.00231287) , 
5, 0.0172167, 1, 0, 0.81627,-0.0441812) , 
2, 0.142853, 1, 0, 0.899185,-0.00575171) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00141062,-0.016141) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.78269e-05,-0.0162302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0162397) , 
2, 0.333186, 1, 0, 5.60163e-05,-0.193692) , 
4, 0.0202992, 1, 0, 0.000467838,-0.193313) , 
0, 0.00288758, 1, 0, 0.501159,-0.0888196)    );
  // itree = 37
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971522,0.0308682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875693,-0.0040766) , 
0, 0.0016367, 1, 0, 0.955309,0.017267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474026,-0.0311479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.88005,0.00264338) , 
5, 0.0174222, 1, 0, 0.806365,-0.0445114) , 
2, 0.166662, 1, 0, 0.899312,-0.00595902) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 6.90628e-05,-0.0161303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0161407) , 
7, -0.000286296, 1, 0, 4.73975e-05,-0.188674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00158684,-0.0160276) , 
2, 0.404578, 1, 0, 0.000373555,-0.188397) , 
0, 0.00288758, 1, 0, 0.492422,-0.0885367)    );
  // itree = 38
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938254,0.000351205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374252,-0.0315497) , 
2, 0.214279, 1, 0, 0.864587,-0.0435667) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925567,-0.0139503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916255,0.0246614) , 
0, 0.00151168, 1, 0, 0.921333,0.016589) , 
5, 0.0180672, 1, 0, 0.897148,-0.00904921) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0160432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.5098e-05,-0.016033) , 
0, 0.0103146, 1, 0, 5.78225e-05,-0.183787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000889794,-0.0159772) , 
6, 0.0405976, 1, 0, 0.000317949,-0.183562) , 
0, 0.00288677, 1, 0, 0.503809,-0.0855882)    );
  // itree = 39
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649662,-0.0244702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929891,0.00512112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698983,-0.0138416) , 
2, 0.404643, 1, 0, 0.912387,0.000679593) , 
5, 0.00704275, 1, 0, 0.899056,-0.00691798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00253137,-0.015762) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000455805,-0.0159125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0159467) , 
3, 37.7985, 1, 0, 0.000148828,-0.178899) , 
0, 0.00784038, 1, 0, 0.000661785,-0.178457) , 
0, 0.00288758, 1, 0, 0.502359,-0.082663)    );
  // itree = 40
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994167,0.0686763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990411,0.0735065) , 
2, 0.308466, 1, 0, 0.993633,0.0293532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625914,-0.0359906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860159,-0.00208915) , 
0, 0.000786885, 1, 0, 0.831463,-0.0302292) , 
0, 0.000136489, 1, 0, 0.90515,-0.00315628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00114235,-0.0157709) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00027531,-0.0158376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0158587) , 
3, 59.5987, 1, 0, 0.000103377,-0.174388) , 
3, 25.2776, 1, 0, 0.000353297,-0.174146) , 
0, 0.00288551, 1, 0, 0.504988,-0.0787793)    );
  // itree = 41
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922474,-0.00196311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551164,-0.0223205) , 
0, 0.00206139, 1, 0, 0.899542,-0.014072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949856,0.0537078) , 
7, 0.000835951, 1, 0, 0.902867,-0.00647608) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00151545,-0.0156541) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0157705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.015774) , 
2, 0.333008, 1, 0, 0,-0.169933) , 
4, 0.0203044, 1, 0, 0.000469905,-0.169509) , 
0, 0.00288664, 1, 0, 0.502722,-0.0787687)    );
  // itree = 42
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993122,0.0618387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984462,0.0595403) , 
2, 0.308466, 1, 0, 0.991862,0.0229517) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549853,-0.0308095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836869,-0.00769087) , 
0, 0.000666487, 1, 0, 0.812472,-0.0413195) , 
0, 0.000137395, 1, 0, 0.894259,-0.0120172) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.29774e-05,-0.0156808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0156921) , 
7, -0.000293282, 1, 0, 4.97125e-05,-0.16548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00157486,-0.0155646) , 
2, 0.380865, 1, 0, 0.000415636,-0.165169) , 
0, 0.00288758, 1, 0, 0.491069,-0.0811003)    );
  // itree = 43
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954713,0.0129392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430887,-0.0323104) , 
2, 0.142825, 1, 0, 0.863832,-0.0415997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93293,-0.0100233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913051,0.0216048) , 
0, 0.0015023, 1, 0, 0.924982,0.0124535) , 
5, 0.0158826, 1, 0, 0.905359,-0.0048922) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.015612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.96532e-05,-0.0156006) , 
0, 0.0103125, 1, 0, 5.4457e-05,-0.161215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00218768,-0.015428) , 
6, 0.040597, 1, 0, 0.000688761,-0.160615) , 
0, 0.00288725, 1, 0, 0.499058,-0.0748299)    );
  // itree = 44
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939869,0.00890394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766155,-0.0263696) , 
4, 0.0280699, 1, 0, 0.927367,0.00344617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566777,-0.015279) , 
0, 0.00219347, 1, 0, 0.905386,-0.00451741) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0155295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0155349) , 
7, -0.000281454, 1, 0, 0,-0.157075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00211486,-0.0153546) , 
2, 0.380851, 1, 0, 0.000509177,-0.156627) , 
0, 0.00288733, 1, 0, 0.50329,-0.0721098)    );
  // itree = 45
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963365,0.018039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844293,-0.0114123) , 
2, 0.166463, 1, 0, 0.921631,-0.00246056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571079,-0.0156358) , 
0, 0.00219347, 1, 0, 0.900821,-0.00985429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00137066,-0.0153425) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0154552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0154596) , 
2, 0.356807, 1, 0, 0,-0.153006) , 
0, 0.00785439, 1, 0, 0.000308902,-0.152775) , 
0, 0.00288733, 1, 0, 0.500296,-0.0734218)    );
  // itree = 46
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921041,-0.00345266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57664,-0.0216037) , 
0, 0.00204859, 1, 0, 0.899582,-0.0153095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953219,0.0527834) , 
7, 0.000835047, 1, 0, 0.903141,-0.00788246) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000665353,-0.0153268) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0153841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000166605,-0.0153745) , 
7, -0.000291212, 1, 0, 5.12691e-05,-0.14906) , 
3, 25.2755, 1, 0, 0.000195949,-0.148928) , 
0, 0.00288733, 1, 0, 0.503085,-0.0703735)    );
  // itree = 47
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917475,-0.00376716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947546,0.0349067) , 
5, 0.0264233, 1, 0, 0.922324,0.00349146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673409,-0.0166937) , 
3, 112.732, 1, 0, 0.907488,-0.00272668) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000158206,-0.0153037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00191194,-0.0151399) , 
5, 0.0197047, 1, 0, 0.000993857,-0.144333) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0153145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0153177) , 
6, 0.0405857, 1, 0, 0,-0.145222) , 
5, 0.0345006, 1, 0, 0.000442526,-0.144827) , 
0, 0.00288758, 1, 0, 0.489426,-0.0682213)    );
  // itree = 48
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932131,0.00339566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768726,-0.0246346) , 
4, 0.0283915, 1, 0, 0.922662,-0.0012542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558792,-0.0156443) , 
0, 0.00219881, 1, 0, 0.900538,-0.00913212) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00031972,-0.0152164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0152493) , 
7, -0.00147148, 1, 0, 0.000103698,-0.141348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00114857,-0.0151445) , 
2, 0.38082, 1, 0, 0.000354591,-0.141163) , 
0, 0.00288733, 1, 0, 0.503543,-0.0673596)    );
  // itree = 49
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93612,0.00368039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688122,-0.0190983) , 
3, 112.575, 1, 0, 0.921355,-0.0019244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527586,-0.0168327) , 
0, 0.00219881, 1, 0, 0.896611,-0.0112528) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0151827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0151866) , 
7, -0.000544861, 1, 0, 0,-0.137807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000986445,-0.0150903) , 
6, 0.0377049, 1, 0, 0.000345025,-0.137506) , 
0, 0.00288758, 1, 0, 0.497039,-0.067539)    );
  // itree = 50
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924885,-0.000113475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583625,-0.0182554) , 
0, 0.00206093, 1, 0, 0.903537,-0.00909807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977898,0.0727416) , 
7, 0.000835336, 1, 0, 0.908396,-0.00165214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0151245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000708374,-0.0150514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0151215) , 
4, 0.0298266, 1, 0, 0.000216152,-0.134035) , 
4, 0.0174011, 1, 0, 0.000157916,-0.134137) , 
0, 0.00288608, 1, 0, 0.508343,-0.060008)    );
  // itree = 51
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689078,-0.0208945) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93191,0.00271139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651181,-0.0115378) , 
0, 0.00219881, 1, 0, 0.91708,-0.000690979) , 
5, 0.00731416, 1, 0, 0.904898,-0.00638438) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00338364,-0.01472) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.13527e-05,-0.0150522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0150635) , 
2, 0.357069, 1, 0, 4.99432e-05,-0.130697) , 
0, 0.00783987, 1, 0, 0.000780092,-0.13004) , 
0, 0.00288733, 1, 0, 0.502531,-0.0614161)    );
  // itree = 52
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993847,0.060312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983941,0.055913) , 
2, 0.333252, 1, 0, 0.992725,0.0191258) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697564,-0.028858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857592,-0.00299593) , 
0, 0.000921385, 1, 0, 0.829934,-0.0314994) , 
0, 0.000137226, 1, 0, 0.903918,-0.00849171) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0028012,-0.0147153) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.10163e-05,-0.0149937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.015005) , 
2, 0.357043, 1, 0, 5.0126e-05,-0.127313) , 
0, 0.00784069, 1, 0, 0.00066247,-0.126791) , 
0, 0.00288551, 1, 0, 0.502825,-0.0610226)    );
  // itree = 53
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939566,0.00223725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75993,-0.014331) , 
2, 0.333252, 1, 0, 0.915994,-0.00638999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571654,-0.0157075) , 
0, 0.00219881, 1, 0, 0.895953,-0.0133602) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.63817e-05,-0.0149363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0149504) , 
7, -0.000309579, 1, 0, 5.17802e-05,-0.124048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00150744,-0.0147888) , 
2, 0.380843, 1, 0, 0.000395526,-0.123768) , 
0, 0.00288733, 1, 0, 0.502198,-0.0619037)    );
  // itree = 54
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932668,0.0030748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73558,-0.0260726) , 
4, 0.0281051, 1, 0, 0.91789,-0.00505716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.574226,-0.0119769) , 
0, 0.00219561, 1, 0, 0.896979,-0.010651) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.15901e-05,-0.0148831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014943) , 
6, 0.0405953, 1, 0, 4.95979e-05,-0.121008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00217113,-0.014657) , 
2, 0.380716, 1, 0, 0.000535377,-0.12055) , 
0, 0.00288503, 1, 0, 0.499315,-0.0594025)    );
  // itree = 55
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922224,-0.00395615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592616,-0.0261791) , 
0, 0.00178393, 1, 0, 0.892816,-0.0213859) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940979,-0.0138782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935608,0.0404887) , 
0, 0.00192353, 1, 0, 0.938248,0.0401356) , 
5, 0.0252113, 1, 0, 0.902852,-0.00779492) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000164065,-0.0148237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00244906,-0.0145635) , 
5, 0.019732, 1, 0, 0.00126994,-0.116658) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0148381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014841) , 
6, 0.0405773, 1, 0, 0,-0.117774) , 
5, 0.0345598, 1, 0, 0.000564144,-0.117278) , 
0, 0.00288758, 1, 0, 0.494191,-0.0573818)    );
  // itree = 56
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985095,0.0534835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939829,-0.0037372) , 
2, 0.0339908, 1, 0, 0.957275,0.0106529) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.366998,-0.0296121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874993,-0.00301603) , 
5, 0.0157306, 1, 0, 0.808363,-0.0467509) , 
2, 0.14277, 1, 0, 0.893759,-0.0138317) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.02873e-05,-0.0147804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000174924,-0.0147663) , 
4, 0.0434754, 1, 0, 0.00010028,-0.114618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00221034,-0.0145369) , 
2, 0.380525, 1, 0, 0.000580821,-0.114215) , 
0, 0.00288733, 1, 0, 0.496521,-0.0584766)    );
  // itree = 57
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913492,-0.00612312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963138,0.0508855) , 
7, 0.00083446, 1, 0, 0.916721,-0.00447247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66306,-0.0188507) , 
3, 112.937, 1, 0, 0.902178,-0.0105899) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000988191,-0.0146247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.14184e-05,-0.0147282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0147422) , 
2, 0.333252, 1, 0, 5.31317e-05,-0.111746) , 
4, 0.0174149, 1, 0, 0.000308823,-0.11154) , 
0, 0.00288725, 1, 0, 0.50081,-0.055517)    );
  // itree = 58
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927504,-0.0125306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914324,0.0160046) , 
0, 0.00125577, 1, 0, 0.923173,-0.000226394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601015,-0.0128422) , 
0, 0.00219832, 1, 0, 0.904888,-0.0058745) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00222289,-0.0144261) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 6.73942e-05,-0.0146812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0146942) , 
2, 0.356814, 1, 0, 4.78948e-05,-0.108814) , 
0, 0.00784806, 1, 0, 0.000523808,-0.108429) , 
0, 0.00288733, 1, 0, 0.49502,-0.0523534)    );
  // itree = 59
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949381,0.00970102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83963,-0.0145359) , 
3, 87.3943, 1, 0, 0.93624,0.00446319) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47474,-0.0221641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84966,0.00310622) , 
7, 0.000474233, 1, 0, 0.725837,-0.061124) , 
2, 0.309514, 1, 0, 0.900746,-0.00660116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00235505,-0.0143531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.70459e-05,-0.0146343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0146485) , 
2, 0.356888, 1, 0, 5.36808e-05,-0.10604) , 
4, 0.0174314, 1, 0, 0.000668697,-0.105481) , 
0, 0.00288758, 1, 0, 0.505278,-0.050046)    );
  // itree = 60
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936022,0.00539426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718002,-0.027929) , 
4, 0.0283913, 1, 0, 0.922113,-0.00169079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565752,-0.0120514) , 
0, 0.00219832, 1, 0, 0.899991,-0.00748003) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00200446,-0.01435) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014603) , 
2, 0.357043, 1, 0, 0,-0.103317) , 
0, 0.00783973, 1, 0, 0.000435862,-0.102983) , 
0, 0.00288725, 1, 0, 0.505151,-0.0493989)    );
  // itree = 61
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940445,0.00863363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792454,-0.0206842) , 
4, 0.0279027, 1, 0, 0.928979,0.00442145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568491,-0.013091) , 
0, 0.00219832, 1, 0, 0.907568,-0.00212016) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000346968,-0.0145097) , 
0, 0.0152619, 1, 0, 0.000108672,-0.100613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00110639,-0.0144137) , 
6, 0.0405773, 1, 0, 0.000414493,-0.100344) , 
0, 0.00288758, 1, 0, 0.493486,-0.0469555)    );
  // itree = 62
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925101,0.00129164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723042,-0.0366924) , 
4, 0.0201361, 1, 0, 0.89145,-0.0232826) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928043,-0.0216058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932574,0.0308912) , 
0, 0.00164874, 1, 0, 0.930348,0.0201931) , 
5, 0.0216516, 1, 0, 0.907017,-0.00588387) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145139) , 
0, 0.0126393, 1, 0, 0,-0.0980992) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00164659,-0.0142926) , 
1, 1.44448, 1, 0, 0.000717181,-0.0974879) , 
6, 0.0289977, 1, 0, 0.0003558,-0.0977959) , 
0, 0.00288758, 1, 0, 0.506131,-0.0465233)    );
  // itree = 63
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994569,0.0565132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98865,0.057421) , 
2, 0.166626, 1, 0, 0.992653,0.0179846) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705459,-0.0266553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851747,-0.00350993) , 
0, 0.00105646, 1, 0, 0.819942,-0.0362257) , 
0, 0.000137395, 1, 0, 0.897775,-0.0117956) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000159378,-0.0144514) , 
5, 0.0288403, 1, 0, 0.000101531,-0.0954351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00199781,-0.0142019) , 
2, 0.380891, 1, 0, 0.000544641,-0.0950661) , 
0, 0.00288758, 1, 0, 0.498655,-0.0488373)    );
  // itree = 64
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931202,-0.000166716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589163,-0.0156298) , 
0, 0.00219832, 1, 0, 0.913176,-0.0065371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634288,-0.0181319) , 
3, 112.673, 1, 0, 0.896269,-0.0131758) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000344062,-0.0143847) , 
5, 0.0401818, 1, 0, 0.000156291,-0.09293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00176906,-0.014189) , 
2, 0.380752, 1, 0, 0.000550901,-0.0926224) , 
0, 0.00288551, 1, 0, 0.504155,-0.0479547)    );
  // itree = 65
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989502,0.0334794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973527,0.0345608) , 
2, 0.309448, 1, 0, 0.987315,0.0102727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553589,-0.0295032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842012,-0.00518351) , 
0, 0.000661493, 1, 0, 0.817722,-0.0326276) , 
0, 0.000137395, 1, 0, 0.895054,-0.0130656) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.29426e-05,-0.0143841) , 
0, 0.0103087, 1, 0, 5.55823e-05,-0.0906677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00185473,-0.0141285) , 
6, 0.0405835, 1, 0, 0.000613526,-0.0901531) , 
0, 0.00288758, 1, 0, 0.494356,-0.0475999)    );
  // itree = 66
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988631,0.0556248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911058,-0.00898073) , 
0, 0.00129809, 1, 0, 0.970931,0.0182041) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485261,-0.0302873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887353,-0.00381305) , 
5, 0.0127012, 1, 0, 0.856591,-0.0264396) , 
2, 0.0714125, 1, 0, 0.899394,-0.0097272) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000162123,-0.014399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.45669e-05,-0.0143478) , 
4, 0.020294, 1, 0, 0.00010215,-0.088413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00196622,-0.0140712) , 
2, 0.380586, 1, 0, 0.000572724,-0.0879916) , 
0, 0.00288514, 1, 0, 0.497151,-0.0447524)    );
  // itree = 67
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853046,-0.0139094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938539,0.00941568) , 
5, 0.012369, 1, 0, 0.922385,0.00368911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644695,-0.023806) , 
4, 0.02942, 1, 0, 0.908121,-0.00410559) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00179648,-0.0140547) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014328) , 
2, 0.356822, 1, 0, 0,-0.086056) , 
0, 0.00784239, 1, 0, 0.000388788,-0.0857582) , 
0, 0.00288725, 1, 0, 0.503683,-0.0404857)    );
  // itree = 68
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913552,-0.00636116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948691,0.026036) , 
5, 0.0260248, 1, 0, 0.919538,-0.00260573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676122,-0.0138747) , 
2, 0.40475, 1, 0, 0.901884,-0.00820846) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0012831,-0.0140885) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000297906,-0.0142418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.96111e-05,-0.0142793) , 
7, -0.00145276, 1, 0, 0.000155645,-0.0837623) , 
3, 25.253, 1, 0, 0.000431212,-0.0834956) , 
0, 0.00288608, 1, 0, 0.501576,-0.0416411)    );
  // itree = 69
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957006,0.0108196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422317,-0.0262115) , 
2, 0.14277, 1, 0, 0.855182,-0.0391476) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93261,-0.0237621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917866,0.0196658) , 
0, 0.00123656, 1, 0, 0.925172,0.0081177) , 
5, 0.0162328, 1, 0, 0.90192,-0.0075845) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142552) , 
0, 0.0103142, 1, 0, 0,-0.0817276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00115248,-0.0140722) , 
6, 0.040597, 1, 0, 0.000347057,-0.0814241) , 
0, 0.00288733, 1, 0, 0.499392,-0.0405519)    );
  // itree = 70
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94153,0.00478348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621624,-0.0118076) , 
0, 0.00219561, 1, 0, 0.923336,0.000801152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670358,-0.0134891) , 
2, 0.404515, 1, 0, 0.904249,-0.00548795) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142226) , 
0, 0.010319, 1, 0, 0,-0.0796143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000878672,-0.0140807) , 
6, 0.0405811, 1, 0, 0.000278657,-0.0793914) , 
0, 0.00288758, 1, 0, 0.506916,-0.0379716)    );
  // itree = 71
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934164,0.00103863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627476,-0.0157561) , 
0, 0.00206093, 1, 0, 0.91432,-0.00530596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714857,-0.0173255) , 
4, 0.0290246, 1, 0, 0.90035,-0.0112175) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00211715,-0.0138379) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141948) , 
2, 0.356879, 1, 0, 0,-0.0775076) , 
0, 0.00784529, 1, 0, 0.000467838,-0.0771388) , 
0, 0.00288758, 1, 0, 0.503932,-0.0402573)    );
  // itree = 72
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915261,-0.00514499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947326,0.0329038) , 
7, 0.000735301, 1, 0, 0.918304,-0.00283812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660393,-0.018728) , 
4, 0.0294261, 1, 0, 0.904557,-0.00878243) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00127711,-0.0139411) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 9.09008e-05,-0.0141441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141641) , 
2, 0.33316, 1, 0, 5.73165e-05,-0.0754954) , 
4, 0.0202992, 1, 0, 0.000435175,-0.0751802) , 
0, 0.00288438, 1, 0, 0.507451,-0.0379455)    );
  // itree = 73
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685539,-0.0171912) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931147,0.000124174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6258,-0.00901608) , 
0, 0.00219832, 1, 0, 0.913889,-0.00348157) , 
5, 0.00709197, 1, 0, 0.903136,-0.0074371) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141353) , 
7, -0.000309579, 1, 0, 0,-0.073584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00228457,-0.0137268) , 
2, 0.380851, 1, 0, 0.000546334,-0.0731215) , 
0, 0.00288725, 1, 0, 0.503704,-0.0365051)    );
  // itree = 74
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967667,0.0171613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843895,-0.0082621) , 
2, 0.142853, 1, 0, 0.916807,-0.00278319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650385,-0.0143484) , 
3, 112.673, 1, 0, 0.900664,-0.00782984) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00201563,-0.0137386) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 6.92214e-05,-0.0140881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141059) , 
2, 0.356949, 1, 0, 4.86214e-05,-0.071628) , 
0, 0.00783849, 1, 0, 0.000490186,-0.0712868) , 
0, 0.00288664, 1, 0, 0.494652,-0.0364513)    );
  // itree = 75
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932593,0.000515953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610474,-0.010812) , 
0, 0.00219881, 1, 0, 0.915025,-0.00347435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529659,-0.0193752) , 
3, 125.259, 1, 0, 0.897729,-0.0101728) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.27149e-05,-0.0140589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00145097,-0.0138008) , 
6, 0.0269169, 1, 0, 0.000546674,-0.069323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140778) , 
6, 0.0434814, 1, 0, 0.000395734,-0.0695256) , 
0, 0.00288608, 1, 0, 0.504473,-0.0361841)    );
  // itree = 76
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664103,-0.0179719) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927585,-0.000371185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675816,-0.0126714) , 
3, 112.732, 1, 0, 0.912911,-0.00482045) , 
5, 0.00698287, 1, 0, 0.900675,-0.00934769) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140511) , 
7, -0.000507863, 1, 0, 0,-0.0680674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000765361,-0.0139022) , 
6, 0.0405805, 1, 0, 0.000235375,-0.0678895) , 
0, 0.00288733, 1, 0, 0.502452,-0.035238)    );
  // itree = 77
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926458,-0.000605842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593264,-0.0171297) , 
0, 0.00203979, 1, 0, 0.904222,-0.00878277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955763,0.0470398) , 
7, 0.000835951, 1, 0, 0.907587,-0.00323479) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140247) , 
7, -0.000301567, 1, 0, 0,-0.0662864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00170885,-0.0136867) , 
2, 0.380669, 1, 0, 0.00039563,-0.0659733) , 
0, 0.00288725, 1, 0, 0.508509,-0.0308338)    );
  // itree = 78
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953427,0.00670799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409875,-0.0245261) , 
2, 0.142825, 1, 0, 0.847045,-0.0392242) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949414,-0.0137787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907502,0.0137286) , 
0, 0.00122029, 1, 0, 0.927856,0.00917965) , 
5, 0.0163039, 1, 0, 0.900988,-0.00691397) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139943) , 
0, 0.0103142, 1, 0, 0,-0.064604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00109744,-0.0137745) , 
6, 0.0405909, 1, 0, 0.000348753,-0.0643168) , 
0, 0.00288758, 1, 0, 0.49879,-0.0325483)    );
  // itree = 79
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958854,0.0149182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481057,-0.02695) , 
2, 0.0708705, 1, 0, 0.819367,-0.0532401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930454,-0.0201105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908741,0.0140577) , 
0, 0.00109941, 1, 0, 0.919829,0.00255125) , 
5, 0.0132187, 1, 0, 0.89854,-0.00927188) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00141797,-0.0136769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139735) , 
2, 0.333221, 1, 0, 0,-0.0629274) , 
4, 0.0202992, 1, 0, 0.000460332,-0.0625396) , 
0, 0.00288733, 1, 0, 0.497146,-0.0330797)    );
  // itree = 80
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929673,0.00123941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687058,-0.0141224) , 
3, 112.732, 1, 0, 0.915147,-0.00300935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631602,-0.0208279) , 
4, 0.029409, 1, 0, 0.899931,-0.00989311) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.32635e-05,-0.0139273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139496) , 
7, -0.000518509, 1, 0, 5.55003e-05,-0.0612581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00181942,-0.0135585) , 
6, 0.0405835, 1, 0, 0.00058337,-0.0607931) , 
0, 0.00288758, 1, 0, 0.503181,-0.0323478)    );
  // itree = 81
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673797,-0.019699) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91113,-0.00408696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953178,0.0418745) , 
7, 0.00083595, 1, 0, 0.913871,-0.00244972) , 
5, 0.00699947, 1, 0, 0.902701,-0.00684238) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00175055,-0.0135378) , 
5, 0.0196819, 1, 0, 0.000868468,-0.0590095) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139261) , 
6, 0.0377143, 1, 0, 0,-0.0597568) , 
5, 0.0344441, 1, 0, 0.000383542,-0.0594268) , 
0, 0.00288733, 1, 0, 0.497107,-0.0304792)    );
  // itree = 82
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993418,0.0510203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987575,0.0629192) , 
2, 0.333252, 1, 0, 0.992781,0.0152131) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653646,-0.0207293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853065,-0.00391642) , 
0, 0.000788997, 1, 0, 0.829649,-0.0244562) , 
0, 0.000136489, 1, 0, 0.904621,-0.00622502) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000822472,-0.0137159) , 
6, 0.0309316, 1, 0, 0.000252258,-0.0579709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140064) , 
6, 0.0463771, 1, 0, 0.000195238,-0.0582229) , 
0, 0.00288514, 1, 0, 0.502686,-0.0293334)    );
  // itree = 83
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960719,0.0147427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446331,-0.0220981) , 
2, 0.119021, 1, 0, 0.852626,-0.0287941) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940571,-0.0152558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921608,0.0189201) , 
0, 0.0012284, 1, 0, 0.931318,0.00970253) , 
5, 0.0152576, 1, 0, 0.908397,-0.00151048) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000313075,-0.0138032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138792) , 
7, -0.00147009, 1, 0, 0.000103342,-0.0565827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00182357,-0.0134605) , 
2, 0.380851, 1, 0, 0.000512106,-0.0562553) , 
0, 0.00288733, 1, 0, 0.509018,-0.0255927)    );
  // itree = 84
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950323,0.00938731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811308,-0.0167716) , 
4, 0.0277484, 1, 0, 0.936024,0.0029004) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.431902,-0.0193083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897622,0.0134153) , 
5, 0.0223357, 1, 0, 0.721122,-0.0474136) , 
2, 0.333232, 1, 0, 0.905457,-0.00425614) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.40065e-05,-0.0138357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138598) , 
2, 0.333341, 1, 0, 5.49537e-05,-0.055196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00150285,-0.0135021) , 
6, 0.040588, 1, 0, 0.000496524,-0.0548184) , 
0, 0.00288608, 1, 0, 0.50031,-0.0268926)    );
  // itree = 85
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939723,-0.000430406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945458,0.0299791) , 
0, 0.00146541, 1, 0, 0.940854,0.008317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798729,-0.0305277) , 
4, 0.026245, 1, 0, 0.925601,-0.00307039) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00514474,-0.0201706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138359) , 
0, 0.00802362, 1, 0, 0.00121491,-0.0660949) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685314,0.00226023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858762,0.0404181) , 
7, 0.000795997, 1, 0, 0.745039,0.0338636) , 
7, 0.000534736, 1, 0, 0.112822,-0.0510966) , 
0, 0.00192442, 1, 0, 0.502586,-0.0280659)    );
  // itree = 86
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942736,-0.00553856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931889,0.0173595) , 
0, 0.00109917, 1, 0, 0.938978,0.00609292) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709765,-0.0336066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858197,-0.0224363) , 
7, 0.000788673, 1, 0, 0.787086,-0.100937) , 
4, 0.0262841, 1, 0, 0.922122,-0.00578499) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00345095,-0.0198108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000150413,-0.0137777) , 
0, 0.00804964, 1, 0, 0.000893531,-0.062441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.565904,-0.0102471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844568,0.0290854) , 
7, 0.000684775, 1, 0, 0.745998,0.0254001) , 
7, 0.000535657, 1, 0, 0.114402,-0.0490594) , 
0, 0.00192505, 1, 0, 0.498499,-0.028481)    );
  // itree = 87
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955766,0.00894063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696797,-0.0145786) , 
2, 0.380941, 1, 0, 0.93775,0.0021537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723287,-0.0238627) , 
4, 0.028136, 1, 0, 0.924471,-0.00506469) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00312844,-0.0195952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.21025e-05,-0.0137825) , 
0, 0.0080308, 1, 0, 0.000761627,-0.0614371) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690474,-0.00570323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903517,0.0503071) , 
7, 0.000796256, 1, 0, 0.767486,0.0215118) , 
7, 0.000535427, 1, 0, 0.119432,-0.0485987) , 
0, 0.00192488, 1, 0, 0.507807,-0.0275966)    );
  // itree = 88
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945934,0.00900991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897571,-0.0386046) , 
4, 0.0253854, 1, 0, 0.942431,0.00620886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727018,-0.0292647) , 
4, 0.0280531, 1, 0, 0.928283,-0.0029196) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00289501,-0.0200885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.7838e-05,-0.0137508) , 
0, 0.00803139, 1, 0, 0.000722046,-0.0601454) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659814,-0.00517277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89242,0.0438722) , 
7, 0.000778478, 1, 0, 0.74993,0.0210811) , 
7, 0.000535657, 1, 0, 0.112597,-0.0480163) , 
0, 0.00192505, 1, 0, 0.49846,-0.0266831)    );
  // itree = 89
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960509,0.0145855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.716652,-0.0101367) , 
2, 0.380941, 1, 0, 0.945526,0.00891381) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65755,-0.0339969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942982,-0.00176787) , 
5, 0.0270299, 1, 0, 0.826216,-0.0748572) , 
4, 0.0252596, 1, 0, 0.929216,-0.00253763) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00358652,-0.0188987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000102918,-0.0137302) , 
0, 0.00802392, 1, 0, 0.000879671,-0.0570787) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683923,-0.00268236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905474,0.0381119) , 
7, 0.000796223, 1, 0, 0.760238,0.0175062) , 
7, 0.000535657, 1, 0, 0.11636,-0.0457362) , 
0, 0.00192451, 1, 0, 0.507716,-0.0249379)    );
  // itree = 90
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942539,0.00610584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90788,-0.0324805) , 
4, 0.0240949, 1, 0, 0.937989,0.000969905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706922,-0.0256112) , 
4, 0.0280842, 1, 0, 0.922825,-0.00752101) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00244906,-0.0205519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137401) , 
0, 0.00802582, 1, 0, 0.000538796,-0.0572278) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69924,-0.00297649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816108,0.0183994) , 
4, 0.0271934, 1, 0, 0.757759,0.0170124) , 
7, 0.000538844, 1, 0, 0.116237,-0.0458843) , 
0, 0.00192505, 1, 0, 0.49837,-0.0277091)    );
  // itree = 91
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900876,-0.0124014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959368,0.0165386) , 
5, 0.0147156, 1, 0, 0.939892,0.00286508) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709097,-0.0331344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890667,-0.0102779) , 
7, 0.000797014, 1, 0, 0.800237,-0.0858078) , 
4, 0.026245, 1, 0, 0.92468,-0.00679363) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00252267,-0.0211256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000336988,-0.0136259) , 
0, 0.00802523, 1, 0, 0.000848247,-0.0576239) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665322,-0.00446977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858014,0.017765) , 
7, 0.000760374, 1, 0, 0.749016,0.00759212) , 
7, 0.000535657, 1, 0, 0.109944,-0.0481143) , 
0, 0.00192488, 1, 0, 0.490063,-0.0288359)    );
  // itree = 92
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958044,0.00966299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681933,-0.0137898) , 
2, 0.380941, 1, 0, 0.940849,0.00310725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572888,-0.0311519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943259,0.00507073) , 
5, 0.0279719, 1, 0, 0.768645,-0.0939386) , 
4, 0.0262382, 1, 0, 0.92149,-0.00780294) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00188065,-0.0195225) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889813,0.0118717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.27089e-05,-0.013974) , 
0, 0.00279646, 1, 0, 0.173311,-0.0316341) , 
4, 0.0232022, 1, 0, 0.115397,-0.047931) , 
0, 0.00192442, 1, 0, 0.50203,-0.028684)    );
  // itree = 93
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960459,0.0106078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750318,-0.0109386) , 
2, 0.332601, 1, 0, 0.941058,0.00335385) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69624,-0.0297695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953847,0.00343272) , 
5, 0.0260115, 1, 0, 0.850632,-0.0532147) , 
4, 0.0243713, 1, 0, 0.925304,-0.00650159) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00267083,-0.0181532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.92562e-05,-0.0136566) , 
0, 0.00802531, 1, 0, 0.000688586,-0.0500781) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793178,0.0109018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620493,-0.00848537) , 
3, 61.1717, 1, 0, 0.736007,0.00529312) , 
7, 0.000535657, 1, 0, 0.112797,-0.0416361) , 
0, 0.00192283, 1, 0, 0.496148,-0.0250592)    );
  // itree = 94
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990982,0.0352958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0934422) , 
7, 0.000705657, 1, 0, 0.992377,0.0140509) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894808,-0.00176851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688129,-0.028811) , 
4, 0.0223197, 1, 0, 0.854145,-0.0299171) , 
0, 9.16609e-05, 1, 0, 0.927224,-0.00667259) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00302854,-0.0208591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136708) , 
0, 0.00803309, 1, 0, 0.000670799,-0.0526934) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820239,0.0113872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58347,-0.00645584) , 
5, 0.0290084, 1, 0, 0.727916,0.00906019) , 
7, 0.000534736, 1, 0, 0.116116,-0.0428904) , 
0, 0.00192505, 1, 0, 0.506872,-0.0254423)    );
  // itree = 95
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897524,-0.0139604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95698,0.0110693) , 
5, 0.014054, 1, 0, 0.93951,-0.00015535) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825881,-0.0184629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742096,-0.0257048) , 
1, 1.11551, 1, 0, 0.784593,-0.0804309) , 
4, 0.0262382, 1, 0, 0.92232,-0.00906269) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00363955,-0.0205412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.96469e-05,-0.0136393) , 
0, 0.00802506, 1, 0, 0.000849022,-0.0506255) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66535,-0.00450453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918316,0.0431502) , 
7, 0.000795998, 1, 0, 0.751397,0.0131002) , 
7, 0.000534737, 1, 0, 0.112736,-0.0411257) , 
0, 0.00192484, 1, 0, 0.498916,-0.0258313)    );
  // itree = 96
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97262,0.0165521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836817,-0.0100035) , 
2, 0.19047, 1, 0, 0.935974,-0.00133677) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572115,-0.0319861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97339,0.030017) , 
5, 0.0280642, 1, 0, 0.764266,-0.0977062) , 
4, 0.026226, 1, 0, 0.916597,-0.0122121) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00187941,-0.0207275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.1905e-05,-0.0136229) , 
0, 0.00803309, 1, 0, 0.000477729,-0.049896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841507,0.0176685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.543931,-0.0117736) , 
5, 0.0293651, 1, 0, 0.739846,0.0101242) , 
7, 0.000534736, 1, 0, 0.115848,-0.0405305) , 
0, 0.00192505, 1, 0, 0.501843,-0.0268799)    );
  // itree = 97
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977842,0.0253257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838463,-0.00961008) , 
2, 0.166565, 1, 0, 0.936854,0.000855737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723567,-0.0309812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955371,0.00108382) , 
5, 0.0262983, 1, 0, 0.84995,-0.0584079) , 
4, 0.0243262, 1, 0, 0.921518,-0.00960226) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00340376,-0.0189484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.1905e-05,-0.0136078) , 
0, 0.0080295, 1, 0, 0.000804893,-0.0471729) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683077,0.00132023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.88098,0.0299639) , 
7, 0.000799317, 1, 0, 0.751539,0.0192532) , 
7, 0.000543648, 1, 0, 0.1197,-0.0366529) , 
0, 0.00192451, 1, 0, 0.508763,-0.0235272)    );
  // itree = 98
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973243,0.0194831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792283,-0.0101027) , 
2, 0.237456, 1, 0, 0.939388,0.0020635) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704121,-0.0303279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938611,-0.0106524) , 
5, 0.0263606, 1, 0, 0.827597,-0.0725298) , 
4, 0.0244128, 1, 0, 0.919581,-0.0111522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00134402,-0.0188299) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857799,0.017237) , 
7, 0.000535426, 1, 0, 0.173657,-0.0251358) , 
4, 0.0231959, 1, 0, 0.115209,-0.0390933) , 
0, 0.00192442, 1, 0, 0.497535,-0.0258126)    );
  // itree = 99
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818714,-0.0167239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954831,0.00657976) , 
5, 0.00820712, 1, 0, 0.944393,0.00186818) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824581,-0.0353838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.805605,-0.0137963) , 
2, 0.191303, 1, 0, 0.814901,-0.0696577) , 
4, 0.0262382, 1, 0, 0.930139,-0.00600561) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00369575,-0.0179825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.00594e-05,-0.0135777) , 
0, 0.00802582, 1, 0, 0.000916043,-0.0431257) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530164,-0.0146175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850332,0.0193612) , 
4, 0.0260307, 1, 0, 0.740386,0.00670128) , 
7, 0.000534736, 1, 0, 0.109843,-0.035786) , 
0, 0.00192505, 1, 0, 0.496277,-0.0217567)    );
  // itree = 100
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919256,-0.00761319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969979,0.0268602) , 
5, 0.0163239, 1, 0, 0.947605,0.00592757) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.733044,-0.0264857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947441,-0.00592752) , 
5, 0.026269, 1, 0, 0.853616,-0.0518445) , 
4, 0.0244176, 1, 0, 0.931349,-0.00406457) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00291811,-0.0206208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000152186,-0.0135264) , 
0, 0.00802582, 1, 0, 0.000783134,-0.0451683) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645087,-0.00359323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863633,0.026786) , 
7, 0.000741944, 1, 0, 0.754954,0.0177096) , 
7, 0.000535657, 1, 0, 0.114857,-0.0356576) , 
0, 0.00192505, 1, 0, 0.503027,-0.0206379)    );
  // itree = 101
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857103,-0.0116598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960891,0.0118985) , 
5, 0.00976142, 1, 0, 0.946906,0.00443237) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684385,-0.0264621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926783,-0.0234693) , 
5, 0.0257419, 1, 0, 0.838836,-0.0629118) , 
4, 0.0243937, 1, 0, 0.928421,-0.00708716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00138469,-0.0180611) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000725297,-0.0138876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821978,0.0114518) , 
7, 0.000538844, 1, 0, 0.155926,-0.0255932) , 
5, 0.0229823, 1, 0, 0.115064,-0.0362719) , 
0, 0.00192484, 1, 0, 0.503407,-0.0223374)    );
  // itree = 102
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949075,0.00511748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900738,-0.0285931) , 
4, 0.0240943, 1, 0, 0.942802,-0.000406736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720241,-0.0219677) , 
4, 0.0281051, 1, 0, 0.928064,-0.00705031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00208231,-0.0186383) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919477,0.0175098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000235682,-0.0135922) , 
0, 0.00279672, 1, 0, 0.168124,-0.0230095) , 
4, 0.0231963, 1, 0, 0.113843,-0.0345779) , 
0, 0.00192505, 1, 0, 0.498269,-0.0215811)    );
  // itree = 103
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992197,0.029275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998174,0.0877798) , 
5, 0.0248133, 1, 0, 0.993676,0.014375) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900694,-0.000674678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675058,-0.0270269) , 
4, 0.0225633, 1, 0, 0.859422,-0.0248628) , 
0, 9.16609e-05, 1, 0, 0.931064,-0.00392447) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00340032,-0.0199595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000153949,-0.0134805) , 
0, 0.00803139, 1, 0, 0.000906625,-0.0414835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805511,0.0112245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658252,-0.00821966) , 
3, 61.1419, 1, 0, 0.758494,0.00489051) , 
7, 0.000534736, 1, 0, 0.116398,-0.034414) , 
0, 0.00192505, 1, 0, 0.506791,-0.0198032)    );
  // itree = 104
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992708,0.031457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984697,0.0502201) , 
2, 0.26101, 1, 0, 0.991264,0.00924506) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658425,-0.0241627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89704,-0.00328345) , 
0, 0.000790557, 1, 0, 0.856617,-0.0267489) , 
0, 9.16609e-05, 1, 0, 0.927563,-0.00778358) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00207603,-0.0184146) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904895,0.0125593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136906) , 
0, 0.00279663, 1, 0, 0.169066,-0.0228708) , 
4, 0.0231914, 1, 0, 0.112248,-0.034551) , 
0, 0.00192488, 1, 0, 0.49384,-0.022023)    );
  // itree = 105
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987003,0.0490531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95144,-0.0278511) , 
4, 0.0166923, 1, 0, 0.971563,0.00519321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155592,-0.012811) , 
0, 0.00192442, 1, 0, 0.718336,-0.00579032) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587115,-0.0165562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0732605,-0.0192262) , 
2, 0.230187, 1, 0, 0.332807,-0.0623583) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696691,-0.0033768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.04616e-05,-0.0161675) , 
5, 0.0321023, 1, 0, 0.409393,-0.0199234) , 
5, 0.0172953, 1, 0, 0.392594,-0.0292315) , 
2, 0.0952167, 1, 0, 0.502412,-0.0213287)    );
  // itree = 106
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945803,-0.0112204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944135,0.0183966) , 
0, 0.000998376, 1, 0, 0.945164,0.00287882) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692182,-0.0246691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93459,-0.0169366) , 
5, 0.0262311, 1, 0, 0.829647,-0.0601875) , 
4, 0.0244112, 1, 0, 0.924844,-0.00821477) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00123421,-0.0180699) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000560506,-0.014647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784452,0.00225914) , 
7, 0.000534735, 1, 0, 0.156626,-0.0261833) , 
5, 0.0230519, 1, 0, 0.115181,-0.0354888) , 
0, 0.00192488, 1, 0, 0.499664,-0.0225372)    );
  // itree = 107
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954445,0.00680052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856562,-0.0173447) , 
4, 0.0243697, 1, 0, 0.937808,-0.00186903) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00105066,-0.019082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19412,-0.00949322) , 
4, 0.0231973, 1, 0, 0.131768,-0.0308414) , 
0, 0.00192505, 1, 0, 0.536012,-0.0163112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0624064,-0.0187127) , 
3, 151.044, 1, 0, 0.500887,-0.0198656)    );
  // itree = 108
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939887,-0.00877039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960281,0.0345063) , 
0, 0.00155699, 1, 0, 0.943234,-0.00117776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817106,-0.0267648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749252,-0.0164224) , 
2, 0.213922, 1, 0, 0.783549,-0.0686483) , 
4, 0.0262365, 1, 0, 0.926066,-0.00843165) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000748253,-0.0180414) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922993,0.00933899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000483954,-0.0136808) , 
0, 0.00279678, 1, 0, 0.156767,-0.0220298) , 
5, 0.0230459, 1, 0, 0.115625,-0.0301196) , 
0, 0.00192505, 1, 0, 0.499651,-0.0198428)    );
  // itree = 109
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994726,0.0506573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0932809) , 
7, 0.000749431, 1, 0, 0.995385,0.0133342) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94155,0.0182287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477133,-0.0295265) , 
2, 0.0476176, 1, 0, 0.728796,-0.0881757) , 
0, 4.57784e-05, 1, 0, 0.944981,-0.00585807) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635812,-0.0284089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134383) , 
0, 0.00311761, 1, 0, 0.175444,-0.0546279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570838,-0.00404609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0139097,-0.0151042) , 
4, 0.0299675, 1, 0, 0.335421,-0.0198438) , 
4, 0.0145089, 1, 0, 0.304544,-0.0265576) , 
0, 0.000962256, 1, 0, 0.501139,-0.0202035)    );
  // itree = 110
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978024,0.0508536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706943,-0.00602139) , 
5, 0.0135317, 1, 0, 0.869702,0.0136701) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.232365,-0.0339561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885662,0.0152945) , 
8, 0.102947, 1, 0, 0.649252,-0.0223699) , 
4, 0.0172641, 1, 0, 0.762996,-0.00377456) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0997667,-0.0227963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670643,-0.00670681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0160922) , 
5, 0.0315099, 1, 0, 0.440879,-0.0205976) , 
5, 0.0112374, 1, 0, 0.41018,-0.0257448) , 
2, 0.0714264, 1, 0, 0.506507,-0.0197464)    );
  // itree = 111
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.241831,-0.0191155) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809869,-0.00463844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0257841,-0.017429) , 
5, 0.0303735, 1, 0, 0.657059,-0.0125875) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0169337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000461389,-0.0132271) , 
0, 0.0154621, 1, 0, 0.000248924,-0.036723) , 
4, 0.0318906, 1, 0, 0.512184,-0.0179112) , 
5, 0.0057652, 1, 0, 0.498526,-0.0200073)    );
  // itree = 112
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796139,-0.00588667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00139671,-0.0180629) , 
5, 0.0306355, 1, 0, 0.663649,-0.0138826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0159512) , 
4, 0.0318836, 1, 0, 0.533914,-0.0185462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.056183,-0.0204104) , 
3, 151.138, 1, 0, 0.495534,-0.0221099)    );
  // itree = 113
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990001,0.0489339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957727,-0.0226955) , 
4, 0.019188, 1, 0, 0.980875,0.00915907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163444,-0.0131246) , 
0, 0.00192442, 1, 0, 0.74462,-0.00118287) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0995691,-0.0205628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.321377,-0.0132104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829404,-0.00209995) , 
7, 0.000535348, 1, 0, 0.440654,-0.0202131) , 
5, 0.0115471, 1, 0, 0.408599,-0.0244625) , 
2, 0.0714264, 1, 0, 0.499873,-0.0181391)    );
  // itree = 114
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900209,-0.0145984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958712,0.00943598) , 
5, 0.0147409, 1, 0, 0.939345,-0.00224006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597023,-0.0237455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960162,0.0101055) , 
5, 0.0280165, 1, 0, 0.778632,-0.0659962) , 
4, 0.0262382, 1, 0, 0.921829,-0.00918885) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00251435,-0.0182717) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 6.01546e-05,-0.0135705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858682,0.0138243) , 
7, 0.000535427, 1, 0, 0.167927,-0.0158614) , 
4, 0.0231899, 1, 0, 0.114191,-0.0260306) , 
0, 0.00192488, 1, 0, 0.496528,-0.0180577)    );
  // itree = 115
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996026,0.0537286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992496,0.0624638) , 
2, 0.26101, 1, 0, 0.995373,0.0113793) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594141,-0.0251972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891063,-0.00343177) , 
0, 0.000703213, 1, 0, 0.849813,-0.0253049) , 
0, 9.15879e-05, 1, 0, 0.926316,-0.00602458) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00396579,-0.0178724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000356831,-0.0132139) , 
0, 0.0080365, 1, 0, 0.00120769,-0.0297401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692122,-0.00153676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941344,0.0493283) , 
7, 0.000803548, 1, 0, 0.772249,0.0145469) , 
7, 0.000552908, 1, 0, 0.11787,-0.0230393) , 
0, 0.00192488, 1, 0, 0.501393,-0.0149676)    );
  // itree = 116
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9432,3.7411e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812968,-0.0193577) , 
4, 0.0262382, 1, 0, 0.929063,-0.00620898) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000407571,-0.0156156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775719,0.00626631) , 
7, 0.000534737, 1, 0, 0.131635,-0.0236081) , 
0, 0.00192505, 1, 0, 0.534491,-0.0148182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0506619,-0.0184065) , 
3, 151.161, 1, 0, 0.498306,-0.0175755)    );
  // itree = 117
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99264,0.0281169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0917189) , 
7, 0.000749437, 1, 0, 0.993603,0.0090046) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684936,-0.0208384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906586,0.00114487) , 
0, 0.000877605, 1, 0, 0.858958,-0.0192251) , 
0, 9.15976e-05, 1, 0, 0.930163,-0.00429619) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00122717,-0.018722) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935962,0.0160867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000881426,-0.0132634) , 
0, 0.00279678, 1, 0, 0.163998,-0.0142109) , 
5, 0.0230857, 1, 0, 0.119986,-0.0233427) , 
0, 0.00192505, 1, 0, 0.506333,-0.01426)    );
  // itree = 118
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815622,-0.00149963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0228097,-0.0192511) , 
5, 0.0305068, 1, 0, 0.683464,-0.00772484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000183334,-0.0150697) , 
4, 0.0318825, 1, 0, 0.543489,-0.0121025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0557,-0.0168895) , 
3, 151.382, 1, 0, 0.505432,-0.0145006)    );
  // itree = 119
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932449,-0.000789778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00315154,-0.0151153) , 
0, 0.00236392, 1, 0, 0.793798,-0.00556445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0166612,-0.0175673) , 
5, 0.0305068, 1, 0, 0.6498,-0.010324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0173704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133783) , 
4, 0.0443042, 1, 0, 0,-0.0299013) , 
4, 0.0318873, 1, 0, 0.505866,-0.0146605)    );
  // itree = 120
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822556,-0.00207915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.107081,-0.0189397) , 
5, 0.0286011, 1, 0, 0.690389,-0.00814183) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741421,-0.0171436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.2897e-05,-0.0133335) , 
0, 0.00288758, 1, 0, 0.115901,-0.0277327) , 
4, 0.0289923, 1, 0, 0.537092,-0.0133695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0542215,-0.0165779) , 
3, 151.178, 1, 0, 0.499253,-0.0157446)    );
  // itree = 121
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942067,-0.0143653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938975,0.0146521) , 
0, 0.00109905, 1, 0, 0.94102,-0.0017057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.786918,-0.0203461) , 
4, 0.026245, 1, 0, 0.924678,-0.00816393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00158956,-0.0177019) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00133958,-0.0165113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239449,-0.00670563) , 
4, 0.0231744, 1, 0, 0.159029,-0.0175842) , 
5, 0.0230594, 1, 0, 0.116508,-0.0247935) , 
0, 0.00192442, 1, 0, 0.499834,-0.0169059)    );
  // itree = 122
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844712,0.0345791) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580381,-0.02065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905835,0.0307725) , 
8, 0.0490199, 1, 0, 0.773086,-0.00506026) , 
4, 0.00865504, 1, 0, 0.789641,0.0041287) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787187,-0.0109727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.101352,-0.0200302) , 
2, 0.0691034, 1, 0, 0.316755,-0.0446804) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619934,-0.00781696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000301987,-0.0162244) , 
4, 0.0318249, 1, 0, 0.483484,-0.0156268) , 
5, 0.0115387, 1, 0, 0.463175,-0.0191658) , 
2, 0.0237943, 1, 0, 0.500637,-0.0164927)    );
  // itree = 123
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.239914,-0.0196281) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959478,0.0113777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87762,-0.0123833) , 
4, 0.0240129, 1, 0, 0.943665,0.00363561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00164719,-0.0185108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158285,-0.0079662) , 
5, 0.0222046, 1, 0, 0.124223,-0.0192615) , 
0, 0.00192488, 1, 0, 0.522465,-0.00813368) , 
5, 0.0057652, 1, 0, 0.508432,-0.0103744)    );
  // itree = 124
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997459,0.0566547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993512,0.0613989) , 
2, 0.189779, 1, 0, 0.996348,0.0104478) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702198,-0.0200835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905454,0.0025022) , 
0, 0.00105146, 1, 0, 0.845731,-0.0227267) , 
0, 9.15826e-05, 1, 0, 0.924895,-0.00529028) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000880874,-0.018572) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000779314,-0.0139574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817063,0.00822765) , 
7, 0.000535656, 1, 0, 0.160042,-0.0134089) , 
5, 0.0229833, 1, 0, 0.118252,-0.0213272) , 
0, 0.00192484, 1, 0, 0.503473,-0.0136686)    );
  // itree = 125
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9917,0.064491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969492,-0.0069126) , 
6, 0.0290868, 1, 0, 0.980328,0.0113941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169366,-0.0133701) , 
0, 0.00191314, 1, 0, 0.757774,0.00211576) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.590625,-0.0147575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0567425,-0.0189771) , 
2, 0.234753, 1, 0, 0.357075,-0.041178) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0376357,-0.0205164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49849,-0.00336183) , 
4, 0.0174278, 1, 0, 0.417873,-0.0100343) , 
5, 0.0172657, 1, 0, 0.403857,-0.0172141) , 
2, 0.0714264, 1, 0, 0.499604,-0.0119847)    );
  // itree = 126
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972942,0.0395481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70335,-0.00280646) , 
5, 0.0140784, 1, 0, 0.836659,0.00799291) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562543,-0.0250896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515139,-0.00688622) , 
5, 0.0231302, 1, 0, 0.53192,-0.0193458) , 
4, 0.0202395, 1, 0, 0.718056,-0.00264715) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77624,-0.0257068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910602,-0.0161916) , 
5, 0.0180941, 1, 0, 0.877765,-0.033519) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00799803,-0.0136479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673473,-4.44334e-05) , 
7, 0.000179465, 1, 0, 0.24825,-0.0130775) , 
0, 0.000962526, 1, 0, 0.380915,-0.0173854) , 
2, 0.0952352, 1, 0, 0.49295,-0.0124877)    );
  // itree = 127
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864692,-0.0179922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959709,0.0096119) , 
5, 0.00987577, 1, 0, 0.947486,0.00215838) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568886,-0.0213104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93838,-0.0116415) , 
5, 0.0253074, 1, 0, 0.824296,-0.0439753) , 
4, 0.0243584, 1, 0, 0.925136,-0.00621159) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00178402,-0.0185732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000548465,-0.0138151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813771,0.0123357) , 
7, 0.000534736, 1, 0, 0.152992,-0.011732) , 
5, 0.0230229, 1, 0, 0.113813,-0.0198529) , 
0, 0.00192505, 1, 0, 0.499832,-0.0133625)    );
  // itree = 128
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807063,-0.00382769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0122927,-0.0203573) , 
5, 0.0305358, 1, 0, 0.6753,-0.00941842) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000353067,-0.01714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133267) , 
5, 0.0402338, 1, 0, 0.00017771,-0.0249946) , 
4, 0.0318836, 1, 0, 0.534448,-0.0126681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0547304,-0.0185008) , 
3, 151.37, 1, 0, 0.49894,-0.0147351)    );
  // itree = 129
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988346,0.0636778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0889697) , 
6, 0.0197683, 1, 0, 0.995028,0.0202231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536224,-0.0147332) , 
0, 0.000961032, 1, 0, 0.810667,0.00553855) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800571,0.00326619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.111459,-0.0235608) , 
2, 0.069131, 1, 0, 0.327527,-0.0445987) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.276279,-0.0189769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517024,-0.00671145) , 
4, 0.0145011, 1, 0, 0.473876,-0.0129553) , 
5, 0.0115945, 1, 0, 0.45673,-0.0166625) , 
2, 0.0238088, 1, 0, 0.497353,-0.0141144)    );
  // itree = 130
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.734616,-0.0103647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827564,0.00608517) , 
5, 0.017455, 1, 0, 0.789628,-0.0024982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0083576,-0.0196031) , 
5, 0.0305358, 1, 0, 0.644195,-0.00750725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000177606,-0.017911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133106) , 
4, 0.0443183, 1, 0, 8.08069e-05,-0.0240015) , 
4, 0.0318954, 1, 0, 0.506792,-0.0110258)    );
  // itree = 131
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.808685,0.000664226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000855156,-0.0208302) , 
5, 0.0307401, 1, 0, 0.674819,-0.0039332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.71126e-05,-0.0147573) , 
4, 0.0318595, 1, 0, 0.542825,-0.00738556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0820519,-0.0148588) , 
3, 138.544, 1, 0, 0.50261,-0.00936492)    );
  // itree = 132
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811392,-0.000475179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00161713,-0.0209541) , 
5, 0.0306355, 1, 0, 0.680462,-0.0052172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.23497e-05,-0.0158895) , 
4, 0.0318825, 1, 0, 0.541189,-0.00873619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0505322,-0.0181892) , 
3, 151.37, 1, 0, 0.503251,-0.0112758)    );
  // itree = 133
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931659,-0.00137061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00155756,-0.0158949) , 
0, 0.0023714, 1, 0, 0.698443,-0.0073565) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0198664) , 
6, 0.0347943, 1, 0, 0,-0.0194489) , 
5, 0.0331306, 1, 0, 0.540321,-0.0100941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0538236,-0.0144083) , 
3, 151.042, 1, 0, 0.503558,-0.011526)    );
  // itree = 134
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244439,-0.0163716) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81414,0.000750872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0408098,-0.0185128) , 
5, 0.0303007, 1, 0, 0.652289,-0.00424094) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0170452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132879) , 
4, 0.0457027, 1, 0, 0,-0.0222873) , 
4, 0.0318897, 1, 0, 0.515098,-0.00803649) , 
5, 0.00566601, 1, 0, 0.501707,-0.00947105)    );
  // itree = 135
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230418,-0.017902) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848408,-0.00303722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151142,-0.0194186) , 
2, 0.166585, 1, 0, 0.653532,-0.0198854) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752498,0.00108624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000945709,-0.016858) , 
5, 0.03079, 1, 0, 0.469845,-0.00665203) , 
5, 0.0163151, 1, 0, 0.513297,-0.00978245) , 
5, 0.00563792, 1, 0, 0.499714,-0.011409)    );
  // itree = 136
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.263146,-0.0179923) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597423,-0.00677149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899584,0.0124162) , 
7, 0.000563135, 1, 0, 0.663678,-0.0032617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000148828,-0.0131365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.016401) , 
6, 0.0290029, 1, 0, 8.1199e-05,-0.0202359) , 
4, 0.0319047, 1, 0, 0.515433,-0.00705366) , 
5, 0.00578211, 1, 0, 0.503868,-0.00844687)    );
  // itree = 137
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88455,-0.00843787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941111,0.00588904) , 
5, 0.0152539, 1, 0, 0.925178,0.000753164) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0017186,-0.0116246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.52628e-05,-0.0132293) , 
4, 0.020294, 1, 0, 0.000582826,-0.0130095) , 
0, 0.00288503, 1, 0, 0.539956,-0.0049809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0565305,-0.0161485) , 
3, 151.382, 1, 0, 0.503205,-0.00690569)    );
  // itree = 138
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.254073,-0.0171553) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942092,0.000173813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141065,-0.0106863) , 
0, 0.00192505, 1, 0, 0.55252,-0.00723946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0585423,-0.0154164) , 
3, 151.161, 1, 0, 0.513147,-0.00909358) , 
5, 0.00575579, 1, 0, 0.501555,-0.0104086)    );
  // itree = 139
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97409,0.015157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627117,-0.0147626) , 
2, 0.165965, 1, 0, 0.927416,-0.00353186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0112111,-0.0239849) , 
0, 0.00136139, 1, 0, 0.6004,-0.0201556) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.858688,0.0149041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277378,-0.0169342) , 
4, 0.02615, 1, 0, 0.764553,0.00292597) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000775873,-0.0272862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288799,-0.000486757) , 
4, 0.0260888, 1, 0, 0.187965,-0.0140482) , 
5, 0.0270813, 1, 0, 0.453331,-0.00623609) , 
5, 0.0172454, 1, 0, 0.497371,-0.0104044)    );
  // itree = 140
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231028,-0.0170514) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933252,0.00153362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00116516,-0.0140639) , 
0, 0.00268354, 1, 0, 0.653606,-0.00354885) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000173514,-0.0130856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000174924,-0.0182867) , 
6, 0.0260889, 1, 0, 0.000174216,-0.0196926) , 
4, 0.0318966, 1, 0, 0.515687,-0.00695631) , 
5, 0.00586379, 1, 0, 0.50026,-0.00847777)    );
  // itree = 141
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80429,-0.00189212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00190687,-0.0196687) , 
5, 0.0306355, 1, 0, 0.675481,-0.00570904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0163607) , 
4, 0.0318836, 1, 0, 0.538787,-0.00846602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0537739,-0.0167616) , 
3, 151.37, 1, 0, 0.502866,-0.0101352)    );
  // itree = 142
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968206,0.0145032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769823,-0.00624797) , 
2, 0.333323, 1, 0, 0.948466,0.00707825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571507,-0.021189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945743,-0.00629334) , 
5, 0.0278179, 1, 0, 0.771818,-0.0540472) , 
4, 0.0260322, 1, 0, 0.927944,-2.29342e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00218845,-0.0169756) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 6.14303e-05,-0.0137929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854218,0.0114322) , 
7, 0.000534736, 1, 0, 0.170327,-0.00700289) , 
4, 0.0232022, 1, 0, 0.114698,-0.0137889) , 
0, 0.00192484, 1, 0, 0.501406,-0.00724303)    );
  // itree = 143
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247811,-0.0200789) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84878,0.0259127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542289,-0.0177033) , 
4, 0.0203782, 1, 0, 0.726984,-0.00115046) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.331148,-0.0159676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.412295,-0.00683149) , 
5, 0.0163074, 1, 0, 0.400203,-0.0133383) , 
2, 0.0952352, 1, 0, 0.506489,-0.00937421) , 
5, 0.00563445, 1, 0, 0.494989,-0.0108966)    );
  // itree = 144
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937888,0.0660063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725999,-0.0194846) , 
5, 0.0145976, 1, 0, 0.829489,0.00624113) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538305,-0.0155443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488583,-0.00395473) , 
5, 0.0169553, 1, 0, 0.501627,-0.00996887) , 
2, 0.0238042, 1, 0, 0.54077,-0.00803355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0486537,-0.0164611) , 
3, 151.371, 1, 0, 0.502189,-0.00992683)    );
  // itree = 145
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989084,0.0435117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727983,-0.0159027) , 
0, 0.000576488, 1, 0, 0.875289,-0.00113064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0851763,-0.0206793) , 
2, 0.0713501, 1, 0, 0.479297,-0.0275057) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826832,0.00188348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0554533,-0.0162853) , 
5, 0.0301714, 1, 0, 0.643135,-0.00209519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000186975,-0.0160318) , 
4, 0.0318755, 1, 0, 0.503466,-0.0058435) , 
5, 0.011532, 1, 0, 0.499857,-0.00907832)    );
  // itree = 146
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240372,-0.0177762) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615111,0.00873075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.543326,-0.00811145) , 
3, 7.20925, 1, 0, 0.550112,-0.00793032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0531068,-0.016933) , 
3, 151.382, 1, 0, 0.51177,-0.00960698) , 
5, 0.00577507, 1, 0, 0.499144,-0.0108189)    );
  // itree = 147
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954152,0.0208693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790529,-0.00326387) , 
4, 0.0085761, 1, 0, 0.86284,0.00710847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0905263,-0.0211752) , 
2, 0.0713414, 1, 0, 0.482565,-0.020222) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874842,0.00707447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150778,-0.0184667) , 
5, 0.0253526, 1, 0, 0.651703,-0.00147807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.212989,-0.0193251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.289977,-0.00144472) , 
5, 0.0271836, 1, 0, 0.26976,-0.0140442) , 
4, 0.0260941, 1, 0, 0.50659,-0.00625235) , 
5, 0.0115123, 1, 0, 0.503105,-0.00827856)    );
  // itree = 148
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233591,-0.0182471) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930919,-0.000465858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00263749,-0.0151511) , 
0, 0.00236544, 1, 0, 0.695767,-0.00518375) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000108987,-0.0130889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0229442) , 
6, 0.0405909, 1, 0, 6.79108e-05,-0.0150796) , 
5, 0.0332116, 1, 0, 0.509969,-0.00782662) , 
5, 0.00577507, 1, 0, 0.495838,-0.00910233)    );
  // itree = 149
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951907,-0.00330692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93661,0.0159584) , 
0, 0.00118943, 1, 0, 0.946957,0.00538593) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824923,-0.0301765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864968,0.000187509) , 
2, 0.119876, 1, 0, 0.851157,-0.0247746) , 
4, 0.0243791, 1, 0, 0.930415,0.000178189) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00774075,-0.0182596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000115505,-0.0130841) , 
0, 0.00802056, 1, 0, 0.00193483,-0.0175837) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.433906,-0.00169308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355024,0.0159724) , 
2, 0.309146, 1, 0, 0.408729,0.00529228) , 
6, 0.0492894, 1, 0, 0.11335,-0.0113183) , 
0, 0.00192405, 1, 0, 0.494471,-0.00595576)    );
  // itree = 150
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842667,0.0374187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489678,-0.00706789) , 
4, 0.0086784, 1, 0, 0.612655,0.00649709) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674351,-0.0279522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00051998,-0.0129909) , 
0, 0.00192442, 1, 0, 0.0504232,-0.0185236) , 
2, 0.0476083, 1, 0, 0.158711,-0.0137045) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993418,0.0442425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596375,-0.0274412) , 
0, 5.26355e-05, 1, 0, 0.939754,-0.0111905) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800643,0.0133433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443585,-0.0106071) , 
5, 0.02793, 1, 0, 0.718861,0.0118777) , 
0, 0.00110545, 1, 0, 0.823036,0.00099849) , 
7, 0.000144606, 1, 0, 0.49876,-0.00617848)    );
  // itree = 151
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260525,-0.0220674) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666898,-0.00381416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0154511) , 
4, 0.0318785, 1, 0, 0.532433,-0.00652089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.233305,-0.0159344) , 
2, 0.452282, 1, 0, 0.513815,-0.00820659) , 
5, 0.00575579, 1, 0, 0.501917,-0.0100059)    );
  // itree = 152
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844762,0.057624) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884661,0.00170186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400794,-0.0180009) , 
4, 0.0234662, 1, 0, 0.750562,-0.00421365) , 
4, 0.0087578, 1, 0, 0.766995,0.00194548) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888589,-0.00333538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0109102,-0.0197244) , 
0, 0.00136809, 1, 0, 0.44193,-0.020392) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0286726,-0.0237602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.505181,-0.00252192) , 
4, 0.0173966, 1, 0, 0.426838,-0.00714939) , 
5, 0.0173033, 1, 0, 0.430577,-0.01043) , 
2, 0.0476045, 1, 0, 0.498482,-0.00793207)    );
  // itree = 153
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830564,0.0130511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125957,-0.0131914) , 
2, 0.142864, 1, 0, 0.59323,-0.00429323) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413659,-0.0308463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907333,0.00445278) , 
5, 0.0160729, 1, 0, 0.632291,-0.0497461) , 
7, 0.000235557, 1, 0, 0.602219,-0.014753) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929941,-0.00974799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56733,0.0116616) , 
0, 0.00156972, 1, 0, 0.743944,0.00302114) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00020202,-0.0129257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0220553) , 
6, 0.040602, 1, 0, 0.000125987,-0.0132008) , 
5, 0.0319856, 1, 0, 0.452982,-0.00332446) , 
5, 0.0172311, 1, 0, 0.498078,-0.0067779)    );
  // itree = 154
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.258926,-0.0172697) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92792,0.00142671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000469052,-0.0150076) , 
0, 0.00267622, 1, 0, 0.654365,-0.00270375) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0188553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132153) , 
4, 0.0456836, 1, 0, 0,-0.0165811) , 
4, 0.0318825, 1, 0, 0.519562,-0.00556257) , 
5, 0.00575579, 1, 0, 0.507807,-0.00662298)    );
  // itree = 155
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87663,0.00952774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106548,-0.0222509) , 
2, 0.0713327, 1, 0, 0.517894,-0.0209589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7521,-0.000900354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.02473e-05,-0.0182975) , 
5, 0.0317418, 1, 0, 0.545925,-0.00473401) , 
5, 0.0113096, 1, 0, 0.541884,-0.00707293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0577342,-0.0159248) , 
3, 151.138, 1, 0, 0.504981,-0.00878495)    );
  // itree = 156
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962734,0.0864288) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748205,-0.0285419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729846,0.00455614) , 
2, 0.0113471, 1, 0, 0.73824,-0.00689567) , 
5, 0.0101094, 1, 0, 0.798601,0.00306796) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.137228,-0.0209939) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65406,8.15841e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.380704,-0.00968282) , 
4, 0.0211208, 1, 0, 0.482041,-0.0072799) , 
4, 0.00870241, 1, 0, 0.4564,-0.00921995) , 
2, 0.0238088, 1, 0, 0.495178,-0.00782749)    );
  // itree = 157
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945308,-0.0146702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961724,0.0366875) , 
0, 0.000595119, 1, 0, 0.950989,0.00513059) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0168763,-0.0230183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00016828,-0.0129461) , 
0, 0.00921671, 1, 0, 0.0039825,-0.0127564) , 
0, 0.000962527, 1, 0, 0.172805,-0.00956768) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997778,0.0707327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527907,-0.0283826) , 
0, 5.26384e-05, 1, 0, 0.932553,-0.0132061) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921031,0.00918018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.324794,-0.00536387) , 
0, 0.00210602, 1, 0, 0.71059,0.00585323) , 
0, 0.00110545, 1, 0, 0.814209,-0.00304422) , 
7, 0.000151443, 1, 0, 0.502464,-0.00621485)    );
  // itree = 158
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97127,0.0685802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874226,0.0288442) , 
6, 0.0192651, 1, 0, 0.924936,0.0161829) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.414683,-0.0221195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955686,0.0737547) , 
8, 0.0904018, 1, 0, 0.688204,-0.00625522) , 
4, 0.0143583, 1, 0, 0.798379,0.00418742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.127421,-0.020056) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62991,-0.000840145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452417,-0.00805312) , 
4, 0.0186521, 1, 0, 0.501375,-0.00721328) , 
4, 0.00870463, 1, 0, 0.472048,-0.00939252) , 
2, 0.0238042, 1, 0, 0.509868,-0.00781866)    );
  // itree = 159
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864736,0.0128656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555864,-0.0122322) , 
4, 0.020267, 1, 0, 0.746881,-0.000397097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896343,-0.0190035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279153,-0.00362479) , 
0, 0.000962527, 1, 0, 0.418634,-0.00961927) , 
2, 0.0952352, 1, 0, 0.530306,-0.00648183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.055579,-0.0160617) , 
3, 151.177, 1, 0, 0.49482,-0.00797642)    );
  // itree = 160
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.773115,-0.0116605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964384,0.0142424) , 
7, 0.000332365, 1, 0, 0.834589,-0.00766519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0243638) , 
4, 0.0231885, 1, 0, 0.65767,-0.0156617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0755925,-0.0208653) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770818,0.0122705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000321311,-0.0160336) , 
4, 0.0303952, 1, 0, 0.431224,0.00055898) , 
4, 0.0232276, 1, 0, 0.335592,-0.00548267) , 
5, 0.0229748, 1, 0, 0.497903,-0.0106124)    );
  // itree = 161
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794264,-0.00868278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979108,0.0318421) , 
6, 0.039412, 1, 0, 0.837278,-0.00396742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000165871,-0.022804) , 
4, 0.023068, 1, 0, 0.664693,-0.0121231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0581141,-0.0232761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79487,0.0228484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000107432,-0.015704) , 
4, 0.0303743, 1, 0, 0.439153,0.00450025) , 
4, 0.0231973, 1, 0, 0.33678,-0.00411578) , 
5, 0.0230462, 1, 0, 0.503025,-0.00817531)    );
  // itree = 162
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857565,0.0211389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129485,-0.0217146) , 
2, 0.0238042, 1, 0, 0.340884,-0.0197924) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.720974,0.00072605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0168931) , 
4, 0.0310754, 1, 0, 0.552411,-0.00283843) , 
4, 0.00872684, 1, 0, 0.532131,-0.00446388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0554051,-0.0153968) , 
3, 151.383, 1, 0, 0.493196,-0.00612307)    );
  // itree = 163
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875841,0.0214468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741267,-0.00888363) , 
3, 62.9341, 1, 0, 0.838301,0.00378698) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.699985,-0.0248655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565083,-0.00613375) , 
5, 0.0222339, 1, 0, 0.621134,-0.0103456) , 
4, 0.01742, 1, 0, 0.73021,-0.00324726) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.228563,-0.0250365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115141,-0.0128628) , 
3, 50.1726, 1, 0, 0.165907,-0.0312449) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53736,0.00783483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.405652,-0.00690653) , 
3, 12.6158, 1, 0, 0.42379,-0.00625875) , 
4, 0.0144992, 1, 0, 0.382135,-0.0102947) , 
2, 0.0952352, 1, 0, 0.495333,-0.00800277)    );
  // itree = 164
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.249496,-0.0157703) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815852,0.00298357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.026575,-0.0204045) , 
5, 0.0303906, 1, 0, 0.659899,-0.000528524) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0178282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131883) , 
5, 0.0387093, 1, 0, 0,-0.0126958) , 
4, 0.0319182, 1, 0, 0.509307,-0.00330514) , 
5, 0.00578211, 1, 0, 0.496794,-0.00428051)    );
  // itree = 165
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741629,-0.0135569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867018,0.00377326) , 
4, 0.0131818, 1, 0, 0.825173,-0.00386023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0237206) , 
4, 0.0231528, 1, 0, 0.655745,-0.0105038) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.43102,-0.014635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8018,0.0178753) , 
4, 0.0231858, 1, 0, 0.719647,0.00910829) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000202427,-0.0128036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.020198) , 
6, 0.0406016, 1, 0, 0.000128239,-0.0102716) , 
5, 0.0314977, 1, 0, 0.347854,-0.000905768) , 
5, 0.0224259, 1, 0, 0.49629,-0.00553302)    );
  // itree = 166
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953464,-0.00328044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945923,0.025482) , 
0, 0.000849997, 1, 0, 0.950578,0.0106144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00312363,-0.0199703) , 
0, 0.00162704, 1, 0, 0.614381,-0.0021934) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792592,-0.0349071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.269374,-0.0081266) , 
0, 0.00142356, 1, 0, 0.389743,-0.0270547) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793458,0.00519148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.50896e-05,-0.0193279) , 
5, 0.0322762, 1, 0, 0.426396,-0.00258365) , 
5, 0.0229852, 1, 0, 0.414759,-0.010353) , 
4, 0.0202992, 1, 0, 0.499088,-0.00690602)    );
  // itree = 167
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98834,0.0665276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737892,0.00621931) , 
5, 0.0136626, 1, 0, 0.897216,0.0120876) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.32139,-0.0332816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89755,0.0141891) , 
8, 0.115292, 1, 0, 0.631523,-0.0127573) , 
4, 0.0173457, 1, 0, 0.775494,0.000705463) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98149,0.00959271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883668,-0.0189958) , 
2, 0.0906343, 1, 0, 0.908225,-0.0208538) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.431834,-0.0204457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255459,-0.00272717) , 
2, 0.090675, 1, 0, 0.274946,-0.00534443) , 
0, 0.000962256, 1, 0, 0.431533,-0.00917935) , 
2, 0.0476016, 1, 0, 0.500356,-0.00720152)    );
  // itree = 168
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775713,0.00302535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.262807,-0.0204105) , 
4, 0.0203168, 1, 0, 0.588071,-0.00470915) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7024,-0.0116849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00104839,-0.0110718) , 
0, 0.00288758, 1, 0, 0.169026,-0.0138111) , 
2, 0.214279, 1, 0, 0.419173,-0.00837772) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908283,-0.0405086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894982,0.000552387) , 
4, 0.0258718, 1, 0, 0.900705,-0.0225167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828617,0.0091608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74799,0.0297657) , 
2, 0.214059, 1, 0, 0.790765,0.0296081) , 
0, 0.0017665, 1, 0, 0.841614,0.00549933) , 
7, 0.000534735, 1, 0, 0.50136,-0.00567792)    );
  // itree = 169
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793858,-0.00713035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981278,0.0358263) , 
7, 0.000381954, 1, 0, 0.84009,-0.00202258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000165871,-0.0244982) , 
4, 0.0232428, 1, 0, 0.665645,-0.0113228) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0621371,-0.0178506) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781897,0.0133047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000111653,-0.01551) , 
4, 0.0303727, 1, 0, 0.444715,0.00184836) , 
4, 0.0231963, 1, 0, 0.336644,-0.00301922) , 
5, 0.0230199, 1, 0, 0.501388,-0.00717717)    );
  // itree = 170
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777087,-0.00450156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963723,0.0258472) , 
7, 0.000588764, 1, 0, 0.809073,-0.000197441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.207043,-0.020063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000161255,-0.0128064) , 
0, 0.0087534, 1, 0, 0.0618884,-0.013458) , 
5, 0.0288008, 1, 0, 0.651608,-0.00299202) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.017349) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750462,0.0410191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000120495,-0.016209) , 
4, 0.0305122, 1, 0, 0.160789,-0.000796634) , 
5, 0.0287219, 1, 0, 0.102403,-0.00960877) , 
4, 0.0289936, 1, 0, 0.495994,-0.00486684)    );
  // itree = 171
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954798,-0.00811441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936353,0.0174825) , 
0, 0.000824149, 1, 0, 0.946781,0.00677443) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.806661,-0.0179748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97094,0.00712755) , 
5, 0.0267889, 1, 0, 0.878316,-0.0219114) , 
4, 0.0239311, 1, 0, 0.933655,0.00127455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00194242,-0.01817) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911914,0.0216576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140031) , 
0, 0.00279678, 1, 0, 0.175119,6.253e-05) , 
4, 0.023173, 1, 0, 0.116293,-0.0067526) , 
0, 0.00192505, 1, 0, 0.503734,-0.00294762)    );
  // itree = 172
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955602,-0.00875981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922611,0.0130967) , 
0, 0.000824378, 1, 0, 0.941722,0.00460741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549435,-0.0146029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000412281,-0.0123597) , 
0, 0.00279667, 1, 0, 0.0367458,-0.0101545) , 
0, 0.00192484, 1, 0, 0.497651,-0.00263626) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780897,-0.0248481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87111,-0.0158104) , 
7, 0.000792878, 1, 0, 0.826449,-0.0408283) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549799,0.0180549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391453,-0.00709153) , 
3, 25.1873, 1, 0, 0.434384,-0.00186562) , 
0, 0.00191569, 1, 0, 0.565483,-0.014894) , 
6, 0.0521838, 1, 0, 0.508582,-0.0046115)    );
  // itree = 173
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.482756,-0.0165033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923971,0.0252363) , 
7, 5.2463e-05, 1, 0, 0.820433,0.00401876) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945622,-0.0250289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.193147,-0.00547224) , 
0, 0.00191994, 1, 0, 0.603001,-0.0117804) , 
4, 0.0173192, 1, 0, 0.706616,-0.00425151) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688466,-0.022888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924969,-0.0103241) , 
5, 0.0184583, 1, 0, 0.866263,-0.0302957) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0553174,-0.0147754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279193,-0.00292006) , 
4, 0.0144974, 1, 0, 0.240462,-0.00592928) , 
0, 0.000962418, 1, 0, 0.369436,-0.0109511) , 
2, 0.119044, 1, 0, 0.499613,-0.00836453)    );
  // itree = 174
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62404,-0.0246404) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977992,0.0223684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.200351,-0.020042) , 
4, 0.0105594, 1, 0, 0.410684,-0.0099002) , 
6, 0.0172099, 1, 0, 0.481834,-0.0214986) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969068,-0.0113567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818434,-0.0138568) , 
8, 0.251745, 1, 0, 0.937617,-0.0107351) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935104,0.0106832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144503,-0.00807326) , 
0, 0.0018856, 1, 0, 0.347732,-0.00134805) , 
0, 0.000962526, 1, 0, 0.512096,-0.00396361) , 
5, 0.011532, 1, 0, 0.507732,-0.00649223)    );
  // itree = 175
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.265365,-0.019779) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841597,0.0231182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628235,-0.0140405) , 
4, 0.0172585, 1, 0, 0.730579,-0.00136539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.551984,-0.0101898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329707,-0.00375505) , 
5, 0.0222624, 1, 0, 0.410204,-0.00876807) , 
2, 0.0952506, 1, 0, 0.516678,-0.00630785) , 
5, 0.00577507, 1, 0, 0.50498,-0.0072501)    );
  // itree = 176
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.238136,-0.0160254) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828951,0.00160974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.083179,-0.0157329) , 
5, 0.0286373, 1, 0, 0.664308,-0.00150715) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721376,-0.0104645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131743) , 
0, 0.00288733, 1, 0, 0.108133,-0.00943453) , 
4, 0.0289936, 1, 0, 0.511402,-0.00368658) , 
5, 0.00579096, 1, 0, 0.498331,-0.00474767)    );
  // itree = 177
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953479,0.0128455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815829,-0.0207348) , 
4, 0.0159844, 1, 0, 0.928122,-0.00115765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0123974,-0.027695) , 
0, 0.00136809, 1, 0, 0.610519,-0.0135985) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0429121,-0.0217024) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792115,0.00381777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0170775) , 
5, 0.0320728, 1, 0, 0.535204,-0.000119956) , 
4, 0.0173966, 1, 0, 0.45601,-0.00314145) , 
5, 0.0172768, 1, 0, 0.503139,-0.00633113)    );
  // itree = 178
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.477194,-0.0136184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737695,0.00358606) , 
4, 0.0132566, 1, 0, 0.638462,-0.00308168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0246484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000273643,-0.0124217) , 
4, 0.035756, 1, 0, 0.000177257,-0.0121778) , 
4, 0.0231914, 1, 0, 0.409874,-0.00633925) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.51443,-0.0133918) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572978,-0.0175685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964157,0.0287228) , 
4, 0.0244585, 1, 0, 0.889,0.0113572) , 
5, 0.0237934, 1, 0, 0.834082,0.00329949) , 
7, 0.000534736, 1, 0, 0.491635,-0.00448151)    );
  // itree = 179
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995932,0.0362984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995567,0.0662413) , 
2, 0.238037, 1, 0, 0.995856,0.00776721) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943807,-0.0111155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43372,-0.0251873) , 
2, 0.0475609, 1, 0, 0.704946,-0.0912483) , 
0, 4.58225e-05, 1, 0, 0.938319,-0.0118164) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716203,-0.0159492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00233775,-0.00962482) , 
0, 0.0024176, 1, 0, 0.167398,-0.0164015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571818,0.00340534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0118285,-0.0141215) , 
4, 0.0299795, 1, 0, 0.331492,-0.00146338) , 
4, 0.0145127, 1, 0, 0.299923,-0.00433728) , 
0, 0.000962442, 1, 0, 0.496185,-0.0066366)    );
  // itree = 180
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986713,0.0416352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840312,-0.0132107) , 
8, 0.192479, 1, 0, 0.948231,0.00551447) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000822472,-0.0153133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818465,0.0143348) , 
7, 0.000543648, 1, 0, 0.168852,-0.00571025) , 
0, 0.00191471, 1, 0, 0.600317,0.000503768) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787279,0.0001549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369968,-0.0198547) , 
4, 0.014552, 1, 0, 0.574368,-0.01201) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0402062,-0.0218531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490519,-0.00145556) , 
4, 0.0174785, 1, 0, 0.413853,-0.00369289) , 
5, 0.017289, 1, 0, 0.460858,-0.00612848) , 
3, 25.2289, 1, 0, 0.502041,-0.00416995)    );
  // itree = 181
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.250883,-0.0182327) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967224,0.0206367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00362246,-0.0206038) , 
0, 0.00162981, 1, 0, 0.624282,0.00233396) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.371918,-0.0223799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45843,0.000435561) , 
5, 0.0221503, 1, 0, 0.43767,-0.00750268) , 
4, 0.0203018, 1, 0, 0.517286,-0.00330598) , 
5, 0.00575579, 1, 0, 0.504198,-0.00419973)    );
  // itree = 182
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784469,-0.00806644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977284,0.0227894) , 
7, 0.00037908, 1, 0, 0.832818,-0.00370997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0232048) , 
4, 0.0231956, 1, 0, 0.65709,-0.0102716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0496289,-0.0222072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810074,0.0152266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0190922) , 
5, 0.032408, 1, 0, 0.442636,0.00326433) , 
4, 0.023207, 1, 0, 0.328711,-0.00275867) , 
5, 0.0230624, 1, 0, 0.49466,-0.00655538)    );
  // itree = 183
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.280944,-0.0157809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65207,-0.000544272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484067,-0.00784943) , 
4, 0.0203025, 1, 0, 0.558159,-0.00413746) , 
5, 0.00561856, 1, 0, 0.545711,-0.00479776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0559166,-0.015577) , 
3, 151.382, 1, 0, 0.5068,-0.00585609)    );
  // itree = 184
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980625,0.0395696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807316,-0.0250968) , 
4, 0.00866447, 1, 0, 0.879297,0.000921764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0887895,-0.018065) , 
2, 0.0713501, 1, 0, 0.470619,-0.0145469) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952155,-0.0226988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893796,0.00759252) , 
2, 0.309155, 1, 0, 0.941868,-0.00957096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94071,0.0175201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.14356,-0.00651085) , 
0, 0.00188111, 1, 0, 0.343262,0.00184932) , 
0, 0.000962526, 1, 0, 0.508613,-0.00130526) , 
5, 0.0115471, 1, 0, 0.502953,-0.00327795)    );
  // itree = 185
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992343,0.0319205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632779,-0.0197494) , 
0, 0.000789115, 1, 0, 0.824207,-0.00480939) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905676,-0.0366534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21976,-0.00805035) , 
0, 0.00192442, 1, 0, 0.524813,-0.0215187) , 
4, 0.0202344, 1, 0, 0.700462,-0.0117157) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820025,-0.0184482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941468,0.00467577) , 
5, 0.0216767, 1, 0, 0.887343,-0.0161299) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876611,0.0121005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112677,-0.00552096) , 
0, 0.00188842, 1, 0, 0.245626,0.00132162) , 
0, 0.000962442, 1, 0, 0.377631,-0.00226826) , 
2, 0.119044, 1, 0, 0.501204,-0.00588456)    );
  // itree = 186
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69705,-0.00550951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935061,0.0102745) , 
7, 0.000395278, 1, 0, 0.800212,0.00127758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000909361,-0.0271609) , 
5, 0.0306355, 1, 0, 0.643543,-0.00196804) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000131658,-0.0127794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0184004) , 
6, 0.0318831, 1, 0, 7.5767e-05,-0.00835595) , 
4, 0.0318836, 1, 0, 0.497321,-0.00341963)    );
  // itree = 187
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243323,-0.0213358) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964307,0.0192037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00211913,-0.0258303) , 
0, 0.00159176, 1, 0, 0.57908,0.000323115) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576288,-0.0148797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.427108,-0.00378932) , 
5, 0.0222183, 1, 0, 0.476215,-0.0081386) , 
4, 0.0173994, 1, 0, 0.509028,-0.00543935) , 
5, 0.00577224, 1, 0, 0.495686,-0.00628437)    );
  // itree = 188
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82302,-0.00777119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898849,0.0134271) , 
5, 0.018684, 1, 0, 0.847901,-0.00269887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0233791) , 
4, 0.0231792, 1, 0, 0.669085,-0.00966863) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0616887,-0.020164) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817734,0.0160299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.022681) , 
5, 0.032408, 1, 0, 0.440223,0.00297701) , 
4, 0.0232232, 1, 0, 0.334857,-0.00284843) , 
5, 0.0230594, 1, 0, 0.503576,-0.00629127)    );
  // itree = 189
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919463,-0.0012255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97511,0.0368903) , 
7, 0.000138847, 1, 0, 0.952108,0.0138232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00340262,-0.023424) , 
0, 0.00157823, 1, 0, 0.579631,0.00019837) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93352,-0.0232435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.178375,-0.0088993) , 
0, 0.00192343, 1, 0, 0.535539,-0.0125239) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0172042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587972,0.00536009) , 
6, 0.0347623, 1, 0, 0.355304,0.000381101) , 
2, 0.237819, 1, 0, 0.456119,-0.00683731) , 
4, 0.0173939, 1, 0, 0.495734,-0.00458072)    );
  // itree = 190
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979443,-0.100448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996726,0.0567213) , 
5, 0.0117881, 1, 0, 0.994018,0.00503178) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929177,0.0244891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456445,-0.0242919) , 
4, 0.0107751, 1, 0, 0.714569,-0.0586308) , 
0, 4.57784e-05, 1, 0, 0.938148,-0.00769619) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0181995,-0.0151592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131549) , 
0, 0.00921221, 1, 0, 0.00405015,-0.00626888) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790989,0.00732197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571728,-0.00735673) , 
5, 0.0257206, 1, 0, 0.722454,0.0036629) , 
7, 0.000151442, 1, 0, 0.305007,-0.00210822) , 
0, 0.000962442, 1, 0, 0.5005,-0.0038336)    );
  // itree = 191
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230987,-0.017631) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969047,0.0184245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00439064,-0.0205863) , 
0, 0.00160644, 1, 0, 0.616289,0.00125933) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.375757,-0.0190925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454335,-0.00109413) , 
5, 0.0222479, 1, 0, 0.434666,-0.00783501) , 
4, 0.020294, 1, 0, 0.512312,-0.00394706) , 
5, 0.00577507, 1, 0, 0.498425,-0.00490999)    );
  // itree = 192
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601889,-0.0139293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868718,0.00975562) , 
5, 0.00787775, 1, 0, 0.842748,0.0048673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0113214,-0.0216063) , 
5, 0.0232932, 1, 0, 0.643056,0.000407693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000169798,-0.0257878) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782811,0.0119602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0173212) , 
4, 0.0303709, 1, 0, 0.432779,0.0011516) , 
5, 0.0229803, 1, 0, 0.338832,-0.00560684) , 
4, 0.0231906, 1, 0, 0.500835,-0.00240404)    );
  // itree = 193
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810631,-0.000739182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.076849,-0.0165032) , 
2, 0.190433, 1, 0, 0.605305,-0.00872092) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613605,0.00445678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.53907e-05,-0.0159177) , 
4, 0.0289995, 1, 0, 0.439826,-0.000425897) , 
5, 0.0164466, 1, 0, 0.48895,-0.00288834) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823792,-0.0192301) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.462471,0.0105382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370782,-0.00906464) , 
3, 37.7756, 1, 0, 0.411658,-0.0011238) , 
0, 0.0019131, 1, 0, 0.546856,-0.0121385) , 
6, 0.0550842, 1, 0, 0.495255,-0.00389552)    );
  // itree = 194
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990761,0.0275545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497774,-0.0103639) , 
0, 0.000962212, 1, 0, 0.761222,5.00251e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.114821,-0.0158866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.469879,-0.0046242) , 
4, 0.0116607, 1, 0, 0.42873,-0.00615983) , 
2, 0.0645926, 1, 0, 0.519141,-0.00447126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.217093,-0.0163513) , 
2, 0.452243, 1, 0, 0.501329,-0.00575714)    );
  // itree = 195
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.235825,0.0117783) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85754,0.00533096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.101333,-0.0191198) , 
2, 0.0714111, 1, 0, 0.465177,-0.0134712) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935894,-0.0148983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355364,-0.00228911) , 
0, 0.000962418, 1, 0, 0.520675,-0.00475755) , 
5, 0.011519, 1, 0, 0.513297,-0.00591603) , 
4, 0.00580638, 1, 0, 0.498071,-0.00514786)    );
  // itree = 196
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949929,0.00944379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835146,-0.0258018) , 
4, 0.0162803, 1, 0, 0.931276,-0.00241541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.021136,-0.0235787) , 
0, 0.00135403, 1, 0, 0.617106,-0.0114487) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0192131,-0.0275996) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775005,0.00589629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0553205,-0.0128866) , 
4, 0.0297709, 1, 0, 0.533918,0.000518018) , 
4, 0.0173687, 1, 0, 0.456188,-0.0027786) , 
5, 0.0173558, 1, 0, 0.505,-0.00540853)    );
  // itree = 197
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764429,-0.007242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972834,0.027668) , 
7, 0.00028269, 1, 0, 0.825056,-0.000700048) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735311,-0.0304562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.22831,-0.00512599) , 
0, 0.00142497, 1, 0, 0.337078,-0.0214807) , 
4, 0.020283, 1, 0, 0.653115,-0.00802218) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.416947,-0.0139915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828297,0.014877) , 
4, 0.0231535, 1, 0, 0.73877,0.00616822) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0241453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000104525,-0.0127454) , 
5, 0.0479145, 1, 0, 6.42057e-05,-0.00738395) , 
5, 0.0314873, 1, 0, 0.353421,-0.000901338) , 
5, 0.0224199, 1, 0, 0.499873,-0.0043811)    );
  // itree = 198
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849367,-0.000576284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1482,-0.0259653) , 
4, 0.0202892, 1, 0, 0.667846,-0.00906444) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000994404,-0.0224188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437121,0.0017275) , 
4, 0.0203291, 1, 0, 0.340972,-0.00192645) , 
5, 0.0209785, 1, 0, 0.493973,-0.00526755) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649581,-0.00355839) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506206,-0.0298374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502192,-0.00554665) , 
4, 0.0289953, 1, 0, 0.504328,-0.0269458) , 
2, 0.166504, 1, 0, 0.562839,-0.0172796) , 
6, 0.0550822, 1, 0, 0.501487,-0.00657827)    );
  // itree = 199
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992264,0.010186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0906584) , 
3, 87.4425, 1, 0, 0.993132,0.00346839) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946624,-0.00620514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.402629,-0.0234285) , 
2, 0.0476176, 1, 0, 0.684599,-0.0795087) , 
0, 4.57697e-05, 1, 0, 0.931773,-0.0130336) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.733347,-0.0165989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00205692,-0.00861245) , 
0, 0.00238058, 1, 0, 0.17026,-0.0140038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582509,0.00596661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0111265,-0.0153783) , 
4, 0.0299477, 1, 0, 0.325776,0.000482646) , 
4, 0.0145036, 1, 0, 0.29674,-0.00222205) , 
0, 0.000962256, 1, 0, 0.492598,-0.00555658)    );
  // itree = 200
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938667,0.00359287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00662276,-0.0301639) , 
0, 0.00135403, 1, 0, 0.603685,-0.00923043) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543978,-0.0121802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.344137,0.00531253) , 
2, 0.237864, 1, 0, 0.459888,-0.00224312) , 
5, 0.0165586, 1, 0, 0.501535,-0.00426682) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621038,-0.00235461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565347,0.0212941) , 
2, 0.214268, 1, 0, 0.593243,0.00735399) , 
6, 0.0579816, 1, 0, 0.506669,-0.00361632)    );
  // itree = 201
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960132,-0.00261547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947494,0.0302939) , 
0, 0.000664256, 1, 0, 0.954677,0.0126361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00379909,-0.0194131) , 
0, 0.00155267, 1, 0, 0.581804,0.00148546) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917312,-0.0157939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00010028,-0.0127844) , 
0, 0.00288664, 1, 0, 0.532697,-0.0115709) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624356,0.00972804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0331464,-0.0136497) , 
4, 0.0298378, 1, 0, 0.355556,0.00291167) , 
2, 0.261705, 1, 0, 0.46327,-0.00589469) , 
4, 0.01742, 1, 0, 0.501745,-0.00349917)    );
  // itree = 202
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987204,-0.0189285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948624,0.00980628) , 
2, 0.19043, 1, 0, 0.976351,-0.000366992) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655644,-0.0200388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848459,-0.0066059) , 
0, 0.00077244, 1, 0, 0.829692,-0.0194261) , 
0, 0.00027479, 1, 0, 0.898749,-0.0104518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00178021,-0.00525755) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131782) , 
5, 0.0230857, 1, 0, 0,-0.00364449) , 
4, 0.0203044, 1, 0, 0.000571999,-0.00285278) , 
0, 0.00288758, 1, 0, 0.495546,-0.00704049)    );
  // itree = 203
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937088,0.0754199) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.740494,-0.0554172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768654,0.00312619) , 
2, 0.00908697, 1, 0, 0.758219,-0.00480233) , 
5, 0.0101089, 1, 0, 0.806642,0.00214831) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473644,-0.015969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.235612,-0.0212566) , 
6, 0.0202086, 1, 0, 0.331224,-0.0194817) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920335,-0.0122215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316657,-0.00329526) , 
0, 0.000962442, 1, 0, 0.474119,-0.00523548) , 
5, 0.0114935, 1, 0, 0.457614,-0.00688095) , 
2, 0.0238042, 1, 0, 0.4973,-0.0058543)    );
  // itree = 204
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87644,0.0216597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.661604,-0.00860208) , 
4, 0.0173932, 1, 0, 0.769361,0.000787829) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887237,-0.0168536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297081,-0.00381059) , 
0, 0.000962026, 1, 0, 0.43933,-0.00818794) , 
2, 0.0952148, 1, 0, 0.55466,-0.00505135) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830625,0.0181929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0367121,-0.00661336) , 
0, 0.00192505, 1, 0, 0.202227,0.00413005) , 
3, 100.922, 1, 0, 0.493586,-0.0034603)    );
  // itree = 205
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953897,0.00780595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123495,-0.0093784) , 
0, 0.0016611, 1, 0, 0.647292,0.00130585) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0217448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000186396,-0.0122832) , 
4, 0.0357549, 1, 0, 0.000121466,-0.00748074) , 
4, 0.0231959, 1, 0, 0.418616,-0.00179886) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78749,-0.0179992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95149,-0.00139357) , 
5, 0.0253847, 1, 0, 0.891903,-0.0109638) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.714809,0.00542426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914794,0.0534109) , 
1, 1.18649, 1, 0, 0.801619,0.0240157) , 
0, 0.00163449, 1, 0, 0.843647,0.00773237) , 
7, 0.000534737, 1, 0, 0.500274,3.22956e-05)    );
  // itree = 206
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959084,0.011971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834217,-0.0267443) , 
4, 0.016255, 1, 0, 0.940425,-0.00131738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00958859,-0.0270047) , 
0, 0.00136809, 1, 0, 0.611398,-0.0100992) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0540697,-0.0227643) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61627,0.00409204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333354,-0.00943346) , 
3, 75.6946, 1, 0, 0.534557,-0.000563447) , 
4, 0.0174011, 1, 0, 0.457908,-0.00287417) , 
5, 0.0172375, 1, 0, 0.503895,-0.00503885)    );
  // itree = 207
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619984,-0.00951623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52573,-0.00352318) , 
5, 0.0165475, 1, 0, 0.553389,-0.00413489) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.191795,0.011887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450964,0.017008) , 
6, 0.0377386, 1, 0, 0.295805,0.0101264) , 
3, 108.104, 1, 0, 0.532114,-0.00295698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0574226,-0.0114171) , 
3, 151.382, 1, 0, 0.495905,-0.00365187)    );
  // itree = 208
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253432,-0.0115468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472234,-0.0329423) , 
5, 0.00547377, 1, 0, 0.346999,-0.0243863) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763117,0.0231932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656405,-0.00571863) , 
6, 0.020006, 1, 0, 0.70292,0.00221177) , 
5, 0.00821044, 1, 0, 0.508492,-0.0123179) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966939,0.0164093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00177203,-0.0195126) , 
0, 0.00162981, 1, 0, 0.576827,0.00122004) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413223,-0.0184612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467877,0.000817895) , 
5, 0.0218839, 1, 0, 0.457932,-0.00518704) , 
4, 0.0203346, 1, 0, 0.504984,-0.00265146) , 
5, 0.0114925, 1, 0, 0.505477,-0.00401002)    );
  // itree = 209
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995681,0.0406445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709312,-0.0163242) , 
0, 4.57784e-05, 1, 0, 0.935543,-0.0085222) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.182501,-0.0134848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357536,0.000257258) , 
4, 0.0145052, 1, 0, 0.324076,-0.00210299) , 
0, 0.000961714, 1, 0, 0.522028,-0.0041811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210799,-0.0133693) , 
2, 0.452279, 1, 0, 0.503371,-0.00490896)    );
  // itree = 210
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956791,-0.00676552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946415,0.0315777) , 
0, 0.000827681, 1, 0, 0.953164,0.00754221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00176428,-0.0182106) , 
0, 0.00159176, 1, 0, 0.57843,-0.000876719) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.759809,0.0147605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673701,-0.0290259) , 
4, 0.0181847, 1, 0, 0.705387,-0.0265597) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909767,-0.00812805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.159195,-0.0030651) , 
0, 0.00192484, 1, 0, 0.442973,-0.00486879) , 
4, 0.0194677, 1, 0, 0.470619,-0.00715401) , 
4, 0.0173949, 1, 0, 0.505876,-0.0051012)    );
  // itree = 211
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944912,-0.00407689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904047,0.0110439) , 
0, 0.00123835, 1, 0, 0.930613,0.0032974) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00391426,-0.0159131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000174924,-0.012212) , 
5, 0.0370003, 1, 0, 0.00211003,-0.00639102) , 
0, 0.00260973, 1, 0, 0.665573,0.000531844) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0208483) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969197,0.0294411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000111405,-0.012683) , 
0, 0.00288733, 1, 0, 0.156256,0.00124831) , 
5, 0.0282524, 1, 0, 0.101074,-0.0060404) , 
4, 0.0289852, 1, 0, 0.504708,-0.00134104)    );
  // itree = 212
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950756,0.00940517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847197,-0.0164432) , 
4, 0.0155528, 1, 0, 0.926407,-0.00351187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00985993,-0.0224703) , 
0, 0.00136809, 1, 0, 0.598243,-0.00864968) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510165,-0.00317025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386555,-0.0130734) , 
2, 0.322912, 1, 0, 0.501414,-0.0029616) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853471,0.0161214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131471) , 
0, 0.00385011, 1, 0, 0.315229,0.00763938) , 
2, 0.357034, 1, 0, 0.460004,-0.000603797) , 
5, 0.0173033, 1, 0, 0.502867,-0.00309856)    );
  // itree = 213
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99364,0.0170365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996419,0.0715836) , 
7, 0.00074943, 1, 0, 0.993998,0.00415521) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970997,0.0207514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.427,-0.0203998) , 
2, 0.04759, 1, 0, 0.705204,-0.0536177) , 
0, 4.58225e-05, 1, 0, 0.93642,-0.00736321) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0108138,-0.0160567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000120833,-0.0126282) , 
5, 0.0231617, 1, 0, 0.00306479,-0.00517685) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.756311,0.0086744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546854,-0.0090638) , 
6, 0.0539142, 1, 0, 0.709415,0.00465224) , 
7, 0.000144605, 1, 0, 0.307892,-0.000935088) , 
0, 0.000962442, 1, 0, 0.502042,-0.00292072)    );
  // itree = 214
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821047,-0.00482142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.108969,-0.0169077) , 
2, 0.21405, 1, 0, 0.654226,-0.00979901) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0522787,-0.0306493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58018,-4.78397e-05) , 
4, 0.0173752, 1, 0, 0.50421,-0.00201318) , 
5, 0.0172594, 1, 0, 0.550766,-0.00442944) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.298905,0.0195238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0972902,-0.00971847) , 
5, 0.0231018, 1, 0, 0.162858,0.00261616) , 
3, 113.537, 1, 0, 0.497996,-0.00347096)    );
  // itree = 215
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848925,-0.000467038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279784,-0.019998) , 
4, 0.0144907, 1, 0, 0.59735,-0.00911296) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.61197e-05,-0.0188365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665701,0.0027927) , 
6, 0.0314671, 1, 0, 0.453913,-0.000524666) , 
5, 0.0161055, 1, 0, 0.49531,-0.00300332) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839171,-0.0209907) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.479847,0.00956926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.378109,-0.0141096) , 
2, 0.191197, 1, 0, 0.421415,-0.00943268) , 
0, 0.00191221, 1, 0, 0.555427,-0.0184767) , 
6, 0.055081, 1, 0, 0.50165,-0.00463509)    );
  // itree = 216
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990323,0.0171001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894939,-0.0181427) , 
8, 0.266532, 1, 0, 0.977861,-0.000789742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655627,-0.0177478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839671,-0.00580273) , 
0, 0.000772875, 1, 0, 0.822764,-0.0159337) , 
0, 0.000274852, 1, 0, 0.894513,-0.00892806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00114955,-0.0064191) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131627) , 
5, 0.0230519, 1, 0, 0,-0.00297628) , 
4, 0.0203018, 1, 0, 0.000353021,-0.00239796) , 
0, 0.00288725, 1, 0, 0.500828,-0.00605296)    );
  // itree = 217
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89572,0.0267522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477864,-0.0142444) , 
5, 0.0228707, 1, 0, 0.753374,0.000672232) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.500108,-0.0206512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.367571,0.00356622) , 
4, 0.0232284, 1, 0, 0.424989,-0.0182581) , 
2, 0.14277, 1, 0, 0.589117,-0.00879665) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953216,0.0111793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00415971,-0.0140309) , 
0, 0.00162981, 1, 0, 0.603709,0.0020847) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.350173,-0.012195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420903,-0.000493335) , 
5, 0.0226261, 1, 0, 0.399917,-0.00345557) , 
4, 0.0202931, 1, 0, 0.486096,-0.0011127) , 
3, 12.6158, 1, 0, 0.501803,-0.00228423)    );
  // itree = 218
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949852,0.00663829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854305,-0.0192673) , 
4, 0.0157692, 1, 0, 0.929576,-0.00317323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.010887,-0.0204135) , 
0, 0.00136809, 1, 0, 0.601857,-0.00920053) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0320081,-0.0279491) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796886,0.00855176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0242308) , 
5, 0.0321242, 1, 0, 0.526756,0.00195111) , 
4, 0.0174011, 1, 0, 0.444658,-0.00129077) , 
5, 0.0173033, 1, 0, 0.492934,-0.00371987)    );
  // itree = 219
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574378,-0.00367366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467073,-0.0158397) , 
3, 82.2327, 1, 0, 0.562709,-0.00392301) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.43338,0.00687893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.236614,0.0272954) , 
2, 0.142713, 1, 0, 0.31402,0.0111335) , 
3, 107.931, 1, 0, 0.543003,-0.00272993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0631625,-0.0145479) , 
3, 151.139, 1, 0, 0.505476,-0.00371718)    );
  // itree = 220
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.797123,-0.00702967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951079,0.0269892) , 
5, 0.00828929, 1, 0, 0.880294,0.00197738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0879662,-0.017368) , 
2, 0.0713882, 1, 0, 0.494759,-0.0106969) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978526,0.0121319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912224,-0.0142378) , 
4, 0.0183149, 1, 0, 0.933513,-0.00860228) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.359942,0.00150061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135561,-0.0118531) , 
2, 0.428449, 1, 0, 0.334585,-0.000423671) , 
0, 0.000962526, 1, 0, 0.496359,-0.00263276) , 
5, 0.0115764, 1, 0, 0.496131,-0.00378478)    );
  // itree = 221
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.24717,-0.0166528) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578796,-0.000802403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0939102,-0.0121765) , 
2, 0.26186, 1, 0, 0.439831,-0.00367198) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642099,-0.00127256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4958,0.0128705) , 
2, 0.357067, 1, 0, 0.608662,0.00203706) , 
6, 0.040597, 1, 0, 0.509009,-0.00133273) , 
5, 0.00578456, 1, 0, 0.496204,-0.00218403)    );
  // itree = 222
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982726,-0.0755183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996934,0.0607173) , 
6, 0.0289824, 1, 0, 0.993493,0.00253854) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908188,0.00603149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406426,-0.0215686) , 
4, 0.0106525, 1, 0, 0.673004,-0.0621717) , 
0, 4.57784e-05, 1, 0, 0.927913,-0.0107029) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589126,-0.0361536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440515,-0.000173349) , 
5, 0.0171026, 1, 0, 0.483346,-0.00926016) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.252251,-0.000158639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406239,-0.0136481) , 
6, 0.0579764, 1, 0, 0.260397,-0.000938947) , 
2, 0.0714125, 1, 0, 0.302234,-0.00250047) , 
0, 0.000961838, 1, 0, 0.494998,-0.00502752)    );
  // itree = 223
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618321,-0.0175223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727681,0.0228549) , 
6, 0.0174176, 1, 0, 0.70657,0.00402083) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926448,-0.0199229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.182603,-0.00502014) , 
0, 0.00192442, 1, 0, 0.537139,-0.0103892) , 
4, 0.0174028, 1, 0, 0.604593,-0.00465225) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0193921,-0.0101034) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68414,0.0130344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.238096,-0.00344565) , 
5, 0.0281075, 1, 0, 0.491889,0.00803124) , 
6, 0.0347943, 1, 0, 0.28918,0.00153037) , 
2, 0.261846, 1, 0, 0.499011,-0.00258267)    );
  // itree = 224
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.788671,0.00138191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000114452,-0.0236292) , 
4, 0.0203854, 1, 0, 0.53862,-0.00263927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0386743,-0.014961) , 
2, 0.333145, 1, 0, 0.438753,-0.0049452) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731472,0.0259089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565073,0.0436691) , 
2, 0.237939, 1, 0, 0.662633,0.0184101) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622879,-0.00591692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522458,0.00944359) , 
2, 0.30946, 1, 0, 0.592151,-0.000765048) , 
6, 0.0434968, 1, 0, 0.603054,0.00220139) , 
6, 0.040586, 1, 0, 0.504371,-0.002091)    );
  // itree = 225
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722015,-0.00931099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629081,-0.019207) , 
7, 0.000447598, 1, 0, 0.710854,-0.0116408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180296,-0.0193082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532044,0.00302358) , 
4, 0.0231543, 1, 0, 0.437176,-0.00251535) , 
5, 0.0225125, 1, 0, 0.580982,-0.00731034) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757012,-0.00858053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477558,-0.0390431) , 
3, 90.4765, 1, 0, 0.656911,-0.0142214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.501058,0.00559723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000153062,-0.0197491) , 
4, 0.0318542, 1, 0, 0.348575,0.00181323) , 
2, 0.0476074, 1, 0, 0.403799,-0.00105863) , 
3, 50.3798, 1, 0, 0.500989,-0.0044879)    );
  // itree = 226
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983082,-0.00659183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959355,0.0252461) , 
2, 0.308466, 1, 0, 0.97974,0.000609172) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644277,-0.0169489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845004,-0.00629054) , 
0, 0.000772702, 1, 0, 0.826513,-0.0167546) , 
0, 0.00027479, 1, 0, 0.898033,-0.00864992) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000625694,-0.00891931) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013127) , 
4, 0.0338516, 1, 0, 0,-0.00260467) , 
4, 0.0202976, 1, 0, 0.00019539,-0.00220291) , 
0, 0.00288758, 1, 0, 0.501093,-0.00579965)    );
  // itree = 227
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689068,-0.00990787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551777,-0.00333299) , 
5, 0.0172737, 1, 0, 0.597717,-0.00450006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12113,-0.00905387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795347,0.00509301) , 
7, 0.000145067, 1, 0, 0.42022,0.000559577) , 
3, 50.4571, 1, 0, 0.518233,-0.00223433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.194802,-0.0131625) , 
2, 0.452279, 1, 0, 0.498535,-0.00304633)    );
  // itree = 228
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844875,0.00140378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29825,-0.0207662) , 
5, 0.0240537, 1, 0, 0.691246,-0.00360942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694473,0.0223859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.27477e-05,-0.0163265) , 
4, 0.0309875, 1, 0, 0.279943,0.00237655) , 
4, 0.0260302, 1, 0, 0.548362,-0.00152993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109147,-0.0116395) , 
3, 125.869, 1, 0, 0.498969,-0.00250441)    );
  // itree = 229
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932763,0.00574361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995722,0.0847407) , 
7, 0.000231441, 1, 0, 0.949759,0.0123508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00464707,-0.017503) , 
0, 0.00157823, 1, 0, 0.582182,0.00273714) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774303,-0.0162694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296937,-0.000256534) , 
4, 0.0257068, 1, 0, 0.526736,-0.00771012) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864713,0.00847411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131572) , 
0, 0.00288733, 1, 0, 0.349799,0.00388664) , 
2, 0.285658, 1, 0, 0.465903,-0.003723) , 
4, 0.0174338, 1, 0, 0.504099,-0.00160093)    );
  // itree = 230
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979001,-0.00670422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939062,0.0146464) , 
0, 0.000384442, 1, 0, 0.95978,0.00591197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00279039,-0.0144239) , 
0, 0.00162704, 1, 0, 0.623081,0.0011662) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774409,-0.0179656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954553,-0.00490626) , 
5, 0.0225277, 1, 0, 0.904328,-0.0136022) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.212893,0.000205994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530704,-0.0102346) , 
6, 0.0521868, 1, 0, 0.274567,-0.00302119) , 
0, 0.000962418, 1, 0, 0.417866,-0.00542884) , 
4, 0.0202976, 1, 0, 0.505296,-0.00261909)    );
  // itree = 231
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950448,0.0892903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.820973,0.00283505) , 
5, 0.0099356, 1, 0, 0.856875,0.00525042) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647319,-0.00956571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393657,-0.0022623) , 
5, 0.0229688, 1, 0, 0.518404,-0.00561447) , 
2, 0.0238037, 1, 0, 0.559177,-0.00430566) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853072,0.0137261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.03728,-0.00339363) , 
0, 0.00192488, 1, 0, 0.208819,0.0032659) , 
3, 100.925, 1, 0, 0.499484,-0.00301564)    );
  // itree = 232
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862593,0.0137281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250064,-0.0193133) , 
5, 0.0276242, 1, 0, 0.726391,0.00276604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.166684,-0.0137746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432564,0.000648651) , 
5, 0.0161007, 1, 0, 0.387383,-0.00367047) , 
2, 0.142814, 1, 0, 0.54416,-0.000693863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0528663,-0.0116939) , 
3, 151.177, 1, 0, 0.50568,-0.00153312)    );
  // itree = 233
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978331,-0.029925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996771,0.0459115) , 
6, 0.0231859, 1, 0, 0.99404,0.00353754) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.536039,-0.0249837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777917,-0.00799875) , 
0, 0.00057082, 1, 0, 0.677106,-0.0570821) , 
0, 4.58225e-05, 1, 0, 0.930388,-0.00863708) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00268542,-0.0167567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748815,0.00585794) , 
7, 0.000143225, 1, 0, 0.333862,0.000371913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117916,-0.0112951) , 
2, 0.428441, 1, 0, 0.306506,-0.000975027) , 
0, 0.000962526, 1, 0, 0.498904,-0.00333792)    );
  // itree = 234
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.242246,-0.0170428) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688935,0.000213244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0176628) , 
4, 0.0261027, 1, 0, 0.498899,-0.00178224) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.837671,-0.0226926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44097,0.00584298) , 
0, 0.00191658, 1, 0, 0.571443,-0.00937976) , 
6, 0.0521875, 1, 0, 0.510862,-0.00303518) , 
5, 0.00577465, 1, 0, 0.498049,-0.00368868)    );
  // itree = 235
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992976,-0.0282008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995451,0.0466637) , 
5, 0.0176903, 1, 0, 0.994479,0.00267214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883642,-0.00698724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618681,-0.0157867) , 
4, 0.0225117, 1, 0, 0.833009,-0.0223794) , 
0, 9.15879e-05, 1, 0, 0.91758,-0.00925845) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00296897,-0.0137167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90375,0.0176323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000122404,-0.0132855) , 
0, 0.00279688, 1, 0, 0.175376,0.00196032) , 
4, 0.0231891, 1, 0, 0.119314,-0.00183321) , 
0, 0.00192505, 1, 0, 0.501174,-0.00538516)    );
  // itree = 236
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997939,0.0501554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965279,-0.018894) , 
8, 0.266532, 1, 0, 0.99409,0.00186516) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881562,0.000554453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429946,-0.0225271) , 
4, 0.0107751, 1, 0, 0.669395,-0.0625765) , 
0, 4.57784e-05, 1, 0, 0.929958,-0.010863) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00895052,-0.0247736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.79114e-05,-0.0127724) , 
0, 0.0101524, 1, 0, 0.00232867,-0.00466561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765801,0.0103185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495795,-0.00665905) , 
3, 88.1804, 1, 0, 0.720297,0.00707647) , 
7, 0.000144606, 1, 0, 0.304736,0.000280142) , 
0, 0.000962526, 1, 0, 0.500019,-0.00320033)    );
  // itree = 237
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918222,-0.00434393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5462,-0.0136492) , 
4, 0.0286454, 1, 0, 0.90015,-0.006368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856542,-0.0219484) , 
5, 0.0295296, 1, 0, 0.898085,-0.00810865) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0019107,0.00247513) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000178447,-0.0118437) , 
4, 0.0338096, 1, 0, 0.000115196,-0.00211987) , 
4, 0.0202917, 1, 0, 0.000699421,-0.00133195) , 
0, 0.00288677, 1, 0, 0.499753,-0.0051006)    );
  // itree = 238
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940667,-0.00121405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93355,0.0311136) , 
0, 0.0016483, 1, 0, 0.940035,0.00229671) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00322557,-0.0168843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000192224,-0.0118361) , 
0, 0.00803139, 1, 0, 0.000888575,-0.00524633) , 
0, 0.00192505, 1, 0, 0.415683,-0.00191478) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900485,-0.0243311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871987,-0.00607076) , 
7, 0.000747085, 1, 0, 0.888353,-0.0182615) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867805,0.0327623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61735,0.00422728) , 
5, 0.0289861, 1, 0, 0.785849,0.0231977) , 
0, 0.00167899, 1, 0, 0.833843,0.00378601) , 
7, 0.000549402, 1, 0, 0.491233,-0.000884807)    );
  // itree = 239
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253136,0.0128001) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.486064,-0.0255721) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700496,0.00591402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451118,-0.00518306) , 
4, 0.0184382, 1, 0, 0.523421,-0.00153694) , 
4, 0.00845138, 1, 0, 0.52201,-0.00236574) , 
4, 0.0058308, 1, 0, 0.507291,-0.0017799)    );
  // itree = 240
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736856,-0.0112297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962736,0.0134243) , 
7, 0.000282131, 1, 0, 0.83207,-0.00246542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000163,-0.0223013) , 
4, 0.0231862, 1, 0, 0.658352,-0.00708517) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0548673,-0.0187561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790031,0.0158857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0183478) , 
4, 0.0303887, 1, 0, 0.438416,0.00279872) , 
4, 0.0232137, 1, 0, 0.327748,-0.00102674) , 
5, 0.0230519, 1, 0, 0.493248,-0.00405959)    );
  // itree = 241
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.256048,-0.0169877) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611818,0.00263031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494,-0.00636472) , 
4, 0.0174206, 1, 0, 0.53234,-0.00253478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.207931,-0.0116951) , 
2, 0.452369, 1, 0, 0.512091,-0.00316885) , 
5, 0.00577507, 1, 0, 0.499936,-0.00381763)    );
  // itree = 242
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.232031,-0.0198589) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970316,0.0247202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00240778,-0.0176155) , 
0, 0.00154684, 1, 0, 0.581397,0.00496881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544987,-0.0107365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370563,0.00463655) , 
2, 0.261719, 1, 0, 0.477971,-0.0029173) , 
4, 0.0174057, 1, 0, 0.511038,-0.000395943) , 
5, 0.00577507, 1, 0, 0.49652,-0.00130063)    );
  // itree = 243
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781027,0.00429353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486798,-0.0143257) , 
4, 0.0202473, 1, 0, 0.642775,-0.00363316) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850599,0.00755617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000285756,-0.0111438) , 
0, 0.00288503, 1, 0, 0.369127,0.00380253) , 
2, 0.192522, 1, 0, 0.541981,-0.000894341) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673716,-0.0100328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0838513,-0.00513344) , 
0, 0.00192451, 1, 0, 0.216969,-0.00947724) , 
2, 0.404638, 1, 0, 0.500361,-0.00199344)    );
  // itree = 244
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736287,3.51993e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394081,-0.00521942) , 
2, 0.142814, 1, 0, 0.555558,-0.00239068) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.198769,0.00340267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440067,0.0219057) , 
6, 0.0377384, 1, 0, 0.299773,0.00820759) , 
3, 107.796, 1, 0, 0.533856,-0.00149148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0501544,-0.0148761) , 
3, 150.92, 1, 0, 0.495677,-0.00224891)    );
  // itree = 245
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81733,-0.0160603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00177881,-0.00600655) , 
0, 0.00187558, 1, 0, 0.178092,-0.00649284) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978241,0.0277811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00217838,-0.023706) , 
0, 0.00159176, 1, 0, 0.600627,0.00264304) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.104082,-0.0206707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.694248,0.0019788) , 
6, 0.0360388, 1, 0, 0.563203,-0.0016669) , 
4, 0.0174827, 1, 0, 0.575315,-0.000271981) , 
6, 0.0174032, 1, 0, 0.502163,-0.00141761)    );
  // itree = 246
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22431,0.0147283) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924483,0.00756802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292295,-0.0214576) , 
2, 0.0476176, 1, 0, 0.572539,-0.0142505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0951176,-0.0203195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554181,0.000452942) , 
5, 0.0115118, 1, 0, 0.519399,-0.000611487) , 
4, 0.0110719, 1, 0, 0.524486,-0.00191714) , 
4, 0.00580491, 1, 0, 0.507139,-0.00138777)    );
  // itree = 247
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991653,-0.0136332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998829,0.0718301) , 
5, 0.021912, 1, 0, 0.994474,0.00271784) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852889,0.00276082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520499,-0.0198469) , 
6, 0.0205764, 1, 0, 0.684194,-0.0541539) , 
0, 4.57697e-05, 1, 0, 0.932837,-0.00857969) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.385297,-0.00111402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.35494,-0.00980932) , 
3, 33.0411, 1, 0, 0.372731,-0.00374882) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81848,0.0074337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000328792,-0.0104546) , 
0, 0.0028003, 1, 0, 0.196616,0.0022708) , 
3, 63.0778, 1, 0, 0.303122,-0.00136956) , 
0, 0.000962418, 1, 0, 0.496815,-0.00358732)    );
  // itree = 248
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991654,-0.0241941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998823,0.0762673) , 
5, 0.0219187, 1, 0, 0.994465,0.00140661) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899879,0.0116257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48168,-0.0186977) , 
5, 0.0105664, 1, 0, 0.698358,-0.0373891) , 
0, 4.58225e-05, 1, 0, 0.937137,-0.00610442) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0102819,-0.0196086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.74257e-05,-0.0126969) , 
4, 0.0173939, 1, 0, 0.00249341,-0.00383606) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7659,0.00685223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535354,-0.00903388) , 
5, 0.0265549, 1, 0, 0.705152,0.0036469) , 
7, 0.000143227, 1, 0, 0.303519,-0.000630285) , 
0, 0.000962526, 1, 0, 0.499022,-0.00231933)    );
  // itree = 249
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99538,-0.0401234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995391,0.0338465) , 
2, 0.0949126, 1, 0, 0.995386,0.00171953) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950536,0.0052522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425992,-0.0152815) , 
2, 0.0475678, 1, 0, 0.698727,-0.0387206) , 
0, 4.58225e-05, 1, 0, 0.935832,-0.00639882) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.525278,-0.00547587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.271409,-0.0220569) , 
3, 75.5347, 1, 0, 0.459961,-0.00840401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885349,0.0123314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.116181,1.43938e-05) , 
0, 0.00187958, 1, 0, 0.257592,0.00359175) , 
2, 0.095248, 1, 0, 0.307559,0.000629863) , 
0, 0.000962526, 1, 0, 0.503464,-0.00156178)    );
  // itree = 250
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.890083,-0.0182303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923696,-1.88002e-05) , 
4, 0.0131847, 1, 0, 0.915308,-0.00526929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903883,-0.0390093) , 
5, 0.0261328, 1, 0, 0.914117,-0.00949832) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00530709,-0.0142067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000120591,-0.0121818) , 
0, 0.00802392, 1, 0, 0.00143899,-0.00402357) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.237056,-0.0071395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533652,0.0154298) , 
4, 0.0260049, 1, 0, 0.415183,0.00491652) , 
6, 0.0492859, 1, 0, 0.114319,-0.00158449) , 
0, 0.00192505, 1, 0, 0.49536,-0.00535481)    );
  // itree = 251
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896872,-0.0128328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936543,0.00467854) , 
5, 0.016617, 1, 0, 0.919081,-0.00466585) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887543,-0.0517809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921632,-0.0166423) , 
4, 0.0264183, 1, 0, 0.907633,-0.0391549) , 
5, 0.0248559, 1, 0, 0.91741,-0.00970067) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00383869,-0.011173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000153062,-0.0118821) , 
0, 0.00802582, 1, 0, 0.000986933,-0.0027439) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640098,-0.00248241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845857,0.0191909) , 
4, 0.0262295, 1, 0, 0.773844,0.0122382) , 
7, 0.000534735, 1, 0, 0.120592,-0.000425325) , 
0, 0.00192505, 1, 0, 0.502391,-0.00486965)    );
  // itree = 252
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694063,0.000829954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0576469,-0.0127785) , 
2, 0.285627, 1, 0, 0.571034,-0.00232926) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963481,-0.016267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712883,0.0232562) , 
0, 0.00150734, 1, 0, 0.825282,0.00774816) , 
7, 0.000354395, 1, 0, 0.64036,0.000418548) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0224853) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553639,0.0160916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366859,-0.00978126) , 
3, 37.7651, 1, 0, 0.440241,-0.000441588) , 
5, 0.0230594, 1, 0, 0.341405,-0.00534123) , 
4, 0.0232052, 1, 0, 0.502529,-0.00223696)    );
  // itree = 253
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.835159,0.036175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8053,-0.003682) , 
2, 0.0147262, 1, 0, 0.825278,0.00479768) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552791,-0.0139597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518532,-0.00423421) , 
3, 16.1935, 1, 0, 0.526237,-0.00466365) , 
2, 0.0238023, 1, 0, 0.563054,-0.0034988) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.720513,0.011655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000163708,-0.0115335) , 
0, 0.00288733, 1, 0, 0.169445,0.00479285) , 
3, 113.383, 1, 0, 0.508263,-0.00234459)    );
  // itree = 254
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.797522,-0.00486884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876778,0.0198661) , 
5, 0.0136461, 1, 0, 0.84366,0.00469149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00166758,-0.0282054) , 
5, 0.022043, 1, 0, 0.618275,0.000878151) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.860648,-0.0217816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924074,0.0143698) , 
0, 0.00155716, 1, 0, 0.881322,-0.0147708) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895307,0.0111152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140203) , 
0, 0.00279672, 1, 0, 0.160329,0.000557909) , 
0, 0.00192505, 1, 0, 0.415093,-0.00485854) , 
4, 0.0202846, 1, 0, 0.501353,-0.00242305)    );
  // itree = 255
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941061,-0.000177305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793899,-0.0108125) , 
4, 0.0225619, 1, 0, 0.918619,-0.0034614) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869947,-0.0480022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931806,-0.00988899) , 
4, 0.0264183, 1, 0, 0.906353,-0.0356159) , 
5, 0.0248559, 1, 0, 0.916856,-0.00808191) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00235582,-0.0131578) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000118318,-0.0130181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859136,0.0153251) , 
7, 0.000535656, 1, 0, 0.166249,0.00145262) , 
4, 0.0231963, 1, 0, 0.112638,-0.00124166) , 
0, 0.00192442, 1, 0, 0.490675,-0.00445704)    );
  // itree = 256
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961222,0.0219286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.324442,-0.0173877) , 
5, 0.0137751, 1, 0, 0.769089,0.00585157) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583667,-0.0403549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64824,0.00450053) , 
5, 0.0169553, 1, 0, 0.634796,-0.00364381) , 
4, 0.0144819, 1, 0, 0.680282,-0.000427699) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532428,-0.0122181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864336,-0.00581943) , 
4, 0.01625, 1, 0, 0.823495,-0.0142505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00157212,0.00547735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131356) , 
4, 0.0202924, 1, 0, 0.000490077,-0.000993912) , 
0, 0.00288758, 1, 0, 0.35088,-0.00663782) , 
2, 0.142853, 1, 0, 0.498777,-0.00384955)    );
  // itree = 257
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957835,0.0111257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860435,-0.0190937) , 
4, 0.015565, 1, 0, 0.935548,-0.0016278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0123847,-0.0246234) , 
0, 0.00135385, 1, 0, 0.602264,-0.00780579) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0322545,-0.0287453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77572,0.00729045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317649,-0.00519394) , 
4, 0.0256051, 1, 0, 0.531491,0.000962778) , 
4, 0.0173492, 1, 0, 0.453036,-0.00150574) , 
5, 0.0172732, 1, 0, 0.498961,-0.00344461)    );
  // itree = 258
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940696,-0.000795777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743152,-0.0130405) , 
4, 0.0238696, 1, 0, 0.919061,-0.00373233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899891,-0.0281274) , 
5, 0.0261328, 1, 0, 0.9171,-0.0075658) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00214455,-0.0128086) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.482692,0.0211822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000146797,-0.0196955) , 
4, 0.0303691, 1, 0, 0.166975,0.00100946) , 
4, 0.0231954, 1, 0, 0.112573,-0.00139814) , 
0, 0.00192442, 1, 0, 0.492899,-0.00431379)    );
  // itree = 259
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916406,-0.0080302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923654,0.0198904) , 
0, 0.00164849, 1, 0, 0.917304,-0.00380316) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895111,-0.0396292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948594,-0.0109425) , 
7, 0.000759679, 1, 0, 0.924739,-0.0324136) , 
5, 0.0256744, 1, 0, 0.918176,-0.00715855) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00304294,-0.0130716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.91256e-05,-0.0122095) , 
0, 0.0080308, 1, 0, 0.000737488,-0.00267144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673599,0.00804905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914329,0.0386422) , 
7, 0.000796255, 1, 0, 0.754693,0.0169376) , 
7, 0.000534736, 1, 0, 0.114973,0.000299622) , 
0, 0.00192488, 1, 0, 0.499075,-0.00326697)    );
  // itree = 260
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770975,-0.000631614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630871,0.017095) , 
2, 0.103149, 1, 0, 0.731419,0.00203038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545052,-0.0120842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308205,-0.00705964) , 
5, 0.0161276, 1, 0, 0.379607,-0.00800546) , 
3, 88.1772, 1, 0, 0.668869,0.000246088) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.462173,-0.0118358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872344,-0.00235646) , 
7, 0.000287362, 1, 0, 0.808543,-0.00985641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000967784,-0.0024295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131398) , 
4, 0.0231877, 1, 0, 0.000352104,-0.00105935) , 
0, 0.00288725, 1, 0, 0.331415,-0.00466292) , 
2, 0.166629, 1, 0, 0.500915,-0.00219718)    );
  // itree = 261
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843556,0.000394399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260308,-0.0223111) , 
4, 0.0201599, 1, 0, 0.67195,-0.00564007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00201115,-0.0277363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430275,0.0072021) , 
4, 0.0202985, 1, 0, 0.333797,-0.000129506) , 
5, 0.0214383, 1, 0, 0.497828,-0.00280257) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601758,-0.0204423) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435996,0.00157121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.694204,-0.014312) , 
6, 0.0592229, 1, 0, 0.532342,-0.00465805) , 
5, 0.0289073, 1, 0, 0.556106,-0.0124141) , 
6, 0.0550821, 1, 0, 0.50417,-0.00384854)    );
  // itree = 262
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988138,-0.116166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996148,0.0350978) , 
5, 0.0117877, 1, 0, 0.994894,0.00229231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880562,0.00630484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459528,-0.0159003) , 
5, 0.0105664, 1, 0, 0.676469,-0.0389333) , 
0, 4.57697e-05, 1, 0, 0.928391,-0.00631766) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00605123,-0.0320123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00179408,-0.00452053) , 
2, 0.119067, 1, 0, 0.00283653,-0.00287921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632813,-9.52351e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80249,0.00971049) , 
1, 1.38907, 1, 0, 0.718471,0.00513492) , 
7, 0.000144605, 1, 0, 0.302107,0.000472212) , 
0, 0.000961676, 1, 0, 0.49506,-0.00161969)    );
  // itree = 263
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67201,-0.00738905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542026,0.000590126) , 
5, 0.0171193, 1, 0, 0.583752,-0.00134355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260979,-0.000582429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866978,0.0164836) , 
7, 0.000235177, 1, 0, 0.53708,0.00464694) , 
3, 54.592, 1, 0, 0.571918,0.000175361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.494308,-0.0260945) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245963,0.00873967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21856,-0.00466634) , 
5, 0.0172732, 1, 0, 0.224562,-0.000387799) , 
2, 0.0475362, 1, 0, 0.262669,-0.00447768) , 
3, 88.1874, 1, 0, 0.504145,-0.000844378)    );
  // itree = 264
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935708,-0.00353453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903471,-0.0426717) , 
5, 0.0255009, 1, 0, 0.931827,-0.00814534) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000519464,-0.012675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7996,0.0134433) , 
7, 0.000549401, 1, 0, 0.152663,0.00012683) , 
0, 0.00192442, 1, 0, 0.577868,-0.00438746) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.604282,-0.00278101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828303,-0.023168) , 
7, 0.000267522, 1, 0, 0.678344,-0.00917224) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.382963,0.014994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336763,-0.00128923) , 
5, 0.0173311, 1, 0, 0.347532,0.00186431) , 
2, 0.0475696, 1, 0, 0.40541,-6.66079e-05) , 
3, 50.3873, 1, 0, 0.499643,-0.00242758)    );
  // itree = 265
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704177,0.00285224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.240781,-0.0133845) , 
4, 0.0203044, 1, 0, 0.510316,-0.00150155) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594765,-0.0101009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000719655,-0.00531829) , 
0, 0.00288725, 1, 0, 0.108652,-0.00652217) , 
2, 0.333232, 1, 0, 0.422296,-0.00260176) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854542,-0.00941765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915337,-0.016889) , 
5, 0.0278212, 1, 0, 0.874216,-0.0138825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9798,0.0469957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539023,0.00354513) , 
0, 0.00215427, 1, 0, 0.784835,0.0201774) , 
0, 0.00179141, 1, 0, 0.827286,0.00400091) , 
7, 0.000534737, 1, 0, 0.50105,-0.00131783)    );
  // itree = 266
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962377,0.0185736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905626,-0.0121231) , 
4, 0.0186093, 1, 0, 0.93778,0.000369996) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859576,-0.00665042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963045,0.0419274) , 
7, 0.000465972, 1, 0, 0.925106,0.016427) , 
0, 0.00155699, 1, 0, 0.935805,0.0028724) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.450257,-0.0112433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131365) , 
0, 0.00346391, 1, 0, 0.0769467,-0.00674604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515544,0.0216716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0192764) , 
4, 0.0310702, 1, 0, 0.144013,0.000858495) , 
4, 0.0261027, 1, 0, 0.116198,-0.00229533) , 
0, 0.00192505, 1, 0, 0.49882,0.000117152)    );
  // itree = 267
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981698,-0.0138208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95146,0.0267191) , 
2, 0.308466, 1, 0, 0.977252,-0.000199583) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905403,-0.00285972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695725,-0.00885158) , 
2, 0.190418, 1, 0, 0.82945,-0.0116216) , 
0, 0.000274852, 1, 0, 0.898089,-0.00631726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00148923,0.00574641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.71662e-05,-0.0120244) , 
4, 0.0338252, 1, 0, 5.7382e-05,-0.00142108) , 
4, 0.020294, 1, 0, 0.000510105,-0.000828774) , 
0, 0.00288733, 1, 0, 0.500503,-0.00388611)    );
  // itree = 268
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966764,-0.00889675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982733,0.0129041) , 
5, 0.017686, 1, 0, 0.976446,0.000927536) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824444,-0.0138277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84852,-0.000263096) , 
0, 0.00151836, 1, 0, 0.837512,-0.0134634) , 
0, 0.00027479, 1, 0, 0.903232,-0.00665603) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0011998,0.00211555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131131) , 
4, 0.0338465, 1, 0, 0,-0.00135535) , 
4, 0.0202924, 1, 0, 0.000379006,-0.000874772) , 
0, 0.00288758, 1, 0, 0.496437,-0.00405119)    );
  // itree = 269
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.340097,0.0167193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39945,-0.00852191) , 
4, 0.00582008, 1, 0, 0.395273,-0.00316275) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951825,-0.00367183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479149,0.0177569) , 
0, 0.000962527, 1, 0, 0.648078,0.00582651) , 
6, 0.0352123, 1, 0, 0.459745,-0.000870242) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.786891,-0.0110474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119002,-0.0242102) , 
6, 0.0459855, 1, 0, 0.404153,-0.0189347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893736,-0.00850585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489391,0.0125732) , 
0, 0.00192405, 1, 0, 0.68066,6.11503e-06) , 
4, 0.0231855, 1, 0, 0.595621,-0.00581904) , 
6, 0.0434945, 1, 0, 0.505915,-0.00255183)    );
  // itree = 270
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.467585,0.00582325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751822,0.0457736) , 
6, 0.022112, 1, 0, 0.569039,0.00626364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00616771,-0.0141212) , 
2, 0.19047, 1, 0, 0.331523,0.000900397) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507432,0.012063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641897,-0.00616356) , 
4, 0.0203306, 1, 0, 0.599445,-0.00238545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592635,-0.00408777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57081,-0.0235282) , 
6, 0.0314124, 1, 0, 0.5806,-0.0171035) , 
1, 1.79506, 1, 0, 0.596643,-0.00457399) , 
6, 0.0290116, 1, 0, 0.499269,-0.00256334)    );
  // itree = 271
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879885,-0.00654525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979788,0.0331153) , 
5, 0.00986938, 1, 0, 0.953916,0.00863339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00218955,-0.0198458) , 
0, 0.00157823, 1, 0, 0.570815,0.00136973) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738035,-0.0205865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932237,-0.00210845) , 
5, 0.0185763, 1, 0, 0.909311,-0.0081552) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.117342,-0.0146152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.161907,0.0140029) , 
4, 0.0256841, 1, 0, 0.152596,0.000299104) , 
0, 0.00192335, 1, 0, 0.459428,-0.00312893) , 
4, 0.0174022, 1, 0, 0.496177,-0.00164473)    );
  // itree = 272
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247117,0.0263676) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591772,-0.00217979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27398,-0.0119303) , 
2, 0.452243, 1, 0, 0.574452,-0.00192832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114201,-0.0149435) , 
3, 125.949, 1, 0, 0.524705,-0.00300766) , 
4, 0.0058047, 1, 0, 0.508588,-0.00220534)    );
  // itree = 273
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933147,-0.0200545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901541,0.00751565) , 
0, 0.000649666, 1, 0, 0.919432,-0.0035306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00920483,-0.0224871) , 
0, 0.00136809, 1, 0, 0.592923,-0.00852746) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970328,0.0144424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000444719,-0.0120304) , 
0, 0.00192292, 1, 0, 0.31012,0.00149516) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66687,-0.00993691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553502,0.0144006) , 
2, 0.380604, 1, 0, 0.645617,-0.00539158) , 
6, 0.0434985, 1, 0, 0.458428,-0.00154916) , 
5, 0.0169618, 1, 0, 0.497484,-0.00357561)    );
  // itree = 274
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240127,0.0139568) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769164,-0.0349807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479505,-0.00215187) , 
2, 0.0237943, 1, 0, 0.511584,-0.00222458) , 
4, 0.00583156, 1, 0, 0.49576,-0.00171806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638581,-0.0179048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602704,-0.00230194) , 
3, 37.7071, 1, 0, 0.620124,-0.0120887) , 
6, 0.0579806, 1, 0, 0.502611,-0.00228941)    );
  // itree = 275
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944968,-0.00710581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521811,0.00661204) , 
0, 0.000744171, 1, 0, 0.692158,0.00139142) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0282884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131083) , 
5, 0.042937, 1, 0, 0,-0.00450791) , 
5, 0.0266844, 1, 0, 0.485605,-0.000369059) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93504,0.0105519) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.563589,-0.0181751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282151,-0.0129067) , 
5, 0.0289304, 1, 0, 0.389961,-0.0163087) , 
0, 0.000957846, 1, 0, 0.547454,-0.0104827) , 
6, 0.0521868, 1, 0, 0.495672,-0.0020153)    );
  // itree = 276
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989234,-0.0120524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915259,0.0246475) , 
0, 0.000136338, 1, 0, 0.95314,0.0104351) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00567889,-0.0304947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00155168,-0.00514419) , 
2, 0.119058, 1, 0, 0.0025338,-0.00239321) , 
0, 0.000962527, 1, 0, 0.163213,-0.000224863) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.332881,-0.0257157) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899719,-0.00212761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355647,-0.0163514) , 
4, 0.0295313, 1, 0, 0.847293,-0.00453431) , 
4, 0.0129215, 1, 0, 0.80645,-0.00596175) , 
7, 0.000145067, 1, 0, 0.493526,-0.00317085)    );
  // itree = 277
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955299,0.0120067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82125,-0.0230271) , 
4, 0.0160101, 1, 0, 0.931324,-0.000488133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0114071,-0.0271415) , 
0, 0.00136139, 1, 0, 0.597074,-0.00635659) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0407246,-0.0264332) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818875,0.0109075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241315,-0.00802098) , 
5, 0.0271132, 1, 0, 0.52996,0.00222004) , 
4, 0.0174011, 1, 0, 0.452641,-0.000361117) , 
5, 0.0172594, 1, 0, 0.496611,-0.00218632)    );
  // itree = 278
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.229214,0.0279137) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907922,-0.00409721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915625,-0.0169265) , 
5, 0.0291204, 1, 0, 0.908411,-0.00539128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00108925,0.000735198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.82698e-05,-0.0125408) , 
4, 0.0215584, 1, 0, 0.000339156,-0.000845157) , 
0, 0.00288733, 1, 0, 0.515662,-0.00342504) , 
4, 0.00580854, 1, 0, 0.50074,-0.00258198)    );
  // itree = 279
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985592,0.00174511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945357,0.0190923) , 
2, 0.284668, 1, 0, 0.979017,0.00234318) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630038,-0.0198744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8484,-0.00432102) , 
0, 0.00076847, 1, 0, 0.826931,-0.0124516) , 
0, 0.000273146, 1, 0, 0.897148,-0.00562095) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00122918,0.00471488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000165325,-0.0107802) , 
4, 0.0338303, 1, 0, 0.000110465,-0.00111695) , 
4, 0.0202992, 1, 0, 0.000457304,-0.000670283) , 
0, 0.00288733, 1, 0, 0.494573,-0.00339832)    );
  // itree = 280
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862506,-0.00584515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57739,0.0291341) , 
5, 0.021726, 1, 0, 0.760971,0.000759686) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839997,-0.00958782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00125634,-0.000753642) , 
0, 0.00288608, 1, 0, 0.413009,-0.00802945) , 
2, 0.142814, 1, 0, 0.583367,-0.0037264) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62276,-0.000430479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539699,-0.018526) , 
6, 0.0521818, 1, 0, 0.611269,-0.00270996) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779924,0.00649624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131152) , 
0, 0.00384977, 1, 0, 0.306247,0.00281857) , 
2, 0.142853, 1, 0, 0.434985,0.000485183) , 
3, 37.8469, 1, 0, 0.49811,-0.00130653)    );
  // itree = 281
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595681,-0.00091901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564965,-0.0178563) , 
7, 0.000226363, 1, 0, 0.589866,-0.00485697) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932254,-0.00415132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573339,0.0155275) , 
0, 0.00150795, 1, 0, 0.753453,0.00390766) , 
5, 0.0164647, 1, 0, 0.686845,0.000338993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000136304,-0.0293598) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977198,0.0317793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000104816,-0.0118987) , 
0, 0.00288677, 1, 0, 0.191834,0.00324814) , 
4, 0.0260999, 1, 0, 0.118608,-0.0033101) , 
5, 0.0288029, 1, 0, 0.499976,-0.00086104)    );
  // itree = 282
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823786,0.00274793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184419,-0.0135186) , 
5, 0.0253413, 1, 0, 0.687386,0.000667194) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0190216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131051) , 
4, 0.0393358, 1, 0, 0,-0.00494358) , 
4, 0.0260846, 1, 0, 0.492877,-0.000920482) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812626,-0.0227856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810586,-0.00880459) , 
3, 37.5293, 1, 0, 0.8116,-0.026686) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.548577,0.034924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366563,-0.00780426) , 
3, 25.1873, 1, 0, 0.416471,-3.43262e-05) , 
0, 0.00191658, 1, 0, 0.54468,-0.00868209) , 
6, 0.052182, 1, 0, 0.501334,-0.00218764)    );
  // itree = 283
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934362,0.0331421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748908,0.0141102) , 
6, 0.0175798, 1, 0, 0.83676,0.011134) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891741,-0.0298917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62367,0.00586326) , 
5, 0.0160343, 1, 0, 0.695483,-0.00192281) , 
5, 0.0110443, 1, 0, 0.726615,0.000954396) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499689,-0.0133681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0478114,-0.0140863) , 
2, 0.153144, 1, 0, 0.160587,-0.016264) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624006,0.00701845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358266,-0.00696376) , 
4, 0.0211635, 1, 0, 0.42522,-0.00144323) , 
4, 0.0145394, 1, 0, 0.381802,-0.00387485) , 
2, 0.0952352, 1, 0, 0.497123,-0.00225973)    );
  // itree = 284
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936595,-0.00255942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481576,-0.0201772) , 
0, 0.00150948, 1, 0, 0.893153,-0.00723424) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.4525e-05,-0.011741) , 
6, 0.0115864, 1, 0, 5.74915e-05,-0.00093503) , 
0, 0.00288514, 1, 0, 0.44017,-0.00403924) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94991,-0.0169581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508085,0.000555595) , 
0, 0.000959052, 1, 0, 0.661367,-0.00251287) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706822,0.0130715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.310918,-0.00120085) , 
5, 0.0275803, 1, 0, 0.522727,0.0064522) , 
2, 0.261859, 1, 0, 0.607844,0.000948182) , 
6, 0.0405903, 1, 0, 0.50752,-0.00203592)    );
  // itree = 285
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66155,-0.0235414) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922969,-0.00371105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599007,-0.0130963) , 
0, 0.00219881, 1, 0, 0.904338,-0.00556816) , 
5, 0.00709447, 1, 0, 0.892257,-0.00756003) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00183963,0.0144571) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.56788e-05,-0.0117896) , 
4, 0.0338252, 1, 0, 5.6755e-05,-0.00104343) , 
4, 0.0202924, 1, 0, 0.000620795,-0.000409326) , 
0, 0.00288664, 1, 0, 0.499364,-0.00440912)    );
  // itree = 286
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874161,0.0271609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5074,-0.00286132) , 
4, 0.0233048, 1, 0, 0.774064,0.00424642) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976354,0.0125275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372188,-0.0107623) , 
0, 0.000959971, 1, 0, 0.6314,-0.00252928) , 
3, 37.6245, 1, 0, 0.699196,0.000690602) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473964,-0.0111309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417325,-0.0147667) , 
5, 0.0218286, 1, 0, 0.439905,-0.0123177) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.408541,-0.000987731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.215495,-0.00749535) , 
2, 0.391061, 1, 0, 0.362532,-0.00209266) , 
3, 12.6298, 1, 0, 0.373711,-0.00356995) , 
2, 0.119019, 1, 0, 0.500274,-0.00191325)    );
  // itree = 287
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922454,-0.00686799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763435,0.00468679) , 
3, 100.394, 1, 0, 0.909717,-0.00483378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662675,-0.0107929) , 
2, 0.40475, 1, 0, 0.891425,-0.00646128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00138933,0.00811396) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000174116,-0.0102623) , 
4, 0.0338373, 1, 0, 0.000115152,-0.000982939) , 
4, 0.0202933, 1, 0, 0.000514123,-0.000509572) , 
0, 0.00288758, 1, 0, 0.499281,-0.00384157)    );
  // itree = 288
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981967,0.00895812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854162,0.0151806) , 
2, 0.119044, 1, 0, 0.952175,0.00762187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00123658,-0.0211535) , 
0, 0.00157823, 1, 0, 0.584015,0.00170268) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864714,-0.0260945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927446,-0.0080296) , 
7, 0.000402607, 1, 0, 0.913815,-0.0109402) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.263017,0.00350969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532203,-0.00733981) , 
6, 0.0521923, 1, 0, 0.310823,-0.000196682) , 
0, 0.000962526, 1, 0, 0.464995,-0.00294357) , 
4, 0.0173943, 1, 0, 0.503798,-0.00142879)    );
  // itree = 289
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597023,-0.0193658) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.241759,-0.0124378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840671,0.00774956) , 
1, 2.89986, 1, 0, 0.406773,-0.0027311) , 
6, 0.0173196, 1, 0, 0.47315,-0.0103985) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935321,-0.0146709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962648,0.0146097) , 
5, 0.0273417, 1, 0, 0.939205,-0.00667365) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.389144,0.00446384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0803957,-0.012281) , 
3, 113.539, 1, 0, 0.333534,0.000426179) , 
0, 0.000962442, 1, 0, 0.49721,-0.00149248) , 
5, 0.011532, 1, 0, 0.493735,-0.00277863)    );
  // itree = 290
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.224803,0.0131824) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943759,-0.00795791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.344644,-0.00175883) , 
0, 0.000962418, 1, 0, 0.542387,-0.00233192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.281486,0.0132263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211785,-0.00404152) , 
2, 0.462472, 1, 0, 0.246162,0.0025433) , 
2, 0.428467, 1, 0, 0.513653,-0.00185903) , 
4, 0.00580686, 1, 0, 0.497663,-0.00144727)    );
  // itree = 291
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986456,0.0265045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0509194,-0.0314208) , 
0, 0.00095954, 1, 0, 0.486875,-0.000854154) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831079,-0.034456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890205,-0.00798061) , 
5, 0.0151525, 1, 0, 0.879055,-0.00964014) , 
7, 0.000161049, 1, 0, 0.698238,-0.00558932) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736001,-0.0138856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942186,-0.00299284) , 
5, 0.0179995, 1, 0, 0.893916,-0.00851063) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892234,0.013328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114853,0.000314752) , 
0, 0.0018885, 1, 0, 0.250993,0.00366555) , 
0, 0.000962526, 1, 0, 0.381926,0.00118583) , 
2, 0.119019, 1, 0, 0.50602,-0.00147217)    );
  // itree = 292
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575982,-0.00678691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42981,0.000761222) , 
3, 37.7955, 1, 0, 0.492515,-0.0015465) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.478763,-0.0181174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529065,-0.0237576) , 
1, 1.17058, 1, 0, 0.503438,-0.0226888) , 
6, 0.0524452, 1, 0, 0.493154,-0.00278242) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66677,0.00586076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593498,0.0327953) , 
2, 0.153059, 1, 0, 0.631207,0.00936153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493066,-0.00171395) , 
2, 0.357073, 1, 0, 0.595599,0.00652598) , 
6, 0.055081, 1, 0, 0.503475,-0.00184459)    );
  // itree = 293
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.228434,0.0129903) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90371,0.0117844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115304,-0.025573) , 
4, 0.0110145, 1, 0, 0.458242,-0.00705604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928376,-0.0099458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357165,0.00246465) , 
0, 0.000962256, 1, 0, 0.521244,-0.000874991) , 
5, 0.0115387, 1, 0, 0.512899,-0.00169368) , 
4, 0.00580638, 1, 0, 0.495963,-0.00118827)    );
  // itree = 294
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.746753,0.00121831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751853,0.0441293) , 
3, 47.9278, 1, 0, 0.747605,0.00214483) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640237,-0.0110214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425568,0.00485632) , 
2, 0.0793384, 1, 0, 0.542861,-0.00261757) , 
3, 62.9376, 1, 0, 0.684819,0.000684415) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.403326,-0.0319502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121601,-0.00811711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375684,-0.000701903) , 
5, 0.0168258, 1, 0, 0.328076,-0.00200348) , 
2, 0.18261, 1, 0, 0.332615,-0.00325523) , 
2, 0.166616, 1, 0, 0.506479,-0.00131044)    );
  // itree = 295
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947579,0.0038954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00364838,-0.0189646) , 
0, 0.0015948, 1, 0, 0.585798,-0.00192979) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671053,-0.0257204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678479,-0.000131514) , 
4, 0.0193906, 1, 0, 0.675181,-0.014939) , 
4, 0.0183785, 1, 0, 0.601063,-0.00415156) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000261908,-0.00933289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0214799) , 
7, -0.00113424, 1, 0, 0.000151828,-0.00307896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723494,0.0290762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698027,0.000474675) , 
6, 0.0435057, 1, 0, 0.701975,0.00274643) , 
6, 0.040591, 1, 0, 0.420473,0.000409859) , 
4, 0.0203168, 1, 0, 0.498546,-0.00156213)    );
  // itree = 296
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937801,0.0206638) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.446329,-0.0174153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.216027,-0.0117979) , 
6, 0.0202198, 1, 0, 0.305402,-0.0146774) , 
2, 0.0237961, 1, 0, 0.478287,-0.00925765) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946005,0.00403427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00152244,-0.0113826) , 
0, 0.00192451, 1, 0, 0.469255,0.000372595) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664735,-0.0145141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.505457,0.00205667) , 
3, 50.3536, 1, 0, 0.593948,-0.00762718) , 
6, 0.049292, 1, 0, 0.499496,-0.0015675) , 
5, 0.0115387, 1, 0, 0.496377,-0.00269836)    );
  // itree = 297
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781915,0.00126396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951806,0.0259462) , 
7, 0.000750073, 1, 0, 0.800162,0.00289641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00707818,-0.0276164) , 
5, 0.0305713, 1, 0, 0.646668,0.000991116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0252764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000143579,-0.0107454) , 
5, 0.0344586, 1, 0, 7.97798e-05,-0.0043708) , 
4, 0.0318917, 1, 0, 0.504637,-0.000186691)    );
  // itree = 298
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95452,-0.00478137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582467,-0.00918353) , 
2, 0.214279, 1, 0, 0.898047,-0.00658472) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.48105e-05,-0.0114905) , 
6, 0.0135583, 1, 0, 5.54391e-05,-0.000789873) , 
0, 0.00288425, 1, 0, 0.433955,-0.00358988) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681649,0.0114434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613609,-0.00743981) , 
2, 0.0951131, 1, 0, 0.639771,-0.00136548) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679964,0.0204327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221106,-0.00129363) , 
4, 0.0290165, 1, 0, 0.534417,0.0102938) , 
2, 0.285544, 1, 0, 0.603,0.00270391) , 
6, 0.040586, 1, 0, 0.501675,-0.00106857)    );
  // itree = 299
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914642,-0.00804191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970394,0.0127903) , 
5, 0.016048, 1, 0, 0.942502,5.92848e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984782,0.00648871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675295,-0.0161994) , 
0, 9.15879e-05, 1, 0, 0.881094,-0.0162479) , 
4, 0.0223362, 1, 0, 0.924997,-0.00458926) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00119221,-0.0150117) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946336,0.0165407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000427761,-0.0102864) , 
0, 0.00279663, 1, 0, 0.15705,0.00196376) , 
5, 0.0230519, 1, 0, 0.114607,-0.000455821) , 
0, 0.00192488, 1, 0, 0.497704,-0.00240983)    );
  // itree = 300
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943266,0.00253301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940097,0.0165078) , 
0, 0.0014505, 1, 0, 0.942598,0.00470689) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00574151,-0.0111962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000126569,-0.011161) , 
0, 0.0088945, 1, 0, 0.00168968,-0.00237502) , 
0, 0.00192505, 1, 0, 0.485017,0.00126283) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844732,-0.0358418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858075,-0.00768287) , 
2, 0.215051, 1, 0, 0.850672,-0.0287317) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.280643,-0.00631321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523448,0.0148982) , 
4, 0.0260621, 1, 0, 0.426201,0.00369471) , 
0, 0.0019181, 1, 0, 0.579209,-0.00799398) , 
6, 0.049283, 1, 0, 0.505899,-0.000789407)    );
  // itree = 301
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537905,-0.0223289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56714,-0.0020513) , 
5, 0.0105604, 1, 0, 0.562939,-0.00308673) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652259,0.0133391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000364604,-0.0228202) , 
5, 0.0264019, 1, 0, 0.40072,0.00423758) , 
3, 50.3935, 1, 0, 0.491048,0.000159169) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927352,0.00828066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.0113894) , 
0, 0.000958289, 1, 0, 0.631062,-0.00647038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291523,-0.0245394) , 
3, 87.9821, 1, 0, 0.554617,-0.011658) , 
6, 0.0521838, 1, 0, 0.501634,-0.00180872)    );
  // itree = 302
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981753,0.0418648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.716896,0.0128668) , 
5, 0.0094294, 1, 0, 0.847978,0.00868805) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.350915,-0.0393761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808109,0.00694868) , 
6, 0.0260911, 1, 0, 0.709588,-8.90998e-05) , 
4, 0.0116111, 1, 0, 0.748686,0.0023906) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0903308,-0.0121696) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67039,0.00257167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.182911,-0.0107922) , 
5, 0.0271644, 1, 0, 0.439512,-0.000461555) , 
5, 0.0115387, 1, 0, 0.404615,-0.00155139) , 
2, 0.0714264, 1, 0, 0.497167,-0.000491033)    );
  // itree = 303
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.256201,-0.0105308) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650791,0.00491132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453351,-0.00223218) , 
4, 0.0202933, 1, 0, 0.54199,0.000401693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.27972,-0.00258232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210213,-0.00824126) , 
2, 0.455671, 1, 0, 0.238936,-0.00523622) , 
2, 0.428467, 1, 0, 0.513086,-0.000136035) , 
5, 0.00578211, 1, 0, 0.500721,-0.000516925)    );
  // itree = 304
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244948,-0.0212589) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658035,0.0089752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529393,-0.00130178) , 
3, 25.2306, 1, 0, 0.56908,0.000804034) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763821,-0.00948817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0971937,0.00176274) , 
0, 0.00191952, 1, 0, 0.269345,-0.00520136) , 
2, 0.357044, 1, 0, 0.511245,-0.000354728) , 
5, 0.00579096, 1, 0, 0.497889,-0.00117456)    );
  // itree = 305
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.254586,-0.0152611) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981134,0.00647924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844326,-0.00526762) , 
0, 0.000274852, 1, 0, 0.908139,-0.00383144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00116236,0.00563663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131412) , 
4, 0.0202865, 1, 0, 0.000378234,-0.000516245) , 
0, 0.00288677, 1, 0, 0.513439,-0.00238998) , 
5, 0.00578211, 1, 0, 0.500703,-0.00291108)    );
  // itree = 306
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93923,0.00154798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949679,0.0329662) , 
0, 0.00174035, 1, 0, 0.940023,0.00356844) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.501442,-0.0103816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000311964,-0.00823563) , 
0, 0.00279682, 1, 0, 0.0362026,-0.00240432) , 
0, 0.00192505, 1, 0, 0.489798,0.000593199) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726332,-0.016802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926853,-0.00716461) , 
5, 0.0281054, 1, 0, 0.82707,-0.0174386) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.390388,-0.00823779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461677,0.0194978) , 
6, 0.0583949, 1, 0, 0.411271,-0.00103365) , 
0, 0.00191187, 1, 0, 0.547325,-0.00640151) , 
6, 0.0521838, 1, 0, 0.499122,-0.000540539)    );
  // itree = 307
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.262113,0.0174763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464432,0.00317406) , 
4, 0.00663387, 1, 0, 0.327193,0.00531396) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843146,-0.00372144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.310779,-0.016503) , 
5, 0.0242754, 1, 0, 0.696787,-0.00505441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637752,0.00971903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00022579,-0.021314) , 
4, 0.0310628, 1, 0, 0.239294,-0.000137993) , 
4, 0.0260892, 1, 0, 0.513528,-0.00308503) , 
4, 0.00870446, 1, 0, 0.495447,-0.00227003)    );
  // itree = 308
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959305,0.0112147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827654,-0.0179421) , 
4, 0.0160101, 1, 0, 0.936716,-3.15867e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.011335,-0.0211507) , 
0, 0.00136139, 1, 0, 0.602287,-0.00378156) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775691,0.0106096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224706,-0.00706542) , 
5, 0.0270677, 1, 0, 0.503083,0.00218794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0921262,-0.0137615) , 
3, 125.981, 1, 0, 0.449969,0.000923035) , 
5, 0.0172311, 1, 0, 0.496015,-0.000499182)    );
  // itree = 309
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741797,-0.0139538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887754,0.00780858) , 
4, 0.0133271, 1, 0, 0.840118,-0.0010689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0219011) , 
4, 0.0232555, 1, 0, 0.668431,-0.00483739) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240499,-0.0191897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131043) , 
0, 0.00746747, 1, 0, 0.0710386,-0.00912782) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959406,0.0187363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.74699e-05,-0.0118413) , 
0, 0.00288758, 1, 0, 0.435089,0.00508526) , 
4, 0.0232319, 1, 0, 0.330748,0.00101161) , 
5, 0.0229823, 1, 0, 0.498399,-0.00189228)    );
  // itree = 310
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982522,0.00265436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855429,-0.00598172) , 
0, 0.00027479, 1, 0, 0.91573,-0.00414068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67008,-0.0111338) , 
2, 0.404638, 1, 0, 0.8975,-0.00600622) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0015462,0.0196133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.58052e-05,-0.0115071) , 
4, 0.0299029, 1, 0, 5.31504e-05,-0.000794761) , 
4, 0.01742, 1, 0, 0.000462807,-0.000323477) , 
0, 0.00288677, 1, 0, 0.49595,-0.0034624)    );
  // itree = 311
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990947,0.0191014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987988,-0.0176888) , 
4, 0.0116375, 1, 0, 0.989675,0.000489638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529773,-0.0299851) , 
0, 0.000950997, 1, 0, 0.799887,-0.00594515) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.327136,-0.0103297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541399,8.75616e-05) , 
5, 0.0111236, 1, 0, 0.517153,-0.000807872) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694971,0.0170164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000329511,-0.00539607) , 
0, 0.00288425, 1, 0, 0.142865,0.00635088) , 
3, 113.385, 1, 0, 0.461454,0.000257452) , 
2, 0.0238042, 1, 0, 0.499857,-0.000446386)    );
  // itree = 312
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940633,-0.00783835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.193182,0.00016907) , 
0, 0.000962442, 1, 0, 0.392458,-0.00143272) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832752,-0.0113964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814872,0.0140397) , 
2, 0.356707, 1, 0, 0.829108,-0.00741738) , 
7, 0.000466018, 1, 0, 0.486448,-0.00272093) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638581,0.00137063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566863,0.0159258) , 
2, 0.214059, 1, 0, 0.601509,0.00589834) , 
6, 0.05798, 1, 0, 0.49277,-0.00224732)    );
  // itree = 313
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981091,-0.00207505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962629,0.0261236) , 
2, 0.308466, 1, 0, 0.978488,0.00165865) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84862,-0.00607297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643568,-0.0140237) , 
3, 86.9203, 1, 0, 0.816809,-0.0142553) , 
0, 0.000274852, 1, 0, 0.891415,-0.00691186) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000212418,-0.00816053) , 
4, 0.0319183, 1, 0, 0.000100952,-0.00066345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00131674,0.00726267) , 
2, 0.380843, 1, 0, 0.000386296,-0.000398392) , 
0, 0.00288758, 1, 0, 0.498175,-0.00403725)    );
  // itree = 314
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686336,0.00981571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288164,-0.00404114) , 
2, 0.30916, 1, 0, 0.591599,0.00252245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903883,-0.00838383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000427761,-0.00577413) , 
0, 0.00288664, 1, 0, 0.52843,-0.00500853) , 
3, 32.4347, 1, 0, 0.555754,-0.001751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678344,0.0130837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131028) , 
0, 0.00288725, 1, 0, 0.159524,0.0057765) , 
3, 113.537, 1, 0, 0.501293,-0.00071636)    );
  // itree = 315
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864863,-0.00769237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944346,0.0757761) , 
5, 0.00828138, 1, 0, 0.904025,0.00144727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196586,-0.0144492) , 
2, 0.0475667, 1, 0, 0.486422,-0.00887556) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466571,-0.0094641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637303,0.0124208) , 
4, 0.0144974, 1, 0, 0.609813,0.00413014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627756,-0.0125822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383319,5.16807e-05) , 
2, 0.11892, 1, 0, 0.466781,-0.00222654) , 
3, 25.2309, 1, 0, 0.508168,-0.000387184) , 
5, 0.0115387, 1, 0, 0.505064,-0.0015988)    );
  // itree = 316
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853664,0.00869926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619571,-0.00715792) , 
4, 0.0172072, 1, 0, 0.73845,-0.00088945) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762247,0.0316377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552557,0.0238349) , 
4, 0.0201947, 1, 0, 0.663243,0.0115048) , 
2, 0.0725446, 1, 0, 0.725994,0.00116319) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65361,-0.0193087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907665,-0.00517596) , 
5, 0.0161231, 1, 0, 0.863772,-0.012191) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.171477,0.00439322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391933,-0.00479901) , 
6, 0.0434949, 1, 0, 0.249385,-0.000473305) , 
0, 0.000962526, 1, 0, 0.380691,-0.00297758) , 
2, 0.0952352, 1, 0, 0.493595,-0.00162366)    );
  // itree = 317
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.462716,-0.0090385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535729,0.00819854) , 
3, 4.19916, 1, 0, 0.50987,0.000549675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86671,0.0216863) , 
7, 0.000543648, 1, 0, 0.583406,0.00244691) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683896,-0.0148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593066,0.00381225) , 
5, 0.00784774, 1, 0, 0.600437,0.000308329) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885768,-0.00862816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151829,0.000544875) , 
0, 0.00192505, 1, 0, 0.403073,-0.00346714) , 
4, 0.0203077, 1, 0, 0.486656,-0.00186824) , 
3, 12.5987, 1, 0, 0.501275,-0.00121624)    );
  // itree = 318
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815675,-0.0167225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695994,0.0194435) , 
3, 12.598, 1, 0, 0.715625,0.00493428) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926611,-0.0144402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372937,0.00261673) , 
0, 0.000961416, 1, 0, 0.535565,-0.00220112) , 
4, 0.0173994, 1, 0, 0.605758,0.000580506) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776633,0.00901275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912914,0.00653628) , 
6, 0.0465404, 1, 0, 0.849574,0.0087442) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684335,-0.00935582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000559376,-0.00520465) , 
0, 0.00280202, 1, 0, 0.168677,-0.00660945) , 
0, 0.000961838, 1, 0, 0.276827,-0.00417077) , 
2, 0.261897, 1, 0, 0.495009,-0.00101922)    );
  // itree = 319
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227676,0.023281) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502524,-0.0242444) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688891,0.00481663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444119,-0.00267825) , 
4, 0.0184283, 1, 0, 0.516262,-0.000308396) , 
4, 0.00844439, 1, 0, 0.515749,-0.000798225) , 
4, 0.00580491, 1, 0, 0.499812,-0.000147485)    );
  // itree = 320
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611308,-0.00580918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510291,-0.0182503) , 
7, 0.000233893, 1, 0, 0.594546,-0.00755733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775529,0.0264057) , 
5, 0.0164405, 1, 0, 0.613313,-0.00551902) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850208,0.0131523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260154,-0.0124196) , 
4, 0.0262477, 1, 0, 0.755072,0.00475613) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000809217,-0.0243244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.294753,0.00804053) , 
4, 0.0260933, 1, 0, 0.192108,-0.00278443) , 
5, 0.0271184, 1, 0, 0.456559,0.000757733) , 
5, 0.0172657, 1, 0, 0.504576,-0.00116497)    );
  // itree = 321
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65063,-0.00706276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459018,0.0109562) , 
3, 62.629, 1, 0, 0.590989,-0.000767108) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.464505,-0.0219581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934685,0.0347197) , 
5, 0.0159928, 1, 0, 0.660196,-0.0160391) , 
7, 0.000225602, 1, 0, 0.608707,-0.00467706) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944384,0.00789789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00332082,-0.0207477) , 
0, 0.00235459, 1, 0, 0.730532,0.00263807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000161601,-0.0339959) , 
6, 0.0376926, 1, 0, 6.67966e-05,-0.00456652) , 
5, 0.031995, 1, 0, 0.45815,-4.84321e-05) , 
5, 0.0172375, 1, 0, 0.503249,-0.00143491)    );
  // itree = 322
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.246212,-0.0210709) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600522,-0.010813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494133,0.000825544) , 
5, 0.0110358, 1, 0, 0.503993,-0.000243357) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627321,-0.0235841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575756,0.00472445) , 
2, 0.19029, 1, 0, 0.600393,-0.0107054) , 
6, 0.0579816, 1, 0, 0.509556,-0.000847053) , 
5, 0.00578109, 1, 0, 0.497716,-0.00150664)    );
  // itree = 323
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952592,0.0119792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822515,-0.017346) , 
4, 0.0162189, 1, 0, 0.931145,0.00139467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0144795,-0.0229718) , 
0, 0.00135385, 1, 0, 0.608479,-0.00359352) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0382965,-0.0237213) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.35475,0.023286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760074,-0.0032756) , 
6, 0.043495, 1, 0, 0.541343,0.00105504) , 
4, 0.0174016, 1, 0, 0.460913,-0.000340343) , 
5, 0.0173033, 1, 0, 0.506572,-0.00134692)    );
  // itree = 324
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435371,-5.62069e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821483,-0.013319) , 
7, 0.000203481, 1, 0, 0.524595,-0.00369265) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917446,-0.0114365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843862,0.0243498) , 
0, 0.00132438, 1, 0, 0.879627,0.00507262) , 
7, 0.000295252, 1, 0, 0.691498,0.000427955) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885513,-0.0148228) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0588465,-0.0225325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.102611,0.0307391) , 
4, 0.0289936, 1, 0, 0.0820182,-0.00160088) , 
0, 0.00192488, 1, 0, 0.143818,-0.00354439) , 
5, 0.0282576, 1, 0, 0.504012,-0.000931887)    );
  // itree = 325
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990425,0.0334556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584025,-0.00757578) , 
0, 0.000739756, 1, 0, 0.811025,0.00239212) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222302,-0.0157104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.107446,-0.00682829) , 
3, 49.9579, 1, 0, 0.158991,-0.0107823) , 
2, 0.0952167, 1, 0, 0.511838,-0.00365302) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930877,0.0321931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1475,-0.0177868) , 
4, 0.0167077, 1, 0, 0.406984,-0.00378904) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.797152,0.0112657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0207655) , 
5, 0.0319955, 1, 0, 0.527263,0.00299151) , 
5, 0.0172439, 1, 0, 0.503256,0.00163819) , 
4, 0.0145011, 1, 0, 0.505316,0.000368297)    );
  // itree = 326
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.786863,-0.0196246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940738,0.0400407) , 
7, 6.45901e-05, 1, 0, 0.871987,-0.00133764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.08289,-0.0132928) , 
2, 0.0713882, 1, 0, 0.476588,-0.00679132) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845637,0.00345576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00173414,-0.0213504) , 
5, 0.0293725, 1, 0, 0.653549,0.000369908) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712554,-0.0121257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131071) , 
0, 0.00288677, 1, 0, 0.121277,-0.0041918) , 
4, 0.0289816, 1, 0, 0.503093,-0.000919538) , 
5, 0.0115001, 1, 0, 0.499196,-0.00178288)    );
  // itree = 327
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91501,0.0137288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.266724,-0.0173122) , 
5, 0.0193092, 1, 0, 0.739702,0.00337417) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.469334,-0.0127785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478052,0.0046868) , 
5, 0.0229688, 1, 0, 0.475223,-0.00141671) , 
4, 0.0203168, 1, 0, 0.60539,0.000941192) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47571,-0.0102246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905171,0.000674487) , 
5, 0.0213045, 1, 0, 0.759093,-0.0103772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000469052,-0.00493074) , 
0, 0.00288733, 1, 0, 0.284107,-0.00405519) , 
2, 0.285706, 1, 0, 0.510596,-0.000532988)    );
  // itree = 328
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941948,0.000577194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742745,-0.0131967) , 
4, 0.0239311, 1, 0, 0.92082,-0.00189252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918684,-0.0189071) , 
5, 0.0260754, 1, 0, 0.9206,-0.00378589) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000862937,-0.0115377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00320158,0.0197007) , 
2, 0.380874, 1, 0, 0.00142598,-0.000965924) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984985,0.0437536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421163,-0.00442798) , 
0, 0.00221544, 1, 0, 0.755302,0.0110554) , 
7, 0.000534736, 1, 0, 0.112348,0.000802841) , 
0, 0.00192505, 1, 0, 0.497351,-0.00138296)    );
  // itree = 329
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963207,-0.0104552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528779,0.0216646) , 
0, 0.000570199, 1, 0, 0.716227,0.00504966) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0255843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131009) , 
4, 0.0365664, 1, 0, 0,-0.00209293) , 
4, 0.014492, 1, 0, 0.327738,0.00117545) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990969,0.00330553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838756,-0.00929687) , 
0, 9.15826e-05, 1, 0, 0.922664,-0.00751837) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135022,-0.00980653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282328,0.0133593) , 
4, 0.0260888, 1, 0, 0.2191,-0.00030711) , 
0, 0.00192505, 1, 0, 0.607054,-0.00428349) , 
6, 0.0289979, 1, 0, 0.501804,-0.00222648)    );
  // itree = 330
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.25623,0.0211365) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758392,0.0025733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419882,-0.00533166) , 
2, 0.142847, 1, 0, 0.578546,-0.00154774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839799,-0.0152829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0462482,-0.00294811) , 
0, 0.00192488, 1, 0, 0.272257,-0.0081692) , 
3, 88.3067, 1, 0, 0.513748,-0.00294856) , 
4, 0.00580638, 1, 0, 0.500362,-0.00233401)    );
  // itree = 331
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947352,-0.00655612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398765,0.00895223) , 
0, 0.000960715, 1, 0, 0.597364,0.00098429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530355,-0.0256366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53233,-0.00566369) , 
3, 36.845, 1, 0, 0.532169,-0.00467593) , 
3, 33.6407, 1, 0, 0.562399,-0.00205138) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770537,0.00907861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131045) , 
0, 0.00288758, 1, 0, 0.200732,0.00332882) , 
3, 100.922, 1, 0, 0.500722,-0.00113388)    );
  // itree = 332
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.422248,-0.0142776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64893,0.000643671) , 
5, 0.00797131, 1, 0, 0.502189,-0.00700503) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954937,0.010286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00119545,-0.00772591) , 
0, 0.00192488, 1, 0, 0.447773,0.00215904) , 
5, 0.0098401, 1, 0, 0.455109,0.000923596) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641447,-0.0223119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.325664,-0.00859688) , 
2, 0.190276, 1, 0, 0.470525,-0.0131883) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.138797,-0.0184787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793468,0.00811382) , 
4, 0.0232276, 1, 0, 0.623783,-0.000261968) , 
5, 0.0230066, 1, 0, 0.590568,-0.00306341) , 
6, 0.0434945, 1, 0, 0.500986,-0.000426722)    );
  // itree = 333
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579956,-0.00130447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631981,-0.00864151) , 
6, 0.0405976, 1, 0, 0.599086,-0.00270487) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00100547,-0.0120965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73768,0.00994863) , 
7, 0.000184225, 1, 0, 0.332577,0.00346775) , 
2, 0.269653, 1, 0, 0.54164,-0.00137435) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68714,-0.00876902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0843041,-0.00749495) , 
0, 0.00192505, 1, 0, 0.219122,-0.00744398) , 
2, 0.404515, 1, 0, 0.498926,-0.0021782)    );
  // itree = 334
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225456,-0.0238605) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723231,-0.00790645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330659,0.00583013) , 
5, 0.0210398, 1, 0, 0.500727,-0.00127752) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939223,0.0122165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422661,-0.0143607) , 
0, 0.000956104, 1, 0, 0.583548,-0.00947639) , 
6, 0.0550847, 1, 0, 0.509666,-0.00216242) , 
5, 0.00577224, 1, 0, 0.495424,-0.00288104)    );
  // itree = 335
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.420879,-0.0100922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799016,0.0212274) , 
6, 0.0124342, 1, 0, 0.722776,0.00569662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0189764) , 
4, 0.0145821, 1, 0, 0.338346,0.00160223) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978992,0.00980084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.841681,-0.00983033) , 
0, 0.00027479, 1, 0, 0.905656,-0.00728139) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00265319,0.0576158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131394) , 
6, 0.0441807, 1, 0, 0.00126958,0.000600726) , 
0, 0.00288758, 1, 0, 0.597771,-0.00459804) , 
6, 0.0289967, 1, 0, 0.504535,-0.00236969)    );
  // itree = 336
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.407765,-0.00220875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63272,0.00946324) , 
6, 0.0372352, 1, 0, 0.451931,0.000214285) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871929,-0.013328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131011) , 
0, 0.00288608, 1, 0, 0.269742,-0.00477378) , 
6, 0.0434421, 1, 0, 0.418165,-0.00071019) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532482,-0.0108195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711576,-0.0103461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969124,0.0300421) , 
4, 0.0252595, 1, 0, 0.888806,0.00786865) , 
5, 0.0238002, 1, 0, 0.83284,0.00367086) , 
7, 0.000534737, 1, 0, 0.498742,0.000141107)    );
  // itree = 337
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508671,-0.0150442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599451,0.00970674) , 
5, 0.01065, 1, 0, 0.585626,0.00265992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618915,-0.00650939) , 
6, 0.0550822, 1, 0, 0.589587,0.00153471) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968234,-0.000998118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802427,-0.00710435) , 
0, 0.00027479, 1, 0, 0.879079,-0.00626521) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00161886,0.0206342) , 
6, 0.0405773, 1, 0, 0.000485218,-0.000133827) , 
0, 0.00288551, 1, 0, 0.446466,-0.00324616) , 
3, 25.174, 1, 0, 0.488528,-0.00184111)    );
  // itree = 338
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70958,-0.0055667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377742,0.0053196) , 
5, 0.0214815, 1, 0, 0.545734,-0.00122517) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.315075,0.0138798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0808567,0.0170385) , 
5, 0.0219028, 1, 0, 0.15572,0.00576888) , 
3, 113.537, 1, 0, 0.494577,-0.000307777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630159,-0.0149279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689414,0.00763812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430274,-0.00402886) , 
1, 1.07746, 1, 0, 0.565165,0.00166099) , 
5, 0.0290213, 1, 0, 0.591433,-0.00551205) , 
6, 0.0550842, 1, 0, 0.504668,-0.000849975)    );
  // itree = 339
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.261266,-0.0124489) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741641,0.000286327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.36137,-0.0180475) , 
6, 0.0434819, 1, 0, 0.704285,-0.00246978) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76352,0.00902611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195661,-0.00410407) , 
5, 0.0269356, 1, 0, 0.357445,0.000781041) , 
5, 0.0222342, 1, 0, 0.513006,-0.000676984) , 
5, 0.00577507, 1, 0, 0.501322,-0.00107952)    );
  // itree = 340
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802833,0.0139914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552738,-0.00887148) , 
4, 0.0203174, 1, 0, 0.67984,1.8416e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.304949,-0.0127774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.323339,0.0085502) , 
4, 0.0231472, 1, 0, 0.316029,-0.00546581) , 
2, 0.285645, 1, 0, 0.576704,-0.00154818) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94686,-0.0042917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74726,-0.0181543) , 
0, 0.000274726, 1, 0, 0.850086,-0.023792) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.105573,-0.0165057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0387986,0.00722342) , 
3, 102.722, 1, 0, 0.0616606,-0.00126612) , 
0, 0.00192505, 1, 0, 0.314022,-0.00847628) , 
3, 75.6861, 1, 0, 0.504162,-0.00346144)    );
  // itree = 341
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.314777,0.0116461) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647077,-0.0135262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.360899,-0.00352166) , 
5, 0.014392, 1, 0, 0.445945,-0.00307752) , 
4, 0.00580638, 1, 0, 0.437112,-0.00229595) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906994,-0.00419357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682619,0.0121932) , 
0, 0.00139779, 1, 0, 0.779329,0.00479267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0305257) , 
5, 0.0345151, 1, 0, 0.590422,0.00307342) , 
6, 0.040586, 1, 0, 0.498718,-0.000138324)    );
  // itree = 342
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.258034,-0.0182356) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706179,0.0155111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0342198,-0.0123321) , 
5, 0.0112805, 1, 0, 0.152965,0.000232853) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832193,-0.00888493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808676,-0.000315651) , 
5, 0.0207378, 1, 0, 0.819148,-0.0040919) , 
7, 0.000144607, 1, 0, 0.509476,-0.00208156) , 
5, 0.00577507, 1, 0, 0.497426,-0.00262193)    );
  // itree = 343
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247363,-0.0152458) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948037,0.00447521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0381383,-0.00717542) , 
0, 0.00192505, 1, 0, 0.493283,0.000923777) , 
5, 0.00532848, 1, 0, 0.481551,0.000272203) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586004,-0.0229006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768404,-0.00960414) , 
1, 1.14159, 1, 0, 0.683658,-0.0147118) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490885,0.00392392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387897,-0.00685754) , 
2, 0.285832, 1, 0, 0.452836,-0.000510937) , 
5, 0.028775, 1, 0, 0.556664,-0.00689876) , 
6, 0.0521838, 1, 0, 0.493555,-0.000873755)    );
  // itree = 344
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956304,-0.0040661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.820583,-0.00609307) , 
2, 0.190151, 1, 0, 0.912649,-0.0044715) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00265319,0.0371818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.9276e-05,-0.011744) , 
4, 0.0203343, 1, 0, 0.00091179,0.000182479) , 
0, 0.00288677, 1, 0, 0.560031,-0.00267156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.390758,0.0228793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119091,-0.00973069) , 
5, 0.0222685, 1, 0, 0.206961,0.00240527) , 
3, 100.924, 1, 0, 0.50105,-0.00182345)    );
  // itree = 345
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640991,0.00268038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498204,-0.00492723) , 
4, 0.0174011, 1, 0, 0.547833,-0.00111585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.207537,-0.00958153) , 
2, 0.387605, 1, 0, 0.52772,-0.00163653) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287665,0.0271055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.199909,0.00299055) , 
2, 0.462458, 1, 0, 0.242623,0.00633485) , 
2, 0.428441, 1, 0, 0.501173,-0.000894258)    );
  // itree = 346
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993346,0.0106156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864386,-0.00885872) , 
0, 9.15976e-05, 1, 0, 0.933163,-0.00596517) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.11454,-0.00487149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596049,0.0309322) , 
6, 0.0579817, 1, 0, 0.15137,-0.000118789) , 
0, 0.00192405, 1, 0, 0.575728,-0.00329221) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.348584,0.00305097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816437,0.0132881) , 
7, 0.000389827, 1, 0, 0.511672,0.00634305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0433775) , 
5, 0.033299, 1, 0, 0.314343,0.00284727) , 
3, 75.6854, 1, 0, 0.502669,-0.00157619)    );
  // itree = 347
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.216403,0.0103223) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850091,0.0149576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172015,-0.0195165) , 
2, 0.0951954, 1, 0, 0.580863,-0.00701637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.720634,0.00909991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446573,-0.00461147) , 
4, 0.0181771, 1, 0, 0.495082,-0.00118501) , 
4, 0.0136811, 1, 0, 0.509144,-0.0021409) , 
4, 0.00580854, 1, 0, 0.492473,-0.00180351)    );
  // itree = 348
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721649,0.0110195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486854,-0.00103329) , 
4, 0.0202924, 1, 0, 0.589271,0.00211138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578968,0.0538432) , 
3, 10.1971, 1, 0, 0.587361,0.00349494) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979401,0.00873771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839533,-0.00731887) , 
0, 0.000274764, 1, 0, 0.914401,-0.00424701) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00244689,-0.00930451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147669,0.00447549) , 
5, 0.0230519, 1, 0, 0.109377,-0.000161281) , 
0, 0.00192451, 1, 0, 0.48351,-0.00206012) , 
3, 12.5973, 1, 0, 0.498941,-0.00123472)    );
  // itree = 349
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902116,-0.00612918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977596,0.0310077) , 
7, 0.000113246, 1, 0, 0.953594,0.00740939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00219225,-0.0194487) , 
0, 0.00155337, 1, 0, 0.588687,0.00200225) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911367,-0.00714045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000154554,-0.00970347) , 
0, 0.00288438, 1, 0, 0.505376,-0.00396439) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852553,0.00876334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1059,-7.68019e-05) , 
0, 0.00191956, 1, 0, 0.316088,0.00286597) , 
2, 0.333247, 1, 0, 0.455482,-0.00216398) , 
4, 0.0173943, 1, 0, 0.498834,-0.000808064)    );
  // itree = 350
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595059,-0.0166139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86813,0.000654577) , 
4, 0.00773469, 1, 0, 0.839907,-0.00168849) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.329862,-0.0204262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131018) , 
0, 0.00583317, 1, 0, 0.0804496,-0.0110661) , 
5, 0.0229306, 1, 0, 0.641116,-0.00414312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0193216) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809088,0.0182811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0254605) , 
5, 0.032371, 1, 0, 0.443819,0.00358264) , 
5, 0.0230124, 1, 0, 0.347078,0.000403699) , 
4, 0.0231899, 1, 0, 0.504709,-0.00203381)    );
  // itree = 351
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939789,0.003004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00642964,-0.0206429) , 
0, 0.00136139, 1, 0, 0.605482,-0.00246875) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619514,0.00262571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000186743,-0.0156621) , 
4, 0.0289936, 1, 0, 0.448717,0.000144844) , 
5, 0.0165887, 1, 0, 0.493709,-0.00060526) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609934,-0.00173073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587839,-0.014862) , 
2, 0.214268, 1, 0, 0.599072,-0.00745475) , 
6, 0.0579807, 1, 0, 0.499347,-0.000971825)    );
  // itree = 352
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.232487,0.0227431) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793488,0.00384542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48766,-0.00368846) , 
2, 0.0714427, 1, 0, 0.575855,-0.00124637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.36027,-0.0297759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173776,-0.00089164) , 
2, 0.0951763, 1, 0, 0.217991,-0.00771041) , 
3, 100.637, 1, 0, 0.514046,-0.00236283) , 
4, 0.00580638, 1, 0, 0.498707,-0.00173889)    );
  // itree = 353
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240027,-0.0115345) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914556,0.00648634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000186166,-0.00946461) , 
0, 0.00384811, 1, 0, 0.590594,0.00267401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726953,-0.0185976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388313,0.000354532) , 
2, 0.0238291, 1, 0, 0.417857,-0.000574717) , 
3, 50.4612, 1, 0, 0.512873,0.00121228) , 
5, 0.00579442, 1, 0, 0.499275,0.000725595)    );
  // itree = 354
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899449,6.44173e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921488,0.0134303) , 
5, 0.020445, 1, 0, 0.90927,0.0036717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000158706,-0.00985167) , 
0, 0.00384585, 1, 0, 0.581859,0.00217652) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558561,-0.0105794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666214,0.0226591) , 
6, 0.0550823, 1, 0, 0.569213,-0.0049094) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547504,-0.00657513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.266413,0.00727405) , 
2, 0.142825, 1, 0, 0.377656,0.000545218) , 
3, 59.3956, 1, 0, 0.465657,-0.00196064) , 
3, 25.1996, 1, 0, 0.500862,-0.000707236)    );
  // itree = 355
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.501165,0.0058989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00242129,-0.0175009) , 
2, 0.33313, 1, 0, 0.396652,-0.000452649) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69233,0.0106165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46161,0.0322994) , 
2, 0.30922, 1, 0, 0.636115,0.00757748) , 
6, 0.0372824, 1, 0, 0.442109,0.0010717) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545926,-0.0158787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415083,-0.00286241) , 
3, 50.084, 1, 0, 0.486419,-0.0120075) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0955069,-0.0223211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79579,0.00537331) , 
4, 0.0231488, 1, 0, 0.622279,-0.00164779) , 
5, 0.0230519, 1, 0, 0.592311,-0.00393291) , 
6, 0.043495, 1, 0, 0.492367,-0.000602849)    );
  // itree = 356
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.100701,-0.0184016) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.169576,0.045898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.543138,0.00986876) , 
4, 0.00663604, 1, 0, 0.293386,0.00764815) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7237,0.0028221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.427009,-0.00468187) , 
2, 0.142822, 1, 0, 0.561387,-0.00133137) , 
4, 0.00871115, 1, 0, 0.538779,-0.000573865) , 
6, 0.00870803, 1, 0, 0.500987,-0.00107989)    );
  // itree = 357
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991181,-0.00684883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0892935) , 
6, 0.0550664, 1, 0, 0.992231,0.000942532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.528979,-0.0170036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8763,-0.0057295) , 
0, 0.000616047, 1, 0, 0.834841,-0.0150219) , 
0, 9.16609e-05, 1, 0, 0.917228,-0.00666525) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00135396,0.00843376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00276478,-0.0133223) , 
6, 0.0305024, 1, 0, 0.00184942,-0.00127789) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517273,0.0253619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.266989,-0.00231487) , 
3, 62.9384, 1, 0, 0.415124,0.00497541) , 
6, 0.0492859, 1, 0, 0.117336,0.000469558) , 
0, 0.00192488, 1, 0, 0.501591,-0.00295788)    );
  // itree = 358
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995993,0.0167624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748621,-0.0117715) , 
0, 4.57784e-05, 1, 0, 0.940842,-0.00516042) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144759,-0.00415498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.830311,0.0131246) , 
7, 0.000333176, 1, 0, 0.287718,0.00172919) , 
0, 0.000962442, 1, 0, 0.489459,-0.000398906) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823742,-0.0205456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887819,-0.0103846) , 
7, 0.000792618, 1, 0, 0.856118,-0.0176044) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526046,0.0163917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.367267,-0.0170926) , 
3, 37.743, 1, 0, 0.434131,-0.00198368) , 
0, 0.00191658, 1, 0, 0.575363,-0.00721167) , 
6, 0.0521838, 1, 0, 0.503071,-0.00147849)    );
  // itree = 359
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930525,-0.0062926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164445,0.0088194) , 
0, 0.00192292, 1, 0, 0.596473,-0.00194443) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569839,-0.033573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596106,-0.0130354) , 
3, 35.0113, 1, 0, 0.582491,-0.0198003) , 
3, 32.4362, 1, 0, 0.594743,-0.00415282) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925171,0.0084164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00293871,-0.0183741) , 
0, 0.000962442, 1, 0, 0.121383,-0.00163159) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79955,0.0123735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757653,-0.003142) , 
4, 0.0225249, 1, 0, 0.781591,0.00348901) , 
7, 0.000144606, 1, 0, 0.428197,0.000748077) , 
3, 37.8477, 1, 0, 0.498577,-0.00132295)    );
  // itree = 360
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538624,-0.0211785) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495529,-0.0170662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604264,-0.00402689) , 
5, 0.0113247, 1, 0, 0.58659,-0.00371154) , 
3, 2.40998, 1, 0, 0.581795,-0.0049448) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705481,0.00686883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553017,-0.0123668) , 
2, 0.0748117, 1, 0, 0.648985,-0.00138948) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.50024,0.00810863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118337,-0.00815169) , 
5, 0.0277874, 1, 0, 0.319244,0.00208693) , 
2, 0.142853, 1, 0, 0.46098,0.000592632) , 
3, 25.2372, 1, 0, 0.497001,-0.00105838)    );
  // itree = 361
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708874,-0.0155742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497061,-0.00227263) , 
5, 0.00722372, 1, 0, 0.522817,-0.00409018) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7675,0.0104001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148939,-0.0104125) , 
4, 0.0211648, 1, 0, 0.379662,0.000491583) , 
4, 0.0145425, 1, 0, 0.421642,-0.000852005) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874544,-0.0263414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890861,-0.00190156) , 
7, 0.000684407, 1, 0, 0.883355,-0.0148368) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941991,0.031069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726487,-0.00571856) , 
6, 0.0512349, 1, 0, 0.788013,0.00211227) , 
0, 0.00179141, 1, 0, 0.833154,-0.00591258) , 
7, 0.000535426, 1, 0, 0.502521,-0.00184662)    );
  // itree = 362
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905166,-0.00662963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947826,0.00917634) , 
5, 0.0163844, 1, 0, 0.928824,0.000402922) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83546,-0.0254214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931329,-0.00667952) , 
4, 0.0258219, 1, 0, 0.896509,-0.0255584) , 
5, 0.024504, 1, 0, 0.923472,-0.00389684) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657955,-0.00483272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00047992,-0.00124256) , 
0, 0.00279661, 1, 0, 0.0697159,-0.000851302) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.391023,0.0417553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468037,0.0194582) , 
6, 0.058119, 1, 0, 0.429608,0.010827) , 
6, 0.0550824, 1, 0, 0.117377,0.000695268) , 
0, 0.00192484, 1, 0, 0.506074,-0.00151904)    );
  // itree = 363
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713219,-0.002567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564303,0.0281509) , 
3, 25.1902, 1, 0, 0.611242,0.005144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73467,-0.0196741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692298,0.0060511) , 
6, 0.0396314, 1, 0, 0.709238,-0.0016573) , 
6, 0.0289967, 1, 0, 0.670783,0.0010116) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842336,-0.0072431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853765,0.0110807) , 
0, 0.0016499, 1, 0, 0.844205,-0.00700409) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000544391,-0.00962043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711786,0.00837503) , 
7, 0.000546944, 1, 0, 0.0980268,0.00025576) , 
0, 0.00192488, 1, 0, 0.339415,-0.0020928) , 
2, 0.166626, 1, 0, 0.506014,-0.000532031)    );
  // itree = 364
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910916,0.00830782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701545,-0.013772) , 
4, 0.0172691, 1, 0, 0.828689,-0.00233426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660372,-0.0329377) , 
3, 70.5818, 1, 0, 0.79103,-0.00655956) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0628299,-0.0142399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594368,0.00128498) , 
6, 0.0174277, 1, 0, 0.506566,-7.54104e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0766945,0.0115675) , 
3, 138.756, 1, 0, 0.464535,0.000485947) , 
2, 0.0238088, 1, 0, 0.501837,-0.000318986)    );
  // itree = 365
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.232997,0.0210537) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712396,0.00181264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573785,-0.01605) , 
3, 37.7505, 1, 0, 0.638471,-0.00453213) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864829,0.00625957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.101869,-0.0068688) , 
0, 0.00192484, 1, 0, 0.324463,0.000894505) , 
2, 0.21414, 1, 0, 0.511413,-0.00233632) , 
4, 0.00580638, 1, 0, 0.496316,-0.00173194)    );
  // itree = 366
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984903,-0.0224111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993307,0.0267294) , 
5, 0.0176528, 1, 0, 0.990026,0.00115997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523148,-0.0100224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839308,-0.00475816) , 
0, 0.000661615, 1, 0, 0.813088,-0.00968744) , 
0, 0.000137426, 1, 0, 0.892963,-0.00479058) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000429387,0.00191658) , 
4, 0.0405846, 1, 0, 0.000150413,-0.000374989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00178815,0.0208245) , 
2, 0.380843, 1, 0, 0.000536466,-3.02598e-05) , 
0, 0.00288733, 1, 0, 0.495083,-0.00266823)    );
  // itree = 367
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998394,0.0574995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965305,-0.0323083) , 
8, 0.260259, 1, 0, 0.99397,0.000833185) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951135,0.00471346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443609,-0.0136944) , 
2, 0.0474723, 1, 0, 0.71382,-0.022845) , 
0, 4.5761e-05, 1, 0, 0.938012,-0.00389638) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248535,-0.00247485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429825,-0.0175058) , 
7, 0.0002457, 1, 0, 0.291774,-0.00496243) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.381568,0.0138904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257145,-0.00245079) , 
5, 0.0230064, 1, 0, 0.302807,0.00150624) , 
4, 0.0173994, 1, 0, 0.299787,-0.000264101) , 
0, 0.000962526, 1, 0, 0.495923,-0.00138035)    );
  // itree = 368
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.269505,0.0149365) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.460085,-0.0163379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516438,0.000342518) , 
5, 0.0107128, 1, 0, 0.509136,-0.000953463) , 
4, 0.00582008, 1, 0, 0.495418,-0.000433262) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567854,-0.00056809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544515,-0.0241483) , 
6, 0.0537242, 1, 0, 0.551689,-0.0147001) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644253,0.00122067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584362,0.0331115) , 
3, 37.8923, 1, 0, 0.613098,0.00787114) , 
6, 0.0575683, 1, 0, 0.575316,-0.00601596) , 
6, 0.0521875, 1, 0, 0.508056,-0.00131635)    );
  // itree = 369
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823625,0.0196523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69539,-0.00994183) , 
6, 0.0464756, 1, 0, 0.8046,0.00237267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653685,-0.0125884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386157,-0.000163545) , 
2, 0.155298, 1, 0, 0.482741,-0.00238776) , 
2, 0.0476083, 1, 0, 0.551581,-0.00136959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765153,0.00845037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00054598,0.00529467) , 
0, 0.00288733, 1, 0, 0.208776,0.00345049) , 
3, 100.914, 1, 0, 0.492917,-0.000544728)    );
  // itree = 370
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611501,-0.00591829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550971,-0.0279155) , 
3, 12.3424, 1, 0, 0.602039,-0.00658914) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607238,0.00829409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492564,-0.00420007) , 
4, 0.0174437, 1, 0, 0.530385,-9.60884e-05) , 
3, 14.406, 1, 0, 0.543532,-0.00128739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.052998,-0.0152253) , 
3, 151.372, 1, 0, 0.504983,-0.00208051)    );
  // itree = 371
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994942,0.00674639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943935,-0.0160972) , 
8, 0.270765, 1, 0, 0.989587,-0.00105101) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.531511,-0.0110037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845155,-0.00556997) , 
0, 0.000664068, 1, 0, 0.81734,-0.0104748) , 
0, 0.000137395, 1, 0, 0.895298,-0.00620965) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000321769,-0.0015533) , 
3, 88.2031, 1, 0, 0.000102813,-0.000450437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00125765,0.0126969) , 
2, 0.380827, 1, 0, 0.000387389,-0.000188261) , 
0, 0.00288551, 1, 0, 0.498461,-0.00353954)    );
  // itree = 372
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.266047,-0.018911) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680285,0.0126073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542444,-0.00290226) , 
4, 0.0174857, 1, 0, 0.59426,0.00100431) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123099,-0.0144942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353341,-8.62109e-05) , 
4, 0.0203626, 1, 0, 0.288069,-0.00477306) , 
2, 0.309514, 1, 0, 0.517443,-0.000445104) , 
5, 0.0057652, 1, 0, 0.506207,-0.00107802)    );
  // itree = 373
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98417,-0.0633901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9971,0.0422576) , 
5, 0.0132215, 1, 0, 0.994461,0.00148478) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.503774,-0.0191456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846754,0.00349151) , 
0, 0.000569952, 1, 0, 0.696253,-0.0327352) , 
0, 4.57668e-05, 1, 0, 0.934391,-0.00540835) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448481,-0.00442534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.306384,0.0251826) , 
2, 0.135863, 1, 0, 0.38326,0.0029202) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690277,-0.0111659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0906661,-0.00447954) , 
0, 0.00188682, 1, 0, 0.164029,-0.00506726) , 
2, 0.285457, 1, 0, 0.303819,2.58437e-05) , 
0, 0.000962256, 1, 0, 0.49917,-0.00165767)    );
  // itree = 374
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.237946,0.018338) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.714391,0.000497709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0225173) , 
4, 0.0320335, 1, 0, 0.568308,-0.000453083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.120613,-0.00834035) , 
3, 125.983, 1, 0, 0.52034,-0.000924221) , 
4, 0.00580854, 1, 0, 0.505049,-0.000393376)    );
  // itree = 375
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760838,0.00615887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845158,-0.0202572) , 
4, 0.0154957, 1, 0, 0.789349,-0.000765533) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.043415,1.92146e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665586,0.0247368) , 
7, 0.000223316, 1, 0, 0.302612,0.00715051) , 
2, 0.166629, 1, 0, 0.624771,0.00191108) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230855,-0.0161265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537374,0.00786845) , 
5, 0.021468, 1, 0, 0.464154,-0.000948139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0871857,-0.0163468) , 
3, 125.972, 1, 0, 0.415319,-0.00190145) , 
4, 0.0203018, 1, 0, 0.50416,-0.000284342)    );
  // itree = 376
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.556225,0.000345643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638269,-0.0126011) , 
6, 0.052187, 1, 0, 0.569108,-0.00127967) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95341,0.0366811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0936661,0.00841142) , 
0, 0.00191729, 1, 0, 0.414662,0.00899663) , 
3, 85.8741, 1, 0, 0.546659,0.000214015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0746966,-0.0100682) , 
3, 138.757, 1, 0, 0.502687,-0.000473733)    );
  // itree = 377
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.503358,-0.0114363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762085,0.00662193) , 
5, 0.0111189, 1, 0, 0.624163,-0.00297893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467451,-0.0208488) , 
7, 0.000244197, 1, 0, 0.601393,-0.0061535) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.546994,-0.00377879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691222,-0.0169966) , 
6, 0.0579817, 1, 0, 0.558109,-0.00280781) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.126936,-0.0201166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438224,0.010022) , 
4, 0.0174128, 1, 0, 0.375222,0.0017653) , 
3, 50.3833, 1, 0, 0.472434,-0.000665495) , 
5, 0.0166827, 1, 0, 0.508133,-0.00218473)    );
  // itree = 378
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.364037,-0.0142198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549296,0.0500228) , 
6, 0.0116025, 1, 0, 0.505962,0.00358672) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0130427,-0.0157435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00709159,0.0219965) , 
3, 88.1897, 1, 0, 0.011108,-0.00154673) , 
2, 0.095209, 1, 0, 0.163328,3.23504e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944923,-0.00245488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404767,-0.0232546) , 
4, 0.0150582, 1, 0, 0.703255,-0.0142748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902535,-5.61017e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298376,-0.0199861) , 
5, 0.0299366, 1, 0, 0.833194,-0.00219231) , 
5, 0.0159398, 1, 0, 0.807042,-0.00462412) , 
7, 0.000143227, 1, 0, 0.500636,-0.00240766)    );
  // itree = 379
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751716,0.00090501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730191,0.0218372) , 
3, 14.3879, 1, 0, 0.7389,0.00362015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697351,-0.010713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538502,0.00307064) , 
2, 0.055542, 1, 0, 0.609597,-0.00164282) , 
3, 37.7635, 1, 0, 0.669658,0.000801801) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818861,-0.0106889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791018,0.00129703) , 
3, 50.1033, 1, 0, 0.807417,-0.00868938) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0016152,0.0195364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.45725e-05,-0.0108976) , 
0, 0.00949238, 1, 0, 0.000574837,2.29782e-05) , 
0, 0.00288758, 1, 0, 0.332103,-0.00355689) , 
2, 0.166629, 1, 0, 0.498583,-0.0014072)    );
  // itree = 380
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287122,0.0198666) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473909,-0.00154025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669954,0.0141356) , 
6, 0.0441666, 1, 0, 0.486205,-0.000102885) , 
4, 0.00580706, 1, 0, 0.473683,0.000586877) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985626,-0.0110597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609103,-0.013804) , 
0, 9.14306e-05, 1, 0, 0.869022,-0.0146637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.431527,0.012081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20202,-0.0172521) , 
3, 75.5391, 1, 0, 0.356471,-0.000379548) , 
0, 0.00192009, 1, 0, 0.565464,-0.00620391) , 
6, 0.0463876, 1, 0, 0.499577,-0.00132899)    );
  // itree = 381
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994612,-0.00795551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996522,0.0528557) , 
5, 0.021912, 1, 0, 0.995374,0.00189374) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574242,-0.0200938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800709,0.000153207) , 
0, 0.00061398, 1, 0, 0.69808,-0.0343804) , 
0, 4.57784e-05, 1, 0, 0.934226,-0.00556718) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00598293,-0.0258562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131016) , 
0, 0.0101378, 1, 0, 0.00165114,-0.00270879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862647,0.0168609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692928,-0.00038686) , 
6, 0.0347609, 1, 0, 0.729663,0.0025026) , 
7, 0.000144606, 1, 0, 0.313028,-0.000479833) , 
0, 0.000962418, 1, 0, 0.509153,-0.00208601)    );
  // itree = 382
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993614,0.00553846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783001,-0.0105063) , 
0, 6.53431e-05, 1, 0, 0.92338,-0.00661026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.551732,-0.0104554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901594,0.00563848) , 
6, 0.0380033, 1, 0, 0.841038,0.00148404) , 
0, 0.00137226, 1, 0, 0.8966,-0.00397771) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000108204,-0.00911744) , 
4, 0.0318634, 1, 0, 5.26488e-05,-0.000447887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00134466,0.0132364) , 
2, 0.380599, 1, 0, 0.000360819,-0.00018146) , 
0, 0.00288608, 1, 0, 0.506465,-0.0023252)    );
  // itree = 383
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71961,-0.014821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914046,-0.000449918) , 
5, 0.00787261, 1, 0, 0.900893,-0.00150548) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821469,-0.0209577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962418,0.0111013) , 
7, 0.000811476, 1, 0, 0.906296,-0.0156706) , 
5, 0.0273837, 1, 0, 0.901584,-0.00331827) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000175536,-0.00673944) , 
3, 88.1804, 1, 0, 5.75794e-05,-0.000410317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00138008,0.0136691) , 
7, -0.000293282, 1, 0, 0.000473599,-6.18787e-05) , 
0, 0.00288758, 1, 0, 0.504127,-0.00188196)    );
  // itree = 384
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68555,-0.0229941) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923208,0.0278108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903698,-0.00525962) , 
6, 0.0197341, 1, 0, 0.904834,-0.00377298) , 
5, 0.00704275, 1, 0, 0.894372,-0.00498215) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000221475,-0.00439719) , 
4, 0.0318911, 1, 0, 0.000104056,-0.000414476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00213329,0.0270646) , 
2, 0.380851, 1, 0, 0.000592549,2.75428e-05) , 
0, 0.00288725, 1, 0, 0.504668,-0.00279783)    );
  // itree = 385
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517396,0.00329645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900817,0.0170848) , 
7, 0.000485604, 1, 0, 0.601539,0.00292215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641308,-0.0135541) , 
6, 0.057982, 1, 0, 0.60407,0.00180019) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.536245,-0.0600942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881375,0.0137938) , 
8, 0.0310816, 1, 0, 0.729061,-0.0170062) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383945,-0.00424387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568538,0.0270657) , 
6, 0.0579815, 1, 0, 0.393599,-0.00180605) , 
2, 0.0238037, 1, 0, 0.427493,-0.00334182) , 
3, 37.7612, 1, 0, 0.50169,-0.00118115)    );
  // itree = 386
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.717197,0.0517393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892474,-0.0425698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791192,0.0135775) , 
5, 0.0150397, 1, 0, 0.830724,-0.000331402) , 
6, 0.0176553, 1, 0, 0.798824,0.00295902) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974434,0.00475348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801428,-0.00536981) , 
0, 0.00027479, 1, 0, 0.878569,-0.00440216) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000159378,-0.00900041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00111694,0.0106766) , 
2, 0.386272, 1, 0, 0.000398561,-0.000136915) , 
0, 0.00288733, 1, 0, 0.453852,-0.00233932) , 
2, 0.0238088, 1, 0, 0.492785,-0.00174136)    );
  // itree = 387
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960412,-0.0304511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984367,0.0223394) , 
7, 0.000176093, 1, 0, 0.979304,0.000811947) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82269,-0.0028833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852688,-0.0153117) , 
5, 0.0270426, 1, 0, 0.826947,-0.00726346) , 
0, 0.000274451, 1, 0, 0.898229,-0.00348531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00181342,0.0334802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000142358,-0.00819487) , 
4, 0.0298715, 1, 0, 0.000101462,-0.000420375) , 
4, 0.0174387, 1, 0, 0.000531732,1.02581e-05) , 
0, 0.00288733, 1, 0, 0.494565,-0.00191347)    );
  // itree = 388
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870665,0.0217769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600763,-0.0734483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828619,-0.02201) , 
6, 0.0237522, 1, 0, 0.759161,-0.0172362) , 
4, 0.00870697, 1, 0, 0.784043,-0.0113731) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712082,0.0109179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.733148,0.0318536) , 
6, 0.0434887, 1, 0, 0.717388,0.0049564) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.293659,-0.000560133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815123,-0.00798234) , 
7, 0.000534658, 1, 0, 0.407696,-0.00197019) , 
2, 0.0691198, 1, 0, 0.46008,-0.000798565) , 
2, 0.023795, 1, 0, 0.497305,-0.00201364)    );
  // itree = 389
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.2232,0.0142129) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549233,-0.0140942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416746,0.000295443) , 
4, 0.0110593, 1, 0, 0.432824,-0.000963307) , 
4, 0.00581561, 1, 0, 0.418039,-0.000391046) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762929,-0.016563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943179,0.00342387) , 
5, 0.0249506, 1, 0, 0.889399,-0.00446891) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939794,0.0511155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743511,0.00875519) , 
6, 0.0511752, 1, 0, 0.80215,0.0141318) , 
0, 0.00171166, 1, 0, 0.842844,0.0054562) , 
7, 0.000535427, 1, 0, 0.498818,0.000720834)    );
  // itree = 390
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593696,-0.00116545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295994,-0.0146408) , 
3, 75.5904, 1, 0, 0.514293,-0.00431439) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63753,0.00515579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.4346e-05,-0.0180782) , 
4, 0.023207, 1, 0, 0.411521,0.000611159) , 
5, 0.0115387, 1, 0, 0.429335,-0.000242605) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926327,-0.0211245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837472,-0.00218459) , 
4, 0.0268601, 1, 0, 0.88625,-0.0124057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667436,-0.00796123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85783,0.0130593) , 
1, 1.14265, 1, 0, 0.774889,0.00132379) , 
0, 0.00179141, 1, 0, 0.82707,-0.0051095) , 
7, 0.000535425, 1, 0, 0.507414,-0.00119801)    );
  // itree = 391
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665641,0.0353687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176904,0.00986666) , 
6, 0.0144621, 1, 0, 0.329323,0.00835382) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984201,0.0116973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832891,-0.00650665) , 
0, 0.00027479, 1, 0, 0.903212,-0.00427004) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00213213,0.0234186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.88388e-05,-0.0112949) , 
0, 0.00950198, 1, 0, 0.000574617,6.06006e-05) , 
0, 0.00288733, 1, 0, 0.513939,-0.0024024) , 
4, 0.0087176, 1, 0, 0.496126,-0.00136453)    );
  // itree = 392
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793628,0.00318341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983215,0.0346772) , 
6, 0.0398659, 1, 0, 0.837779,0.00484852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00303949,-0.0149821) , 
5, 0.0233749, 1, 0, 0.642967,0.00249092) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98831,0.0053433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581692,-0.0136109) , 
0, 9.16609e-05, 1, 0, 0.867504,-0.0109689) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907189,0.0131086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000181384,-0.010736) , 
0, 0.00279674, 1, 0, 0.171895,0.00160775) , 
0, 0.00192488, 1, 0, 0.339247,-0.00141799) , 
4, 0.0231813, 1, 0, 0.501992,0.000676557)    );
  // itree = 393
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784143,0.00309744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579097,-0.0135262) , 
2, 0.0816244, 1, 0, 0.685552,-0.00305511) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.107548,-0.00814519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.412244,0.00495361) , 
5, 0.0172375, 1, 0, 0.358439,0.000580487) , 
2, 0.214279, 1, 0, 0.556885,-0.00162508) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700555,0.0113372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000341462,0.000574328) , 
0, 0.00288733, 1, 0, 0.164644,0.00496316) , 
3, 113.537, 1, 0, 0.504636,-0.000747487)    );
  // itree = 394
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873225,0.000563381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692007,0.0223231) , 
2, 0.0789969, 1, 0, 0.821103,0.00385096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626547,0.00299308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329653,-0.0118123) , 
3, 75.5717, 1, 0, 0.546142,-0.000877021) , 
5, 0.0172296, 1, 0, 0.655214,0.000998483) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435873,-0.0101702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86309,-0.00327728) , 
7, 0.000287887, 1, 0, 0.8018,-0.00733402) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.60213e-05,-0.0107351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00157577,0.0209275) , 
6, 0.0376474, 1, 0, 0.000576818,5.45117e-05) , 
0, 0.00288677, 1, 0, 0.329247,-0.00297634) , 
2, 0.166626, 1, 0, 0.49139,-0.000999175)    );
  // itree = 395
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947971,0.00613877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909406,-0.0171898) , 
4, 0.0177549, 1, 0, 0.934599,-0.00312311) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923925,0.00968004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000992053,-0.00770274) , 
0, 0.0018856, 1, 0, 0.219207,0.00162255) , 
0, 0.000962526, 1, 0, 0.414532,0.000326842) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889973,-0.000302724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894739,-0.0271543) , 
5, 0.0271439, 1, 0, 0.891437,-0.010484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659305,0.0130412) , 
0, 0.00208881, 1, 0, 0.832669,-0.0050477) , 
7, 0.000534736, 1, 0, 0.496685,-0.000729123)    );
  // itree = 396
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578151,-0.00669025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.574265,0.00272878) , 
3, 20.5631, 1, 0, 0.575657,-0.000359777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655205,-0.0195997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30136,-0.000388942) , 
5, 0.0229748, 1, 0, 0.468138,-0.00924187) , 
3, 71.9725, 1, 0, 0.558827,-0.00175015) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.15161,0.0165242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743537,0.0269323) , 
7, 0.000253978, 1, 0, 0.358753,0.0084549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0555849,-0.0079848) , 
3, 147.589, 1, 0, 0.213484,0.00257108) , 
3, 100.785, 1, 0, 0.501075,-0.00102751)    );
  // itree = 397
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222789,-0.0246352) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622321,0.00333054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24104,-0.00587374) , 
3, 100.695, 1, 0, 0.564403,0.00069895) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741319,-0.00643027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0984121,-0.00304821) , 
0, 0.00192505, 1, 0, 0.259194,-0.00386639) , 
2, 0.380946, 1, 0, 0.517412,-3.9467e-06) , 
5, 0.00575579, 1, 0, 0.502546,-0.000778921)    );
  // itree = 398
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96513,-0.016312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976695,0.00996988) , 
5, 0.0176955, 1, 0, 0.97215,-0.00051993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77916,-0.0161833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894116,-0.00356973) , 
0, 0.00121792, 1, 0, 0.84873,-0.01426) , 
0, 0.000274983, 1, 0, 0.915747,-0.00679916) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.542077,-0.00916561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000435427,-0.00226658) , 
0, 0.00279678, 1, 0, 0.0344045,-0.00118309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664343,0.0258798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.290833,0.0129838) , 
5, 0.0289546, 1, 0, 0.428133,0.00722868) , 
6, 0.0521868, 1, 0, 0.113783,0.000512784) , 
0, 0.00192505, 1, 0, 0.493915,-0.00295309)    );
  // itree = 399
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569627,0.00721405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492604,-0.0053601) , 
4, 0.0145089, 1, 0, 0.512325,-0.000859794) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84755,-0.00365567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454119,0.0369279) , 
0, 0.0019131, 1, 0, 0.584681,0.00643405) , 
6, 0.055081, 1, 0, 0.519899,-9.62398e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204854,-0.0104247) , 
2, 0.452367, 1, 0, 0.500312,-0.000600095)    );
  // itree = 400
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.855102,0.0111297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558881,-0.00654676) , 
4, 0.0173218, 1, 0, 0.728272,0.000835169) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674568,0.0185027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622087,0.0440136) , 
2, 0.0497257, 1, 0, 0.64824,0.00800986) , 
6, 0.049283, 1, 0, 0.71619,0.00191836) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645706,-0.0208031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926028,-0.000976917) , 
5, 0.0163636, 1, 0, 0.875004,-0.0088949) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22332,0.00244956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.37502,-0.0110532) , 
6, 0.0521866, 1, 0, 0.249135,-0.000547522) , 
0, 0.000962442, 1, 0, 0.384732,-0.00235601) , 
2, 0.0952167, 1, 0, 0.495245,-0.000930863)    );
  // itree = 401
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.772972,0.00214047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502443,-0.0200152) , 
2, 0.204032, 1, 0, 0.75407,-0.000484918) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0243229,-0.0027296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.765884,0.0198633) , 
7, 0.000287322, 1, 0, 0.389171,0.00748396) , 
2, 0.238088, 1, 0, 0.642105,0.00196025) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.806251,-0.0139539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731773,-0.0179973) , 
1, 1.12104, 1, 0, 0.770005,-0.0269363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0933668,-0.00736188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658693,0.0269749) , 
6, 0.0579816, 1, 0, 0.145175,1.50778e-05) , 
0, 0.00192488, 1, 0, 0.239407,-0.00404953) , 
4, 0.0260865, 1, 0, 0.495702,-0.000224638)    );
  // itree = 402
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695727,0.0041292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395906,-0.0109087) , 
4, 0.0174128, 1, 0, 0.533889,-0.00137998) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753978,0.0130454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000923862,-0.00318789) , 
0, 0.00192505, 1, 0, 0.135138,0.00306867) , 
2, 0.285706, 1, 0, 0.421622,-0.000127486) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874777,-0.0241111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870807,-0.00940444) , 
6, 0.0520745, 1, 0, 0.872441,-0.0163403) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686565,-0.0149238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871271,0.0217971) , 
1, 1.15395, 1, 0, 0.781686,0.000200444) , 
0, 0.00172255, 1, 0, 0.824349,-0.00757511) , 
7, 0.000543648, 1, 0, 0.498063,-0.0015411)    );
  // itree = 403
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226156,0.0293915) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532969,-0.0132537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593524,0.000287163) , 
4, 0.00843519, 1, 0, 0.590835,-0.00023849) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.183274,-0.0135775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295436,0.000873154) , 
4, 0.0215409, 1, 0, 0.266573,-0.00443424) , 
2, 0.333331, 1, 0, 0.517923,-0.00118193) , 
4, 0.00580706, 1, 0, 0.501294,-0.000534126)    );
  // itree = 404
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707058,0.0212861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454508,0.0151542) , 
5, 0.0217914, 1, 0, 0.581569,0.00594616) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586448,-0.00918257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544151,0.000666675) , 
3, 20.8305, 1, 0, 0.553944,-0.000930353) , 
3, 5.40648, 1, 0, 0.556117,-0.00038943) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676997,-0.00888268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000322458,-0.000603321) , 
0, 0.00288758, 1, 0, 0.159729,-0.00565259) , 
3, 113.359, 1, 0, 0.500599,-0.00112659)    );
  // itree = 405
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572152,-0.00674152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780004,0.00855162) , 
4, 0.0132453, 1, 0, 0.707156,0.00127632) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0211669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000380891,0.00339799) , 
4, 0.0375154, 1, 0, 0.000222347,-0.00275031) , 
4, 0.0231744, 1, 0, 0.478381,-2.67592e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982544,-0.025106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640197,-0.0119767) , 
0, 9.1428e-05, 1, 0, 0.883284,-0.0136217) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.229612,-0.0104843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477521,0.0104504) , 
4, 0.0260924, 1, 0, 0.372511,0.000311452) , 
0, 0.00192009, 1, 0, 0.578621,-0.00531093) , 
6, 0.046384, 1, 0, 0.506089,-0.00148742)    );
  // itree = 406
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755455,0.000744629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608897,0.0272969) , 
3, 62.7504, 1, 0, 0.712455,0.00473077) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0239912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000180803,-0.00537604) , 
4, 0.0365652, 1, 0, 8.80836e-05,-0.00215195) , 
4, 0.0145088, 1, 0, 0.330756,0.00104288) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579077,-0.00953589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545893,-0.0263309) , 
6, 0.0309539, 1, 0, 0.559327,-0.0176144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637503,-0.00522068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442585,0.00739476) , 
2, 0.357043, 1, 0, 0.599972,-0.00129923) , 
6, 0.0335599, 1, 0, 0.594452,-0.00351495) , 
6, 0.0289967, 1, 0, 0.497962,-0.00184718)    );
  // itree = 407
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645927,-0.0210747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566352,-0.00642717) , 
4, 0.0145448, 1, 0, 0.585491,-0.00648685) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768344,0.0507822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377386,0.00837878) , 
2, 0.142683, 1, 0, 0.560375,0.00505657) , 
3, 20.392, 1, 0, 0.580652,-0.00426271) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.296759,0.0246389) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547131,-0.0220258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.47474,-0.000148502) , 
4, 0.0112064, 1, 0, 0.479046,-0.000901585) , 
4, 0.00872391, 1, 0, 0.460484,-5.84285e-05) , 
3, 25.1939, 1, 0, 0.496643,-0.0013235)    );
  // itree = 408
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865669,0.0375225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502168,-0.000542756) , 
4, 0.0233376, 1, 0, 0.758334,0.0053012) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.384146,-0.0125253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410892,0.000716494) , 
4, 0.0203332, 1, 0, 0.402038,-0.0034393) , 
2, 0.142814, 1, 0, 0.573982,0.00077877) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907873,-0.00483082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642212,-0.00957434) , 
3, 116.012, 1, 0, 0.885576,-0.00585973) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.19663e-05,-0.010886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00139768,0.0203113) , 
2, 0.356822, 1, 0, 0.000458735,-3.65208e-06) , 
0, 0.00288677, 1, 0, 0.458085,-0.00303138) , 
3, 25.2309, 1, 0, 0.493498,-0.00186717)    );
  // itree = 409
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952768,0.00791889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00110585,-0.0119217) , 
0, 0.00192488, 1, 0, 0.540007,0.00164487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0643875,-0.00755806) , 
2, 0.357132, 1, 0, 0.453132,0.000580166) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522101,-9.7842e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346386,-0.0202234) , 
2, 0.165878, 1, 0, 0.42194,-0.01002) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869012,-0.0051671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476176,0.00832421) , 
0, 0.00192405, 1, 0, 0.654545,-0.000274059) , 
4, 0.023366, 1, 0, 0.579363,-0.00342411) , 
6, 0.0434945, 1, 0, 0.496165,-0.000784913)    );
  // itree = 410
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.256825,-0.0201498) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688522,0.0243023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0339596,-0.00946448) , 
5, 0.0112429, 1, 0, 0.15136,0.00107264) , 
5, 0.0057652, 1, 0, 0.161039,-0.000140306) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918999,-0.00369616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333001,-0.0286682) , 
5, 0.0251757, 1, 0, 0.827597,-0.00787039) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587384,-0.00522947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956492,0.0211572) , 
5, 0.0285166, 1, 0, 0.710532,0.00178935) , 
4, 0.0257363, 1, 0, 0.797368,-0.00537604) , 
7, 0.000143226, 1, 0, 0.490009,-0.00284708)    );
  // itree = 411
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978131,-0.00446008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900131,0.0316003) , 
0, 0.000228848, 1, 0, 0.947206,0.00993606) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907776,-0.0165462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95893,0.0150725) , 
5, 0.0201422, 1, 0, 0.939937,-0.000912181) , 
4, 0.0142842, 1, 0, 0.942393,0.00275349) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755525,-0.0146207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000835241,-0.00494481) , 
0, 0.00238857, 1, 0, 0.170633,-0.0067211) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591651,0.0126886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.286173,-0.00476766) , 
4, 0.0188957, 1, 0, 0.332682,-0.000264362) , 
4, 0.0144842, 1, 0, 0.301533,-0.00150546) , 
0, 0.000962026, 1, 0, 0.498737,-0.000194902)    );
  // itree = 412
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815854,-0.00348549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288933,-0.0113193) , 
2, 0.285627, 1, 0, 0.713286,-0.00418996) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0757119,-0.0108598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516644,0.00901556) , 
4, 0.0232437, 1, 0, 0.40129,0.000770612) , 
5, 0.0230848, 1, 0, 0.569808,-0.00190874) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989494,0.00928951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781852,0.0143441) , 
0, 9.15755e-05, 1, 0, 0.886339,0.0111587) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00140876,0.0307409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150761,-0.00604716) , 
6, 0.0377335, 1, 0, 0.059553,-0.000371908) , 
0, 0.00192505, 1, 0, 0.327754,0.00336851) , 
3, 75.4901, 1, 0, 0.504909,-0.000493803)    );
  // itree = 413
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.398567,0.0018911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570686,-0.0214036) , 
6, 0.030382, 1, 0, 0.412976,-0.000570537) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763531,0.0114724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467314,-0.00125466) , 
4, 0.0261565, 1, 0, 0.659805,0.00335584) , 
6, 0.0319057, 1, 0, 0.557799,0.00173319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.113521,-0.0131113) , 
3, 125.981, 1, 0, 0.507225,0.000612541)    );
  // itree = 414
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667662,-0.0432657) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.43372,0.010054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719166,-0.00995142) , 
6, 0.0435656, 1, 0, 0.547095,-0.00159907) , 
4, 0.0145559, 1, 0, 0.574361,-0.00598639) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550359,0.00267039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.215378,-0.00571985) , 
3, 96.5856, 1, 0, 0.477401,0.000149013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56707,-0.0171821) , 
6, 0.05798, 1, 0, 0.48224,-0.000509405) , 
3, 12.5987, 1, 0, 0.496322,-0.00134663)    );
  // itree = 415
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981549,-0.00349807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912016,0.016879) , 
0, 0.000182907, 1, 0, 0.947515,0.00670233) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0070173,-0.0273902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00130374,-0.000277458) , 
2, 0.11898, 1, 0, 0.00264564,-0.00140517) , 
0, 0.000962442, 1, 0, 0.169169,2.36936e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978013,-0.0197216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927514,0.0194889) , 
2, 0.238053, 1, 0, 0.964858,-0.000592466) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758334,-0.0061122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476085,-0.0121433) , 
2, 0.309429, 1, 0, 0.690263,-0.00997416) , 
0, 0.000536434, 1, 0, 0.804336,-0.00607681) , 
7, 0.000145068, 1, 0, 0.500213,-0.00315584)    );
  // itree = 416
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691265,0.0132932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508506,-0.00321553) , 
4, 0.0175053, 1, 0, 0.575514,0.000846993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.40442,-0.0157342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223171,0.00755032) , 
4, 0.0202322, 1, 0, 0.294927,-0.00390334) , 
3, 75.6854, 1, 0, 0.496,-0.00049917) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826443,-0.0211088) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.492903,0.0375018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376273,-0.00542617) , 
2, 0.214059, 1, 0, 0.430568,0.00277274) , 
0, 0.0019131, 1, 0, 0.561869,-0.00798037) , 
6, 0.0550824, 1, 0, 0.50316,-0.00131232)    );
  // itree = 417
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.441104,-0.0181388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753137,0.000842341) , 
5, 0.00860589, 1, 0, 0.702867,-0.00128742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.442099,-0.0256088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355808,-0.00747821) , 
3, 37.8383, 1, 0, 0.393948,-0.0176961) , 
6, 0.0433234, 1, 0, 0.66092,-0.00351551) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.727548,-0.00897845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000149715,-0.00894899) , 
0, 0.00333324, 1, 0, 0.141297,-0.00404948) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778878,0.0105564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000220502,-0.022191) , 
4, 0.0303713, 1, 0, 0.437008,0.00188561) , 
4, 0.0231914, 1, 0, 0.352344,0.000186351) , 
5, 0.0226011, 1, 0, 0.504489,-0.00163888)    );
  // itree = 418
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515674,-0.0102598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792994,0.012897) , 
5, 0.00928978, 1, 0, 0.716562,0.00215457) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0227329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000290159,-0.00037414) , 
0, 0.0136187, 1, 0, 0.000158958,-0.00173971) , 
5, 0.0178335, 1, 0, 0.393483,0.000398349) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569416,-0.0208143) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606707,-0.00526833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415983,0.0108986) , 
2, 0.452095, 1, 0, 0.59533,-0.00248962) , 
6, 0.0360477, 1, 0, 0.594075,-0.00321752) , 
6, 0.0347935, 1, 0, 0.497814,-0.00148232)    );
  // itree = 419
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957269,-0.0102944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439617,0.00459294) , 
0, 0.000962026, 1, 0, 0.646307,-0.000781285) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850023,0.0111218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184447,-0.0115218) , 
0, 0.000959778, 1, 0, 0.312941,-0.00466198) , 
2, 0.309514, 1, 0, 0.565912,-0.00171716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.36543,0.019956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.351169,0.00732698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0796396,-0.0108642) , 
3, 130.361, 1, 0, 0.217569,-0.00147346) , 
5, 0.0169792, 1, 0, 0.252477,0.00155857) , 
3, 88.3067, 1, 0, 0.497416,-0.0010013)    );
  // itree = 420
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.236629,0.03663) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940837,0.00441165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000779218,-0.00851742) , 
0, 0.00192505, 1, 0, 0.440593,0.000731515) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547477,-0.0132146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870763,-0.00269258) , 
5, 0.0239864, 1, 0, 0.81753,-0.0049797) , 
7, 0.000540999, 1, 0, 0.518527,-0.000449315) , 
4, 0.00580638, 1, 0, 0.503835,0.000220525)    );
  // itree = 421
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927387,-0.00341819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723739,-0.0108056) , 
3, 112.732, 1, 0, 0.916165,-0.00387115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579377,-0.0121959) , 
0, 0.00219832, 1, 0, 0.896536,-0.00521691) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000453063,0.0098489) , 
4, 0.0405695, 1, 0, 0.000151981,-0.000273966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00157157,0.0218511) , 
2, 0.380512, 1, 0, 0.00049804,2.97334e-05) , 
0, 0.00288551, 1, 0, 0.493667,-0.00285796)    );
  // itree = 422
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993953,-0.00694642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831299,-0.00971372) , 
0, 4.57784e-05, 1, 0, 0.962697,-0.00357339) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00412335,-0.0268453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790463,0.0082343) , 
7, 0.000145068, 1, 0, 0.38376,0.000920804) , 
0, 0.000961714, 1, 0, 0.596197,-0.000728312) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94504,0.0241592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643828,-0.0136305) , 
0, 0.000411275, 1, 0, 0.760852,-0.0133618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000661492,0.00462128) , 
0, 0.00288733, 1, 0, 0.282021,-0.00483779) , 
2, 0.285706, 1, 0, 0.504463,-0.00192821)    );
  // itree = 423
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992602,-0.0152061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0883317) , 
7, 0.000749431, 1, 0, 0.993507,-3.01473e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577413,-0.0113599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819831,-0.00702867) , 
0, 0.000613043, 1, 0, 0.712361,-0.0250879) , 
0, 4.57668e-05, 1, 0, 0.938163,-0.00496276) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93314,0.0136093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0011937,-0.00740483) , 
0, 0.00188111, 1, 0, 0.230282,0.00221341) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848281,-0.0080547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352327,-0.00120616) , 
0, 0.00188704, 1, 0, 0.449807,-0.00332501) , 
6, 0.043495, 1, 0, 0.303558,0.000364732) , 
0, 0.000962526, 1, 0, 0.499097,-0.00127681)    );
  // itree = 424
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226888,0.0209254) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921229,-0.00290767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618169,-0.0138259) , 
0, 0.00219881, 1, 0, 0.904429,-0.00337047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00246841,0.0542053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131737) , 
4, 0.0215524, 1, 0, 0.000666825,0.000236592) , 
0, 0.00288725, 1, 0, 0.510467,-0.0017981) , 
4, 0.00581393, 1, 0, 0.495111,-0.00123732)    );
  // itree = 425
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932671,0.000442341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933397,0.0275824) , 
0, 0.00164876, 1, 0, 0.932756,0.00304847) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.51442,-0.00745772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000650554,0.00310718) , 
0, 0.00279663, 1, 0, 0.0353082,-0.000931365) , 
0, 0.00192488, 1, 0, 0.481827,0.00104878) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513828,-0.00842878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80015,-0.0265651) , 
7, 0.000716991, 1, 0, 0.685207,-0.0243002) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.556161,-0.0132795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357885,0.0183503) , 
3, 37.7364, 1, 0, 0.436069,-0.000324845) , 
5, 0.0288554, 1, 0, 0.548592,-0.0111533) , 
6, 0.0521868, 1, 0, 0.492477,-0.000897494)    );
  // itree = 426
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736246,0.00212179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564614,-0.0221589) , 
2, 0.0680106, 1, 0, 0.70355,-0.00187456) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.529433,0.00531709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0145884,-0.0121412) , 
5, 0.0230594, 1, 0, 0.27498,0.00121134) , 
2, 0.0952167, 1, 0, 0.424751,0.000132918) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880608,-0.0173649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885456,-0.00746408) , 
7, 0.000629011, 1, 0, 0.884007,-0.0106302) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849635,-0.00418064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687361,0.0138956) , 
3, 62.8851, 1, 0, 0.800119,0.00200081) , 
0, 0.00179141, 1, 0, 0.839645,-0.00395056) , 
7, 0.000535426, 1, 0, 0.504761,-0.000654556)    );
  // itree = 427
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832524,-0.0094553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95081,0.00638301) , 
5, 0.00855911, 1, 0, 0.938925,0.00216464) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00379681,-0.010006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000255142,-0.00305263) , 
0, 0.00890613, 1, 0, 0.00117877,-0.0013702) , 
0, 0.00192488, 1, 0, 0.471107,0.000401201) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.171909,-0.0175445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911231,0.00592588) , 
4, 0.0235059, 1, 0, 0.679376,-0.000481126) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.399606,-0.0117555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284336,-0.0103997) , 
3, 50.1054, 1, 0, 0.3469,-0.00867678) , 
4, 0.0290138, 1, 0, 0.578774,-0.00296099) , 
6, 0.0463876, 1, 0, 0.500669,-0.000521965)    );
  // itree = 428
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989156,-0.0117537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915458,0.0123316) , 
0, 0.000153782, 1, 0, 0.951831,0.00497026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00218503,-0.0144315) , 
0, 0.00161602, 1, 0, 0.619132,0.0015525) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776105,-0.025901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.265953,0.00452712) , 
0, 0.00145539, 1, 0, 0.385326,-0.00655508) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585597,-0.00795971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404572,0.00782035) , 
4, 0.0242374, 1, 0, 0.431941,0.000927502) , 
5, 0.0230124, 1, 0, 0.416617,-0.00153237) , 
4, 0.0202933, 1, 0, 0.503328,-0.000211519)    );
  // itree = 429
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652793,-0.000813012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842833,0.0384746) , 
4, 0.0157642, 1, 0, 0.685451,0.00190141) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922067,-0.0135032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173272,-0.00600707) , 
0, 0.00192405, 1, 0, 0.518086,-0.00587768) , 
4, 0.01742, 1, 0, 0.580026,-0.00299871) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0191122,-0.0118278) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905516,0.0235562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.207692,0.00364949) , 
0, 0.00192484, 1, 0, 0.496315,0.00798878) , 
6, 0.0376682, 1, 0, 0.258616,0.0019256) , 
2, 0.309514, 1, 0, 0.4962,-0.00171441)    );
  // itree = 430
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79501,-0.014809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925197,-0.00167239) , 
4, 0.00826298, 1, 0, 0.91629,-0.00267371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679705,-0.0101963) , 
2, 0.404638, 1, 0, 0.898919,-0.0039746) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00035142,0.00670808) , 
4, 0.0434794, 1, 0, 0.000102394,-0.00028005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0023288,0.0332485) , 
2, 0.380851, 1, 0, 0.000654512,0.000198494) , 
0, 0.00288758, 1, 0, 0.497726,-0.00211077)    );
  // itree = 431
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943393,-1.98677e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638019,-0.0135113) , 
4, 0.0243937, 1, 0, 0.917198,-0.0020397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907522,-0.0234333) , 
5, 0.0261055, 1, 0, 0.91618,-0.00501694) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000734271,-0.0136851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873885,0.0122894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.39692e-05,-0.0114108) , 
0, 0.00366743, 1, 0, 0.156893,0.00147427) , 
5, 0.0229852, 1, 0, 0.115401,5.63313e-05) , 
0, 0.00192488, 1, 0, 0.496721,-0.00235949)    );
  // itree = 432
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800881,-0.0025468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61967,-0.01891) , 
3, 62.4282, 1, 0, 0.747932,-0.00376624) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608234,-0.0319635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601481,0.0068183) , 
2, 0.0835615, 1, 0, 0.605364,-0.0156457) , 
2, 0.0680106, 1, 0, 0.718608,-0.00620966) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.327819,-0.00514032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431874,0.00392588) , 
4, 0.0173966, 1, 0, 0.406402,0.000320235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.194869,-0.0126012) , 
2, 0.46135, 1, 0, 0.390316,-0.000337418) , 
2, 0.0952167, 1, 0, 0.500981,-0.00231692)    );
  // itree = 433
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233338,-0.0213678) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566895,0.0210839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00649092,-0.00822555) , 
2, 0.190376, 1, 0, 0.332329,0.00159832) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62447,-0.00114451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578802,-0.0134511) , 
1, 1.7963, 1, 0, 0.61731,-0.00183138) , 
6, 0.0289901, 1, 0, 0.515847,-0.000610283) , 
5, 0.00578211, 1, 0, 0.501361,-0.00118528)    );
  // itree = 434
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925579,-0.00680317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676164,-0.0204265) , 
0, 0.00125397, 1, 0, 0.894677,-0.00959094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00222795,0.0141361) , 
0, 0.00205213, 1, 0, 0.601263,-0.00607617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0382965,-0.0262925) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766697,0.00426734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0519321,-0.0154865) , 
4, 0.0298229, 1, 0, 0.528987,0.000460439) , 
4, 0.0174011, 1, 0, 0.452074,-0.000967129) , 
5, 0.017289, 1, 0, 0.497416,-0.00251987)    );
  // itree = 435
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665489,-0.00344168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717573,-0.011284) , 
7, 0.000430712, 1, 0, 0.669774,-0.00294495) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 5.89771e-05,-0.0157629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878423,0.00669469) , 
7, 0.000391626, 1, 0, 0.311985,0.00111508) , 
5, 0.0218469, 1, 0, 0.48888,-0.000892244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651133,0.0271672) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523903,-0.0250189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508194,-0.00952104) , 
5, 0.0288833, 1, 0, 0.513779,-0.0132251) , 
2, 0.119034, 1, 0, 0.548409,-0.00767872) , 
6, 0.0550822, 1, 0, 0.495211,-0.00161398)    );
  // itree = 436
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.214765,0.0118472) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.536688,0.00345361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710052,-0.00937087) , 
6, 0.02899, 1, 0, 0.646923,-0.00246535) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846405,0.00405522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.101198,-0.00598908) , 
0, 0.00192488, 1, 0, 0.33275,0.000451855) , 
2, 0.21429, 1, 0, 0.519539,-0.00128254) , 
4, 0.00580854, 1, 0, 0.50181,-0.000875309)    );
  // itree = 437
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952389,-0.0129201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946294,0.0206672) , 
0, 0.000819958, 1, 0, 0.950179,0.00128623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0020575,-0.030532) , 
0, 0.00157823, 1, 0, 0.569519,-0.00335235) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.489959,0.00455099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.102007,-0.011088) , 
3, 126.153, 1, 0, 0.442437,0.000926114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668313,-0.0094999) , 
6, 0.0579807, 1, 0, 0.458519,0.000248471) , 
4, 0.0173885, 1, 0, 0.494956,-0.000933529)    );
  // itree = 438
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821368,-0.0260388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00110459,0.00454882) , 
0, 0.00186202, 1, 0, 0.179649,-0.00599025) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666207,0.00704893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337084,-0.00975085) , 
2, 0.428447, 1, 0, 0.639731,0.00186252) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562489,-0.0097866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.325982,0.00444494) , 
2, 0.237964, 1, 0, 0.468521,-0.00269734) , 
3, 50.388, 1, 0, 0.564171,-0.000149892) , 
6, 0.0173941, 1, 0, 0.494978,-0.00120084)    );
  // itree = 439
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620711,-0.0272303) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.363084,0.0101412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709834,-0.00499149) , 
6, 0.0377371, 1, 0, 0.565073,-0.00106096) , 
4, 0.0145564, 1, 0, 0.578744,-0.00528453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202047,0.0186071) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.41847,-0.0141783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515127,0.00244852) , 
5, 0.0110556, 1, 0, 0.50348,0.00017243) , 
4, 0.00580491, 1, 0, 0.48529,0.000619593) , 
3, 12.6165, 1, 0, 0.499813,-0.000297912)    );
  // itree = 440
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.462071,-0.00296848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615737,-0.0204795) , 
7, 8.78935e-05, 1, 0, 0.521174,-0.00717482) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942787,-0.0152779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370646,0.00270246) , 
0, 0.000962212, 1, 0, 0.540274,-0.00118283) , 
5, 0.0115118, 1, 0, 0.537531,-0.00204354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0823258,0.0170353) , 
3, 138.767, 1, 0, 0.494887,-0.00128627)    );
  // itree = 441
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.241476,0.0113694) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.727411,-0.00696708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223753,0.00449995) , 
4, 0.0267899, 1, 0, 0.5594,-0.00246768) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.388972,0.00778908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171121,-0.00389054) , 
4, 0.0268232, 1, 0, 0.274781,0.0023794) , 
2, 0.38072, 1, 0, 0.517297,-0.00175065) , 
4, 0.00580638, 1, 0, 0.502893,-0.00132364)    );
  // itree = 442
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243956,0.0163286) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884001,0.00609586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219223,-0.0194883) , 
4, 0.0162931, 1, 0, 0.615677,-0.00315652) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779307,0.00607385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205336,-0.00687395) , 
5, 0.0271225, 1, 0, 0.477954,0.000776924) , 
5, 0.0172657, 1, 0, 0.51906,-0.000397108) , 
4, 0.00580854, 1, 0, 0.503868,-1.03081e-05)    );
  // itree = 443
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631342,-0.000881003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397727,-0.0131542) , 
2, 0.209199, 1, 0, 0.602534,-0.00137017) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.348432,0.0241651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291411,-0.000145919) , 
2, 0.304624, 1, 0, 0.306175,0.00192949) , 
2, 0.25844, 1, 0, 0.517138,-0.000419371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220266,-0.0104952) , 
2, 0.452367, 1, 0, 0.499347,-0.000788892)    );
  // itree = 444
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992779,-0.00590045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92422,0.0363768) , 
0, 0.0001373, 1, 0, 0.960506,0.0109487) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0761027,-0.0203766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.37574e-05,-0.0108187) , 
0, 0.0082975, 1, 0, 0.0143238,-0.00206832) , 
0, 0.000962442, 1, 0, 0.189721,0.000344694) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927583,-0.00834532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64708,0.00420774) , 
0, 0.00161634, 1, 0, 0.828852,-0.00264982) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61922,-0.0125315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51816,-0.00657679) , 
5, 0.022974, 1, 0, 0.569463,-0.01438) , 
3, 100.774, 1, 0, 0.802257,-0.00385252) , 
7, 0.000161048, 1, 0, 0.503253,-0.00180369)    );
  // itree = 445
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853524,0.00675918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590826,-0.00861395) , 
4, 0.0203208, 1, 0, 0.756715,-0.000345288) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537436,-0.0162337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374962,-0.0236113) , 
2, 0.0453687, 1, 0, 0.452315,-0.0123181) , 
3, 88.1672, 1, 0, 0.709786,-0.00219114) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816635,-0.0145416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932784,0.00387966) , 
6, 0.0438885, 1, 0, 0.879653,-0.00777207) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877276,0.0147186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.111391,-0.000421342) , 
0, 0.00188682, 1, 0, 0.245896,0.00301959) , 
0, 0.000962256, 1, 0, 0.380094,0.000734453) , 
2, 0.119044, 1, 0, 0.510445,-0.000422248)    );
  // itree = 446
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.268455,0.0183863) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.693812,-0.0048708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311868,0.00687554) , 
5, 0.020232, 1, 0, 0.493906,-0.000577586) , 
4, 0.00580491, 1, 0, 0.479499,-4.71849e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665958,0.0212792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63401,0.000679498) , 
3, 14.392, 1, 0, 0.652821,0.00499057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694168,-0.0180729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349642,-0.00507792) , 
5, 0.0288738, 1, 0, 0.534483,-0.0129327) , 
3, 25.1806, 1, 0, 0.570305,-0.00750719) , 
6, 0.049283, 1, 0, 0.499435,-0.00168502)    );
  // itree = 447
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617439,-0.0154481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547422,0.00209824) , 
3, 37.2752, 1, 0, 0.582146,-0.00604474) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731608,0.0179786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000283782,-0.0163001) , 
4, 0.0145237, 1, 0, 0.297123,0.00178345) , 
5, 0.0085126, 1, 0, 0.337528,0.000673725) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577614,-0.0086865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584025,-0.0322203) , 
6, 0.0381054, 1, 0, 0.578471,-0.00882371) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939225,-0.00726021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442061,0.00373356) , 
0, 0.000962526, 1, 0, 0.599307,0.000218496) , 
6, 0.0396292, 1, 0, 0.592346,-0.00280207) , 
6, 0.0289979, 1, 0, 0.50055,-0.00154993)    );
  // itree = 448
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.379795,-0.00904451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709108,0.0418497) , 
6, 0.0270993, 1, 0, 0.5265,0.00285078) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.345624,-0.00279182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573727,-0.0115157) , 
6, 0.0309241, 1, 0, 0.420942,-0.00262773) , 
3, 12.5954, 1, 0, 0.437344,-0.00177645) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626871,-0.026661) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.734209,0.0100168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167504,-0.00609055) , 
4, 0.0289893, 1, 0, 0.61298,0.00416463) , 
1, 1.06742, 1, 0, 0.613918,0.00236451) , 
6, 0.040591, 1, 0, 0.507095,-0.000140686)    );
  // itree = 449
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.494409,-0.0212566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293078,-0.000828356) , 
3, 62.7435, 1, 0, 0.424068,-0.00737522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719033,0.00488558) , 
5, 0.00986923, 1, 0, 0.500551,-0.00477233) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603308,0.0127234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560231,-0.0025638) , 
4, 0.0174128, 1, 0, 0.574167,0.000464967) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.329631,-0.00811961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298717,-0.000518471) , 
5, 0.0214944, 1, 0, 0.305226,-0.00299756) , 
2, 0.285706, 1, 0, 0.490976,-0.000606086) , 
5, 0.0115123, 1, 0, 0.492311,-0.00118688)    );
  // itree = 450
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946083,0.00354597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853399,0.0123883) , 
3, 99.3732, 1, 0, 0.938396,0.00322434) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511798,-0.00804414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000521262,-5.19904e-05) , 
0, 0.00279672, 1, 0, 0.0351508,-0.00112966) , 
0, 0.00192505, 1, 0, 0.485637,0.00104186) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637273,-0.0107232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533827,-0.0185704) , 
2, 0.238007, 1, 0, 0.589937,-0.0145707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.408378,-0.016223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706403,0.0285261) , 
4, 0.028914, 1, 0, 0.525344,-0.00388774) , 
5, 0.0278232, 1, 0, 0.547173,-0.00749796) , 
6, 0.0521868, 1, 0, 0.495572,-0.000336924)    );
  // itree = 451
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75164,0.0416911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759062,-0.00665567) , 
3, 4.79422, 1, 0, 0.758264,-0.00145796) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96206,0.0201348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0996298,-0.00619605) , 
0, 0.00191232, 1, 0, 0.592032,0.00399302) , 
3, 50.3338, 1, 0, 0.691438,0.000733364) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558283,-0.0100754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45261,-0.0348962) , 
2, 0.157924, 1, 0, 0.534174,-0.0108736) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.20229,0.00252966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522334,-0.00631738) , 
6, 0.0434724, 1, 0, 0.330806,-0.00109045) , 
2, 0.173495, 1, 0, 0.372906,-0.0031157) , 
2, 0.119044, 1, 0, 0.498402,-0.00159923)    );
  // itree = 452
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703712,0.00358169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593121,-0.00750169) , 
3, 25.1343, 1, 0, 0.627967,-0.00270805) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983691,0.0227449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55375,-0.0193354) , 
5, 0.0256145, 1, 0, 0.781021,-0.0133723) , 
7, 0.000572504, 1, 0, 0.643838,-0.00381387) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805081,-0.00795489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0911137,-0.00171672) , 
0, 0.00192335, 1, 0, 0.171613,-0.00105294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715715,0.0342526) , 
6, 0.0579816, 1, 0, 0.239847,0.000661968) , 
4, 0.0260933, 1, 0, 0.496067,-0.00217671)    );
  // itree = 453
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915232,-0.00650528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935667,0.0288085) , 
0, 0.00164858, 1, 0, 0.917733,-0.00201234) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857756,-0.0248384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93719,-0.000586189) , 
4, 0.0270619, 1, 0, 0.903311,-0.0186782) , 
5, 0.0254681, 1, 0, 0.915926,-0.00410008) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000894511,-0.00744244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766113,0.0126246) , 
7, 0.000535426, 1, 0, 0.119853,0.000594396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0755013,-0.0172541) , 
2, 0.428329, 1, 0, 0.113601,-0.000189335) , 
0, 0.00192488, 1, 0, 0.495198,-0.00204934)    );
  // itree = 454
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963552,0.0144651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922162,-0.00130929) , 
4, 0.0188149, 1, 0, 0.942708,0.00293223) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0916906,-0.0134275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165457,0.00846137) , 
4, 0.026103, 1, 0, 0.136026,-0.00143033) , 
0, 0.00192451, 1, 0, 0.553278,0.000826182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109248,-0.00991052) , 
3, 125.949, 1, 0, 0.502344,3.28197e-05)    );
  // itree = 455
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.306794,-0.0178488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645995,0.0113481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.745221,-0.00503935) , 
5, 0.0121083, 1, 0, 0.729428,-0.00199553) , 
5, 0.00687784, 1, 0, 0.692117,-0.0028104) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77179,0.0318822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394016,0.0060857) , 
5, 0.0296764, 1, 0, 0.524718,0.00513818) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000104236,-0.00691485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0170294) , 
6, 0.0405909, 1, 0, 6.41784e-05,-0.000700987) , 
5, 0.0332259, 1, 0, 0.113289,0.000559154) , 
5, 0.0288085, 1, 0, 0.49511,-0.00166355)    );
  // itree = 456
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231074,0.0135989) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.534173,-0.00237699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223815,-0.00988313) , 
2, 0.428561, 1, 0, 0.504471,-0.00165479) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625427,0.00488196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6109,0.0297823) , 
3, 37.7071, 1, 0, 0.617736,0.00693696) , 
6, 0.0579806, 1, 0, 0.510882,-0.00116848) , 
4, 0.00583248, 1, 0, 0.494492,-0.000679903)    );
  // itree = 457
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.249368,-0.0155408) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553427,-0.000347635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204442,0.0159054) , 
2, 0.404675, 1, 0, 0.510453,0.000627449) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624373,0.00571314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485567,-0.0145945) , 
2, 0.261614, 1, 0, 0.565627,-0.00373023) , 
6, 0.0550809, 1, 0, 0.516657,0.000137472) , 
5, 0.00577168, 1, 0, 0.504484,-0.000163148)    );
  // itree = 458
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940181,0.00321695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00264121,-0.0220004) , 
0, 0.00153645, 1, 0, 0.554532,-0.00118025) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84262,-0.0784975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635321,-0.0068585) , 
2, 0.118971, 1, 0, 0.732445,-0.0182313) , 
4, 0.0157352, 1, 0, 0.584354,-0.00403842) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584765,0.0091633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438377,-0.00784862) , 
2, 0.134867, 1, 0, 0.498648,-0.00118022) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560219,0.0265032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137042,-0.00422431) , 
4, 0.0277035, 1, 0, 0.293634,0.00734885) , 
2, 0.404669, 1, 0, 0.469073,5.01569e-05) , 
4, 0.0173949, 1, 0, 0.506552,-0.00127907)    );
  // itree = 459
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.50572,-0.00146442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465409,-0.0370877) , 
3, 34.2396, 1, 0, 0.50229,-0.00249491) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.138788,-0.0031047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769714,0.0138911) , 
7, 0.000163176, 1, 0, 0.350013,0.00202505) , 
3, 37.8461, 1, 0, 0.414005,0.000125617) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96295,0.00592462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815165,-0.00960967) , 
4, 0.0262489, 1, 0, 0.887037,-0.00269006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533764,-0.0171576) , 
5, 0.0298918, 1, 0, 0.833562,-0.00604847) , 
7, 0.000535427, 1, 0, 0.494936,-0.00106535)    );
  // itree = 460
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840124,-0.0116271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470457,0.00416421) , 
5, 0.0173388, 1, 0, 0.674477,-0.00247122) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898642,-0.0377352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826795,0.000592333) , 
0, 0.00179141, 1, 0, 0.86382,-0.0123123) , 
7, 0.000535656, 1, 0, 0.7045,-0.00403166) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0122918,-0.00130141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835191,0.0139805) , 
7, 0.000156334, 1, 0, 0.260759,0.00322544) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537716,-0.0229037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556111,-0.000434849) , 
6, 0.0451589, 1, 0, 0.553944,-0.00225518) , 
6, 0.0434981, 1, 0, 0.377427,0.00104451) , 
2, 0.119021, 1, 0, 0.504703,-0.000930812)    );
  // itree = 461
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764842,0.0089255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309032,-0.00417224) , 
2, 0.261825, 1, 0, 0.65791,0.00190694) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0182215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000187791,-0.00242506) , 
4, 0.0357343, 1, 0, 0.000122653,-0.00191332) , 
4, 0.0231828, 1, 0, 0.4284,0.000574006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649396,-0.0173056) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86323,0.0010454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894649,-0.014096) , 
5, 0.0295291, 1, 0, 0.868664,-0.00207355) , 
4, 0.0242337, 1, 0, 0.821958,-0.00682938) , 
7, 0.000538844, 1, 0, 0.503997,-0.000848072)    );
  // itree = 462
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995179,0.0209571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930314,0.0205793) , 
0, 7.38062e-05, 1, 0, 0.961099,0.00993503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00235838,-0.0238716) , 
0, 0.00155267, 1, 0, 0.58071,0.00311788) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850885,-0.0337319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.480506,-0.00601605) , 
4, 0.0215474, 1, 0, 0.608226,-0.00974433) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.349459,-0.00462764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651149,0.00453276) , 
6, 0.0493024, 1, 0, 0.436598,-0.000375621) , 
2, 0.0476016, 1, 0, 0.460089,-0.00165793) , 
4, 0.0173994, 1, 0, 0.499515,-9.69009e-05)    );
  // itree = 463
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517477,-0.00962793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729375,0.00991502) , 
5, 0.00808022, 1, 0, 0.672191,0.00133519) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.234269,-0.020974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857434,0.00258391) , 
5, 0.0153457, 1, 0, 0.467773,-0.00991229) , 
6, 0.0288163, 1, 0, 0.591298,-0.0031157) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0217389) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.795356,0.00719851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250557,-0.00586252) , 
5, 0.0266454, 1, 0, 0.519149,0.00111985) , 
4, 0.0145171, 1, 0, 0.45008,0.000304948) , 
5, 0.0169618, 1, 0, 0.491035,-0.000687075)    );
  // itree = 464
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.262785,-0.016536) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583744,0.00166848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454336,-0.0105745) , 
3, 77.9727, 1, 0, 0.560794,-0.000592355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118557,0.0101033) , 
3, 125.981, 1, 0, 0.51201,-9.39164e-05) , 
5, 0.00580659, 1, 0, 0.500194,-0.000432365)    );
  // itree = 465
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952514,0.0142006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.153543,-0.00161499) , 
0, 0.00192143, 1, 0, 0.583743,0.00346383) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929946,-0.00993242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15411,-0.00182717) , 
0, 0.00192442, 1, 0, 0.580986,-0.00411042) , 
3, 9.01026, 1, 0, 0.581468,-0.00278695) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942033,0.00149795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823057,0.0231416) , 
2, 0.213763, 1, 0, 0.905571,0.00751954) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586039,-0.00881103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131) , 
0, 0.00366772, 1, 0, 0.0704487,-0.00202132) , 
0, 0.00192505, 1, 0, 0.354974,0.00122924) , 
3, 63.0713, 1, 0, 0.500066,-0.00134353)    );
  // itree = 466
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.742856,-0.0104353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721936,0.0140424) , 
6, 0.0347935, 1, 0, 0.734254,0.000534045) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770391,0.0318162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206944,-0.00650739) , 
5, 0.0273994, 1, 0, 0.568306,0.00546125) , 
2, 0.079353, 1, 0, 0.666098,0.00255767) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.404993,-0.0402194) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.427596,0.00915319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.280156,-0.00351337) , 
2, 0.258134, 1, 0, 0.32103,-0.000231633) , 
2, 0.182537, 1, 0, 0.326188,-0.00151237) , 
2, 0.166662, 1, 0, 0.494538,0.000503433)    );
  // itree = 467
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.734625,0.0258437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903233,0.000995782) , 
6, 0.0153143, 1, 0, 0.828588,0.00427324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72414,-0.0534209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749054,-0.00862863) , 
2, 0.0102016, 1, 0, 0.73758,-0.0191993) , 
6, 0.0290928, 1, 0, 0.784863,-0.0070042) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896129,-0.0177971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351896,0.000425402) , 
0, 0.000669405, 1, 0, 0.517321,-0.00414563) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596933,0.0130477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401922,-0.00198219) , 
2, 0.11462, 1, 0, 0.448856,0.000264762) , 
5, 0.0172485, 1, 0, 0.467548,-0.000939303) , 
2, 0.0238042, 1, 0, 0.504181,-0.00163948)    );
  // itree = 468
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923863,-0.00809521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814701,-0.0206377) , 
4, 0.0154245, 1, 0, 0.897454,-0.0101211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00230959,0.0203446) , 
0, 0.00205213, 1, 0, 0.594465,-0.00625991) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0532164,-0.0290651) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631561,0.0363318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526908,0.00128864) , 
3, 12.6167, 1, 0, 0.542836,0.00162898) , 
4, 0.0173994, 1, 0, 0.4575,-0.000131719) , 
5, 0.017236, 1, 0, 0.499544,-0.00201291)    );
  // itree = 469
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633438,-0.0171822) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.156986,-0.0153482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756944,0.0177763) , 
5, 0.00932253, 1, 0, 0.425512,0.000726334) , 
6, 0.0172698, 1, 0, 0.497556,-0.00625852) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845626,0.0118298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226127,-0.0115853) , 
4, 0.0260264, 1, 0, 0.742756,0.00370455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000133407,-0.0292541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301187,0.013042) , 
4, 0.0260641, 1, 0, 0.194999,-0.00139548) , 
5, 0.0271229, 1, 0, 0.507881,0.00151769) , 
5, 0.0115123, 1, 0, 0.506398,0.000400986)    );
  // itree = 470
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775547,-0.0129848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628747,-0.00568277) , 
5, 0.0163246, 1, 0, 0.678116,-0.00496874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257274,0.01317) , 
3, 113.281, 1, 0, 0.635853,-0.00370521) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896525,0.0198798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0934482,-0.00750009) , 
0, 0.000962527, 1, 0, 0.17435,-0.000293844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.778332,0.0383831) , 
6, 0.0579817, 1, 0, 0.246756,0.0013332) , 
4, 0.0261027, 1, 0, 0.496807,-0.0019047)    );
  // itree = 471
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65486,-0.0153494) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876541,0.00401372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0954242,-0.0252831) , 
5, 0.0169943, 1, 0, 0.548809,-0.00222132) , 
5, 0.00732218, 1, 0, 0.558735,-0.00346935) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575455,0.00117203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419591,-0.00871186) , 
2, 0.190303, 1, 0, 0.517363,-0.00142124) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880811,0.0165516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.100832,-0.000568703) , 
0, 0.00192505, 1, 0, 0.312502,0.00355551) , 
2, 0.333028, 1, 0, 0.462217,-8.15622e-05) , 
4, 0.017396, 1, 0, 0.494251,-0.00120596)    );
  // itree = 472
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510727,0.00251968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00352203,-0.010858) , 
2, 0.333323, 1, 0, 0.410752,-0.000147253) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.714148,0.00014537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441673,0.0381244) , 
2, 0.307417, 1, 0, 0.642795,0.00459153) , 
6, 0.0372759, 1, 0, 0.45726,0.000802524) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631163,-0.00859267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684169,0.00989631) , 
5, 0.0230857, 1, 0, 0.672696,0.00136029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52178,-0.00457342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517186,-0.0205744) , 
1, 1.35027, 1, 0, 0.521084,-0.00525916) , 
2, 0.166595, 1, 0, 0.584916,-0.00247224) , 
6, 0.0434887, 1, 0, 0.501047,-0.000320745)    );
  // itree = 473
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576169,-0.000266762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583747,-0.0367514) , 
3, 34.2396, 1, 0, 0.576785,-0.00166324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674422,0.0118704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0499983,-0.00788253) , 
5, 0.0266784, 1, 0, 0.433037,0.00302112) , 
3, 37.8461, 1, 0, 0.494989,0.00100226) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592308,-0.0233002) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664697,0.0269246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.543349,-0.00766339) , 
2, 0.142866, 1, 0, 0.587594,-0.000667945) , 
5, 0.028664, 1, 0, 0.589131,-0.00926982) , 
6, 0.0550822, 1, 0, 0.504882,-7.71363e-05)    );
  // itree = 474
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.320359,0.0263783) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661892,-0.0154294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429698,0.00426819) , 
4, 0.0111439, 1, 0, 0.45947,0.00016954) , 
4, 0.00590259, 1, 0, 0.45103,0.000772599) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64947,-0.0184753) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661808,-0.0226738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579757,-0.00209047) , 
2, 0.0475609, 1, 0, 0.589809,-0.00253587) , 
6, 0.0451464, 1, 0, 0.596116,-0.00393157) , 
6, 0.0434893, 1, 0, 0.500038,-0.000816396)    );
  // itree = 475
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991644,0.00615791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843391,-0.00691853) , 
0, 0.000137226, 1, 0, 0.911498,-0.00477216) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 6.47021e-05,-0.0107801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00148596,0.0225456) , 
2, 0.35695, 1, 0, 0.000464854,4.56446e-05) , 
0, 0.00288664, 1, 0, 0.539198,-0.00280333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.084562,0.0197267) , 
3, 138.756, 1, 0, 0.498641,-0.00201056)    );
  // itree = 476
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665174,-0.0157675) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938293,-0.000300419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.778579,-0.00739752) , 
2, 0.33333, 1, 0, 0.916353,-0.00178734) , 
5, 0.00709863, 1, 0, 0.903223,-0.00261446) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00127495,0.0515434) , 
6, 0.0308914, 1, 0, 0.000384742,6.29794e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133459) , 
6, 0.0463763, 1, 0, 0.000297906,-0.000129064) , 
0, 0.00288677, 1, 0, 0.492908,-0.00148502)    );
  // itree = 477
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715392,-0.00984688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514475,-0.00193355) , 
5, 0.00696635, 1, 0, 0.543755,-0.00271975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473753,-0.0206452) , 
7, 0.000182257, 1, 0, 0.529835,-0.00558542) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656414,-0.00949635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721933,-0.0303773) , 
6, 0.0463636, 1, 0, 0.672945,-0.00680254) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696165,0.0161813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417055,-0.000422632) , 
4, 0.0189281, 1, 0, 0.46002,0.00108961) , 
2, 0.0476383, 1, 0, 0.491024,-5.95644e-05) , 
4, 0.0145029, 1, 0, 0.500047,-0.00134425)    );
  // itree = 478
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617108,-0.0162153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576657,0.00130438) , 
4, 0.0146725, 1, 0, 0.586672,-0.00214979) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.162587,-0.0123203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612503,0.00910834) , 
6, 0.0145064, 1, 0, 0.549667,0.00253742) , 
3, 28.8363, 1, 0, 0.565068,0.000586748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794322,-0.0154395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0371489,-0.00215544) , 
0, 0.00192488, 1, 0, 0.199549,-0.00575958) , 
3, 100.923, 1, 0, 0.5002,-0.000539523)    );
  // itree = 479
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.756228,0.000173051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618917,-0.0132121) , 
2, 0.142718, 1, 0, 0.743896,-0.000966131) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882172,0.0103536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125116,-0.00432433) , 
0, 0.00192368, 1, 0, 0.405735,0.00257493) , 
2, 0.166616, 1, 0, 0.588852,0.000657414) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952558,0.00114515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.820407,-0.00936725) , 
2, 0.0712367, 1, 0, 0.867068,-0.00757782) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000137548,-0.00413284) , 
4, 0.0319036, 1, 0, 7.0353e-05,-0.000251522) , 
0, 0.00288758, 1, 0, 0.402013,-0.00364802) , 
3, 50.3873, 1, 0, 0.502988,-0.00132121)    );
  // itree = 480
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849938,0.0436549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.134541,0.00481033) , 
2, 0.0238042, 1, 0, 0.340293,0.00533347) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601977,-0.00431825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624268,-0.0422448) , 
3, 34.1951, 1, 0, 0.603742,-0.00369476) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.434615,0.00146284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587468,-0.0152515) , 
6, 0.0579814, 1, 0, 0.442467,-1.75806e-06) , 
3, 37.7947, 1, 0, 0.511137,-0.00157422) , 
4, 0.00872714, 1, 0, 0.495362,-0.000936377)    );
  // itree = 481
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.540384,-0.00115917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141976,0.0137998) , 
3, 113.354, 1, 0, 0.487114,0.000109166) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674691,-0.0192825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498682,-0.00110956) , 
3, 50.4371, 1, 0, 0.592384,-0.00930605) , 
6, 0.0496844, 1, 0, 0.493951,-0.000502367) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.754135,-0.0105882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934036,0.000707034) , 
5, 0.0282379, 1, 0, 0.842434,-0.00515311) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669625,0.027175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.299076,0.0357601) , 
5, 0.0288554, 1, 0, 0.429787,0.00897125) , 
0, 0.00191533, 1, 0, 0.56401,0.004377) , 
6, 0.0521841, 1, 0, 0.505402,0.000295173)    );
  // itree = 482
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.516771,-0.016274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861369,-0.00173822) , 
5, 0.00663513, 1, 0, 0.833064,-0.00254553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0209555,-0.0251385) , 
5, 0.0231811, 1, 0, 0.635372,-0.00435675) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0165563) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769428,0.0131471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0286363) , 
4, 0.0302869, 1, 0, 0.411775,0.00180064) , 
5, 0.022235, 1, 0, 0.324346,9.81572e-05) , 
4, 0.0231361, 1, 0, 0.487803,-0.00224307)    );
  // itree = 483
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895204,0.031041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143669,-0.00459234) , 
2, 0.0237136, 1, 0, 0.34254,0.00124392) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764077,-0.0337485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461505,0.00116293) , 
6, 0.0216321, 1, 0, 0.625017,-0.0136595) , 
4, 0.00883881, 1, 0, 0.450247,-0.00443865) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.837962,0.0292013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633257,-0.0103524) , 
4, 0.0162979, 1, 0, 0.686714,-0.00259189) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532106,0.0119889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315415,-0.00116014) , 
2, 0.264186, 1, 0, 0.415408,0.00177832) , 
2, 0.119061, 1, 0, 0.511202,0.00023526) , 
4, 0.0116019, 1, 0, 0.501395,-0.00051672)    );
  // itree = 484
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.295447,0.0199823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456113,-0.00359848) , 
4, 0.00580854, 1, 0, 0.446004,-0.000559632) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870039,-0.0182805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130983) , 
0, 0.00287933, 1, 0, 0.26776,-0.00686227) , 
6, 0.043474, 1, 0, 0.413562,-0.00170677) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88711,-0.00295194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832921,-0.00934993) , 
2, 0.238263, 1, 0, 0.865503,-0.00566809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892096,0.0243995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545405,-0.00454264) , 
5, 0.0293578, 1, 0, 0.795052,0.0115445) , 
0, 0.00179141, 1, 0, 0.828343,0.00341092) , 
7, 0.000534736, 1, 0, 0.492677,-0.000730635)    );
  // itree = 485
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.304942,-0.0155221) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67809,0.00519886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465154,-0.00332494) , 
4, 0.0203122, 1, 0, 0.563476,0.000219588) , 
5, 0.00584932, 1, 0, 0.551361,-0.000171019) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750793,-0.00245966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633677,0.037127) , 
0, 0.00163624, 1, 0, 0.689301,0.0143163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131088) , 
0, 0.00384402, 1, 0, 0.233427,0.00457229) , 
2, 0.380867, 1, 0, 0.50069,0.000584963)    );
  // itree = 486
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.335451,-0.000678809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57496,-0.0109208) , 
6, 0.0292158, 1, 0, 0.383425,-0.00175003) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.182829,-0.0153265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690761,0.0041345) , 
4, 0.0173885, 1, 0, 0.616915,0.00116528) , 
6, 0.0340894, 1, 0, 0.494049,-0.000368804) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941186,0.0236262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.37653,-0.0216348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451425,-0.00521984) , 
4, 0.0289953, 1, 0, 0.412261,-0.0102786) , 
0, 0.000955934, 1, 0, 0.571897,-0.00526715) , 
6, 0.0550809, 1, 0, 0.502528,-0.000902354)    );
  // itree = 487
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.242719,-0.0105474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641275,0.0215989) , 
5, 0.00495144, 1, 0, 0.519211,0.00391826) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938431,-0.00968646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350466,0.000366093) , 
0, 0.000962526, 1, 0, 0.514926,-0.00126267) , 
5, 0.011532, 1, 0, 0.515547,-0.000511613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202937,-0.01461) , 
2, 0.452243, 1, 0, 0.495757,-0.00102635)    );
  // itree = 488
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763696,-0.0490784) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919887,-0.0171562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663315,0.0252999) , 
5, 0.0157972, 1, 0, 0.793237,-0.00286435) , 
2, 0.00452968, 1, 0, 0.78634,-0.00748912) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909675,0.0320117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923186,0.000164377) , 
4, 0.0112029, 1, 0, 0.92121,0.0026832) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.137282,-0.0208394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332149,-0.000963359) , 
4, 0.0144992, 1, 0, 0.295894,-0.00185338) , 
0, 0.000962418, 1, 0, 0.469244,-0.000595744) , 
2, 0.0238037, 1, 0, 0.505821,-0.00139088)    );
  // itree = 489
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729497,0.0158276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728587,-0.00954898) , 
3, 43.1824, 1, 0, 0.729397,0.00280791) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.399087,-0.00903846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.40623,0.00746139) , 
3, 28.7906, 1, 0, 0.401845,-0.00231175) , 
2, 0.166616, 1, 0, 0.581735,0.000499936) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963504,0.0064346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.776807,-0.00797858) , 
0, 0.000272978, 1, 0, 0.861365,-0.00579506) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000357678,0.00388819) , 
6, 0.0347554, 1, 0, 0.000138944,-0.00014169) , 
0, 0.00288758, 1, 0, 0.399563,-0.00276365) , 
3, 50.3873, 1, 0, 0.49797,-0.0010007)    );
  // itree = 490
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601285,-0.00196079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541256,0.0454939) , 
3, 28.8302, 1, 0, 0.59292,0.000394358) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896044,-0.00965728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000414804,0.0018392) , 
0, 0.00287311, 1, 0, 0.52953,-0.00469172) , 
3, 33.6402, 1, 0, 0.560369,-0.00221735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530314,-0.0101152) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801124,0.00904208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000130517,-0.00665193) , 
0, 0.00288725, 1, 0, 0.223933,0.00307647) , 
2, 0.0475629, 1, 0, 0.262707,0.00162652) , 
3, 88.3073, 1, 0, 0.497962,-0.00141146)    );
  // itree = 491
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934812,-0.00801735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79674,-0.0245596) , 
0, 0.00145218, 1, 0, 0.922219,-0.00875859) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00215244,0.0412595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000160653,-0.0123932) , 
6, 0.0116195, 1, 0, 0.00077673,-0.000204414) , 
0, 0.00192368, 1, 0, 0.440769,-0.00428907) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.714058,0.0101049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609637,-0.00384033) , 
2, 0.0849987, 1, 0, 0.640503,-0.000573733) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.274585,0.0113919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797201,0.0190387) , 
7, 0.000550675, 1, 0, 0.512696,0.00783629) , 
2, 0.357056, 1, 0, 0.611253,0.00135101) , 
6, 0.040586, 1, 0, 0.508819,-0.0020378)    );
  // itree = 492
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98039,0.00256487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925976,0.0422338) , 
0, 0.000316171, 1, 0, 0.957863,0.00978575) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0486515,-0.0126383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0217749,0.00635841) , 
3, 75.7054, 1, 0, 0.0378548,-0.000747173) , 
0, 0.000948518, 1, 0, 0.296962,0.00221927) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562733,0.00323356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136953,-0.0215459) , 
2, 0.0960695, 1, 0, 0.274726,-0.0100605) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.827153,0.0163941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617049,-0.00330613) , 
4, 0.0166971, 1, 0, 0.636185,-0.00116148) , 
4, 0.0144901, 1, 0, 0.583053,-0.00246959) , 
6, 0.0260911, 1, 0, 0.493534,-0.00100243)    );
  // itree = 493
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929331,-0.0348934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301813,-0.0170546) , 
0, 0.000600792, 1, 0, 0.536831,-0.0139783) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600725,0.00879815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571802,-0.00804581) , 
3, 24.0245, 1, 0, 0.586563,-0.00101435) , 
5, 0.0116158, 1, 0, 0.578757,-0.00304919) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868123,-0.00783856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000772293,0.0181458) , 
0, 0.00192484, 1, 0, 0.117498,-0.000882625) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.749059,0.00497749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927137,0.031281) , 
1, 1.90006, 1, 0, 0.773108,0.00483828) , 
7, 0.000155749, 1, 0, 0.401986,0.00159984) , 
3, 50.4571, 1, 0, 0.49874,-0.000944766)    );
  // itree = 494
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990583,0.0218841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896169,-0.0183905) , 
8, 0.256621, 1, 0, 0.975748,-0.000301728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812578,-0.00438829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847221,-0.0135518) , 
5, 0.0252573, 1, 0, 0.820444,-0.0096559) , 
0, 0.000274852, 1, 0, 0.892455,-0.00531857) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000981446,0.0299249) , 
6, 0.0290231, 1, 0, 0.000307536,-1.2525e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135632) , 
6, 0.0435075, 1, 0, 0.000229692,-0.000211498) , 
0, 0.00288725, 1, 0, 0.494669,-0.00304165)    );
  // itree = 495
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.341901,0.0184853) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655979,-0.00100656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321983,-0.0105308) , 
3, 88.1779, 1, 0, 0.590809,-0.00171238) , 
4, 0.00582961, 1, 0, 0.578076,-0.00110397) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796139,0.000508425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670422,0.0239954) , 
0, 0.00128117, 1, 0, 0.72829,0.0125337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000120591,-0.00840482) , 
0, 0.00384967, 1, 0, 0.264956,0.00442122) , 
2, 0.333323, 1, 0, 0.506986,0.000150449)    );
  // itree = 496
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985472,-0.0254128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96747,0.0313946) , 
2, 0.238037, 1, 0, 0.981591,-0.000754078) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832787,-0.0121007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914559,0.00338585) , 
0, 0.00168809, 1, 0, 0.849657,-0.0124185) , 
0, 0.000274793, 1, 0, 0.921148,-0.00609788) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00048335,-0.0143993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89934,0.0141237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131018) , 
0, 0.00366523, 1, 0, 0.160247,0.00176332) , 
5, 0.0230459, 1, 0, 0.117395,0.000233304) , 
0, 0.00192368, 1, 0, 0.499438,-0.00277605)    );
  // itree = 497
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.188562,0.00342736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447611,-0.0544119) , 
6, 0.0140792, 1, 0, 0.24802,-0.00408493) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684436,0.0151397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610946,-0.00088971) , 
4, 0.01742, 1, 0, 0.637687,0.0012595) , 
6, 0.0173941, 1, 0, 0.572195,0.000361246) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960751,0.00700991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610235,-0.0117112) , 
0, 0.000271972, 1, 0, 0.747111,-0.0130849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00167892,0.0269502) , 
0, 0.00288758, 1, 0, 0.256511,-0.00375116) , 
2, 0.333323, 1, 0, 0.503045,-0.000539564)    );
  // itree = 498
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600797,-0.00761432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516045,0.00297098) , 
3, 14.4161, 1, 0, 0.531383,0.000277811) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631592,0.0133611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582869,-0.0210904) , 
6, 0.0593665, 1, 0, 0.606027,-0.0097757) , 
6, 0.0579806, 1, 0, 0.535815,-0.000319186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0550512,-0.0122886) , 
3, 151.371, 1, 0, 0.498146,-0.000995646)    );
  // itree = 499
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.259898,0.0210237) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636642,-0.0115142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54593,0.000862462) , 
4, 0.0136862, 1, 0, 0.561633,-0.000615715) , 
4, 0.00581413, 1, 0, 0.544847,-0.000181181) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222353,-0.0160087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.222623,-0.00558824) , 
2, 0.441072, 1, 0, 0.222521,-0.0074357) , 
2, 0.404663, 1, 0, 0.504016,-0.00110014)    );
  // itree = 500
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585188,0.000207617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563584,-0.0164639) , 
3, 12.3515, 1, 0, 0.582089,-0.00178868) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584604,-0.00928804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597123,0.013659) , 
5, 0.0116275, 1, 0, 0.595189,0.00300468) , 
3, 14.4163, 1, 0, 0.589848,0.00105037) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9792,0.0146688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806863,-0.00802085) , 
0, 0.000274184, 1, 0, 0.884747,-0.00484757) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000334264,-0.00193204) , 
6, 0.0376335, 1, 0, 0.000121076,-0.000200139) , 
0, 0.00288758, 1, 0, 0.438714,-0.00250431) , 
3, 37.843, 1, 0, 0.504089,-0.000966697)    );
  // itree = 501
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834787,0.0084312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00192081,-0.019544) , 
5, 0.0246853, 1, 0, 0.673403,0.0028766) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861336,-0.0110777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0541779,0.013167) , 
0, 0.00192505, 1, 0, 0.200987,-0.00144978) , 
4, 0.0231914, 1, 0, 0.488828,0.00118627) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81977,-0.0168691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836542,-0.00712208) , 
6, 0.0563464, 1, 0, 0.828356,-0.0150735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47052,-0.0203779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414337,0.00654328) , 
1, 1.08201, 1, 0, 0.42988,-0.00161047) , 
0, 0.00191658, 1, 0, 0.561132,-0.006045) , 
6, 0.052182, 1, 0, 0.500558,1.30753e-05)    );
  // itree = 502
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.581791,-0.00128122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397058,-0.0196153) , 
3, 97.0483, 1, 0, 0.572033,-0.00115832) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.33718,0.00927892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0961692,0.000439678) , 
5, 0.0231302, 1, 0, 0.179464,0.00228485) , 
3, 113.244, 1, 0, 0.520799,-0.000708949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212054,-0.0119071) , 
2, 0.452243, 1, 0, 0.501998,-0.00106997)    );
  // itree = 503
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970815,0.00336642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908123,0.00855537) , 
2, 0.108747, 1, 0, 0.943716,0.00369762) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0345603,-0.0120719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449552,0.0195826) , 
6, 0.052187, 1, 0, 0.12189,-0.000338203) , 
0, 0.00192488, 1, 0, 0.545015,0.00173967) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.693815,-0.012024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6961,-0.00528084) , 
2, 0.43765, 1, 0, 0.694945,-0.0161663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000953491,0.00287232) , 
0, 0.00288677, 1, 0, 0.225156,-0.00511186) , 
2, 0.380941, 1, 0, 0.494032,0.000647594)    );
  // itree = 504
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.235082,0.0188674) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670503,0.00881277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.360888,-0.0426471) , 
3, 62.1028, 1, 0, 0.562742,-0.00775126) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719284,0.0148631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456972,-0.000963043) , 
4, 0.0181894, 1, 0, 0.520908,0.00097137) , 
4, 0.0110753, 1, 0, 0.524974,0.00012358) , 
4, 0.00583248, 1, 0, 0.508502,0.000494571)    );
  // itree = 505
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.714665,-0.00345574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351827,0.00407741) , 
5, 0.0218604, 1, 0, 0.533289,-0.000547951) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206718,0.00373832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188821,0.0248306) , 
2, 0.441061, 1, 0, 0.195805,0.00522305) , 
2, 0.404638, 1, 0, 0.492606,0.000147727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582456,-0.00388991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588283,-0.0149924) , 
6, 0.0593669, 1, 0, 0.585492,-0.00826087) , 
6, 0.0579806, 1, 0, 0.497665,-0.000310235)    );
  // itree = 506
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947288,0.00239484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747635,-0.0225696) , 
0, 0.000979699, 1, 0, 0.904138,-0.00914117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00179008,0.00754641) , 
0, 0.00229088, 1, 0, 0.513047,-0.00491652) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.109945,-0.0146163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798336,0.0074287) , 
5, 0.0151006, 1, 0, 0.675815,0.00256928) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833288,-0.00908781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131016) , 
0, 0.00385011, 1, 0, 0.142263,-0.00188916) , 
5, 0.0288085, 1, 0, 0.490272,0.00101886) , 
4, 0.0145011, 1, 0, 0.495797,-0.000420987)    );
  // itree = 507
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.261964,-0.021104) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729364,0.00440432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0887308,-0.00980835) , 
4, 0.0294108, 1, 0, 0.568263,0.000924971) , 
4, 0.00580638, 1, 0, 0.553453,0.00029227) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783131,-0.00983825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0397292,-0.00070887) , 
0, 0.00192488, 1, 0, 0.208558,-0.00435094) , 
3, 100.922, 1, 0, 0.496,-0.000481204)    );
  // itree = 508
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932788,0.0125152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337196,-0.0165643) , 
2, 0.0237819, 1, 0, 0.511995,-0.00652618) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.390717,-0.017128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579184,-0.000713709) , 
4, 0.0144992, 1, 0, 0.546748,-0.0011201) , 
5, 0.0114935, 1, 0, 0.541606,-0.00192004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.081249,0.010764) , 
3, 138.58, 1, 0, 0.497973,-0.00134669)    );
  // itree = 509
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584756,-0.00291357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576687,-0.0163416) , 
3, 11.4486, 1, 0, 0.582843,-0.00403217) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951498,-0.00412477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377159,0.00890986) , 
0, 0.000962026, 1, 0, 0.577351,0.00150962) , 
3, 15.0239, 1, 0, 0.578894,-4.69451e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888554,0.00426387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769145,-0.0127288) , 
0, 0.00109191, 1, 0, 0.836168,-0.00900462) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000511526,0.00273494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130953) , 
5, 0.0403217, 1, 0, 0.000248787,-5.16296e-05) , 
0, 0.00288758, 1, 0, 0.355552,-0.00385705) , 
3, 63.0766, 1, 0, 0.499028,-0.00140942)    );
  // itree = 510
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967814,0.0113832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00189662,-0.0159802) , 
0, 0.00157823, 1, 0, 0.641044,0.00203372) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586719,-0.00701394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438495,0.000626757) , 
2, 0.126938, 1, 0, 0.498031,-0.00124397) , 
4, 0.017441, 1, 0, 0.548173,-9.47735e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.740024,-0.00676853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654522,-0.0144429) , 
0, 0.00122313, 1, 0, 0.697018,-0.0211676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00131244,0.0136164) , 
0, 0.00288758, 1, 0, 0.229743,-0.00651666) , 
2, 0.380813, 1, 0, 0.498324,-0.0011001)    );
  // itree = 511
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933785,-0.0065193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807867,0.0123935) , 
3, 110.037, 1, 0, 0.926875,-0.00288582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687517,-0.0134812) , 
2, 0.380836, 1, 0, 0.905016,-0.00487926) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00157296,0.0309316) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000155431,-0.00397268) , 
4, 0.0318987, 1, 0, 0.000108321,-0.000270382) , 
4, 0.0202976, 1, 0, 0.000561202,0.000147228) , 
0, 0.00288758, 1, 0, 0.49247,-0.00258654)    );
  // itree = 512
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875677,-0.0118059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933388,-0.00272852) , 
5, 0.0162328, 1, 0, 0.914257,-0.00407801) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00125765,0.0169291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135173) , 
4, 0.0231959, 1, 0, 0.000460098,-0.00010424) , 
0, 0.00288677, 1, 0, 0.564398,-0.0025566) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466157,-0.00837191) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.756356,0.0180729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000287666,-0.000311478) , 
0, 0.00288758, 1, 0, 0.208536,0.00541792) , 
2, 0.0952712, 1, 0, 0.271768,0.00269874) , 
3, 87.9439, 1, 0, 0.500383,-0.00140696)    );
  // itree = 513
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57647,-0.0235234) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770828,0.00257949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442915,-0.00601528) , 
2, 0.119011, 1, 0, 0.583604,-0.00186582) , 
3, 2.40274, 1, 0, 0.583212,-0.00247513) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.185535,-0.00265819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804374,0.0177037) , 
7, 0.00018211, 1, 0, 0.461265,0.00360997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0667227,0.000209138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448721,-0.012456) , 
6, 0.0434516, 1, 0, 0.220797,-0.00405666) , 
2, 0.333333, 1, 0, 0.399748,0.00164869) , 
3, 50.3824, 1, 0, 0.499825,-0.000600796)    );
  // itree = 514
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222429,0.0163786) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601563,-0.00418373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532642,0.0223363) , 
3, 67.2796, 1, 0, 0.59161,-0.000900909) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778874,-0.0119159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000256119,0.00230155) , 
0, 0.00288758, 1, 0, 0.257046,-0.0061909) , 
3, 88.3067, 1, 0, 0.519741,-0.00203727) , 
4, 0.00580221, 1, 0, 0.502296,-0.00151377)    );
  // itree = 515
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908322,0.0383144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944326,-0.00552513) , 
4, 0.00801067, 1, 0, 0.933232,0.00393536) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0349266,-0.0322898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00295272,0.0105275) , 
2, 0.119097, 1, 0, 0.0105288,-0.00117916) , 
0, 0.000962527, 1, 0, 0.1794,-0.000243107) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91121,-0.0138407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890628,0.00628128) , 
3, 24.9702, 1, 0, 0.898005,-0.000495322) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83588,-0.0223326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739392,-0.0062275) , 
2, 0.132662, 1, 0, 0.763337,-0.00954553) , 
2, 0.0714264, 1, 0, 0.800289,-0.00706224) , 
7, 0.000155749, 1, 0, 0.497356,-0.00373517)    );
  // itree = 516
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511485,-0.0108753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.496119,0.0043016) , 
3, 21.0219, 1, 0, 0.502006,-0.0009326) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914403,-0.00150189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827418,0.0164587) , 
0, 0.00164598, 1, 0, 0.868129,0.00496685) , 
7, 0.000534736, 1, 0, 0.579812,0.000321113) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227773,0.00997824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544158,-0.02256) , 
4, 0.00966534, 1, 0, 0.442227,-0.0112512) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.257227,0.00601942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557548,-0.0120831) , 
6, 0.055081, 1, 0, 0.294007,-0.000239615) , 
4, 0.0202865, 1, 0, 0.352354,-0.00457433) , 
3, 63.0713, 1, 0, 0.498027,-0.0014391)    );
  // itree = 517
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.332389,-0.00828676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705709,0.0473585) , 
6, 0.0115901, 1, 0, 0.553237,0.00274187) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633897,0.0151433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748917,-0.0141802) , 
1, 1.13674, 1, 0, 0.738264,-0.00575081) , 
6, 0.0202931, 1, 0, 0.695827,-0.00380297) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899808,-0.00326717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371929,0.00717077) , 
0, 0.000887387, 1, 0, 0.514025,0.00221054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0244112) , 
4, 0.0318836, 1, 0, 0.372997,0.00101457) , 
2, 0.119021, 1, 0, 0.498356,-0.000856143)    );
  // itree = 518
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924049,-0.0053009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643586,-0.0174925) , 
0, 0.001257, 1, 0, 0.889544,-0.00811835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00153301,0.0105985) , 
0, 0.00203105, 1, 0, 0.597167,-0.00522807) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53922,-0.0130944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556059,0.0210412) , 
3, 3.60598, 1, 0, 0.553521,0.00409124) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56317,0.00843703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.367341,-0.00571738) , 
2, 0.0951665, 1, 0, 0.413555,-0.00131571) , 
3, 25.2306, 1, 0, 0.453298,0.000219575) , 
5, 0.017289, 1, 0, 0.497097,-0.00143889)    );
  // itree = 519
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946183,0.0156561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355692,-0.0182191) , 
2, 0.0237776, 1, 0, 0.543992,-0.00728171) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753963,0.0151614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547545,0.00160969) , 
5, 0.0163467, 1, 0, 0.582551,0.00160733) , 
5, 0.0112791, 1, 0, 0.576967,0.00032004) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939807,6.09881e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76948,-0.0130545) , 
0, 0.000527608, 1, 0, 0.84869,-0.0114601) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000153844,-0.00117332) , 
4, 0.0289857, 1, 0, 8.20392e-05,-0.000215874) , 
0, 0.00288758, 1, 0, 0.355276,-0.00492226) , 
3, 63.0764, 1, 0, 0.497331,-0.00156311)    );
  // itree = 520
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.725393,0.00136226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0116843,-0.0265007) , 
5, 0.0230459, 1, 0, 0.462709,-0.000526478) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825768,-0.0157918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829148,-0.00184814) , 
2, 0.134969, 1, 0, 0.82771,-0.00682452) , 
7, 0.000534736, 1, 0, 0.531841,-0.00171934) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750324,0.0160483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.08289,0.00338938) , 
0, 0.00191952, 1, 0, 0.230668,0.00430897) , 
2, 0.40475, 1, 0, 0.494599,-0.000973896)    );
  // itree = 521
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.362004,0.00570003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384179,-0.00920132) , 
6, 0.0314937, 1, 0, 0.370561,-0.000627319) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920511,-0.00362892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804944,0.018468) , 
0, 0.00161542, 1, 0, 0.866899,0.00439574) , 
7, 0.00039898, 1, 0, 0.492564,0.000607375) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673131,0.0254028) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636416,-7.70912e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498831,-0.0184809) , 
3, 37.7788, 1, 0, 0.557393,-0.0104369) , 
2, 0.118954, 1, 0, 0.588898,-0.00549633) , 
6, 0.0550849, 1, 0, 0.502485,-2.12446e-05)    );
  // itree = 522
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98917,0.0436888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986892,0.0219321) , 
6, 0.0175798, 1, 0, 0.987336,0.00605561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932985,-0.012257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.189855,0.0100298) , 
0, 0.00187133, 1, 0, 0.488948,-0.00304563) , 
0, 0.000958289, 1, 0, 0.73924,0.00152503) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902076,-0.0204307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837225,0.0039631) , 
2, 0.268749, 1, 0, 0.87811,-0.0100034) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.317659,0.00657125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156096,-0.00629088) , 
2, 0.307092, 1, 0, 0.250133,0.000110971) , 
0, 0.000962256, 1, 0, 0.385676,-0.00207212) , 
2, 0.0952352, 1, 0, 0.500908,-0.000899746)    );
  // itree = 523
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995391,0.0426162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599103,-0.0161413) , 
0, 0.000756553, 1, 0, 0.828927,0.00144965) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470225,-0.0184479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0508947,-0.00808693) , 
2, 0.152996, 1, 0, 0.158227,-0.00805604) , 
2, 0.0951771, 1, 0, 0.519947,-0.00292946) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936068,-0.00836585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300087,0.0122079) , 
0, 0.000961714, 1, 0, 0.455392,0.00170763) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918169,0.0169093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493375,-0.0106102) , 
0, 0.000956419, 1, 0, 0.639555,-0.00397864) , 
6, 0.052184, 1, 0, 0.489295,0.000660818) , 
4, 0.0144974, 1, 0, 0.496517,-0.000185087)    );
  // itree = 524
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801156,-0.0166948) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668846,0.00417766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.222016,0.0244651) , 
3, 113.354, 1, 0, 0.620052,0.00231718) , 
2, 0.00906563, 1, 0, 0.635547,0.00150855) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95066,0.0110311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681447,-0.0120966) , 
0, 0.000274983, 1, 0, 0.823841,-0.00963636) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.103796,0.0077256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0641939,-0.0165291) , 
2, 0.426175, 1, 0, 0.0937972,-0.000154767) , 
0, 0.00192505, 1, 0, 0.318869,-0.00307793) , 
2, 0.190406, 1, 0, 0.493324,-0.000551281)    );
  // itree = 525
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621243,0.0100485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777019,-0.0158386) , 
6, 0.0227939, 1, 0, 0.716172,-0.0015616) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0146351,-0.00183141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794905,0.0111049) , 
7, 0.000159186, 1, 0, 0.256715,0.00281453) , 
2, 0.119044, 1, 0, 0.455801,0.00091832) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624131,-0.0157345) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655634,0.00307129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382907,-0.0101152) , 
3, 75.5819, 1, 0, 0.580269,-0.00108514) , 
6, 0.0451589, 1, 0, 0.585287,-0.00248601) , 
6, 0.0434945, 1, 0, 0.500241,-0.000250055)    );
  // itree = 526
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99316,0.0183839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926885,0.0169246) , 
0, 0.000153782, 1, 0, 0.95936,0.00773741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00259976,-0.00723807) , 
0, 0.00162981, 1, 0, 0.607141,0.00428716) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78366,-0.0191879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.265301,-0.00101131) , 
0, 0.0014446, 1, 0, 0.389202,-0.00564917) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803802,0.0195564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.225953,-0.000235257) , 
5, 0.0276972, 1, 0, 0.420157,0.00286507) , 
5, 0.0230462, 1, 0, 0.410033,8.03273e-05) , 
4, 0.0202992, 1, 0, 0.494612,0.00188548)    );
  // itree = 527
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784697,0.000866956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64986,0.0195528) , 
2, 0.0872213, 1, 0, 0.736909,0.00206965) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62352,-0.0158963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.286918,0.000530642) , 
4, 0.0202498, 1, 0, 0.449065,-0.00584279) , 
3, 75.5812, 1, 0, 0.66875,0.000196039) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815298,-0.013132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00135983,0.0107774) , 
0, 0.00288438, 1, 0, 0.397239,-0.00782999) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.385575,-0.0041785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223182,0.00491699) , 
3, 70.2027, 1, 0, 0.288681,0.000336002) , 
3, 37.7963, 1, 0, 0.331244,-0.00286566) , 
2, 0.166616, 1, 0, 0.498199,-0.00135112)    );
  // itree = 528
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.26821,-0.0125204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462207,-0.032197) , 
4, 0.00662531, 1, 0, 0.331426,-0.0117345) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585322,-0.00150504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476755,0.034487) , 
3, 86.3455, 1, 0, 0.578244,-1.209e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750497,-0.00950486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000166975,-0.00258531) , 
0, 0.00288425, 1, 0, 0.222859,-0.00475671) , 
3, 100.76, 1, 0, 0.520587,-0.000781845) , 
4, 0.00870241, 1, 0, 0.502557,-0.0018258)    );
  // itree = 529
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383559,0.0191632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.22581,-0.00992661) , 
3, 37.7887, 1, 0, 0.287626,-0.000284794) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600845,0.00850404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388991,0.061333) , 
3, 48.19, 1, 0, 0.501662,0.00564356) , 
6, 0.0248705, 1, 0, 0.331182,0.000921609) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622587,-0.000642609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379201,-0.00688687) , 
2, 0.428422, 1, 0, 0.600054,-0.000926111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51545,-0.0228379) , 
1, 1.94544, 1, 0, 0.593854,-0.00220249) , 
6, 0.0290103, 1, 0, 0.495618,-0.00103412)    );
  // itree = 530
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607946,0.025374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0322606,-0.00605594) , 
2, 0.0475696, 1, 0, 0.144976,0.000417034) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894923,-0.00288528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725362,-0.0197284) , 
4, 0.0190438, 1, 0, 0.863984,-0.00621645) , 
7, 0.000106545, 1, 0, 0.434933,-0.00225808) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659415,-0.00947229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444962,0.0102764) , 
3, 62.9376, 1, 0, 0.582404,-0.00151569) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934974,-0.00606898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493087,0.0210649) , 
0, 0.000962026, 1, 0, 0.64314,0.00434327) , 
1, 1.2924, 1, 0, 0.607041,0.000860977) , 
6, 0.040591, 1, 0, 0.503741,-0.0010111)    );
  // itree = 531
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.2349,0.0255677) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667901,-0.00916379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460928,-0.0234413) , 
3, 49.9398, 1, 0, 0.576421,-0.00713009) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.403512,0.00369859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668423,-0.00654972) , 
6, 0.0434893, 1, 0, 0.503902,-0.00110912) , 
4, 0.013676, 1, 0, 0.515551,-0.00207634) , 
4, 0.0058132, 1, 0, 0.500095,-0.00146552)    );
  // itree = 532
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980064,-0.00507863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973177,0.0368046) , 
3, 88.8382, 1, 0, 0.979271,0.000413939) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85628,-0.00358615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75097,-0.0131252) , 
3, 50.1963, 1, 0, 0.814317,-0.0111162) , 
0, 0.000274852, 1, 0, 0.890215,-0.00581096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000992493,0.014149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131037) , 
4, 0.0338403, 1, 0, 0,-0.000403311) , 
4, 0.0203077, 1, 0, 0.000313075,-0.000118369) , 
0, 0.00288733, 1, 0, 0.499945,-0.00331445)    );
  // itree = 533
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603536,-0.0202485) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91462,0.000536377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898877,-0.00945155) , 
7, 0.000432704, 1, 0, 0.907231,-0.00367388) , 
5, 0.00707209, 1, 0, 0.891036,-0.00481662) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000311135,0.00467606) , 
5, 0.0288029, 1, 0, 0.000199743,-0.000105377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00266198,0.0480487) , 
2, 0.380865, 1, 0, 0.000768158,0.000386101) , 
0, 0.00288664, 1, 0, 0.496102,-0.00250863)    );
  // itree = 534
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818973,-0.0155692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868212,0.00325085) , 
6, 0.0176494, 1, 0, 0.859374,-0.000736239) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894858,-0.0113692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190038,-0.00227684) , 
0, 0.00171273, 1, 0, 0.538834,-0.00624397) , 
2, 0.0714264, 1, 0, 0.647671,-0.00437385) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0168769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000247492,0.00386943) , 
4, 0.039332, 1, 0, 0.000146797,-0.00123835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949693,0.0178596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386272,0.00223001) , 
4, 0.0293437, 1, 0, 0.712488,0.00571453) , 
6, 0.0521841, 1, 0, 0.243407,0.00113602) , 
4, 0.0260753, 1, 0, 0.501939,-0.00238761)    );
  // itree = 535
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.232625,-0.0148332) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807957,0.00371553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551293,0.0191877) , 
2, 0.118994, 1, 0, 0.664592,0.00428216) , 
6, 0.0174032, 1, 0, 0.594611,0.00284192) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45285,-0.00397423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534732,0.0136878) , 
6, 0.0551715, 1, 0, 0.456932,-0.00131609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572031,-0.0227448) , 
6, 0.0579807, 1, 0, 0.462807,-0.00195385) , 
3, 25.2309, 1, 0, 0.50194,-0.000529989)    );
  // itree = 536
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244801,-0.0147196) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723096,0.0242048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509573,0.0015642) , 
4, 0.0203089, 1, 0, 0.60362,0.0038321) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583196,-0.00397461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.35209,0.00568956) , 
3, 72.5924, 1, 0, 0.505883,-0.000487933) , 
3, 12.6018, 1, 0, 0.520664,0.000165415) , 
5, 0.00581198, 1, 0, 0.507334,-0.000223607)    );
  // itree = 537
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923524,0.0897841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814509,0.0135605) , 
5, 0.00994839, 1, 0, 0.838711,0.00415459) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.2868,-0.0135378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643417,0.000297222) , 
6, 0.0319048, 1, 0, 0.51641,-0.00206313) , 
2, 0.0475922, 1, 0, 0.589023,-0.000662311) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909699,0.00454605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51299,0.0167433) , 
0, 0.00201405, 1, 0, 0.851271,0.00514052) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130954) , 
4, 0.0318717, 1, 0, 0,-0.000257193) , 
0, 0.00384977, 1, 0, 0.407277,0.00232526) , 
3, 50.4579, 1, 0, 0.505936,0.000703479)    );
  // itree = 538
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983204,0.0189395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862848,-0.00191425) , 
0, 0.000248617, 1, 0, 0.933808,0.00162157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943792,0.0273905) , 
0, 0.00174035, 1, 0, 0.934457,0.00286082) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00205658,0.00506701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455334,-0.0182249) , 
7, 0.000443384, 1, 0, 0.078892,-0.0030832) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910069,0.0133465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000329655,-0.0102953) , 
0, 0.00280968, 1, 0, 0.14546,0.00102149) , 
4, 0.0260777, 1, 0, 0.118484,-0.000641849) , 
0, 0.00192505, 1, 0, 0.504538,0.00101533)    );
  // itree = 539
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998437,0.05289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949244,-0.0445363) , 
8, 0.266532, 1, 0, 0.992644,-0.000280998) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926874,-0.0120756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429265,-0.0119151) , 
2, 0.0476176, 1, 0, 0.695013,-0.0247546) , 
0, 4.57697e-05, 1, 0, 0.933652,-0.00513187) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.482336,0.00824191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000146583,-0.0149565) , 
4, 0.0260961, 1, 0, 0.285469,0.00171538) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.555748,-0.0164886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351078,0.00408916) , 
5, 0.0287774, 1, 0, 0.436473,-0.00670959) , 
6, 0.0521841, 1, 0, 0.309202,0.000391251) , 
0, 0.000962212, 1, 0, 0.504245,-0.00133387)    );
  // itree = 540
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934733,-0.00253617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.745541,-0.00956214) , 
2, 0.285627, 1, 0, 0.900155,-0.00383069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000111818,-0.00841377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0015426,0.0293085) , 
6, 0.0414252, 1, 0, 0.000492435,0.000125894) , 
0, 0.00288664, 1, 0, 0.497798,-0.00206118) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652691,0.0118333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601822,0.0263752) , 
1, 1.06917, 1, 0, 0.627953,0.00649131) , 
6, 0.0579815, 1, 0, 0.5047,-0.00160766)    );
  // itree = 541
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.471643,0.021252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438648,-0.0193133) , 
3, 7.15491, 1, 0, 0.445289,-0.00525393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65099,-0.00782205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.107832,0.00973954) , 
2, 0.0952167, 1, 0, 0.314736,0.000455238) , 
3, 37.4769, 1, 0, 0.368969,-0.00191641) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.142277,-0.0160626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666286,0.0080397) , 
5, 0.0165586, 1, 0, 0.606088,0.00257726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.588019,-0.0010438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552329,-0.0248041) , 
1, 1.08686, 1, 0, 0.575597,-0.00721126) , 
6, 0.056739, 1, 0, 0.601968,0.00125455) , 
6, 0.0318951, 1, 0, 0.503238,-8.90922e-05)    );
  // itree = 542
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660273,-0.0186533) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923567,-0.00275837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684595,-0.00938626) , 
3, 112.426, 1, 0, 0.90902,-0.00298004) , 
5, 0.00734678, 1, 0, 0.895144,-0.00432756) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0019803,0.0708101) , 
6, 0.0309042, 1, 0, 0.000591347,0.00023865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134493) , 
6, 0.0463976, 1, 0, 0.000460332,-4.89986e-06) , 
0, 0.00288758, 1, 0, 0.49505,-0.00239451)    );
  // itree = 543
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779879,-0.0193243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.312597,-0.0140146) , 
6, 0.0144084, 1, 0, 0.510788,-0.011835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711112,0.00597613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.543681,-0.010877) , 
3, 37.7505, 1, 0, 0.619875,-0.00216963) , 
4, 0.00871336, 1, 0, 0.609272,-0.00310903) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.146218,0.0025694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226506,-0.0103011) , 
6, 0.0434191, 1, 0, 0.165529,-0.000193029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824641,-0.00246288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767283,0.0166926) , 
0, 0.0017665, 1, 0, 0.793128,0.00609432) , 
7, 0.000547168, 1, 0, 0.298436,0.00113845) , 
2, 0.238037, 1, 0, 0.493133,-0.00152202)    );
  // itree = 544
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.2363,0.0254721) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572917,0.00140822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348107,0.0218888) , 
3, 105.572, 1, 0, 0.557112,0.000986121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0801727,-0.00931447) , 
3, 138.564, 1, 0, 0.51699,0.000452942) , 
4, 0.00581561, 1, 0, 0.501366,0.000875915)    );
  // itree = 545
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991726,-0.00855642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990203,0.0291512) , 
7, 0.000676639, 1, 0, 0.991446,0.000723689) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840101,-0.00414205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787746,-0.0157204) , 
6, 0.0551444, 1, 0, 0.833527,-0.00733967) , 
0, 0.000136573, 1, 0, 0.906451,-0.00361618) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130947) , 
5, 0.0293548, 1, 0, 0,-0.000336968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00179008,0.0532337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013261) , 
6, 0.0441731, 1, 0, 0.000827896,0.000334058) , 
6, 0.0289881, 1, 0, 0.000392128,-1.91408e-05) , 
0, 0.00288758, 1, 0, 0.504151,-0.00201906)    );
  // itree = 546
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844929,0.000113155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000559673,-0.0242261) , 
5, 0.0231811, 1, 0, 0.634514,-0.00167242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.734913,-0.0171479) , 
4, 0.0220491, 1, 0, 0.64213,-0.00279364) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0170529) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792039,0.0117588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000325946,-0.0205447) , 
4, 0.0303117, 1, 0, 0.443705,0.00228758) , 
5, 0.0229852, 1, 0, 0.343691,0.000254517) , 
4, 0.0231528, 1, 0, 0.503265,-0.00137531)    );
  // itree = 547
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988493,-0.0167185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769429,0.0116379) , 
0, 0.000136045, 1, 0, 0.867984,0.00485157) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882792,-0.033927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909547,-0.00495167) , 
6, 0.0265456, 1, 0, 0.908077,-0.00533528) , 
5, 0.0117927, 1, 0, 0.901635,-0.00369849) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000962631,0.0685867) , 
4, 0.0405758, 1, 0, 0.000312102,-1.55121e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00190116,0.0265215) , 
2, 0.380865, 1, 0, 0.000704876,0.000287641) , 
0, 0.00288733, 1, 0, 0.501232,-0.00192692)    );
  // itree = 548
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.220655,-0.0235654) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937168,-0.00101809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925478,0.0143331) , 
0, 0.00128237, 1, 0, 0.934086,0.0025204) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794428,-0.00554238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000565526,-0.001619) , 
0, 0.00279672, 1, 0, 0.120182,-0.00119782) , 
0, 0.00192505, 1, 0, 0.509217,0.000579436) , 
5, 0.00575529, 1, 0, 0.494313,0.00014137)    );
  // itree = 549
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508432,0.00604899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00229049,-0.0152536) , 
2, 0.357132, 1, 0, 0.418461,0.000708853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.697015,0.0672941) , 
6, 0.0386524, 1, 0, 0.43685,0.00155397) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615203,-0.00739945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489876,0.0282493) , 
2, 0.4092, 1, 0, 0.606124,-0.00272784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456535,-0.0143861) , 
2, 0.452273, 1, 0, 0.595348,-0.00365076) , 
6, 0.0405989, 1, 0, 0.500977,-0.000551836)    );
  // itree = 550
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.258842,0.0292165) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4705,-0.023934) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59738,-0.00900442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455681,0.00180127) , 
3, 37.8446, 1, 0, 0.517672,-0.00126522) , 
4, 0.00843593, 1, 0, 0.51585,-0.00172317) , 
4, 0.00580854, 1, 0, 0.501577,-0.000996718)    );
  // itree = 551
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62222,-0.00220406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617081,-0.0111966) , 
6, 0.0468952, 1, 0, 0.621241,-0.00180936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629257,0.0168489) , 
6, 0.05798, 1, 0, 0.6216,-0.00147363) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.203809,0.00149647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813684,0.0105715) , 
7, 0.000537266, 1, 0, 0.334405,0.0018919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198912,-0.00687784) , 
2, 0.459072, 1, 0, 0.317,0.00109585) , 
2, 0.214233, 1, 0, 0.497995,-0.000430944)    );
  // itree = 552
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550363,-0.0360158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432462,0.010656) , 
3, 50.1744, 1, 0, 0.499893,-0.00739386) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952704,0.00564631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000563652,-0.00766259) , 
0, 0.00192488, 1, 0, 0.447882,0.00125212) , 
5, 0.00976944, 1, 0, 0.454804,0.000101438) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68349,-0.00852601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604964,0.00566026) , 
4, 0.0261966, 1, 0, 0.648387,-0.00172284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.215279,-0.0216554) , 
3, 113.283, 1, 0, 0.591669,-0.00370406) , 
6, 0.0434945, 1, 0, 0.500755,-0.00117622)    );
  // itree = 553
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967337,0.0151539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940682,-0.0033087) , 
6, 0.0260981, 1, 0, 0.94711,2.97728e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980492,0.0124422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576436,0.00879054) , 
0, 9.15976e-05, 1, 0, 0.790176,0.00984025) , 
2, 0.309448, 1, 0, 0.925049,0.00140893) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.28712,-0.0138416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8388,0.00168697) , 
4, 0.0257242, 1, 0, 0.619691,-0.00812677) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000502427,0.0193766) , 
4, 0.046365, 1, 0, 0.000119665,-0.000202781) , 
0, 0.00366691, 1, 0, 0.112144,-0.00163552) , 
0, 0.00192442, 1, 0, 0.49657,-0.000195789)    );
  // itree = 554
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955582,0.00640359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.245082,-0.0164646) , 
2, 0.0237528, 1, 0, 0.493386,-0.00711374) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70785,0.00319922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.023351) , 
4, 0.0203343, 1, 0, 0.427031,-0.000524348) , 
5, 0.00943049, 1, 0, 0.435943,-0.00140937) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667184,0.00402237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567279,-0.00817795) , 
2, 0.206095, 1, 0, 0.639644,-7.97241e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552475,-0.00253753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525537,0.0212628) , 
3, 25.1742, 1, 0, 0.533002,0.00609382) , 
2, 0.30916, 1, 0, 0.607552,0.00177809) , 
6, 0.0405903, 1, 0, 0.50355,-0.000153632)    );
  // itree = 555
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233849,-0.0238055) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686875,0.00204019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000107203,-0.0211822) , 
4, 0.031818, 1, 0, 0.558674,0.000316001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0814651,-0.00980515) , 
3, 138.565, 1, 0, 0.517148,-0.000262922) , 
5, 0.0057652, 1, 0, 0.502557,-0.000806323)    );
  // itree = 556
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613776,0.0132123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.733501,-0.00331384) , 
6, 0.0261684, 1, 0, 0.692533,0.000511096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48541,0.0390666) , 
2, 0.150757, 1, 0, 0.679006,0.00119905) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.773516,-0.00682699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868438,0.00135954) , 
7, 0.000650829, 1, 0, 0.804208,-0.00572618) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00161136,0.0304276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132586) , 
4, 0.0202933, 1, 0, 0.000516988,9.94698e-05) , 
0, 0.00288733, 1, 0, 0.331229,-0.00229774) , 
2, 0.166629, 1, 0, 0.502318,-0.000577495)    );
  // itree = 557
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831482,0.0103444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762526,0.0763219) , 
2, 0.0249292, 1, 0, 0.805022,0.00403078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618474,-0.00935093) , 
6, 0.0492712, 1, 0, 0.780051,0.00264639) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729595,0.0218006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602721,-0.0139164) , 
2, 0.0568325, 1, 0, 0.62371,-0.00560082) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869938,-0.00407601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241978,0.00453834) , 
0, 0.000962256, 1, 0, 0.371557,0.000606551) , 
2, 0.112217, 1, 0, 0.425757,-0.00072772) , 
2, 0.0476074, 1, 0, 0.49517,-6.66633e-05)    );
  // itree = 558
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681607,0.0043603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455364,-0.0137627) , 
2, 0.159924, 1, 0, 0.669535,0.000891308) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915243,0.0184639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.11153,0.00683093) , 
0, 0.00192335, 1, 0, 0.433717,0.00586805) , 
2, 0.176858, 1, 0, 0.607366,0.00220334) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937493,0.00763252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623926,-0.0117637) , 
0, 0.000274184, 1, 0, 0.745002,-0.01159) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00163074,0.0141218) , 
2, 0.397975, 1, 0, 0.000803462,0.000245663) , 
0, 0.00288758, 1, 0, 0.269402,-0.0040261) , 
2, 0.285706, 1, 0, 0.504431,0.000306007)    );
  // itree = 559
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941957,-0.00449056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357289,0.00275576) , 
0, 0.000961676, 1, 0, 0.556023,-0.000120251) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443031,-0.0229808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279729,9.05047e-05) , 
4, 0.0203778, 1, 0, 0.342576,-0.00634623) , 
3, 98.9616, 1, 0, 0.535643,-0.000714711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0814842,0.012786) , 
3, 138.566, 1, 0, 0.496923,-0.000277162)    );
  // itree = 560
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928625,-0.00190844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787385,-0.0124926) , 
3, 99.9342, 1, 0, 0.917571,-0.00282638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86433,-0.0160767) , 
5, 0.0277564, 1, 0, 0.913748,-0.00472189) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000230278,-0.0130044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00171274,0.0393332) , 
3, 88.1914, 1, 0, 0.000727182,-0.000523313) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785841,0.0206177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713399,-0.00604561) , 
6, 0.0568556, 1, 0, 0.756303,0.00570207) , 
7, 0.000535426, 1, 0, 0.115051,0.000418628) , 
0, 0.00192368, 1, 0, 0.495034,-0.002027)    );
  // itree = 561
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929944,0.0148522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807862,-0.0177989) , 
3, 49.9398, 1, 0, 0.882769,-0.00655947) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00155374,0.0354527) , 
3, 101.018, 1, 0, 0.000425345,-0.000124921) , 
0, 0.00192451, 1, 0, 0.15762,-0.00127127) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901909,-0.000996872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757199,0.00625434) , 
2, 0.166692, 1, 0, 0.83871,0.00182467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539392,0.0123094) , 
3, 113.371, 1, 0, 0.817951,0.00250375) , 
7, 0.000144607, 1, 0, 0.497489,0.000671716)    );
  // itree = 562
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814223,-0.0179542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926262,-0.003461) , 
6, 0.0144912, 1, 0, 0.920764,-0.00349354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566741,-0.0143542) , 
0, 0.00219881, 1, 0, 0.901159,-0.00472511) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00143382,0.0175554) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135862) , 
6, 0.0347635, 1, 0, 0,-0.000439257) , 
4, 0.0202992, 1, 0, 0.000424582,-7.80008e-05) , 
0, 0.00288758, 1, 0, 0.50075,-0.0026593)    );
  // itree = 563
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955094,0.0126755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00436684,-0.0130168) , 
0, 0.00151169, 1, 0, 0.607646,0.00240556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.463899,-0.00677068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.238151,0.0478214) , 
2, 0.428329, 1, 0, 0.437954,-0.00160998) , 
4, 0.0174155, 1, 0, 0.497881,-0.000191892) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577833,0.0188667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600407,-0.000365049) , 
6, 0.0578425, 1, 0, 0.590151,0.0032432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.482129,0.0221507) , 
2, 0.357091, 1, 0, 0.563649,0.00494013) , 
6, 0.055081, 1, 0, 0.50513,0.000373799)    );
  // itree = 564
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.249542,-0.011564) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832174,0.00659733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00140346,-0.0210816) , 
5, 0.0294414, 1, 0, 0.67097,0.00153519) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707506,-0.00664201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131014) , 
0, 0.00288758, 1, 0, 0.107159,-0.00148276) , 
4, 0.0289936, 1, 0, 0.514,0.000694967) , 
5, 0.00578211, 1, 0, 0.501157,0.000388201)    );
  // itree = 565
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681579,-0.0253813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298462,0.00297771) , 
5, 0.0200378, 1, 0, 0.515672,-0.00831953) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933963,-0.00775935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.215251,0.00286663) , 
0, 0.000962526, 1, 0, 0.408557,-0.000752287) , 
3, 12.6167, 1, 0, 0.424201,-0.00185746) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977704,0.0175985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758702,-0.0054603) , 
0, 0.000405071, 1, 0, 0.85655,-0.000322236) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840874,0.00505596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77547,0.0391968) , 
0, 0.0017665, 1, 0, 0.805521,0.0123573) , 
2, 0.238037, 1, 0, 0.835872,0.00481563) , 
7, 0.000534736, 1, 0, 0.503675,-0.000569205)    );
  // itree = 566
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943107,-0.00671482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309316,0.00375075) , 
0, 0.000962212, 1, 0, 0.511651,-0.000142526) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915484,0.0401739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.412024,0.00557014) , 
0, 0.000956104, 1, 0, 0.561633,0.00489223) , 
6, 0.0550841, 1, 0, 0.516991,0.000395412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202134,-0.0131544) , 
2, 0.452367, 1, 0, 0.497147,-0.000107211)    );
  // itree = 567
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996683,0.00781663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995067,0.0477867) , 
7, 0.000676639, 1, 0, 0.996387,0.00175187) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954176,-3.16359e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383073,-0.0135098) , 
2, 0.0476383, 1, 0, 0.671108,-0.0255881) , 
0, 4.57784e-05, 1, 0, 0.93049,-0.00378684) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.286954,0.00185612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519414,-0.0057241) , 
6, 0.043495, 1, 0, 0.365947,-0.000803937) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709643,0.0124627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131083) , 
0, 0.00279899, 1, 0, 0.13616,0.00351326) , 
3, 88.3024, 1, 0, 0.305569,0.000330443) , 
0, 0.000962526, 1, 0, 0.501488,-0.000960368)    );
  // itree = 568
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.15457,-0.048093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340289,-0.00986698) , 
6, 0.0115995, 1, 0, 0.229047,-0.00710245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743156,0.00909668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503165,-0.00397137) , 
4, 0.0232671, 1, 0, 0.642142,0.00148793) , 
6, 0.0174032, 1, 0, 0.577585,0.00014546) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957435,-0.00179525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784026,-0.00956963) , 
0, 0.000409176, 1, 0, 0.865468,-0.0078826) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000353897,-0.00266576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131162) , 
3, 91.3117, 1, 0, 0.000146015,-0.000211557) , 
0, 0.00288758, 1, 0, 0.409325,-0.00383891) , 
3, 50.4612, 1, 0, 0.501913,-0.00164644)    );
  // itree = 569
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632542,0.00660476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677016,0.0292551) , 
7, 0.000245358, 1, 0, 0.641979,0.00370073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250049,-0.00771631) , 
3, 100.541, 1, 0, 0.581728,0.00222407) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924336,-0.0111767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892299,-0.0160301) , 
1, 1.41209, 1, 0, 0.912155,-0.00874258) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.341834,0.00431199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154567,-0.00966212) , 
2, 0.404481, 1, 0, 0.311442,0.00040766) , 
0, 0.000962442, 1, 0, 0.466127,-0.00194855) , 
4, 0.01742, 1, 0, 0.503824,-0.000587903)    );
  // itree = 570
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933412,-0.00364856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.841192,-0.0199168) , 
0, 0.00137358, 1, 0, 0.920449,-0.00670396) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000158706,-0.0136637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00224069,0.0602371) , 
3, 88.3024, 1, 0, 0.000815055,-0.000161676) , 
0, 0.00192451, 1, 0, 0.433547,-0.00324013) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57705,0.00220477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538202,-0.0193598) , 
1, 1.25701, 1, 0, 0.572406,-0.00127055) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771557,0.0174397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362566,-0.00877681) , 
4, 0.0232299, 1, 0, 0.635939,0.00335529) , 
1, 1.2924, 1, 0, 0.598235,0.00061002) , 
6, 0.040586, 1, 0, 0.499296,-0.00170301)    );
  // itree = 571
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94766,0.000259864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87094,-0.0146967) , 
4, 0.0204601, 1, 0, 0.921958,-0.00447762) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880685,0.0192445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898605,0.00456316) , 
6, 0.0458726, 1, 0, 0.889526,0.0089638) , 
0, 0.0016499, 1, 0, 0.918216,-0.00292647) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.109847,-0.00999481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0780132,0.00319179) , 
2, 0.119004, 1, 0, 0.085437,-0.000176046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49038,0.023238) , 
6, 0.0579807, 1, 0, 0.11402,0.000409926) , 
0, 0.00192488, 1, 0, 0.496357,-0.00117629)    );
  // itree = 572
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.272258,-0.0175789) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.207363,0.0260336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643556,-0.00246691) , 
6, 0.0203153, 1, 0, 0.556743,-0.00052065) , 
4, 0.00580491, 1, 0, 0.541981,-0.000888337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0562253,-0.0129402) , 
3, 151.384, 1, 0, 0.502884,-0.00142732)    );
  // itree = 573
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.277331,-0.00752319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.116543,0.0347174) , 
3, 75.6915, 1, 0, 0.225793,0.00131706) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490271,-0.0130334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.482567,-0.0243595) , 
6, 0.0243178, 1, 0, 0.488007,-0.0111067) , 
6, 0.0198782, 1, 0, 0.312246,-0.00277909) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792595,0.00602885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502211,-0.0169026) , 
6, 0.0557035, 1, 0, 0.775747,0.00248438) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812543,-0.00746645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000110022,-0.00819043) , 
0, 0.00384967, 1, 0, 0.193169,-0.00241091) , 
5, 0.0287219, 1, 0, 0.598902,0.000998391) , 
6, 0.0260911, 1, 0, 0.508775,-0.000189284)    );
  // itree = 574
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.315868,0.0149683) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705729,-0.00824429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332877,0.00466666) , 
4, 0.0163098, 1, 0, 0.458231,-0.000786167) , 
4, 0.00580854, 1, 0, 0.449463,-0.000296108) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945909,0.0363787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913991,-0.00493597) , 
3, 33.7588, 1, 0, 0.928128,0.00193908) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826735,-0.0121545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131077) , 
0, 0.00371053, 1, 0, 0.442531,-0.00907201) , 
0, 0.000959052, 1, 0, 0.59561,-0.00560089) , 
6, 0.0434886, 1, 0, 0.498112,-0.00206197)    );
  // itree = 575
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757315,0.00464303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595511,0.0266027) , 
3, 49.6869, 1, 0, 0.689436,0.00835835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.365679,0.0203041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206534,-0.0126522) , 
3, 37.658, 1, 0, 0.265139,-0.000767856) , 
6, 0.0202234, 1, 0, 0.452231,0.00325631) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.525761,-0.00732078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559325,0.00210703) , 
5, 0.0166763, 1, 0, 0.551624,-0.000225238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110852,-0.0124239) , 
3, 126.152, 1, 0, 0.502914,-0.00108002) , 
4, 0.0116019, 1, 0, 0.494806,-0.000386355)    );
  // itree = 576
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976818,0.00256679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859069,-0.00908998) , 
2, 0.09518, 1, 0, 0.919816,-0.00392806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922589,-0.0354708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911004,-0.0111272) , 
2, 0.167585, 1, 0, 0.916454,-0.0198149) , 
5, 0.0258212, 1, 0, 0.919438,-0.00571686) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00562742,-0.0085932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130992) , 
0, 0.00889478, 1, 0, 0.00154773,-0.000932786) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473136,-0.00759892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392075,0.0219795) , 
1, 1.10785, 1, 0, 0.41833,0.00263719) , 
6, 0.0492966, 1, 0, 0.113742,2.82187e-05) , 
0, 0.00192505, 1, 0, 0.49884,-0.00271775)    );
  // itree = 577
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95964,0.0107633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560098,0.0408078) , 
0, 0.000901696, 1, 0, 0.853608,0.0101275) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.349507,0.000386108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0753512,-0.00603453) , 
2, 0.0953982, 1, 0, 0.153141,-0.00111719) , 
5, 0.0138199, 1, 0, 0.514444,0.00468284) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716758,-0.0175642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529374,0.0118724) , 
3, 50.3346, 1, 0, 0.638319,-0.00283914) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657722,0.00393628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.018806,-0.0161105) , 
4, 0.0299458, 1, 0, 0.411222,0.000574847) , 
2, 0.142853, 1, 0, 0.501482,-0.000782049) , 
4, 0.0145011, 1, 0, 0.504597,0.000531102)    );
  // itree = 578
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68717,0.0119705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164741,0.0169682) , 
6, 0.0144494, 1, 0, 0.31675,0.00465589) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552123,-0.0261871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650804,-0.0119587) , 
4, 0.00989815, 1, 0, 0.606558,-0.0097097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0670724,-0.0236126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.543892,-0.0012891) , 
5, 0.0115123, 1, 0, 0.504739,-0.00101325) , 
4, 0.0112004, 1, 0, 0.510985,-0.00154675) , 
4, 0.00870463, 1, 0, 0.491878,-0.000936584)    );
  // itree = 579
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.249851,-0.00750348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484439,-0.021559) , 
5, 0.00553892, 1, 0, 0.348047,-0.00859585) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633246,0.0137632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707866,-0.00620531) , 
5, 0.0103105, 1, 0, 0.664944,0.00102336) , 
5, 0.00827686, 1, 0, 0.493767,-0.00417259) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84451,0.00594289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.231184,-0.0111881) , 
4, 0.0260919, 1, 0, 0.745842,0.00175719) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000407694,-0.0252627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291882,0.0117377) , 
4, 0.0260888, 1, 0, 0.192667,-0.00129076) , 
5, 0.0271628, 1, 0, 0.506471,0.000438276) , 
5, 0.0115605, 1, 0, 0.504691,-0.00020799)    );
  // itree = 580
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547099,-0.00779133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950816,0.0248081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131114) , 
0, 0.00286869, 1, 0, 0.293441,0.00246685) , 
5, 0.00846908, 1, 0, 0.32955,0.00143277) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722401,0.0141848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393779,-0.00957806) , 
2, 0.356724, 1, 0, 0.667154,0.00182738) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.890476,-0.00845444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000650273,0.0109125) , 
0, 0.00288758, 1, 0, 0.568136,-0.0046168) , 
3, 25.1984, 1, 0, 0.598507,-0.00264025) , 
6, 0.0289967, 1, 0, 0.49946,-0.0011403)    );
  // itree = 581
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652755,-0.0141426) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891663,0.00491057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136765,-0.0296581) , 
5, 0.0174067, 1, 0, 0.561226,-0.001981) , 
5, 0.0074243, 1, 0, 0.570099,-0.00370525) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574868,-0.00312673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393909,0.0103099) , 
2, 0.172312, 1, 0, 0.477767,0.00124646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247928,-0.00834551) , 
2, 0.452273, 1, 0, 0.460649,0.000761767) , 
4, 0.0173994, 1, 0, 0.496421,-0.000698212)    );
  // itree = 582
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982338,0.0168213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474283,-0.00799824) , 
0, 0.000962212, 1, 0, 0.737458,0.000219649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629675,0.0513125) , 
2, 0.0770787, 1, 0, 0.722846,0.00119137) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960326,0.0021172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762967,-0.00967769) , 
0, 0.000268421, 1, 0, 0.846811,-0.00807733) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0012983,0.0179117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.03858e-05,-0.0108194) , 
4, 0.0203675, 1, 0, 0.000441841,8.73904e-06) , 
0, 0.00288758, 1, 0, 0.394241,-0.00375355) , 
2, 0.0952352, 1, 0, 0.504764,-0.00209037)    );
  // itree = 583
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981755,-0.00817094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950396,0.0224688) , 
2, 0.261841, 1, 0, 0.975949,0.000629981) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665194,-0.0119159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849511,-0.00322482) , 
0, 0.000897173, 1, 0, 0.821637,-0.00604716) , 
0, 0.000274852, 1, 0, 0.893745,-0.00292704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00109038,0.0110511) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.85496e-05,-0.00691416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134951) , 
6, 0.0348046, 1, 0, 5.79337e-05,-0.000292017) , 
4, 0.0202924, 1, 0, 0.000391924,-4.59807e-05) , 
0, 0.00288758, 1, 0, 0.500766,-0.00165968)    );
  // itree = 584
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.420222,0.00195186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593413,-0.0274059) , 
6, 0.0378506, 1, 0, 0.431638,-0.000404619) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685724,0.00712275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473427,0.0312852) , 
2, 0.356816, 1, 0, 0.645675,0.00514876) , 
6, 0.0397515, 1, 0, 0.474965,0.000719538) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655939,0.00442813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545907,-0.00852053) , 
2, 0.166782, 1, 0, 0.592134,-0.0022824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612265,-0.0120843) , 
6, 0.0594993, 1, 0, 0.594019,-0.00325405) , 
6, 0.0463876, 1, 0, 0.507715,-0.000373538)    );
  // itree = 585
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91883,-0.00413913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979098,0.0227909) , 
5, 0.0134143, 1, 0, 0.955964,0.00425838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00340441,-0.00661097) , 
0, 0.00162981, 1, 0, 0.610193,0.00210189) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868722,-0.0156203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939018,0.0216948) , 
0, 0.0016499, 1, 0, 0.886555,-0.00623342) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.242026,-0.0157083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.13567,0.00960764) , 
4, 0.0261315, 1, 0, 0.153851,-0.00047954) , 
0, 0.00192488, 1, 0, 0.407928,-0.00247479) , 
4, 0.0203122, 1, 0, 0.494664,-0.000512198)    );
  // itree = 586
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968975,0.0186918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.305462,-0.0136431) , 
2, 0.0237834, 1, 0, 0.503664,-0.00458171) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956673,0.00710034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3121,-0.0027016) , 
0, 0.000962418, 1, 0, 0.488719,1.75374e-05) , 
5, 0.0105186, 1, 0, 0.490687,-0.000588267) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823716,-0.0190992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388849,-0.00849261) , 
0, 0.00191284, 1, 0, 0.533974,-0.0104916) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664592,-0.00631421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5616,0.0196749) , 
3, 37.0822, 1, 0, 0.608277,0.00230067) , 
6, 0.0575672, 1, 0, 0.561602,-0.00573522) , 
6, 0.0521841, 1, 0, 0.501868,-0.00139978)    );
  // itree = 587
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790176,0.00997609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131085) , 
0, 0.00279303, 1, 0, 0.156267,0.0017853) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.745393,-0.0205678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.228003,-0.0107574) , 
4, 0.0116151, 1, 0, 0.447245,-0.00612491) , 
6, 0.0149151, 1, 0, 0.308476,-0.00235248) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869519,-0.00312312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458306,0.022889) , 
0, 0.00191658, 1, 0, 0.591748,0.00322695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755687,0.00191262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0165195) , 
4, 0.0260918, 1, 0, 0.588831,-0.000146342) , 
1, 1.22754, 1, 0, 0.589607,0.000750332) , 
6, 0.0260995, 1, 0, 0.501243,-0.000224931)    );
  // itree = 588
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731334,-0.000570102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395165,-0.0100466) , 
2, 0.190058, 1, 0, 0.592034,-0.00228707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.580082,-0.023403) , 
3, 34.242, 1, 0, 0.591049,-0.00319533) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608298,0.0114145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255429,-0.007099) , 
2, 0.404671, 1, 0, 0.560989,0.00240712) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.548459,-0.0310098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241241,0.000202071) , 
2, 0.0475526, 1, 0, 0.284525,-0.00205699) , 
3, 81.1022, 1, 0, 0.436997,0.000405013) , 
3, 37.8469, 1, 0, 0.502958,-0.00113656)    );
  // itree = 589
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955855,-0.00385881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916451,0.026581) , 
4, 0.0272907, 1, 0, 0.952452,-0.000935864) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880384,-0.0258125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798661,-0.00163243) , 
2, 0.214339, 1, 0, 0.817758,-0.00786673) , 
2, 0.166629, 1, 0, 0.902654,-0.00349831) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.50498e-05,-0.00716537) , 
0, 0.0094894, 1, 0, 5.14793e-05,-0.000269154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00226982,0.0245616) , 
2, 0.380842, 1, 0, 0.000586094,0.000125055) , 
0, 0.00288733, 1, 0, 0.502626,-0.0018915)    );
  // itree = 590
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.340475,-0.0144212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.249161,0.0143178) , 
3, 25.1117, 1, 0, 0.273907,0.000884178) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932163,-0.00407491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180379,-0.0193126) , 
5, 0.0229218, 1, 0, 0.81347,-0.00537906) , 
7, 0.00010078, 1, 0, 0.631571,-0.00326758) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.017884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78035,0.0146919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000107356,-0.0252536) , 
4, 0.0303726, 1, 0, 0.435933,0.00240689) , 
5, 0.0230624, 1, 0, 0.340325,0.00029247) , 
4, 0.0231899, 1, 0, 0.497597,-0.00162994)    );
  // itree = 591
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942593,0.00982251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919105,-0.00689205) , 
4, 0.0143331, 1, 0, 0.928813,0.00031853) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975872,0.0532048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982808,0.0521973) , 
5, 0.028007, 1, 0, 0.979225,0.0110228) , 
5, 0.0254591, 1, 0, 0.937751,0.00221634) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0114234,-0.0184556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433211,0.00229723) , 
6, 0.0248686, 1, 0, 0.283037,-0.000496149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443275,-0.01763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353718,-0.00119103) , 
2, 0.214195, 1, 0, 0.397591,-0.00750812) , 
6, 0.052187, 1, 0, 0.301685,-0.00163759) , 
0, 0.000962418, 1, 0, 0.496502,-0.000457193)    );
  // itree = 592
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702132,0.0213297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79023,-0.0016227) , 
6, 0.0290075, 1, 0, 0.754578,0.00145448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.251574,-0.0117047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458906,-0.00220546) , 
4, 0.0173943, 1, 0, 0.410734,-0.00287433) , 
2, 0.142853, 1, 0, 0.575502,-0.000799984) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951322,0.00632855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706595,-0.0120752) , 
0, 0.000274184, 1, 0, 0.809815,-0.0117865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131066) , 
0, 0.00288733, 1, 0, 0.303233,-0.00457679) , 
3, 75.57, 1, 0, 0.498346,-0.00187026)    );
  // itree = 593
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850808,0.00354467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282209,-0.0178557) , 
4, 0.0145273, 1, 0, 0.612615,-0.00325931) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778561,0.00990929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.101599,-0.00944413) , 
5, 0.0249381, 1, 0, 0.435248,0.00177377) , 
5, 0.0158812, 1, 0, 0.487872,0.000280489) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.469375,-0.0206997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562583,-0.00621872) , 
1, 1.14184, 1, 0, 0.523992,-0.00815894) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60309,-0.00518847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598262,0.0165881) , 
2, 0.21448, 1, 0, 0.600701,0.00208019) , 
6, 0.0571545, 1, 0, 0.555577,-0.00394289) , 
6, 0.052182, 1, 0, 0.498613,-0.000389515)    );
  // itree = 594
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955447,0.0350159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27058,-0.0156113) , 
2, 0.0237819, 1, 0, 0.493176,-0.00584093) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688763,0.0102781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135864,-0.0115163) , 
4, 0.0202776, 1, 0, 0.440648,0.00138405) , 
5, 0.00975105, 1, 0, 0.447424,0.000452051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62795,-0.01661) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641616,-0.0196217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565341,-0.00247539) , 
2, 0.0476074, 1, 0, 0.574352,-0.00240751) , 
6, 0.0451463, 1, 0, 0.580642,-0.00348578) , 
6, 0.0434885, 1, 0, 0.49262,-0.000883911)    );
  // itree = 595
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0949756,0.0404637) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.400005,-0.0027154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595795,-0.018009) , 
1, 3.55028, 1, 0, 0.447616,-0.00351411) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.734822,0.0144468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495049,2.67942e-05) , 
4, 0.0186541, 1, 0, 0.556932,0.00140227) , 
4, 0.0116029, 1, 0, 0.54001,0.000641209) , 
6, 0.00870987, 1, 0, 0.501127,0.00098036)    );
  // itree = 596
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753764,0.0266735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815779,-0.0160547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720479,0.0144644) , 
3, 12.4951, 1, 0, 0.737427,0.00169108) , 
4, 0.00871336, 1, 0, 0.739733,0.00277431) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60638,-0.0315789) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.460145,-0.00436382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202709,0.0149399) , 
3, 88.1092, 1, 0, 0.396361,-0.000570991) , 
2, 0.0918339, 1, 0, 0.410837,-0.0017464) , 
2, 0.0714264, 1, 0, 0.501613,-0.000498667)    );
  // itree = 597
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982738,0.0501332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966886,0.000131761) , 
8, 0.0727445, 1, 0, 0.973928,0.00446087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.340187,-0.0200411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451055,0.0101058) , 
4, 0.014461, 1, 0, 0.427767,0.000146647) , 
0, 0.000962212, 1, 0, 0.652414,0.00192118) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.429256,-0.0128799) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.358281,0.00808067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.28459,-0.0035111) , 
3, 25.1885, 1, 0, 0.304118,-0.000436744) , 
2, 0.219828, 1, 0, 0.319386,-0.00119122) , 
2, 0.19036, 1, 0, 0.500437,0.000500832)    );
  // itree = 598
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230314,-0.020197) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.541805,0.00194284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626911,-0.0125727) , 
6, 0.0579823, 1, 0, 0.546606,8.60522e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.301024,-0.0169963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204921,-0.00498315) , 
3, 50.0894, 1, 0, 0.246707,-0.00785588) , 
2, 0.428558, 1, 0, 0.518219,-0.000665682) , 
4, 0.00583084, 1, 0, 0.502195,-0.00126635)    );
  // itree = 599
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.250899,0.0104684) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718798,-0.00485929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387826,-0.0183163) , 
6, 0.0521969, 1, 0, 0.693217,-0.00363653) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.18633e-05,-0.0147302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689141,0.0197984) , 
6, 0.0521887, 1, 0, 0.206658,0.0016001) , 
4, 0.026772, 1, 0, 0.516342,-0.0017329) , 
4, 0.00580988, 1, 0, 0.501783,-0.0013466)    );
  // itree = 600
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757492,-0.0222044) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929727,-0.00343408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615317,-0.0124181) , 
0, 0.00219832, 1, 0, 0.912137,-0.00320221) , 
6, 0.0145048, 1, 0, 0.904985,-0.00404539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00222558,0.043074) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.95691e-05,-0.00672308) , 
4, 0.0319057, 1, 0, 5.3282e-05,-0.000325896) , 
4, 0.0174206, 1, 0, 0.000627257,0.000177129) , 
0, 0.00288758, 1, 0, 0.499415,-0.00215175)    );
  // itree = 601
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.344985,-0.0134322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682652,0.00793646) , 
5, 0.00794928, 1, 0, 0.567593,-0.000602659) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985835,0.0257127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351024,-0.02304) , 
4, 0.0158632, 1, 0, 0.643129,-0.0125217) , 
7, 0.000208132, 1, 0, 0.586337,-0.00356029) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128961,-0.00934739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904746,0.00865821) , 
7, 0.000334331, 1, 0, 0.431989,0.00130025) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628947,-0.0198372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582013,0.002379) , 
1, 1.10419, 1, 0, 0.601807,-0.00488818) , 
6, 0.0521875, 1, 0, 0.46714,1.92993e-05) , 
5, 0.0166763, 1, 0, 0.500986,-0.000997147)    );
  // itree = 602
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631033,0.0112099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566303,-0.0215129) , 
3, 8.39656, 1, 0, 0.575074,-0.00839597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250795,0.0138858) , 
3, 88.1642, 1, 0, 0.507416,-0.00530982) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558367,-0.000304875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.36356,-0.013566) , 
2, 0.308322, 1, 0, 0.525003,-0.00130485) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.147421,0.00172969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576292,0.027344) , 
6, 0.0492651, 1, 0, 0.266211,0.00348532) , 
2, 0.404755, 1, 0, 0.491351,-0.000681961) , 
4, 0.0145089, 1, 0, 0.495126,-0.00176928)    );
  // itree = 603
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.124548,0.00849778) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748506,-0.00120833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535937,-0.0259667) , 
3, 50.1948, 1, 0, 0.657447,-0.00611029) , 
7, 1.64889e-05, 1, 0, 0.462401,-0.00294584) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606569,-0.0111134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739289,0.0177877) , 
4, 0.0133012, 1, 0, 0.714561,0.0040844) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924931,-0.00685513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300378,0.0020297) , 
0, 0.000962526, 1, 0, 0.452043,-0.000275981) , 
4, 0.01866, 1, 0, 0.515959,0.00078565) , 
4, 0.0116233, 1, 0, 0.507412,0.000190172)    );
  // itree = 604
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997227,0.0447194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.716462,-0.00590548) , 
0, 4.57107e-05, 1, 0, 0.944462,0.000729762) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861916,-0.0208144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839932,-0.00540465) , 
0, 0.00132659, 1, 0, 0.844643,-0.00963572) , 
0, 0.00096058, 1, 0, 0.899743,-0.00391398) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130966) , 
4, 0.0261291, 1, 0, 0,-0.000306026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00136034,0.0157645) , 
6, 0.0376926, 1, 0, 0.000464591,3.53191e-05) , 
0, 0.00288733, 1, 0, 0.498417,-0.00215151)    );
  // itree = 605
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231749,-0.0126579) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.749128,0.00175418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619729,0.0199598) , 
2, 0.0793254, 1, 0, 0.716951,0.00169732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.365716,-0.00279753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560762,-0.0116657) , 
6, 0.055082, 1, 0, 0.390419,-0.00193818) , 
2, 0.119019, 1, 0, 0.515598,-0.000544475) , 
4, 0.00585616, 1, 0, 0.499049,-0.000904428)    );
  // itree = 606
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701741,0.0340452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205114,0.00324494) , 
6, 0.0149073, 1, 0, 0.402988,0.00663968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586485,-0.00610615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468761,0.00260155) , 
5, 0.0159935, 1, 0, 0.500967,-7.50694e-05) , 
4, 0.00872714, 1, 0, 0.491458,0.000576581) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654159,-0.0111626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577093,-0.0270505) , 
3, 33.508, 1, 0, 0.63021,-0.0138968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635299,0.0355658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313603,-0.00810351) , 
3, 91.1191, 1, 0, 0.477504,0.00204846) , 
3, 50.3517, 1, 0, 0.561811,-0.0067547) , 
6, 0.052182, 1, 0, 0.50284,-0.000609492)    );
  // itree = 607
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96867,-0.0385379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978077,0.00998074) , 
3, 11.681, 1, 0, 0.976478,0.000281157) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864172,-0.00511968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666345,-0.0113317) , 
3, 86.9449, 1, 0, 0.834644,-0.00769929) , 
0, 0.000274852, 1, 0, 0.9009,-0.00397132) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.19663e-05,-0.00701604) , 
0, 0.00949171, 1, 0, 5.11299e-05,-0.000224258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00151927,0.0200008) , 
2, 0.380851, 1, 0, 0.000392435,2.18029e-05) , 
0, 0.00288733, 1, 0, 0.501842,-0.00220178)    );
  // itree = 608
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490657,-0.0270661) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831396,-0.0138205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575737,-0.00019281) , 
5, 0.0174619, 1, 0, 0.682666,-0.00181967) , 
4, 0.00579188, 1, 0, 0.671388,-0.00287109) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732345,0.00872053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.87785e-05,-0.00928645) , 
0, 0.00384967, 1, 0, 0.240388,0.0027426) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535551,0.000221563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530466,-0.0195055) , 
1, 1.36782, 1, 0, 0.534951,-0.00155956) , 
6, 0.043496, 1, 0, 0.358899,0.00101173) , 
2, 0.142825, 1, 0, 0.501113,-0.000755348)    );
  // itree = 609
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987492,0.0118119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743034,-0.0127684) , 
0, 0.000212228, 1, 0, 0.953786,-0.00170791) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894392,0.00622577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0017443,-0.0140496) , 
0, 0.00258985, 1, 0, 0.455206,0.0020563) , 
0, 0.000891556, 1, 0, 0.645333,0.000620863) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000138179,0.00192564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0245706) , 
6, 0.0318893, 1, 0, 7.80034e-05,-0.00201237) , 
4, 0.0318825, 1, 0, 0.502767,3.90604e-05)    );
  // itree = 610
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637681,-0.0264565) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74722,-0.0153987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451566,0.00418523) , 
4, 0.0212041, 1, 0, 0.547827,-0.00234711) , 
4, 0.0145559, 1, 0, 0.569229,-0.00599175) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628093,-0.039178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895946,0.0750278) , 
8, 0.0315615, 1, 0, 0.786748,-0.00442401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.453806,0.00163888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198551,-0.0104464) , 
2, 0.45451, 1, 0, 0.436629,0.000171631) , 
2, 0.0238023, 1, 0, 0.474288,-0.000322682) , 
3, 12.6189, 1, 0, 0.488754,-0.00118644)    );
  // itree = 611
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943857,-0.00737609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.32126,0.00146344) , 
0, 0.000962212, 1, 0, 0.531135,-0.000834074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110044,0.0205704) , 
3, 126.153, 1, 0, 0.483259,-4.00769e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623636,0.0130079) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544429,-0.0156209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525934,-0.0119103) , 
1, 1.0746, 1, 0, 0.529917,-0.0083095) , 
3, 12.5358, 1, 0, 0.544378,-0.0063783) , 
6, 0.0521868, 1, 0, 0.493261,-0.00107725)    );
  // itree = 612
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939723,-0.00957638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960003,0.0126078) , 
5, 0.0169002, 1, 0, 0.949997,-0.000430646) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670268,-0.0117533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855022,-0.00810591) , 
4, 0.0201689, 1, 0, 0.799236,-0.011052) , 
2, 0.166629, 1, 0, 0.893614,-0.00440296) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00169239,0.0230907) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137325) , 
6, 0.0347635, 1, 0, 0,-0.000354391) , 
4, 0.0202849, 1, 0, 0.000537697,7.23298e-05) , 
0, 0.00288758, 1, 0, 0.496025,-0.0024106)    );
  // itree = 613
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657005,-0.0148394) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933505,-0.00322421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659042,-0.0111919) , 
0, 0.00218227, 1, 0, 0.915526,-0.00298858) , 
5, 0.00707209, 1, 0, 0.902695,-0.00378897) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000104164,-0.00227214) , 
4, 0.0289821, 1, 0, 5.8428e-05,-0.000210843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00192751,0.0328456) , 
6, 0.0376969, 1, 0, 0.00069405,0.000292476) , 
0, 0.00288758, 1, 0, 0.496016,-0.00194879)    );
  // itree = 614
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730564,-0.0336769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73236,0.00537909) , 
3, 3.59908, 1, 0, 0.732178,0.000210975) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922688,-0.0124005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131877) , 
0, 0.00288309, 1, 0, 0.576809,-0.00636332) , 
3, 37.7906, 1, 0, 0.648635,-0.00332407) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0549558,-0.00744258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614869,0.0125699) , 
4, 0.0161464, 1, 0, 0.419306,0.00272727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.235443,-0.0120352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165917,0.0165662) , 
5, 0.0287121, 1, 0, 0.196343,-0.00152847) , 
4, 0.0260879, 1, 0, 0.314429,0.000725463) , 
2, 0.190473, 1, 0, 0.495234,-0.00146532)    );
  // itree = 615
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980388,-0.0368161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0894735) , 
3, 45.1526, 1, 0, 0.988056,-0.00101485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51516,-0.0200089) , 
0, 0.0009434, 1, 0, 0.789863,-0.00510524) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533324,-0.0047043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499119,0.00184179) , 
3, 23.9892, 1, 0, 0.509963,-0.000163691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106671,0.0156045) , 
3, 125.968, 1, 0, 0.460205,0.000437038) , 
2, 0.0238023, 1, 0, 0.498381,-0.000204783)    );
  // itree = 616
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.315468,-0.00970919) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942293,0.019112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343865,0.0285196) , 
2, 0.0475735, 1, 0, 0.62136,0.00744801) , 
5, 0.00657395, 1, 0, 0.503657,0.00296647) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951929,-0.0157293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875234,0.0104107) , 
2, 0.261911, 1, 0, 0.934502,-0.00385738) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267183,0.0037492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.482586,-0.00363755) , 
6, 0.0434945, 1, 0, 0.341504,-0.00035683) , 
0, 0.000962526, 1, 0, 0.504936,-0.00132159) , 
5, 0.0114935, 1, 0, 0.504756,-0.00071851)    );
  // itree = 617
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767676,0.0180444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43207,-0.00552623) , 
4, 0.0232142, 1, 0, 0.637452,0.00234911) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.235777,-0.00879633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537589,0.0181681) , 
6, 0.0521301, 1, 0, 0.295986,-0.00303784) , 
2, 0.309454, 1, 0, 0.554265,0.00103675) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767092,-0.0150817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0415022,0.00181623) , 
0, 0.00192283, 1, 0, 0.213243,-0.00528673) , 
3, 100.922, 1, 0, 0.496819,-2.84524e-05)    );
  // itree = 618
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.432395,-0.0188645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.331816,-0.00573863) , 
4, 0.00581436, 1, 0, 0.342236,-0.00277533) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737366,-0.0028489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528267,0.00761184) , 
2, 0.166626, 1, 0, 0.635135,0.0013742) , 
6, 0.0260984, 1, 0, 0.545441,0.000103499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.116796,0.0179249) , 
3, 126.142, 1, 0, 0.497336,0.000771625)    );
  // itree = 619
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527839,-0.0203683) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582559,-0.00653487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562445,0.0229518) , 
3, 21.6232, 1, 0, 0.579718,-0.00151469) , 
4, 0.0115657, 1, 0, 0.571398,-0.00347055) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.858427,0.0252896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0923458,-0.00898361) , 
5, 0.0140171, 1, 0, 0.490569,0.00463044) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70279,-0.0148915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398424,-0.000233618) , 
4, 0.0189246, 1, 0, 0.452051,-0.0013882) , 
4, 0.0144969, 1, 0, 0.460838,-1.52436e-05) , 
3, 25.2289, 1, 0, 0.493758,-0.00104409)    );
  // itree = 620
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.416162,0.0467989) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777476,-0.00760296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490989,0.00882113) , 
2, 0.119035, 1, 0, 0.61187,0.00117714) , 
4, 0.00871508, 1, 0, 0.594182,0.00185144) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989149,0.0114976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795069,-0.00842989) , 
0, 0.000136392, 1, 0, 0.881547,-0.00591846) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00102253,0.0242503) , 
6, 0.037699, 1, 0, 0.000357536,1.67371e-05) , 
0, 0.00288758, 1, 0, 0.436914,-0.00292367) , 
3, 37.7947, 1, 0, 0.503478,-0.000902605)    );
  // itree = 621
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680907,0.00930267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979995,0.0481501) , 
7, 0.000171391, 1, 0, 0.730835,0.00555511) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0230369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130938) , 
4, 0.0365845, 1, 0, 0,-0.00174257) , 
4, 0.0145011, 1, 0, 0.340008,0.00165255) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595062,0.000759237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460957,-0.0244245) , 
3, 36.5499, 1, 0, 0.520889,-0.011129) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636865,0.00879976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591878,-0.00563811) , 
6, 0.0374605, 1, 0, 0.598318,-0.00201158) , 
6, 0.0335505, 1, 0, 0.587617,-0.00327158) , 
6, 0.0289901, 1, 0, 0.496819,-0.0014659)    );
  // itree = 622
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977681,0.0601165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957968,0.00632338) , 
4, 0.0175833, 1, 0, 0.967528,0.0064439) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.291235,-0.006453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572181,0.0141547) , 
6, 0.0406957, 1, 0, 0.403401,0.00080732) , 
0, 0.000961462, 1, 0, 0.606737,0.00283898) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913444,-0.0100133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000928469,0.00937189) , 
0, 0.00288608, 1, 0, 0.574984,-0.00391109) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.478692,0.0234161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247779,-0.000988607) , 
3, 91.0017, 1, 0, 0.31818,0.00146727) , 
3, 72.6909, 1, 0, 0.485783,-0.00204292) , 
3, 12.6158, 1, 0, 0.503695,-0.00131995)    );
  // itree = 623
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260789,-0.0271573) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735468,-0.00571441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600093,0.0148086) , 
2, 0.071422, 1, 0, 0.67404,0.0012597) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854478,-0.00652285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.105292,0.00291824) , 
0, 0.00192484, 1, 0, 0.35931,-0.00211233) , 
2, 0.166642, 1, 0, 0.51844,-0.000407404) , 
5, 0.00582184, 1, 0, 0.506077,-0.000986936)    );
  // itree = 624
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.241933,0.0190565) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.456268,-0.0208119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753477,-0.0149453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46601,-0.00102033) , 
2, 0.0476487, 1, 0, 0.519728,-0.00139392) , 
4, 0.00844429, 1, 0, 0.517108,-0.00180151) , 
4, 0.00580686, 1, 0, 0.502276,-0.00131684)    );
  // itree = 625
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.745775,-0.00316904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968049,0.0196877) , 
7, 0.000286783, 1, 0, 0.837285,0.00201188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000172916,-0.0176048) , 
4, 0.0231792, 1, 0, 0.670335,0.000491293) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243978,-0.023342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013099) , 
0, 0.00664439, 1, 0, 0.0677874,-0.0105051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.389682,-0.00294985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829074,0.0182017) , 
6, 0.0579807, 1, 0, 0.437975,0.00024918) , 
4, 0.0231908, 1, 0, 0.330626,-0.00286941) , 
5, 0.0229688, 1, 0, 0.497987,-0.00121373)    );
  // itree = 626
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.599964,-0.0238312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83077,-0.0388767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764535,7.15392e-05) , 
3, 12.4935, 1, 0, 0.77593,-0.00194693) , 
6, 0.0175769, 1, 0, 0.742121,-0.00374167) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913417,-0.00463958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436907,0.00684684) , 
0, 0.000803394, 1, 0, 0.585811,0.00186384) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000158706,0.00364646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0598717) , 
6, 0.0347943, 1, 0, 8.23531e-05,-0.00208839) , 
5, 0.0345499, 1, 0, 0.414781,0.000709812) , 
2, 0.0714125, 1, 0, 0.504933,-0.000516153)    );
  // itree = 627
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976059,0.0155969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209579,-0.00219171) , 
0, 0.00192442, 1, 0, 0.741088,0.00274737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755439,0.00991664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4485,-0.0113949) , 
5, 0.017289, 1, 0, 0.564708,-0.00180414) , 
3, 50.3824, 1, 0, 0.668453,0.000872998) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.407106,-0.034827) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.308828,8.29036e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577287,-0.0135992) , 
6, 0.0579806, 1, 0, 0.325061,-0.000592846) , 
2, 0.182612, 1, 0, 0.330162,-0.00151114) , 
2, 0.166629, 1, 0, 0.496963,-0.000335594)    );
  // itree = 628
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637981,0.047011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51552,0.00442668) , 
4, 0.0172432, 1, 0, 0.557921,0.00327097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910405,-0.00520717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000407372,-0.00125838) , 
0, 0.00288664, 1, 0, 0.538799,-0.00223185) , 
3, 6.59794, 1, 0, 0.540576,-0.00172061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.084917,0.0073469) , 
3, 138.564, 1, 0, 0.500175,-0.00129576)    );
  // itree = 629
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957543,-0.00418508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517127,0.00975948) , 
0, 0.000891556, 1, 0, 0.698747,0.00195443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000114279,-0.0274726) , 
4, 0.0318818, 1, 0, 0.564473,0.000937609) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0703794,0.0046625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622738,-0.00764084) , 
7, 0.000163406, 1, 0, 0.199075,-0.00124031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666701,-0.0172474) , 
7, 0.000535656, 1, 0, 0.263089,-0.00432604) , 
3, 88.3067, 1, 0, 0.499499,-0.000197143)    );
  // itree = 630
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992865,0.0200319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940058,-0.0100081) , 
8, 0.219309, 1, 0, 0.978971,-0.000455551) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914484,-0.00780217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730971,-0.01081) , 
2, 0.11909, 1, 0, 0.816479,-0.0125997) , 
0, 0.000274852, 1, 0, 0.892286,-0.0069341) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.00315e-05,-0.00540561) , 
5, 0.0338978, 1, 0, 4.98111e-05,-0.000213288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00199341,0.0221753) , 
2, 0.380851, 1, 0, 0.000498166,9.27002e-05) , 
0, 0.00288758, 1, 0, 0.494988,-0.00380361)    );
  // itree = 631
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816983,-0.0255191) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933912,-0.000232886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914446,-0.0148348) , 
5, 0.0253375, 1, 0, 0.931287,-0.00187143) , 
6, 0.0144913, 1, 0, 0.925078,-0.00335657) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00171141,-0.00975712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417509,0.0112515) , 
6, 0.0498243, 1, 0, 0.0671666,-0.000440667) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510976,0.0507945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386018,0.0364322) , 
3, 37.7756, 1, 0, 0.439272,0.01061) , 
6, 0.0550824, 1, 0, 0.116348,0.0010199) , 
0, 0.00192484, 1, 0, 0.4998,-0.00105516)    );
  // itree = 632
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594759,-0.00175985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754711,-0.0203526) , 
6, 0.0251373, 1, 0, 0.677281,-0.00402532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.420165,0.00402163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0184163) , 
4, 0.0203291, 1, 0, 0.189095,0.00011212) , 
2, 0.142776, 1, 0, 0.434713,-0.00196953) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705793,-0.00160255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591206,0.0118447) , 
2, 0.214148, 1, 0, 0.653355,0.002082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296051,-0.00606348) , 
3, 100.702, 1, 0, 0.5963,0.00113355) , 
6, 0.040591, 1, 0, 0.500021,-0.000715367)    );
  // itree = 633
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.447239,-0.0185246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68398,0.00395896) , 
4, 0.0058624, 1, 0, 0.670358,0.00037705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506775,0.0173746) , 
2, 0.150771, 1, 0, 0.660306,0.000867272) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454585,0.0018788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356034,-0.0302152) , 
2, 0.208286, 1, 0, 0.40998,-0.00748439) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0598053,-0.00878425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50926,0.00583403) , 
6, 0.0376978, 1, 0, 0.297513,-0.000228899) , 
2, 0.24609, 1, 0, 0.330792,-0.00237579) , 
2, 0.166662, 1, 0, 0.498036,-0.000729785)    );
  // itree = 634
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851898,-0.00679155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317928,-0.0176582) , 
2, 0.166616, 1, 0, 0.682652,-0.00610289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.294477,-0.00898014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538123,0.00877247) , 
5, 0.0216364, 1, 0, 0.480911,0.000792295) , 
4, 0.0203025, 1, 0, 0.573375,-0.00236795) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94775,0.017604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00340801,-0.0125789) , 
0, 0.0015718, 1, 0, 0.529101,0.0032926) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.480005,-0.00577163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.325266,0.00953806) , 
2, 0.285425, 1, 0, 0.423819,-0.000471386) , 
4, 0.0173857, 1, 0, 0.457712,0.000740345) , 
3, 25.1939, 1, 0, 0.492592,-0.000197015)    );
  // itree = 635
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87297,0.0458111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147935,-0.00417719) , 
2, 0.0236816, 1, 0, 0.338903,0.00120755) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626924,-0.0240768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665402,0.000121659) , 
4, 0.0131797, 1, 0, 0.637671,-0.0107283) , 
4, 0.00897532, 1, 0, 0.513569,-0.00577038) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.307339,-0.00831599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518441,0.00439954) , 
5, 0.0163897, 1, 0, 0.481301,0.000461789) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.698058,-0.0137966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57034,0.00471753) , 
3, 50.35, 1, 0, 0.643631,-0.00467381) , 
6, 0.0550824, 1, 0, 0.501495,-0.000177074) , 
4, 0.0145011, 1, 0, 0.504415,-0.00152975)    );
  // itree = 636
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.400059,-0.0140739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645117,-0.000109258) , 
5, 0.00557798, 1, 0, 0.63292,-0.000587317) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785426,-0.00860765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000816897,0.00903538) , 
0, 0.00288725, 1, 0, 0.328495,-0.00422286) , 
2, 0.224371, 1, 0, 0.533939,-0.00176938) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.299714,0.0113898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201712,0.000194315) , 
4, 0.0257308, 1, 0, 0.242536,0.00283235) , 
2, 0.428441, 1, 0, 0.506842,-0.00134148)    );
  // itree = 637
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595987,-0.00238487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562577,0.0164682) , 
3, 35.2308, 1, 0, 0.588927,0.000501165) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593412,-0.0134375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454149,-0.0025547) , 
5, 0.0167184, 1, 0, 0.491526,-0.00316237) , 
3, 46.2413, 1, 0, 0.546287,-0.00110266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0858004,0.0160101) , 
3, 138.757, 1, 0, 0.505301,-0.000541982)    );
  // itree = 638
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.23937,0.0115851) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490963,-0.00444312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665839,0.00462273) , 
6, 0.0405909, 1, 0, 0.563615,3.4402e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.081838,-0.0103069) , 
3, 138.768, 1, 0, 0.523081,-0.000440022) , 
4, 0.00580854, 1, 0, 0.50749,-0.000116851)    );
  // itree = 639
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578528,0.0053681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698112,-0.00538694) , 
6, 0.0289901, 1, 0, 0.6507,-0.000893102) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.259453,-0.00121293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85258,0.0162634) , 
7, 0.000537266, 1, 0, 0.386179,0.00127105) , 
2, 0.181311, 1, 0, 0.554126,-0.000102988) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743007,-0.00278179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640536,-0.0128785) , 
0, 0.00123383, 1, 0, 0.691052,-0.0136132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00161021,0.0103728) , 
0, 0.00288551, 1, 0, 0.225505,-0.00399928) , 
2, 0.380859, 1, 0, 0.501736,-0.00072415)    );
  // itree = 640
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729693,-0.0307764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810627,0.000104216) , 
2, 0.0045849, 1, 0, 0.788864,-0.00386891) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.412387,0.000658376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835702,0.0085686) , 
7, 0.000534736, 1, 0, 0.496444,0.000990011) , 
2, 0.0192697, 1, 0, 0.52935,0.000443225) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0941165,0.00269397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459923,-0.0145292) , 
6, 0.0463694, 1, 0, 0.214557,-0.00354737) , 
2, 0.404671, 1, 0, 0.489414,-6.30464e-05)    );
  // itree = 641
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981053,-0.0135825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917676,0.0214496) , 
0, 0.000228892, 1, 0, 0.957119,0.00324826) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931681,-0.000681641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915287,-0.0214759) , 
1, 1.41364, 1, 0, 0.923826,-0.0065483) , 
4, 0.0145933, 1, 0, 0.935197,-0.00320252) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00305421,-0.0218701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761594,0.0076744) , 
7, 0.000145067, 1, 0, 0.360691,0.000984224) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651018,-0.00893338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000912114,0.00368051) , 
0, 0.00280202, 1, 0, 0.139569,-0.00301483) , 
2, 0.333158, 1, 0, 0.299466,-0.00012304) , 
0, 0.000962212, 1, 0, 0.496857,-0.00107921)    );
  // itree = 642
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730888,0.00573666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874161,-0.0161696) , 
7, 0.000543648, 1, 0, 0.753103,-0.000231351) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562332,-0.021231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.37687,-0.00228796) , 
2, 0.0453593, 1, 0, 0.460198,-0.00874598) , 
3, 75.5242, 1, 0, 0.686914,-0.00215544) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923733,-0.0103244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345736,0.0199858) , 
0, 0.000958746, 1, 0, 0.492466,0.00283237) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853678,0.00911759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181871,-0.00461411) , 
0, 0.000962418, 1, 0, 0.294511,-0.000490854) , 
2, 0.246089, 1, 0, 0.374798,0.000856977) , 
2, 0.119044, 1, 0, 0.497032,-0.000322778)    );
  // itree = 643
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81024,0.022334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51525,-0.00528633) , 
2, 0.0317383, 1, 0, 0.570431,-0.00134192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702403,0.0110232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131089) , 
0, 0.00384019, 1, 0, 0.234821,0.00310828) , 
2, 0.333258, 1, 0, 0.49681,-0.000365707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596468,0.0069147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60984,-0.0210747) , 
6, 0.0593669, 1, 0, 0.603161,-0.0106362) , 
6, 0.0579807, 1, 0, 0.502678,-0.000932357)    );
  // itree = 644
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.429267,-0.00019555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664706,0.0487135) , 
6, 0.040213, 1, 0, 0.446948,0.000919334) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695526,-0.0144385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491575,0.0217413) , 
3, 62.8187, 1, 0, 0.623501,-0.00410279) , 
6, 0.0422351, 1, 0, 0.480239,-2.76263e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245926,-0.0139026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800316,0.0291017) , 
1, 1.21304, 1, 0, 0.485367,-0.00129992) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945947,0.0320946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.290669,-0.00386102) , 
4, 0.0294389, 1, 0, 0.644981,0.00563314) , 
4, 0.0261221, 1, 0, 0.58463,0.00301168) , 
6, 0.049283, 1, 0, 0.50301,0.000635344)    );
  // itree = 645
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997337,0.0197453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954261,-0.0352166) , 
8, 0.266532, 1, 0, 0.992055,-0.00163516) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90022,-0.010161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455524,-0.0111507) , 
4, 0.0107751, 1, 0, 0.688379,-0.0222699) , 
0, 4.58225e-05, 1, 0, 0.931232,-0.00576808) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153765,-0.00335345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452875,0.00501137) , 
6, 0.0341174, 1, 0, 0.293513,0.00057218) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.368751,-0.00481374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409512,-0.0117308) , 
6, 0.0586811, 1, 0, 0.38478,-0.00647196) , 
6, 0.0550856, 1, 0, 0.303498,-0.000198479) , 
0, 0.000962526, 1, 0, 0.495731,-0.00190407)    );
  // itree = 646
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955287,0.000671798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929617,-0.0206945) , 
5, 0.0268959, 1, 0, 0.952706,-0.00162858) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76735,-0.0105673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856189,-0.000617471) , 
7, 0.000650829, 1, 0, 0.796738,-0.00955084) , 
2, 0.166629, 1, 0, 0.894515,-0.00458435) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000218582,0.0120667) , 
4, 0.0319274, 1, 0, 0.000101943,-0.000180499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00202728,0.0286658) , 
2, 0.38082, 1, 0, 0.000576229,0.00016296) , 
0, 0.00288733, 1, 0, 0.499735,-0.00248785)    );
  // itree = 647
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933665,0.00338393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0366942,-0.00730009) , 
0, 0.00192405, 1, 0, 0.4792,0.000463038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.546504,-0.0252034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500841,-0.00315811) , 
6, 0.0537165, 1, 0, 0.523172,-0.0088366) , 
6, 0.0524618, 1, 0, 0.481698,-6.52391e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.588931,-0.0130013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567399,0.0096593) , 
2, 0.189723, 1, 0, 0.578045,-0.00105651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588099,0.0417964) , 
4, 0.0289603, 1, 0, 0.583039,0.00388498) , 
6, 0.0550843, 1, 0, 0.492012,0.000336793)    );
  // itree = 648
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976487,0.0097146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437915,-0.00649745) , 
0, 0.000962212, 1, 0, 0.681617,-0.000641297) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527002,-0.0167671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438749,0.032285) , 
2, 0.174914, 1, 0, 0.502632,-0.00690691) , 
2, 0.136043, 1, 0, 0.644394,-0.00194436) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.132713,-0.00662084) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627689,0.0050952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0311145,-0.0110015) , 
4, 0.0298146, 1, 0, 0.367255,0.00140476) , 
4, 0.017396, 1, 0, 0.3206,0.000396098) , 
2, 0.19047, 1, 0, 0.495748,-0.000869912)    );
  // itree = 649
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.217802,0.00823199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553751,-0.0218387) , 
6, 0.0106291, 1, 0, 0.414213,-0.00443272) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685822,0.00321401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704969,0.0412298) , 
1, 2.05489, 1, 0, 0.69044,0.00241403) , 
6, 0.0202931, 1, 0, 0.635484,0.00105186) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0993523,-0.00280015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539887,0.0193618) , 
6, 0.0393462, 1, 0, 0.16753,0.000596119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57302,-0.0115126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433065,0.00284589) , 
3, 62.9477, 1, 0, 0.519231,-0.00503487) , 
6, 0.0434892, 1, 0, 0.308189,-0.00165594) , 
2, 0.214279, 1, 0, 0.501081,-6.00901e-05)    );
  // itree = 650
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986207,-0.00163855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800277,-0.0216549) , 
2, 0.0714264, 1, 0, 0.931027,-0.00834625) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751176,-0.0153748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21029,0.00774478) , 
2, 0.0714389, 1, 0, 0.382208,7.1013e-05) , 
0, 0.000677015, 1, 0, 0.588341,-0.00309045) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936981,0.00324089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986948,0.0761833) , 
5, 0.0280137, 1, 0, 0.94433,0.00245576) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.107813,0.00857449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51765,-0.00605308) , 
6, 0.0376927, 1, 0, 0.314633,-0.00141247) , 
0, 0.000962526, 1, 0, 0.471153,-0.00045097) , 
5, 0.0166763, 1, 0, 0.504211,-0.00119555)    );
  // itree = 651
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965306,-0.00956012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452424,0.00352736) , 
0, 0.000959452, 1, 0, 0.67717,-0.000758902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.444324,-0.027502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455391,-0.00472133) , 
2, 0.177551, 1, 0, 0.452966,-0.00576348) , 
2, 0.158651, 1, 0, 0.627461,-0.00186847) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00142243,-0.00264233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731815,0.0104622) , 
7, 0.000177328, 1, 0, 0.335317,0.00296577) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.324307,-0.00849736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156996,0.00309321) , 
5, 0.0268538, 1, 0, 0.229598,-0.00325026) , 
2, 0.425044, 1, 0, 0.307341,0.00132083) , 
2, 0.238023, 1, 0, 0.508858,-0.000686848)    );
  // itree = 652
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.229351,0.0133196) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948637,-0.00280534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812149,-0.00713144) , 
2, 0.190482, 1, 0, 0.903184,-0.00364901) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00056155,0.0146378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132289) , 
6, 0.0434778, 1, 0, 0.000423551,6.8896e-05) , 
0, 0.00288758, 1, 0, 0.514301,-0.00204745) , 
4, 0.00580854, 1, 0, 0.498641,-0.00162996)    );
  // itree = 653
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687827,0.00238191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600265,-0.0210015) , 
3, 86.302, 1, 0, 0.682714,-0.00032748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520736,0.00429394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.233327,0.0286575) , 
2, 0.118947, 1, 0, 0.339479,0.00915735) , 
3, 100.694, 1, 0, 0.638376,0.000897751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0204215) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506866,-0.00918963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371944,0.00910888) , 
2, 0.214443, 1, 0, 0.43635,-0.000499008) , 
5, 0.0230519, 1, 0, 0.341622,-0.00248296) , 
4, 0.0231973, 1, 0, 0.500734,-0.000670306)    );
  // itree = 654
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639898,-0.0056525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.505546,0.00588425) , 
5, 0.0160976, 1, 0, 0.545914,0.00040729) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.604527,0.0210121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632321,-0.0122595) , 
6, 0.056739, 1, 0, 0.624685,-0.00530284) , 
6, 0.0550823, 1, 0, 0.554136,-0.000188716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114725,0.0174684) , 
3, 126.142, 1, 0, 0.505299,0.000411099)    );
  // itree = 655
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936104,0.000702954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918374,-0.0152272) , 
5, 0.0240742, 1, 0, 0.932952,-0.00161579) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00101878,-0.00229284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783734,0.0163134) , 
7, 0.000534737, 1, 0, 0.121045,0.00125623) , 
0, 0.00192368, 1, 0, 0.517372,-0.000145724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221026,-0.0123692) , 
2, 0.452271, 1, 0, 0.499023,-0.000654747)    );
  // itree = 656
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925066,-0.00455919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944481,0.0161287) , 
0, 0.00174035, 1, 0, 0.926406,-0.00156271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893281,-0.0149598) , 
5, 0.0277468, 1, 0, 0.924186,-0.00270884) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70335,-0.00312394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895332,0.0194519) , 
4, 0.0263838, 1, 0, 0.822352,0.00544876) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000570463,0.00542437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0157106) , 
6, 0.0434721, 1, 0, 0.00042622,-0.000224622) , 
0, 0.00279678, 1, 0, 0.117752,0.000585224) , 
0, 0.00192505, 1, 0, 0.50524,-0.000997559)    );
  // itree = 657
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975187,-0.00592789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949808,0.0493774) , 
0, 0.000366129, 1, 0, 0.963978,0.00810745) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.011042,-0.0152622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.58088e-05,-0.00939983) , 
0, 0.00921668, 1, 0, 0.00257936,-0.00137954) , 
0, 0.000962418, 1, 0, 0.16679,0.000240875) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932783,-0.0103986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549398,-0.0132515) , 
2, 0.238047, 1, 0, 0.87432,-0.00788486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763148,-0.00461637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723193,0.0126594) , 
2, 0.356723, 1, 0, 0.755384,-0.000627465) , 
6, 0.0398352, 1, 0, 0.799204,-0.00330131) , 
7, 0.000144606, 1, 0, 0.497142,-0.00160944)    );
  // itree = 658
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.394814,-0.00521402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.402343,0.0091474) , 
6, 0.0357705, 1, 0, 0.397277,-0.000377841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888688,-0.00162247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67974,-0.0164699) , 
5, 0.0278103, 1, 0, 0.850616,-0.00421203) , 
7, 0.000470794, 1, 0, 0.490649,-0.00116755) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667986,0.00255284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563001,0.0198407) , 
3, 36.7559, 1, 0, 0.611017,0.00452318) , 
6, 0.0579806, 1, 0, 0.497224,-0.000856706)    );
  // itree = 659
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.438025,0.00894834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255273,0.0226838) , 
3, 50.3474, 1, 0, 0.345849,0.00545061) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.447766,-0.000754107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836629,0.00485275) , 
7, 0.000538844, 1, 0, 0.527895,0.000401389) , 
4, 0.00870446, 1, 0, 0.510601,0.000881078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201977,-0.0119843) , 
2, 0.452091, 1, 0, 0.491077,0.000416377)    );
  // itree = 660
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992257,-0.0457482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998805,0.0698912) , 
6, 0.0435798, 1, 0, 0.994832,0.000182631) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582821,-0.0153734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846762,-0.000783183) , 
0, 0.000656591, 1, 0, 0.71398,-0.0246833) , 
0, 4.57697e-05, 1, 0, 0.938134,-0.00483727) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0138596,-0.00836551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783416,0.00655533) , 
7, 0.00015575, 1, 0, 0.379685,0.00150774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700736,-0.00646193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0986263,-0.000960941) , 
0, 0.00189532, 1, 0, 0.172025,-0.00180637) , 
2, 0.285553, 1, 0, 0.305482,0.000323519) , 
0, 0.000961461, 1, 0, 0.498819,-0.00125361)    );
  // itree = 661
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575637,-0.00678703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6496,0.0083589) , 
6, 0.0492854, 1, 0, 0.591573,-0.00114805) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.362313,0.00988401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181916,-0.0109206) , 
2, 0.322963, 1, 0, 0.319744,0.00162748) , 
3, 75.6854, 1, 0, 0.516978,-0.000386393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201533,-0.014234) , 
2, 0.452243, 1, 0, 0.496977,-0.000901644)    );
  // itree = 662
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.23103,0.0153812) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576131,0.00104401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401365,0.0217204) , 
3, 102.108, 1, 0, 0.565248,0.000723453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112382,-0.00873746) , 
3, 126.152, 1, 0, 0.51649,0.000216689) , 
4, 0.00582885, 1, 0, 0.50111,0.000538111)    );
  // itree = 663
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965328,-0.00355727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833674,-0.0101544) , 
2, 0.166616, 1, 0, 0.923439,-0.00490195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949916,0.0250137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931963,0.0165531) , 
0, 0.00176756, 1, 0, 0.940922,0.0122011) , 
0, 0.00164858, 1, 0, 0.925287,-0.0030937) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80826,0.0151279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000991551,-0.01354) , 
0, 0.00271696, 1, 0, 0.201335,0.00188533) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0255015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000275562,0.0110796) , 
0, 0.0150167, 1, 0, 0.000154396,-0.00130097) , 
4, 0.0318966, 1, 0, 0.115588,0.000527273) , 
0, 0.00192488, 1, 0, 0.50119,-0.00119714)    );
  // itree = 664
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982326,0.00533942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770641,-0.0119283) , 
0, 0.00027467, 1, 0, 0.943893,-0.00291439) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526917,-0.0153304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261997,0.00359015) , 
2, 0.0238251, 1, 0, 0.279911,0.000534015) , 
0, 0.000962256, 1, 0, 0.483536,-0.000523515) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726528,-0.00595085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633571,-0.0215054) , 
3, 35.151, 1, 0, 0.673338,-0.0123696) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.539055,-0.00679839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.378709,0.0213999) , 
3, 49.9346, 1, 0, 0.465028,0.000198436) , 
5, 0.0288061, 1, 0, 0.562421,-0.0056776) , 
6, 0.0521838, 1, 0, 0.496088,-0.00134366)    );
  // itree = 665
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.693915,-0.0061938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284577,-0.0133416) , 
3, 100.765, 1, 0, 0.638859,-0.0024791) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.368016,0.0294018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181169,-0.00132727) , 
2, 0.210952, 1, 0, 0.230425,0.00143101) , 
2, 0.142853, 1, 0, 0.421059,-0.000394007) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90097,-0.00481545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814672,-0.0364388) , 
2, 0.147388, 1, 0, 0.873518,-0.0102086) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83829,0.0169061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65745,-0.0157589) , 
4, 0.0282389, 1, 0, 0.775259,0.000676467) , 
2, 0.23808, 1, 0, 0.83099,-0.00549732) , 
7, 0.000538845, 1, 0, 0.497944,-0.00135117)    );
  // itree = 666
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738079,-0.000553223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962625,0.0132295) , 
7, 0.000271483, 1, 0, 0.834267,0.0023881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0174806) , 
4, 0.0230356, 1, 0, 0.662732,0.00106439) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950041,0.00819591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918022,-0.0178755) , 
5, 0.0253653, 1, 0, 0.934659,-0.00545823) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00181161,-0.00962831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221665,0.00958406) , 
4, 0.0232299, 1, 0, 0.148323,0.00029854) , 
0, 0.00192488, 1, 0, 0.33902,-0.00109756) , 
5, 0.0226011, 1, 0, 0.494278,-6.06528e-05)    );
  // itree = 667
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577565,-0.0051336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55832,0.00363643) , 
3, 21.6219, 1, 0, 0.56512,0.000224202) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.195667,-0.00167884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839536,-0.0183527) , 
7, 0.000355184, 1, 0, 0.307184,-0.00278883) , 
3, 75.6915, 1, 0, 0.493736,-0.000609657) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603202,-0.0343974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523058,-0.00937098) , 
1, 1.10183, 1, 0, 0.544182,-0.00915038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603286,0.0146358) , 
6, 0.0592231, 1, 0, 0.55526,-0.00639503) , 
6, 0.0521838, 1, 0, 0.50373,-0.00154943)    );
  // itree = 668
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606347,-0.00116385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923335,0.0134458) , 
7, 0.00041107, 1, 0, 0.67246,0.000705869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848479,-0.00938245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0568517,0.00158582) , 
0, 0.00192488, 1, 0, 0.305982,-0.00292666) , 
2, 0.166662, 1, 0, 0.492575,-0.00107715) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918249,0.00300589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.378307,-0.0252388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442474,-0.0057528) , 
4, 0.0289874, 1, 0, 0.409836,-0.0126168) , 
0, 0.000956548, 1, 0, 0.565287,-0.00831757) , 
6, 0.0550855, 1, 0, 0.500194,-0.00183583)    );
  // itree = 669
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738047,0.0144749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145804,-0.00943505) , 
4, 0.028985, 1, 0, 0.598419,0.00285424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561799,-0.0118292) , 
3, 34.2396, 1, 0, 0.595299,0.0021678) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.521821,0.00406461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610427,-0.0250344) , 
6, 0.0463931, 1, 0, 0.547253,-0.00572935) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676549,-0.0148556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345104,0.00429421) , 
2, 0.0476074, 1, 0, 0.401283,0.000187856) , 
3, 48.672, 1, 0, 0.427636,-0.000880424) , 
3, 37.8461, 1, 0, 0.498172,0.000401962)    );
  // itree = 670
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701963,-0.00284438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398572,0.00548053) , 
2, 0.183602, 1, 0, 0.580662,0.00033492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124263,-0.00921165) , 
3, 126.143, 1, 0, 0.531227,-0.00023683) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.246366,-0.00474353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190886,-0.0146921) , 
2, 0.462458, 1, 0, 0.22003,-0.00655277) , 
2, 0.428441, 1, 0, 0.500812,-0.000854111)    );
  // itree = 671
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244311,0.0165116) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704441,0.000343833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562913,-0.0154636) , 
6, 0.0435145, 1, 0, 0.672901,-0.00182662) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0169521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397943,0.0102978) , 
5, 0.0230602, 1, 0, 0.305383,0.000483703) , 
4, 0.0241671, 1, 0, 0.506212,-0.000778762) , 
4, 0.00580638, 1, 0, 0.492734,-0.000364896)    );
  // itree = 672
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.168297,0.0161527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617493,-0.00452583) , 
6, 0.01107, 1, 0, 0.574013,-0.00123194) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845123,0.0249358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148722,0.000799624) , 
0, 0.000962418, 1, 0, 0.257684,0.0021876) , 
2, 0.309454, 1, 0, 0.496437,-0.000393338) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625935,0.00452125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60427,-0.0189195) , 
6, 0.0593611, 1, 0, 0.614676,-0.00822369) , 
6, 0.0579807, 1, 0, 0.50271,-0.000808768)    );
  // itree = 673
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632132,0.012626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247207,0.0132108) , 
6, 0.0131392, 1, 0, 0.359983,0.00480043) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.521529,-0.00360544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.18713,0.034887) , 
2, 0.452369, 1, 0, 0.501037,-0.000826954) , 
4, 0.00871134, 1, 0, 0.487547,-0.000288768) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615162,-0.0400938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655181,-0.00611986) , 
4, 0.0289524, 1, 0, 0.634696,-0.0141983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470742,-0.00487036) , 
3, 50.0037, 1, 0, 0.56208,-0.00898855) , 
6, 0.055081, 1, 0, 0.495499,-0.00121694)    );
  // itree = 674
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617011,-0.0137357) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868584,0.00467265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00279266,-0.0216608) , 
5, 0.0205371, 1, 0, 0.609848,-0.000911256) , 
5, 0.00741316, 1, 0, 0.610439,-0.00191732) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0263828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000279655,0.0147657) , 
4, 0.0376955, 1, 0, 0.000151599,-0.0018187) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883239,0.0084238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0782037,-0.0138342) , 
4, 0.0299602, 1, 0, 0.699132,0.00237941) , 
6, 0.0405977, 1, 0, 0.418625,0.000694676) , 
4, 0.0203044, 1, 0, 0.501127,-0.000428785)    );
  // itree = 675
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994021,0.0861571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980959,-0.00745116) , 
5, 0.0164045, 1, 0, 0.989534,0.00387848) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.806996,-0.016897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915949,-0.00501452) , 
4, 0.0113175, 1, 0, 0.904356,-0.00514843) , 
2, 0.0237572, 1, 0, 0.919958,-0.00349495) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000598197,-0.00904398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00217113,0.0388303) , 
3, 113.296, 1, 0, 0.000959768,-0.000186782) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664561,-0.00195255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804731,0.0216416) , 
4, 0.0272599, 1, 0, 0.731755,0.00463316) , 
7, 0.000534737, 1, 0, 0.113703,0.000556814) , 
0, 0.00192505, 1, 0, 0.49548,-0.00136177)    );
  // itree = 676
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.699428,-0.00614295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560485,0.00936671) , 
2, 0.128366, 1, 0, 0.679673,-0.0013553) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230258,0.00178281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573397,-0.0220632) , 
6, 0.0348474, 1, 0, 0.425912,-0.00756924) , 
2, 0.158651, 1, 0, 0.620371,-0.00280744) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200683,-0.00590877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50833,0.00897692) , 
6, 0.0340547, 1, 0, 0.271108,0.00139956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524634,-0.0113036) , 
6, 0.0550542, 1, 0, 0.303844,0.000352541) , 
2, 0.238037, 1, 0, 0.503715,-0.00164283)    );
  // itree = 677
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566051,-0.00491084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62208,-0.0130832) , 
6, 0.0550822, 1, 0, 0.572248,-0.00281114) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.16996,-0.00624458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821635,0.00584571) , 
7, 0.000151442, 1, 0, 0.508522,0.00119921) , 
3, 28.8273, 1, 0, 0.531915,-0.000272903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0516836,-0.0153318) , 
3, 151.372, 1, 0, 0.49469,-0.000942815)    );
  // itree = 678
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760626,0.00645188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51144,0.0199654) , 
2, 0.176752, 1, 0, 0.697768,0.00282817) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.433113,-0.0161234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309315,-0.0013866) , 
2, 0.336683, 1, 0, 0.341552,-0.00345686) , 
2, 0.285627, 1, 0, 0.606324,0.00121475) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544368,0.0103752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376229,-0.0154871) , 
3, 59.1541, 1, 0, 0.436798,-0.00804271) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595341,-0.0121687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.405968,0.000193733) , 
3, 48.5896, 1, 0, 0.437892,-0.00121689) , 
5, 0.0111086, 1, 0, 0.437757,-0.00206202) , 
3, 37.7887, 1, 0, 0.508931,-0.000678469)    );
  // itree = 679
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510574,0.00221804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641641,-0.00787725) , 
6, 0.0393546, 1, 0, 0.556538,-0.000747451) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0100678,-0.00966266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800622,0.0265177) , 
7, 0.000390322, 1, 0, 0.217036,0.00286426) , 
2, 0.357034, 1, 0, 0.495386,-9.69005e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607137,-0.022562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.420052,-0.00346923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688957,0.0191263) , 
6, 0.0592338, 1, 0, 0.521361,0.00166505) , 
5, 0.0289742, 1, 0, 0.552403,-0.00581648) , 
6, 0.0550842, 1, 0, 0.501599,-0.000720141)    );
  // itree = 680
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989315,0.0299689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967233,-0.00401101) , 
4, 0.0228716, 1, 0, 0.982061,0.00207794) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903559,-0.00381323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704601,-0.0098194) , 
2, 0.190436, 1, 0, 0.830969,-0.00772617) , 
0, 0.000273146, 1, 0, 0.901023,-0.00318047) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000217008,0.00894509) , 
5, 0.0401833, 1, 0, 0.000101462,-0.000190366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00177474,0.013895) , 
2, 0.380851, 1, 0, 0.00050174,4.05644e-05) , 
0, 0.00288725, 1, 0, 0.497599,-0.00173748)    );
  // itree = 681
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987746,0.00552419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509611,-0.0180819) , 
0, 0.000961032, 1, 0, 0.77678,-0.00355841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667665,-0.043991) , 
2, 0.038527, 1, 0, 0.758919,-0.00622875) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925331,0.00695337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00415002,-0.0104494) , 
0, 0.00162981, 1, 0, 0.485843,0.00145573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683233,-0.0136593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.305621,0.0021067) , 
4, 0.0241638, 1, 0, 0.397741,-0.00177051) , 
4, 0.020294, 1, 0, 0.430422,-0.00057378) , 
2, 0.0476045, 1, 0, 0.496208,-0.00170628)    );
  // itree = 682
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.717243,-0.0160845) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90115,-0.00380291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679705,-0.0111637) , 
2, 0.404669, 1, 0, 0.884183,-0.00337054) , 
4, 0.00879377, 1, 0, 0.871066,-0.00431383) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.38721e-05,-0.00868139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000342238,0.0280462) , 
4, 0.0434491, 1, 0, 0.000154792,-3.0863e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013117) , 
2, 0.380752, 1, 0, 0.000118225,-0.000131193) , 
0, 0.00385011, 1, 0, 0.495476,-0.0025101)    );
  // itree = 683
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953763,-0.00236668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522903,0.0169537) , 
0, 0.000749162, 1, 0, 0.710467,0.00346953) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0203458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00066786,0.0529418) , 
4, 0.0357619, 1, 0, 0.000380058,-0.00139369) , 
4, 0.0202976, 1, 0, 0.440425,0.00162007) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619102,-0.00685952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529783,0.00819729) , 
2, 0.365827, 1, 0, 0.606369,-0.00205521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425547,-0.0119775) , 
2, 0.451953, 1, 0, 0.592328,-0.00291408) , 
6, 0.0405903, 1, 0, 0.501894,-0.000214721)    );
  // itree = 684
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962509,-0.000335045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862157,-0.00816705) , 
2, 0.0952352, 1, 0, 0.90822,-0.00390857) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000368168,0.000138113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137664) , 
6, 0.0434944, 1, 0, 0.000274808,-0.000229453) , 
0, 0.00288677, 1, 0, 0.534756,-0.00239524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0774251,0.0132973) , 
3, 138.756, 1, 0, 0.494655,-0.0018058)    );
  // itree = 685
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247123,-0.0182756) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575296,-0.00224559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253883,0.0113388) , 
2, 0.452369, 1, 0, 0.557657,-0.000663613) , 
4, 0.00583156, 1, 0, 0.540903,-0.00114936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0923125,0.0102183) , 
3, 138.565, 1, 0, 0.500944,-0.000701876)    );
  // itree = 686
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.229875,0.0215374) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83494,-0.00872185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625652,0.0231594) , 
5, 0.016759, 1, 0, 0.714848,0.00114741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.36988,-0.00255433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579944,-0.0148953) , 
6, 0.0550857, 1, 0, 0.394962,-0.00214108) , 
2, 0.119036, 1, 0, 0.518453,-0.000871574) , 
4, 0.00581561, 1, 0, 0.502205,-0.000457845)    );
  // itree = 687
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719395,0.00394196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.222105,-0.00708398) , 
2, 0.142853, 1, 0, 0.484774,-0.000884345) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71854,0.00032636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600976,0.0143355) , 
2, 0.190279, 1, 0, 0.659171,0.00271895) , 
6, 0.0405909, 1, 0, 0.554321,0.000552602) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702048,-0.00892842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131528) , 
0, 0.00288758, 1, 0, 0.164978,-0.00526109) , 
3, 113.537, 1, 0, 0.502539,-0.00022062)    );
  // itree = 688
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592877,0.00453489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596578,-0.0280489) , 
3, 10.796, 1, 0, 0.594096,-0.0036368) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587636,0.015568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533048,-0.00194986) , 
3, 34.7087, 1, 0, 0.549645,0.000482396) , 
3, 16.1977, 1, 0, 0.559644,-0.000444151) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643092,-0.0125172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000166975,-0.00603129) , 
0, 0.00288758, 1, 0, 0.157131,-0.00947294) , 
3, 113.383, 1, 0, 0.504329,-0.00168491)    );
  // itree = 689
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56765,0.00062681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461047,-0.014722) , 
3, 76.8663, 1, 0, 0.554418,-0.000464175) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814552,0.0219973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0001564,-0.00799197) , 
0, 0.00288758, 1, 0, 0.212507,0.00493734) , 
3, 100.914, 1, 0, 0.497454,0.000435737) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594792,-0.0519954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522512,-0.0132075) , 
3, 37.7651, 1, 0, 0.556273,-0.0180446) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613746,-0.00403103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513583,0.00995967) , 
2, 0.23808, 1, 0, 0.565693,0.000282412) , 
4, 0.0289524, 1, 0, 0.560919,-0.00900521) , 
6, 0.0550843, 1, 0, 0.504253,-0.000575698)    );
  // itree = 690
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585401,0.000567434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555381,-0.0142695) , 
3, 32.9042, 1, 0, 0.578786,-0.00152359) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919109,0.00895444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131496) , 
0, 0.00288503, 1, 0, 0.54001,0.00244796) , 
3, 43.188, 1, 0, 0.562859,0.000107716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767092,-0.0130631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0382748,0.000224391) , 
0, 0.00192484, 1, 0, 0.201168,-0.00543866) , 
3, 100.774, 1, 0, 0.498374,-0.000881131)    );
  // itree = 691
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.218732,-0.0150413) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535331,-0.00332641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626162,0.0117438) , 
6, 0.0521868, 1, 0, 0.549742,-0.000205101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.075664,-0.0146014) , 
3, 138.579, 1, 0, 0.508762,-0.000821588) , 
4, 0.00580491, 1, 0, 0.492184,-0.00135057)    );
  // itree = 692
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.727714,-0.00469847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46455,0.00887667) , 
2, 0.0884138, 1, 0, 0.581047,0.00114619) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.132869,-0.00943049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.267065,0.00114859) , 
4, 0.0203795, 1, 0, 0.230156,-0.00199504) , 
2, 0.309514, 1, 0, 0.49304,0.000358338) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561755,0.0216949) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571798,-0.0177701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584114,-0.0158702) , 
6, 0.0593066, 1, 0, 0.576585,-0.0115656) , 
6, 0.056739, 1, 0, 0.572561,-0.00616982) , 
6, 0.0550822, 1, 0, 0.50122,-0.000313193)    );
  // itree = 693
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.36013,-0.0209973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6391,0.00698749) , 
5, 0.00856942, 1, 0, 0.472075,-0.00330684) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519688,0.0117491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369997,-0.00181553) , 
4, 0.0174128, 1, 0, 0.423134,0.000983576) , 
5, 0.0112374, 1, 0, 0.431328,0.000265253) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721165,-0.0186829) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843039,-0.0114957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938516,0.0272644) , 
7, 0.000855701, 1, 0, 0.862665,-0.00387583) , 
4, 0.0249908, 1, 0, 0.825473,-0.00754007) , 
7, 0.000552908, 1, 0, 0.504239,-0.00117861)    );
  // itree = 694
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8682,0.00585677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277763,-0.0213474) , 
5, 0.0128178, 1, 0, 0.5535,-0.00310118) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739926,0.00377363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.016029) , 
4, 0.0277599, 1, 0, 0.471813,0.000586958) , 
4, 0.0145127, 1, 0, 0.492441,-0.000344358) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.5782,0.014089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587725,-0.00778852) , 
4, 0.0289603, 1, 0, 0.58281,0.000745458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51284,-0.013111) , 
2, 0.262278, 1, 0, 0.555397,-0.00474375) , 
6, 0.055081, 1, 0, 0.498958,-0.000799799)    );
  // itree = 695
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819321,0.0311801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362541,0.00123116) , 
4, 0.00874571, 1, 0, 0.480467,0.00463053) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70783,-0.0114167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327732,0.00176478) , 
5, 0.0167548, 1, 0, 0.407274,-0.00126738) , 
5, 0.0115567, 1, 0, 0.420335,-0.000214885) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877341,-0.00841897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81603,-0.0302843) , 
2, 0.108843, 1, 0, 0.851629,-0.014015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712968,-0.00828547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848276,0.00878818) , 
1, 1.13018, 1, 0, 0.794944,-0.000334681) , 
2, 0.190467, 1, 0, 0.823185,-0.0071503) , 
7, 0.000534737, 1, 0, 0.49901,-0.00156934)    );
  // itree = 696
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704008,-0.014706) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886305,0.00339427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0711668,-0.0321049) , 
5, 0.0171689, 1, 0, 0.571339,-0.00160519) , 
5, 0.00732233, 1, 0, 0.583347,-0.00265641) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62439,0.0111007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494176,-0.00644885) , 
2, 0.0952352, 1, 0, 0.544417,-0.000335337) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877599,0.0193317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.12073,-0.00605034) , 
0, 0.00192484, 1, 0, 0.349483,0.00249992) , 
2, 0.285658, 1, 0, 0.474219,0.000685666) , 
4, 0.0173949, 1, 0, 0.510147,-0.000414628)    );
  // itree = 697
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.268812,-0.0281788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583625,-0.0023034) , 
4, 0.00581591, 1, 0, 0.566891,-0.00124179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.120084,0.0122762) , 
3, 125.967, 1, 0, 0.518468,-0.000632756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227456,-0.0107479) , 
2, 0.452271, 1, 0, 0.50145,-0.000916998)    );
  // itree = 698
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953131,-0.00547006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297701,0.00413576) , 
0, 0.000962256, 1, 0, 0.5301,-0.000190749) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.501058,-0.0210966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.139354,0.000362132) , 
2, 0.119004, 1, 0, 0.262879,-0.00487046) , 
3, 75.6915, 1, 0, 0.455695,-0.00149377) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900458,-0.00138684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967757,0.0412895) , 
0, 0.00164296, 1, 0, 0.919197,0.00468409) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.159681,-0.00988356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408105,0.00551787) , 
6, 0.0517731, 1, 0, 0.318181,-0.000126004) , 
0, 0.00191908, 1, 0, 0.587418,0.00202878) , 
6, 0.0434945, 1, 0, 0.500674,-0.000290938)    );
  // itree = 699
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951555,0.0103104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0034176,-0.012275) , 
0, 0.00162704, 1, 0, 0.638575,0.00177136) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.322908,-0.0135291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41358,0.00581294) , 
5, 0.0222291, 1, 0, 0.387045,-0.00082388) , 
4, 0.0203044, 1, 0, 0.497663,0.000317455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622105,-0.0188435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55948,-0.0084774) , 
3, 36.958, 1, 0, 0.589116,-0.0107285) , 
6, 0.0579806, 1, 0, 0.502619,-0.000281169)    );
  // itree = 700
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992606,-0.00176927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0883465) , 
7, 0.000749431, 1, 0, 0.993527,0.000967559) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571589,-0.0134218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804654,-0.00568162) , 
0, 0.000613564, 1, 0, 0.699262,-0.0213024) , 
0, 4.57784e-05, 1, 0, 0.934561,-0.00349497) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91726,0.0152489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00240165,-0.00294118) , 
0, 0.00159775, 1, 0, 0.337531,0.00369747) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0138666,-0.0215683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369866,0.00171594) , 
4, 0.017396, 1, 0, 0.296671,-0.000457645) , 
5, 0.017289, 1, 0, 0.306135,0.000504813) , 
0, 0.000962442, 1, 0, 0.501799,-0.00074054)    );
  // itree = 701
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6594,-0.0196255) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.478466,0.0177907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.228525,-0.0251605) , 
3, 62.9446, 1, 0, 0.377854,-0.00157913) , 
6, 0.0174222, 1, 0, 0.463128,-0.00455737) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889098,0.0259866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176463,-0.0122558) , 
5, 0.0182922, 1, 0, 0.705381,0.00502617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716536,-0.0118694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.399815,0.00101007) , 
4, 0.0206717, 1, 0, 0.437633,-0.000627999) , 
4, 0.0186599, 1, 0, 0.502365,0.000738971) , 
4, 0.0116233, 1, 0, 0.49613,-0.000102587)    );
  // itree = 702
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959975,-0.0350792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97986,0.00579316) , 
4, 0.00982163, 1, 0, 0.977882,-0.000197936) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751421,-0.0145269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893021,-0.00445714) , 
0, 0.00121713, 1, 0, 0.836493,-0.0114822) , 
0, 0.000274704, 1, 0, 0.912495,-0.00541648) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000538466,-0.00887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00169848,0.0170208) , 
2, 0.357069, 1, 0, 0.000877019,-0.000188617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65975,-0.000977275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866263,0.0304017) , 
7, 0.000759116, 1, 0, 0.747988,0.0062771) , 
7, 0.000535657, 1, 0, 0.110938,0.00076388) , 
0, 0.00192488, 1, 0, 0.492331,-0.00217683)    );
  // itree = 703
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.254002,-0.0220713) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601735,-0.00442713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301532,0.00840554) , 
3, 88.1772, 1, 0, 0.540323,-0.000659828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224962,-0.0158287) , 
2, 0.452367, 1, 0, 0.521236,-0.00113873) , 
5, 0.00577119, 1, 0, 0.508095,-0.00158766)    );
  // itree = 704
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.389165,-0.0269093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65096,-0.00379833) , 
4, 0.00587455, 1, 0, 0.636106,-0.00198695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441474,-0.0240774) , 
2, 0.193775, 1, 0, 0.623982,-0.0028965) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527381,0.0382593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.286801,0.0111301) , 
5, 0.0232966, 1, 0, 0.397543,0.00636716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.386346,-0.0150644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.285368,0.00152777) , 
2, 0.278381, 1, 0, 0.296241,-0.000431707) , 
2, 0.25504, 1, 0, 0.313298,0.000713084) , 
2, 0.214233, 1, 0, 0.498405,-0.00143752)    );
  // itree = 705
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972056,-0.0170964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989158,0.0311899) , 
5, 0.013295, 1, 0, 0.98557,0.00313032) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879212,0.0105123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468165,-0.0117714) , 
6, 0.0205661, 1, 0, 0.669832,-0.0101045) , 
0, 0.000228892, 1, 0, 0.930113,0.000805738) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884692,-0.00293333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723373,-0.0146059) , 
4, 0.0278922, 1, 0, 0.86057,-0.00524518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000683798,0.0080274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145571) , 
6, 0.0463931, 1, 0, 0.000530395,-0.000105217) , 
0, 0.00279749, 1, 0, 0.302515,-0.00191001) , 
0, 0.000962418, 1, 0, 0.493978,-0.00108151)    );
  // itree = 706
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601419,0.00142983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576498,-0.0156157) , 
3, 32.9469, 1, 0, 0.59605,-0.00126144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.319338,-0.0155481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.511609,0.0060034) , 
4, 0.00882437, 1, 0, 0.492454,0.000819669) , 
3, 43.2452, 1, 0, 0.546266,-0.00026134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0487133,-0.00771823) , 
3, 151.372, 1, 0, 0.504219,-0.000619028)    );
  // itree = 707
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227577,-0.0236727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.250322,0.022294) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701116,0.00699197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.471106,-0.00519458) , 
4, 0.0186479, 1, 0, 0.541267,-0.000700795) , 
4, 0.00871508, 1, 0, 0.517194,-0.000141609) , 
5, 0.00577168, 1, 0, 0.502666,-0.000690414)    );
  // itree = 708
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626347,0.0224645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00452199,-0.0108955) , 
2, 0.19047, 1, 0, 0.379462,0.00119696) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647284,-0.013479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646094,-0.00279084) , 
3, 4.80634, 1, 0, 0.646177,-0.0016505) , 
6, 0.0289967, 1, 0, 0.55094,-0.000633747) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0457686,-0.00143476) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519957,0.0122408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681265,0.0318914) , 
4, 0.0204474, 1, 0, 0.603015,0.0121831) , 
7, 0.000144606, 1, 0, 0.212819,0.00343286) , 
3, 100.922, 1, 0, 0.49307,6.22533e-05)    );
  // itree = 709
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.557975,-0.0204741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942977,0.00563863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.14961,-0.000944251) , 
0, 0.00192451, 1, 0, 0.581168,0.0012224) , 
3, 3.60475, 1, 0, 0.579663,0.000703031) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.25809,-0.00908737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308607,0.00325195) , 
4, 0.0115975, 1, 0, 0.300076,-0.000383714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355923,-0.0139808) , 
6, 0.055088, 1, 0, 0.306354,-0.00165966) , 
3, 75.6915, 1, 0, 0.501491,2.72545e-05)    );
  // itree = 710
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930153,-0.00273905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603025,-0.0103261) , 
0, 0.00219881, 1, 0, 0.912555,-0.00210264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719558,-0.00753446) , 
3, 100.389, 1, 0, 0.895491,-0.00307026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00133558,0.0181782) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.70151e-05,-0.00504442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134701) , 
6, 0.0347484, 1, 0, 5.6755e-05,-0.00018714) , 
4, 0.0203077, 1, 0, 0.000464114,8.64671e-05) , 
0, 0.00288677, 1, 0, 0.49822,-0.0016691)    );
  // itree = 711
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965841,0.0150306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131293) , 
0, 0.00287991, 1, 0, 0.708415,0.00282937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219036,-0.00860768) , 
3, 113.371, 1, 0, 0.656191,0.0019125) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.835266,-0.00705884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00133918,0.0154981) , 
0, 0.00288677, 1, 0, 0.393089,-0.00285298) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735767,0.0059986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000165325,-0.00847894) , 
0, 0.00288733, 1, 0, 0.217559,0.00151823) , 
3, 75.7162, 1, 0, 0.333952,-0.00138031) , 
2, 0.19047, 1, 0, 0.511173,0.000430625)    );
  // itree = 712
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577876,8.21338e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531751,-0.00969371) , 
3, 43.2464, 1, 0, 0.562418,-0.00136518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.345459,0.00552244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.161726,-0.0117598) , 
2, 0.38082, 1, 0, 0.309666,0.000687668) , 
3, 75.6854, 1, 0, 0.492566,-0.000797837) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652907,0.00788268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558566,0.035255) , 
3, 37.5301, 1, 0, 0.604994,0.00525301) , 
6, 0.05798, 1, 0, 0.49858,-0.000474154)    );
  // itree = 713
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978953,0.0137689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956068,-0.00691286) , 
6, 0.029177, 1, 0, 0.965457,0.000329977) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782696,-0.012007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898794,0.00078418) , 
4, 0.0188715, 1, 0, 0.86467,-0.00596379) , 
2, 0.142822, 1, 0, 0.926857,-0.00208046) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.555026,-0.00501997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000470784,0.00519872) , 
0, 0.00279674, 1, 0, 0.0359352,-0.000266177) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.400615,0.0191381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490404,-0.00313876) , 
6, 0.0583976, 1, 0, 0.427185,0.00321883) , 
6, 0.0521867, 1, 0, 0.112964,0.000419947) , 
0, 0.00192488, 1, 0, 0.49437,-0.000751795)    );
  // itree = 714
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817962,-0.00303416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488123,0.020444) , 
2, 0.428558, 1, 0, 0.80151,-0.000957545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0231319) , 
5, 0.0283182, 1, 0, 0.641664,-0.00206348) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.101918,0.00403503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675842,-0.00955947) , 
6, 0.0552103, 1, 0, 0.174659,-0.000411207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738775,0.0137484) , 
6, 0.0579822, 1, 0, 0.24479,0.000327337) , 
4, 0.0261274, 1, 0, 0.499478,-0.00120693)    );
  // itree = 715
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91362,-0.0107522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000937858,0.00822938) , 
0, 0.00192143, 1, 0, 0.389087,-0.0031977) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748091,0.0117702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0309241,-0.0131613) , 
5, 0.0230519, 1, 0, 0.466237,0.00166657) , 
6, 0.0347855, 1, 0, 0.420235,-0.00123388) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874782,-0.00062619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914495,0.0139133) , 
7, 0.000739896, 1, 0, 0.890044,0.00256811) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807164,-0.00331544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751918,-0.0286919) , 
3, 49.7001, 1, 0, 0.783443,-0.0141632) , 
2, 0.190467, 1, 0, 0.834701,-0.00611812) , 
7, 0.000534736, 1, 0, 0.498843,-0.00216024)    );
  // itree = 716
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917685,-0.00452108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898109,-0.0204777) , 
5, 0.0269223, 1, 0, 0.916148,-0.00443527) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491333,-0.00161916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864274,0.0276969) , 
4, 0.0282076, 1, 0, 0.685395,0.00666821) , 
0, 0.00206139, 1, 0, 0.89389,-0.00336424) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130947) , 
4, 0.0289923, 1, 0, 0,-0.000270897) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00210124,0.0653611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141567) , 
6, 0.0441895, 1, 0, 0.00101362,0.000494314) , 
6, 0.0289957, 1, 0, 0.00049577,0.000103374) , 
0, 0.00288677, 1, 0, 0.492608,-0.00180671)    );
  // itree = 717
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592527,-0.00691465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458492,0.00111594) , 
3, 37.8438, 1, 0, 0.517319,-0.000736046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171276,0.020422) , 
2, 0.428475, 1, 0, 0.486674,-0.000304367) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472405,-0.0256327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958493,0.0286931) , 
4, 0.0274963, 1, 0, 0.615726,-0.00750436) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.299356,0.0038765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73647,0.00966745) , 
6, 0.0588364, 1, 0, 0.49493,0.00238375) , 
4, 0.028879, 1, 0, 0.566179,-0.00344853) , 
6, 0.052182, 1, 0, 0.499213,-0.000800237)    );
  // itree = 718
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.446059,0.000607769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623712,-0.00658939) , 
6, 0.036737, 1, 0, 0.519948,-0.00109196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202689,0.0174935) , 
2, 0.428441, 1, 0, 0.491594,-0.000627644) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.856156,0.00768659) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448347,-0.0050592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343157,-0.030885) , 
1, 1.087, 1, 0, 0.39387,-0.0130836) , 
0, 0.000956548, 1, 0, 0.535286,-0.00807649) , 
6, 0.0550824, 1, 0, 0.496247,-0.001421)    );
  // itree = 719
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.268805,0.0110054) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926822,-0.00898386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00189662,0.015095) , 
0, 0.00244057, 1, 0, 0.669646,-0.00393692) , 
4, 0.00677383, 1, 0, 0.607694,-0.0027031) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0256623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000133053,-0.000363182) , 
5, 0.0333153, 1, 0, 7.47519e-05,-0.00186698) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888317,0.00925762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0748844,-0.0119425) , 
4, 0.0299561, 1, 0, 0.700536,0.00290628) , 
6, 0.040586, 1, 0, 0.415976,0.000967159) , 
4, 0.0202992, 1, 0, 0.498093,-0.000604883)    );
  // itree = 720
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.262244,0.0311036) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921095,-0.00425967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750971,-0.0073874) , 
3, 100.389, 1, 0, 0.90585,-0.00345065) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00128219,0.015142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135396) , 
5, 0.0276196, 1, 0, 0.00036431,-6.4703e-05) , 
0, 0.00288758, 1, 0, 0.50597,-0.00195535) , 
5, 0.00575579, 1, 0, 0.494643,-0.00160048)    );
  // itree = 721
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85571,0.0101649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809758,-0.0247258) , 
3, 24.981, 1, 0, 0.825808,-0.00372578) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667525,0.00295301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00027632,-0.0177004) , 
5, 0.0262607, 1, 0, 0.441893,0.000553233) , 
2, 0.0238088, 1, 0, 0.489497,2.26508e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656417,-0.0276569) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67881,-0.00764319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415038,0.00489746) , 
5, 0.028775, 1, 0, 0.532991,-0.00154752) , 
2, 0.0724182, 1, 0, 0.554011,-0.00376621) , 
6, 0.052187, 1, 0, 0.499815,-0.000583281)    );
  // itree = 722
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940943,0.006008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164852,-0.0108207) , 
0, 0.000707668, 1, 0, 0.42223,-0.00134985) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594604,-0.0263466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671787,0.00208716) , 
4, 0.0131792, 1, 0, 0.627457,-0.00869427) , 
4, 0.0110443, 1, 0, 0.500357,-0.00414577) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65354,-0.00358344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54248,0.0146366) , 
2, 0.102016, 1, 0, 0.600721,0.00125594) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.478105,-0.0078258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332054,-0.00183008) , 
4, 0.0211198, 1, 0, 0.361613,-0.00204446) , 
2, 0.214279, 1, 0, 0.492888,-0.000232483) , 
4, 0.0144951, 1, 0, 0.494699,-0.00118135)    );
  // itree = 723
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722735,0.0284765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738081,0.0177026) , 
6, 0.0145971, 1, 0, 0.735491,0.00569059) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70292,0.0344808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606526,-0.00106377) , 
2, 0.0181362, 1, 0, 0.618767,0.000315106) , 
4, 0.0145231, 1, 0, 0.655114,0.00198901) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953643,0.00332053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695074,-0.00853953) , 
0, 0.000274451, 1, 0, 0.800424,-0.00721044) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00268272,0.0500517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000193956,-0.00799603) , 
5, 0.0277968, 1, 0, 0.00106898,0.000440655) , 
0, 0.00288758, 1, 0, 0.319767,-0.00260979) , 
2, 0.19047, 1, 0, 0.501883,-0.000112338)    );
  // itree = 724
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915835,-0.00667861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931629,0.0139169) , 
7, 0.000319692, 1, 0, 0.921875,-0.000670562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989155,-0.00407526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702573,-0.0150227) , 
0, 9.15976e-05, 1, 0, 0.90514,-0.0109663) , 
5, 0.0228513, 1, 0, 0.917658,-0.0032652) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00171274,0.01978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000808674,-0.00582029) , 
6, 0.0116222, 1, 0, 0.00101467,-0.000136028) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792044,0.015143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676778,-0.00289998) , 
2, 0.285366, 1, 0, 0.751539,0.00404618) , 
7, 0.000534737, 1, 0, 0.116832,0.000509353) , 
0, 0.00192488, 1, 0, 0.497789,-0.00128622)    );
  // itree = 725
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973874,-0.0144387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930619,0.0363993) , 
0, 0.00036658, 1, 0, 0.954819,0.00519353) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0151525,-0.013108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000112697,-0.00546563) , 
4, 0.0174149, 1, 0, 0.00375709,-0.000952244) , 
0, 0.000962418, 1, 0, 0.170948,0.000128143) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80754,-0.00339919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874191,-0.0228701) , 
7, 0.000727707, 1, 0, 0.812634,-0.0031078) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708754,0.00306683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722151,0.027068) , 
2, 0.214069, 1, 0, 0.71521,0.00518212) , 
6, 0.0574265, 1, 0, 0.802507,-0.00224612) , 
7, 0.000151443, 1, 0, 0.495546,-0.00109214)    );
  // itree = 726
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547068,-0.0180815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.543565,0.000609437) , 
5, 0.0106684, 1, 0, 0.544053,-0.000573332) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.698865,0.000666263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605933,0.0264697) , 
2, 0.190467, 1, 0, 0.648887,0.00431712) , 
6, 0.052187, 1, 0, 0.560288,0.000183999) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719758,-0.00983833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000139977,-0.00680081) , 
0, 0.00288758, 1, 0, 0.204974,-0.00525103) , 
3, 100.914, 1, 0, 0.498817,-0.000756289)    );
  // itree = 727
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798108,-0.0189617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336724,0.00693777) , 
2, 0.0714068, 1, 0, 0.508438,-0.000718312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660261,-0.00949486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658533,-0.0238076) , 
3, 43.2472, 1, 0, 0.660065,-0.00719373) , 
6, 0.040591, 1, 0, 0.570179,-0.00335501) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921051,0.0013893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890013,0.0136426) , 
0, 0.000824244, 1, 0, 0.909358,0.00437401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0942004,-0.0187272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.079423,0.00953943) , 
2, 0.118963, 1, 0, 0.083031,-0.000364082) , 
0, 0.00192505, 1, 0, 0.410641,0.00151441) , 
3, 50.4612, 1, 0, 0.49874,-0.00117457)    );
  // itree = 728
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99578,0.0455348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972118,-0.00695448) , 
4, 0.0105747, 1, 0, 0.980997,0.00250204) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.399163,-0.048947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.496819,-0.00506545) , 
4, 0.0145425, 1, 0, 0.474808,-0.00885958) , 
0, 0.000961032, 1, 0, 0.739538,-0.0029176) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.727647,0.0147548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183237,-0.00369043) , 
5, 0.0188426, 1, 0, 0.437855,0.00425332) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692931,-0.00593963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300871,-0.000726754) , 
4, 0.0241558, 1, 0, 0.395368,-0.0011957) , 
4, 0.0202892, 1, 0, 0.410357,0.00072663) , 
2, 0.0714264, 1, 0, 0.500448,-0.000270731)    );
  // itree = 729
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99671,0.06394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977604,0.0112128) , 
4, 0.0091313, 1, 0, 0.981044,0.00461525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.174015,-0.00894476) , 
0, 0.00192206, 1, 0, 0.749208,0.002614) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.178168,-0.0020071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836645,-0.0100184) , 
7, 0.000323967, 1, 0, 0.374819,-0.00297373) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635673,0.0331433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369208,-0.0139416) , 
3, 75.5267, 1, 0, 0.559497,0.00365522) , 
6, 0.052184, 1, 0, 0.407384,-0.00180481) , 
2, 0.0714264, 1, 0, 0.500554,-0.000600396)    );
  // itree = 730
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260872,0.0066523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811738,-0.0153003) , 
7, 0.000160959, 1, 0, 0.519167,-0.00356552) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413577,-0.000394525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0488062,0.0108139) , 
3, 145.78, 1, 0, 0.353994,0.000466257) , 
3, 37.7955, 1, 0, 0.42208,-0.00119569) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.588016,-0.0104903) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.500953,-0.0102014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958894,0.0208704) , 
4, 0.0244459, 1, 0, 0.882557,0.0051864) , 
5, 0.0239332, 1, 0, 0.832729,0.00250863) , 
7, 0.000534736, 1, 0, 0.503073,-0.000465083)    );
  // itree = 731
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.251207,0.000382164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472104,0.0257798) , 
7, 2.57407e-05, 1, 0, 0.365407,0.00423511) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509034,-0.00148193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631547,0.00484064) , 
6, 0.0492904, 1, 0, 0.535943,6.26392e-05) , 
4, 0.00870667, 1, 0, 0.520233,0.00044702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.222065,-0.0120006) , 
2, 0.452367, 1, 0, 0.501841,2.81096e-05)    );
  // itree = 732
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243793,-0.0267077) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762882,-0.00489812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260547,-0.0206062) , 
6, 0.031785, 1, 0, 0.648151,-0.00410082) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625539,0.0170902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409677,-0.00435388) , 
2, 0.0952148, 1, 0, 0.463526,-0.000464962) , 
5, 0.0166876, 1, 0, 0.509529,-0.00137091) , 
5, 0.00575579, 1, 0, 0.496554,-0.00181346)    );
  // itree = 733
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846638,0.0252435) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4456,0.0188381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272377,-0.00570861) , 
3, 49.9572, 1, 0, 0.367603,0.000608653) , 
4, 0.00882222, 1, 0, 0.500329,0.00368923) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.555588,-0.0191517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555795,0.00166246) , 
3, 5.98855, 1, 0, 0.555777,-0.000131408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115126,-0.0135546) , 
3, 125.949, 1, 0, 0.506507,-0.000825283) , 
5, 0.0115001, 1, 0, 0.505611,-0.000170375)    );
  // itree = 734
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966722,0.00640669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94789,-0.0163157) , 
4, 0.022827, 1, 0, 0.960495,-0.0012611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735502,-0.0114919) , 
0, 0.000503466, 1, 0, 0.929647,-0.00297189) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80655,-0.00858694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948778,0.0180062) , 
5, 0.0151619, 1, 0, 0.917316,0.00651186) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784455,0.00323977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000463281,-0.0168152) , 
0, 0.0027519, 1, 0, 0.123132,-0.000389832) , 
0, 0.00187871, 1, 0, 0.305497,0.00119497) , 
0, 0.000962256, 1, 0, 0.50193,-0.000116425)    );
  // itree = 735
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944707,-0.000590296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870052,-0.0128466) , 
3, 49.1435, 1, 0, 0.916082,-0.00564929) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000121222,-0.00888644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00306151,0.113105) , 
3, 100.934, 1, 0, 0.000924915,0.000544433) , 
0, 0.00192488, 1, 0, 0.167785,-0.000584867) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.385802,-0.0159738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910017,0.0120872) , 
4, 0.0129439, 1, 0, 0.864183,0.00450663) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.271328,-0.0125388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948823,0.00270277) , 
7, 0.000852104, 1, 0, 0.548706,-0.00329973) , 
4, 0.0284946, 1, 0, 0.820262,0.00341982) , 
7, 0.000144607, 1, 0, 0.504358,0.00148091)    );
  // itree = 736
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0944854,0.0396878) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554907,0.00132771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.175095,-0.028451) , 
1, 4.53041, 1, 0, 0.529158,-0.00012559) , 
6, 0.00788173, 1, 0, 0.49185,0.000211348) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635792,-0.0206414) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589208,-0.0115765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.471939,-0.00516858) , 
2, 0.166097, 1, 0, 0.518593,-0.00303897) , 
5, 0.0289797, 1, 0, 0.562762,-0.00981029) , 
6, 0.0550824, 1, 0, 0.499257,-0.000835405)    );
  // itree = 737
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554463,-0.00238792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421692,-0.0123891) , 
3, 86.472, 1, 0, 0.540773,-0.00138739) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724515,0.0140644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0003438,-0.000528098) , 
0, 0.00288758, 1, 0, 0.146419,0.00381634) , 
3, 113.537, 1, 0, 0.48625,-0.000667927) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.534362,-0.0177457) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576534,0.0331322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57947,-0.010173) , 
6, 0.0589948, 1, 0, 0.578117,-0.00206144) , 
6, 0.0575803, 1, 0, 0.559474,-0.00722968) , 
6, 0.0550842, 1, 0, 0.493983,-0.00136091)    );
  // itree = 738
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576989,-0.00490688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582425,-0.0214415) , 
3, 12.3581, 1, 0, 0.578214,-0.00338035) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570031,0.00802581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459636,-0.00561513) , 
3, 67.1892, 1, 0, 0.538102,0.00113004) , 
3, 16.2205, 1, 0, 0.547177,0.000109579) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732222,-0.0137847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0265302,-0.00350628) , 
0, 0.00192343, 1, 0, 0.160896,-0.00687045) , 
3, 113.539, 1, 0, 0.496179,-0.000811947)    );
  // itree = 739
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821724,-0.0106822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503133,-0.0178149) , 
2, 0.136021, 1, 0, 0.779879,-0.00629159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142842,0.00393713) , 
2, 0.190433, 1, 0, 0.606063,-0.00405579) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811902,0.0166073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163914,-0.00413894) , 
5, 0.0214358, 1, 0, 0.357122,0.00120808) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64941,-0.00561912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520909,-0.01038) , 
2, 0.404385, 1, 0, 0.630138,-0.00372305) , 
6, 0.046384, 1, 0, 0.456131,-0.000580189) , 
5, 0.0172732, 1, 0, 0.502197,-0.00164807)    );
  // itree = 740
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941432,-0.0245623) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144852,-0.017959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510627,0.0198008) , 
5, 0.00932195, 1, 0, 0.257657,-0.00120568) , 
0, 0.000600792, 1, 0, 0.486433,-0.00542043) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93653,0.00583543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00573045,-0.00901748) , 
0, 0.0023199, 1, 0, 0.730967,0.00185012) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000410844,0.0252753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0290639) , 
6, 0.0405749, 1, 0, 0.000260548,-0.00108403) , 
5, 0.032322, 1, 0, 0.507144,0.000951359) , 
5, 0.0115123, 1, 0, 0.504253,6.19821e-05)    );
  // itree = 741
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.291195,-0.0109263) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530762,0.00555048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0958835,-0.0122284) , 
3, 126.142, 1, 0, 0.484208,0.000742928) , 
4, 0.00580854, 1, 0, 0.472746,0.000286858) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611173,-0.00719684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537674,0.0213586) , 
2, 0.308334, 1, 0, 0.596645,-0.00163031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447665,-0.0110844) , 
2, 0.404679, 1, 0, 0.573669,-0.00286804) , 
6, 0.046384, 1, 0, 0.500732,-0.000587986)    );
  // itree = 742
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905136,-0.00493855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947295,0.0153961) , 
5, 0.0201636, 1, 0, 0.918527,-0.000494748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891241,-0.00761704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892183,-0.0251845) , 
1, 1.16044, 1, 0, 0.891677,-0.0173313) , 
5, 0.0248655, 1, 0, 0.914676,-0.00290937) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64863,-0.00657328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921885,0.046085) , 
4, 0.0266481, 1, 0, 0.799382,0.00555222) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00035671,-0.00371616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0153145) , 
6, 0.0463875, 1, 0, 0.00027531,-0.000329409) , 
0, 0.00279672, 1, 0, 0.119693,0.000549538) , 
0, 0.00192505, 1, 0, 0.502593,-0.00111642)    );
  // itree = 743
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993653,0.0161306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916537,-0.0165083) , 
8, 0.25454, 1, 0, 0.981335,-0.000711165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722848,-0.012649) , 
0, 0.000228848, 1, 0, 0.939332,-0.00366449) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.399178,0.0119294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157771,-0.00522716) , 
2, 0.238054, 1, 0, 0.290926,0.000891491) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383701,-0.00774803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454601,-0.0166774) , 
6, 0.058671, 1, 0, 0.410704,-0.00816474) , 
6, 0.0550824, 1, 0, 0.303695,-7.39679e-05) , 
0, 0.000962026, 1, 0, 0.498135,-0.0011723)    );
  // itree = 744
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227048,0.0152948) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870584,0.0201757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321213,-0.0123482) , 
2, 0.095097, 1, 0, 0.627445,-0.0024301) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.563572,-0.00289472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381856,0.00896226) , 
2, 0.21422, 1, 0, 0.480197,0.000852665) , 
4, 0.0162985, 1, 0, 0.516348,4.67163e-05) , 
4, 0.00580491, 1, 0, 0.500066,0.000383877)    );
  // itree = 745
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926124,0.00614559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000837563,-0.0114808) , 
0, 0.00262602, 1, 0, 0.657033,0.00191007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0158151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000594107,0.0388173) , 
4, 0.0411427, 1, 0, 0.000355987,-0.00105465) , 
4, 0.0289929, 1, 0, 0.48964,0.00115433) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.612777,-0.00161693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587543,-0.0210844) , 
6, 0.0594991, 1, 0, 0.600626,-0.00873874) , 
6, 0.0579807, 1, 0, 0.495506,0.000631385)    );
  // itree = 746
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872022,0.000327211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422312,-0.00950732) , 
4, 0.0146037, 1, 0, 0.66725,-0.00202667) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.151487,-0.018685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602365,0.0060374) , 
4, 0.017377, 1, 0, 0.536146,0.000976925) , 
5, 0.017001, 1, 0, 0.577056,3.96854e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865147,0.00265921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735975,-0.014263) , 
0, 0.00123383, 1, 0, 0.811661,-0.0101705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000289046,-0.000606933) , 
0, 0.00288758, 1, 0, 0.301658,-0.00378553) , 
3, 75.496, 1, 0, 0.499091,-0.00104323)    );
  // itree = 747
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.264164,0.0125157) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710549,-0.00902501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4424,-0.0263339) , 
3, 50.1948, 1, 0, 0.592027,-0.010377) , 
4, 0.00663556, 1, 0, 0.455113,-0.00434038) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968102,-0.0134848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477101,0.0159018) , 
0, 0.000961032, 1, 0, 0.648919,0.00126105) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.42997,0.0156907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.365932,-0.00565741) , 
3, 12.5893, 1, 0, 0.374789,-0.00159407) , 
2, 0.190418, 1, 0, 0.518049,-0.000101985) , 
4, 0.0116082, 1, 0, 0.507589,-0.000806412)    );
  // itree = 748
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.411358,-0.00468387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0658472,0.0137267) , 
3, 126.142, 1, 0, 0.365498,-0.000708281) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908584,0.0152823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570599,-0.0167745) , 
4, 0.0265394, 1, 0, 0.863014,0.00312095) , 
7, 0.00039898, 1, 0, 0.488162,0.000235822) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951361,0.019219) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.456854,-0.00746014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.360544,-0.0162713) , 
1, 1.08671, 1, 0, 0.407509,-0.0081205) , 
0, 0.000954405, 1, 0, 0.565429,-0.00415206) , 
6, 0.0550843, 1, 0, 0.496274,-0.000224879)    );
  // itree = 749
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704214,0.00168041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540783,-0.0132668) , 
2, 0.100464, 1, 0, 0.660442,-0.00144555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472753,0.0428263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337984,0.000639356) , 
2, 0.193874, 1, 0, 0.361678,0.00181078) , 
2, 0.150736, 1, 0, 0.512308,0.000169022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248724,-0.0161316) , 
2, 0.452215, 1, 0, 0.497644,-0.000339081)    );
  // itree = 750
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695123,0.00425392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817855,0.0933853) , 
4, 0.0131067, 1, 0, 0.718599,0.00381839) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0197622) , 
6, 0.0138246, 1, 0, 0,-0.00142938) , 
4, 0.014492, 1, 0, 0.33417,0.00101099) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527412,-0.00823885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617587,-0.00244502) , 
1, 1.18074, 1, 0, 0.596045,-0.00184166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488027,-0.0313248) , 
1, 1.99591, 1, 0, 0.591315,-0.00256997) , 
6, 0.0290075, 1, 0, 0.49738,-0.00126183)    );
  // itree = 751
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.827565,-0.0199138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793978,0.00798819) , 
2, 0.00680106, 1, 0, 0.798647,0.000340355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407517,0.0305026) , 
3, 99.7668, 1, 0, 0.754062,0.00140861) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.315465,-0.00263037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169016,-0.0109006) , 
3, 50.2701, 1, 0, 0.24023,-0.00495391) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.216245,0.0128814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630913,-0.00550404) , 
6, 0.0376924, 1, 0, 0.443778,-0.000589896) , 
4, 0.0144951, 1, 0, 0.409431,-0.00132629) , 
2, 0.0714264, 1, 0, 0.503156,-0.00058251)    );
  // itree = 752
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676477,-0.026762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.18672,-0.0184185) , 
6, 0.0144084, 1, 0, 0.341732,-0.0114699) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593713,-0.00730347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513051,0.00408035) , 
3, 39.5763, 1, 0, 0.553262,-0.000602572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0832921,-0.0127377) , 
3, 138.543, 1, 0, 0.51256,-0.00120187) , 
4, 0.00870102, 1, 0, 0.496554,-0.00216391)    );
  // itree = 753
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233938,0.0170726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574239,-1.10824e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.084819,-0.0101278) , 
3, 138.756, 1, 0, 0.532866,-0.000450852) , 
4, 0.00582008, 1, 0, 0.515557,-0.000149789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211751,-0.010296) , 
2, 0.452279, 1, 0, 0.497175,-0.000517171)    );
  // itree = 754
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862937,0.0305963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701333,-0.0012062) , 
4, 0.0145458, 1, 0, 0.755145,0.00134429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884619,-0.00545545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132909,0.00794988) , 
0, 0.00192451, 1, 0, 0.426926,-0.00124046) , 
2, 0.142853, 1, 0, 0.584894,3.55188e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575321,-0.0265606) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.268458,0.015962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.270311,-0.00854002) , 
5, 0.0165427, 1, 0, 0.269956,-0.00072208) , 
2, 0.0475914, 1, 0, 0.315501,-0.0028693) , 
3, 75.5888, 1, 0, 0.510756,-0.000787065)    );
  // itree = 755
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814108,-0.0229606) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934129,-0.00313927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807289,-0.0096614) , 
3, 100.206, 1, 0, 0.923645,-0.0027343) , 
6, 0.0145263, 1, 0, 0.91786,-0.00385806) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00296885,-0.00626798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000200474,0.00133472) , 
0, 0.00802523, 1, 0, 0.000817794,-0.000358874) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687331,0.000854314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809223,0.0285429) , 
4, 0.0273995, 1, 0, 0.744215,0.00608275) , 
7, 0.000534736, 1, 0, 0.115781,0.000637294) , 
0, 0.00192488, 1, 0, 0.49849,-0.00150765)    );
  // itree = 756
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910986,-0.0192586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.243874,0.00103529) , 
0, 0.000608843, 1, 0, 0.484758,-0.005702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760076,0.00836753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106302,-0.0107935) , 
5, 0.0248708, 1, 0, 0.482888,0.00119699) , 
5, 0.0105897, 1, 0, 0.483148,0.000238114) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554846,0.00725946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613006,-0.0131363) , 
6, 0.0567393, 1, 0, 0.581041,-0.00154136) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.434467,-0.0180083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486391,-0.00860048) , 
6, 0.0562958, 1, 0, 0.461059,-0.00886557) , 
2, 0.285557, 1, 0, 0.536588,-0.00425496) , 
6, 0.052182, 1, 0, 0.492004,-0.000506491)    );
  // itree = 757
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861515,-0.0233044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396378,-0.0244373) , 
2, 0.14267, 1, 0, 0.674542,-0.013642) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955989,0.0170168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205041,-0.000892306) , 
0, 0.00192143, 1, 0, 0.460187,0.00206708) , 
5, 0.021857, 1, 0, 0.568905,-0.00590039) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559274,0.00273207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669668,-0.0146328) , 
6, 0.0579821, 1, 0, 0.565506,0.000255385) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818407,0.0226819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000125724,-0.00831059) , 
0, 0.00288321, 1, 0, 0.231937,0.00535053) , 
3, 96.4682, 1, 0, 0.490245,0.00140496) , 
3, 12.5832, 1, 0, 0.502421,0.000274126)    );
  // itree = 758
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474407,-0.0107428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793576,0.00973675) , 
6, 0.0116294, 1, 0, 0.760733,0.00113954) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753932,-0.0220718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391463,-0.00720108) , 
5, 0.0232511, 1, 0, 0.599462,-0.00684206) , 
2, 0.0680106, 1, 0, 0.709259,-0.00140803) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874222,8.83162e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727783,0.0167221) , 
0, 0.00146477, 1, 0, 0.808691,0.00487278) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000311457,0.00556898) , 
6, 0.0376926, 1, 0, 0.00010555,-0.000132628) , 
0, 0.00385011, 1, 0, 0.373279,0.00217744) , 
2, 0.119044, 1, 0, 0.504449,0.000777633)    );
  // itree = 759
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666724,-0.00489497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.505026,-0.0330957) , 
7, 0.000445917, 1, 0, 0.654618,-0.00460014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747771,0.0364488) , 
5, 0.0219151, 1, 0, 0.662472,-0.00358705) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0557155,-0.00976204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130978) , 
0, 0.0115503, 1, 0, 0.0141434,-0.000799554) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926673,-0.0126037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876882,0.0100463) , 
5, 0.0243115, 1, 0, 0.885159,0.00334092) , 
7, 0.000534737, 1, 0, 0.324783,0.000677105) , 
5, 0.0230124, 1, 0, 0.494586,-0.00146708)    );
  // itree = 760
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.232779,0.0180022) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.489565,-0.01794) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61555,0.00198168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298517,-0.0061092) , 
2, 0.285621, 1, 0, 0.518933,-0.000467137) , 
4, 0.00843593, 1, 0, 0.517824,-0.000743307) , 
4, 0.00580638, 1, 0, 0.502673,-0.000396164)    );
  // itree = 761
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823134,-0.011531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.47827,0.0100759) , 
2, 0.0714068, 1, 0, 0.581828,0.00146434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.580507,-0.019089) , 
3, 34.1951, 1, 0, 0.581716,0.000667954) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.332595,0.012966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0941144,-0.00872259) , 
4, 0.0087021, 1, 0, 0.131208,0.000299128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811907,-0.0114246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700368,0.00304752) , 
4, 0.025787, 1, 0, 0.783413,-0.00537174) , 
7, 0.000155749, 1, 0, 0.431917,-0.00231551) , 
3, 37.7947, 1, 0, 0.496176,-0.0010357)    );
  // itree = 762
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818811,-0.029072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813078,-0.018428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769253,0.0600128) , 
2, 0.0164679, 1, 0, 0.798287,-0.00331575) , 
2, 0.00453404, 1, 0, 0.802887,-0.00782905) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.130027,-0.00273361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86209,0.0160753) , 
7, 0.000158153, 1, 0, 0.391976,0.00220704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576213,-0.00157212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598656,-0.0188179) , 
1, 1.35025, 1, 0, 0.579892,-0.00258945) , 
6, 0.0434893, 1, 0, 0.458991,0.000496507) , 
2, 0.0238042, 1, 0, 0.498211,-0.00045299)    );
  // itree = 763
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946994,-0.0098915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421594,0.00370809) , 
0, 0.000962026, 1, 0, 0.626284,-0.000464127) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.856208,-0.00856359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000105624,-0.00681021) , 
0, 0.00288514, 1, 0, 0.390617,-0.00397313) , 
3, 62.9908, 1, 0, 0.545077,-0.00167328) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.134141,0.00096889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503663,0.0361453) , 
6, 0.0492296, 1, 0, 0.233399,0.00247498) , 
2, 0.404671, 1, 0, 0.505399,-0.0011452)    );
  // itree = 764
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710188,0.00154618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000338698,-0.021081) , 
5, 0.0263417, 1, 0, 0.49475,-1.72471e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545502,-0.0117189) , 
6, 0.0524597, 1, 0, 0.497434,-0.000277993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613701,0.0178535) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568813,-0.0342414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484261,-0.00597655) , 
2, 0.318776, 1, 0, 0.532797,-0.0172005) , 
2, 0.119034, 1, 0, 0.55455,-0.0112176) , 
6, 0.0550824, 1, 0, 0.503587,-0.00145632)    );
  // itree = 765
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.229369,0.0112419) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916606,-0.0110523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891428,0.00055914) , 
4, 0.0194412, 1, 0, 0.902817,-0.00289372) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0024866,0.0426507) , 
2, 0.380607, 1, 0, 0.000603561,0.000247542) , 
0, 0.00288758, 1, 0, 0.517731,-0.00155296) , 
4, 0.00580638, 1, 0, 0.501633,-0.00119887)    );
  // itree = 766
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230707,-0.0245818) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791519,0.0103563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527822,-0.00195784) , 
4, 0.0202667, 1, 0, 0.670631,0.00102235) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815044,-0.00927992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000570267,0.00218252) , 
0, 0.00288503, 1, 0, 0.347943,-0.00421492) , 
2, 0.166616, 1, 0, 0.509797,-0.00158801) , 
5, 0.00579096, 1, 0, 0.496187,-0.00214011)    );
  // itree = 767
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977418,-0.000432417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933458,0.0271749) , 
0, 0.00018329, 1, 0, 0.956534,0.00632179) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0283617,-0.0218777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00315109,0.010259) , 
2, 0.142848, 1, 0, 0.0105118,-0.000734915) , 
0, 0.000962418, 1, 0, 0.178712,0.000519749) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924788,-0.0109479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691301,0.00554577) , 
0, 0.0011056, 1, 0, 0.805327,-0.00132828) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898666,-0.0261219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792762,-0.00416703) , 
6, 0.0459245, 1, 0, 0.814142,-0.0063811) , 
7, 0.000449279, 1, 0, 0.809852,-0.00392211) , 
7, 0.000155749, 1, 0, 0.501691,-0.00175333)    );
  // itree = 768
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57985,0.00141615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564802,-0.00888035) , 
3, 25.0987, 1, 0, 0.571535,-0.0015338) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513601,0.0200336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42157,-0.00475471) , 
3, 83.0092, 1, 0, 0.461205,0.000941807) , 
3, 65.8904, 1, 0, 0.54393,-0.000914388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119689,0.00901945) , 
3, 125.869, 1, 0, 0.49712,-0.000456595)    );
  // itree = 769
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678111,-0.0143518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657824,0.00632752) , 
3, 35.9301, 1, 0, 0.669694,-0.00242865) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.541503,-0.0233172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221775,-0.00242878) , 
3, 111.4, 1, 0, 0.394919,-0.00976107) , 
3, 75.4602, 1, 0, 0.600462,-0.00427611) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578358,-0.0123808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250795,0.0154982) , 
3, 87.0934, 1, 0, 0.509983,-0.0021391) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878944,0.0114358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140374,-0.00334339) , 
0, 0.00192484, 1, 0, 0.361114,0.00117632) , 
2, 0.142722, 1, 0, 0.412077,4.1326e-05) , 
4, 0.0202992, 1, 0, 0.493082,-0.00181514)    );
  // itree = 770
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518493,-0.00662311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680066,-0.0228058) , 
6, 0.0377474, 1, 0, 0.592567,-0.00426745) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942389,0.00750307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138806,0.000687541) , 
0, 0.00192405, 1, 0, 0.561897,0.00170828) , 
3, 4.80523, 1, 0, 0.563993,0.00129992) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770151,-0.0116599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0411586,-0.00383192) , 
0, 0.00192488, 1, 0, 0.203362,-0.00492211) , 
3, 100.914, 1, 0, 0.500834,0.000210232)    );
  // itree = 771
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243681,-0.0240166) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.51562,-0.00912545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426188,0.001899) , 
3, 12.6167, 1, 0, 0.439838,-0.000148087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862632,0.0051738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781428,-0.0103693) , 
3, 37.527, 1, 0, 0.819243,-0.00387329) , 
7, 0.000535425, 1, 0, 0.518709,-0.000922488) , 
4, 0.00580854, 1, 0, 0.503615,-0.00143037)    );
  // itree = 772
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654807,0.000378184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840267,0.0419608) , 
4, 0.0132294, 1, 0, 0.734172,0.00408042) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.021448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130949) , 
4, 0.0359989, 1, 0, 0,-0.00315843) , 
4, 0.0173784, 1, 0, 0.401754,0.000802816) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576143,-0.0356536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606051,-0.00414684) , 
1, 1.61803, 1, 0, 0.595638,-0.0126543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62921,-0.000205816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53821,-0.0110643) , 
6, 0.0528334, 1, 0, 0.596568,-0.00230126) , 
6, 0.0397586, 1, 0, 0.596394,-0.00423673) , 
6, 0.034788, 1, 0, 0.504819,-0.0018657)    );
  // itree = 773
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977875,-0.000930611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760429,-0.027822) , 
0, 0.000263691, 1, 0, 0.867315,-0.0154288) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925213,-0.00577224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964321,0.0236361) , 
1, 2.07008, 1, 0, 0.932949,-0.00109378) , 
5, 0.00990456, 1, 0, 0.925667,-0.0026843) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723551,0.0199198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561167,-0.000395966) , 
2, 0.214024, 1, 0, 0.640965,0.00568583) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134223) , 
2, 0.380894, 1, 0, 0,-0.000259783) , 
0, 0.00366754, 1, 0, 0.115746,0.000813884) , 
0, 0.00192505, 1, 0, 0.501087,-0.000850467)    );
  // itree = 774
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619431,-0.000884195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350818,-0.0150509) , 
2, 0.344642, 1, 0, 0.604537,-0.000739392) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.258109,0.0180838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.23583,-0.00215226) , 
3, 47.9043, 1, 0, 0.248527,0.00257308) , 
2, 0.380941, 1, 0, 0.552444,-0.000254691) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77252,-0.010434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0405594,0.00261627) , 
0, 0.00192505, 1, 0, 0.214492,-0.00430507) , 
3, 100.774, 1, 0, 0.495794,-0.00093364)    );
  // itree = 775
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.234776,0.0105208) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955155,-0.00165973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0240518,-0.0228946) , 
0, 0.00165491, 1, 0, 0.671308,-0.00309744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.013786,-0.0182323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707508,0.00546839) , 
6, 0.0434893, 1, 0, 0.381839,0.000549028) , 
4, 0.0215481, 1, 0, 0.508837,-0.00105077) , 
4, 0.00581861, 1, 0, 0.493389,-0.000731258)    );
  // itree = 776
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710904,-0.00398281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756434,-0.0168191) , 
4, 0.0211444, 1, 0, 0.721761,-0.00321847) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764208,0.0323006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190698,-0.00202195) , 
4, 0.0277671, 1, 0, 0.270754,0.00110131) , 
4, 0.0261106, 1, 0, 0.580637,-0.00186678) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785956,-0.00101368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667607,0.0106161) , 
0, 0.00146477, 1, 0, 0.723713,0.00431831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131116) , 
0, 0.00385011, 1, 0, 0.275114,0.0014593) , 
2, 0.28565, 1, 0, 0.490067,-0.000880784)    );
  // itree = 777
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671399,0.0169084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17983,0.0090306) , 
6, 0.0145896, 1, 0, 0.348291,0.00475595) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923591,-0.00442093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747063,-0.011309) , 
2, 0.357043, 1, 0, 0.902094,-0.00389927) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0005407,0.0142769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135659) , 
6, 0.0434944, 1, 0, 0.00039556,5.45029e-05) , 
0, 0.00288733, 1, 0, 0.514457,-0.00219956) , 
4, 0.00870211, 1, 0, 0.498709,-0.00154034)    );
  // itree = 778
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903852,0.0312953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.733262,-0.00400569) , 
5, 0.00902904, 1, 0, 0.770219,0.00117858) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844596,-0.00990169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000667268,0.00706411) , 
0, 0.00191174, 1, 0, 0.240152,-0.00287526) , 
2, 0.0714125, 1, 0, 0.413847,-0.00154688) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672949,0.00243852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676102,0.0183357) , 
3, 26.3936, 1, 0, 0.674302,0.00330517) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.459195,-0.0132786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508368,0.00368862) , 
1, 1.15607, 1, 0, 0.496223,-0.000897622) , 
3, 50.3888, 1, 0, 0.594639,0.00142506) , 
6, 0.0376919, 1, 0, 0.498193,-0.000160356)    );
  // itree = 779
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.265428,0.0124958) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.5871,-0.01358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123595,0.00701283) , 
4, 0.00845359, 1, 0, 0.155503,-0.000146894) , 
4, 0.00583101, 1, 0, 0.166777,0.000363312) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88139,-0.000153312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871884,-0.0114991) , 
7, 0.000703199, 1, 0, 0.88005,-0.001361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652326,0.00513218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714793,-0.0104656) , 
6, 0.0354566, 1, 0, 0.706974,-0.0068996) , 
2, 0.166636, 1, 0, 0.80157,-0.00387246) , 
7, 0.000145068, 1, 0, 0.49745,-0.00184317)    );
  // itree = 780
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.290083,-0.0288925) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.797833,0.0108777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659541,-0.0140148) , 
3, 37.768, 1, 0, 0.724558,-0.00225512) , 
6, 0.0115961, 1, 0, 0.685368,-0.00358644) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.855546,0.0115526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919746,-0.00454178) , 
5, 0.0255009, 1, 0, 0.868052,0.00580754) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.132237,-0.00952804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0532881,0.0173348) , 
3, 75.6885, 1, 0, 0.102662,-0.000329072) , 
0, 0.00192488, 1, 0, 0.359336,0.00172884) , 
2, 0.142805, 1, 0, 0.507385,-0.000684802)    );
  // itree = 781
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987467,0.00801608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900631,-0.0115031) , 
2, 0.0952352, 1, 0, 0.947867,-0.00249466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803316,-0.012708) , 
3, 99.8791, 1, 0, 0.935967,-0.00353675) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.308621,0.00613161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0790916,-0.010556) , 
2, 0.28564, 1, 0, 0.226221,-7.92718e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723902,0.00119752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919991,0.0383345) , 
7, 0.000798895, 1, 0, 0.774209,0.00431521) , 
7, 0.000543648, 1, 0, 0.307362,0.000571422) , 
0, 0.000962526, 1, 0, 0.505072,-0.000720684)    );
  // itree = 782
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658427,0.00401649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620733,-0.017747) , 
3, 7.79791, 1, 0, 0.643972,-0.00364859) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.254576,-0.0134275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558201,0.00678832) , 
4, 0.00583248, 1, 0, 0.540289,0.00139797) , 
3, 12.5987, 1, 0, 0.556704,0.00059901) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.278193,-0.0161452) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.370985,0.0175501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124104,-0.0114736) , 
5, 0.0273196, 1, 0, 0.237284,0.00139866) , 
3, 37.6035, 1, 0, 0.252265,-0.00320363) , 
2, 0.357056, 1, 0, 0.498318,-0.000130272)    );
  // itree = 783
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569377,0.00332428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53924,-0.011071) , 
3, 42.051, 1, 0, 0.561315,-0.0003692) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946791,0.0433374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507104,0.00377051) , 
0, 0.000953294, 1, 0, 0.656499,0.00409405) , 
6, 0.0521838, 1, 0, 0.576275,0.000332272) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.475777,-0.0195508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0399835,0.00674381) , 
2, 0.0476359, 1, 0, 0.109343,-7.61866e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927126,0.00207842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584469,-0.0135115) , 
0, 0.000517223, 1, 0, 0.715331,-0.00815276) , 
7, 0.00017957, 1, 0, 0.34935,-0.00327498) , 
3, 63.0764, 1, 0, 0.494452,-0.000968396)    );
  // itree = 784
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951609,-0.00709534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932544,0.0116197) , 
2, 0.126953, 1, 0, 0.948749,-0.00173095) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85087,0.00335918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788681,-0.00968607) , 
3, 25.0324, 1, 0, 0.807329,-0.00668193) , 
2, 0.166629, 1, 0, 0.8962,-0.00357065) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131572) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000854348,0.0275316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000170278,-0.00678354) , 
5, 0.0287167, 1, 0, 0.000426248,7.95995e-05) , 
4, 0.0174016, 1, 0, 0.000310654,-6.90967e-05) , 
0, 0.00288758, 1, 0, 0.499198,-0.00201898)    );
  // itree = 785
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666214,-0.0202753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44549,-0.000168742) , 
4, 0.0146016, 1, 0, 0.518082,-0.00294508) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834703,-0.0171468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.378965,0.00622121) , 
2, 0.0238088, 1, 0, 0.441711,0.000979947) , 
3, 12.5812, 1, 0, 0.45373,0.000362244) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.55631,-0.0311147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636735,-0.00403848) , 
1, 1.30291, 1, 0, 0.618944,-0.00551138) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538716,-0.00381327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643355,0.0177013) , 
1, 1.19201, 1, 0, 0.569915,0.000472281) , 
6, 0.0492858, 1, 0, 0.587252,-0.00164363) , 
6, 0.0434887, 1, 0, 0.498693,-0.000313225)    );
  // itree = 786
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.5899,0.0169347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589799,-0.00118985) , 
3, 7.99062, 1, 0, 0.589834,0.00113418) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906631,-0.0116672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000567199,0.00732919) , 
0, 0.00288664, 1, 0, 0.551274,-0.00432216) , 
3, 23.973, 1, 0, 0.564662,-0.00242779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764746,0.00824246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000431025,0.0030853) , 
0, 0.00288514, 1, 0, 0.220916,0.00333346) , 
3, 100.695, 1, 0, 0.506671,-0.00145586)    );
  // itree = 787
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785695,-0.004559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977356,0.0176546) , 
6, 0.039739, 1, 0, 0.830406,-0.000550323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.016061,-0.0188714) , 
5, 0.0232552, 1, 0, 0.627815,-0.00211184) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000164783,-0.0148896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80288,0.0154922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000108126,-0.0187549) , 
5, 0.032408, 1, 0, 0.440656,0.00221555) , 
5, 0.0230624, 1, 0, 0.34003,0.000821571) , 
4, 0.0231914, 1, 0, 0.496794,-0.000776335)    );
  // itree = 788
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718998,0.0112817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264416,-0.00224727) , 
2, 0.142825, 1, 0, 0.486743,0.000634869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769153,-0.00906725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00197999,0.00428301) , 
0, 0.00192505, 1, 0, 0.150444,-0.00285075) , 
3, 100.922, 1, 0, 0.423259,-2.31184e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790044,-0.0302639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92067,0.00112238) , 
1, 1.17233, 1, 0, 0.861761,-0.0141351) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829913,-0.00664736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815636,0.0134158) , 
3, 50.3232, 1, 0, 0.824311,3.02118e-05) , 
2, 0.11897, 1, 0, 0.836019,-0.00439806) , 
7, 0.000534736, 1, 0, 0.503536,-0.000873994)    );
  // itree = 789
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89913,0.0823068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853809,-0.000776305) , 
3, 17.8436, 1, 0, 0.875917,0.0019269) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782244,-0.00218509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70091,-0.0352871) , 
6, 0.0290928, 1, 0, 0.744548,-0.00935893) , 
3, 37.4631, 1, 0, 0.807696,-0.00393397) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951466,0.0281556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165548,0.00276451) , 
0, 0.00192292, 1, 0, 0.56322,0.00437316) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.516863,-0.00132121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209631,0.0109762) , 
3, 96.591, 1, 0, 0.44695,0.000549952) , 
3, 12.5987, 1, 0, 0.464077,0.00111315) , 
2, 0.0238088, 1, 0, 0.50243,0.000549818)    );
  // itree = 790
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631896,0.0134813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24958,0.0173686) , 
6, 0.0144239, 1, 0, 0.407197,0.00589916) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.384026,-0.00344692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660347,0.01122) , 
6, 0.0351881, 1, 0, 0.460905,0.000473585) , 
4, 0.0086917, 1, 0, 0.454968,0.00107334) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.446095,0.0188053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863923,0.0255288) , 
7, 0.000567641, 1, 0, 0.664081,0.00458924) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763174,-0.0116402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.269897,0.00544396) , 
5, 0.0288085, 1, 0, 0.563852,-0.00462638) , 
2, 0.0713828, 1, 0, 0.58261,-0.00290167) , 
6, 0.043485, 1, 0, 0.499684,-0.000319217)    );
  // itree = 791
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652656,0.016397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16696,0.0246301) , 
6, 0.0144621, 1, 0, 0.325083,0.00546996) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.213936,-0.0382901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74159,-0.000892665) , 
5, 0.00986615, 1, 0, 0.397436,-0.00641468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.463711,0.000534046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664577,-0.00664551) , 
6, 0.043485, 1, 0, 0.539326,-0.00111665) , 
5, 0.0115086, 1, 0, 0.523548,-0.00170577) , 
4, 0.00870468, 1, 0, 0.504263,-0.0010085)    );
  // itree = 792
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928923,0.0359792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753267,0.011656) , 
5, 0.00989917, 1, 0, 0.793512,0.00282806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.563585,-0.0153053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.273657,0.000971965) , 
2, 0.176819, 1, 0, 0.393532,-0.00213587) , 
2, 0.0476045, 1, 0, 0.484649,-0.00100507) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703834,0.0901376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550243,0.0154191) , 
2, 0.0954737, 1, 0, 0.586169,0.00620612) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700833,0.016592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390085,-0.0108292) , 
3, 62.8871, 1, 0, 0.578922,0.000123391) , 
6, 0.0559108, 1, 0, 0.583231,0.00374) , 
6, 0.0492859, 1, 0, 0.505839,1.48641e-05)    );
  // itree = 793
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621792,-0.0300442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56629,0.000457338) , 
4, 0.0145485, 1, 0, 0.579368,-0.00184308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.574284,-0.0396084) , 
3, 34.1898, 1, 0, 0.578951,-0.00324569) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923362,0.00059436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843805,0.0117743) , 
0, 0.00122753, 1, 0, 0.893309,0.004008) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000331688,0.00202125) , 
6, 0.0377132, 1, 0, 0.000117855,-0.000161549) , 
0, 0.00288758, 1, 0, 0.439446,0.0018893) , 
3, 37.7906, 1, 0, 0.499818,-0.000332908)    );
  // itree = 794
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.808717,-0.0374062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779515,0.00116074) , 
4, 0.0087929, 1, 0, 0.783801,-0.00206175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39159,-0.0210725) , 
3, 100.697, 1, 0, 0.739631,-0.00357528) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.728723,0.0178532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173385,-0.00736802) , 
5, 0.0191266, 1, 0, 0.444811,0.0039111) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473845,0.00990893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.35228,-0.00614535) , 
3, 25.1979, 1, 0, 0.386054,-0.00077612) , 
4, 0.0203025, 1, 0, 0.406777,0.000877035) , 
2, 0.0714125, 1, 0, 0.497842,-0.000341065)    );
  // itree = 795
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964026,0.0109106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714574,0.0160872) , 
0, 0.000442088, 1, 0, 0.846222,0.0078238) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0752776,-0.00643469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65103,0.0432295) , 
4, 0.0104897, 1, 0, 0.217337,0.000460334) , 
5, 0.0102078, 1, 0, 0.448561,0.00316768) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918048,-0.0052315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82393,-0.0131218) , 
3, 87.3964, 1, 0, 0.906011,-0.00445547) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00140703,0.0323986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.49005e-05,-0.0101033) , 
5, 0.0287065, 1, 0, 0.000566869,0.000162678) , 
0, 0.00288733, 1, 0, 0.5091,-0.00243106) , 
4, 0.0115945, 1, 0, 0.499139,-0.00150986)    );
  // itree = 796
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303088,0.020292) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805279,-0.0187745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408749,0.00272924) , 
2, 0.0238415, 1, 0, 0.461486,-8.02652e-05) , 
4, 0.00581311, 1, 0, 0.451768,0.000536037) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603776,-0.0237268) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595093,-0.00275585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570418,-0.015972) , 
6, 0.055635, 1, 0, 0.587122,-0.00378211) , 
6, 0.0451464, 1, 0, 0.589084,-0.00559265) , 
6, 0.0434893, 1, 0, 0.498132,-0.00153325)    );
  // itree = 797
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973758,0.00825089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757541,-0.0352801) , 
0, 0.000265448, 1, 0, 0.863206,-0.0209335) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93818,-0.00351921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823198,-0.0112315) , 
3, 99.2456, 1, 0, 0.928448,-0.00306508) , 
5, 0.00988701, 1, 0, 0.921082,-0.00508264) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.160423,-0.0125361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65035,0.0116349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131133) , 
0, 0.00366754, 1, 0, 0.108754,0.00108522) , 
2, 0.0952167, 1, 0, 0.11899,0.000393166) , 
0, 0.00192505, 1, 0, 0.504434,-0.00223823)    );
  // itree = 798
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909112,-0.0042944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812696,-0.0217538) , 
5, 0.026456, 1, 0, 0.902926,-0.00440133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769743,-0.00769568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908074,0.0454136) , 
0, 0.00204733, 1, 0, 0.832686,0.00527383) , 
4, 0.0274779, 1, 0, 0.893953,-0.00316536) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00123119,0.0158666) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.29883e-05,-0.00582295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141913) , 
6, 0.0376592, 1, 0, 5.67978e-05,-0.000261219) , 
4, 0.0202985, 1, 0, 0.00042754,-1.47607e-05) , 
0, 0.00288664, 1, 0, 0.497794,-0.00176849)    );
  // itree = 799
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413565,-0.000372081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60449,-0.0187819) , 
6, 0.0378425, 1, 0, 0.425999,-0.000815227) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953496,0.0187455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145413,0.00361879) , 
0, 0.00192484, 1, 0, 0.632233,0.0044698) , 
6, 0.0397367, 1, 0, 0.489565,0.000813733) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905761,0.00551316) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502032,0.00346492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355141,-0.0183873) , 
3, 37.7722, 1, 0, 0.416026,-0.00698456) , 
0, 0.000955934, 1, 0, 0.565205,-0.00429095) , 
6, 0.052182, 1, 0, 0.501948,-2.19853e-05)    );
  // itree = 800
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.437955,-0.012065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806393,0.0246341) , 
6, 0.0124178, 1, 0, 0.756945,0.00216904) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.331235,-0.00952049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384514,-0.000581389) , 
5, 0.0159999, 1, 0, 0.372333,-0.00147638) , 
2, 0.0714068, 1, 0, 0.483377,-0.000423886) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793283,-0.0101247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596749,-0.0230045) , 
0, 0.00177277, 1, 0, 0.686354,-0.0147677) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504043,-0.0124948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421288,0.00428521) , 
2, 0.166233, 1, 0, 0.455816,-0.00163289) , 
5, 0.028759, 1, 0, 0.563049,-0.00774244) , 
6, 0.052182, 1, 0, 0.495931,-0.00157715)    );
  // itree = 801
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84142,-0.0126371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394084,0.0038395) , 
5, 0.0230459, 1, 0, 0.673451,-0.00297817) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.119774,0.014949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547501,-0.00179557) , 
6, 0.0348314, 1, 0, 0.368256,0.000938192) , 
2, 0.150757, 1, 0, 0.522735,-0.00104413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197811,-0.018755) , 
2, 0.452367, 1, 0, 0.502261,-0.00163158)    );
  // itree = 802
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993677,-0.017873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988631,0.0277624) , 
2, 0.189825, 1, 0, 0.992263,0.000243479) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879384,0.00402734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544896,-0.0126008) , 
6, 0.0202414, 1, 0, 0.710093,-0.0142128) , 
0, 9.15336e-05, 1, 0, 0.93965,-0.00245202) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900365,0.0113679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000446461,-0.00204665) , 
0, 0.00279671, 1, 0, 0.384261,0.00251981) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776334,-0.00575329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.23972e-05,-0.00931222) , 
0, 0.00370995, 1, 0, 0.253669,-0.00192217) , 
3, 37.7922, 1, 0, 0.305417,-0.000162024) , 
0, 0.000962026, 1, 0, 0.503688,-0.000877914)    );
  // itree = 803
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86164,0.0392664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810266,0.0862375) , 
3, 35.2966, 1, 0, 0.835118,0.00572014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790755,-0.0123784) , 
2, 0.0135978, 1, 0, 0.81807,0.00281719) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924981,-0.00319122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762267,-0.00857236) , 
3, 100.067, 1, 0, 0.91078,-0.00278642) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.198256,0.00627059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.56301e-05,-0.0212494) , 
4, 0.0318825, 1, 0, 0.117695,0.000113556) , 
0, 0.00192505, 1, 0, 0.465133,-0.00115688) , 
2, 0.0238023, 1, 0, 0.505512,-0.000702209)    );
  // itree = 804
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845688,0.0133883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834979,-0.0774245) , 
2, 0.0147356, 1, 0, 0.842216,-0.00283854) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.697805,-0.0399782) , 
3, 62.4318, 1, 0, 0.804092,-0.00693377) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.139112,-0.0139309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.484576,0.0013692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623247,-0.0094635) , 
6, 0.05798, 1, 0, 0.493122,8.7867e-05) , 
4, 0.00870241, 1, 0, 0.466623,-0.000352377) , 
2, 0.0238042, 1, 0, 0.505161,-0.00110395)    );
  // itree = 805
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.500453,0.000281025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411513,-0.0104277) , 
3, 62.4681, 1, 0, 0.479944,-0.000751835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752771,0.0125041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131852) , 
0, 0.00288514, 1, 0, 0.140523,0.00292054) , 
3, 100.914, 1, 0, 0.417013,-7.09489e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616155,-0.00899493) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949594,0.0299648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706541,-0.00137209) , 
4, 0.0288235, 1, 0, 0.878475,0.00818805) , 
4, 0.0239615, 1, 0, 0.82725,0.00537399) , 
7, 0.000534737, 1, 0, 0.496292,0.000981296)    );
  // itree = 806
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918109,-0.00964546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977722,0.0202421) , 
5, 0.0127574, 1, 0, 0.949078,0.000434783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00210727,-0.0231589) , 
0, 0.0015718, 1, 0, 0.586486,-0.00233872) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.432201,-0.00231207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680408,0.00690452) , 
6, 0.0521868, 1, 0, 0.481727,-0.000105681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.340707,0.0381815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248393,0.00968307) , 
2, 0.462241, 1, 0, 0.292272,0.00519104) , 
2, 0.428166, 1, 0, 0.460098,0.000499014) , 
4, 0.017403, 1, 0, 0.501052,-0.000420517)    );
  // itree = 807
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922493,-0.0112772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000654512,0.0108035) , 
0, 0.00287933, 1, 0, 0.509722,-0.00340411) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66699,0.00496999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0117328,-0.00881493) , 
5, 0.0230624, 1, 0, 0.380919,0.000991612) , 
3, 25.2297, 1, 0, 0.418453,-0.000289337) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.465607,-0.0161694) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900394,-0.0100714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793397,0.0117673) , 
0, 0.00209302, 1, 0, 0.874636,-0.00236835) , 
4, 0.0235631, 1, 0, 0.81841,-0.004509) , 
7, 0.000535426, 1, 0, 0.496172,-0.00110929)    );
  // itree = 808
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629493,0.0176986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63228,-0.0179187) , 
3, 10.8132, 1, 0, 0.631008,-0.0029909) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.557517,0.00176986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605168,0.0283223) , 
3, 14.4148, 1, 0, 0.577055,0.00200969) , 
4, 0.0146537, 1, 0, 0.589862,0.000822757) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833136,0.0151407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139713) , 
0, 0.00282373, 1, 0, 0.189176,0.00208867) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.542762,-0.0063039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473312,-0.0301271) , 
1, 2.60604, 1, 0, 0.538708,-0.00363383) , 
6, 0.020303, 1, 0, 0.45689,-0.0022943) , 
3, 25.2306, 1, 0, 0.496084,-0.00137554)    );
  // itree = 809
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.235345,-0.0042432) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965159,0.0503715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43859,0.00216531) , 
6, 0.0199823, 1, 0, 0.626669,0.00539135) , 
7, 4.31215e-05, 1, 0, 0.458512,0.00241159) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63161,0.00102987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758619,-0.0245605) , 
7, 0.000218538, 1, 0, 0.673285,-0.00565385) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.218159,-0.0150975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526168,0.00271134) , 
5, 0.0173033, 1, 0, 0.475806,-0.000225855) , 
4, 0.0163071, 1, 0, 0.505392,-0.00103908) , 
4, 0.0116019, 1, 0, 0.497907,-0.000488114)    );
  // itree = 810
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957827,0.0194818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0272973,-0.00804721) , 
0, 0.000962212, 1, 0, 0.2413,0.000763355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921196,-0.0108642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67143,0.00999142) , 
0, 0.00161634, 1, 0, 0.834063,-0.00216371) , 
7, 0.000172556, 1, 0, 0.567718,-0.000848494) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.315214,-0.0181796) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.208688,0.0139524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144076,-0.0100954) , 
2, 0.248813, 1, 0, 0.168776,-0.000324164) , 
2, 0.0949961, 1, 0, 0.204708,-0.00475742) , 
3, 100.785, 1, 0, 0.504717,-0.00152689)    );
  // itree = 811
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466009,-0.00264842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884643,0.00832774) , 
7, 0.000473941, 1, 0, 0.558055,0.000219664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646776,-0.0173034) , 
6, 0.0579807, 1, 0, 0.562978,-0.000301728) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904796,0.00238851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762226,0.0202274) , 
2, 0.0950303, 1, 0, 0.816647,0.0122965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000125306,-0.00757076) , 
0, 0.00288758, 1, 0, 0.273598,0.00400626) , 
3, 88.3067, 1, 0, 0.502822,0.00059382)    );
  // itree = 812
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982199,0.0126825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947888,0.0316179) , 
0, 0.000365813, 1, 0, 0.967155,0.00742094) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00634555,-0.0336778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.001657,0.0129117) , 
2, 0.119044, 1, 0, 0.00275595,-0.000940278) , 
0, 0.000962526, 1, 0, 0.165732,0.0004727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.433699,-0.0374594) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861874,0.00103231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802689,-0.0108477) , 
5, 0.0270457, 1, 0, 0.850458,-0.00126974) , 
4, 0.0133509, 1, 0, 0.813262,-0.00261028) , 
7, 0.000145066, 1, 0, 0.501814,-0.00112744)    );
  // itree = 813
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260288,-0.0319781) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606171,0.0144898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449613,-0.00546205) , 
4, 0.0174206, 1, 0, 0.504022,0.000456732) , 
5, 0.00534326, 1, 0, 0.493103,-0.000149336) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587945,0.00727425) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598603,-0.0282317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453569,0.00129124) , 
3, 50.3647, 1, 0, 0.533287,-0.0143662) , 
2, 0.143722, 1, 0, 0.553636,-0.00826707) , 
6, 0.0550824, 1, 0, 0.499662,-0.00102883)    );
  // itree = 814
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.400857,0.0173183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66894,-0.0117672) , 
6, 0.0236413, 1, 0, 0.586028,-0.00375283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70676,0.0139466) , 
6, 0.0493367, 1, 0, 0.61136,-0.00222903) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942385,-0.000889869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44549,0.0101306) , 
0, 0.000886324, 1, 0, 0.634363,0.00210615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000274308,-0.0184913) , 
4, 0.0319043, 1, 0, 0.492339,0.00136106) , 
3, 12.5987, 1, 0, 0.510028,0.000827497)    );
  // itree = 815
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943615,-0.00685515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746311,-0.0231496) , 
0, 0.000950915, 1, 0, 0.899183,-0.0107114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00266198,0.0268877) , 
0, 0.00221927, 1, 0, 0.511853,-0.0053803) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.281071,-0.0098797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515382,0.00436847) , 
5, 0.016005, 1, 0, 0.477065,0.00043596) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911767,0.0215283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493146,-0.0187152) , 
0, 0.000954527, 1, 0, 0.639204,-0.00568127) , 
6, 0.0550842, 1, 0, 0.496723,-0.000305706) , 
4, 0.0144987, 1, 0, 0.500329,-0.00151505)    );
  // itree = 816
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579483,0.00056053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578625,-0.0126161) , 
3, 12.3566, 1, 0, 0.579005,-0.00217489) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.330258,-0.01314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641299,0.00456243) , 
6, 0.0232075, 1, 0, 0.563112,0.000646842) , 
3, 28.8319, 1, 0, 0.570596,-0.000681915) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848528,0.00305964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832524,0.0269024) , 
4, 0.0246555, 1, 0, 0.844307,0.00639938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000200674,-0.0039503) , 
0, 0.00288758, 1, 0, 0.317803,0.00235407) , 
3, 75.6854, 1, 0, 0.500877,0.000155389)    );
  // itree = 817
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230056,0.0174188) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587358,-0.00253658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515911,0.00973106) , 
3, 67.278, 1, 0, 0.573724,-0.000194824) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769822,-0.015569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000609492,0.0241956) , 
0, 0.00288758, 1, 0, 0.216875,-0.00596014) , 
3, 100.922, 1, 0, 0.514699,-0.00114844) , 
4, 0.00580398, 1, 0, 0.499345,-0.000784362)    );
  // itree = 818
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774221,-0.00546271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404357,0.00715677) , 
5, 0.0133366, 1, 0, 0.538909,-0.000205217) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690465,-0.00445745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573,-0.0182698) , 
2, 0.217641, 1, 0, 0.66849,-0.00305254) , 
6, 0.034788, 1, 0, 0.6038,-0.0016311) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765416,0.00369431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850267,0.0255118) , 
0, 0.00136474, 1, 0, 0.792714,0.00911854) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729566,-0.00792618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00131425,0.00994962) , 
0, 0.00279681, 1, 0, 0.0918406,-0.000502026) , 
0, 0.00192505, 1, 0, 0.273134,0.0019865) , 
2, 0.285706, 1, 0, 0.502536,-0.000523232)    );
  // itree = 819
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.292006,0.000625514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540708,0.0376446) , 
4, 0.00496668, 1, 0, 0.419793,0.00430066) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828382,-0.0235917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55798,0.000267897) , 
2, 0.0170346, 1, 0, 0.581062,-0.000491853) , 
4, 0.00870446, 1, 0, 0.565614,-3.27953e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942972,0.00900655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590827,-0.016177) , 
0, 0.000267599, 1, 0, 0.731632,-0.0148947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00159853,0.0179996) , 
0, 0.00288551, 1, 0, 0.24629,-0.00452401) , 
2, 0.357132, 1, 0, 0.502797,-0.000916311)    );
  // itree = 820
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981772,0.00492611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48649,-0.0109125) , 
0, 0.00095954, 1, 0, 0.742735,-0.00169317) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913795,-0.00424003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.310999,0.00757321) , 
0, 0.000960715, 1, 0, 0.458781,0.00106476) , 
2, 0.0850278, 1, 0, 0.566254,2.09183e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.308261,-0.0244255) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206401,-0.00852868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221056,0.00452606) , 
2, 0.432664, 1, 0, 0.215565,-0.000430144) , 
2, 0.391179, 1, 0, 0.238165,-0.00392983) , 
2, 0.357132, 1, 0, 0.501941,-0.000753519)    );
  // itree = 821
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524757,0.00182334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.107142,0.0209251) , 
3, 126.142, 1, 0, 0.477788,0.00111661) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649935,-0.01652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466185,0.00123082) , 
3, 62.9207, 1, 0, 0.587841,-0.006069) , 
6, 0.0472179, 1, 0, 0.490923,0.000259014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925734,0.0538959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517706,-0.00845265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374526,0.0131551) , 
3, 25.1859, 1, 0, 0.415215,0.00216878) , 
0, 0.000958289, 1, 0, 0.57058,0.00454707) , 
6, 0.0521868, 1, 0, 0.503805,0.000952509)    );
  // itree = 822
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932993,0.0290302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167696,-0.0193639) , 
2, 0.0475922, 1, 0, 0.504531,-0.00366615) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.548604,0.00694609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.208692,-0.00695672) , 
2, 0.357043, 1, 0, 0.483091,0.000970002) , 
5, 0.0106751, 1, 0, 0.486045,0.000331319) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.742418,-0.0122115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558091,-0.0294257) , 
3, 62.5577, 1, 0, 0.679741,-0.0167017) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710569,0.0171097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247832,-0.0148563) , 
1, 1.08178, 1, 0, 0.439008,0.000462379) , 
5, 0.028759, 1, 0, 0.548773,-0.00736377) , 
6, 0.0521841, 1, 0, 0.496311,-0.000928075)    );
  // itree = 823
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642084,-0.00229686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.243464,-0.0108257) , 
2, 0.380737, 1, 0, 0.588348,-0.00156903) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755217,0.00182896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411976,-0.0308774) , 
2, 0.142763, 1, 0, 0.571725,-0.0116671) , 
3, 32.3959, 1, 0, 0.586224,-0.00285927) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621096,-0.000919004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348636,0.0114619) , 
2, 0.126923, 1, 0, 0.473687,0.00155759) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0834415,-0.00625386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458096,-0.0115852) , 
6, 0.0463344, 1, 0, 0.202636,-0.0036441) , 
2, 0.380941, 1, 0, 0.426045,0.000643312) , 
3, 37.7955, 1, 0, 0.494144,-0.000845794)    );
  // itree = 824
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532041,0.00274874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670911,-0.0086138) , 
6, 0.0422369, 1, 0, 0.558602,-0.000399376) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96227,0.0647845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499396,0.000143058) , 
0, 0.000960047, 1, 0, 0.653083,0.00331984) , 
6, 0.0492854, 1, 0, 0.579082,0.000406838) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56436,-0.0104176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.194877,-6.3443e-05) , 
2, 0.119044, 1, 0, 0.327543,-0.00154131) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813727,-0.0168614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696217,0.00339053) , 
6, 0.0560201, 1, 0, 0.773351,-0.0102596) , 
7, 0.000535656, 1, 0, 0.402984,-0.00301665) , 
3, 50.4571, 1, 0, 0.499326,-0.00114369)    );
  // itree = 825
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586582,-0.00645112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610791,0.0295726) , 
3, 37.0646, 1, 0, 0.589552,-0.00118704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.556262,-0.00866246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556969,-0.0222946) , 
3, 47.369, 1, 0, 0.556561,-0.00779595) , 
3, 43.2487, 1, 0, 0.585615,-0.00197578) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748867,-0.0121851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885061,0.00720038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131479) , 
0, 0.00288733, 1, 0, 0.372522,0.00198297) , 
2, 0.0238088, 1, 0, 0.408593,0.00130043) , 
3, 50.4612, 1, 0, 0.506492,-0.000511432)    );
  // itree = 826
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.250333,0.0130745) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736018,0.00739461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.399532,-0.00307267) , 
2, 0.19047, 1, 0, 0.588961,0.000312937) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.367768,-0.0135292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.31787,-0.00171132) , 
4, 0.0137078, 1, 0, 0.325562,-0.00196577) , 
3, 75.6854, 1, 0, 0.515556,-0.000322111) , 
4, 0.00580854, 1, 0, 0.501498,-3.64612e-05)    );
  // itree = 827
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.218889,-0.0166575) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748614,0.011212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226271,-0.00942732) , 
3, 113.281, 1, 0, 0.696436,0.00116136) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841755,-0.00447558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00059646,0.00773594) , 
0, 0.00288758, 1, 0, 0.372672,-0.00171876) , 
2, 0.142822, 1, 0, 0.519371,-0.000413761) , 
4, 0.00583248, 1, 0, 0.501542,-0.000962727)    );
  // itree = 828
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770904,0.0544715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657561,-0.00251952) , 
3, 12.5812, 1, 0, 0.676284,0.000521114) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752297,-0.00687839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726693,0.0223302) , 
3, 11.7977, 1, 0, 0.730878,0.00321861) , 
6, 0.031912, 1, 0, 0.703276,0.00185477) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857368,-0.00832254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00134583,0.029845) , 
0, 0.00288608, 1, 0, 0.448316,-0.00311191) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303406,0.00336304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504672,-0.00698283) , 
6, 0.0550841, 1, 0, 0.326727,0.000440606) , 
3, 37.8498, 1, 0, 0.37528,-0.000977996) , 
2, 0.119011, 1, 0, 0.503703,0.000131141)    );
  // itree = 829
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972661,-0.00219558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828341,-0.0141571) , 
8, 0.219309, 1, 0, 0.943353,-0.00286636) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.355674,0.00433868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167548,-0.00735208) , 
3, 75.6867, 1, 0, 0.294518,3.64765e-05) , 
0, 0.000962526, 1, 0, 0.49327,-0.000852723) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642846,-0.0165053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594079,-0.019175) , 
2, 0.190303, 1, 0, 0.616755,-0.0111658) , 
6, 0.0579807, 1, 0, 0.499928,-0.00140879)    );
  // itree = 830
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502878,-0.00473859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94995,-0.0303533) , 
7, 9.64095e-05, 1, 0, 0.61408,-0.00659517) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544256,0.00633714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5617,-0.0244439) , 
7, 0.00026648, 1, 0, 0.548533,-0.000983412) , 
6, 0.0232175, 1, 0, 0.572168,-0.00300694) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642217,-0.00949507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453943,0.00359662) , 
2, 0.14286, 1, 0, 0.52708,-0.000149029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882359,0.0148286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000229926,-0.00214714) , 
0, 0.00288733, 1, 0, 0.338771,0.00331932) , 
3, 63.0771, 1, 0, 0.459174,0.00110169) , 
4, 0.017393, 1, 0, 0.496391,-0.00025157)    );
  // itree = 831
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807107,0.00643242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0488699,-0.0160497) , 
5, 0.0287897, 1, 0, 0.661732,0.00181013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0153474) , 
6, 0.030377, 1, 0, 0,-0.00121114) , 
4, 0.0289923, 1, 0, 0.49159,0.00103331) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601831,-0.00161858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633091,-0.014372) , 
6, 0.0593611, 1, 0, 0.6181,-0.00726851) , 
6, 0.05798, 1, 0, 0.498287,0.000593863)    );
  // itree = 832
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615339,-0.0160779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603184,-0.00844073) , 
5, 0.00680157, 1, 0, 0.604247,-0.00377217) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495399,-0.00343897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.294593,0.010629) , 
2, 0.285623, 1, 0, 0.423496,0.000301514) , 
4, 0.017396, 1, 0, 0.486329,-0.00111459) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941356,0.00927576) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.398605,-0.0270072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440533,-0.00428552) , 
4, 0.0290277, 1, 0, 0.419524,-0.010519) , 
0, 0.000956104, 1, 0, 0.577131,-0.00652309) , 
6, 0.055081, 1, 0, 0.495684,-0.0016718)    );
  // itree = 833
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811237,0.00828745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696453,-0.0171321) , 
2, 0.0396729, 1, 0, 0.749301,-0.002828) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601016,-0.0207838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437689,-0.00990745) , 
4, 0.0143545, 1, 0, 0.490771,-0.0103341) , 
3, 75.484, 1, 0, 0.693545,-0.00444679) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.104661,-0.00565213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678918,0.0136656) , 
5, 0.0142537, 1, 0, 0.469705,0.00285096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915754,-0.0092342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141479,0.00131695) , 
0, 0.00192505, 1, 0, 0.303292,-0.00120305) , 
5, 0.0230124, 1, 0, 0.369876,0.000419021) , 
2, 0.119021, 1, 0, 0.497077,-0.00149323)    );
  // itree = 834
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.236119,-0.0127583) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509935,0.00595532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646296,-0.00361397) , 
6, 0.0434945, 1, 0, 0.558467,0.000444753) , 
4, 0.00580638, 1, 0, 0.541094,0.000142816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0726067,-0.00864188) , 
3, 138.756, 1, 0, 0.497278,-0.000327172)    );
  // itree = 835
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757823,0.00654547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712596,-0.0109725) , 
3, 24.0292, 1, 0, 0.728697,-0.00173948) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.014006,-0.00724437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.778503,0.0100856) , 
7, 0.000188328, 1, 0, 0.401328,0.0022392) , 
2, 0.142853, 1, 0, 0.556558,0.000352615) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765263,0.0172293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131914) , 
0, 0.00288302, 1, 0, 0.211591,0.00414363) , 
3, 100.922, 1, 0, 0.499191,0.000983049)    );
  // itree = 836
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.223217,-0.0181966) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763459,-0.0366252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677203,0.0062092) , 
2, 0.00793384, 1, 0, 0.6833,0.00041936) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0951953,0.00562926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.543929,-0.0101569) , 
6, 0.0348146, 1, 0, 0.358235,-0.0024973) , 
2, 0.166616, 1, 0, 0.519747,-0.00104813) , 
4, 0.00580638, 1, 0, 0.503066,-0.00150838)    );
  // itree = 837
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900753,0.0973883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702044,0.0115599) , 
5, 0.0102389, 1, 0, 0.753241,0.00377072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863217,-0.00501783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000689133,0.014781) , 
0, 0.00288725, 1, 0, 0.329,-0.00124703) , 
2, 0.0476083, 1, 0, 0.421029,-0.000158541) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981757,0.0240009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.543063,-0.0149675) , 
4, 0.0263512, 1, 0, 0.851451,-0.000301841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570046,-0.0210473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965679,-0.000506685) , 
4, 0.0281856, 1, 0, 0.796519,-0.0145483) , 
5, 0.0274185, 1, 0, 0.827703,-0.00646084) , 
7, 0.000543648, 1, 0, 0.496692,-0.0013311)    );
  // itree = 838
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454568,0.0129042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000589227,-0.0155164) , 
2, 0.142814, 1, 0, 0.191972,-7.21344e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831031,-0.0115477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82536,-7.51596e-05) , 
3, 39.5921, 1, 0, 0.828366,-0.00309699) , 
7, 0.000143225, 1, 0, 0.544782,-0.00174908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0822236,0.0165922) , 
3, 138.579, 1, 0, 0.503006,-0.00116668)    );
  // itree = 839
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790771,0.0153264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000122853,-0.0152468) , 
4, 0.0174161, 1, 0, 0.497035,0.00219522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.734306,-0.00523011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477132,0.0119052) , 
4, 0.0260789, 1, 0, 0.640865,-0.000350327) , 
6, 0.0347935, 1, 0, 0.57063,0.000892717) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618486,-0.0105533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86922,7.92816e-05) , 
4, 0.0233246, 1, 0, 0.763039,-0.008784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000660249,-0.00054463) , 
0, 0.00288758, 1, 0, 0.246086,-0.00284169) , 
2, 0.333258, 1, 0, 0.495986,3.38192e-05)    );
  // itree = 840
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681888,0.00729178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502041,-0.0251359) , 
3, 91.8142, 1, 0, 0.66806,0.000852444) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535119,-0.0129093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39563,0.00266617) , 
2, 0.214255, 1, 0, 0.466433,-0.00185956) , 
4, 0.0202924, 1, 0, 0.55461,-0.000673522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702764,-0.0126464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0315771,0.000315627) , 
0, 0.00192488, 1, 0, 0.167292,-0.00625637) , 
3, 113.528, 1, 0, 0.503689,-0.0014075)    );
  // itree = 841
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938428,-0.0148218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272218,0.00952235) , 
0, 0.000728029, 1, 0, 0.498658,-0.0002887) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.847203,-0.00725787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652397,-0.0128604) , 
3, 87.6421, 1, 0, 0.819715,-0.0050629) , 
7, 0.000210567, 1, 0, 0.663292,-0.00273684) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0171847,-0.00196024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901541,0.0114989) , 
7, 0.000534736, 1, 0, 0.376725,0.0016619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.068544,-0.0144721) , 
3, 126.144, 1, 0, 0.327881,0.000771589) , 
5, 0.0230519, 1, 0, 0.495396,-0.00098064)    );
  // itree = 842
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994841,-0.0053877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7644,-0.0144667) , 
0, 4.57697e-05, 1, 0, 0.952098,-0.00354195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.388949,0.00136624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.153252,-0.0134285) , 
2, 0.428449, 1, 0, 0.363765,-0.000228689) , 
0, 0.000962212, 1, 0, 0.56897,-0.00138433) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906776,0.000465591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754347,0.0172925) , 
2, 0.0949838, 1, 0, 0.810083,0.00992328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000230278,-0.00370927) , 
0, 0.00288758, 1, 0, 0.259494,0.00311553) , 
3, 88.3067, 1, 0, 0.500889,-0.000394409)    );
  // itree = 843
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935139,-0.0248543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400751,0.00177767) , 
0, 0.000680696, 1, 0, 0.608064,-0.0031812) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632994,0.00722781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000182667,-0.014137) , 
4, 0.0289954, 1, 0, 0.456338,0.00122811) , 
5, 0.0165412, 1, 0, 0.499446,-2.46452e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645778,-0.0195213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573784,-0.0042148) , 
3, 37.7485, 1, 0, 0.606768,-0.00583381) , 
6, 0.0579815, 1, 0, 0.505352,-0.000344342)    );
  // itree = 844
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231052,-0.0169559) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.446547,0.00409628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701963,0.0271288) , 
7, 8.94819e-05, 1, 0, 0.596948,0.0044194) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71285,-0.00641335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413442,0.00208406) , 
4, 0.0204312, 1, 0, 0.499584,-0.000571549) , 
4, 0.0136894, 1, 0, 0.515304,0.00023426) , 
4, 0.00582008, 1, 0, 0.499422,-0.000153867)    );
  // itree = 845
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75991,-0.0373539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718933,0.0121636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762352,-0.0153294) , 
6, 0.0377805, 1, 0, 0.735458,-0.00199243) , 
4, 0.00876142, 1, 0, 0.739086,-0.00484149) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632842,0.0156561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149992,-0.0043652) , 
4, 0.0287345, 1, 0, 0.49004,0.00336129) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559771,-0.00459443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136319,0.0127409) , 
5, 0.0277817, 1, 0, 0.376566,-0.000987768) , 
3, 25.1967, 1, 0, 0.408645,0.000241731) , 
2, 0.0714264, 1, 0, 0.49914,-0.00115036)    );
  // itree = 846
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813635,0.00180829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48108,0.0212741) , 
3, 94.9789, 1, 0, 0.771969,0.00136821) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560644,-0.008752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.354613,0.00196072) , 
2, 0.183655, 1, 0, 0.445008,-0.00123266) , 
2, 0.0612183, 1, 0, 0.531278,-0.00054641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.321501,0.0151109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163844,0.0128658) , 
4, 0.0260602, 1, 0, 0.237268,0.0043677) , 
2, 0.428558, 1, 0, 0.503537,-8.27377e-05)    );
  // itree = 847
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880059,-0.0105302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775822,0.0144174) , 
5, 0.00954853, 1, 0, 0.794183,0.000601589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878932,-0.00967086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00092645,0.0055836) , 
0, 0.00288677, 1, 0, 0.48826,-0.00379538) , 
2, 0.0714068, 1, 0, 0.582642,-0.00243886) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945863,0.0115857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749768,-0.0076609) , 
2, 0.333323, 1, 0, 0.917716,0.00338257) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0961656,-0.0193013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0721835,0.00946399) , 
2, 0.119051, 1, 0, 0.0778357,-0.000460131) , 
0, 0.00192488, 1, 0, 0.394853,0.000990318) , 
3, 50.4571, 1, 0, 0.496197,-0.000860308)    );
  // itree = 848
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700515,0.000379349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394926,0.0104351) , 
2, 0.192639, 1, 0, 0.588791,0.00112497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121861,-0.00869757) , 
3, 126.144, 1, 0, 0.539043,0.000509548) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0913209,-0.00223194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462033,-0.0161091) , 
6, 0.0463344, 1, 0, 0.215259,-0.00497387) , 
2, 0.404671, 1, 0, 0.497532,-0.000193458)    );
  // itree = 849
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.223605,-0.0128618) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472457,0.00245754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104626,-0.0103666) , 
2, 0.428444, 1, 0, 0.4416,0.000203899) , 
4, 0.00585616, 1, 0, 0.426044,-0.000330147) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873295,-0.0122356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970387,0.0233852) , 
0, 0.00174231, 1, 0, 0.910792,-0.000813935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523138,-0.0184618) , 
0, 0.00215319, 1, 0, 0.820102,-0.00461756) , 
7, 0.000535426, 1, 0, 0.503774,-0.00117586)    );
  // itree = 850
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245283,-0.026451) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948542,0.00504319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.310722,-0.00439638) , 
0, 0.000962526, 1, 0, 0.509799,-0.000610636) , 
5, 0.00536296, 1, 0, 0.497486,-0.000988308) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68515,0.0294907) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.427401,-0.000426666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464534,0.0221332) , 
2, 0.214183, 1, 0, 0.445384,0.00183949) , 
5, 0.0293929, 1, 0, 0.550568,0.00476225) , 
6, 0.055081, 1, 0, 0.503221,-0.000367063)    );
  // itree = 851
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900108,-0.0270409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777112,0.00324335) , 
5, 0.0099356, 1, 0, 0.804176,-0.000612402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492642,-0.0250069) , 
3, 86.3553, 1, 0, 0.753494,-0.00353227) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.372519,0.00440656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142069,-0.0087396) , 
3, 88.1648, 1, 0, 0.314166,-0.000207769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.124563,-0.0100304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675231,0.00766168) , 
4, 0.0204822, 1, 0, 0.582756,0.00188315) , 
6, 0.040586, 1, 0, 0.430973,0.000701545) , 
2, 0.0476083, 1, 0, 0.496338,-0.000156521)    );
  // itree = 852
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963344,-0.0366607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972996,0.0119882) , 
3, 12.225, 1, 0, 0.971277,0.000109157) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832827,-0.00588168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856908,-0.0187452) , 
5, 0.0270326, 1, 0, 0.836344,-0.00786235) , 
0, 0.000411677, 1, 0, 0.900489,-0.00407283) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00204528,0.019549) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131009) , 
4, 0.0319373, 1, 0, 0,-0.000358912) , 
4, 0.020283, 1, 0, 0.000623042,3.24535e-05) , 
0, 0.00288733, 1, 0, 0.500462,-0.00224787)    );
  // itree = 853
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966106,0.0157726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202346,-0.0012344) , 
0, 0.00186942, 1, 0, 0.680601,0.00254535) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.370953,-0.00686247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.299132,-0.00257725) , 
2, 0.367246, 1, 0, 0.329743,-0.00212183) , 
2, 0.285627, 1, 0, 0.591611,0.00136159) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910493,-0.00711056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723481,-0.013064) , 
3, 104.466, 1, 0, 0.889018,-0.00590998) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0019631,0.0522652) , 
6, 0.0405947, 1, 0, 0.000598395,0.000169433) , 
0, 0.00288733, 1, 0, 0.460619,-0.00297847) , 
3, 25.1681, 1, 0, 0.498916,-0.0017096)    );
  // itree = 854
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939856,0.0076694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0043409,-0.0177349) , 
0, 0.000949884, 1, 0, 0.276693,-0.000730214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519933,0.0226581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545272,0.0134227) , 
6, 0.0255945, 1, 0, 0.536055,0.00387745) , 
6, 0.0234876, 1, 0, 0.340617,0.000405428) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683259,-0.00896093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489157,0.00288253) , 
2, 0.214148, 1, 0, 0.598647,-0.00136276) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543505,-0.0195216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518071,-0.00804596) , 
1, 1.97272, 1, 0, 0.528657,-0.0092758) , 
1, 1.89578, 1, 0, 0.591738,-0.00214383) , 
6, 0.0290075, 1, 0, 0.500157,-0.00121414)    );
  // itree = 855
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.246611,0.0125051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.458271,-0.0218497) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591822,-0.00468168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3818,0.00364147) , 
3, 62.9908, 1, 0, 0.518638,-0.000633583) , 
4, 0.00842272, 1, 0, 0.516071,-0.000982488) , 
4, 0.00580221, 1, 0, 0.502052,-0.000695108)    );
  // itree = 856
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990046,0.00930938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922783,0.0133032) , 
0, 0.000154545, 1, 0, 0.955896,0.00550568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00319237,-0.00923443) , 
0, 0.00162704, 1, 0, 0.622011,0.00292012) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78551,-0.0180085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.267924,-0.00333626) , 
0, 0.00145606, 1, 0, 0.386952,-0.00358419) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.50662,0.0111315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148683,-0.00854678) , 
3, 100.788, 1, 0, 0.429431,0.0012516) , 
5, 0.0229688, 1, 0, 0.416017,-0.000275398) , 
4, 0.0202924, 1, 0, 0.505141,0.00110715)    );
  // itree = 857
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956143,0.00235763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937195,-0.0403046) , 
3, 36.5323, 1, 0, 0.946595,-0.010687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.178916,-0.0074359) , 
0, 0.000728614, 1, 0, 0.455038,-0.00544064) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944931,0.00747546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000700958,-0.00986315) , 
0, 0.00192405, 1, 0, 0.460866,0.00107791) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641369,-0.00644821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549229,0.0172731) , 
2, 0.428048, 1, 0, 0.630935,-0.00192066) , 
6, 0.046384, 1, 0, 0.512838,0.000161573) , 
4, 0.0115999, 1, 0, 0.503445,-0.000748814)    );
  // itree = 858
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945231,-0.00190665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.246109,-0.0199246) , 
0, 0.000530184, 1, 0, 0.498546,-0.00611898) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705405,0.00796737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0193272) , 
4, 0.0202992, 1, 0, 0.418382,0.000875125) , 
5, 0.00951896, 1, 0, 0.429152,-6.45371e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.542128,0.0233599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575221,0.00298982) , 
4, 0.0289603, 1, 0, 0.559295,0.00380871) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895091,-0.0124556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00346285,0.0734106) , 
0, 0.00288321, 1, 0, 0.604727,-0.00574901) , 
1, 1.13491, 1, 0, 0.59351,-0.00338919) , 
6, 0.0405976, 1, 0, 0.495281,-0.00140221)    );
  // itree = 859
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952329,-0.0118169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509638,0.0212249) , 
2, 0.0476083, 1, 0, 0.725351,0.00375942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0281038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000170182,0.0103549) , 
4, 0.0366306, 1, 0, 8.58742e-05,-0.00190345) , 
4, 0.0145606, 1, 0, 0.329984,0.000672399) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9096,-0.0115635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0012332,0.00576565) , 
0, 0.00288758, 1, 0, 0.60992,-0.00468228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379637,0.0231898) , 
2, 0.452243, 1, 0, 0.596945,-0.00387108) , 
6, 0.0289901, 1, 0, 0.498329,-0.0021927)    );
  // itree = 860
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949278,-0.00163866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880879,-0.0152851) , 
4, 0.0187358, 1, 0, 0.918569,-0.00546147) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938448,0.0458138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893594,-0.00192377) , 
0, 0.00176819, 1, 0, 0.916115,0.00702738) , 
0, 0.0016499, 1, 0, 0.918303,-0.00410604) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0396645,-0.00211163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376631,0.0208543) , 
6, 0.0524154, 1, 0, 0.0867242,0.00047597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510909,-0.0096247) , 
6, 0.0579816, 1, 0, 0.116027,2.08432e-05) , 
0, 0.00192505, 1, 0, 0.500825,-0.00195855)    );
  // itree = 861
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972236,-0.00543797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962859,0.0394573) , 
3, 87.4425, 1, 0, 0.971132,4.77616e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867111,-0.00465174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613237,-0.0088008) , 
3, 100.209, 1, 0, 0.841954,-0.00553429) , 
0, 0.000412277, 1, 0, 0.903262,-0.00288503) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.34757e-05,-0.00926597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00269171,0.0465326) , 
6, 0.0309219, 1, 0, 0.000869382,0.00033184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141573) , 
6, 0.0463875, 1, 0, 0.000666782,0.00010458) , 
0, 0.00288733, 1, 0, 0.50287,-0.00155883)    );
  // itree = 862
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787679,-0.0152294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621473,0.0120093) , 
2, 0.0713054, 1, 0, 0.711735,-0.000471976) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.465607,-0.037078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313059,-0.00389386) , 
2, 0.261727, 1, 0, 0.369191,-0.0121268) , 
2, 0.166523, 1, 0, 0.554119,-0.00583475) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585376,0.00684542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536219,-0.00328488) , 
3, 32.6387, 1, 0, 0.553053,-7.60443e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799641,0.00902329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000264204,-0.0043302) , 
0, 0.00288309, 1, 0, 0.231521,0.00295488) , 
3, 96.7189, 1, 0, 0.483079,0.000583573) , 
3, 12.6158, 1, 0, 0.49429,-0.000429346)    );
  // itree = 863
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518109,-0.012655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730815,0.048563) , 
4, 0.0131134, 1, 0, 0.554128,-0.00303708) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942279,-0.010353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350539,0.00513389) , 
0, 0.000962026, 1, 0, 0.510342,0.000258106) , 
4, 0.0144969, 1, 0, 0.52062,-0.000515352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204531,-0.0120865) , 
2, 0.452367, 1, 0, 0.501951,-0.000908482)    );
  // itree = 864
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758846,-0.00791119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592121,0.00106179) , 
5, 0.0165003, 1, 0, 0.64473,-0.0013796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869854,-0.020237) , 
7, 0.00074338, 1, 0, 0.657346,-0.00211344) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145513) , 
6, 0.0303858, 1, 0, 0,-0.000552701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729747,0.0367764) , 
6, 0.0579816, 1, 0, 0.101821,0.000662761) , 
4, 0.0289977, 1, 0, 0.499971,-0.00132697)    );
  // itree = 865
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842129,-0.0143742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000860038,0.00415247) , 
0, 0.00187675, 1, 0, 0.176298,-0.00295493) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.742027,0.00805468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0377577,-0.0112297) , 
5, 0.0229823, 1, 0, 0.496123,0.00119484) , 
6, 0.0174177, 1, 0, 0.425454,0.0002779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895957,0.0264271) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789844,-0.00611769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.830409,-0.020058) , 
7, 0.000741688, 1, 0, 0.806174,-0.00927558) , 
2, 0.0952148, 1, 0, 0.827773,-0.00555547) , 
7, 0.000538844, 1, 0, 0.503152,-0.00084867)    );
  // itree = 866
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583775,-0.00111308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255116,-0.0217374) , 
2, 0.306048, 1, 0, 0.554311,-0.00123839) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000949484,-0.00989357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779977,0.0186077) , 
7, 0.00032158, 1, 0, 0.20636,0.00234452) , 
2, 0.357132, 1, 0, 0.492798,-0.000604982) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921961,0.0158608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445564,-0.00799305) , 
0, 0.000958289, 1, 0, 0.599179,-0.00190651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467202,-0.0190006) , 
2, 0.381027, 1, 0, 0.572388,-0.00441349) , 
6, 0.0521838, 1, 0, 0.505557,-0.00121553)    );
  // itree = 867
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.25873,0.0166526) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584837,0.00544104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.306339,-0.00508709) , 
3, 75.6854, 1, 0, 0.505135,0.000475104) , 
4, 0.00583101, 1, 0, 0.491197,0.000904906) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533658,-0.023531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677273,-0.0115016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536007,0.0282453) , 
2, 0.166504, 1, 0, 0.593262,0.00111786) , 
6, 0.057567, 1, 0, 0.568419,-0.00621835) , 
6, 0.0550824, 1, 0, 0.499614,0.000128462)    );
  // itree = 868
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.453237,-0.000439431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.25506,0.0235349) , 
3, 37.7709, 1, 0, 0.327118,0.00399377) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575114,-0.0183936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550879,6.2543e-05) , 
3, 6.60543, 1, 0, 0.55306,-0.000505424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0749672,-0.0139811) , 
3, 138.767, 1, 0, 0.509983,-0.000993675) , 
4, 0.00871336, 1, 0, 0.492518,-0.000517347)    );
  // itree = 869
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233634,0.0304913) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.682321,0.00369139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.342402,-0.00278911) , 
2, 0.166662, 1, 0, 0.514946,-0.000137467) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.599648,-0.0204017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617189,0.00977772) , 
2, 0.166518, 1, 0, 0.609217,-0.00504014) , 
6, 0.0579816, 1, 0, 0.520482,-0.00042539) , 
4, 0.00580854, 1, 0, 0.504273,1.50763e-05)    );
  // itree = 870
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.28323,0.0313582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64811,-0.00681378) , 
6, 0.0114977, 1, 0, 0.601533,-0.000989442) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987361,0.0532354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420296,-0.00830905) , 
4, 0.0220658, 1, 0, 0.82023,0.00601272) , 
7, 0.000329386, 1, 0, 0.669014,0.00117115) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762147,-0.0173785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683427,0.00342619) , 
2, 0.237488, 1, 0, 0.728488,-0.00533518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925734,-0.00834396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0941968,0.00732077) , 
0, 0.00192442, 1, 0, 0.166513,-9.54045e-05) , 
5, 0.0276141, 1, 0, 0.330019,-0.00161991) , 
5, 0.0229688, 1, 0, 0.499428,-0.000225112)    );
  // itree = 871
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605673,-0.0111856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180579,0.00471649) , 
2, 0.23684, 1, 0, 0.476103,-0.00192665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90829,0.00907685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137492) , 
0, 0.00288014, 1, 0, 0.59739,0.00264454) , 
6, 0.0434945, 1, 0, 0.516763,-0.000394212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209454,-0.0160363) , 
2, 0.452271, 1, 0, 0.497958,-0.00104284)    );
  // itree = 872
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77806,-0.0249683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73771,-0.00597728) , 
4, 0.00878295, 1, 0, 0.743902,-0.00294166) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.444011,-0.000395959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0690395,0.0186224) , 
3, 138.769, 1, 0, 0.404088,0.000466996) , 
2, 0.0714264, 1, 0, 0.498207,-0.000477109) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601779,-0.0144398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613304,-0.0124916) , 
6, 0.0593665, 1, 0, 0.607403,-0.00705243) , 
6, 0.05798, 1, 0, 0.504045,-0.000828631)    );
  // itree = 873
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611737,0.000839297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953813,0.0325609) , 
7, 0.000261733, 1, 0, 0.7107,0.00269567) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000128294,0.00152239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0244802) , 
7, -0.00112072, 1, 0, 7.48633e-05,-0.00180473) , 
4, 0.0202924, 1, 0, 0.437313,0.000964305) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639921,0.00598983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675858,-0.0110373) , 
1, 1.3599, 1, 0, 0.649966,-7.07491e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21705,-0.0105851) , 
3, 113.253, 1, 0, 0.593955,-0.000904539) , 
6, 0.0405903, 1, 0, 0.500371,0.000211977)    );
  // itree = 874
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956218,0.0140679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.378376,-0.00507432) , 
0, 0.000961461, 1, 0, 0.579794,-4.23905e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922261,-0.0159184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118597,0.000120622) , 
0, 0.00192335, 1, 0, 0.522976,-0.00502876) , 
3, 50.4622, 1, 0, 0.562481,-0.0015618) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983189,-0.00334749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.694334,0.0130431) , 
0, 0.000133567, 1, 0, 0.807446,0.0105868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000239048,-0.00591275) , 
0, 0.00288733, 1, 0, 0.262818,0.00331315) , 
3, 88.3088, 1, 0, 0.498492,-0.000520829)    );
  // itree = 875
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992735,-0.00540632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.090331) , 
7, 0.000749761, 1, 0, 0.993658,0.000618863) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861972,8.99524e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819982,-0.0167282) , 
5, 0.019178, 1, 0, 0.84447,-0.00816855) , 
0, 9.16609e-05, 1, 0, 0.922513,-0.00357173) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00115263,-0.00965896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39677,0.0217352) , 
6, 0.049703, 1, 0, 0.0853289,0.00015614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443989,-0.0107587) , 
6, 0.0579816, 1, 0, 0.112409,-0.000243347) , 
0, 0.00192488, 1, 0, 0.497011,-0.00182352)    );
  // itree = 876
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.224291,0.0204183) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912942,-0.00572363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000511474,0.00997598) , 
0, 0.00288758, 1, 0, 0.53563,-0.00180071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.259603,0.0233543) , 
2, 0.452369, 1, 0, 0.51988,-0.00133023) , 
4, 0.00580614, 1, 0, 0.503218,-0.000898627)    );
  // itree = 877
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697796,0.0173049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639148,-0.0120298) , 
3, 54.062, 1, 0, 0.691924,0.00289055) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.292163,-0.0170476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54258,0.0061382) , 
5, 0.0217779, 1, 0, 0.480709,-0.00113937) , 
4, 0.0203025, 1, 0, 0.574266,0.000645656) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.433335,0.00938995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0102136,-0.0220755) , 
5, 0.0115945, 1, 0, 0.0925952,0.000142331) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936002,0.00940535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566178,-0.0156855) , 
0, 0.000536434, 1, 0, 0.708641,-0.00895193) , 
7, 0.000144606, 1, 0, 0.357314,-0.00376553) , 
3, 63.0771, 1, 0, 0.497483,-0.000915528)    );
  // itree = 878
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954673,-0.00454389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922339,-0.0318374) , 
3, 36.5842, 1, 0, 0.93844,-0.0116155) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.046877,-0.0106938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.505251,-0.0104494) , 
4, 0.00938485, 1, 0, 0.180911,-0.00323315) , 
0, 0.000722428, 1, 0, 0.43954,-0.00609498) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941154,-0.00688317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.35768,0.00607891) , 
0, 0.000962442, 1, 0, 0.524027,0.000394367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.235499,-0.0102824) , 
2, 0.452243, 1, 0, 0.505821,1.27758e-05) , 
4, 0.0115956, 1, 0, 0.495079,-0.000977106)    );
  // itree = 879
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986488,-0.000944152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614455,-0.0443005) , 
0, 0.000707668, 1, 0, 0.849308,-0.0112675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0877489,0.00125298) , 
2, 0.071385, 1, 0, 0.462025,-0.00528623) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945444,0.00538448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0403497,-0.00749864) , 
0, 0.00192451, 1, 0, 0.483534,0.000637504) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613326,-0.0199406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632727,0.016759) , 
6, 0.0555199, 1, 0, 0.625311,-0.00413101) , 
6, 0.0521868, 1, 0, 0.507791,-0.00017835) , 
4, 0.0116029, 1, 0, 0.500302,-0.00101414)    );
  // itree = 880
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885776,0.00395765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152806,-0.0327619) , 
2, 0.0238023, 1, 0, 0.393175,-0.0101343) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596057,0.000728596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491721,-0.0120591) , 
3, 67.2807, 1, 0, 0.575463,-0.000859831) , 
4, 0.0087279, 1, 0, 0.558581,-0.00171878) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.246719,0.00441189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.480296,0.0304228) , 
4, 0.0173877, 1, 0, 0.335479,0.0055558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0842547,-0.0091942) , 
4, 0.0260791, 1, 0, 0.209892,0.00167157) , 
3, 100.922, 1, 0, 0.498554,-0.00113513)    );
  // itree = 881
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96264,0.0213045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0175032,-0.022968) , 
0, 0.000962212, 1, 0, 0.251099,-8.18652e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872329,-0.0322829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825914,-0.00711924) , 
6, 0.0321519, 1, 0, 0.833077,-0.00637488) , 
7, 0.000161048, 1, 0, 0.580836,-0.00364736) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673953,0.00521093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.242891,0.0239779) , 
3, 111.486, 1, 0, 0.562513,0.00304462) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.288844,-0.00860442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.234623,0.00548817) , 
4, 0.0232521, 1, 0, 0.256983,-0.00169662) , 
2, 0.190406, 1, 0, 0.404221,0.000588237) , 
3, 50.3474, 1, 0, 0.500931,-0.00173107)    );
  // itree = 882
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.30196,-0.0131523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.531659,-0.0139924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426071,0.00649436) , 
3, 12.6158, 1, 0, 0.442134,0.000665946) , 
4, 0.00580275, 1, 0, 0.431998,-2.23506e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986456,-0.00143324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815133,-0.0122495) , 
0, 0.000136489, 1, 0, 0.891787,-0.00780204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00124338,0.0090486) , 
0, 0.00288758, 1, 0, 0.585434,-0.00499833) , 
6, 0.040586, 1, 0, 0.493601,-0.00202015)    );
  // itree = 883
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667729,0.0260871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84207,0.0033839) , 
6, 0.0149307, 1, 0, 0.811323,0.00163075) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554718,-0.0070762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292073,-0.00135672) , 
5, 0.0207312, 1, 0, 0.399562,-0.00174493) , 
2, 0.0476083, 1, 0, 0.487111,-0.00102719) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.468848,0.00887703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97593,0.0443476) , 
4, 0.0275292, 1, 0, 0.616928,0.00587434) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538059,0.0115266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.405651,-0.0152001) , 
2, 0.23808, 1, 0, 0.475831,-0.00164462) , 
4, 0.0289063, 1, 0, 0.559846,0.00283251) , 
6, 0.052184, 1, 0, 0.499045,-0.000393904)    );
  // itree = 884
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.216832,0.0108033) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731374,-0.0113525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660304,-0.00329433) , 
5, 0.0114011, 1, 0, 0.672965,-0.00226512) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454895,-0.00309911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272683,0.00740371) , 
3, 62.9922, 1, 0, 0.386378,6.40848e-05) , 
4, 0.0215452, 1, 0, 0.513199,-0.000966644) , 
4, 0.00580854, 1, 0, 0.496153,-0.000665967)    );
  // itree = 885
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524422,-0.0444503) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619453,-0.0419902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577778,8.63845e-05) , 
4, 0.0144867, 1, 0, 0.587528,-0.00308886) , 
3, 2.40318, 1, 0, 0.575129,-0.00747085) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.469855,-0.000782353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542144,0.0148213) , 
6, 0.0552225, 1, 0, 0.473516,2.98468e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57243,-0.0143143) , 
6, 0.0579822, 1, 0, 0.478984,-0.00039402) , 
3, 12.6158, 1, 0, 0.49378,-0.00148308)    );
  // itree = 886
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.534292,-0.00864435) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846789,0.00833209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00155321,-0.0109723) , 
5, 0.0266658, 1, 0, 0.655119,0.00245645) , 
5, 0.00829555, 1, 0, 0.645875,0.00190088) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862017,-0.00469431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689381,-0.0151257) , 
2, 0.309285, 1, 0, 0.809322,-0.00728814) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131026) , 
2, 0.309226, 1, 0, 0,-0.000120866) , 
0, 0.00385011, 1, 0, 0.237388,-0.00222315) , 
4, 0.0260833, 1, 0, 0.495543,0.000383144)    );
  // itree = 887
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634693,-0.00130688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648654,-0.0230268) , 
7, 0.000379264, 1, 0, 0.636062,-0.00232706) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918112,0.00750406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0909396,-0.00645184) , 
0, 0.00192505, 1, 0, 0.36224,0.000567016) , 
4, 0.0203117, 1, 0, 0.48841,-0.000766498) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584882,0.0149216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639476,-0.0141621) , 
6, 0.0586798, 1, 0, 0.605653,-0.00157735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488526,-0.0265622) , 
2, 0.285392, 1, 0, 0.561271,-0.00867493) , 
6, 0.0550848, 1, 0, 0.496176,-0.00160941)    );
  // itree = 888
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852697,0.0371568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128126,0.000370582) , 
2, 0.0238023, 1, 0, 0.331199,0.00199216) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571158,-0.0445487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622735,-0.013377) , 
4, 0.0100184, 1, 0, 0.597809,-0.0104522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674809,0.0258182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497097,-0.00346933) , 
4, 0.0135681, 1, 0, 0.508581,-0.000638854) , 
4, 0.0112013, 1, 0, 0.514078,-0.00124339) , 
4, 0.00870667, 1, 0, 0.496376,-0.000930203)    );
  // itree = 889
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832152,0.0141411) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.116033,-0.0103045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683179,0.0144559) , 
5, 0.00932253, 1, 0, 0.365572,0.000815379) , 
4, 0.00872811, 1, 0, 0.492264,0.003251) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961621,-0.0496183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211787,-0.00418822) , 
0, 0.000751829, 1, 0, 0.344437,-0.00369338) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752521,0.0245415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518141,8.17744e-05) , 
4, 0.0167056, 1, 0, 0.538267,0.000521618) , 
4, 0.0144969, 1, 0, 0.503528,-0.000233814) , 
5, 0.0115123, 1, 0, 0.501898,0.000270219)    );
  // itree = 890
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947921,-0.00879166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.734738,-0.0170378) , 
0, 0.00139302, 1, 0, 0.916904,-0.00750276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00139284,0.00339771) , 
0, 0.00244472, 1, 0, 0.607249,-0.0049012) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.430017,-0.000415736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758116,-0.0118929) , 
6, 0.0522124, 1, 0, 0.506639,-0.00168808) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0917638,-0.00586529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640405,0.013988) , 
6, 0.0434503, 1, 0, 0.354656,0.00189281) , 
2, 0.19035, 1, 0, 0.421716,0.000312814) , 
4, 0.0202976, 1, 0, 0.502503,-0.00195752)    );
  // itree = 891
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723939,-0.000100446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329158,-0.0125676) , 
6, 0.029844, 1, 0, 0.612856,-0.00231337) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.296465,-0.00639803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472216,0.00793833) , 
4, 0.0174149, 1, 0, 0.43482,0.00111999) , 
5, 0.0160393, 1, 0, 0.487619,0.000101776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641536,0.0234477) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.581494,-0.023751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473456,-0.00252248) , 
5, 0.0278344, 1, 0, 0.508111,-0.00671648) , 
3, 25.1806, 1, 0, 0.547707,-0.00339247) , 
6, 0.0521887, 1, 0, 0.497334,-0.000463179)    );
  // itree = 892
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852889,0.0431974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784251,-0.00483303) , 
4, 0.0086298, 1, 0, 0.797285,0.00118116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781651,-0.0210938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62346,-0.0105351) , 
5, 0.0148423, 1, 0, 0.674951,-0.00715376) , 
2, 0.0373739, 1, 0, 0.747538,-0.00220823) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881238,-0.00791617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179493,0.00423536) , 
0, 0.000962418, 1, 0, 0.304438,-0.000271226) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920402,0.0183542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.305251,-0.00141597) , 
0, 0.00192009, 1, 0, 0.577244,0.00270953) , 
6, 0.043496, 1, 0, 0.406071,0.000839247) , 
2, 0.071385, 1, 0, 0.497792,2.06671e-05)    );
  // itree = 893
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776763,0.0026053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649938,-0.019325) , 
6, 0.049315, 1, 0, 0.761399,-0.000753272) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743112,-0.0173945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316914,0.0186528) , 
4, 0.0261096, 1, 0, 0.610539,-0.00652805) , 
2, 0.0544085, 1, 0, 0.686231,-0.00363065) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0865853,0.00137385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474328,-0.0192203) , 
7, 0.000210944, 1, 0, 0.223642,-0.00494379) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000107356,-0.0138559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616931,0.0067089) , 
6, 0.0347766, 1, 0, 0.387409,0.00145892) , 
4, 0.0173902, 1, 0, 0.350761,2.61145e-05) , 
2, 0.142853, 1, 0, 0.500169,-0.00160249)    );
  // itree = 894
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933817,-0.00358751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921118,-0.0161903) , 
5, 0.0240742, 1, 0, 0.931536,-0.00320981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772691,-0.0105408) , 
3, 100.067, 1, 0, 0.917652,-0.00447515) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.788468,-0.0064992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000587694,-0.002934) , 
0, 0.00279587, 1, 0, 0.137631,-0.000829238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0211691,0.0221723) , 
3, 126.144, 1, 0, 0.116647,-0.000319891) , 
0, 0.00192484, 1, 0, 0.500412,-0.00231069)    );
  // itree = 895
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774271,-0.0108894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641756,-0.0316718) , 
2, 0.054362, 1, 0, 0.752504,-0.00499264) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61871,-0.00207885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921322,0.0252967) , 
8, 0.190981, 1, 0, 0.730131,0.00209328) , 
6, 0.0405903, 1, 0, 0.746362,-0.00304747) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.445426,-0.000313482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85474,0.0100291) , 
7, 0.00050212, 1, 0, 0.57659,0.00140872) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0355376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00030827,0.0072917) , 
2, 0.254929, 1, 0, 0.000165054,-0.00110434) , 
5, 0.0345743, 1, 0, 0.409417,0.000679893) , 
2, 0.0714111, 1, 0, 0.502132,-0.000345734)    );
  // itree = 896
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.42691,0.00674409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247671,0.0261696) , 
3, 50.355, 1, 0, 0.335085,0.00486813) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624382,-0.0047885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545358,0.000564685) , 
5, 0.0172485, 1, 0, 0.568702,-0.00038127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114308,-0.00930658) , 
3, 125.968, 1, 0, 0.518231,-0.000836624) , 
4, 0.00870241, 1, 0, 0.501525,-0.000316262)    );
  // itree = 897
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907053,-0.00401486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000683001,0.00981785) , 
0, 0.00288551, 1, 0, 0.449033,-0.00105945) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668928,-0.00745254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887456,0.0104195) , 
5, 0.0242624, 1, 0, 0.847785,0.00235548) , 
7, 0.000540999, 1, 0, 0.524599,-0.000412292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223019,-0.0140091) , 
2, 0.452279, 1, 0, 0.506445,-0.000856407)    );
  // itree = 898
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.265229,-0.00579801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705132,0.0243473) , 
5, 0.00549797, 1, 0, 0.558179,0.00348039) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.106125,-0.0180474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00560717,0.00303439) , 
2, 0.0952661, 1, 0, 0.0260239,-0.000372832) , 
5, 0.011532, 1, 0, 0.166473,0.000644127) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919583,-0.0233563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905908,0.012284) , 
2, 0.0136236, 1, 0, 0.908952,0.000710275) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799335,-0.0133427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727183,-0.00405001) , 
6, 0.0450931, 1, 0, 0.762683,-0.00572783) , 
2, 0.0714308, 1, 0, 0.804025,-0.00390814) , 
7, 0.000144607, 1, 0, 0.4991,-0.00173091)    );
  // itree = 899
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960206,0.051651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0179887,-0.023281) , 
0, 0.000961461, 1, 0, 0.246666,0.000428866) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93798,-0.0392007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735993,-0.00230942) , 
0, 0.000998092, 1, 0, 0.823446,-0.00636698) , 
7, 0.000161049, 1, 0, 0.573532,-0.0034224) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527487,-0.0102511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617425,0.00594728) , 
5, 0.00833216, 1, 0, 0.610988,0.00152748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803665,-0.00686189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000183781,0.00882432) , 
0, 0.00385011, 1, 0, 0.219718,-0.00170605) , 
4, 0.0260998, 1, 0, 0.465603,0.000325984) , 
3, 25.1956, 1, 0, 0.498216,-0.000806666)    );
  // itree = 900
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951844,0.0120359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158832,-0.0108563) , 
0, 0.00147672, 1, 0, 0.701134,0.00169012) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0190546) , 
7, -0.00112554, 1, 0, 0,-0.00200378) , 
4, 0.0202976, 1, 0, 0.423275,0.000226234) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648491,0.000964627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684204,-0.0209215) , 
1, 1.45028, 1, 0, 0.652563,-0.000671367) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.541106,-0.0202814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334224,-0.00484528) , 
3, 93.5248, 1, 0, 0.402783,-0.00710608) , 
3, 75.5222, 1, 0, 0.583736,-0.00244445) , 
6, 0.040586, 1, 0, 0.487987,-0.000850815)    );
  // itree = 901
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.827589,-0.00760573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803839,0.0777815) , 
3, 44.5885, 1, 0, 0.822429,0.00017202) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656793,-0.0269259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593136,-0.00555482) , 
2, 0.0249445, 1, 0, 0.629006,-0.0120559) , 
3, 62.4246, 1, 0, 0.767173,-0.0033212) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.484906,0.00072876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873764,0.00780675) , 
7, 0.000502538, 1, 0, 0.606303,0.00141875) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0283288) , 
6, 0.0377049, 1, 0, 0,-0.000878108) , 
5, 0.033907, 1, 0, 0.433608,0.000764531) , 
2, 0.0476176, 1, 0, 0.500853,-5.91364e-05)    );
  // itree = 902
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243057,0.0293508) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553619,-0.0191254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573018,0.00369356) , 
4, 0.00844513, 1, 0, 0.572293,0.000667786) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692683,-0.0119377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000176152,0.000772091) , 
0, 0.00288514, 1, 0, 0.163331,-0.00528406) , 
3, 113.282, 1, 0, 0.517241,-0.000133418) , 
4, 0.00580854, 1, 0, 0.502516,0.000267211)    );
  // itree = 903
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.298131,-0.0280622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582891,-0.00429778) , 
4, 0.00583324, 1, 0, 0.567754,-0.00170608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649059,-0.0257163) , 
6, 0.0579806, 1, 0, 0.572381,-0.00226033) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.433474,0.00527718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155513,-0.0103242) , 
5, 0.017289, 1, 0, 0.234709,-0.000298035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727023,0.0145404) , 
7, 0.000535426, 1, 0, 0.305773,0.000955534) , 
3, 75.6854, 1, 0, 0.497553,-0.00135775)    );
  // itree = 904
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991621,-0.0183037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997676,0.056914) , 
6, 0.0434735, 1, 0, 0.994018,0.000562748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543219,-0.0118004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826871,0.00697965) , 
0, 0.000613768, 1, 0, 0.696776,-0.0118252) , 
0, 4.58225e-05, 1, 0, 0.934497,-0.00191787) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896144,0.00271493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.776771,0.0158865) , 
3, 87.6816, 1, 0, 0.880711,0.00391118) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00118099,0.00761485) , 
2, 0.333279, 1, 0, 0.000381019,-0.000213099) , 
0, 0.00279608, 1, 0, 0.30377,0.00120826) , 
0, 0.000962442, 1, 0, 0.499652,0.000237386)    );
  // itree = 905
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988855,0.00517816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949071,0.0337464) , 
2, 0.166626, 1, 0, 0.975787,0.00329621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735185,-0.00524842) , 
0, 0.000503403, 1, 0, 0.941489,0.00216177) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.856448,-0.0191105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00260726,-0.000215297) , 
0, 0.00168781, 1, 0, 0.172653,-0.00468679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.406206,0.00450448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201921,-0.00675826) , 
2, 0.285553, 1, 0, 0.332404,-2.98066e-05) , 
4, 0.0144969, 1, 0, 0.30202,-0.000915549) , 
0, 0.000961071, 1, 0, 0.496331,1.95346e-05)    );
  // itree = 906
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919273,-0.00384673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896129,-0.0140886) , 
3, 24.0273, 1, 0, 0.907998,-0.00563135) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00346558,0.0307775) , 
2, 0.261686, 1, 0, 0.00165931,0.000630013) , 
0, 0.00288664, 1, 0, 0.580142,-0.00336639) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993776,0.00718314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598548,-0.0076517) , 
0, 4.57697e-05, 1, 0, 0.909053,-0.00259457) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848633,0.0178879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.16241e-05,-0.013226) , 
0, 0.00280052, 1, 0, 0.230961,0.00268144) , 
0, 0.000962526, 1, 0, 0.408215,0.00130228) , 
3, 50.4612, 1, 0, 0.50266,-0.00126236)    );
  // itree = 907
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753347,-0.0270603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916773,0.0601408) , 
7, 0.000303428, 1, 0, 0.800767,-0.00196725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661301,0.0184199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625356,0.00520747) , 
4, 0.0145089, 1, 0, 0.635408,0.00242051) , 
2, 0.0238037, 1, 0, 0.673733,0.00140356) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882031,0.0113042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124056,-0.00191904) , 
0, 0.00192405, 1, 0, 0.405973,0.00216092) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801955,-0.00518195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000376449,-0.00546016) , 
0, 0.00288733, 1, 0, 0.306637,-0.00202681) , 
3, 25.2487, 1, 0, 0.333254,-0.000904713) , 
2, 0.166662, 1, 0, 0.500854,0.000231525)    );
  // itree = 908
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.415536,0.00918701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468921,-0.00599495) , 
3, 6.60606, 1, 0, 0.439032,0.000375097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697378,0.00539154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676695,0.0773019) , 
1, 1.5396, 1, 0, 0.69104,0.00386445) , 
6, 0.0319048, 1, 0, 0.585119,0.00239785) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562353,-0.00587181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42337,0.00152109) , 
4, 0.014514, 1, 0, 0.459635,-0.00040432) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526648,-0.0194946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552423,-0.0046098) , 
6, 0.0509478, 1, 0, 0.548632,-0.00387763) , 
6, 0.0492903, 1, 0, 0.479189,-0.00116744) , 
3, 12.6148, 1, 0, 0.495163,-0.000629802)    );
  // itree = 909
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.500088,-0.00129952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337544,-0.0165722) , 
3, 84.0317, 1, 0, 0.475966,-0.00110606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0811782,0.0149137) , 
3, 126.153, 1, 0, 0.427149,-0.000573367) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822174,-0.0113957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859058,-0.0210133) , 
7, 0.000721261, 1, 0, 0.838507,-0.0106257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76006,0.00581053) , 
2, 0.333374, 1, 0, 0.818683,-0.00722938) , 
7, 0.000534737, 1, 0, 0.504938,-0.00189576)    );
  // itree = 910
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708775,-0.0064932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309865,0.00485636) , 
2, 0.119044, 1, 0, 0.482526,-4.77193e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712978,0.00154781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525633,-0.0190134) , 
3, 37.7946, 1, 0, 0.60458,-0.0053003) , 
6, 0.047192, 1, 0, 0.497121,-0.000675818) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603124,0.0674858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624109,0.00885725) , 
6, 0.0559185, 1, 0, 0.615034,0.00531418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41387,-0.00675804) , 
2, 0.380728, 1, 0, 0.570453,0.00329335) , 
6, 0.0521868, 1, 0, 0.508748,-4.64952e-05)    );
  // itree = 911
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741598,-0.00672376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564457,0.00942014) , 
2, 0.0743147, 1, 0, 0.662646,0.000103426) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861993,-0.00979118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.101002,-0.0035735) , 
0, 0.00192368, 1, 0, 0.361043,-0.00350578) , 
2, 0.173427, 1, 0, 0.537251,-0.00139715) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.261699,0.0155153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172089,0.000476625) , 
4, 0.0260602, 1, 0, 0.214372,0.00264615) , 
2, 0.40475, 1, 0, 0.496923,-0.000892136)    );
  // itree = 912
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998927,0.0541887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979456,-0.0192712) , 
8, 0.260259, 1, 0, 0.99629,0.000937829) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543171,-0.0126501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777812,-0.00808123) , 
0, 0.00056957, 1, 0, 0.680744,-0.0228263) , 
0, 4.57697e-05, 1, 0, 0.932627,-0.00385668) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00640556,-0.02837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00116116,0.000750293) , 
2, 0.142744, 1, 0, 0.00263578,-0.000938783) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787709,0.0132583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535642,-0.00295715) , 
2, 0.285643, 1, 0, 0.718297,0.00322737) , 
7, 0.000145067, 1, 0, 0.309957,0.000850257) , 
0, 0.000962526, 1, 0, 0.503051,-0.000609396)    );
  // itree = 913
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.262997,-0.0133966) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908908,-0.00489851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00059485,0.00851275) , 
0, 0.00288664, 1, 0, 0.506497,-0.00134104) , 
4, 0.00583008, 1, 0, 0.49247,-0.00175937) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518595,-0.0321725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553429,0.00462504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600348,-0.014801) , 
6, 0.0567821, 1, 0, 0.583146,-0.00481042) , 
6, 0.0542548, 1, 0, 0.565168,-0.0088954) , 
6, 0.0521838, 1, 0, 0.504056,-0.00289662)    );
  // itree = 914
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.224169,-0.0274026) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57112,-0.00948546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.569067,0.00220806) , 
3, 4.80634, 1, 0, 0.569218,0.00031499) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814623,-0.0114175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0411488,-0.00104855) , 
0, 0.00192505, 1, 0, 0.214445,-0.0037079) , 
3, 100.922, 1, 0, 0.509712,-0.000359765) , 
5, 0.00582184, 1, 0, 0.495354,-0.000852179)    );
  // itree = 915
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.773887,0.0310654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768196,-0.00836319) , 
8, 0.115292, 1, 0, 0.772944,0.00271654) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499197,-0.00597754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180239,0.00971965) , 
4, 0.0203633, 1, 0, 0.32856,-0.000922243) , 
2, 0.0476083, 1, 0, 0.424446,-0.000137096) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864633,-0.00846901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85732,0.0254715) , 
4, 0.0271934, 1, 0, 0.861753,-0.000118807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792503,0.00477343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.733833,-0.0173411) , 
4, 0.0265144, 1, 0, 0.763834,-0.0104369) , 
2, 0.285418, 1, 0, 0.828205,-0.00365394) , 
7, 0.000535657, 1, 0, 0.50244,-0.000816445)    );
  // itree = 916
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697641,0.0115237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493078,-0.00730516) , 
4, 0.0203077, 1, 0, 0.58553,0.000437794) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893661,-0.00910539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.28362e-05,-0.0105727) , 
0, 0.00288514, 1, 0, 0.500557,-0.00372961) , 
3, 32.9804, 1, 0, 0.535742,-0.00200401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0814278,0.0102508) , 
3, 138.543, 1, 0, 0.49485,-0.00152824)    );
  // itree = 917
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474195,-0.0187899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668759,0.00335822) , 
6, 0.0314453, 1, 0, 0.582932,-0.00169743) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.320362,0.0216911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470845,0.00106222) , 
4, 0.00870976, 1, 0, 0.455281,0.0010029) , 
3, 25.2306, 1, 0, 0.49297,0.000205613) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928609,0.0171872) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.486289,-0.00852231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348976,-0.0249623) , 
1, 1.09601, 1, 0, 0.424813,-0.012209) , 
0, 0.000955722, 1, 0, 0.577369,-0.00721305) , 
6, 0.0550809, 1, 0, 0.501907,-0.000579916)    );
  // itree = 918
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547139,0.0259325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3265,-0.00220901) , 
3, 50.2024, 1, 0, 0.439057,0.00128843) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945361,-0.0204211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562542,-0.00142754) , 
0, 0.000830549, 1, 0, 0.706709,-0.00289116) , 
4, 0.0110466, 1, 0, 0.634952,-0.00177061) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.017379) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791447,0.019232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000106823,-0.0229893) , 
4, 0.0303695, 1, 0, 0.434555,0.00220354) , 
5, 0.0229803, 1, 0, 0.341243,0.00083869) , 
4, 0.0231899, 1, 0, 0.500471,-0.000575884)    );
  // itree = 919
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626701,-0.0277235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794569,-0.00476025) , 
6, 0.0172309, 1, 0, 0.752419,-0.00346628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894353,0.0030669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000863242,-0.00482202) , 
0, 0.00192451, 1, 0, 0.32705,0.000546729) , 
2, 0.0476045, 1, 0, 0.420472,-0.00033463) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852313,-0.0115113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812583,-0.0407807) , 
2, 0.158529, 1, 0, 0.842189,-0.0113021) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75311,-0.00911522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.78408,0.0145658) , 
5, 0.0267855, 1, 0, 0.767722,-0.000308751) , 
2, 0.237805, 1, 0, 0.809929,-0.00653962) , 
7, 0.000534737, 1, 0, 0.49617,-0.00154068)    );
  // itree = 920
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.321837,-0.00978284) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82173,0.00179121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708235,0.0210694) , 
2, 0.0340129, 1, 0, 0.751629,0.00313206) , 
6, 0.011623, 1, 0, 0.708757,0.00229939) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.327697,-0.0024877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166704,-0.0150549) , 
3, 62.8998, 1, 0, 0.260044,-0.00487078) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631126,0.0114818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351096,-0.00316898) , 
4, 0.0215392, 1, 0, 0.403477,0.000252655) , 
4, 0.0173949, 1, 0, 0.369631,-0.000956297) , 
2, 0.119004, 1, 0, 0.500006,0.000295331)    );
  // itree = 921
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724848,0.0176628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671446,-0.0040089) , 
3, 42.7557, 1, 0, 0.703157,0.00171885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396197,0.0252512) , 
3, 99.7674, 1, 0, 0.66734,0.00299513) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942032,-0.00348226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794597,-0.0154545) , 
0, 0.00218227, 1, 0, 0.920124,-0.00522882) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00176906,0.0284699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131874) , 
4, 0.020294, 1, 0, 0.000586204,0.000121113) , 
0, 0.00288758, 1, 0, 0.324866,-0.00176557) , 
5, 0.0230519, 1, 0, 0.496481,0.000620036)    );
  // itree = 922
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99319,-0.00825859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965441,0.0139668) , 
8, 0.165426, 1, 0, 0.98155,0.00150181) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889132,-0.00370697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698777,-0.00934168) , 
2, 0.190418, 1, 0, 0.820792,-0.00642281) , 
0, 0.000272784, 1, 0, 0.896004,-0.00271522) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000137486,-0.00564002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00167094,0.0268685) , 
6, 0.0308899, 1, 0, 0.000584464,0.000144089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137629) , 
6, 0.0463922, 1, 0, 0.000453404,-4.90413e-05) , 
0, 0.00288733, 1, 0, 0.492678,-0.00151447)    );
  // itree = 923
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.209256,-0.0229914) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722988,0.00496206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.399691,-0.00476117) , 
2, 0.19047, 1, 0, 0.58431,-0.000261606) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794294,-0.0103663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131413) , 
0, 0.00288733, 1, 0, 0.273148,-0.00484016) , 
3, 88.3067, 1, 0, 0.51955,-0.00121452) , 
4, 0.00580854, 1, 0, 0.501119,-0.00189546)    );
  // itree = 924
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68278,0.0405881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891151,0.0209969) , 
5, 0.00778374, 1, 0, 0.796514,0.00777296) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712127,-0.00691672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61063,0.0160504) , 
2, 0.0850133, 1, 0, 0.687919,-0.000283878) , 
5, 0.0108277, 1, 0, 0.709102,0.00128778) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893605,-0.00340316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751013,-0.0203084) , 
4, 0.0262787, 1, 0, 0.86775,-0.00537931) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1494,0.0579928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0963345,-0.00238239) , 
2, 0.173601, 1, 0, 0.105065,0.00029377) , 
0, 0.00192488, 1, 0, 0.370366,-0.00167961) , 
2, 0.119044, 1, 0, 0.502259,-0.000524205)    );
  // itree = 925
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917396,-0.0382375) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.540377,-0.0288938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938326,0.0571427) , 
8, 0.063123, 1, 0, 0.743745,-0.00050935) , 
5, 0.00998402, 1, 0, 0.790176,-0.00593665) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.531675,2.04526e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.22048,0.0125306) , 
2, 0.318497, 1, 0, 0.448524,0.000809526) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640744,-0.0137262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529207,-0.00344696) , 
2, 0.182518, 1, 0, 0.574678,-0.00499005) , 
6, 0.0550843, 1, 0, 0.462542,0.000165076) , 
2, 0.0238023, 1, 0, 0.500154,-0.000535397)    );
  // itree = 926
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753693,0.00993977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0194521) , 
4, 0.0232524, 1, 0, 0.529649,0.00183163) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.208963,0.00620653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46594,-0.00918185) , 
6, 0.0290092, 1, 0, 0.311588,-0.000782169) , 
3, 63.0713, 1, 0, 0.449518,0.000871139) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578268,-0.014844) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587835,-0.00280345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598277,-0.0452724) , 
1, 1.38944, 1, 0, 0.58881,-0.00219426) , 
1, 1.08083, 1, 0, 0.58749,-0.00324853) , 
6, 0.0434945, 1, 0, 0.495655,-0.000506443)    );
  // itree = 927
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887046,0.0310197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784687,0.00167276) , 
4, 0.0086852, 1, 0, 0.804187,0.00161822) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652646,-0.0261897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635955,-0.00543361) , 
2, 0.0446974, 1, 0, 0.638905,-0.00402244) , 
2, 0.0362723, 1, 0, 0.718118,-0.00131908) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844602,0.00685757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131044) , 
0, 0.00384902, 1, 0, 0.46047,0.00208226) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793199,-0.0108819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0637515,0.00739988) , 
0, 0.00192488, 1, 0, 0.249771,-0.00224543) , 
3, 75.6854, 1, 0, 0.39535,0.000744719) , 
2, 0.0952352, 1, 0, 0.504341,4.78191e-05)    );
  // itree = 928
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906897,-0.010726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00068632,0.0105291) , 
0, 0.00288215, 1, 0, 0.506662,-0.0029653) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.457306,-0.00332752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184191,0.0102675) , 
3, 91.9041, 1, 0, 0.354525,0.000435973) , 
3, 37.843, 1, 0, 0.418281,-0.000989396) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.699114,-0.0195861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881716,-0.0016616) , 
4, 0.0240025, 1, 0, 0.849508,-0.0034125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691147,-0.013518) , 
3, 81.9934, 1, 0, 0.821823,-0.00610924) , 
7, 0.000535657, 1, 0, 0.494876,-0.00196118)    );
  // itree = 929
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782888,-0.00603162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641221,0.0178415) , 
2, 0.10296, 1, 0, 0.74411,-6.84186e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813753,-0.0110412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00166526,0.0099261) , 
0, 0.00288551, 1, 0, 0.390289,-0.00475112) , 
2, 0.166509, 1, 0, 0.578254,-0.00226347) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926974,0.00637428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109983,-0.00383992) , 
0, 0.00191994, 1, 0, 0.494276,0.00107994) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170182,-0.00859673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0881509,0.000814936) , 
2, 0.21409, 1, 0, 0.1264,-0.00260573) , 
3, 121.947, 1, 0, 0.39595,9.48303e-05) , 
3, 50.4612, 1, 0, 0.495346,-0.00119096)    );
  // itree = 930
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775175,0.0147344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653511,-0.0108757) , 
6, 0.0492854, 1, 0, 0.758956,0.00131883) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922104,-0.00860974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.12553,0.0075025) , 
0, 0.00192488, 1, 0, 0.49761,-0.00205273) , 
2, 0.0589309, 1, 0, 0.581137,-0.000975178) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965277,-0.00458796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.574082,0.0121441) , 
0, 9.15977e-05, 1, 0, 0.785275,0.00614145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.13022,-0.00780238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0441512,0.0176746) , 
4, 0.0289575, 1, 0, 0.0830226,-0.000514799) , 
0, 0.00192505, 1, 0, 0.265825,0.00121788) , 
2, 0.309448, 1, 0, 0.499974,-0.000410674)    );
  // itree = 931
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995545,0.0162623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9559,0.0197237) , 
0, 0.000364947, 1, 0, 0.978326,0.00409636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.162786,-0.0137573) , 
0, 0.00192442, 1, 0, 0.735317,0.00203644) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554369,0.00792657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484046,-0.00964097) , 
3, 25.225, 1, 0, 0.50579,-0.00340895) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694792,0.0100288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0235992) , 
5, 0.0322663, 1, 0, 0.317287,0.000735563) , 
5, 0.0229748, 1, 0, 0.395235,-0.000978226) , 
2, 0.0952352, 1, 0, 0.506986,1.23965e-05)    );
  // itree = 932
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.795069,0.00500599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764265,-0.0249928) , 
6, 0.0305222, 1, 0, 0.787663,-0.00253008) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843449,0.00635578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.50935e-05,-0.0102638) , 
0, 0.00288438, 1, 0, 0.284136,0.00140903) , 
2, 0.0476176, 1, 0, 0.411547,0.00041229) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883867,-0.0205621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898311,-0.00331544) , 
0, 0.00151135, 1, 0, 0.890829,-0.00765902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00142944,0.0250407) , 
0, 0.00288758, 1, 0, 0.590942,-0.00488022) , 
6, 0.0377026, 1, 0, 0.494995,-0.00204959)    );
  // itree = 933
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840125,-0.0190529) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972252,0.0265363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918747,-0.00543532) , 
6, 0.0256891, 1, 0, 0.926306,-0.00177092) , 
6, 0.0173895, 1, 0, 0.919554,-0.00286707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00173414,-0.008278) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9469,0.00898458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000682097,-0.00182987) , 
0, 0.00279672, 1, 0, 0.151911,0.000621647) , 
5, 0.0230857, 1, 0, 0.112493,1.44511e-05) , 
0, 0.00192505, 1, 0, 0.493915,-0.00134737)    );
  // itree = 934
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974641,-0.00175304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92877,0.0199965) , 
0, 0.000229113, 1, 0, 0.956813,0.00397621) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865669,-0.025465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943182,-0.0115055) , 
5, 0.0170251, 1, 0, 0.930048,-0.00556425) , 
4, 0.0142604, 1, 0, 0.938986,-0.00237836) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564448,-0.0184763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421322,-0.00128361) , 
5, 0.0174026, 1, 0, 0.465252,-0.00335393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766483,0.00671071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.93057e-05,-0.0104193) , 
0, 0.0037126, 1, 0, 0.255664,0.00158464) , 
2, 0.095209, 1, 0, 0.30606,0.00039715) , 
0, 0.000962418, 1, 0, 0.50191,-0.000461693)    );
  // itree = 935
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981447,-0.0202011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726142,-0.0184145) , 
2, 0.0476176, 1, 0, 0.888472,-0.0134737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909468,-0.00766287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971209,0.0157215) , 
1, 1.65977, 1, 0, 0.930187,-0.000676276) , 
5, 0.0130734, 1, 0, 0.920793,-0.00355806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00244644,-0.0079656) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.525219,0.0138573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.57289e-05,-0.0151831) , 
4, 0.0303725, 1, 0, 0.177039,0.000638598) , 
4, 0.0231959, 1, 0, 0.116291,-0.000248074) , 
0, 0.00192451, 1, 0, 0.497376,-0.00181598)    );
  // itree = 936
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721478,-0.015239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408437,0.0163061) , 
4, 0.0202976, 1, 0, 0.569783,-0.00206305) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583402,0.010063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.378136,-0.00348692) , 
4, 0.0173939, 1, 0, 0.450242,0.00068036) , 
3, 25.2309, 1, 0, 0.486488,-0.000151469) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60852,-0.00499723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548773,-0.0258712) , 
1, 1.1116, 1, 0, 0.575697,-0.0105639) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638092,0.028799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.482019,-0.0127551) , 
2, 0.293274, 1, 0, 0.533083,-0.00160227) , 
2, 0.190212, 1, 0, 0.553088,-0.00580916) , 
6, 0.052187, 1, 0, 0.497118,-0.00105454)    );
  // itree = 937
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951689,-0.00961884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338696,0.00835554) , 
0, 0.000776336, 1, 0, 0.578858,3.58727e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722703,-0.000255753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539095,-0.0218561) , 
3, 37.7304, 1, 0, 0.618968,-0.00845315) , 
7, 0.000253639, 1, 0, 0.586216,-0.00154781) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509342,-0.00308092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708505,0.0180082) , 
6, 0.0550843, 1, 0, 0.535814,8.83153e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857088,0.0163231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110966,0.00152767) , 
0, 0.00192451, 1, 0, 0.324853,0.00283018) , 
2, 0.309361, 1, 0, 0.469583,0.000949119) , 
4, 0.0173966, 1, 0, 0.507845,0.000129994)    );
  // itree = 938
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911522,-0.038595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73657,-0.00687936) , 
5, 0.0099356, 1, 0, 0.788551,-0.00490245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576693,0.00519284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.213396,-0.00421562) , 
2, 0.159839, 1, 0, 0.371308,-0.000200178) , 
2, 0.0238042, 1, 0, 0.423056,-0.000783371) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869471,-0.0139872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775368,0.00374773) , 
0, 0.00167105, 1, 0, 0.819809,-0.00300068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709734,-0.013638) , 
2, 0.404298, 1, 0, 0.804542,-0.00487256) , 
7, 0.000538844, 1, 0, 0.497624,-0.00158268)    );
  // itree = 939
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662745,0.0178313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172509,0.0173246) , 
6, 0.0144485, 1, 0, 0.328881,0.00447103) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691827,-0.00323777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671716,-0.0115174) , 
6, 0.052182, 1, 0, 0.689086,-0.00152948) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.463472,0.00836995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.26902,-0.00558539) , 
2, 0.34685, 1, 0, 0.390394,0.00078119) , 
2, 0.142835, 1, 0, 0.523222,-0.000246365) , 
4, 0.00870211, 1, 0, 0.50486,0.000199342)    );
  // itree = 940
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610158,-0.0120249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575358,0.000423698) , 
3, 14.3837, 1, 0, 0.582691,-0.000752445) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805447,-0.014108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0351912,0.00695191) , 
0, 0.00192489, 1, 0, 0.218314,-0.00486624) , 
3, 100.695, 1, 0, 0.52364,-0.00141912) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.323136,0.0151606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15953,0.00728434) , 
4, 0.0260602, 1, 0, 0.235436,0.00344361) , 
2, 0.428475, 1, 0, 0.496625,-0.000963304)    );
  // itree = 941
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.462814,0.0351798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947259,-0.0367334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904904,9.46862e-05) , 
6, 0.0240864, 1, 0, 0.918998,-0.00541725) , 
7, 3.9511e-05, 1, 0, 0.800897,-0.00288927) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914907,0.00141646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915141,0.0261787) , 
0, 0.00174035, 1, 0, 0.914925,0.00202271) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000741272,0.0122257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463708,-0.00629289) , 
7, 0.000143226, 1, 0, 0.115849,-0.000639149) , 
0, 0.00192484, 1, 0, 0.466584,0.000529208) , 
2, 0.0238042, 1, 0, 0.504937,0.000137026)    );
  // itree = 942
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921336,-0.00480618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753534,-0.00840785) , 
3, 100.211, 1, 0, 0.907291,-0.00337149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 5.72076e-05,-0.0101739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00259342,0.0296336) , 
6, 0.0372723, 1, 0, 0.000687756,0.000148372) , 
0, 0.00288758, 1, 0, 0.479723,-0.00171147) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643955,-0.00687505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592076,0.0334222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443078,0.00199809) , 
2, 0.356847, 1, 0, 0.55288,0.00575006) , 
3, 25.0452, 1, 0, 0.581585,0.00327251) , 
6, 0.0521868, 1, 0, 0.49534,-0.000947334)    );
  // itree = 943
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587465,-0.011562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601015,-0.0606304) , 
7, 0.000144178, 1, 0, 0.592257,-0.0128686) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870525,-0.0189832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357808,-0.00193256) , 
2, 0.0238042, 1, 0, 0.469879,-0.00253892) , 
3, 25.1413, 1, 0, 0.507579,-0.00572115) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881375,0.0934894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554057,0.00293686) , 
2, 0.119089, 1, 0, 0.722198,0.00465644) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.151121,-0.0129144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54134,-0.000656984) , 
5, 0.017289, 1, 0, 0.481505,-0.000722629) , 
4, 0.0167214, 1, 0, 0.501983,-0.000264981) , 
4, 0.0145085, 1, 0, 0.503337,-0.00158538)    );
  // itree = 944
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996775,0.034208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751942,-0.00358785) , 
0, 5.22925e-05, 1, 0, 0.940152,0.000650507) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959036,0.0033294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876917,0.0263735) , 
2, 0.166407, 1, 0, 0.925592,0.00863229) , 
0, 0.00109917, 1, 0, 0.935618,0.0031357) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.162172,-0.00990048) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784572,0.00818122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000458767,-0.00387403) , 
0, 0.00279671, 1, 0, 0.108466,0.000569857) , 
2, 0.0714068, 1, 0, 0.116631,0.000133792) , 
0, 0.00192488, 1, 0, 0.507526,0.00156658)    );
  // itree = 945
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510544,-0.00696362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784812,0.023579) , 
5, 0.0107055, 1, 0, 0.669941,0.00236617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.185985,-0.021561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712229,0.00220619) , 
6, 0.0377003, 1, 0, 0.528379,-0.000459101) , 
5, 0.0172737, 1, 0, 0.574092,0.000453225) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677249,-0.0200431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441442,-0.0109762) , 
5, 0.0209948, 1, 0, 0.545531,-0.00688429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470567,-0.00403612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.22149,0.00546612) , 
2, 0.23805, 1, 0, 0.363944,-0.000266698) , 
3, 60.5868, 1, 0, 0.395669,-0.00142284) , 
3, 50.388, 1, 0, 0.492831,-0.000401211)    );
  // itree = 946
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.324288,-0.00301197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65387,0.0113346) , 
6, 0.0215562, 1, 0, 0.515812,0.00150527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00992211,-0.00937049) , 
2, 0.333145, 1, 0, 0.411126,0.000764761) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901913,-0.00653745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000792889,0.00969995) , 
0, 0.00288758, 1, 0, 0.617946,-0.0025309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468146,0.0155717) , 
2, 0.428075, 1, 0, 0.602762,-0.00167138) , 
6, 0.0376997, 1, 0, 0.499582,-0.000359714)    );
  // itree = 947
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947944,-0.00104352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879315,0.0172816) , 
0, 0.00146365, 1, 0, 0.931169,0.00183493) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00144807,-0.0106287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131012) , 
0, 0.00923408, 1, 0, 0.000718511,-0.000932077) , 
0, 0.00258202, 1, 0, 0.64957,0.000997496) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762139,-0.0138334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000177396,0.00526404) , 
0, 0.0030286, 1, 0, 0.302706,-0.00516117) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0333776,-0.0134836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861784,0.0342147) , 
6, 0.0579807, 1, 0, 0.192987,0.00128424) , 
5, 0.0288085, 1, 0, 0.242264,-0.00161055) , 
4, 0.0260955, 1, 0, 0.502386,5.50554e-05)    );
  // itree = 948
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499034,-0.0057721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485453,-0.0223991) , 
3, 34.2379, 1, 0, 0.49788,-0.00259521) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52236,0.0067008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255356,-0.00482421) , 
4, 0.0173957, 1, 0, 0.357504,0.000270872) , 
3, 37.8461, 1, 0, 0.417454,-0.000953132) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857601,0.0150567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938006,-0.00466047) , 
5, 0.0261054, 1, 0, 0.901723,0.000671424) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722987,0.00784193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874326,0.0288029) , 
1, 1.1288, 1, 0, 0.815147,0.00785553) , 
0, 0.00179141, 1, 0, 0.856969,0.00438515) , 
7, 0.000534736, 1, 0, 0.499807,4.71151e-05)    );
  // itree = 949
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936227,-0.00608592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895705,0.0119835) , 
6, 0.0458796, 1, 0, 0.928247,-0.00156124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898289,-0.0156333) , 
5, 0.0277498, 1, 0, 0.926313,-0.00259591) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677597,0.00828731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000188495,0.000852653) , 
0, 0.00366696, 1, 0, 0.123784,0.000907742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0737561,-0.0152306) , 
2, 0.428475, 1, 0, 0.116735,0.000216014) , 
0, 0.00192451, 1, 0, 0.500997,-0.00111865)    );
  // itree = 950
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.35633,-0.00488467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654202,0.00924804) , 
6, 0.0215319, 1, 0, 0.515751,0.00073743) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647255,-0.00818404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691532,-0.0405879) , 
1, 1.69025, 1, 0, 0.650209,-0.00371304) , 
6, 0.034788, 1, 0, 0.584076,-0.00152409) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.489793,0.0130779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863802,0.00154238) , 
5, 0.0226349, 1, 0, 0.710467,0.0053127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131221) , 
0, 0.00385011, 1, 0, 0.264702,0.00180397) , 
2, 0.309454, 1, 0, 0.501412,-0.000662687)    );
  // itree = 951
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940313,0.0116583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00892927,-0.0104367) , 
0, 0.00136809, 1, 0, 0.602827,0.00199966) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.392774,-0.0176768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261684,0.00125118) , 
3, 37.8458, 1, 0, 0.313416,-0.00156322) , 
5, 0.0172454, 1, 0, 0.421428,-0.000233516) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511986,-0.00969033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9587,0.0141966) , 
1, 1.28157, 1, 0, 0.740332,-0.00160286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666118,-0.00210238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976323,0.0417859) , 
5, 0.0262669, 1, 0, 0.874457,0.00674471) , 
4, 0.0248862, 1, 0, 0.836379,0.00437486) , 
7, 0.000538844, 1, 0, 0.500291,0.00064232)    );
  // itree = 952
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243038,0.0145655) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69299,0.00336597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125794,-0.00734756) , 
4, 0.021553, 1, 0, 0.434247,0.000190554) , 
4, 0.00581861, 1, 0, 0.421751,0.000547321) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.860369,-0.0124897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883059,0.0185945) , 
3, 14.3174, 1, 0, 0.874109,0.000425162) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776302,-0.0104718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777334,-0.0187723) , 
7, 0.000703181, 1, 0, 0.776797,-0.0136448) , 
3, 37.5667, 1, 0, 0.821178,-0.00722799) , 
7, 0.000535657, 1, 0, 0.498105,-0.000939009)    );
  // itree = 953
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64783,-0.0174463) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945374,0.019878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907624,-0.00608225) , 
6, 0.0253197, 1, 0, 0.913033,-0.00223318) , 
5, 0.00699947, 1, 0, 0.89981,-0.00337614) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00287874,0.0482037) , 
2, 0.238039, 1, 0, 0.00145786,0.00068434) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130964) , 
0, 0.0119743, 1, 0, 0,-0.000259955) , 
3, 50.3908, 1, 0, 0.000662641,0.000169256) , 
0, 0.00288758, 1, 0, 0.500652,-0.00180223)    );
  // itree = 954
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798344,-0.0114092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362847,0.00386559) , 
5, 0.0211128, 1, 0, 0.621461,-0.00228378) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545424,-0.0506631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604381,-0.00866749) , 
6, 0.0546758, 1, 0, 0.585888,-0.0103875) , 
6, 0.0521879, 1, 0, 0.616267,-0.00346685) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819648,0.00783761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00041855,-0.00891566) , 
0, 0.00288438, 1, 0, 0.350767,0.00185196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.133314,-0.0118933) , 
3, 100.795, 1, 0, 0.302919,0.000320147) , 
2, 0.238088, 1, 0, 0.500775,-0.00207105)    );
  // itree = 955
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.725263,-0.0225639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922401,-0.00507773) , 
5, 0.00731416, 1, 0, 0.912147,-0.00337709) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.61689e-05,-0.00868571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00215758,0.0119194) , 
2, 0.33316, 1, 0, 0.000757271,9.90962e-05) , 
0, 0.00288664, 1, 0, 0.56831,-0.00206564) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911889,0.043842) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.172629,0.00462157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0884396,-0.011667) , 
2, 0.285435, 1, 0, 0.138332,-0.000650039) , 
0, 0.000962527, 1, 0, 0.263406,0.00142458) , 
3, 88.189, 1, 0, 0.502267,-0.00130965)    );
  // itree = 956
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774343,-0.0148382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924611,-0.00358148) , 
6, 0.014495, 1, 0, 0.917371,-0.00247216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528952,-0.0130528) , 
0, 0.00219832, 1, 0, 0.893319,-0.00320393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131903) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00122319,0.0140933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000262974,-0.00372432) , 
5, 0.0287121, 1, 0, 0.000639462,9.02186e-05) , 
4, 0.0173949, 1, 0, 0.00046663,-9.63138e-05) , 
0, 0.00288733, 1, 0, 0.499217,-0.00183224)    );
  // itree = 957
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926787,-0.00307034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670986,-0.0125623) , 
0, 0.00219881, 1, 0, 0.913428,-0.00212735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660802,-0.0109849) , 
3, 112.939, 1, 0, 0.897445,-0.00332899) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00157486,0.0225861) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000499098,0.00477299) , 
6, 0.040588, 1, 0, 0.000153218,-0.000143551) , 
3, 25.253, 1, 0, 0.000501355,6.84799e-05) , 
0, 0.00288733, 1, 0, 0.497151,-0.00181274)    );
  // itree = 958
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0992149,0.0323643) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691354,-0.00896949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.265168,-0.00269453) , 
5, 0.0127905, 1, 0, 0.42342,-0.00201631) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671012,0.00923676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572003,-0.00123697) , 
3, 25.1967, 1, 0, 0.6027,0.000407761) , 
6, 0.031063, 1, 0, 0.539188,-0.000450997) , 
6, 0.0086971, 1, 0, 0.502548,-8.07969e-05)    );
  // itree = 959
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.459788,-0.0241971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.319721,0.0187796) , 
3, 49.9398, 1, 0, 0.396809,-0.00212082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654097,-0.0143765) , 
5, 0.0091606, 1, 0, 0.485998,-0.00472279) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952056,0.00891376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149828,-0.0116843) , 
0, 0.00192335, 1, 0, 0.575932,0.000633119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796605,-0.0114904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0954411,0.00328619) , 
0, 0.00191956, 1, 0, 0.281506,-0.00389189) , 
2, 0.333323, 1, 0, 0.50717,-0.000423673) , 
5, 0.0113139, 1, 0, 0.504101,-0.00104694)    );
  // itree = 960
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666162,-0.00942964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55096,0.000642133) , 
5, 0.00714256, 1, 0, 0.562892,-0.000756124) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640719,-0.0474492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704225,-0.00278934) , 
4, 0.0167575, 1, 0, 0.670358,-0.0165596) , 
4, 0.015732, 1, 0, 0.581336,-0.00346846) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616943,-0.0162117) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533393,0.00688735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352803,-0.00320165) , 
2, 0.227661, 1, 0, 0.443469,0.000218816) , 
2, 0.0237848, 1, 0, 0.45562,-5.09251e-05) , 
4, 0.0173939, 1, 0, 0.496233,-0.00115498)    );
  // itree = 961
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954341,0.000484924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899007,0.0151393) , 
0, 0.000457697, 1, 0, 0.941728,0.00218646) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.285697,-0.0130172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172219,-0.00116153) , 
4, 0.014492, 1, 0, 0.196308,-0.00260298) , 
0, 0.000961416, 1, 0, 0.419556,-0.00116858) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913084,-0.00301773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702021,0.0248382) , 
0, 0.0014446, 1, 0, 0.794929,0.00432574) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303902,-0.0145328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.242356,0.000432394) , 
2, 0.119112, 1, 0, 0.257272,-0.00128026) , 
5, 0.0287219, 1, 0, 0.612737,0.00242607) , 
6, 0.0376919, 1, 0, 0.508416,0.000484895)    );
  // itree = 962
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651411,0.0112331) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.134513,0.0091684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0471845,-0.0176273) , 
3, 63.0911, 1, 0, 0.0960861,-0.00045103) , 
4, 0.00870463, 1, 0, 0.214896,0.00106166) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889971,-0.0143002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603883,-0.00540747) , 
5, 0.0128403, 1, 0, 0.644952,-0.00330425) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615959,0.0051368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.469387,-0.00504806) , 
3, 37.7628, 1, 0, 0.531389,-0.000366014) , 
4, 0.0203121, 1, 0, 0.579614,-0.00161375) , 
6, 0.0203188, 1, 0, 0.497763,-0.00101333)    );
  // itree = 963
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968364,-0.0242161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98377,0.0161285) , 
7, 0.000178398, 1, 0, 0.980539,0.000469493) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781558,0.00184723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829245,-0.0107824) , 
6, 0.0293236, 1, 0, 0.817296,-0.00784238) , 
0, 0.000274451, 1, 0, 0.892465,-0.00401501) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132173) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00145051,0.0156507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135841) , 
5, 0.0288156, 1, 0, 0.000538274,2.68833e-05) , 
4, 0.0174011, 1, 0, 0.000395422,-0.000128593) , 
0, 0.00288725, 1, 0, 0.502725,-0.00231706)    );
  // itree = 964
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712018,0.0346974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185199,0.0199636) , 
6, 0.0145215, 1, 0, 0.354017,0.00717325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941893,-0.00600166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351453,0.00675279) , 
0, 0.000962442, 1, 0, 0.536383,0.000619287) , 
4, 0.00873007, 1, 0, 0.518375,0.00126646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197632,-0.0236639) , 
2, 0.452271, 1, 0, 0.498169,0.000618923)    );
  // itree = 965
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677178,0.00494445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192248,-0.00882491) , 
4, 0.0174011, 1, 0, 0.421017,3.15075e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752421,0.0204836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415371,-0.00570538) , 
4, 0.0232276, 1, 0, 0.628959,0.00336835) , 
6, 0.039905, 1, 0, 0.473293,0.00087038) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654788,0.000251983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416405,-0.0123523) , 
3, 62.9875, 1, 0, 0.570631,-0.00228418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451794,-0.018746) , 
2, 0.428308, 1, 0, 0.555557,-0.00400262) , 
6, 0.0492894, 1, 0, 0.491572,-0.000212367)    );
  // itree = 966
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764853,0.00655359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463794,-0.00527954) , 
2, 0.102001, 1, 0, 0.585726,-0.000555055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115942,-0.00913412) , 
3, 125.87, 1, 0, 0.535181,-0.00107738) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260362,-0.017987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180816,-0.00198177) , 
3, 50.4749, 1, 0, 0.216449,-0.00707596) , 
2, 0.428467, 1, 0, 0.503526,-0.00167314)    );
  // itree = 967
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957908,0.0586149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945831,-0.00172482) , 
4, 0.00892199, 1, 0, 0.947227,0.00102729) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.191951,-0.0177815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.373066,-0.00214229) , 
4, 0.014509, 1, 0, 0.338759,-0.00188889) , 
0, 0.000961838, 1, 0, 0.54042,-0.000922397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.052206,-0.0117479) , 
3, 151.383, 1, 0, 0.503286,-0.00134301)    );
  // itree = 968
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941557,0.0067387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677289,-0.0176845) , 
4, 0.0281033, 1, 0, 0.924926,0.00157808) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750623,-0.00460256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673446,0.0242393) , 
3, 37.588, 1, 0, 0.709072,0.007019) , 
0, 0.00205638, 1, 0, 0.903706,0.00211296) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00122746,-0.0080664) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000288768,0.0112006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131018) , 
3, 37.9163, 1, 0, 9.86388e-05,-3.11423e-05) , 
0, 0.00784483, 1, 0, 0.000346436,-0.000219843) , 
0, 0.00288758, 1, 0, 0.500767,0.00107242)    );
  // itree = 969
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816188,-0.0264135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807994,0.0113183) , 
3, 7.21249, 1, 0, 0.809046,0.000313057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912619,-0.0145894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.320817,-0.00350276) , 
0, 0.000962026, 1, 0, 0.477066,-0.00297728) , 
2, 0.0714068, 1, 0, 0.575533,-0.00200135) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899571,0.0025305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827248,0.0161779) , 
3, 110.9, 1, 0, 0.878574,0.0055997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0015041,0.014157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308655,-0.00739393) , 
7, 0.000145067, 1, 0, 0.0585301,-0.000389576) , 
0, 0.00192505, 1, 0, 0.309117,0.00144062) , 
3, 75.6949, 1, 0, 0.500169,-0.00102769)    );
  // itree = 970
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609428,-0.0119869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986579,0.0855066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181107,-0.0177385) , 
4, 0.0106382, 1, 0, 0.401151,-0.000928605) , 
6, 0.0175894, 1, 0, 0.4743,-0.00512986) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952881,0.000855756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866704,0.0148148) , 
2, 0.309529, 1, 0, 0.939221,0.00166477) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716311,-0.00649583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.9126e-05,-0.00789934) , 
0, 0.00366139, 1, 0, 0.126739,-0.00105963) , 
0, 0.00192206, 1, 0, 0.49799,0.000185242) , 
5, 0.0115118, 1, 0, 0.494604,-0.000574528)    );
  // itree = 971
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943749,-0.00920027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821867,-0.012082) , 
3, 87.3949, 1, 0, 0.929273,-0.00449955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131056) , 
0, 0.00384413, 1, 0, 0.639388,-0.00313199) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844729,0.0015935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859218,0.0116429) , 
0, 0.00128223, 1, 0, 0.849961,0.00423146) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712327,-0.00708212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000628042,-0.00166121) , 
0, 0.00279654, 1, 0, 0.0946279,-0.000997495) , 
0, 0.00192451, 1, 0, 0.325916,0.000603648) , 
2, 0.190418, 1, 0, 0.497365,-0.00143951)    );
  // itree = 972
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801457,-0.013367) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779232,0.00398908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557465,0.0209556) , 
3, 62.9341, 1, 0, 0.710515,0.00192191) , 
2, 0.00906808, 1, 0, 0.723705,0.00101887) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736117,-0.0153542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925153,-0.00309245) , 
5, 0.0179179, 1, 0, 0.878939,-0.00559968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.172604,0.00684342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384342,-0.00816584) , 
6, 0.0434892, 1, 0, 0.247436,-0.000572283) , 
0, 0.000962526, 1, 0, 0.382409,-0.0016468) , 
2, 0.0952167, 1, 0, 0.495655,-0.000762298)    );
  // itree = 973
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792464,0.0212781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442385,-0.0114715) , 
3, 99.7718, 1, 0, 0.754246,0.00154895) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.430747,-0.00506886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0923528,0.021015) , 
3, 126.142, 1, 0, 0.387981,-0.000883742) , 
2, 0.0714024, 1, 0, 0.491692,-0.000194902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658642,0.000516422) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505812,-0.0133169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490854,-0.00435191) , 
2, 0.191117, 1, 0, 0.497482,-0.00725495) , 
3, 37.7756, 1, 0, 0.568053,-0.00399355) , 
6, 0.0550824, 1, 0, 0.49964,-0.000590264)    );
  // itree = 974
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928473,-0.0444347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.40204,0.000840878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138186,-0.00516513) , 
6, 0.0203931, 1, 0, 0.233348,-0.000407265) , 
0, 0.000617993, 1, 0, 0.475079,-0.00823031) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533015,-0.0013012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608291,-0.0107417) , 
6, 0.052182, 1, 0, 0.546326,-0.00112494) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.139453,0.00772256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538426,0.0173439) , 
6, 0.0492767, 1, 0, 0.247554,0.00317547) , 
2, 0.404755, 1, 0, 0.507822,-0.000570727) , 
5, 0.011219, 1, 0, 0.503421,-0.00160034)    );
  // itree = 975
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777025,-0.0152532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71492,0.010847) , 
2, 0.0420532, 1, 0, 0.758146,-0.00205803) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611847,-0.0265536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595534,0.00818469) , 
2, 0.083531, 1, 0, 0.605134,-0.0111475) , 
2, 0.0679888, 1, 0, 0.725523,-0.00399593) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894703,0.00845317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.68646e-05,-0.00744926) , 
0, 0.00288608, 1, 0, 0.460935,0.0020793) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732877,-0.00879053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00192363,0.0226569) , 
0, 0.00288677, 1, 0, 0.266148,-0.0031258) , 
2, 0.307165, 1, 0, 0.384093,2.59197e-05) , 
2, 0.095209, 1, 0, 0.49586,-0.00129064)    );
  // itree = 976
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984296,0.0249247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95034,-0.00966441) , 
4, 0.0121213, 1, 0, 0.961099,0.000424865) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875072,0.0119043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831103,0.0406813) , 
3, 47.1253, 1, 0, 0.854227,0.00917026) , 
2, 0.261897, 1, 0, 0.941804,0.00200376) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.463562,0.00403333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.102247,-0.0105697) , 
5, 0.0196418, 1, 0, 0.238626,2.5541e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826763,-0.0124501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337436,-0.00808677) , 
0, 0.00188704, 1, 0, 0.428766,-0.00588278) , 
6, 0.0434945, 1, 0, 0.30313,-0.00199401) , 
0, 0.000962526, 1, 0, 0.500843,-0.000756431)    );
  // itree = 977
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544209,0.000898767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327018,0.0465492) , 
3, 112.301, 1, 0, 0.533113,0.000581803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0834693,-0.010612) , 
3, 138.767, 1, 0, 0.495019,-2.74538e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59346,-0.017492) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729845,0.0188414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396545,-0.0186123) , 
1, 1.07297, 1, 0, 0.52885,0.00049957) , 
5, 0.0290534, 1, 0, 0.554475,-0.00656168) , 
6, 0.055081, 1, 0, 0.50137,-0.000725519)    );
  // itree = 978
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.385465,-0.0254959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696829,0.00526908) , 
5, 0.00834592, 1, 0, 0.487151,-0.00777862) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519268,-0.000555527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132832,-0.0129751) , 
2, 0.428562, 1, 0, 0.48254,-0.000628768) , 
5, 0.0103081, 1, 0, 0.483163,-0.00159522) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989632,0.0601925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454385,0.00267788) , 
4, 0.0273154, 1, 0, 0.746404,0.00709088) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.149805,-0.0170215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.661965,0.0278673) , 
4, 0.0289042, 1, 0, 0.393288,-0.000209662) , 
5, 0.0288623, 1, 0, 0.588428,0.00382479) , 
6, 0.049283, 1, 0, 0.506741,-0.000381208)    );
  // itree = 979
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658522,-0.015692) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874452,0.00272493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0393054,-0.026436) , 
5, 0.0172799, 1, 0, 0.572863,-0.00233455) , 
5, 0.00743487, 1, 0, 0.581709,-0.00336711) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78935,-0.00955458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201455,0.0248928) , 
4, 0.0277422, 1, 0, 0.546798,-0.00156928) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892892,0.0172345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.120396,0.00464233) , 
0, 0.00192405, 1, 0, 0.356482,0.00261434) , 
2, 0.237882, 1, 0, 0.460739,0.000322511) , 
4, 0.0174057, 1, 0, 0.500069,-0.000877053)    );
  // itree = 980
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.477168,-0.00794363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722519,0.0301928) , 
4, 0.0131278, 1, 0, 0.515711,-0.0019568) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638503,0.00577865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0191554,-0.0095359) , 
5, 0.0230064, 1, 0, 0.37024,0.000636965) , 
4, 0.0145085, 1, 0, 0.412696,-0.000120021) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893347,-0.00214027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772824,-0.0195862) , 
6, 0.0567023, 1, 0, 0.856244,-0.0061461) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758182,-0.0034133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858556,0.0132878) , 
1, 1.18649, 1, 0, 0.805015,0.000939691) , 
3, 50.0352, 1, 0, 0.836108,-0.00336099) , 
7, 0.000534737, 1, 0, 0.493856,-0.000741256)    );
  // itree = 981
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504668,-0.013661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839957,0.0209819) , 
6, 0.0118969, 1, 0, 0.805269,0.00158163) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576069,-0.00677978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375448,0.000554319) , 
5, 0.0230124, 1, 0, 0.465069,-0.00156733) , 
2, 0.0714111, 1, 0, 0.563114,-0.000659802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666787,-0.00671996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000164065,-0.00587801) , 
0, 0.00288758, 1, 0, 0.158116,-0.00332681) , 
3, 113.355, 1, 0, 0.506786,-0.00103073)    );
  // itree = 982
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723375,0.00108368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962543,0.0187081) , 
7, 0.000244081, 1, 0, 0.840561,0.00330284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0264304,-0.0136198) , 
5, 0.0232192, 1, 0, 0.643805,0.00172612) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851734,-0.01326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865245,0.02145) , 
7, 0.000759679, 1, 0, 0.855779,-0.00528707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.501856,0.0108774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000374391,-0.0113256) , 
4, 0.0303816, 1, 0, 0.170823,0.00056206) , 
0, 0.00192505, 1, 0, 0.338967,-0.000873795) , 
4, 0.0231891, 1, 0, 0.501258,0.00051036)    );
  // itree = 983
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987209,0.00973332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949847,-0.0148139) , 
4, 0.0280667, 1, 0, 0.98357,0.00044997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614017,-0.015216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883896,-0.00599571) , 
0, 0.000746109, 1, 0, 0.850374,-0.00803622) , 
0, 0.000274734, 1, 0, 0.922651,-0.0034313) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00158608,-0.0010125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499554,-0.0148594) , 
7, 0.000433346, 1, 0, 0.0795559,-0.0017068) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908188,0.0137726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000203613,-0.00732963) , 
0, 0.00280941, 1, 0, 0.146066,0.000852347) , 
4, 0.0261198, 1, 0, 0.118136,-0.000222333) , 
0, 0.00192451, 1, 0, 0.501524,-0.00175155)    );
  // itree = 984
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553909,0.00177597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677628,-0.00935581) , 
6, 0.0579816, 1, 0, 0.560661,0.000201602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272077,-0.00861705) , 
3, 115.292, 1, 0, 0.542032,-5.06609e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0571215,-0.0139465) , 
3, 151.382, 1, 0, 0.503708,-0.000675473)    );
  // itree = 985
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641505,-0.023587) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.471819,0.0309251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38755,-0.0148113) , 
3, 37.4241, 1, 0, 0.42544,-0.00284294) , 
6, 0.0173235, 1, 0, 0.500348,-0.00802902) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694087,-0.00759319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383748,0.00879723) , 
2, 0.23797, 1, 0, 0.579773,-0.000222562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.58513,-0.0135067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0936538,0.0175374) , 
5, 0.0270667, 1, 0, 0.30169,-0.00366105) , 
3, 75.6877, 1, 0, 0.49903,-0.00122094) , 
5, 0.0114925, 1, 0, 0.499212,-0.00215797)    );
  // itree = 986
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925717,-0.0122776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871403,0.00336436) , 
0, 0.00137092, 1, 0, 0.908325,-0.00329352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651648,-0.00858964) , 
3, 112.673, 1, 0, 0.893575,-0.00413332) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00126824,0.0122951) , 
6, 0.0309205, 1, 0, 0.000395604,-6.22222e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0146316) , 
6, 0.0463841, 1, 0, 0.00030827,-0.000217238) , 
0, 0.00288514, 1, 0, 0.496972,-0.00239461)    );
  // itree = 987
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.58469,0.00214725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513463,-0.00817998) , 
3, 42.4621, 1, 0, 0.554249,-0.000823718) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.127766,0.00553893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732446,0.0228239) , 
7, 0.000212441, 1, 0, 0.345345,0.00310762) , 
3, 99.0895, 1, 0, 0.534178,-0.000445997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0812464,-0.00902632) , 
3, 138.757, 1, 0, 0.495527,-0.000814777)    );
  // itree = 988
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982123,0.00889591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92766,0.0276889) , 
2, 0.261841, 1, 0, 0.972108,0.00320345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787228,-0.00970119) , 
0, 0.000503466, 1, 0, 0.948382,0.0017562) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.387703,0.00414501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145544,-0.0082394) , 
2, 0.238023, 1, 0, 0.279675,-0.000692839) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.44837,-0.0135705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.380737,-0.00824626) , 
2, 0.118513, 1, 0, 0.398495,-0.00586894) , 
6, 0.0521841, 1, 0, 0.299008,-0.00153507) , 
0, 0.000962442, 1, 0, 0.496666,-0.000533268)    );
  // itree = 989
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790025,0.00564457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983305,0.0437151) , 
7, 0.000299159, 1, 0, 0.836501,0.00404448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0017656,-0.0155849) , 
5, 0.0218781, 1, 0, 0.609447,0.00199796) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770375,-0.0220757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.286759,0.0078447) , 
0, 0.00145539, 1, 0, 0.408546,-0.00275466) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545534,-0.0153307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417248,0.0053659) , 
2, 0.0477121, 1, 0, 0.43071,0.000423471) , 
5, 0.0230997, 1, 0, 0.42358,-0.000598837) , 
4, 0.020283, 1, 0, 0.5039,0.000523337)    );
  // itree = 990
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624541,-0.0210027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520231,0.00217322) , 
3, 25.2026, 1, 0, 0.554267,-0.00247675) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676482,0.00431938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0793051,-0.014179) , 
5, 0.0266593, 1, 0, 0.471238,0.000390736) , 
4, 0.0145085, 1, 0, 0.491792,-0.000319101) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63385,-0.0185061) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631515,-0.0137077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418863,0.0205427) , 
3, 50.3538, 1, 0, 0.532048,-0.00143419) , 
5, 0.0289566, 1, 0, 0.569905,-0.00769556) , 
6, 0.055081, 1, 0, 0.500125,-0.00110604)    );
  // itree = 991
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977638,0.00350624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559249,0.0475924) , 
0, 0.000592192, 1, 0, 0.777284,0.00595319) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668974,-0.00401723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597699,0.0147484) , 
2, 0.103085, 1, 0, 0.646041,0.000376323) , 
5, 0.0115369, 1, 0, 0.66981,0.00138634) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.835919,-0.0107803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758047,0.00309457) , 
0, 0.0016451, 1, 0, 0.808204,-0.00548185) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00150912,0.00854851) , 
6, 0.0290276, 1, 0, 0.000722243,2.58765e-05) , 
0, 0.00288725, 1, 0, 0.337243,-0.00226948) , 
2, 0.166606, 1, 0, 0.503003,-0.000447329)    );
  // itree = 992
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724087,0.0168439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711395,-0.00709017) , 
3, 10.7719, 1, 0, 0.713748,-0.000995426) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.528143,0.0188247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410835,0.00127078) , 
4, 0.0145385, 1, 0, 0.446423,0.00260385) , 
3, 75.4016, 1, 0, 0.651229,-0.000153665) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980927,-0.00217261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65828,-0.00809018) , 
0, 0.000137426, 1, 0, 0.783268,-0.0074598) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000828693,0.00610747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013192) , 
3, 75.5919, 1, 0, 0.000499995,-4.45472e-05) , 
0, 0.00288733, 1, 0, 0.315623,-0.00302975) , 
2, 0.190418, 1, 0, 0.496559,-0.00147916)    );
  // itree = 993
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.555297,0.00360406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150672,-0.0150221) , 
3, 113.388, 1, 0, 0.501407,-0.000465818) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64923,-0.00898385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567603,-0.0307401) , 
2, 0.305734, 1, 0, 0.640852,-0.00436256) , 
6, 0.0376919, 1, 0, 0.563933,-0.00221308) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00375623,-0.00453869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523587,0.0418671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.480139,0.00200106) , 
2, 0.411136, 1, 0, 0.498209,0.00358644) , 
6, 0.0376614, 1, 0, 0.252555,0.00133785) , 
2, 0.35675, 1, 0, 0.503477,-0.00152365)    );
  // itree = 994
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730322,0.0122116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524865,-0.010618) , 
3, 62.4351, 1, 0, 0.668556,-0.00021301) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739114,0.0299747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672197,0.000725005) , 
2, 0.0748226, 1, 0, 0.70971,0.00249829) , 
6, 0.034788, 1, 0, 0.687315,0.00102284) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898651,-0.0207737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835276,0.0033529) , 
2, 0.278919, 1, 0, 0.868759,-0.00685204) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.138086,0.00381012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.378073,-0.00762624) , 
6, 0.0434892, 1, 0, 0.222427,-0.000798279) , 
0, 0.000962442, 1, 0, 0.350428,-0.00199718) , 
2, 0.142825, 1, 0, 0.502878,-0.000630538)    );
  // itree = 995
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995646,-0.0109532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872578,0.0301251) , 
0, 0.000137309, 1, 0, 0.971501,0.00295881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.555186,-0.0157426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967443,0.0162883) , 
5, 0.0249931, 1, 0, 0.83408,-0.00407618) , 
8, 0.219309, 1, 0, 0.936593,0.0011718) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696018,-0.0145589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443141,-0.00278143) , 
2, 0.0714144, 1, 0, 0.497481,-0.00287697) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848284,0.0112802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136771) , 
0, 0.00321444, 1, 0, 0.0698368,0.000352006) , 
5, 0.0287591, 1, 0, 0.303902,-0.00141533) , 
0, 0.000962526, 1, 0, 0.499001,-0.000617553)    );
  // itree = 996
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991609,0.0193612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7996,-0.00443608) , 
0, 0.000229113, 1, 0, 0.957685,0.00108842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851094,0.0288125) , 
2, 0.309448, 1, 0, 0.943486,0.00214719) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930993,-0.0244869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840037,-0.00456124) , 
2, 0.0237688, 1, 0, 0.849728,-0.00539909) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000484438,-0.000128507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0150704) , 
6, 0.0463767, 1, 0, 0.000376543,-0.000186765) , 
0, 0.00279608, 1, 0, 0.299611,-0.00202311) , 
0, 0.000962442, 1, 0, 0.494037,-0.00076384)    );
  // itree = 997
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948441,-0.00232755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749169,-0.0151278) , 
4, 0.0281051, 1, 0, 0.936126,-0.00157967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779872,-0.013124) , 
3, 99.3732, 1, 0, 0.922451,-0.00312304) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00162534,0.000691327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432118,-0.0128351) , 
7, 0.000440882, 1, 0, 0.0720505,-0.00131503) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891196,0.0165256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000401535,0.0110825) , 
0, 0.00286261, 1, 0, 0.14638,0.00142245) , 
4, 0.0260879, 1, 0, 0.115781,0.000295506) , 
0, 0.00192488, 1, 0, 0.497027,-0.00132016)    );
  // itree = 998
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543649,-0.00321283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192785,0.0158408) , 
3, 100.914, 1, 0, 0.482665,-7.67282e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846582,-0.00297984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75558,-0.0191238) , 
2, 0.289775, 1, 0, 0.828445,-0.00408417) , 
7, 0.000535657, 1, 0, 0.54979,-0.000854676) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736722,0.00269643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614263,0.0170358) , 
0, 0.00146101, 1, 0, 0.671656,0.00787285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131099) , 
0, 0.00384735, 1, 0, 0.233033,0.00253459) , 
2, 0.380813, 1, 0, 0.499467,-0.000316224)    );
  // itree = 999
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562571,-0.000792401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45676,0.029292) , 
3, 81.4817, 1, 0, 0.552723,0.000267497) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65302,-0.0275211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61257,0.00173464) , 
3, 28.7549, 1, 0, 0.628895,-0.00365835) , 
6, 0.0521838, 1, 0, 0.564819,-0.000355935) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784173,-0.0117001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0352277,-0.00240816) , 
0, 0.00192505, 1, 0, 0.2005,-0.00405139) , 
3, 100.661, 1, 0, 0.499398,-0.00101953)    );
   return;
};
 
// Clean up
inline void ReadBDTG::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDTG::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
         if (IsNormalised()) {
            // normalise variables
            std::vector<double> iV;
            iV.reserve(inputValues.size());
            int ivar = 0;
            for (std::vector<double>::const_iterator varIt = inputValues.begin();
                 varIt != inputValues.end(); varIt++, ivar++) {
               iV.push_back(NormVariable( *varIt, fVmin[ivar], fVmax[ivar] ));
            }
            retval = GetMvaValue__( iV );
         }
         else {
            retval = GetMvaValue__( inputValues );
         }
      }

      return retval;
   }
