// Class: ReadBDTG40
// Automatically generated by MethodBase::MakeClass
//

/* configuration options =====================================================

#GEN -*-*-*-*-*-*-*-*-*-*-*- general info -*-*-*-*-*-*-*-*-*-*-*-

Method         : BDT::BDTG
TMVA Release   : 4.2.1         [262657]
ROOT Release   : 6.10/04       [395780]
Creator        : wfawcett
Date           : Wed Mar 14 20:13:35 2018
Host           : Linux lcgapp-slc6-x86-64-3.cern.ch 2.6.32-642.4.2.el6.x86_64 #1 SMP Wed Aug 24 09:19:54 CEST 2016 x86_64 x86_64 x86_64 GNU/Linux
Dir            : /atlas/users/wfawcett/fcc/testTMVA/tmvatutorial
Training events: 66730
Analysis type  : [Classification]


#OPT -*-*-*-*-*-*-*-*-*-*-*-*- options -*-*-*-*-*-*-*-*-*-*-*-*-

# Set by User:
V: "False" [Verbose output (short form of "VerbosityLevel" below - overrides the latter one)]
H: "False" [Print method-specific help message]
NTrees: "1000" [Number of trees in the forest]
MaxDepth: "3" [Max depth of the decision tree allowed]
MinNodeSize: "2.5%" [Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%)]
nCuts: "20" [Number of grid points in variable range used in finding optimal cut in node splitting]
BoostType: "Grad" [Boosting type for the trees in the forest (note: AdaCost is still experimental)]
UseBaggedBoost: "True" [Use only a random subsample of all events for growing the trees in each boost iteration.]
Shrinkage: "1.000000e-01" [Learning rate for GradBoost algorithm]
BaggedSampleFraction: "5.000000e-01" [Relative size of bagged event sample to original size of the data sample (used whenever bagging is used (i.e. UseBaggedBoost, Bagging,)]
# Default:
VerbosityLevel: "Default" [Verbosity level]
VarTransform: "None" [List of variable transformations performed before training, e.g., "D_Background,P_Signal,G,N_AllClasses" for: "Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed)"]
CreateMVAPdfs: "False" [Create PDFs for classifier outputs (signal and background)]
IgnoreNegWeightsInTraining: "False" [Events with negative weights are ignored in the training (but are included for testing and performance evaluation)]
AdaBoostR2Loss: "quadratic" [Type of Loss function in AdaBoostR2]
AdaBoostBeta: "5.000000e-01" [Learning rate  for AdaBoost algorithm]
UseRandomisedTrees: "False" [Determine at each node splitting the cut variable only as the best out of a random subset of variables (like in RandomForests)]
UseNvars: "3" [Size of the subset of variables used with RandomisedTree option]
UsePoissonNvars: "True" [Interpret "UseNvars" not as fixed number but as mean of a Poisson distribution in each split with RandomisedTree option]
UseYesNoLeaf: "True" [Use Sig or Bkg categories, or the purity=S/(S+B) as classification of the leaf node -> Real-AdaBoost]
NegWeightTreatment: "pray" [How to treat events with negative weights in the BDT training (particular the boosting) : IgnoreInTraining;  Boost With inverse boostweight; Pair events with negative and positive weights in training sample and *annihilate* them (experimental!)]
Css: "1.000000e+00" [AdaCost: cost of true signal selected signal]
Cts_sb: "1.000000e+00" [AdaCost: cost of true signal selected bkg]
Ctb_ss: "1.000000e+00" [AdaCost: cost of true bkg    selected signal]
Cbb: "1.000000e+00" [AdaCost: cost of true bkg    selected bkg ]
NodePurityLimit: "5.000000e-01" [In boosting/pruning, nodes with purity > NodePurityLimit are signal; background otherwise.]
SeparationType: "giniindex" [Separation criterion for node splitting]
RegressionLossFunctionBDTG: "huber" [Loss function for BDTG regression.]
HuberQuantile: "7.000000e-01" [In the Huber loss function this is the quantile that separates the core from the tails in the residuals distribution.]
DoBoostMonitor: "False" [Create control plot with ROC integral vs tree number]
UseFisherCuts: "False" [Use multivariate splits using the Fisher criterion]
MinLinCorrForFisher: "8.000000e-01" [The minimum linear correlation between two variables demanded for use in Fisher criterion in node splitting]
UseExclusiveVars: "False" [Variables already used in fisher criterion are not anymore analysed individually for node splitting]
DoPreselection: "False" [and and apply automatic pre-selection for 100% efficient signal (bkg) cuts prior to training]
SigToBkgFraction: "1.000000e+00" [Sig to Bkg ratio used in Training (similar to NodePurityLimit, which cannot be used in real adaboost]
PruneMethod: "nopruning" [Note: for BDTs use small trees (e.g.MaxDepth=3) and NoPruning:  Pruning: Method used for pruning (removal) of statistically insignificant branches ]
PruneStrength: "0.000000e+00" [Pruning strength]
PruningValFraction: "5.000000e-01" [Fraction of events to use for optimizing automatic pruning.]
SkipNormalization: "False" [Skip normalization at initialization, to keep expectation value of BDT output according to the fraction of events]
nEventsMin: "0" [deprecated: Use MinNodeSize (in % of training events) instead]
UseBaggedGrad: "False" [deprecated: Use *UseBaggedBoost* instead:  Use only a random subsample of all events for growing the trees in each iteration.]
GradBaggingFraction: "5.000000e-01" [deprecated: Use *BaggedSampleFraction* instead: Defines the fraction of events to be used in each iteration, e.g. when UseBaggedGrad=kTRUE. ]
UseNTrainEvents: "0" [deprecated: Use *BaggedSampleFraction* instead: Number of randomly picked training events used in randomised (and bagged) trees]
NNodesMax: "0" [deprecated: Use MaxDepth instead to limit the tree size]
##


#VAR -*-*-*-*-*-*-*-*-*-*-*-* variables *-*-*-*-*-*-*-*-*-*-*-*-

NVar 9
abs(tracks40.kappa_123-tracks40.kappa_013)   abs_tracks40.kappa_123_M_tracks40.kappa_013_ abs(tracks40.kappa_123-tracks40.kappa_013)   |deltaKappa|                                 units                                            'F'    [0,0.0250663198531]
tracks40.pT                   tracks40.pT                   tracks40.pT                   pT                            units                             'F'    [1.04477667809,517390.90625]
abs(tracks40.zresiduum)       abs_tracks40.zresiduum_       abs(tracks40.zresiduum)       |zresiduum|                   units                             'F'    [0,0.499771118164]
abs(tracks40.beamlineIntersect) abs_tracks40.beamlineIntersect_ abs(tracks40.beamlineIntersect) |beamlineIntersect|             units                               'F'    [0,264.985931396]
abs(tracks40.hit1phi-tracks40.hit2phi)   abs_tracks40.hit1phi_M_tracks40.hit2phi_ abs(tracks40.hit1phi-tracks40.hit2phi)   |dPhi12|                                 units                                        'F'    [4.76837158203e-06,0.0487072467804]
abs(tracks40.hit2phi-tracks40.hit3phi)   abs_tracks40.hit2phi_M_tracks40.hit3phi_ abs(tracks40.hit2phi-tracks40.hit3phi)   |dPhi23|                                 units                                        'F'    [2.33054161072e-05,0.0969158411026]
abs(tracks40.hit1phi-tracks40.hit3phi)   abs_tracks40.hit1phi_M_tracks40.hit3phi_ abs(tracks40.hit1phi-tracks40.hit3phi)   |dPhi13|                                 units                                        'F'    [8.94069671631e-08,0.0487072467804]
tracks40.z_phi12*tracks40.z_phi23   tracks40.z_phi12_T_tracks40.z_phi23 tracks40.z_phi12*tracks40.z_phi23   z phi12*23                          units                                   'F'    [-0.00470013218001,0.000592779251747]
abs(tracks40.zresiduum/tracks40.eta)   abs_tracks40.zresiduum_D_tracks40.eta_ abs(tracks40.zresiduum/tracks40.eta)   |zresiduum/eta|                        units                                      'F'    [0,4290.42675781]
NSpec 0


============================================================================ */

#include <vector>
#include <cmath>
#include <string>
#include <iostream>

#include "IClassifierReader.h"
#include "BDTGNode.h"

#define NN new BDTGNode
   

class ReadBDTG40 : public IClassifierReader {

 public:

   // constructor
   ReadBDTG40( std::vector<std::string>& theInputVars ) 
      : IClassifierReader(),
        fClassName( "ReadBDTG40" ),
        fNvars( 9 ),
        fIsNormalised( false )
   {      
      // the training input variables
      const char* inputVars[] = { "abs(tracks40.kappa_123-tracks40.kappa_013)", "tracks40.pT", "abs(tracks40.zresiduum)", "abs(tracks40.beamlineIntersect)", "abs(tracks40.hit1phi-tracks40.hit2phi)", "abs(tracks40.hit2phi-tracks40.hit3phi)", "abs(tracks40.hit1phi-tracks40.hit3phi)", "tracks40.z_phi12*tracks40.z_phi23", "abs(tracks40.zresiduum/tracks40.eta)" };

      // sanity checks
      if (theInputVars.size() <= 0) {
         std::cout << "Problem in class \"" << fClassName << "\": empty input vector" << std::endl;
         fStatusIsClean = false;
      }

      if (theInputVars.size() != fNvars) {
         std::cout << "Problem in class \"" << fClassName << "\": mismatch in number of input values: "
                   << theInputVars.size() << " != " << fNvars << std::endl;
         fStatusIsClean = false;
      }

      // validate input variables
      for (size_t ivar = 0; ivar < theInputVars.size(); ivar++) {
         if (theInputVars[ivar] != inputVars[ivar]) {
            std::cout << "Problem in class \"" << fClassName << "\": mismatch in input variable names" << std::endl
                      << " for variable [" << ivar << "]: " << theInputVars[ivar].c_str() << " != " << inputVars[ivar] << std::endl;
            fStatusIsClean = false;
         }
      }

      // initialize min and max vectors (for normalisation)
      fVmin[0] = 0;
      fVmax[0] = 0;
      fVmin[1] = 0;
      fVmax[1] = 0;
      fVmin[2] = 0;
      fVmax[2] = 0;
      fVmin[3] = 0;
      fVmax[3] = 0;
      fVmin[4] = 0;
      fVmax[4] = 0;
      fVmin[5] = 0;
      fVmax[5] = 0;
      fVmin[6] = 0;
      fVmax[6] = 0;
      fVmin[7] = 0;
      fVmax[7] = 0;
      fVmin[8] = 0;
      fVmax[8] = 0;

      // initialize input variable types
      fType[0] = 'F';
      fType[1] = 'F';
      fType[2] = 'F';
      fType[3] = 'F';
      fType[4] = 'F';
      fType[5] = 'F';
      fType[6] = 'F';
      fType[7] = 'F';
      fType[8] = 'F';

      // initialize constants
      Initialize();

   }

   // destructor
   virtual ~ReadBDTG40() {
      Clear(); // method-specific
   }

   // the classifier response
   // "inputValues" is a vector of input values in the same order as the 
   // variables given to the constructor
   double GetMvaValue( const std::vector<double>& inputValues ) const;

 private:

   // method-specific destructor
   void Clear();

   // common member variables
   const char* fClassName;

   const size_t fNvars;
   size_t GetNvar()           const { return fNvars; }
   char   GetType( int ivar ) const { return fType[ivar]; }

   // normalisation of input variables
   const bool fIsNormalised;
   bool IsNormalised() const { return fIsNormalised; }
   double fVmin[9];
   double fVmax[9];
   double NormVariable( double x, double xmin, double xmax ) const {
      // normalise to output range: [-1, 1]
      return 2*(x - xmin)/(xmax - xmin) - 1.0;
   }

   // type of input variable: 'F' or 'I'
   char   fType[9];

   // initialize internal variables
   void Initialize();
   double GetMvaValue__( const std::vector<double>& inputValues ) const;

   // private members (method specific)
   std::vector<BDTGNode*> fForest;       // i.e. root nodes of decision trees
   std::vector<double>                fBoostWeights; // the weights applied in the individual boosts
};

double ReadBDTG40::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTGNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTGNode*)current->GetRight();
         else current=(BDTGNode*)current->GetLeft();
      }
      myMVA += current->GetResponse();
   }
   return 2.0/(1.0+exp(-2.0*myMVA))-1.0;
};

void ReadBDTG40::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995194,0.167604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935911,0.111313) , 
0, 0.000111729, 1, 0, 0.964713,0.464713) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.541242,0.00399734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94279,0.116386) , 
5, 0.0192813, 1, 0, 0.797089,0.297089) , 
2, 0.237456, 1, 0, 0.935217,0.435217) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00460815,-0.0260438) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0261831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0261831) , 
6, 0.0254869, 1, 0, 0,-0.5) , 
0, 0.00887789, 1, 0, 0.000965637,-0.499034) , 
0, 0.00238688, 1, 0, 0.501322,0.00132213)    );
  // itree = 1
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97609,0.127147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900753,0.0780303) , 
2, 0.14277, 1, 0, 0.956352,0.391099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683621,0.0178767) , 
2, 0.333171, 1, 0, 0.933941,0.370669) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00665042,-0.0253132) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0255152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0255152) , 
7, -0.000775513, 1, 0, 0,-0.486911) , 
0, 0.00888558, 1, 0, 0.00140033,-0.485526) , 
0, 0.00238727, 1, 0, 0.4998,-0.0279293)    );
  // itree = 2
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995685,0.131139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984873,0.13558) , 
2, 0.235305, 1, 0, 0.994049,0.365025) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920475,0.0780981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668226,0.0134572) , 
2, 0.260957, 1, 0, 0.877518,0.275728) , 
0, 0.000113477, 1, 0, 0.931503,0.317097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00653817,-0.0246991) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0248971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0248971) , 
5, 0.0227748, 1, 0, 0,-0.474174) , 
0, 0.0088747, 1, 0, 0.00133786,-0.472871) , 
0, 0.00238582, 1, 0, 0.501538,-0.0480625)    );
  // itree = 3
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802977,0.0251454) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950164,0.0866673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.745166,0.0236455) , 
2, 0.380768, 1, 0, 0.937733,0.279543) , 
5, 0.00647999, 1, 0, 0.929831,0.271346) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0050379,-0.0241739) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0243237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00017951,-0.0243179) , 
2, 0.380825, 1, 0, 4.71748e-05,-0.46173) , 
0, 0.00887199, 1, 0, 0.00108388,-0.460749) , 
0, 0.00238377, 1, 0, 0.499818,-0.0676165)    );
  // itree = 4
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963684,0.0889813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890773,0.0479285) , 
3, 98.1236, 1, 0, 0.957622,0.251667) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.478414,-0.00956838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973054,0.109415) , 
5, 0.0196207, 1, 0, 0.77185,0.155082) , 
2, 0.261233, 1, 0, 0.930145,0.237381) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00745701,-0.0235599) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0237903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0237904) , 
2, 0.357252, 1, 0, 0,-0.449712) , 
0, 0.00888249, 1, 0, 0.00151126,-0.448269) , 
0, 0.00238727, 1, 0, 0.501592,-0.0790382)    );
  // itree = 5
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95603,0.077919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86419,0.0326576) , 
4, 0.0233298, 1, 0, 0.950774,0.215009) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522165,-0.00778919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928747,0.0710141) , 
6, 0.0418135, 1, 0, 0.72546,0.0868262) , 
2, 0.309373, 1, 0, 0.928011,0.202059) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00655269,-0.0230921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0232932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0232933) , 
2, 0.357038, 1, 0, 0,-0.437967) , 
0, 0.00886907, 1, 0, 0.00138247,-0.43668) , 
0, 0.00238727, 1, 0, 0.501284,-0.0920901)    );
  // itree = 6
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972781,0.0854573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884175,0.0359556) , 
3, 97.9249, 1, 0, 0.965482,0.194943) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.430948,-0.0199372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922598,0.0620626) , 
5, 0.0168217, 1, 0, 0.813944,0.117432) , 
2, 0.190011, 1, 0, 0.928244,0.175896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00424963,-0.0227015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0228289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000173115,-0.022823) , 
2, 0.357049, 1, 0, 5.0126e-05,-0.426485) , 
0, 0.00995821, 1, 0, 0.00106451,-0.42558) , 
0, 0.00238727, 1, 0, 0.505327,-0.098457)    );
  // itree = 7
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995942,0.10172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984846,0.0975856) , 
2, 0.187872, 1, 0, 0.993599,0.189093) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59466,-0.0159616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894157,0.039024) , 
0, 0.000654087, 1, 0, 0.867313,0.113525) , 
0, 0.000113344, 1, 0, 0.925837,0.148546) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00613158,-0.0222027) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0223945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00031275,-0.0223835) , 
3, 88.3454, 1, 0, 9.24064e-05,-0.415318) , 
0, 0.0088747, 1, 0, 0.00138108,-0.414158) , 
0, 0.00238582, 1, 0, 0.493574,-0.114567)    );
  // itree = 8
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916023,0.0383709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966589,0.0728944) , 
5, 0.010742, 1, 0, 0.955799,0.145937) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505505,-0.012938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904397,0.0447672) , 
4, 0.0208306, 1, 0, 0.714919,0.0214599) , 
2, 0.308768, 1, 0, 0.930181,0.132699) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00564884,-0.0218103) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.021987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000170374,-0.0219811) , 
2, 0.357038, 1, 0, 4.69982e-05,-0.404531) , 
0, 0.00888249, 1, 0, 0.00119558,-0.403523) , 
0, 0.00238727, 1, 0, 0.500423,-0.115363)    );
  // itree = 9
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985724,0.087546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941876,0.0498415) , 
2, 0.0566464, 1, 0, 0.963306,0.129181) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443371,-0.0187381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940642,0.061969) , 
5, 0.0187478, 1, 0, 0.792699,0.0588102) , 
2, 0.237979, 1, 0, 0.932897,0.116638) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00454399,-0.0214655) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0216047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0216043) , 
0, 0.0142739, 1, 0, 0,-0.394032) , 
0, 0.00887368, 1, 0, 0.000948886,-0.393243) , 
0, 0.00238688, 1, 0, 0.506679,-0.116551)    );
  // itree = 10
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993502,0.0906673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987772,0.0929203) , 
2, 0.235305, 1, 0, 0.99264,0.126933) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927615,0.0421937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63795,-0.00620144) , 
2, 0.260821, 1, 0, 0.879086,0.0746388) , 
0, 0.000113477, 1, 0, 0.931834,0.0989308) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00499612,-0.0210859) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0212443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000175946,-0.021238) , 
2, 0.380934, 1, 0, 4.70422e-05,-0.383716) , 
0, 0.00886907, 1, 0, 0.0010796,-0.382855) , 
0, 0.00238727, 1, 0, 0.500237,-0.124477)    );
  // itree = 11
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96295,0.0575523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510954,-0.0230143) , 
2, 0.166239, 1, 0, 0.90477,0.0537755) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947726,0.0421448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976464,0.0820641) , 
0, 0.00158868, 1, 0, 0.962316,0.119431) , 
5, 0.0167574, 1, 0, 0.931675,0.0844718) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0036893,-0.0207882) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0209051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0209054) , 
2, 0.357258, 1, 0, 0,-0.373764) , 
0, 0.00994889, 1, 0, 0.000919015,-0.373024) , 
0, 0.00238727, 1, 0, 0.495886,-0.129732)    );
  // itree = 12
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961426,0.052935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413348,-0.0258845) , 
2, 0.165263, 1, 0, 0.896619,0.0373627) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93811,0.0331984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970017,0.071414) , 
0, 0.00158868, 1, 0, 0.953251,0.0944873) , 
5, 0.0159736, 1, 0, 0.926295,0.0672969) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00688825,-0.0203455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0205859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0205852) , 
0, 0.0142799, 1, 0, 0,-0.364036) , 
0, 0.00887485, 1, 0, 0.00145457,-0.362778) , 
0, 0.00238727, 1, 0, 0.498585,-0.131599)    );
  // itree = 13
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957278,0.0474691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871076,0.001156) , 
4, 0.0233298, 1, 0, 0.952008,0.071148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696312,-0.00582589) , 
2, 0.355661, 1, 0, 0.9332,0.0630445) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00552351,-0.0200942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0202831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000160055,-0.0202768) , 
3, 87.9125, 1, 0, 4.83871e-05,-0.354511) , 
0, 0.00886471, 1, 0, 0.00127622,-0.353514) , 
0, 0.00238582, 1, 0, 0.501775,-0.129797)    );
  // itree = 14
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993281,0.0830792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974994,0.0696066) , 
2, 0.282366, 1, 0, 0.991263,0.0833981) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958777,0.0500821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76401,-0.00937282) , 
2, 0.118998, 1, 0, 0.877114,0.0245871) , 
0, 0.000113301, 1, 0, 0.930145,0.0519094) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0061295,-0.0197733) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.019997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000169416,-0.0199904) , 
2, 0.357049, 1, 0, 4.8294e-05,-0.345278) , 
0, 0.00996639, 1, 0, 0.00150556,-0.344038) , 
0, 0.00238727, 1, 0, 0.496432,-0.133015)    );
  // itree = 15
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995322,0.0848465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991147,0.0835844) , 
2, 0.188244, 1, 0, 0.99445,0.0732645) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800515,-0.013895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908042,0.0207139) , 
0, 0.00130294, 1, 0, 0.873074,0.0159589) , 
0, 0.000113477, 1, 0, 0.929583,0.0426389) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00487048,-0.0195576) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0197267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000154792,-0.0197203) , 
3, 87.8026, 1, 0, 4.63475e-05,-0.336307) , 
0, 0.00887789, 1, 0, 0.00103246,-0.335562) , 
0, 0.00238688, 1, 0, 0.495017,-0.134361)    );
  // itree = 16
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796407,-0.0163435) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943854,0.0290758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874949,-0.00246985) , 
4, 0.0225145, 1, 0, 0.93543,0.041098) , 
5, 0.00673871, 1, 0, 0.926262,0.0343361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.005904,-0.0192524) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.019471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0194697) , 
0, 0.0142575, 1, 0, 0,-0.327607) , 
0, 0.00885919, 1, 0, 0.00122289,-0.32664) , 
0, 0.00238398, 1, 0, 0.496876,-0.133223)    );
  // itree = 17
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822187,-0.0151858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953928,0.0338208) , 
5, 0.0063404, 1, 0, 0.946152,0.0387082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680713,-0.0116034) , 
2, 0.356271, 1, 0, 0.926644,0.0302504) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00667032,-0.0189702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0192271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0192262) , 
0, 0.0142588, 1, 0, 0,-0.319085) , 
0, 0.00887199, 1, 0, 0.00138385,-0.317975) , 
0, 0.00238377, 1, 0, 0.501138,-0.12989)    );
  // itree = 18
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965758,0.0431089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889842,-9.9009e-06) , 
3, 99.2542, 1, 0, 0.959355,0.0467116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674257,-0.0098932) , 
2, 0.355661, 1, 0, 0.938272,0.0382093) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00754357,-0.0186938) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0189957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0189947) , 
0, 0.0142821, 1, 0, 0,-0.31079) , 
0, 0.00888782, 1, 0, 0.00162029,-0.309472) , 
0, 0.00238727, 1, 0, 0.499889,-0.124517)    );
  // itree = 19
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99426,0.0788964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989457,0.0782234) , 
2, 0.258452, 1, 0, 0.993639,0.0516699) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673003,-0.0284924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900702,0.00867783) , 
0, 0.000763993, 1, 0, 0.875991,0.000548214) , 
0, 0.000113477, 1, 0, 0.930981,0.0244429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00622264,-0.0185289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0187757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0187747) , 
0, 0.0142657, 1, 0, 0,-0.302713) , 
0, 0.00887434, 1, 0, 0.00127866,-0.301745) , 
0, 0.00238455, 1, 0, 0.496948,-0.127839)    );
  // itree = 20
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984408,0.0635782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927729,-0.00579279) , 
6, 0.0417942, 1, 0, 0.977543,0.0426812) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.599386,-0.0338839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918705,0.0150557) , 
5, 0.014222, 1, 0, 0.867404,-0.0111312) , 
2, 0.0950056, 1, 0, 0.929053,0.0189897) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00486466,-0.0183782) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0185657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000127967,-0.0185592) , 
0, 0.0196725, 1, 0, 4.68083e-05,-0.294798) , 
0, 0.00888441, 1, 0, 0.00104035,-0.294134) , 
0, 0.00238688, 1, 0, 0.498962,-0.126129)    );
  // itree = 21
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980898,0.0542529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945424,0.0158737) , 
2, 0.0566464, 1, 0, 0.962728,0.0284701) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52561,-0.021342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933298,0.0298299) , 
5, 0.0194289, 1, 0, 0.778732,-0.0385943) , 
2, 0.237979, 1, 0, 0.929704,0.016433) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00605307,-0.0181159) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0183667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0183658) , 
0, 0.014269, 1, 0, 0,-0.287186) , 
0, 0.00886907, 1, 0, 0.00126176,-0.286267) , 
0, 0.00238727, 1, 0, 0.499872,-0.123705)    );
  // itree = 22
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989286,0.0676841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944403,0.0130111) , 
2, 0.0565302, 1, 0, 0.966503,0.0281291) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.469705,-0.0226775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910425,0.0168743) , 
6, 0.0372177, 1, 0, 0.788168,-0.0347141) , 
2, 0.237485, 1, 0, 0.933852,0.0166233) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00553501,-0.0179454) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0181763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0181755) , 
0, 0.0142663, 1, 0, 0,-0.279725) , 
0, 0.00887763, 1, 0, 0.00114491,-0.278936) , 
0, 0.00238462, 1, 0, 0.497579,-0.121624)    );
  // itree = 23
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995676,0.0767599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993753,0.0823832) , 
2, 0.234956, 1, 0, 0.995392,0.0370966) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713097,-0.0281238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905156,0.0044622) , 
0, 0.000763348, 1, 0, 0.885453,-0.00498859) , 
0, 0.000113316, 1, 0, 0.936386,0.0145089) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00832916,-0.0176153) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0179948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0179941) , 
0, 0.0142742, 1, 0, 0,-0.27246) , 
0, 0.0088679, 1, 0, 0.00174808,-0.271087) , 
0, 0.00238688, 1, 0, 0.508005,-0.116391)    );
  // itree = 24
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805904,-0.0205866) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948294,0.00334208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935471,0.0236115) , 
0, 0.00136173, 1, 0, 0.943898,0.0158782) , 
5, 0.00652455, 1, 0, 0.935522,0.0106171) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00440063,-0.0176391) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0178209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000157709,-0.0178129) , 
3, 87.8497, 1, 0, 4.67793e-05,-0.265337) , 
0, 0.00888132, 1, 0, 0.000960899,-0.264823) , 
0, 0.00238688, 1, 0, 0.499895,-0.117774)    );
  // itree = 25
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935288,-0.00480815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966052,0.028984) , 
5, 0.0133363, 1, 0, 0.955238,0.0136742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.539712,-0.018633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921709,0.0182317) , 
5, 0.020538, 1, 0, 0.74986,-0.0560878) , 
2, 0.285017, 1, 0, 0.928814,0.00469861) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000353067,-0.0176644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0176552) , 
0, 0.0121085, 1, 0, 0.000103377,-0.258725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00278404,-0.0175202) , 
6, 0.0324606, 1, 0, 0.000905535,-0.257987) , 
0, 0.00238727, 1, 0, 0.492807,-0.118733)    );
  // itree = 26
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993793,0.0680683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991043,0.0739259) , 
2, 0.282366, 1, 0, 0.993508,0.0283451) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584272,-0.0297457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909051,0.00378314) , 
0, 0.000654755, 1, 0, 0.878851,-0.0119313) , 
0, 0.000113477, 1, 0, 0.931845,0.00668411) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00687033,-0.0171675) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.017497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0174983) , 
6, 0.0324539, 1, 0, 0,-0.251799) , 
0, 0.00887368, 1, 0, 0.0014819,-0.25073) , 
0, 0.00238688, 1, 0, 0.498617,-0.113182)    );
  // itree = 27
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964024,0.0206459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912177,-0.0257641) , 
4, 0.0218926, 1, 0, 0.957969,0.011057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559088,-0.0201635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927394,0.0171981) , 
5, 0.0204918, 1, 0, 0.760453,-0.0610744) , 
2, 0.261233, 1, 0, 0.927447,-8.9391e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00670495,-0.0170174) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0173456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0173467) , 
6, 0.0324435, 1, 0, 0,-0.245264) , 
0, 0.00886624, 1, 0, 0.00143258,-0.24426) , 
0, 0.00238633, 1, 0, 0.503284,-0.111932)    );
  // itree = 28
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977491,0.0390809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943901,-0.00936371) , 
4, 0.0174931, 1, 0, 0.966299,0.013948) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.55168,-0.0243994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92771,0.0155102) , 
5, 0.018136, 1, 0, 0.819947,-0.0377019) , 
2, 0.190383, 1, 0, 0.931411,0.00163537) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00733001,-0.0168283) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0172005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0172017) , 
6, 0.0324398, 1, 0, 0,-0.238899) , 
0, 0.00888249, 1, 0, 0.00145964,-0.237855) , 
0, 0.00238727, 1, 0, 0.4934,-0.111166)    );
  // itree = 29
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99237,0.0576983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986642,0.0601714) , 
2, 0.281878, 1, 0, 0.991783,0.0208528) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752847,-0.0300048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900433,-0.00109234) , 
0, 0.00108537, 1, 0, 0.867585,-0.0267482) , 
0, 0.000113316, 1, 0, 0.925034,-0.00472967) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00561931,-0.0167813) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0170618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000154159,-0.0170529) , 
2, 0.356929, 1, 0, 4.68229e-05,-0.232654) , 
0, 0.00887368, 1, 0, 0.00121989,-0.23194) , 
0, 0.00238688, 1, 0, 0.497757,-0.109818)    );
  // itree = 30
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9585,0.0129975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863596,-0.0322697) , 
4, 0.0233226, 1, 0, 0.952996,0.0067683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708809,-0.0108934) , 
2, 0.333171, 1, 0, 0.932772,0.00098127) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00663064,-0.0165795) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0169286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000159042,-0.0169193) , 
2, 0.357049, 1, 0, 4.72192e-05,-0.226617) , 
0, 0.00887368, 1, 0, 0.00142014,-0.225711) , 
0, 0.00238688, 1, 0, 0.502081,-0.10385)    );
  // itree = 31
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967584,0.0161979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467905,-0.0301438) , 
2, 0.142491, 1, 0, 0.899029,-0.027753) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943384,-0.0142935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962843,0.0425432) , 
0, 0.00147311, 1, 0, 0.953122,0.0184855) , 
5, 0.015583, 1, 0, 0.928795,-0.00230898) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000165871,-0.0168141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000548893,-0.0167722) , 
5, 0.0184809, 1, 0, 0.000425947,-0.220862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00226009,-0.0166714) , 
3, 88.0088, 1, 0, 0.000972108,-0.220304) , 
0, 0.00238582, 1, 0, 0.500093,-0.103034)    );
  // itree = 32
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997374,0.0755659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995239,0.0764294) , 
2, 0.140974, 1, 0, 0.996749,0.0225279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.795232,-0.0270599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910149,0.00148013) , 
0, 0.0013022, 1, 0, 0.872301,-0.0264012) , 
0, 0.000113344, 1, 0, 0.929813,-0.00378906) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00390344,-0.0164416) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0166995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000636684,-0.0166436) , 
5, 0.018479, 1, 0, 0.000439549,-0.215102) , 
2, 0.119179, 1, 0, 0.00126488,-0.21428) , 
0, 0.00238727, 1, 0, 0.498055,-0.101664)    );
  // itree = 33
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996625,0.0732896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891384,-0.00582051) , 
0, 0.000113344, 1, 0, 0.940647,0.00244748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779175,-0.0359903) , 
3, 112.932, 1, 0, 0.931464,-0.00395563) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000889493,-0.01651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0165695) , 
6, 0.00926491, 1, 0, 0.000271833,-0.209597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00218716,-0.0164339) , 
6, 0.0324505, 1, 0, 0.000863898,-0.209104) , 
0, 0.00238455, 1, 0, 0.502914,-0.0984287)    );
  // itree = 34
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986203,0.0499313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955658,-0.00822538) , 
2, 0.0339181, 1, 0, 0.97011,0.0083638) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530054,-0.0322721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916667,0.00163244) , 
5, 0.014491, 1, 0, 0.86079,-0.0325288) , 
2, 0.118757, 1, 0, 0.928604,-0.00716194) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00660706,-0.0160561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0164489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000327008,-0.0164269) , 
2, 0.356951, 1, 0, 9.64905e-05,-0.204007) , 
0, 0.00888249, 1, 0, 0.00148134,-0.203088) , 
0, 0.00238727, 1, 0, 0.503929,-0.0969073)    );
  // itree = 35
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988678,0.0561012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971073,0.00192324) , 
4, 0.0142533, 1, 0, 0.981106,0.0154428) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518748,-0.0338179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920088,-0.000830827) , 
5, 0.0118524, 1, 0, 0.87989,-0.0261982) , 
2, 0.0712542, 1, 0, 0.926611,-0.00697688) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00569904,-0.0159997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0163397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0163415) , 
6, 0.0324387, 1, 0, 0,-0.198813) , 
0, 0.0088679, 1, 0, 0.00117146,-0.198108) , 
0, 0.00238688, 1, 0, 0.494656,-0.0961887)    );
  // itree = 36
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0918437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976107,0.023471) , 
2, 0.0226557, 1, 0, 0.985364,0.0199531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661965,-0.0286753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928397,0.00624654) , 
5, 0.0143795, 1, 0, 0.882457,-0.0189548) , 
2, 0.0951916, 1, 0, 0.939853,0.00274566) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00403386,-0.0159655) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000166421,-0.0162571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0162354) , 
0, 0.0110197, 1, 0, 4.92573e-05,-0.194077) , 
2, 0.119737, 1, 0, 0.00100946,-0.193147) , 
0, 0.00238727, 1, 0, 0.504278,-0.0881383)    );
  // itree = 37
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972171,0.0122077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508428,-0.0313665) , 
2, 0.118045, 1, 0, 0.904388,-0.0313936) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943506,-0.0180855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970442,0.0480739) , 
0, 0.00136173, 1, 0, 0.956827,0.0157451) , 
5, 0.0142145, 1, 0, 0.937144,-0.00194799) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00613574,-0.0157433) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0161358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000155431,-0.0161241) , 
2, 0.357258, 1, 0, 4.76373e-05,-0.188609) , 
0, 0.00886907, 1, 0, 0.0013485,-0.187796) , 
0, 0.00238727, 1, 0, 0.506106,-0.0875518)    );
  // itree = 38
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989155,0.0128864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991472,0.0554961) , 
5, 0.0163459, 1, 0, 0.990286,0.00912702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601273,-0.0332623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904014,-0.00555886) , 
0, 0.000654882, 1, 0, 0.875819,-0.0267738) , 
0, 0.000113477, 1, 0, 0.928851,-0.0101412) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00451762,-0.0157182) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.016059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000356324,-0.0160174) , 
5, 0.0180937, 1, 0, 0.000249253,-0.18398) , 
2, 0.119531, 1, 0, 0.0013372,-0.182925) , 
0, 0.00238582, 1, 0, 0.497574,-0.0904825)    );
  // itree = 39
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988612,0.0167967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997529,0.078721) , 
5, 0.018661, 1, 0, 0.991871,0.00959449) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670358,-0.0281494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902656,-0.00541973) , 
0, 0.000759398, 1, 0, 0.877309,-0.0237998) , 
0, 0.000112895, 1, 0, 0.931093,-0.00812205) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00614015,-0.015531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0159492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.56897e-05,-0.0159405) , 
2, 0.142962, 1, 0, 4.64332e-05,-0.178988) , 
0, 0.00887485, 1, 0, 0.00129277,-0.178213) , 
0, 0.00238727, 1, 0, 0.49993,-0.0869958)    );
  // itree = 40
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968629,0.00981269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894073,-0.0317975) , 
3, 99.9226, 1, 0, 0.96298,0.00201718) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.450589,-0.0191099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922301,0.00829002) , 
6, 0.0371317, 1, 0, 0.781785,-0.0445841) , 
2, 0.237514, 1, 0, 0.931096,-0.00618306) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0036429,-0.0155885) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000501869,-0.0158495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.08826e-05,-0.0158503) , 
0, 0.0110358, 1, 0, 0.000199149,-0.174633) , 
2, 0.119176, 1, 0, 0.00107614,-0.173817) , 
0, 0.00238688, 1, 0, 0.499489,-0.0839793)    );
  // itree = 41
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761511,-0.0268005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946676,0.00133574) , 
5, 0.0066352, 1, 0, 0.934266,-0.00558844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770307,-0.0453497) , 
4, 0.0236221, 1, 0, 0.925592,-0.0126103) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00638079,-0.0153123) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0157742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.58332e-05,-0.0157644) , 
2, 0.143248, 1, 0, 4.64905e-05,-0.169849) , 
0, 0.00888499, 1, 0, 0.00133358,-0.169034) , 
0, 0.00238633, 1, 0, 0.496389,-0.0852495)    );
  // itree = 42
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81392,-0.0208281) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939907,-0.0123798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943113,0.0182318) , 
0, 0.00158643, 1, 0, 0.940796,-0.00276658) , 
5, 0.00676964, 1, 0, 0.932903,-0.00649834) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00561277,-0.01528) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0156908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0156865) , 
2, 0.142966, 1, 0, 0,-0.165491) , 
0, 0.00889821, 1, 0, 0.00118151,-0.164815) , 
0, 0.00238727, 1, 0, 0.498211,-0.0803608)    );
  // itree = 43
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966798,0.0101113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891999,-0.0219516) , 
3, 99.9248, 1, 0, 0.96087,0.00318205) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66894,-0.023565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855446,0.0101742) , 
0, 0.00169974, 1, 0, 0.745154,-0.0625346) , 
2, 0.284668, 1, 0, 0.933567,-0.00513555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00659924,-0.0151073) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0156105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0156064) , 
2, 0.142966, 1, 0, 0,-0.161204) , 
0, 0.0088679, 1, 0, 0.00136755,-0.160348) , 
0, 0.00238688, 1, 0, 0.499714,-0.0773729)    );
  // itree = 44
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945528,0.000921636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799898,-0.0240419) , 
3, 111.798, 1, 0, 0.936708,-0.00343263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826892,-0.0323402) , 
4, 0.0236324, 1, 0, 0.931552,-0.00717954) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00712207,-0.014973) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0155332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.72739e-05,-0.0155233) , 
2, 0.142966, 1, 0, 4.85274e-05,-0.156978) , 
0, 0.00887049, 1, 0, 0.0015635,-0.156011) , 
0, 0.00238582, 1, 0, 0.505636,-0.0753415)    );
  // itree = 45
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896047,-0.0263771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966188,0.00749448) , 
5, 0.00667569, 1, 0, 0.961618,0.0019225) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443324,-0.017461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93137,0.0110928) , 
5, 0.019292, 1, 0, 0.766944,-0.0456276) , 
2, 0.261777, 1, 0, 0.931655,-0.00539613) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00535742,-0.0150389) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0154584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0154546) , 
2, 0.143311, 1, 0, 0,-0.152958) , 
0, 0.00886497, 1, 0, 0.00112205,-0.152391) , 
0, 0.00238398, 1, 0, 0.502798,-0.073142)    );
  // itree = 46
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989699,0.0503456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904555,-0.0100992) , 
2, 0.0475958, 1, 0, 0.936755,-0.00400589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817039,-0.0315056) , 
4, 0.0233298, 1, 0, 0.928128,-0.00991812) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00561713,-0.0149235) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0153863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0153825) , 
2, 0.143315, 1, 0, 0,-0.148995) , 
0, 0.00994752, 1, 0, 0.00137622,-0.148174) , 
0, 0.00238688, 1, 0, 0.505626,-0.0729482)    );
  // itree = 47
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9436,0.000804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83943,-0.0252576) , 
0, 0.00203883, 1, 0, 0.934687,-0.00432997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793259,-0.0307677) , 
4, 0.0235188, 1, 0, 0.926968,-0.00951181) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00295362,-0.0150561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0153346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000627548,-0.0152606) , 
5, 0.0182266, 1, 0, 0.000447234,-0.145177) , 
2, 0.119146, 1, 0, 0.00107827,-0.144617) , 
0, 0.00238633, 1, 0, 0.498166,-0.0720822)    );
  // itree = 48
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993419,0.0494305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906939,-0.00945809) , 
0, 0.000226688, 1, 0, 0.948803,-0.00179815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657606,-0.0137904) , 
2, 0.380766, 1, 0, 0.931339,-0.00665922) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00565889,-0.0147658) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0152508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.66783e-05,-0.0152402) , 
2, 0.142962, 1, 0, 4.73975e-05,-0.141363) , 
0, 0.00886113, 1, 0, 0.00123351,-0.140743) , 
0, 0.00238462, 1, 0, 0.500753,-0.0687324)    );
  // itree = 49
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944369,-0.0254836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753552,-0.0227506) , 
0, 0.000334845, 1, 0, 0.849452,-0.0523728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941249,-0.0150155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942809,0.0184467) , 
0, 0.00136173, 1, 0, 0.941808,-0.000658225) , 
5, 0.00810259, 1, 0, 0.93269,-0.00576394) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00643913,-0.0146133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.015186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0151818) , 
2, 0.142966, 1, 0, 0,-0.137747) , 
0, 0.00886624, 1, 0, 0.0013911,-0.136949) , 
0, 0.00238633, 1, 0, 0.504597,-0.066066)    );
  // itree = 50
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974292,-0.00798998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966081,0.0259733) , 
0, 0.000906404, 1, 0, 0.970869,0.00617997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.401211,-0.020964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924429,0.00777971) , 
5, 0.0168523, 1, 0, 0.808124,-0.0358971) , 
2, 0.189686, 1, 0, 0.930743,-0.00419425) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00374103,-0.0147636) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0151406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000633412,-0.0150614) , 
5, 0.018479, 1, 0, 0.000437987,-0.134249) , 
2, 0.119138, 1, 0, 0.0012728,-0.133499) , 
0, 0.00238582, 1, 0, 0.494962,-0.0648189)    );
  // itree = 51
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982658,0.0350336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957155,-0.0258309) , 
4, 0.0156668, 1, 0, 0.972083,0.00324843) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.493121,-0.0232466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914164,8.59856e-05) , 
5, 0.0156307, 1, 0, 0.836018,-0.0353439) , 
2, 0.142508, 1, 0, 0.927609,-0.00936589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00326738,-0.0147437) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0150802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000628712,-0.0150003) , 
5, 0.0182249, 1, 0, 0.000437704,-0.130796) , 
2, 0.119176, 1, 0, 0.00111156,-0.130219) , 
0, 0.00238455, 1, 0, 0.497052,-0.065528)    );
  // itree = 52
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989695,0.00604981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99815,0.0805253) , 
5, 0.0163446, 1, 0, 0.993949,0.00997037) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697484,-0.0239852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898076,-0.00542142) , 
0, 0.000872081, 1, 0, 0.866836,-0.0254612) , 
0, 0.000113477, 1, 0, 0.924737,-0.00932169) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00596779,-0.0144312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0150065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.55467e-05,-0.014994) , 
2, 0.142966, 1, 0, 4.68812e-05,-0.127325) , 
0, 0.00888665, 1, 0, 0.00126581,-0.126656) , 
0, 0.00238688, 1, 0, 0.498342,-0.0634984)    );
  // itree = 53
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978442,0.0333906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758708,-0.0323734) , 
2, 0.0237485, 1, 0, 0.873138,-0.0456699) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939702,-0.0173004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940416,0.0135092) , 
0, 0.00136173, 1, 0, 0.939984,-0.00359412) , 
5, 0.0104608, 1, 0, 0.927242,-0.0116142) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00626619,-0.0143287) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0149498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0149444) , 
2, 0.143291, 1, 0, 0,-0.124078) , 
0, 0.00888441, 1, 0, 0.00133753,-0.123326) , 
0, 0.00238688, 1, 0, 0.497105,-0.0635111)    );
  // itree = 54
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914465,-0.0171637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9685,0.00797027) , 
5, 0.00805533, 1, 0, 0.962685,0.0014362) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.455113,-0.0178923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928566,0.00877898) , 
5, 0.0191966, 1, 0, 0.767277,-0.0461398) , 
2, 0.260818, 1, 0, 0.932936,-0.00580685) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00719865,-0.0141566) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0148919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000459046,-0.0148393) , 
2, 0.35717, 1, 0, 0.000136058,-0.120728) , 
0, 0.00888665, 1, 0, 0.00155763,-0.119874) , 
0, 0.00238688, 1, 0, 0.497765,-0.0591031)    );
  // itree = 55
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760745,-0.0242068) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992702,0.0391669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880617,-0.00989108) , 
0, 0.000113344, 1, 0, 0.932568,-0.0072838) , 
5, 0.00668099, 1, 0, 0.921365,-0.0124665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0036385,-0.0144449) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0148593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00071544,-0.0147614) , 
5, 0.018479, 1, 0, 0.000489634,-0.117776) , 
2, 0.119176, 1, 0, 0.00125835,-0.117111) , 
0, 0.00238462, 1, 0, 0.496456,-0.0607919)    );
  // itree = 56
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898214,-0.0166739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952583,0.00740641) , 
5, 0.0133342, 1, 0, 0.934241,-0.00454822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798526,-0.0303288) , 
4, 0.0236449, 1, 0, 0.927763,-0.00889011) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00678398,-0.0140607) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0147922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.48135e-05,-0.0147788) , 
2, 0.142901, 1, 0, 4.66923e-05,-0.11467) , 
0, 0.00887906, 1, 0, 0.00141417,-0.113879) , 
0, 0.00238727, 1, 0, 0.498096,-0.0575869)    );
  // itree = 57
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767034,-0.0282202) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938065,-0.0183816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939759,0.0146891) , 
0, 0.00136013, 1, 0, 0.938642,-0.00509827) , 
5, 0.00636324, 1, 0, 0.928776,-0.00993517) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00367549,-0.0143194) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0147573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000695296,-0.0146599) , 
5, 0.0184825, 1, 0, 0.000473624,-0.11179) , 
2, 0.119734, 1, 0, 0.00122994,-0.111142) , 
0, 0.00238727, 1, 0, 0.49321,-0.0574607)    );
  // itree = 58
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985042,0.0158689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998181,0.0859868) , 
5, 0.0163445, 1, 0, 0.991504,0.0115562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76955,-0.0189956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899631,-0.00385676) , 
0, 0.00104704, 1, 0, 0.875537,-0.0181146) , 
0, 0.000226632, 1, 0, 0.930213,-0.00412548) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00300053,-0.0143429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000163708,-0.0146897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000487709,-0.0146354) , 
5, 0.0181896, 1, 0, 0.000390983,-0.10897) , 
2, 0.119139, 1, 0, 0.00100771,-0.108469) , 
0, 0.00238727, 1, 0, 0.503022,-0.0520962)    );
  // itree = 59
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986696,0.0484424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965787,-0.0157785) , 
4, 0.0142077, 1, 0, 0.976602,0.00692042) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527533,-0.0227391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912405,-0.00261751) , 
5, 0.0144356, 1, 0, 0.853722,-0.0277328) , 
2, 0.118612, 1, 0, 0.929308,-0.00641687) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00619961,-0.0139281) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0146505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.49532e-05,-0.0146351) , 
2, 0.143296, 1, 0, 4.6925e-05,-0.106041) , 
0, 0.0088679, 1, 0, 0.00130622,-0.105353) , 
0, 0.00238688, 1, 0, 0.50177,-0.0519973)    );
  // itree = 60
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986713,0.0498154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532438,-0.0328069) , 
2, 0.047497, 1, 0, 0.870401,-0.0396777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947752,-0.019607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934311,0.00913791) , 
0, 0.00101985, 1, 0, 0.940956,-0.00181352) , 
5, 0.0106947, 1, 0, 0.9273,-0.00914201) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00631426,-0.0138503) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0146055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145985) , 
2, 0.142927, 1, 0, 0,-0.103341) , 
0, 0.00889285, 1, 0, 0.00128005,-0.102637) , 
0, 0.00238727, 1, 0, 0.501688,-0.0521137)    );
  // itree = 61
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978647,0.0322404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706916,-0.0298761) , 
2, 0.0225045, 1, 0, 0.861669,-0.0438224) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946544,-0.00869577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949524,0.0207503) , 
0, 0.00136173, 1, 0, 0.947659,0.003972) , 
5, 0.00901715, 1, 0, 0.935446,-0.0028162) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00754685,-0.0136282) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000133112,-0.0145375) , 
2, 0.14345, 1, 0, 9.44635e-05,-0.100575) , 
0, 0.00886907, 1, 0, 0.00164563,-0.0996333) , 
0, 0.00238727, 1, 0, 0.501119,-0.0478475)    );
  // itree = 62
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980948,0.0209626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863778,-0.00924579) , 
2, 0.118554, 1, 0, 0.937665,-0.00262278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816193,-0.0278728) , 
4, 0.0235188, 1, 0, 0.931144,-0.00674493) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000170182,-0.0145154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000611657,-0.0144384) , 
5, 0.0180011, 1, 0, 0.000474801,-0.098276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00188726,-0.01427) , 
3, 88.0088, 1, 0, 0.000892083,-0.0978274) , 
0, 0.00238727, 1, 0, 0.498537,-0.0491022)    );
  // itree = 63
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986462,-0.026616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995135,0.056497) , 
7, 0.000141078, 1, 0, 0.993061,0.00617737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79066,-0.0205114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903978,-0.00289448) , 
0, 0.00130367, 1, 0, 0.865848,-0.0251422) , 
0, 0.000113477, 1, 0, 0.924497,-0.0107029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00326401,-0.014041) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000161255,-0.0144704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000416524,-0.0144203) , 
5, 0.018479, 1, 0, 0.000339702,-0.0956834) , 
2, 0.119527, 1, 0, 0.00100996,-0.0951363) , 
0, 0.00238727, 1, 0, 0.497799,-0.0497155)    );
  // itree = 64
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872507,-0.0197136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954345,0.00640942) , 
5, 0.0106947, 1, 0, 0.937725,-0.00295497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781715,-0.0265393) , 
4, 0.0236221, 1, 0, 0.929704,-0.00753715) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00543474,-0.0137258) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144335) , 
2, 0.143291, 1, 0, 0,-0.0930969) , 
0, 0.00886471, 1, 0, 0.00110315,-0.0925853) , 
0, 0.00238582, 1, 0, 0.498379,-0.047041)    );
  // itree = 65
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97811,0.0148502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.841126,-0.0111506) , 
2, 0.142508, 1, 0, 0.936083,-0.00465731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814306,-0.0241407) , 
4, 0.0233454, 1, 0, 0.927271,-0.00964343) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00682552,-0.0134696) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143954) , 
2, 0.142918, 1, 0, 0,-0.0906903) , 
0, 0.00887112, 1, 0, 0.00140124,-0.0898945) , 
0, 0.00238462, 1, 0, 0.502321,-0.0464765)    );
  // itree = 66
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994361,0.0331725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991369,0.0478345) , 
2, 0.282017, 1, 0, 0.994043,0.00615491) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750527,-0.0202978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917236,0.00180107) , 
0, 0.00108635, 1, 0, 0.879704,-0.0147914) , 
0, 0.000113316, 1, 0, 0.932878,-0.00505027) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00492848,-0.0136604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143617) , 
0, 0.0131937, 1, 0, 0.00189985,-0.0871958) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000155271,-0.0143351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143805) , 
7, -0.000427164, 1, 0, 8.25336e-05,-0.0887957) , 
2, 0.285679, 1, 0, 0.00109566,-0.0879038) , 
0, 0.00238688, 1, 0, 0.497021,-0.0438064)    );
  // itree = 67
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97116,0.00194677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593237,-0.016953) , 
2, 0.142491, 1, 0, 0.912141,-0.0161015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94957,-0.0158204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96981,0.0472753) , 
0, 0.0018123, 1, 0, 0.956745,0.00716193) , 
5, 0.0166286, 1, 0, 0.933574,-0.00492299) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0075021,-0.0132461) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.45358e-05,-0.0143127) , 
2, 0.143296, 1, 0, 4.59236e-05,-0.0860283) , 
0, 0.00886471, 1, 0, 0.00157085,-0.0851173) , 
0, 0.00238582, 1, 0, 0.496378,-0.0425415)    );
  // itree = 68
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792008,-0.0212278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945989,-0.00105914) , 
5, 0.006514, 1, 0, 0.93582,-0.00482853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793307,-0.0316274) , 
4, 0.0236293, 1, 0, 0.928737,-0.00941475) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00313169,-0.0138155) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000649184,-0.0141907) , 
5, 0.018479, 1, 0, 0.000452458,-0.0838845) , 
2, 0.119179, 1, 0, 0.0011036,-0.0833582) , 
0, 0.00238727, 1, 0, 0.503313,-0.0433261)    );
  // itree = 69
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944382,0.0033395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90636,-0.047703) , 
4, 0.0177113, 1, 0, 0.933916,-0.0129696) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787461,-0.0219991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968099,0.0420664) , 
6, 0.0373409, 1, 0, 0.929548,0.0146136) , 
0, 0.00170016, 1, 0, 0.93295,-0.00686653) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00316791,-0.0137645) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000155111,-0.0142486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000425746,-0.014191) , 
5, 0.0184825, 1, 0, 0.0003408,-0.0818453) , 
2, 0.119179, 1, 0, 0.00100547,-0.0813125) , 
0, 0.00238377, 1, 0, 0.501038,-0.0413687)    );
  // itree = 70
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987465,0.0449065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971102,-0.0158413) , 
4, 0.0138834, 1, 0, 0.97963,0.00579896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609185,-0.0231936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924625,-0.00340865) , 
5, 0.0143259, 1, 0, 0.870674,-0.0259575) , 
2, 0.094994, 1, 0, 0.931426,-0.00825081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00645896,-0.0132267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.50654e-05,-0.0142109) , 
2, 0.142962, 1, 0, 4.71453e-05,-0.0795591) , 
0, 0.00886907, 1, 0, 0.00135187,-0.0788595) , 
0, 0.00238727, 1, 0, 0.501491,-0.0408903)    );
  // itree = 71
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995721,0.0737078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976332,-0.0181629) , 
7, 0.000165748, 1, 0, 0.986763,0.00860965) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711584,-0.0229292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929479,-0.000989207) , 
5, 0.0118769, 1, 0, 0.903371,-0.0118695) , 
2, 0.0475028, 1, 0, 0.934083,-0.00432746) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0043322,-0.0134776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000493107,-0.0141405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.01419) , 
0, 0.0110358, 1, 0, 0.000146227,-0.0778846) , 
2, 0.119176, 1, 0, 0.00117604,-0.0770056) , 
0, 0.00238688, 1, 0, 0.500388,-0.0381145)    );
  // itree = 72
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78484,-0.021876) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956818,0.000843847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753712,-0.00978013) , 
2, 0.356184, 1, 0, 0.942599,-0.00210097) , 
5, 0.0066352, 1, 0, 0.932479,-0.00611459) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00681632,-0.0130497) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141594) , 
2, 0.142787, 1, 0, 0,-0.0755752) , 
0, 0.00888122, 1, 0, 0.00148022,-0.0747347) , 
0, 0.00238582, 1, 0, 0.506713,-0.0374961)    );
  // itree = 73
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914636,-0.00962434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968694,0.0183484) , 
5, 0.0167404, 1, 0, 0.938959,-0.00105335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795806,-0.0169544) , 
4, 0.0236293, 1, 0, 0.931953,-0.00398263) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00311228,-0.013599) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000158206,-0.0141207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000422561,-0.0140589) , 
5, 0.0184809, 1, 0, 0.000341131,-0.073721) , 
2, 0.119176, 1, 0, 0.001002,-0.0732405) , 
0, 0.00238688, 1, 0, 0.500666,-0.0360681)    );
  // itree = 74
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984514,0.023347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90944,-0.0460209) , 
4, 0.0218475, 1, 0, 0.977872,0.00276194) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.557129,-0.0229896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917845,-0.00209059) , 
5, 0.0142452, 1, 0, 0.853668,-0.0284597) , 
2, 0.0951916, 1, 0, 0.922158,-0.0112431) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00413303,-0.0133685) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000495501,-0.0140148) , 
5, 0.0184809, 1, 0, 0.000342349,-0.0718206) , 
2, 0.119531, 1, 0, 0.00126021,-0.0710757) , 
0, 0.00238727, 1, 0, 0.497694,-0.0388214)    );
  // itree = 75
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898819,-0.0229053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946337,0.00205099) , 
3, 5.37913, 1, 0, 0.942608,-0.000845943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824234,-0.0220007) , 
3, 112.932, 1, 0, 0.935974,-0.00371292) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00434281,-0.0132854) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000487484,-0.0139858) , 
5, 0.018479, 1, 0, 0.000342906,-0.069953) , 
2, 0.119179, 1, 0, 0.00130299,-0.0692023) , 
0, 0.00238633, 1, 0, 0.502081,-0.0341144)    );
  // itree = 76
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994161,0.0236835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978795,0.0407716) , 
2, 0.141183, 1, 0, 0.989553,0.00775825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608935,-0.0204255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893743,-0.00715085) , 
0, 0.000739437, 1, 0, 0.866877,-0.0223622) , 
0, 0.000226601, 1, 0, 0.924397,-0.0082394) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140689) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00291645,-0.0134934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.8985e-05,-0.0140388) , 
2, 0.269084, 1, 0, 0.00125141,-0.0672731) , 
2, 0.0960098, 1, 0, 0.000994891,-0.0677185) , 
0, 0.00238462, 1, 0, 0.494629,-0.035922)    );
  // itree = 77
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97027,0.00487963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932009,-0.0258567) , 
6, 0.0417815, 1, 0, 0.963882,-0.00187369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.484861,-0.0142619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932495,0.00416248) , 
5, 0.0190775, 1, 0, 0.777871,-0.0322375) , 
2, 0.237514, 1, 0, 0.930838,-0.00726771) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00630449,-0.0128518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.82492e-05,-0.014006) , 
2, 0.143296, 1, 0, 4.77884e-05,-0.0663535) , 
0, 0.00887623, 1, 0, 0.00135966,-0.0656223) , 
0, 0.00238633, 1, 0, 0.504827,-0.0340136)    );
  // itree = 78
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958022,0.000208017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669897,-0.0099671) , 
2, 0.356271, 1, 0, 0.940136,-0.00269249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813898,-0.0153448) , 
4, 0.0233454, 1, 0, 0.931277,-0.00616367) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00562841,-0.0129315) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.75151e-05,-0.0139801) , 
2, 0.143511, 1, 0, 4.80936e-05,-0.0646242) , 
0, 0.00888665, 1, 0, 0.0012167,-0.0640519) , 
0, 0.00238688, 1, 0, 0.504445,-0.0327303)    );
  // itree = 79
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953018,0.00874051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889971,-0.0347992) , 
4, 0.0188003, 1, 0, 0.938388,-0.00717623) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79241,-0.0174096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975753,0.0494689) , 
6, 0.0373409, 1, 0, 0.936267,0.0229192) , 
0, 0.00170216, 1, 0, 0.937909,-0.00037883) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00636176,-0.0127316) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139691) , 
2, 0.14345, 1, 0, 0,-0.0630062) , 
0, 0.00886113, 1, 0, 0.00131802,-0.0622887) , 
0, 0.00238462, 1, 0, 0.498453,-0.0294274)    );
  // itree = 80
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960101,-0.0106068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43805,-0.0229751) , 
2, 0.0682395, 1, 0, 0.842712,-0.031435) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916306,-0.00451685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956751,0.0421796) , 
7, 0.000542495, 1, 0, 0.919784,-0.000687601) , 
5, 0.0113756, 1, 0, 0.901971,-0.00779394) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139789) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139449) , 
2, 0.167252, 1, 0, 0,-0.0613669) , 
0, 0.0107477, 1, 0, 0,-0.0618771) , 
0, 0.0035809, 1, 0, 0.502589,-0.0317413)    );
  // itree = 81
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948026,0.00386291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922118,-0.0178371) , 
4, 0.0176405, 1, 0, 0.939174,-0.00361063) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726962,-0.0191936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714175,0.0016245) , 
0, 0.00151558, 1, 0, 0.720559,-0.035009) , 
2, 0.237979, 1, 0, 0.899295,-0.00933815) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139536) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139214) , 
2, 0.167241, 1, 0, 0,-0.0597732) , 
0, 0.0107333, 1, 0, 0,-0.0602527) , 
0, 0.00357683, 1, 0, 0.495602,-0.0321936)    );
  // itree = 82
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950583,0.00176552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92137,-0.0208077) , 
4, 0.0198802, 1, 0, 0.943023,-0.00546458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644379,-0.0122839) , 
2, 0.380766, 1, 0, 0.924501,-0.008977) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000728942,-0.0137604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.01193e-05,-0.0138856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00193879,-0.0134828) , 
6, 0.0324435, 1, 0, 0.000660973,-0.0579583) , 
5, 0.018479, 1, 0, 0.000682176,-0.0582384) , 
0, 0.00238582, 1, 0, 0.501955,-0.0315087)    );
  // itree = 83
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955248,-0.00602607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656276,-0.0186388) , 
0, 0.000446918, 1, 0, 0.802717,-0.0435334) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935693,-0.00491247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964229,0.0262778) , 
5, 0.0225863, 1, 0, 0.939236,-0.00188804) , 
5, 0.00786505, 1, 0, 0.926083,-0.00590037) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00121333,-0.0136068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138879) , 
6, 0.00925867, 1, 0, 0.000358895,-0.0569252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00284344,-0.0132471) , 
6, 0.0324435, 1, 0, 0.00108723,-0.0563409) , 
0, 0.00238727, 1, 0, 0.493676,-0.0294798)    );
  // itree = 84
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972964,0.000989159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998725,0.0803666) , 
5, 0.0186599, 1, 0, 0.981889,0.00637248) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676797,-0.0230257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847324,-0.00521189) , 
0, 0.000802851, 1, 0, 0.831023,-0.0189631) , 
0, 0.00034041, 1, 0, 0.90093,-0.00722324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138914) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.92533e-05,-0.013839) , 
2, 0.143291, 1, 0, 4.87946e-05,-0.0552597) , 
0, 0.0097236, 1, 0, 3.80669e-05,-0.0557657) , 
0, 0.00357949, 1, 0, 0.497772,-0.0289465)    );
  // itree = 85
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803278,-0.0211213) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944952,-0.013656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934761,0.00860741) , 
0, 0.00113477, 1, 0, 0.940735,-0.00203444) , 
5, 0.00661107, 1, 0, 0.932328,-0.00502809) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000141689,-0.0138236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000608944,-0.0136957) , 
5, 0.0184809, 1, 0, 0.00045793,-0.0541045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00257862,-0.0132222) , 
3, 113.565, 1, 0, 0.000904013,-0.0536402) , 
0, 0.00238727, 1, 0, 0.492438,-0.0279865)    );
  // itree = 86
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928971,-0.00338748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607427,-0.036231) , 
0, 0.0014296, 1, 0, 0.895234,-0.0216799) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940195,-0.01663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961798,0.0270507) , 
0, 0.00158868, 1, 0, 0.950516,0.00296334) , 
5, 0.0159991, 1, 0, 0.924239,-0.0087502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00548947,-0.0125586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138148) , 
2, 0.142927, 1, 0, 0,-0.052503) , 
0, 0.00887789, 1, 0, 0.00116056,-0.0520137) , 
0, 0.00238688, 1, 0, 0.498433,-0.0287072)    );
  // itree = 87
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946014,0.00392804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899164,-0.0201883) , 
4, 0.0218926, 1, 0, 0.940161,-0.00110676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441829,-0.0105723) , 
0, 0.00221267, 1, 0, 0.901617,-0.00354295) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138236) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013795) , 
2, 0.142966, 1, 0, 0,-0.0511458) , 
0, 0.0107414, 1, 0, 0,-0.0515998) , 
0, 0.00358032, 1, 0, 0.499707,-0.0249651)    );
  // itree = 88
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945139,0.0030983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854598,-0.0163463) , 
0, 0.00203883, 1, 0, 0.937398,-0.000349501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81229,-0.0152438) , 
4, 0.0236324, 1, 0, 0.93121,-0.00289026) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00491997,-0.0125508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137796) , 
0, 0.0131639, 1, 0, 0.00196523,-0.0486844) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000174317,-0.0137355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139241) , 
6, 0.0231938, 1, 0, 8.61689e-05,-0.0505998) , 
2, 0.285592, 1, 0, 0.00115368,-0.0495116) , 
0, 0.0023826, 1, 0, 0.502772,-0.0243668)    );
  // itree = 89
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941685,-0.00814204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938994,0.00870447) , 
0, 0.00147291, 1, 0, 0.940894,-0.00246608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810677,-0.0211339) , 
3, 112.413, 1, 0, 0.932878,-0.00566204) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00258305,-0.0130784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.20839e-05,-0.0137446) , 
2, 0.269128, 1, 0, 0.0011642,-0.0479139) , 
2, 0.0959974, 1, 0, 0.00092511,-0.0482874) , 
0, 0.00238462, 1, 0, 0.49702,-0.0255972)    );
  // itree = 90
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95481,0.0132533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934664,-0.0167379) , 
4, 0.0145483, 1, 0, 0.944427,-0.00242799) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.376331,-0.0143099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898296,-0.00198089) , 
5, 0.0168752, 1, 0, 0.77681,-0.0248535) , 
2, 0.190383, 1, 0, 0.903193,-0.00794475) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013772) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137396) , 
2, 0.142927, 1, 0, 0,-0.0473139) , 
0, 0.00972497, 1, 0, 0,-0.047764) , 
0, 0.00358032, 1, 0, 0.498501,-0.0257865)    );
  // itree = 91
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995969,0.0589345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920438,-0.048798) , 
8, 0.196243, 1, 0, 0.987479,0.00244772) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665729,-0.019931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845239,-0.00684117) , 
0, 0.000819004, 1, 0, 0.824369,-0.0206276) , 
0, 0.000170205, 1, 0, 0.898621,-0.0101231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137492) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.41996e-05,-0.0137007) , 
2, 0.166753, 1, 0, 5.06145e-05,-0.0460279) , 
0, 0.0107414, 1, 0, 3.83284e-05,-0.0464589) , 
0, 0.00358032, 1, 0, 0.499231,-0.0262732)    );
  // itree = 92
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73933,-0.0198777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893166,-0.00785005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928976,0.00612791) , 
5, 0.0157404, 1, 0, 0.913431,-0.00112462) , 
7, 3.72834e-05, 1, 0, 0.903684,-0.0039314) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013705) , 
2, 0.143461, 1, 0, 0,-0.0448884) , 
0, 0.0107488, 1, 0, 0,-0.0453092) , 
0, 0.0035809, 1, 0, 0.497002,-0.0225525)    );
  // itree = 93
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670777,-0.0266089) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948151,-0.00684934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87334,0.010301) , 
0, 0.00119095, 1, 0, 0.916945,0.00306046) , 
5, 0.00561778, 1, 0, 0.904886,-0.000636596) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137135) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136883) , 
2, 0.166753, 1, 0, 0,-0.0437315) , 
0, 0.0107488, 1, 0, 0,-0.0441417) , 
0, 0.0035809, 1, 0, 0.501391,-0.0200358)    );
  // itree = 94
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962838,0.0199604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934242,-0.015275) , 
4, 0.0146286, 1, 0, 0.948219,0.000242264) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.373328,-0.0144873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902881,0.00645079) , 
5, 0.0170361, 1, 0, 0.765457,-0.0190378) , 
2, 0.190383, 1, 0, 0.902693,-0.00456043) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136966) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000219378,-0.0136036) , 
2, 0.262138, 1, 0, 0.000105513,-0.0424958) , 
0, 0.0107428, 1, 0, 7.79428e-05,-0.0429273) , 
0, 0.0035809, 1, 0, 0.505217,-0.0214557)    );
  // itree = 95
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944671,0.00325757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905915,-0.0394877) , 
5, 0.0230095, 1, 0, 0.942362,0.000337766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806572,-0.0120342) , 
4, 0.0236221, 1, 0, 0.935771,-0.00155481) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00324393,-0.0126784) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000661538,-0.0134574) , 
5, 0.0184825, 1, 0, 0.000447234,-0.0416385) , 
2, 0.119728, 1, 0, 0.00112793,-0.0410841) , 
0, 0.00238633, 1, 0, 0.504995,-0.0197738)    );
  // itree = 96
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934646,-0.00628369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552784,-0.0196401) , 
0, 0.00204246, 1, 0, 0.900046,-0.011037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930588,0.0286493) , 
6, 0.0464009, 1, 0, 0.902421,-0.00751408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136652) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.83279e-05,-0.013616) , 
2, 0.166697, 1, 0, 5.30008e-05,-0.0403973) , 
0, 0.0107477, 1, 0, 3.94011e-05,-0.0407967) , 
0, 0.00358032, 1, 0, 0.503111,-0.0222418)    );
  // itree = 97
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870933,-0.0235611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913872,-0.000904529) , 
3, 5.36667, 1, 0, 0.910297,-0.00378014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738809,-0.0153349) , 
3, 112.696, 1, 0, 0.899376,-0.00617166) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136495) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000149864,-0.0135766) , 
2, 0.142918, 1, 0, 0.000105182,-0.0393141) , 
0, 0.0107373, 1, 0, 7.81045e-05,-0.0397105) , 
0, 0.00357597, 1, 0, 0.501885,-0.0209959)    );
  // itree = 98
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992022,0.0186335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967098,0.0399164) , 
2, 0.282366, 1, 0, 0.989327,0.00600607) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763895,-0.0146749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912189,-0.000315275) , 
0, 0.000947607, 1, 0, 0.888502,-0.00832945) , 
0, 0.000226955, 1, 0, 0.936861,-0.00145358) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0040009,-0.0123189) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00065168,-0.013443) , 
7, -0.000136554, 1, 0, 0.000194834,-0.0388203) , 
2, 0.120016, 1, 0, 0.00110993,-0.0380817) , 
0, 0.00238633, 1, 0, 0.501919,-0.0184785)    );
  // itree = 99
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95982,-0.000128079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418682,-0.0175159) , 
2, 0.118742, 1, 0, 0.864413,-0.0196599) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932468,-0.0164013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909679,0.0196471) , 
0, 0.00136051, 1, 0, 0.920863,0.00178839) , 
5, 0.0143229, 1, 0, 0.89897,-0.00653001) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013621) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135985) , 
2, 0.166545, 1, 0, 0,-0.0374227) , 
0, 0.0107488, 1, 0, 0,-0.0377743) , 
0, 0.0035809, 1, 0, 0.496016,-0.020535)    );
  // itree = 100
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656552,-0.0168277) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930263,-0.000645573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664557,-0.0100883) , 
2, 0.356968, 1, 0, 0.910947,-0.0033113) , 
5, 0.00575838, 1, 0, 0.898085,-0.005635) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136095) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.06831e-05,-0.0135593) , 
2, 0.142962, 1, 0, 5.0768e-05,-0.0364079) , 
0, 0.00971968, 1, 0, 3.95044e-05,-0.0367706) , 
0, 0.0035809, 1, 0, 0.502225,-0.0193596)    );
  // itree = 101
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984919,-0.00719692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931927,0.0238371) , 
2, 0.282715, 1, 0, 0.979009,0.00148127) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743573,-0.0212857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829842,-0.00708568) , 
0, 0.000956542, 1, 0, 0.817046,-0.0225427) , 
0, 0.000340271, 1, 0, 0.89154,-0.0114931) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135922) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135717) , 
2, 0.143248, 1, 0, 0,-0.0355175) , 
0, 0.0107382, 1, 0, 0,-0.0358444) , 
0, 0.00357683, 1, 0, 0.494707,-0.0223321)    );
  // itree = 102
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936733,-0.000724672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812558,-0.0273258) , 
0, 0.00204259, 1, 0, 0.928479,-0.00520568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958513,0.0232581) , 
7, 0.000535432, 1, 0, 0.930933,-0.00252713) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00357376,-0.0122884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000862995,-0.013299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135588) , 
0, 0.0110414, 1, 0, 0.000247127,-0.0349624) , 
2, 0.119179, 1, 0, 0.00104993,-0.0343522) , 
0, 0.00238727, 1, 0, 0.503392,-0.0171597)    );
  // itree = 103
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960948,0.0208674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932337,-0.0147347) , 
4, 0.0144419, 1, 0, 0.945885,-0.000241144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383416,-0.0130355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884452,-0.000402948) , 
5, 0.0171417, 1, 0, 0.748346,-0.0223075) , 
2, 0.190383, 1, 0, 0.896918,-0.00571103) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135663) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135464) , 
2, 0.14361, 1, 0, 0,-0.0337366) , 
0, 0.0107455, 1, 0, 0,-0.0340511) , 
0, 0.00357949, 1, 0, 0.505785,-0.0180697)    );
  // itree = 104
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948042,0.00540468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861242,-0.0152509) , 
0, 0.00203212, 1, 0, 0.940451,0.00184254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80593,-0.0151778) , 
4, 0.0236449, 1, 0, 0.93393,-0.000698595) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00166356,-0.01289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00108547,-0.0131272) , 
5, 0.0182815, 1, 0, 0.000766497,-0.0329467) , 
6, 0.00927253, 1, 0, 0.000967068,-0.0326332) , 
0, 0.00238633, 1, 0, 0.500961,-0.0155188)    );
  // itree = 105
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993149,0.0173753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980989,0.040367) , 
2, 0.188244, 1, 0, 0.990562,0.00629986) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796306,-0.0129649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845014,-0.00107248) , 
0, 0.00129708, 1, 0, 0.829921,-0.0129111) , 
0, 0.000169032, 1, 0, 0.903301,-0.00413558) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135416) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135227) , 
2, 0.167015, 1, 0, 0,-0.0320247) , 
0, 0.0107592, 1, 0, 0,-0.0323223) , 
0, 0.00358032, 1, 0, 0.499137,-0.0167472)    );
  // itree = 106
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877494,-0.00902974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937479,0.00885199) , 
5, 0.016571, 1, 0, 0.905132,-0.00320391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748974,-0.0183941) , 
4, 0.0236449, 1, 0, 0.897812,-0.00600095) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135329) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.91579e-05,-0.0134819) , 
2, 0.143291, 1, 0, 4.97617e-05,-0.031149) , 
0, 0.00971968, 1, 0, 3.8643e-05,-0.0314721) , 
0, 0.0035809, 1, 0, 0.497493,-0.0173586)    );
  // itree = 107
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95649,0.0136914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910061,-0.0179729) , 
4, 0.0176198, 1, 0, 0.940614,-0.000339908) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.368909,-0.0113131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898481,-0.000666288) , 
5, 0.0181594, 1, 0, 0.735923,-0.0226658) , 
2, 0.214181, 1, 0, 0.896455,-0.00515635) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135207) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135001) , 
2, 0.143257, 1, 0, 0,-0.0303971) , 
0, 0.00971174, 1, 0, 0,-0.0306789) , 
0, 0.00357693, 1, 0, 0.490083,-0.016726)    );
  // itree = 108
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908765,0.000881999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826217,-0.0363315) , 
5, 0.0220467, 1, 0, 0.902603,-0.00269629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944993,0.0319348) , 
7, 0.000534175, 1, 0, 0.90614,0.000359153) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135094) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.82183e-05,-0.0134587) , 
2, 0.143296, 1, 0, 4.86214e-05,-0.0295608) , 
0, 0.00972614, 1, 0, 3.82117e-05,-0.0298509) , 
0, 0.0035809, 1, 0, 0.497282,-0.0132725)    );
  // itree = 109
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987369,-0.00936118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991427,0.0409429) , 
4, 0.015796, 1, 0, 0.989525,0.0041649) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951821,0.0120548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748053,-0.00963382) , 
2, 0.0476234, 1, 0, 0.811182,-0.015473) , 
0, 0.000170205, 1, 0, 0.891497,-0.00662924) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134986) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134786) , 
2, 0.143489, 1, 0, 0,-0.0288432) , 
0, 0.00973872, 1, 0, 0,-0.0291245) , 
0, 0.0035809, 1, 0, 0.494452,-0.0166479)    );
  // itree = 110
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992213,0.0690752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955672,-0.0189509) , 
6, 0.0233339, 1, 0, 0.97206,0.00535667) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.455535,-0.0252481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889502,-0.00280331) , 
5, 0.0107907, 1, 0, 0.847453,-0.0150514) , 
2, 0.0475028, 1, 0, 0.891459,-0.00784408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134847) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.77618e-05,-0.0134317) , 
2, 0.166697, 1, 0, 5.2429e-05,-0.0280383) , 
0, 0.0107398, 1, 0, 3.88724e-05,-0.0283226) , 
0, 0.00357693, 1, 0, 0.496205,-0.0169242)    );
  // itree = 111
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972761,0.00309243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507805,-0.0161294) , 
2, 0.0712455, 1, 0, 0.861581,-0.0158355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938331,-0.0165811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896281,0.013706) , 
0, 0.00119045, 1, 0, 0.916831,0.00177352) , 
5, 0.0124636, 1, 0, 0.901287,-0.00318073) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.81248e-05,-0.0134205) , 
2, 0.166753, 1, 0, 5.28892e-05,-0.0273192) , 
0, 0.0107428, 1, 0, 3.93291e-05,-0.0275813) , 
0, 0.0035809, 1, 0, 0.501386,-0.0140077)    );
  // itree = 112
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936958,-0.00166917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563294,-0.0213639) , 
0, 0.00170205, 1, 0, 0.886019,-0.00896122) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939319,-0.0223769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924757,0.0422624) , 
0, 0.00185788, 1, 0, 0.932105,0.00742404) , 
5, 0.019308, 1, 0, 0.900309,-0.00388053) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134643) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000322803,-0.0132883) , 
2, 0.333262, 1, 0, 0.000107432,-0.0265688) , 
0, 0.0107477, 1, 0, 8.06987e-05,-0.0268417) , 
0, 0.0035809, 1, 0, 0.508526,-0.0138733)    );
  // itree = 113
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722519,-0.0241273) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921003,0.00138038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72987,-0.0123062) , 
4, 0.0234692, 1, 0, 0.908775,-0.00111209) , 
5, 0.00576899, 1, 0, 0.899961,-0.00342065) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.9541e-05,-0.0134039) , 
2, 0.142918, 1, 0, 4.99432e-05,-0.0259287) , 
0, 0.0107458, 1, 0, 3.82699e-05,-0.026159) , 
0, 0.00357949, 1, 0, 0.494407,-0.0136678)    );
  // itree = 114
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976616,0.0106798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48026,-0.0153256) , 
2, 0.118742, 1, 0, 0.89683,-0.0117727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940189,-0.0171948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964107,0.0287952) , 
0, 0.00136173, 1, 0, 0.951939,0.00565055) , 
5, 0.014305, 1, 0, 0.930918,-0.000995308) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00330965,-0.0118816) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00111694,-0.0129616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.01343) , 
0, 0.0110521, 1, 0, 0.000348804,-0.0256572) , 
2, 0.119146, 1, 0, 0.0010855,-0.0251776) , 
0, 0.00238688, 1, 0, 0.500805,-0.0121814)    );
  // itree = 115
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913968,0.00395313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.805166,-0.0277391) , 
4, 0.0192398, 1, 0, 0.895576,-0.00511138) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951292,-0.0220612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922188,0.0570374) , 
0, 0.00204076, 1, 0, 0.937304,0.0161699) , 
5, 0.0212174, 1, 0, 0.903437,-0.00110217) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000159042,-0.0133358) , 
2, 0.166753, 1, 0, 0.000108321,-0.0245607) , 
0, 0.0107477, 1, 0, 8.00554e-05,-0.0248275) , 
0, 0.00358032, 1, 0, 0.507636,-0.0114973)    );
  // itree = 116
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781067,-0.00655382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972135,0.0351709) , 
6, 0.0463821, 1, 0, 0.79354,-0.005132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00199209,-0.0175004) , 
5, 0.0245775, 1, 0, 0.658156,-0.00988971) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.018639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134141) , 
0, 0.0179309, 1, 0, 0,-0.0311519) , 
4, 0.0255059, 1, 0, 0.501073,-0.0149644)    );
  // itree = 117
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984224,0.0355227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85446,-0.011523) , 
2, 0.022737, 1, 0, 0.930587,0.000610885) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00773731,-0.0186483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.52763e-05,-0.0133752) , 
4, 0.0139186, 1, 0, 0.00189253,-0.0278663) , 
0, 0.00119291, 1, 0, 0.144224,-0.0235019) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810525,0.00196371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823206,-0.0198028) , 
4, 0.014433, 1, 0, 0.819394,-0.0182869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937595,-0.011256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679576,0.00749138) , 
0, 0.00133352, 1, 0, 0.814837,-0.000919376) , 
3, 25.1786, 1, 0, 0.816367,-0.00674986) , 
7, 8.86918e-05, 1, 0, 0.494432,-0.0147736)    );
  // itree = 118
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959107,0.00431535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668235,-0.00719267) , 
2, 0.356271, 1, 0, 0.940099,0.000977316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813727,-0.0124582) , 
4, 0.0236449, 1, 0, 0.934174,-0.000926309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00288848,-0.0119007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00158684,-0.0126598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133942) , 
0, 0.0110321, 1, 0, 0.000442852,-0.0230263) , 
2, 0.119518, 1, 0, 0.00104087,-0.0226557) , 
0, 0.00238688, 1, 0, 0.501852,-0.0109936)    );
  // itree = 119
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769912,-0.00442917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97441,0.0390988) , 
7, 0.000538234, 1, 0, 0.782984,-0.00296162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00344531,-0.0177161) , 
5, 0.0245775, 1, 0, 0.6411,-0.0081515) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0187275) , 
6, 0.0254967, 1, 0, 0,-0.0302378) , 
4, 0.025504, 1, 0, 0.491963,-0.0132894)    );
  // itree = 120
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935851,0.00392848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923817,-0.0250116) , 
5, 0.022033, 1, 0, 0.934568,0.00042652) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00328994,-0.0163733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874629,0.0454583) , 
7, 0.000484762, 1, 0, 0.10127,-0.0221436) , 
0, 0.00217343, 1, 0, 0.652338,-0.00721777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0184428) , 
6, 0.0255001, 1, 0, 0,-0.0285159) , 
4, 0.0255026, 1, 0, 0.499253,-0.0122158)    );
  // itree = 121
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989699,0.00858894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998456,0.073572) , 
5, 0.0198303, 1, 0, 0.992275,0.00587579) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832602,-0.00350077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802278,-0.0291344) , 
5, 0.0226233, 1, 0, 0.828869,-0.0123942) , 
0, 0.000170135, 1, 0, 0.903955,-0.00399901) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133687) , 
2, 0.142966, 1, 0, 0,-0.0208656) , 
0, 0.00972361, 1, 0, 0,-0.021201) , 
0, 0.00357949, 1, 0, 0.49647,-0.0117533)    );
  // itree = 122
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975651,0.026976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.496164,-0.0197329) , 
2, 0.047497, 1, 0, 0.834333,-0.0133029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950136,-0.00696441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895684,0.0108609) , 
0, 0.00118598, 1, 0, 0.9238,0.00363249) , 
5, 0.0108098, 1, 0, 0.905483,0.000165129) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133846) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133612) , 
6, 0.0139044, 1, 0, 0,-0.0203279) , 
0, 0.00972061, 1, 0, 0,-0.0206624) , 
0, 0.00357872, 1, 0, 0.501494,-0.00912724)    );
  // itree = 123
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813177,-0.017713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928152,0.00197193) , 
5, 0.00840046, 1, 0, 0.914552,-0.0013013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000159886,-0.0133038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133549) , 
0, 0.0116977, 1, 0, 7.76816e-05,-0.0206953) , 
0, 0.00326959, 1, 0, 0.649506,-0.00692234) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0190569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133565) , 
4, 0.034347, 1, 0, 0,-0.0271444) , 
4, 0.0255093, 1, 0, 0.494512,-0.011748)    );
  // itree = 124
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989938,-0.0126606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997211,0.068425) , 
5, 0.0163594, 1, 0, 0.993545,0.00429603) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765937,-0.0137665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915491,0.00142982) , 
0, 0.00118198, 1, 0, 0.872871,-0.011103) , 
0, 0.000112312, 1, 0, 0.928351,-0.00402329) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.003608,-0.011541) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00017951,-0.0132228) , 
6, 0.0208631, 1, 0, 9.31204e-05,-0.0191755) , 
0, 0.00886113, 1, 0, 0.000814187,-0.019515) , 
0, 0.00238462, 1, 0, 0.498735,-0.0111987)    );
  // itree = 125
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771539,-0.00330497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988784,0.0520391) , 
7, 0.000533067, 1, 0, 0.785449,-0.00160365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0259601,-0.0168274) , 
5, 0.024375, 1, 0, 0.652329,-0.00590231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0180532) , 
7, -0.000881499, 1, 0, 0,-0.0247932) , 
4, 0.025515, 1, 0, 0.502424,-0.0102434)    );
  // itree = 126
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941743,0.00215687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0841004,-0.0128463) , 
0, 0.00223752, 1, 0, 0.787613,-0.00247158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0466855,-0.0208882) , 
5, 0.0242565, 1, 0, 0.64371,-0.00821067) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0174349) , 
7, -0.000883942, 1, 0, 0,-0.0231348) , 
4, 0.0255135, 1, 0, 0.495862,-0.0116385)    );
  // itree = 127
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970571,-0.00523925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994485,0.0590221) , 
5, 0.0163445, 1, 0, 0.982168,0.00455096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841754,-0.00322544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81592,-0.020143) , 
6, 0.0440713, 1, 0, 0.837788,-0.0117156) , 
0, 0.00034041, 1, 0, 0.904895,-0.00415499) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133463) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133238) , 
6, 0.0139088, 1, 0, 0,-0.0176303) , 
0, 0.0107491, 1, 0, 0,-0.0179856) , 
0, 0.0035809, 1, 0, 0.507451,-0.0102296)    );
  // itree = 128
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762157,-0.00750747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832346,0.00876533) , 
5, 0.0176172, 1, 0, 0.790952,-0.00253659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00255076,-0.0174882) , 
5, 0.0246266, 1, 0, 0.646733,-0.00648539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0175799) , 
6, 0.0254828, 1, 0, 0,-0.0227057) , 
4, 0.0255235, 1, 0, 0.501634,-0.0101245)    );
  // itree = 129
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722389,-0.0123642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932736,0.00599144) , 
5, 0.00702926, 1, 0, 0.916526,0.00292918) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000155111,-0.0132591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133115) , 
5, 0.0278237, 1, 0, 7.61116e-05,-0.0177831) , 
0, 0.00327522, 1, 0, 0.647701,-0.00314643) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0189618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133153) , 
4, 0.0343395, 1, 0, 0,-0.0233356) , 
4, 0.025504, 1, 0, 0.496767,-0.00785114)    );
  // itree = 130
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939092,0.00118032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.162267,-0.0116458) , 
0, 0.00220884, 1, 0, 0.78388,-0.00257687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00289089,-0.0174792) , 
5, 0.0246274, 1, 0, 0.646645,-0.00617108) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0174438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133095) , 
4, 0.034343, 1, 0, 0,-0.0213125) , 
4, 0.0255059, 1, 0, 0.498775,-0.00963351)    );
  // itree = 131
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876667,-0.0133916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950577,0.00311464) , 
5, 0.00915575, 1, 0, 0.939809,-0.000361261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82201,-0.0152903) , 
4, 0.0236293, 1, 0, 0.934015,-0.00220034) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00268272,-0.0113425) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000861022,-0.0128035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133004) , 
0, 0.011019, 1, 0, 0.000252005,-0.0164723) , 
2, 0.119139, 1, 0, 0.000840409,-0.0160409) , 
0, 0.00238727, 1, 0, 0.50743,-0.00852732)    );
  // itree = 132
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643383,-0.0135808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.841119,0.00567497) , 
5, 0.00898725, 1, 0, 0.807642,0.000630713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000130971,-0.0238564) , 
5, 0.0235447, 1, 0, 0.656272,-0.00537271) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0226644) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83813,0.0441839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143191) , 
4, 0.0244127, 1, 0, 0.18957,-0.00660788) , 
5, 0.0228434, 1, 0, 0.118431,-0.0201428) , 
4, 0.0231969, 1, 0, 0.497083,-0.00974433)    );
  // itree = 133
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952713,0.0137024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595356,-0.0183803) , 
0, 0.00153185, 1, 0, 0.900257,0.00230081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910099,-0.0328026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903283,0.013094) , 
0, 0.00168758, 1, 0, 0.906609,-0.0138999) , 
7, 0.000302882, 1, 0, 0.903064,-0.00485939) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013315) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.56149e-05,-0.0132174) , 
6, 0.0139049, 1, 0, 4.90808e-05,-0.0148852) , 
0, 0.00972497, 1, 0, 3.8554e-05,-0.0152644) , 
0, 0.00358032, 1, 0, 0.497711,-0.00953004)    );
  // itree = 134
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9454,0.00201565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855265,-0.0154877) , 
3, 100.383, 1, 0, 0.937374,-0.00118619) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00661392,-0.0172741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648777,0.0268885) , 
6, 0.0463832, 1, 0, 0.0857906,-0.017676) , 
0, 0.00218953, 1, 0, 0.647203,-0.00680497) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0169499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132865) , 
4, 0.0343713, 1, 0, 0,-0.0186334) , 
4, 0.0255277, 1, 0, 0.493255,-0.00961857)    );
  // itree = 135
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91307,0.0508852) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646583,-0.0143387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930389,0.0381983) , 
8, 0.0336566, 1, 0, 0.832838,0.00194761) , 
4, 0.00703444, 1, 0, 0.849533,0.00721669) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.352561,-0.0181509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184429,-0.01386) , 
6, 0.0162159, 1, 0, 0.245121,-0.0265871) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619136,-0.00601814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0161259) , 
4, 0.0255513, 1, 0, 0.469599,-0.00988017) , 
5, 0.00915064, 1, 0, 0.445635,-0.0116637) , 
2, 0.0237979, 1, 0, 0.502025,-0.00902773)    );
  // itree = 136
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.185346,-0.0157619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915307,0.00527937) , 
7, 1.63776e-05, 1, 0, 0.807267,-0.000302721) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0128194,-0.0192153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922233,-0.0079727) , 
7, 0.000349373, 1, 0, 0.467201,-0.0143842) , 
4, 0.0186024, 1, 0, 0.681501,-0.00551045) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620182,-0.0189053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949698,-0.00452095) , 
5, 0.0198828, 1, 0, 0.790395,-0.0372023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.187076,-0.00640308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0536249,-0.017226) , 
2, 0.425976, 1, 0, 0.156849,-0.0124509) , 
0, 0.00119199, 1, 0, 0.258697,-0.0164299) , 
2, 0.190325, 1, 0, 0.506403,-0.0100325)    );
  // itree = 137
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762385,-0.00451288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967298,0.0278706) , 
7, 0.000482609, 1, 0, 0.787109,-0.00184379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00241351,-0.0173486) , 
5, 0.0245136, 1, 0, 0.649486,-0.00508059) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0184357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132709) , 
4, 0.0354656, 1, 0, 0,-0.0182759) , 
4, 0.0255298, 1, 0, 0.503007,-0.00805655)    );
  // itree = 138
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863647,0.038074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532317,-0.00715395) , 
4, 0.00702827, 1, 0, 0.643303,0.00422746) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.17587,-0.0229866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.14442e-05,-0.0132155) , 
0, 0.00835214, 1, 0, 0.0235346,-0.0185835) , 
2, 0.0475972, 1, 0, 0.156099,-0.0137044) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906995,0.00879858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737395,-0.0140473) , 
4, 0.0218892, 1, 0, 0.877053,0.00184142) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421532,-0.0170293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535041,-0.00379213) , 
3, 50.3688, 1, 0, 0.47924,-0.0266411) , 
2, 0.332442, 1, 0, 0.826944,-0.00174627) , 
7, 9.73039e-05, 1, 0, 0.497937,-0.00761096)    );
  // itree = 139
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943746,0.00196383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551407,-0.0150783) , 
0, 0.00219742, 1, 0, 0.914897,-0.000202496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736376,-0.0125053) , 
3, 112.697, 1, 0, 0.903598,-0.00204791) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132574) , 
6, 0.0115913, 1, 0, 0,-0.0127194) , 
0, 0.0107477, 1, 0, 0,-0.0131448) , 
0, 0.0035809, 1, 0, 0.501697,-0.00698355)    );
  // itree = 140
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243262,-0.0206427) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924873,0.0013236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.01193e-05,-0.0132071) , 
0, 0.00327799, 1, 0, 0.656229,-0.00308231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0179595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132576) , 
4, 0.0365529, 1, 0, 0,-0.0174768) , 
4, 0.0255139, 1, 0, 0.515683,-0.00616523) , 
5, 0.00458917, 1, 0, 0.503531,-0.0075271)    );
  // itree = 141
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992914,0.0490795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665805,-0.00569044) , 
0, 0.000990405, 1, 0, 0.881462,0.00610853) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637197,-0.0304051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572844,-0.0136117) , 
2, 0.0169881, 1, 0, 0.588298,-0.0143909) , 
4, 0.0162766, 1, 0, 0.7704,-0.00165743) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12622,-0.0171261) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899146,-0.0160156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272987,-0.00375796) , 
0, 0.00119316, 1, 0, 0.412066,-0.00822797) , 
4, 0.0116233, 1, 0, 0.368297,-0.0115681) , 
2, 0.0713937, 1, 0, 0.494759,-0.00845117)    );
  // itree = 142
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924538,0.0102329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843732,-0.0421377) , 
5, 0.0203657, 1, 0, 0.917643,0.00400038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866417,-0.0257418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876435,0.0295942) , 
0, 0.00203311, 1, 0, 0.87115,-0.0123624) , 
4, 0.0210802, 1, 0, 0.908058,0.000626765) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132467) , 
6, 0.0115875, 1, 0, 0,-0.0119369) , 
0, 0.00971851, 1, 0, 0,-0.0122954) , 
0, 0.00358032, 1, 0, 0.501273,-0.00516198)    );
  // itree = 143
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930877,0.0517916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91749,0.0224054) , 
6, 0.0140783, 1, 0, 0.921046,0.00944522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967226,-0.067364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545714,-0.00431745) , 
0, 0.00119119, 1, 0, 0.704578,-0.0104926) , 
4, 0.0139643, 1, 0, 0.818996,4.59031e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0755982,-0.0187028) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.41801,-0.00766967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680252,0.0128149) , 
6, 0.0463877, 1, 0, 0.436889,-0.00719568) , 
5, 0.00925117, 1, 0, 0.399434,-0.0103709) , 
2, 0.0475842, 1, 0, 0.498252,-0.00791743)    );
  // itree = 144
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981744,0.0583632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952431,-0.00392111) , 
4, 0.00640317, 1, 0, 0.966057,0.0105289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154403,-0.0248128) , 
0, 0.000761598, 1, 0, 0.475803,-0.0214834) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811425,0.0019511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0137536,-0.0189306) , 
5, 0.0244051, 1, 0, 0.651932,-0.00260584) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0189991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132436) , 
5, 0.0376696, 1, 0, 0,-0.0164595) , 
4, 0.0255056, 1, 0, 0.500618,-0.0058213) , 
5, 0.00905882, 1, 0, 0.497242,-0.00795163)    );
  // itree = 145
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854205,-0.0181395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948361,0.00317451) , 
5, 0.00768256, 1, 0, 0.939994,0.000143894) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0135578,-0.0166121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674919,0.0360451) , 
6, 0.0463814, 1, 0, 0.0975897,-0.0135739) , 
0, 0.00218348, 1, 0, 0.656855,-0.00446676) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0175552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132389) , 
4, 0.0343533, 1, 0, 0,-0.0145058) , 
4, 0.0255171, 1, 0, 0.497425,-0.00690341)    );
  // itree = 146
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996445,0.057072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73279,-0.0179737) , 
0, 0.0010248, 1, 0, 0.908299,0.0034054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407262,-0.0201024) , 
4, 0.0208776, 1, 0, 0.82632,-0.000717688) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0760826,-0.0209496) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610167,-0.00302939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292665,-0.00905896) , 
2, 0.198329, 1, 0, 0.447949,-0.00756159) , 
5, 0.00925117, 1, 0, 0.411197,-0.010878) , 
2, 0.0475972, 1, 0, 0.508841,-0.00848816)    );
  // itree = 147
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910462,0.0274556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571746,-0.0155786) , 
4, 0.0185314, 1, 0, 0.820854,0.00223989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43331,-0.0235796) , 
3, 100.948, 1, 0, 0.778278,-0.000763036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121135,-0.0169356) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664032,-0.00177056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0292618,-0.0160718) , 
4, 0.0239804, 1, 0, 0.427061,-0.00757661) , 
4, 0.0116133, 1, 0, 0.377555,-0.0111324) , 
2, 0.0713937, 1, 0, 0.504035,-0.00785953)    );
  // itree = 148
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72564,-0.0130418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840674,0.0112988) , 
5, 0.0123961, 1, 0, 0.803807,0.00130971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0256227) , 
5, 0.023549, 1, 0, 0.656541,-0.00360323) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0200772) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978511,0.0347665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132294) , 
0, 0.00357693, 1, 0, 0.191239,-0.00457378) , 
5, 0.0231101, 1, 0, 0.124718,-0.0134376) , 
4, 0.0231945, 1, 0, 0.500243,-0.00649346)    );
  // itree = 149
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963029,-0.00843165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940959,0.0306664) , 
0, 0.000430815, 1, 0, 0.953772,0.00795172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.032525,-0.0276744) , 
0, 0.000905595, 1, 0, 0.452638,-0.0184828) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822441,0.00255177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248548,-0.017905) , 
5, 0.0235402, 1, 0, 0.708113,-0.00161604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.019644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132237) , 
4, 0.0336116, 1, 0, 0,-0.0152357) , 
4, 0.0243095, 1, 0, 0.501328,-0.00559329) , 
4, 0.00928404, 1, 0, 0.494019,-0.00752812)    );
  // itree = 150
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.235107,-0.0222029) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95041,0.00789867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00212817,-0.0174773) , 
0, 0.00205156, 1, 0, 0.642949,-0.0020035) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.444512,-0.0161741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.262402,-0.00426134) , 
2, 0.309655, 1, 0, 0.386787,-0.0109476) , 
4, 0.0185443, 1, 0, 0.515184,-0.00646453) , 
5, 0.00459111, 1, 0, 0.501666,-0.00736502)    );
  // itree = 151
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.228412,-0.019457) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.808706,-0.0026327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0332389,-0.0180358) , 
5, 0.0243242, 1, 0, 0.658593,-0.00523053) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0179204) , 
6, 0.0231683, 1, 0, 0,-0.0138101) , 
4, 0.025515, 1, 0, 0.50947,-0.00717316) , 
5, 0.00457474, 1, 0, 0.496424,-0.00797325)    );
  // itree = 152
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960961,-0.0205118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948652,0.0227905) , 
0, 0.000394474, 1, 0, 0.955645,0.00351366) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0101818,-0.0200318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132162) , 
4, 0.0139158, 1, 0, 0.00247227,-0.012636) , 
0, 0.00119316, 1, 0, 0.169997,-0.00979759) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945672,-0.0119808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767034,0.0124231) , 
0, 0.00110949, 1, 0, 0.851255,0.00340113) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886083,-0.0331876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660774,0.0219847) , 
0, 0.00200028, 1, 0, 0.75401,-0.0128273) , 
6, 0.0420169, 1, 0, 0.825512,-0.000895045) , 
7, 0.000106059, 1, 0, 0.499464,-0.0053231)    );
  // itree = 153
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908706,-0.0101235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958822,0.0100102) , 
5, 0.012911, 1, 0, 0.942082,0.00129253) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.205614,-0.0163759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132247) , 
0, 0.00508727, 1, 0, 0.0439414,-0.0141924) , 
0, 0.00215823, 1, 0, 0.663443,-0.00351152) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0202351) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813008,0.0586419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143149) , 
4, 0.0244142, 1, 0, 0.19527,-0.00126019) , 
5, 0.0228553, 1, 0, 0.126987,-0.0110607) , 
4, 0.0231981, 1, 0, 0.508114,-0.00569736)    );
  // itree = 154
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96122,0.029071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835747,-0.047036) , 
2, 0.0135672, 1, 0, 0.899573,-0.00488441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0653666,-0.019084) , 
2, 0.047497, 1, 0, 0.447687,-0.0163994) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813563,-0.000706982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321177,-0.0123929) , 
4, 0.0232156, 1, 0, 0.721727,-0.00328846) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0248746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00119032,-0.0118765) , 
4, 0.0231829, 1, 0, 0.000659382,-0.0127126) , 
5, 0.0252775, 1, 0, 0.503622,-0.00613903) , 
5, 0.00901128, 1, 0, 0.495862,-0.00756259)    );
  // itree = 155
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952116,0.0121896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862683,-0.0236787) , 
0, 0.00166544, 1, 0, 0.944535,0.00493239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00185625,-0.018306) , 
0, 0.00205893, 1, 0, 0.630261,-0.00265154) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0246072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834688,0.00768421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000101428,-0.0184324) , 
5, 0.0257046, 1, 0, 0.471072,-0.00227324) , 
5, 0.0183101, 1, 0, 0.372331,-0.0101458) , 
4, 0.0185581, 1, 0, 0.502315,-0.00636905)    );
  // itree = 156
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.804999,0.00687088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647727,-0.0103542) , 
4, 0.0139145, 1, 0, 0.709858,-0.00228389) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0879741,-0.0157772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349148,-0.00456481) , 
4, 0.0162919, 1, 0, 0.27904,-0.0111946) , 
2, 0.190337, 1, 0, 0.535122,-0.00589801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.116482,-0.0173899) , 
3, 138.802, 1, 0, 0.502854,-0.00688466)    );
  // itree = 157
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868539,0.000225455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366907,-0.0145422) , 
4, 0.0209188, 1, 0, 0.751111,-0.00247817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58885,0.0350395) , 
2, 0.10198, 1, 0, 0.737792,-0.00076544) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910137,-0.0228648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756521,-0.000172374) , 
2, 0.279524, 1, 0, 0.856093,-0.0192022) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00708574,-0.0146453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349288,-0.00125515) , 
6, 0.0254967, 1, 0, 0.197654,-0.00650824) , 
0, 0.00119231, 1, 0, 0.316335,-0.00879626) , 
2, 0.118993, 1, 0, 0.502729,-0.00524453)    );
  // itree = 158
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260978,-0.0214004) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.49533,-0.00968846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892159,0.00406516) , 
7, 0.000243996, 1, 0, 0.666335,-0.00339775) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0166465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131969) , 
5, 0.0303831, 1, 0, 0,-0.011188) , 
4, 0.0255235, 1, 0, 0.516422,-0.00515041) , 
5, 0.0045571, 1, 0, 0.505574,-0.00595737)    );
  // itree = 159
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952781,0.0121494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897567,-0.0238197) , 
4, 0.0175118, 1, 0, 0.937083,-0.00370447) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.49339,-0.012689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914121,0.0320997) , 
6, 0.0371881, 1, 0, 0.812847,0.0109962) , 
0, 0.00170205, 1, 0, 0.90665,-0.00010336) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131904) , 
6, 0.0115911, 1, 0, 0,-0.00772515) , 
0, 0.00971968, 1, 0, 0,-0.00804005) , 
0, 0.0035809, 1, 0, 0.499518,-0.00366734)    );
  // itree = 160
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753141,-0.00135204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681571,-0.0298298) , 
3, 18.0247, 1, 0, 0.732467,-0.00701707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.309291,-0.0184977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.217587,-0.0048964) , 
4, 0.0209537, 1, 0, 0.261647,-0.0217456) , 
2, 0.190325, 1, 0, 0.556642,-0.0125173) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912765,0.00331984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000185098,-0.0128893) , 
0, 0.00357683, 1, 0, 0.50951,-0.00176741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117472,-0.0164562) , 
3, 139.403, 1, 0, 0.467002,-0.00339821) , 
3, 25.2371, 1, 0, 0.493886,-0.00613313)    );
  // itree = 161
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812317,0.033131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138967,-0.0115815) , 
2, 0.0951625, 1, 0, 0.466271,-0.00316703) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763606,-0.0283257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400786,-0.0022727) , 
2, 0.260295, 1, 0, 0.662696,-0.017154) , 
6, 0.0302133, 1, 0, 0.55936,-0.00979571) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748137,-0.013433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919843,0.00344308) , 
5, 0.00812219, 1, 0, 0.900868,0.00063294) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.80843e-05,-0.0130473) , 
0, 0.012789, 1, 0, 5.19767e-05,-0.00758316) , 
0, 0.0035809, 1, 0, 0.472598,-0.0032732) , 
3, 25.2371, 1, 0, 0.49886,-0.00524751)    );
  // itree = 162
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933743,0.0488934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858825,-0.00222607) , 
2, 0.0293957, 1, 0, 0.914778,0.00739845) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.525661,-0.0207181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812644,0.00445804) , 
6, 0.0325445, 1, 0, 0.687743,-0.00199027) , 
4, 0.0139643, 1, 0, 0.808293,0.00299489) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0696139,-0.0214114) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513896,0.00112949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389075,-0.0106385) , 
4, 0.0185586, 1, 0, 0.441283,-0.00542694) , 
5, 0.0091301, 1, 0, 0.404727,-0.0078895) , 
2, 0.0475813, 1, 0, 0.50007,-0.00531803)    );
  // itree = 163
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977992,0.0603285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836972,-0.0237927) , 
2, 0.0134975, 1, 0, 0.904046,0.00145722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.084073,-0.0188923) , 
2, 0.0472703, 1, 0, 0.467067,-0.0141696) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673356,0.00234544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.326927,-0.0109639) , 
4, 0.0208788, 1, 0, 0.541077,-0.00245553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117111,-0.0170412) , 
2, 0.428365, 1, 0, 0.505321,-0.00373808) , 
5, 0.0091076, 1, 0, 0.499963,-0.00519919)    );
  // itree = 164
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968926,-0.00402069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971181,0.0416731) , 
0, 0.000432123, 1, 0, 0.969844,0.00977393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.031691,-0.0247918) , 
0, 0.000907609, 1, 0, 0.457647,-0.0124324) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.342904,-0.0195545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732276,-7.69405e-05) , 
5, 0.0100926, 1, 0, 0.70743,-0.00201099) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0183944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131817) , 
4, 0.0335854, 1, 0, 0,-0.010796) , 
4, 0.0242909, 1, 0, 0.50188,-0.00456354) , 
4, 0.00927723, 1, 0, 0.495305,-0.00573311)    );
  // itree = 165
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955187,0.0129494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901655,-0.0208628) , 
4, 0.00698729, 1, 0, 0.930822,-0.00648261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129515,-0.0266814) , 
0, 0.00078454, 1, 0, 0.447287,-0.0189048) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.551639,-0.0215915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752607,0.000501823) , 
4, 0.0116166, 1, 0, 0.723686,-0.00196639) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0258069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131818) , 
0, 0.0182401, 1, 0, 0,-0.0102289) , 
5, 0.0259501, 1, 0, 0.509919,-0.00440701) , 
5, 0.00925117, 1, 0, 0.501015,-0.00646807)    );
  // itree = 166
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943661,-0.00437594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943284,0.012979) , 
0, 0.00145679, 1, 0, 0.943561,0.000958087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594493,-0.0168341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000883423,-0.0117559) , 
0, 0.00317397, 1, 0, 0.094273,-0.0107497) , 
0, 0.00218533, 1, 0, 0.658003,-0.00297845) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0182105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131775) , 
4, 0.0354527, 1, 0, 0,-0.0110831) , 
4, 0.0255135, 1, 0, 0.508341,-0.00482185)    );
  // itree = 167
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812827,0.00245447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184309,-0.0100623) , 
2, 0.0951618, 1, 0, 0.498542,-0.00558571) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944293,-0.00965156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811134,0.0351199) , 
0, 0.00169002, 1, 0, 0.884262,0.00579334) , 
7, 0.000249532, 1, 0, 0.656011,-0.000940245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0184856) , 
6, 0.025497, 1, 0, 0,-0.0104759) , 
4, 0.0254989, 1, 0, 0.502279,-0.00317486)    );
  // itree = 168
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963045,0.01226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912012,-0.0177887) , 
6, 0.0136776, 1, 0, 0.939129,-0.00261558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15371,-0.0234612) , 
0, 0.000773593, 1, 0, 0.473664,-0.0157416) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653077,0.00194643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447423,-0.00904648) , 
4, 0.0185586, 1, 0, 0.549182,-0.00285346) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.268665,-0.0273788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150099,-0.00599232) , 
2, 0.166616, 1, 0, 0.191353,-0.0134743) , 
3, 113.427, 1, 0, 0.501901,-0.00425683) , 
5, 0.00925117, 1, 0, 0.497878,-0.00589308)    );
  // itree = 169
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0897267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707042,-0.00688106) , 
0, 0.000905936, 1, 0, 0.917286,0.00681918) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972459,-0.0234606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540706,0.000773926) , 
0, 0.00119363, 1, 0, 0.703324,-0.00334148) , 
4, 0.0139643, 1, 0, 0.817943,0.00210158) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0781861,-0.0171599) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669972,-0.00018657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0183231) , 
4, 0.024301, 1, 0, 0.447786,-0.0043196) , 
4, 0.00928143, 1, 0, 0.407342,-0.00620569) , 
2, 0.0475958, 1, 0, 0.505573,-0.00421828)    );
  // itree = 170
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.239001,-0.0283076) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711536,-0.0111057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241754,-0.0104187) , 
2, 0.237927, 1, 0, 0.569054,-0.00888545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897177,0.0068763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.22931e-05,-0.0129852) , 
0, 0.00357949, 1, 0, 0.395044,0.000169758) , 
3, 63.0922, 1, 0, 0.508643,-0.00574179) , 
5, 0.00463724, 1, 0, 0.495864,-0.00661555)    );
  // itree = 171
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230758,-0.0243321) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948843,0.00981961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00117776,-0.0195492) , 
0, 0.00198825, 1, 0, 0.667549,0.00024255) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.145601,-0.0206491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48247,-0.00177407) , 
5, 0.0178926, 1, 0, 0.400465,-0.00601729) , 
4, 0.0172316, 1, 0, 0.511155,-0.00342297) , 
4, 0.00464272, 1, 0, 0.496612,-0.00434246)    );
  // itree = 172
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787367,-0.0125292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975412,0.0269001) , 
6, 0.0314797, 1, 0, 0.828567,-0.00634241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0264766) , 
4, 0.0186104, 1, 0, 0.650475,-0.0110457) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553285,-0.0307226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131803) , 
0, 0.00514733, 1, 0, 0.117919,-0.0136048) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836762,0.00746866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000103662,-0.0245215) , 
5, 0.0255771, 1, 0, 0.473415,-0.00265416) , 
4, 0.0186024, 1, 0, 0.377924,-0.00559565) , 
5, 0.0181939, 1, 0, 0.505396,-0.00814464)    );
  // itree = 173
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.590492,-0.0178975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815472,0.00137255) , 
5, 0.00819593, 1, 0, 0.787276,-0.000984096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00273372,-0.0205468) , 
5, 0.0245403, 1, 0, 0.651195,-0.00302798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0180796) , 
6, 0.0254866, 1, 0, 0,-0.00883599) , 
4, 0.0255156, 1, 0, 0.501405,-0.00436396)    );
  // itree = 174
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971044,0.0621083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856189,-0.0549039) , 
6, 0.0140663, 1, 0, 0.91069,0.000971193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0754305,-0.0162835) , 
2, 0.0475842, 1, 0, 0.465971,-0.0107081) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719322,-0.00144194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884781,0.0189435) , 
6, 0.0463906, 1, 0, 0.731647,0.000153772) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0241871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000100952,-0.0129137) , 
0, 0.0182108, 1, 0, 6.36361e-05,-0.00795735) , 
5, 0.0256115, 1, 0, 0.50409,-0.00236917) , 
5, 0.0091424, 1, 0, 0.49873,-0.00354178)    );
  // itree = 175
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805481,0.00917112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450708,-0.0244927) , 
3, 100.95, 1, 0, 0.76835,0.000570564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.734666,-0.0195546) , 
6, 0.0417489, 1, 0, 0.764374,-0.00127061) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839209,-0.0169282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89292,0.00540561) , 
3, 71.647, 1, 0, 0.852728,-0.0203567) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00173944,-0.0161632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350133,4.76996e-05) , 
6, 0.0231788, 1, 0, 0.208184,-0.00415569) , 
0, 0.00119344, 1, 0, 0.334767,-0.00733745) , 
2, 0.0951625, 1, 0, 0.501426,-0.00498392)    );
  // itree = 176
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.693719,-0.00321949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0184745) , 
4, 0.0231945, 1, 0, 0.51868,-0.00461261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0691185,-0.0176036) , 
2, 0.428362, 1, 0, 0.4818,-0.00566983) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652717,-0.00841571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655978,0.0252753) , 
6, 0.0477145, 1, 0, 0.654095,0.00609719) , 
6, 0.0463882, 1, 0, 0.492371,-0.00494791)    );
  // itree = 177
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.242303,-0.0215096) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941649,0.00282179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50859,-0.0155746) , 
0, 0.00221083, 1, 0, 0.909882,0.000431716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131546) , 
4, 0.0255215, 1, 0, 0,-0.00544591) , 
0, 0.0035809, 1, 0, 0.513463,-0.00212906) , 
5, 0.00458917, 1, 0, 0.501158,-0.00278395)    );
  // itree = 178
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.728214,-0.0117263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963258,0.0208944) , 
7, 0.000175514, 1, 0, 0.828964,-0.000892164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0246259) , 
4, 0.0185511, 1, 0, 0.630247,-0.00744542) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.438432,-0.00293825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952137,0.0198007) , 
6, 0.0394428, 1, 0, 0.747193,0.00741446) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0220132) , 
6, 0.0324435, 1, 0, 0,-0.00685925) , 
5, 0.025675, 1, 0, 0.374024,0.000285766) , 
5, 0.0182842, 1, 0, 0.496176,-0.0034)    );
  // itree = 179
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962545,0.0118469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914714,-0.0222335) , 
4, 0.00698729, 1, 0, 0.940178,-0.0032425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156578,-0.0224043) , 
0, 0.000774431, 1, 0, 0.46433,-0.0141891) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949008,-0.00973067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350174,-0.00105434) , 
0, 0.00119363, 1, 0, 0.545229,-0.00284036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119628,-0.0140628) , 
2, 0.428365, 1, 0, 0.507536,-0.00378421) , 
5, 0.00928743, 1, 0, 0.501224,-0.00530411)    );
  // itree = 180
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878842,-0.0228948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951205,0.0141727) , 
6, 0.0142136, 1, 0, 0.940938,0.0053383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00189567,-0.0190907) , 
0, 0.00198632, 1, 0, 0.603698,-0.0013146) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940725,-0.021763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00111561,-0.0105532) , 
0, 0.00238727, 1, 0, 0.542375,-0.0127356) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634073,0.00398095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0239969,-0.0158841) , 
4, 0.023992, 1, 0, 0.320179,-0.00213941) , 
2, 0.190404, 1, 0, 0.428134,-0.0072876) , 
4, 0.0162575, 1, 0, 0.498888,-0.00488042)    );
  // itree = 181
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.254073,-0.0302459) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56882,-0.0081683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475937,0.00353813) , 
3, 72.0958, 1, 0, 0.549182,-0.00421158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16541,-0.0154538) , 
3, 126.184, 1, 0, 0.512475,-0.00510566) , 
5, 0.00456661, 1, 0, 0.500865,-0.00579746)    );
  // itree = 182
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896405,0.000365485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535652,-0.0434639) , 
6, 0.0253905, 1, 0, 0.840944,-0.00408193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0852574,-0.0134225) , 
2, 0.11896, 1, 0, 0.582779,-0.0091296) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6992,-0.00832274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750175,0.0112115) , 
5, 0.0156532, 1, 0, 0.74032,0.0039327) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0304911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00151927,-0.00993618) , 
4, 0.0231962, 1, 0, 0.000845191,-0.00947077) , 
5, 0.0249822, 1, 0, 0.468642,-0.000991639) , 
5, 0.0134635, 1, 0, 0.500347,-0.00325218)    );
  // itree = 183
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.242213,-0.0303903) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957652,0.0126633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00241963,-0.0156102) , 
0, 0.00198874, 1, 0, 0.613641,0.00183602) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.334042,-0.020298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49091,-0.00182542) , 
5, 0.0176915, 1, 0, 0.454439,-0.00567278) , 
4, 0.0162376, 1, 0, 0.518061,-0.00267204) , 
5, 0.00459429, 1, 0, 0.504581,-0.00368488)    );
  // itree = 184
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785015,3.37897e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978238,0.0384532) , 
6, 0.0318953, 1, 0, 0.830277,0.00534442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00497187,-0.0256698) , 
5, 0.0187128, 1, 0, 0.635507,0.000825671) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0243228) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82745,0.00985972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0259069) , 
5, 0.0259555, 1, 0, 0.462748,-0.000381749) , 
5, 0.0184809, 1, 0, 0.363364,-0.00624252) , 
4, 0.0185601, 1, 0, 0.500419,-0.00268287)    );
  // itree = 185
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989366,0.0107231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621955,0.0195371) , 
0, 0.000911624, 1, 0, 0.844348,0.00572018) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685012,-0.0249966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608772,-0.00501495) , 
3, 24.8812, 1, 0, 0.633367,-0.00621123) , 
4, 0.0138907, 1, 0, 0.725967,-0.000974519) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.39214,-0.0200705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255585,0.00238706) , 
4, 0.0208621, 1, 0, 0.325945,-0.0196825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.103083,-0.0146324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364245,-0.00332962) , 
4, 0.0139753, 1, 0, 0.308194,-0.0054) , 
3, 12.5712, 1, 0, 0.310832,-0.00752224) , 
2, 0.118953, 1, 0, 0.493769,-0.00463687)    );
  // itree = 186
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.250986,-0.0291358) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812246,0.00137301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0151107,-0.0231658) , 
5, 0.0243937, 1, 0, 0.662859,-0.00120328) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0182067) , 
6, 0.0231777, 1, 0, 0,-0.00761234) , 
4, 0.0255108, 1, 0, 0.515369,-0.00262933) , 
5, 0.00467541, 1, 0, 0.503401,-0.00336475)    );
  // itree = 187
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240018,-0.0264555) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82404,0.00532123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00113345,-0.0303638) , 
5, 0.0234186, 1, 0, 0.674874,0.000498915) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829088,-0.0121564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000736425,-0.0109039) , 
0, 0.00238688, 1, 0, 0.128914,-0.00715811) , 
4, 0.0231945, 1, 0, 0.515412,-0.00173752) , 
5, 0.00463944, 1, 0, 0.502054,-0.00264648)    );
  // itree = 188
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77685,8.33741e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972401,0.0364565) , 
6, 0.0463835, 1, 0, 0.789613,0.00143253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00324713,-0.0259879) , 
5, 0.024604, 1, 0, 0.653725,-0.00113837) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0185708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131429) , 
4, 0.0343253, 1, 0, 0,-0.00750983) , 
4, 0.0254961, 1, 0, 0.506782,-0.00257053)    );
  // itree = 189
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871451,0.0143659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109485,-0.00594528) , 
2, 0.190324, 1, 0, 0.713792,0.00348028) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0232835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131413) , 
4, 0.0286281, 1, 0, 0,-0.00885637) , 
4, 0.0162398, 1, 0, 0.417191,-0.00164595) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683184,-0.00246616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620525,-0.0426815) , 
1, 1.31477, 1, 0, 0.659101,-0.0208675) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732346,-0.0251869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590165,-0.00439849) , 
2, 0.0713534, 1, 0, 0.623151,-0.00682506) , 
3, 12.6149, 1, 0, 0.628814,-0.00903704) , 
6, 0.0324715, 1, 0, 0.505433,-0.00472786)    );
  // itree = 190
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230972,-0.028683) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863046,0.0196101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680006,-0.00445356) , 
4, 0.0139643, 1, 0, 0.763665,0.0015554) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.177271,-0.0125027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386089,-0.00161573) , 
5, 0.0133412, 1, 0, 0.358335,-0.00345717) , 
2, 0.0951618, 1, 0, 0.517653,-0.00148694) , 
5, 0.00458697, 1, 0, 0.503854,-0.00236578)    );
  // itree = 191
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972769,0.046593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923168,-0.0174383) , 
4, 0.00696237, 1, 0, 0.949824,0.00228338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144149,-0.02996) , 
0, 0.000774431, 1, 0, 0.459956,-0.011969) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8447,0.00527497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0294505) , 
5, 0.0198153, 1, 0, 0.607631,-0.000608453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921776,-0.0168131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2522,-0.00601215) , 
0, 0.00119199, 1, 0, 0.393401,-0.00669524) , 
4, 0.0185613, 1, 0, 0.495634,-0.00379056) , 
5, 0.00912617, 1, 0, 0.490728,-0.00491525)    );
  // itree = 192
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967438,0.0778959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787942,-0.0125691) , 
5, 0.012193, 1, 0, 0.876377,0.00334909) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.293394,-0.0183763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503694,-0.00237909) , 
5, 0.0092551, 1, 0, 0.480536,-0.0031222) , 
2, 0.0203974, 1, 0, 0.532472,-0.00227314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104765,-0.0152818) , 
2, 0.428362, 1, 0, 0.498994,-0.00320918)    );
  // itree = 193
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989518,-0.29174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996321,0.0562032) , 
8, 0.0299749, 1, 0, 0.995432,0.00599607) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904643,0.00553671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517254,-0.0286972) , 
5, 0.0113128, 1, 0, 0.778417,-0.0493937) , 
0, 5.68376e-05, 1, 0, 0.9411,-0.00787132) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952816,0.0146458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.693209,-0.00950797) , 
2, 0.308786, 1, 0, 0.917001,0.00770648) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00982251,-0.0111855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.66778e-05,-0.01298) , 
0, 0.00882709, 1, 0, 0.00204301,-0.00430789) , 
0, 0.00233047, 1, 0, 0.285396,-0.000587161) , 
0, 0.00119363, 1, 0, 0.503115,-0.00300578)    );
  // itree = 194
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.271368,-0.0359125) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953841,0.00986359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00347019,-0.0150597) , 
0, 0.00205156, 1, 0, 0.644956,0.00224648) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.531758,-0.0149571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.269315,-0.00318712) , 
5, 0.022253, 1, 0, 0.388126,-0.0066374) , 
4, 0.0185684, 1, 0, 0.516957,-0.00218108) , 
5, 0.00467022, 1, 0, 0.505659,-0.00299458)    );
  // itree = 195
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961596,0.0227458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938402,-0.0102544) , 
3, 36.8214, 1, 0, 0.949777,8.61673e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155644,-0.0275619) , 
0, 0.00077443, 1, 0, 0.475273,-0.0108245) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968334,0.0240613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000154159,-0.0222512) , 
0, 0.00194391, 1, 0, 0.492374,0.00275225) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930395,-0.0176593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353274,-0.00143528) , 
0, 0.00119363, 1, 0, 0.510036,-0.00468675) , 
4, 0.0139221, 1, 0, 0.505413,-0.00273969) , 
5, 0.00915759, 1, 0, 0.501338,-0.00383278)    );
  // itree = 196
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63999,-0.00350884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957358,0.0317716) , 
7, 0.000355831, 1, 0, 0.677078,-0.000154473) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0222896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131362) , 
4, 0.0301601, 1, 0, 0,-0.00713415) , 
4, 0.0208791, 1, 0, 0.463479,-0.00235637) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702551,0.00101402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614686,-0.0183629) , 
3, 24.8823, 1, 0, 0.641124,-0.0137776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492671,0.00512421) , 
2, 0.333485, 1, 0, 0.603671,-0.00903931) , 
6, 0.0417491, 1, 0, 0.487811,-0.00351628)    );
  // itree = 197
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949598,0.00720101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136262,-0.0185676) , 
0, 0.00172212, 1, 0, 0.826193,0.000631071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0284144) , 
4, 0.0185598, 1, 0, 0.631966,-0.00686537) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510334,-0.0286478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131475) , 
0, 0.00514733, 1, 0, 0.104374,-0.0114075) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807557,0.0206501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0181681) , 
4, 0.0243111, 1, 0, 0.466068,0.0030574) , 
4, 0.0185684, 1, 0, 0.370341,-0.000770902) , 
5, 0.0182309, 1, 0, 0.494939,-0.00367338)    );
  // itree = 198
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920647,-0.00360071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962588,0.0232749) , 
5, 0.0125405, 1, 0, 0.938503,0.00532883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00198889,-0.0157138) , 
0, 0.00198874, 1, 0, 0.598627,0.000674731) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833196,-0.0172656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131376) , 
0, 0.0026831, 1, 0, 0.365025,-0.0146879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839189,0.00983523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255439,-0.0101789) , 
5, 0.0222181, 1, 0, 0.453069,-0.0010068) , 
5, 0.0184825, 1, 0, 0.425648,-0.00526777) , 
4, 0.0162501, 1, 0, 0.495575,-0.00286552)    );
  // itree = 199
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921269,-0.01625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.78038,0.0169879) , 
5, 0.00894927, 1, 0, 0.827013,7.80406e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951174,-0.0374528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461694,-0.00793394) , 
0, 0.00119363, 1, 0, 0.618342,-0.0106664) , 
4, 0.0139763, 1, 0, 0.704594,-0.0062253) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0365912,-0.0134903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642846,0.0141522) , 
5, 0.0132238, 1, 0, 0.456184,0.00550026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0487032,-0.0315963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168028,0.00875985) , 
4, 0.0232318, 1, 0, 0.118567,-0.00574711) , 
5, 0.0231101, 1, 0, 0.304097,0.00043362) , 
2, 0.142792, 1, 0, 0.505658,-0.00291767)    );
  // itree = 200
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.242062,-0.0423789) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.58167,-0.00605677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748661,0.00514906) , 
6, 0.0324783, 1, 0, 0.659101,-0.00039942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0186742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131347) , 
4, 0.0354666, 1, 0, 0,-0.00709893) , 
4, 0.0255389, 1, 0, 0.514805,-0.00186613) , 
5, 0.00458917, 1, 0, 0.501953,-0.00279633)    );
  // itree = 201
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888989,-0.00527598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.457507,-0.0143638) , 
2, 0.0951618, 1, 0, 0.684823,-0.00873195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0181759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769198,0.0155333) , 
6, 0.0417494, 1, 0, 0.319658,-0.000641823) , 
4, 0.0208756, 1, 0, 0.558228,-0.00592729) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938448,0.00933246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0406491,-0.0132054) , 
0, 0.00215823, 1, 0, 0.59755,0.00264639) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550017,-0.00866466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013132) , 
0, 0.00715898, 1, 0, 0.0931134,-0.00492068) , 
4, 0.0231852, 1, 0, 0.42131,2.61135e-06) , 
3, 50.4754, 1, 0, 0.496756,-0.00326492)    );
  // itree = 202
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.475564,-0.0639223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719647,-0.00989284) , 
4, 0.00802644, 1, 0, 0.680219,-0.0121475) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121511,-0.0156883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817303,0.0349789) , 
6, 0.044062, 1, 0, 0.302754,0.000881224) , 
4, 0.0209259, 1, 0, 0.553244,-0.00776477) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.795049,0.0090697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000175128,-0.0243946) , 
5, 0.023554, 1, 0, 0.631785,0.00304097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739549,0.0143129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0197596) , 
4, 0.0244221, 1, 0, 0.117385,-0.00474643) , 
4, 0.0232033, 1, 0, 0.469209,0.000579753) , 
3, 25.2382, 1, 0, 0.494833,-0.00196466)    );
  // itree = 203
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658806,0.00227291) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825639,-0.032088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.13308,-0.0155389) , 
6, 0.017229, 1, 0, 0.35913,-0.0151249) , 
6, 0.0138917, 1, 0, 0.46146,-0.00945937) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0574834,-0.0265933) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748027,0.00322216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0169454) , 
4, 0.0242957, 1, 0, 0.548583,-0.000289047) , 
4, 0.00928804, 1, 0, 0.505969,-0.0014251) , 
5, 0.00912617, 1, 0, 0.499724,-0.00255246)    );
  // itree = 204
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.531931,-0.009335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648758,0.0211856) , 
5, 0.00989166, 1, 0, 0.572264,-0.00164693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887404,-0.037989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492664,-0.00493524) , 
0, 0.00109522, 1, 0, 0.628376,-0.0211795) , 
7, 0.000148756, 1, 0, 0.5862,-0.0064981) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0279597,-0.0226131) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780632,0.0222354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478255,-0.000336438) , 
4, 0.0172508, 1, 0, 0.541507,0.00213453) , 
4, 0.01394, 1, 0, 0.463555,0.00018499) , 
5, 0.0138651, 1, 0, 0.500041,-0.00180317)    );
  // itree = 205
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781958,0.00241937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984131,0.0387536) , 
7, 0.000248242, 1, 0, 0.831116,0.00566302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00332989,-0.0275033) , 
5, 0.018775, 1, 0, 0.635798,0.00163722) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0222712) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833263,0.0078173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0245877) , 
5, 0.0256801, 1, 0, 0.476137,-0.000604596) , 
5, 0.0182842, 1, 0, 0.375993,-0.0048126) , 
4, 0.0185682, 1, 0, 0.509676,-0.00149382)    );
  // itree = 206
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724696,-0.00671097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398407,0.00575848) , 
5, 0.0164975, 1, 0, 0.561482,-0.00146257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0551252,-0.0132578) , 
2, 0.356533, 1, 0, 0.478781,-0.00261401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711292,-0.0398457) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623257,-0.00869808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515393,0.0144698) , 
2, 0.345933, 1, 0, 0.589393,-0.0012302) , 
2, 0.0959171, 1, 0, 0.623223,-0.0110841) , 
6, 0.041752, 1, 0, 0.503697,-0.00407509)    );
  // itree = 207
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98498,-0.00229999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996822,0.0711031) , 
5, 0.0198177, 1, 0, 0.988326,0.00349176) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595247,-0.0170557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893827,-0.00651989) , 
0, 0.000739752, 1, 0, 0.865098,-0.0148136) , 
0, 0.000226632, 1, 0, 0.923269,-0.0061723) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00655032,0.00415845) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013126) , 
6, 0.0115906, 1, 0, 0,-0.00277624) , 
0, 0.00889002, 1, 0, 0.00142944,-0.00183813) , 
0, 0.00238633, 1, 0, 0.494091,-0.00415445)    );
  // itree = 208
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937254,0.0102078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975448,0.0494257) , 
4, 0.0125966, 1, 0, 0.944951,0.010975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00192224,-0.0187625) , 
0, 0.00190756, 1, 0, 0.563721,0.00308853) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785709,-0.0287274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947284,-0.010473) , 
5, 0.0153781, 1, 0, 0.924094,-0.0151462) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592174,0.00418728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0256992,-0.0138394) , 
4, 0.0238707, 1, 0, 0.314451,-0.000496968) , 
0, 0.00119228, 1, 0, 0.468814,-0.00420617) , 
4, 0.0139221, 1, 0, 0.498252,-0.00194353)    );
  // itree = 209
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586067,-0.00289267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0923257,-0.0139063) , 
2, 0.428231, 1, 0, 0.548432,-0.00214038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523594,0.0158409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.289125,-0.00184773) , 
5, 0.0183794, 1, 0, 0.381322,0.00426632) , 
3, 100.823, 1, 0, 0.531713,-0.00149942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0824071,-0.0184139) , 
3, 151.361, 1, 0, 0.502106,-0.00228911)    );
  // itree = 210
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605088,-0.00390641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91846,0.0457335) , 
7, 0.000275683, 1, 0, 0.648981,0.000294718) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0431008,-0.0238732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131239) , 
4, 0.0271512, 1, 0, 0.0126478,-0.0063876) , 
4, 0.018543, 1, 0, 0.413232,-0.00218095) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958868,0.0103635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626398,-0.0175642) , 
4, 0.0229009, 1, 0, 0.8906,-0.00329102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61116,-0.0244642) , 
5, 0.023749, 1, 0, 0.839965,-0.0108102) , 
7, 0.000349372, 1, 0, 0.503594,-0.00400821)    );
  // itree = 211
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248235,-0.0329465) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695392,-0.00341695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735593,0.0115929) , 
5, 0.0188743, 1, 0, 0.708965,0.000749863) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0315382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131241) , 
5, 0.0391784, 1, 0, 0,-0.005069) , 
5, 0.0260616, 1, 0, 0.512772,-0.000860398) , 
5, 0.0045571, 1, 0, 0.500691,-0.00162868)    );
  // itree = 212
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979786,-0.0132448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991975,0.0406775) , 
5, 0.0198435, 1, 0, 0.983229,0.000191321) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626129,-0.016604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895072,-0.00780869) , 
0, 0.000740321, 1, 0, 0.870477,-0.0147805) , 
0, 0.000226955, 1, 0, 0.92349,-0.00774112) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00662418,0.00307056) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.02218e-05,-0.0126835) , 
6, 0.0139044, 1, 0, 4.69835e-05,-0.00241992) , 
0, 0.00886907, 1, 0, 0.00147213,-0.00163388) , 
0, 0.00238727, 1, 0, 0.493923,-0.00489577)    );
  // itree = 213
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.234347,0.00831504) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559632,-0.00470959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396938,0.00965476) , 
3, 105.696, 1, 0, 0.547668,-0.00213009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119056,-0.0148853) , 
3, 138.747, 1, 0, 0.514723,-0.00282968) , 
4, 0.00466861, 1, 0, 0.500333,-0.00245155)    );
  // itree = 214
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953342,0.0055637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.270579,-0.0186505) , 
0, 0.00163926, 1, 0, 0.820306,-0.00107614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0260865) , 
4, 0.018578, 1, 0, 0.640458,-0.00585647) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780628,-0.00199444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679211,0.0208059) , 
2, 0.261621, 1, 0, 0.748901,0.00475791) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0203585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000106071,-0.0125035) , 
5, 0.0386379, 1, 0, 6.61512e-05,-0.0041363) , 
5, 0.0254047, 1, 0, 0.378118,0.000353973) , 
5, 0.0180902, 1, 0, 0.501626,-0.00256986)    );
  // itree = 215
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933805,-0.00268365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860239,-0.0209147) , 
7, 0.000507378, 1, 0, 0.928645,-0.00522727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870652,-0.015308) , 
0, 0.00214501, 1, 0, 0.925005,-0.00660099) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00185418,-0.00239223) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0021397,-0.00535231) , 
6, 0.0324323, 1, 0, 0.000589035,-0.00247917) , 
5, 0.0136466, 1, 0, 0.000874363,-0.00201264) , 
0, 0.00238462, 1, 0, 0.501316,-0.00449736)    );
  // itree = 216
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95237,0.0541539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433945,-0.0184721) , 
2, 0.0270647, 1, 0, 0.739746,-0.00697943) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768569,0.0136721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526312,-0.0119074) , 
3, 75.7103, 1, 0, 0.7153,0.00219323) , 
5, 0.00864467, 1, 0, 0.719166,0.000742727) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614902,-0.0157702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941046,-0.00692834) , 
5, 0.0174745, 1, 0, 0.834561,-0.0194335) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0406962,-0.0143662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227527,-0.000152723) , 
4, 0.0139578, 1, 0, 0.18288,-0.00245944) , 
0, 0.00119291, 1, 0, 0.294505,-0.00536689) , 
2, 0.142792, 1, 0, 0.503547,-0.00235939)    );
  // itree = 217
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996492,0.038133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993262,0.0480746) , 
2, 0.188244, 1, 0, 0.995825,0.00453267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903026,0.00631744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579433,-0.0208642) , 
4, 0.0108284, 1, 0, 0.771904,-0.039866) , 
0, 5.68375e-05, 1, 0, 0.937298,-0.00707204) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0105371,-0.0268704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944731,0.00989354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00140803,-0.018031) , 
0, 0.00233061, 1, 0, 0.334887,0.000645614) , 
4, 0.0116195, 1, 0, 0.285752,-0.00208202) , 
0, 0.00119363, 1, 0, 0.502592,-0.00374274)    );
  // itree = 218
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939737,0.00625633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148366,-0.0145675) , 
0, 0.00184638, 1, 0, 0.679564,0.000575415) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.035969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131187) , 
5, 0.0340913, 1, 0, 0,-0.0054987) , 
5, 0.0211805, 1, 0, 0.472048,-0.00127942) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633675,-0.0219687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69963,-0.00212882) , 
6, 0.0454039, 1, 0, 0.663972,-0.0112928) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511126,0.00842999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444327,0.00353416) , 
2, 0.400334, 1, 0, 0.477867,0.0038655) , 
2, 0.309722, 1, 0, 0.606108,-0.00657973) , 
6, 0.0417491, 1, 0, 0.495585,-0.00220999)    );
  // itree = 219
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.228463,-0.0218902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.534449,0.00904879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488767,-0.00535272) , 
4, 0.0115962, 1, 0, 0.498751,-0.00143808) , 
5, 0.00435188, 1, 0, 0.486368,-0.00186311) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743106,0.0364682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556746,-0.00376663) , 
2, 0.190052, 1, 0, 0.643735,0.00676628) , 
6, 0.0463879, 1, 0, 0.496615,-0.00130116)    );
  // itree = 220
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790315,0.0131706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430664,-0.0194887) , 
3, 100.948, 1, 0, 0.751973,0.00117297) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833008,-0.00706357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000814565,-0.00851913) , 
0, 0.00238633, 1, 0, 0.22101,-0.00450714) , 
2, 0.0713959, 1, 0, 0.399394,-0.00259883) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.54794,-0.0209699) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683412,-0.0314323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944506,0.00683031) , 
4, 0.0199543, 1, 0, 0.887395,-0.00344737) , 
5, 0.019084, 1, 0, 0.837619,-0.00894178) , 
7, 0.000340736, 1, 0, 0.496718,-0.00400752)    );
  // itree = 221
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994589,-0.0313889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995917,0.0452303) , 
8, 0.0816533, 1, 0, 0.995346,0.00309597) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893048,-0.000276465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596118,-0.0219874) , 
4, 0.0109502, 1, 0, 0.78264,-0.0386053) , 
0, 5.68376e-05, 1, 0, 0.939815,-0.00779096) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931107,0.00388059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91111,0.0155091) , 
3, 62.4622, 1, 0, 0.925246,0.00795476) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000765523,-0.00987714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00283414,-0.0163427) , 
6, 0.0370899, 1, 0, 0.00120545,-0.0026523) , 
0, 0.00233093, 1, 0, 0.284255,0.000596823) , 
0, 0.00119363, 1, 0, 0.504054,-0.00221547)    );
  // itree = 222
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991123,0.00258106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972308,0.0291313) , 
2, 0.211775, 1, 0, 0.987725,0.00253652) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645034,-0.0161078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893166,-0.00966322) , 
0, 0.000742547, 1, 0, 0.870968,-0.0171607) , 
0, 0.000226955, 1, 0, 0.925758,-0.00791746) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00571254,0.00330119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131178) , 
6, 0.0116177, 1, 0, 0,-0.00204133) , 
0, 0.00889675, 1, 0, 0.0011746,-0.00139357) , 
0, 0.00238688, 1, 0, 0.494153,-0.00487204)    );
  // itree = 223
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868305,0.00210315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.116708,-0.0105527) , 
2, 0.118612, 1, 0, 0.632406,-0.00368139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332736,-0.02799) , 
3, 87.8362, 1, 0, 0.577131,-0.0081972) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0966336,-0.017576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576691,0.00375143) , 
4, 0.0139484, 1, 0, 0.507434,0.0004443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129816,-0.0152097) , 
2, 0.427946, 1, 0, 0.47075,-0.000608818) , 
5, 0.0137143, 1, 0, 0.502371,-0.00286446)    );
  // itree = 224
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702559,-0.00103762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953147,0.0176335) , 
7, 0.000242955, 1, 0, 0.812435,0.0041051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0180602) , 
4, 0.023191, 1, 0, 0.681643,0.00190039) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0638059,-0.0337371) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990565,0.0755812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131185) , 
0, 0.00358032, 1, 0, 0.187045,0.00349092) , 
4, 0.0231876, 1, 0, 0.135725,-0.00472275) , 
5, 0.0230947, 1, 0, 0.500306,-0.000299609)    );
  // itree = 225
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958097,0.0173928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907975,-0.0108879) , 
0, 0.00155001, 1, 0, 0.950248,0.0063274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00212711,-0.0211334) , 
0, 0.00204961, 1, 0, 0.629908,0.000908958) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0265163) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799168,0.0106764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0171542) , 
4, 0.0243015, 1, 0, 0.47242,0.0012156) , 
5, 0.0184853, 1, 0, 0.368291,-0.00341335) , 
4, 0.0185581, 1, 0, 0.500132,-0.00123514)    );
  // itree = 226
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949053,0.00674922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00464592,-0.0191676) , 
0, 0.00206268, 1, 0, 0.681633,0.000930408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0218819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013116) , 
4, 0.0315045, 1, 0, 0,-0.00402836) , 
4, 0.0209097, 1, 0, 0.480295,-0.000534295) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.698509,-0.0160664) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653891,0.00355924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534811,-0.00917318) , 
2, 0.214808, 1, 0, 0.584412,-0.00306215) , 
2, 0.0721839, 1, 0, 0.606922,-0.00630863) , 
6, 0.041754, 1, 0, 0.502815,-0.00156127)    );
  // itree = 227
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995009,0.013363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998932,0.0799823) , 
3, 44.1211, 1, 0, 0.996727,0.00357067) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931325,0.00131248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48066,-0.0217858) , 
5, 0.0114119, 1, 0, 0.795056,-0.0352336) , 
0, 5.68264e-05, 1, 0, 0.944298,-0.00651745) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0099541,-0.0249497) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.50522,0.0106873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0960512,-0.0191724) , 
5, 0.023093, 1, 0, 0.330245,0.00113869) , 
4, 0.0115911, 1, 0, 0.282661,-0.00118662) , 
0, 0.00119344, 1, 0, 0.502562,-0.00295836)    );
  // itree = 228
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775794,0.00194339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.324466,-0.0132408) , 
2, 0.163179, 1, 0, 0.597828,-0.00451381) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667897,0.00415906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.015732) , 
4, 0.0255405, 1, 0, 0.511946,0.000887008) , 
3, 25.2368, 1, 0, 0.538521,-0.000784183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0940981,-0.0165071) , 
2, 0.428362, 1, 0, 0.49962,-0.00158233)    );
  // itree = 229
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448646,0.000230755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667708,-0.0227901) , 
6, 0.0301892, 1, 0, 0.548984,-0.0131806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580019,0.00967803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525576,-0.00375381) , 
3, 19.1877, 1, 0, 0.535361,-0.000756025) , 
3, 6.60525, 1, 0, 0.536586,-0.0018735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106918,-0.0164925) , 
3, 138.802, 1, 0, 0.502693,-0.00263769)    );
  // itree = 230
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767597,0.0037697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71366,-0.0206793) , 
3, 51.0661, 1, 0, 0.760107,-0.000879998) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843895,-0.00934873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000456819,-0.0103499) , 
0, 0.00238377, 1, 0, 0.323785,-0.00706272) , 
2, 0.142744, 1, 0, 0.55604,-0.00377165) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930972,-0.00888299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.18838,0.00478075) , 
0, 0.00119363, 1, 0, 0.370443,-0.000376651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542006,0.0216456) , 
6, 0.0440685, 1, 0, 0.390366,0.000820195) , 
3, 63.0919, 1, 0, 0.498916,-0.00218841)    );
  // itree = 231
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997829,0.0518168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809409,-0.0129863) , 
0, 5.68153e-05, 1, 0, 0.945498,-0.00423273) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0119074,-0.018538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298114,0.00350328) , 
4, 0.0115953, 1, 0, 0.253824,-0.000501607) , 
0, 0.00119316, 1, 0, 0.480494,-0.00172434) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647815,-0.0223341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68778,-0.0129572) , 
6, 0.0464956, 1, 0, 0.668239,-0.0223153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562046,0.0291082) , 
3, 62.9452, 1, 0, 0.630315,-0.00980325) , 
6, 0.0440704, 1, 0, 0.49732,-0.00263168)    );
  // itree = 232
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812562,0.00355539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978987,0.077464) , 
7, 0.000157419, 1, 0, 0.842908,0.00743468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0232368) , 
5, 0.0149287, 1, 0, 0.552757,0.00276444) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943435,-0.0204667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849297,0.00960667) , 
2, 0.30545, 1, 0, 0.929262,-0.0114746) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.463947,-0.00958892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209318,0.00513215) , 
2, 0.166603, 1, 0, 0.314317,-0.00057268) , 
0, 0.00119291, 1, 0, 0.466185,-0.00326504) , 
4, 0.0139209, 1, 0, 0.493427,-0.00136775)    );
  // itree = 233
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963981,-0.0227608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948109,0.0424534) , 
0, 0.000395074, 1, 0, 0.956993,0.00656892) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00173059,-0.0134314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00403864,0.00299016) , 
3, 88.3445, 1, 0, 0.00240543,-0.00178882) , 
0, 0.00119344, 1, 0, 0.171988,-0.000304072) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90576,-0.0474195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408378,-0.0144421) , 
2, 0.0943271, 1, 0, 0.733258,-0.0204859) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84043,-0.00217186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6586,-0.0168635) , 
3, 112.698, 1, 0, 0.827223,-0.00346172) , 
7, 0.000172937, 1, 0, 0.810221,-0.00654203) , 
7, 0.000102957, 1, 0, 0.505324,-0.00356204)    );
  // itree = 234
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951869,0.0119206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916749,-0.018332) , 
4, 0.0174599, 1, 0, 0.941097,-0.00136246) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726086,-0.0346605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942601,0.00335677) , 
4, 0.0175474, 1, 0, 0.897905,-0.0158427) , 
0, 0.00158643, 1, 0, 0.929444,-0.00526911) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00486502,0.00503205) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131129) , 
6, 0.0115877, 1, 0, 0,-0.00170109) , 
0, 0.00994889, 1, 0, 0.00116749,-0.000978659) , 
0, 0.00238727, 1, 0, 0.496299,-0.00326713)    );
  // itree = 235
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961588,0.0108627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939269,-0.0249353) , 
4, 0.0134055, 1, 0, 0.950535,-0.00638361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00997785,-0.0213059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308002,0.00490913) , 
4, 0.0115962, 1, 0, 0.258833,-0.000715144) , 
0, 0.00119316, 1, 0, 0.487283,-0.00258728) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738214,0.0100447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599126,-0.0079982) , 
2, 0.153534, 1, 0, 0.668699,0.00106971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502272,0.0434419) , 
2, 0.357234, 1, 0, 0.63056,0.00490311) , 
6, 0.0440685, 1, 0, 0.503708,-0.00172862)    );
  // itree = 236
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959596,0.00177812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965669,0.0284076) , 
3, 35.0848, 1, 0, 0.962748,0.00560259) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00219424,-0.0158392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000565981,-0.00962085) , 
2, 0.167061, 1, 0, 0.00107789,-0.00243952) , 
0, 0.00119344, 1, 0, 0.1455,-0.00123177) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86862,-0.0052672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425445,-0.0153107) , 
2, 0.403675, 1, 0, 0.839463,-0.0054146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49322,-0.0236374) , 
3, 125.887, 1, 0, 0.822451,-0.00702509) , 
7, 8.86918e-05, 1, 0, 0.503644,-0.00429675)    );
  // itree = 237
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988824,0.0655668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853327,-0.0316866) , 
4, 0.00701773, 1, 0, 0.916555,0.00300436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0803121,-0.0150973) , 
2, 0.0475842, 1, 0, 0.489549,-0.00629164) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649071,0.00433394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437407,-0.00615317) , 
4, 0.0186093, 1, 0, 0.544261,-0.000443591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117946,-0.0128262) , 
2, 0.428379, 1, 0, 0.508586,-0.00111184) , 
5, 0.00915064, 1, 0, 0.506,-0.0018154)    );
  // itree = 238
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879171,0.0349398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551063,0.00800157) , 
4, 0.018391, 1, 0, 0.755679,0.00863599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.236244,-0.00439067) , 
2, 0.214114, 1, 0, 0.581668,0.00459469) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74306,0.00465925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636467,-0.013099) , 
3, 36.5017, 1, 0, 0.673844,-0.00403477) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00256551,-0.0129158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462781,0.00991202) , 
6, 0.0255138, 1, 0, 0.280778,0.00160734) , 
2, 0.166534, 1, 0, 0.492174,-0.00142706) , 
3, 12.6034, 1, 0, 0.505715,-0.000515975)    );
  // itree = 239
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99402,0.00444084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0878434) , 
5, 0.0209754, 1, 0, 0.995348,0.0022787) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903091,0.002725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553386,-0.0202319) , 
4, 0.0109502, 1, 0, 0.764574,-0.0341814) , 
0, 5.68153e-05, 1, 0, 0.93555,-0.00716884) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.118212,-0.0145448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620724,0.0117349) , 
5, 0.0132045, 1, 0, 0.465566,0.00203062) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881639,-0.0271874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000870331,-0.00635713) , 
0, 0.00241228, 1, 0, 0.0817509,-0.00541603) , 
5, 0.0230947, 1, 0, 0.287116,-0.00143161) , 
0, 0.00119316, 1, 0, 0.504868,-0.00335825)    );
  // itree = 240
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.238886,-0.0289989) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824724,0.0023777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381627,-0.0110699) , 
2, 0.14276, 1, 0, 0.626123,-0.00423681) , 
6, 0.0140245, 1, 0, 0.564291,-0.00594071) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566021,0.00610554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15921,-0.00996138) , 
3, 127.937, 1, 0, 0.513093,0.00143642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118635,-0.0136938) , 
2, 0.428362, 1, 0, 0.479586,0.000391508) , 
3, 25.2268, 1, 0, 0.505517,-0.00154696)    );
  // itree = 241
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941678,0.00595406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.159755,-0.0153344) , 
0, 0.00184075, 1, 0, 0.692402,0.000325207) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0343783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000114019,-0.0121138) , 
0, 0.0182171, 1, 0, 6.92851e-05,-0.00381629) , 
5, 0.0211977, 1, 0, 0.482113,-0.000932732) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918368,-0.0111552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501801,0.0161016) , 
0, 0.00118137, 1, 0, 0.633077,0.00304393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65378,-0.0633629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560699,-0.0124725) , 
2, 0.0958332, 1, 0, 0.589242,-0.0212666) , 
1, 1.11126, 1, 0, 0.610405,-0.00952964) , 
6, 0.0417532, 1, 0, 0.504703,-0.00244654)    );
  // itree = 242
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.261487,-0.0331927) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.315802,-0.027611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59091,-0.00446415) , 
4, 0.00696227, 1, 0, 0.570512,-0.00307693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934036,-0.00471356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239867,0.00629802) , 
0, 0.00119363, 1, 0, 0.432852,0.000778328) , 
3, 50.4561, 1, 0, 0.509164,-0.00135884) , 
5, 0.00461249, 1, 0, 0.497965,-0.00213055)    );
  // itree = 243
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816469,-0.00344822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44756,-0.0374926) , 
3, 99.8452, 1, 0, 0.775513,-0.00340933) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840568,0.00533371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.86371e-05,-0.0127152) , 
0, 0.00358032, 1, 0, 0.337363,0.00156364) , 
2, 0.0713937, 1, 0, 0.481784,-7.55198e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663351,-0.013948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5794,0.020743) , 
3, 49.8388, 1, 0, 0.625726,-0.00159728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533217,-0.0301487) , 
1, 1.11011, 1, 0, 0.598301,-0.0104936) , 
6, 0.0440685, 1, 0, 0.495629,-0.00131342)    );
  // itree = 244
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.375202,-0.00321681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553416,-0.0222524) , 
6, 0.0283973, 1, 0, 0.386388,-0.00232543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953764,-0.00781447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423722,0.0175195) , 
0, 0.00119344, 1, 0, 0.598962,0.00377141) , 
6, 0.0298205, 1, 0, 0.42802,-0.00113139) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709611,-0.00926627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590288,-0.0355479) , 
2, 0.265139, 1, 0, 0.696777,-0.00958752) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435587,0.0117621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435772,-0.000635177) , 
3, 36.3227, 1, 0, 0.435711,0.00266485) , 
2, 0.30938, 1, 0, 0.630846,-0.00649323) , 
6, 0.034791, 1, 0, 0.499142,-0.00301155)    );
  // itree = 245
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997758,0.0550055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98736,-0.0255279) , 
3, 49.0621, 1, 0, 0.993661,0.00114444) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60259,-0.0128945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894288,-0.00758398) , 
0, 0.000654882, 1, 0, 0.867962,-0.013438) , 
0, 0.000113477, 1, 0, 0.926458,-0.00665177) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00606515,0.0104964) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131112) , 
6, 0.011586, 1, 0, 0,-0.00147187) , 
0, 0.0088679, 1, 0, 0.00127004,-0.00061404) , 
0, 0.00238688, 1, 0, 0.494767,-0.00383458)    );
  // itree = 246
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61723,-0.0156447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42066,0.00713054) , 
5, 0.0070147, 1, 0, 0.451795,-0.00034091) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950242,-0.0204427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550883,0.000312973) , 
0, 0.00119344, 1, 0, 0.696863,-0.00461241) , 
6, 0.0255092, 1, 0, 0.596663,-0.00286594) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0076585,-0.00800695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.786807,0.0161592) , 
7, 0.000347241, 1, 0, 0.173719,0.00150842) , 
2, 0.309382, 1, 0, 0.498473,-0.0018504)    );
  // itree = 247
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751952,-0.0061213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96882,0.0345768) , 
7, 0.000103577, 1, 0, 0.852114,0.00575246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0313167) , 
5, 0.0149318, 1, 0, 0.571182,0.00141912) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833658,-0.0314438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376134,0.0028446) , 
4, 0.0205514, 1, 0, 0.617908,-0.00659043) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603218,0.00545775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0406241,-0.0165569) , 
4, 0.0238603, 1, 0, 0.336453,0.000869018) , 
2, 0.166585, 1, 0, 0.46684,-0.00258666) , 
4, 0.0139264, 1, 0, 0.498836,-0.0013583)    );
  // itree = 248
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811781,0.0204363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.216128,-0.00656541) , 
2, 0.118952, 1, 0, 0.538233,7.64203e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709254,0.0290683) , 
6, 0.0371474, 1, 0, 0.585286,0.00296353) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554563,-0.000942759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.11153,-0.016319) , 
2, 0.428375, 1, 0, 0.519835,-0.0010664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0924448,-0.0118825) , 
3, 144.812, 1, 0, 0.484366,-0.00167546) , 
3, 12.6184, 1, 0, 0.499286,-0.000989624)    );
  // itree = 249
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987899,-0.0215501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941213,0.027743) , 
2, 0.282715, 1, 0, 0.982894,-0.000753852) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935164,0.0156511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545078,-0.0190612) , 
4, 0.0109502, 1, 0, 0.795966,-0.0266231) , 
0, 0.00022735, 1, 0, 0.939508,-0.00675817) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00906565,-0.0207657) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950086,0.0114027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000709153,-0.0103331) , 
0, 0.00233072, 1, 0, 0.333907,0.00274626) , 
4, 0.0115962, 1, 0, 0.280601,0.000645188) , 
0, 0.00119363, 1, 0, 0.498054,-0.00179808)    );
  // itree = 250
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925288,-0.00592531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97511,0.0268834) , 
5, 0.0211093, 1, 0, 0.93175,-0.00237081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916473,-0.0203817) , 
5, 0.0233118, 1, 0, 0.930545,-0.00445974) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00393197,0.00476939) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131095) , 
6, 0.0115809, 1, 0, 0,-0.00135328) , 
0, 0.00995428, 1, 0, 0.000955628,-0.000776245) , 
0, 0.00238727, 1, 0, 0.506988,-0.0027814)    );
  // itree = 251
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506333,-0.0229308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38665,0.00669423) , 
3, 37.6655, 1, 0, 0.438641,-0.00421617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638453,-0.0282354) , 
5, 0.00825385, 1, 0, 0.477487,-0.010729) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0640043,-0.0279019) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.693349,0.0168105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52191,-0.00185571) , 
4, 0.0130626, 1, 0, 0.546544,0.000136324) , 
4, 0.0093056, 1, 0, 0.504771,-0.000680661) , 
5, 0.00912318, 1, 0, 0.501061,-0.00204695)    );
  // itree = 252
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567342,-0.0214629) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978572,0.0481488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209046,-0.0290094) , 
4, 0.00839128, 1, 0, 0.446256,-0.00664612) , 
6, 0.0115799, 1, 0, 0.477893,-0.0102095) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982771,0.0597679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927913,-0.0142268) , 
6, 0.0244903, 1, 0, 0.940536,-0.00362422) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895446,0.00830019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000132042,-0.0120353) , 
0, 0.00346791, 1, 0, 0.313831,0.00171157) , 
0, 0.00119363, 1, 0, 0.502564,0.000104692) , 
5, 0.0092674, 1, 0, 0.499104,-0.00134173)    );
  // itree = 253
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791905,-0.0120678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435268,-0.00087484) , 
5, 0.0161217, 1, 0, 0.630105,-0.00558529) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0903189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634759,-0.0359509) , 
5, 0.0203247, 1, 0, 0.780366,-0.0215634) , 
7, 0.00037527, 1, 0, 0.645618,-0.00723493) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0188164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131093) , 
0, 0.0167299, 1, 0, 0,-0.00385925) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673027,-0.00347033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806261,0.0282038) , 
5, 0.0222173, 1, 0, 0.756897,0.00832963) , 
6, 0.0417492, 1, 0, 0.274293,0.000557898) , 
4, 0.0208678, 1, 0, 0.501259,-0.00420533)    );
  // itree = 254
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956133,-0.0199232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976357,0.0398523) , 
7, 5.15813e-05, 1, 0, 0.96624,0.00293567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.036148,-0.0369738) , 
0, 0.000900169, 1, 0, 0.445304,-0.0114264) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74014,0.0248885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56356,-0.0100681) , 
3, 62.9689, 1, 0, 0.687945,0.00403256) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474661,-0.00894255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448738,-7.99399e-06) , 
5, 0.0184825, 1, 0, 0.457987,-0.00219825) , 
4, 0.0149208, 1, 0, 0.511479,-0.000748865) , 
4, 0.00928068, 1, 0, 0.501287,-0.00239324)    );
  // itree = 255
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.087534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984234,-0.0177161) , 
2, 0.117653, 1, 0, 0.994433,0.0016437) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9064,-0.00295398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613395,-0.0141243) , 
4, 0.0107986, 1, 0, 0.78542,-0.0226837) , 
0, 5.68375e-05, 1, 0, 0.939723,-0.00472415) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0108521,-0.0209433) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942847,0.00664534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00128466,-0.0153503) , 
0, 0.00233047, 1, 0, 0.322146,0.000635196) , 
4, 0.0116006, 1, 0, 0.275652,-0.000582829) , 
0, 0.00119363, 1, 0, 0.496624,-0.00196087)    );
  // itree = 256
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807688,-0.00995838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90816,0.0603457) , 
4, 0.00996908, 1, 0, 0.83569,0.000615382) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128154,-0.0279223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780643,0.0179734) , 
5, 0.0122218, 1, 0, 0.323517,-0.00974951) , 
4, 0.011623, 1, 0, 0.578872,-0.00458187) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957446,-0.0131664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80544,0.0079474) , 
2, 0.285583, 1, 0, 0.92976,-0.00464894) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61346,0.0104226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0227728) , 
5, 0.0250639, 1, 0, 0.316787,0.00169225) , 
0, 0.00119228, 1, 0, 0.470925,9.77051e-05) , 
5, 0.0135073, 1, 0, 0.501018,-0.00120685)    );
  // itree = 257
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730541,-0.0082186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311857,0.00696127) , 
2, 0.122332, 1, 0, 0.527023,0.00015524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.045834,-0.0194285) , 
2, 0.428362, 1, 0, 0.484891,-0.000651415) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685137,-0.0222683) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583045,-0.0106755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504249,0.0187274) , 
3, 60.5094, 1, 0, 0.5534,-0.00195635) , 
5, 0.0233539, 1, 0, 0.609622,-0.0115973) , 
6, 0.0440685, 1, 0, 0.499421,-0.00192653)    );
  // itree = 258
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985315,-0.0288622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988976,0.0200382) , 
5, 0.0140292, 1, 0, 0.987657,0.000615562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703644,-0.0166354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900869,-0.0111581) , 
0, 0.000947607, 1, 0, 0.867099,-0.0188984) , 
0, 0.000226955, 1, 0, 0.924657,-0.00958182) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00610731,0.0117926) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131071) , 
6, 0.0115828, 1, 0, 0,-0.00117926) , 
0, 0.00886624, 1, 0, 0.00131666,-0.000323978) , 
0, 0.00238633, 1, 0, 0.502392,-0.00534799)    );
  // itree = 259
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916913,-0.00746791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774702,-0.0274042) , 
6, 0.0273065, 1, 0, 0.898753,-0.0135578) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894739,-0.0258331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952348,0.00526965) , 
4, 0.0155612, 1, 0, 0.945774,-0.000804451) , 
5, 0.014305, 1, 0, 0.927773,-0.00568693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00626023,0.00966269) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131068) , 
6, 0.0116065, 1, 0, 0,-0.00117733) , 
0, 0.00886471, 1, 0, 0.00128519,-0.000413783) , 
0, 0.00238582, 1, 0, 0.503694,-0.00327327)    );
  // itree = 260
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957983,0.0168724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157679,-0.0131197) , 
0, 0.00173989, 1, 0, 0.831269,0.00564133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00370057,-0.0353681) , 
5, 0.0187941, 1, 0, 0.626217,0.00225281) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.847175,0.0114519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649325,-0.0308549) , 
2, 0.163376, 1, 0, 0.749773,-0.0127776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744143,0.00638627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0179295,-0.0173692) , 
4, 0.0241125, 1, 0, 0.320161,-0.000979439) , 
4, 0.0200121, 1, 0, 0.371665,-0.00239386) , 
4, 0.0185751, 1, 0, 0.500915,-3.44913e-05)    );
  // itree = 261
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9829,0.000498346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.820234,0.0219413) , 
0, 0.000340271, 1, 0, 0.897667,0.0104406) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131049) , 
5, 0.0253374, 1, 0, 0,-0.00130832) , 
0, 0.00357693, 1, 0, 0.378412,0.00364445) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956743,-0.0259773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865176,0.0096552) , 
2, 0.258845, 1, 0, 0.936844,-0.00870389) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505905,0.0057308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184664,-0.00942466) , 
2, 0.380792, 1, 0, 0.452025,0.00142157) , 
0, 0.00119344, 1, 0, 0.612882,-0.00193795) , 
6, 0.0278454, 1, 0, 0.50304,0.00067723)    );
  // itree = 262
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977372,-0.0231265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990872,0.046383) , 
5, 0.0140293, 1, 0, 0.985865,0.00199516) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683698,-0.0124933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895548,-0.00876815) , 
0, 0.000825811, 1, 0, 0.872902,-0.0141191) , 
0, 0.000340032, 1, 0, 0.927097,-0.00638807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00413705,0.00492838) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013106) , 
6, 0.011587, 1, 0, 0,-0.00106127) , 
0, 0.00887813, 1, 0, 0.000843702,-0.00062419) , 
0, 0.00238582, 1, 0, 0.496096,-0.00370604)    );
  // itree = 263
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839423,0.0352976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760164,-0.00171713) , 
3, 17.9874, 1, 0, 0.779636,0.00131398) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871882,-0.00634259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00136014,-0.000698969) , 
0, 0.00238688, 1, 0, 0.364597,-0.00337015) , 
2, 0.0951683, 1, 0, 0.533014,-0.0014694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164382,-0.0153346) , 
3, 125.935, 1, 0, 0.498373,-0.00242815)    );
  // itree = 264
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997577,0.00693154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996147,0.0454629) , 
8, 0.0754647, 1, 0, 0.996703,0.00296564) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93171,0.0181164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573146,-0.0152782) , 
4, 0.0107986, 1, 0, 0.77299,-0.0208295) , 
0, 5.68208e-05, 1, 0, 0.939135,-0.00315755) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550887,-0.052133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836427,0.00800827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000121958,-0.0117507) , 
0, 0.003467, 1, 0, 0.26244,0.00221156) , 
2, 0.0238204, 1, 0, 0.28258,0.00121041) , 
0, 0.00119344, 1, 0, 0.499245,-0.000231032)    );
  // itree = 265
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805631,-0.0202319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728001,-0.00244831) , 
3, 25.2368, 1, 0, 0.754104,-0.00309729) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560902,-0.011904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570536,-0.0273517) , 
2, 0.107143, 1, 0, 0.565623,-0.0148115) , 
2, 0.0963236, 1, 0, 0.732289,-0.00445315) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0611624,-0.0101225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000124787,-0.0116061) , 
4, 0.0185752, 1, 0, 0.020905,-0.00410984) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.408705,0.0199106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.569437,-0.00306198) , 
6, 0.0365655, 1, 0, 0.503881,0.00361658) , 
6, 0.0255134, 1, 0, 0.319848,0.000672509) , 
2, 0.118993, 1, 0, 0.503577,-0.00161081)    );
  // itree = 266
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986981,-0.000411262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.88388,-0.00904724) , 
0, 0.000225791, 1, 0, 0.932629,-0.00639998) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000508647,-0.0099828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000436015,-0.00785632) , 
4, 0.0231893, 1, 0, 0.000469539,-0.00102997) , 
0, 0.0023814, 1, 0, 0.562592,-0.00426826) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959324,-0.00568242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83649,0.015054) , 
2, 0.0950056, 1, 0, 0.896443,0.00618899) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000367869,-0.00763529) , 
5, 0.0265398, 1, 0, 0.000218477,-0.000854266) , 
0, 0.00357872, 1, 0, 0.424998,0.00248399) , 
3, 50.4735, 1, 0, 0.500978,-0.00124465)    );
  // itree = 267
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868904,-0.0109234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827133,0.0275691) , 
3, 37.2203, 1, 0, 0.847306,0.00516218) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131067) , 
6, 0.00926615, 1, 0, 0,-0.00107718) , 
0, 0.00358032, 1, 0, 0.159712,9.89003e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984215,-0.0052697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754422,-0.0132179) , 
0, 0.000253979, 1, 0, 0.933741,-0.00830716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.362575,-0.0206895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758793,0.00641277) , 
5, 0.0147265, 1, 0, 0.682652,-0.0012824) , 
0, 0.00133352, 1, 0, 0.814938,-0.0049834) , 
7, 9.73027e-05, 1, 0, 0.494642,-0.00249901)    );
  // itree = 268
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936646,0.00129087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926857,-0.0323212) , 
5, 0.020572, 1, 0, 0.93528,-0.00343078) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792327,-0.041168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968701,0.0322559) , 
4, 0.0213361, 1, 0, 0.897788,-0.0251771) , 
0, 0.00192556, 1, 0, 0.929753,-0.00663661) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00466857,0.00601534) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.50654e-05,-0.0120411) , 
6, 0.0115906, 1, 0, 4.65336e-05,-0.000932184) , 
0, 0.00888249, 1, 0, 0.000997819,-0.000451253) , 
0, 0.00238727, 1, 0, 0.498977,-0.00376771)    );
  // itree = 269
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948377,0.00578871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00452773,-0.0169397) , 
0, 0.00203949, 1, 0, 0.684623,0.00128255) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.025622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131042) , 
4, 0.0314707, 1, 0, 0,-0.00490433) , 
4, 0.0208696, 1, 0, 0.479371,-0.000572296) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684887,-0.00451394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611705,-0.0178273) , 
3, 24.9183, 1, 0, 0.634249,-0.012161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518813,0.00373565) , 
2, 0.333479, 1, 0, 0.605515,-0.008478) , 
6, 0.0417492, 1, 0, 0.501702,-0.00197184)    );
  // itree = 270
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75113,0.00812762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258187,-0.011328) , 
2, 0.189407, 1, 0, 0.565261,-0.00164289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.541687,-0.0468021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5681,-0.00636153) , 
3, 22.9496, 1, 0, 0.554049,-0.0172496) , 
3, 20.4306, 1, 0, 0.563208,-0.00449987) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.458059,-0.00225132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60554,-0.0220084) , 
7, 9.73764e-05, 1, 0, 0.496585,-0.00479781) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716701,0.00886907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337173,-0.00370486) , 
4, 0.0186827, 1, 0, 0.467288,0.000652618) , 
4, 0.011619, 1, 0, 0.473466,-0.000496868) , 
3, 25.2396, 1, 0, 0.500664,-0.00171005)    );
  // itree = 271
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8469,0.0681504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871939,-0.0173318) , 
6, 0.0256189, 1, 0, 0.859396,0.00296403) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495858,-0.0194691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.267715,0.0101004) , 
4, 0.0209669, 1, 0, 0.400291,-0.0159259) , 
2, 0.0713948, 1, 0, 0.561137,-0.0093079) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893466,-0.025191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401455,0.00837815) , 
2, 0.0475958, 1, 0, 0.587686,0.00137776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929052,-0.013947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.275827,-0.000949236) , 
0, 0.00119316, 1, 0, 0.423086,-0.00235719) , 
4, 0.0162427, 1, 0, 0.489145,-0.000858236) , 
3, 12.6149, 1, 0, 0.500163,-0.00215136)    );
  // itree = 272
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968029,-0.0100846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8999,-0.0344721) , 
0, 0.00201113, 1, 0, 0.963037,-0.00780827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00258465,0.00765017) , 
0, 0.00238688, 1, 0, 0.691953,-0.00534694) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.503103,0.0194966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357146,0.0290644) , 
5, 0.0179255, 1, 0, 0.410865,0.00791717) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.280655,-0.000933268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.105956,-0.0127516) , 
2, 0.431655, 1, 0, 0.24385,-0.0019275) , 
2, 0.214194, 1, 0, 0.275404,-6.75435e-05) , 
2, 0.166533, 1, 0, 0.500181,-0.0029164)    );
  // itree = 273
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944113,0.00684606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739667,-0.0160482) , 
4, 0.0174931, 1, 0, 0.926052,0.000656495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00254105,-0.0264202) , 
0, 0.00178873, 1, 0, 0.625516,-0.00400816) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952271,-0.000579675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504728,0.0288161) , 
0, 0.00196975, 1, 0, 0.744194,0.00526282) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000104962,-0.0112919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.022484) , 
6, 0.0324438, 1, 0, 6.54897e-05,-0.00219229) , 
5, 0.0255772, 1, 0, 0.376073,0.00157478) , 
5, 0.0182198, 1, 0, 0.494307,-0.00107148)    );
  // itree = 274
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77228,0.00457721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749088,-0.0114627) , 
6, 0.0417434, 1, 0, 0.769114,5.39339e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829761,-0.0128032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000835241,-0.00391011) , 
0, 0.00238462, 1, 0, 0.326819,-0.00819743) , 
2, 0.142792, 1, 0, 0.56238,-0.00380284) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640785,-0.026363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815123,0.00918077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000116308,-0.0115315) , 
0, 0.00357872, 1, 0, 0.286902,0.00324544) , 
2, 0.0475958, 1, 0, 0.348742,0.00121506) , 
3, 75.6806, 1, 0, 0.503466,-0.00241907)    );
  // itree = 275
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989591,-0.00516975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788342,-0.0294887) , 
2, 0.047497, 1, 0, 0.934055,-0.0125959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705132,-0.0477092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.230376,0.00503229) , 
2, 0.047548, 1, 0, 0.337372,-0.00156749) , 
0, 0.000851428, 1, 0, 0.578521,-0.00602464) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.022774,-0.0253641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807818,0.00514893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0241119) , 
5, 0.0257646, 1, 0, 0.546752,0.000835458) , 
4, 0.0139221, 1, 0, 0.468766,-0.000470773) , 
5, 0.0138671, 1, 0, 0.501676,-0.00213608)    );
  // itree = 276
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995855,0.0116643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968675,-0.0548222) , 
8, 0.19549, 1, 0, 0.993034,-0.00080939) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910036,0.000363636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536333,-0.017821) , 
5, 0.0113128, 1, 0, 0.792336,-0.024752) , 
0, 5.68376e-05, 1, 0, 0.941376,-0.00697207) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00937075,-0.0194714) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.438398,0.0115914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132212,-0.0097884) , 
2, 0.285515, 1, 0, 0.337241,0.00128125) , 
4, 0.0115936, 1, 0, 0.288594,-0.000389246) , 
0, 0.00119363, 1, 0, 0.507636,-0.00259812)    );
  // itree = 277
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661143,0.00538458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481928,-0.0169365) , 
4, 0.0162219, 1, 0, 0.559363,-0.00426244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666081,-0.0461443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456661,-0.00782218) , 
4, 0.0163319, 1, 0, 0.549264,-0.0138226) , 
3, 6.60694, 1, 0, 0.554588,-0.00878342) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.478131,0.000381225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583027,-0.014489) , 
6, 0.0441388, 1, 0, 0.484136,-0.000761041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650611,0.016554) , 
6, 0.0463877, 1, 0, 0.494106,-0.000165615) , 
3, 12.6187, 1, 0, 0.503646,-0.00152503)    );
  // itree = 278
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.451044,0.00383242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.199591,-0.00917051) , 
3, 88.1592, 1, 0, 0.395536,-2.09877e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.469375,-0.0288348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407208,-0.00797005) , 
3, 12.6138, 1, 0, 0.416664,-0.00577597) , 
6, 0.0301093, 1, 0, 0.40252,-0.00192344) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959385,0.000950849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878348,-0.0150054) , 
4, 0.0210181, 1, 0, 0.915012,-0.00652064) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730564,0.001217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874596,0.0384675) , 
1, 1.15928, 1, 0, 0.805159,0.011786) , 
0, 0.00154013, 1, 0, 0.85544,0.00340682) , 
7, 0.000340735, 1, 0, 0.502139,-0.00075106)    );
  // itree = 279
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523493,-0.0237918) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490793,0.00197291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867498,-0.0146855) , 
7, 0.000366621, 1, 0, 0.574881,-0.00174041) , 
5, 0.00877223, 1, 0, 0.567748,-0.00370697) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844354,0.0281015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472717,0.000569832) , 
4, 0.0185899, 1, 0, 0.721738,0.00407707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524643,-0.0115636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283867,0.00221339) , 
2, 0.153009, 1, 0, 0.331692,-0.000813354) , 
2, 0.0951945, 1, 0, 0.477083,0.00100957) , 
3, 25.2382, 1, 0, 0.504573,-0.00042051)    );
  // itree = 280
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.456574,-0.018012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532335,0.0025503) , 
3, 5.40112, 1, 0, 0.519049,-0.00166505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688498,-0.022512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484595,0.00680744) , 
2, 0.309045, 1, 0, 0.645575,-0.0127066) , 
6, 0.037106, 1, 0, 0.555748,-0.00486768) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584882,0.00275994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917616,0.0263949) , 
7, 0.00047677, 1, 0, 0.623652,0.00286006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0157189) , 
4, 0.025512, 1, 0, 0.457247,0.00149918) , 
3, 37.8405, 1, 0, 0.500699,-0.00130942)    );
  // itree = 281
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722208,-0.00483119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704053,-0.0214469) , 
6, 0.0417424, 1, 0, 0.720018,-0.00380825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580756,-0.00558916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426262,-0.0314461) , 
3, 49.8945, 1, 0, 0.511547,-0.0176711) , 
2, 0.118975, 1, 0, 0.682529,-0.00630119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0221841,-0.0133375) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872638,0.00914187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131132) , 
0, 0.00357693, 1, 0, 0.329472,0.00304606) , 
5, 0.0136486, 1, 0, 0.273007,0.000975348) , 
2, 0.166585, 1, 0, 0.493435,-0.0029413)    );
  // itree = 282
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.229848,0.0388533) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994259,-0.000140575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769663,-0.0112125) , 
0, 5.68264e-05, 1, 0, 0.938503,-0.00609753) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135897,-0.0220925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.32324,0.00183696) , 
4, 0.0130627, 1, 0, 0.295646,-0.000936684) , 
0, 0.00119344, 1, 0, 0.510703,-0.00266316) , 
4, 0.0046582, 1, 0, 0.495239,-0.00199064)    );
  // itree = 283
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943493,0.00226195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839072,-0.0252317) , 
4, 0.0218739, 1, 0, 0.933932,-0.00232202) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91455,-0.00951901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854734,-0.0173231) , 
0, 0.00218673, 1, 0, 0.885088,-0.019734) , 
0, 0.00204019, 1, 0, 0.929107,-0.00404204) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00472734,0.00863785) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131027) , 
6, 0.011586, 1, 0, 0,-0.000839785) , 
0, 0.00885919, 1, 0, 0.00104422,-0.000253032) , 
0, 0.00238398, 1, 0, 0.498636,-0.00228455)    );
  // itree = 284
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562257,0.0228583) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927848,-0.0123678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000467596,-0.00888567) , 
0, 0.00238688, 1, 0, 0.553466,-0.00614784) , 
3, 2.39719, 1, 0, 0.554315,-0.00475464) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955899,0.0211227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00237649,-0.0144534) , 
0, 0.00205156, 1, 0, 0.608732,0.00523001) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760233,-0.0177106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.304434,-0.000647767) , 
4, 0.0199952, 1, 0, 0.354774,-0.00174873) , 
4, 0.0185613, 1, 0, 0.478881,0.00166172) , 
3, 25.1775, 1, 0, 0.501841,-0.000291225)    );
  // itree = 285
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537732,-0.00734922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.569665,-0.0402044) , 
3, 1.99777, 1, 0, 0.553575,-0.0112677) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672015,0.00206625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420649,-0.00561712) , 
4, 0.0185566, 1, 0, 0.553315,-0.000695117) , 
3, 4.19681, 1, 0, 0.553333,-0.0013992) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928794,-0.0155681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790176,-0.0184842) , 
0, 0.000793408, 1, 0, 0.85783,-0.0296658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0023424,0.0100867) , 
0, 0.00238727, 1, 0, 0.294304,-0.00947816) , 
3, 88.1548, 1, 0, 0.498842,-0.00309873)    );
  // itree = 286
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.425051,-0.0145607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556638,0.00236311) , 
4, 0.00696227, 1, 0, 0.543185,4.98291e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902178,-0.00944704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00120605,0.000812222) , 
0, 0.00238633, 1, 0, 0.36216,-0.00426371) , 
3, 62.4517, 1, 0, 0.479524,-0.00146709) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945345,-0.00400856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660908,0.0294357) , 
0, 0.0014893, 1, 0, 0.779733,0.00919687) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715621,0.0215874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268428,-0.0188773) , 
1, 1.0816, 1, 0, 0.50479,7.0632e-05) , 
5, 0.0231899, 1, 0, 0.642208,0.00463195) , 
6, 0.0417492, 1, 0, 0.507703,-0.000410679)    );
  // itree = 287
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947534,-0.000849541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878479,-0.0181351) , 
4, 0.0189621, 1, 0, 0.932524,-0.00531853) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883388,-0.0135319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972422,0.0381468) , 
4, 0.0208768, 1, 0, 0.93603,0.00434279) , 
0, 0.00181564, 1, 0, 0.933129,-0.00365162) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00660989,0.0162322) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131029) , 
6, 0.011587, 1, 0, 0,-0.000818303) , 
0, 0.00886497, 1, 0, 0.00133852,5.53433e-05) , 
0, 0.00238398, 1, 0, 0.497823,-0.00191983)    );
  // itree = 288
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935583,0.00868333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766982,-0.0673375) , 
4, 0.011632, 1, 0, 0.850078,-0.00702651) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614149,0.00588547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.12178e-05,-0.022405) , 
4, 0.0208694, 1, 0, 0.401891,0.00106594) , 
2, 0.0237921, 1, 0, 0.471958,-0.000199183) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686679,0.0170639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588107,-0.00157213) , 
2, 0.119673, 1, 0, 0.620026,0.00252748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610203,-0.00180556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564311,-0.0439293) , 
6, 0.0429017, 1, 0, 0.58696,-0.022018) , 
1, 1.14095, 1, 0, 0.608609,-0.00594792) , 
6, 0.0417492, 1, 0, 0.495833,-0.00120359)    );
  // itree = 289
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82715,0.037221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769444,-0.00518428) , 
3, 18.013, 1, 0, 0.784127,0.000832826) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872324,-0.00767331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00130722,0.000382283) , 
0, 0.00238688, 1, 0, 0.36904,-0.00422681) , 
2, 0.0951683, 1, 0, 0.536251,-0.00218862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.14519,0.012326) , 
3, 126.136, 1, 0, 0.496097,-0.00145)    );
  // itree = 290
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822782,-0.00497371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993828,0.0874876) , 
6, 0.0250613, 1, 0, 0.854023,0.00110961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0257979) , 
4, 0.0139083, 1, 0, 0.5805,-0.00486741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0325822,-0.032245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819994,0.0161244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.273184,-0.0053868) , 
5, 0.0217748, 1, 0, 0.546397,0.00305676) , 
4, 0.0139753, 1, 0, 0.467539,0.0010152) , 
5, 0.0138651, 1, 0, 0.501567,-0.000756852)    );
  // itree = 291
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.236343,0.0119844) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502104,-0.00915015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.307859,-0.0493844) , 
3, 62.4922, 1, 0, 0.433417,-0.00910485) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639393,0.00212842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4465,-0.00553419) , 
4, 0.0172437, 1, 0, 0.522236,-0.00128718) , 
5, 0.00912527, 1, 0, 0.511305,-0.00224929) , 
4, 0.00464135, 1, 0, 0.497901,-0.00188598)    );
  // itree = 292
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935467,-0.00360636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000663156,-0.0357388) , 
0, 0.00182175, 1, 0, 0.684765,-0.00523248) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.404197,-0.0132125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42419,0.00568767) , 
4, 0.0208791, 1, 0, 0.415164,-0.000500029) , 
5, 0.0185115, 1, 0, 0.556095,-0.00297388) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923941,-0.00853258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826365,0.0133772) , 
2, 0.0712542, 1, 0, 0.864184,0.00689198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131117) , 
0, 0.0035809, 1, 0, 0.34289,0.00225351) , 
3, 75.7119, 1, 0, 0.498588,-0.00156391)    );
  // itree = 293
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98993,0.00958246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914162,0.0187912) , 
0, 0.000181308, 1, 0, 0.950757,0.00890947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00162187,-0.0091326) , 
0, 0.00196119, 1, 0, 0.587109,0.00488831) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0289879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.320107,0.0121845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758307,-0.00728774) , 
6, 0.0347908, 1, 0, 0.531865,-0.00119189) , 
5, 0.0138651, 1, 0, 0.457849,-0.00325797) , 
4, 0.0139806, 1, 0, 0.497003,-0.000790403)    );
  // itree = 294
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.279202,-0.0192068) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.581712,0.00134236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56499,-0.0105056) , 
3, 36.0052, 1, 0, 0.574653,-0.0021309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.37081,0.0269596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.354441,-0.00043027) , 
4, 0.0139202, 1, 0, 0.358837,0.00226741) , 
3, 75.6181, 1, 0, 0.515095,-0.000917103) , 
5, 0.00463724, 1, 0, 0.505075,-0.00129604)    );
  // itree = 295
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96493,-0.017833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747635,0.0214861) , 
0, 0.000458083, 1, 0, 0.848029,0.00561657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000358103,-0.0245465) , 
5, 0.0149418, 1, 0, 0.576985,0.00230726) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85428,-0.0338328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945884,-0.00817629) , 
5, 0.0166395, 1, 0, 0.920777,-0.0140626) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544139,-0.0199822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298134,-0.000303677) , 
4, 0.0155866, 1, 0, 0.317053,-0.00144506) , 
0, 0.00119363, 1, 0, 0.469862,-0.00463869) , 
4, 0.0139186, 1, 0, 0.502388,-0.00252966)    );
  // itree = 296
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952161,0.00157351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71864,-0.0256303) , 
0, 0.00123481, 1, 0, 0.919058,-0.00715335) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00161328,0.00987815) , 
3, 75.3138, 1, 0, 0.000552376,-0.000425228) , 
0, 0.00238462, 1, 0, 0.377055,-0.00318314) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849938,0.087715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527877,0.00524234) , 
2, 0.118622, 1, 0, 0.666647,0.00787392) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637443,-0.00455605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592486,0.00435677) , 
1, 1.28151, 1, 0, 0.613659,-0.000263769) , 
3, 12.5257, 1, 0, 0.621797,0.000985914) , 
6, 0.0278358, 1, 0, 0.504673,-0.00100923)    );
  // itree = 297
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.249014,0.0306808) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656762,0.00725779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1415,-0.0113208) , 
2, 0.356868, 1, 0, 0.581223,0.00119923) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925242,-0.00788291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000635997,-0.00683882) , 
0, 0.00238455, 1, 0, 0.458901,-0.00387125) , 
3, 37.8094, 1, 0, 0.511509,-0.00169058) , 
4, 0.00464601, 1, 0, 0.498295,-0.00117826)    );
  // itree = 298
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684666,0.0317155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185174,0.0211248) , 
6, 0.0117672, 1, 0, 0.363467,0.00662365) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180061,-0.0308552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717501,0.0035547) , 
5, 0.00785071, 1, 0, 0.3495,-0.00841157) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94301,-0.00492805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347521,0.00600614) , 
0, 0.00119344, 1, 0, 0.541603,0.000690872) , 
5, 0.00915457, 1, 0, 0.520142,-0.000326018) , 
4, 0.00697657, 1, 0, 0.506243,0.000290508)    );
  // itree = 299
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842266,-0.00486602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0782105,-0.0144278) , 
2, 0.142264, 1, 0, 0.615966,-0.005585) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0255715,-0.0325658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584742,0.00578685) , 
4, 0.0139317, 1, 0, 0.505007,0.000622791) , 
5, 0.0138948, 1, 0, 0.540152,-0.00134343) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849889,0.0208861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0016152,0.00938028) , 
0, 0.00238258, 1, 0, 0.209878,0.00723423) , 
3, 113.565, 1, 0, 0.498357,-0.000257952)    );
  // itree = 300
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.514122,-0.00971725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60398,0.0346492) , 
5, 0.00911994, 1, 0, 0.549416,-0.000313583) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889857,-0.041656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554931,0.00168123) , 
0, 0.00115916, 1, 0, 0.687952,-0.0172981) , 
7, 0.000133767, 1, 0, 0.587535,-0.00498707) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.512099,-0.0293354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.511467,0.00078142) , 
3, 4.20365, 1, 0, 0.511673,-0.00710617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74679,0.00673484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227967,-0.00842304) , 
5, 0.0214819, 1, 0, 0.457627,0.00063116) , 
3, 12.6187, 1, 0, 0.466,-0.000567481) , 
5, 0.0136796, 1, 0, 0.500482,-0.00182141)    );
  // itree = 301
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792741,-0.0116803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840261,0.0135822) , 
5, 0.0158703, 1, 0, 0.812057,-0.0025457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000275059,-0.0349015) , 
5, 0.0221701, 1, 0, 0.645258,-0.00467763) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.386314,0.000154645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971828,0.0347205) , 
7, 0.000480574, 1, 0, 0.681166,0.00775206) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0204385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013103) , 
4, 0.0339215, 1, 0, 0,-0.00287886) , 
4, 0.0248385, 1, 0, 0.266332,0.00127777) , 
4, 0.0208654, 1, 0, 0.497024,-0.00234791)    );
  // itree = 302
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964663,0.0890073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834516,-0.004276) , 
5, 0.00851383, 1, 0, 0.876663,0.00345254) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780331,-0.0324163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671817,-0.00987678) , 
3, 24.9625, 1, 0, 0.707555,-0.00772706) , 
2, 0.0135978, 1, 0, 0.746684,-0.00514026) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.412834,0.000637938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.10747,-0.0152492) , 
2, 0.422602, 1, 0, 0.369212,-0.000778088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0937357,0.0311623) , 
3, 138.748, 1, 0, 0.340594,0.000147904) , 
2, 0.0951916, 1, 0, 0.498875,-0.00191325)    );
  // itree = 303
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662093,-0.00349947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.274039,0.00878592) , 
2, 0.265015, 1, 0, 0.579119,-0.000203399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0981425,-0.0185606) , 
2, 0.428375, 1, 0, 0.54008,-0.000854959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776017,-0.0127849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00153301,0.0057516) , 
0, 0.00238221, 1, 0, 0.195095,-0.00611097) , 
3, 113.343, 1, 0, 0.494153,-0.00155467)    );
  // itree = 304
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.423257,-0.000197522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641473,-0.0146867) , 
6, 0.027842, 1, 0, 0.538063,-0.00533655) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.428804,-0.00697283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667015,0.00568143) , 
6, 0.0324944, 1, 0, 0.528481,-0.000100384) , 
3, 24.0101, 1, 0, 0.531622,-0.00181717) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0358271,-0.00912173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512591,-0.0212617) , 
7, 0.00012464, 1, 0, 0.15019,-0.0101782) , 
3, 126.134, 1, 0, 0.491795,-0.00269018)    );
  // itree = 305
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652793,0.00544483) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948994,-0.0243253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332253,-0.00618193) , 
0, 0.000851428, 1, 0, 0.574814,-0.00679089) , 
3, 12.4918, 1, 0, 0.587122,-0.00532302) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.772274,0.0130418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0714747,-0.0104077) , 
5, 0.0168194, 1, 0, 0.284817,0.00122051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723477,-0.00309371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428188,-0.0201256) , 
3, 112.701, 1, 0, 0.691953,-0.00342609) , 
6, 0.0347912, 1, 0, 0.470636,-0.000900227) , 
5, 0.0136813, 1, 0, 0.50337,-0.00214308)    );
  // itree = 306
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79877,0.0126446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515485,-0.0221358) , 
3, 88.3297, 1, 0, 0.757637,0.00112235) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920251,-0.00929206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0024648,0.0125415) , 
0, 0.00238633, 1, 0, 0.496352,-0.004913) , 
2, 0.0679815, 1, 0, 0.606848,-0.00236069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783762,0.0135489) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00509347,-0.0128692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669627,0.0112008) , 
7, 0.000339071, 1, 0, 0.104166,-0.000660501) , 
0, 0.00119231, 1, 0, 0.19105,0.00154791) , 
2, 0.285575, 1, 0, 0.495388,-0.00131294)    );
  // itree = 307
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572582,-0.0312454) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518064,-0.00107068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.294515,-0.018182) , 
3, 50.0008, 1, 0, 0.408952,-0.00405016) , 
6, 0.0116849, 1, 0, 0.448785,-0.0098161) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.563502,0.0129463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774895,-0.00994182) , 
6, 0.0278313, 1, 0, 0.685665,-0.00134286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00110721,-0.01784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495067,0.0107046) , 
6, 0.0255138, 1, 0, 0.309127,0.00239886) , 
2, 0.166598, 1, 0, 0.50578,0.000444684) , 
5, 0.00915064, 1, 0, 0.497649,-0.00101927)    );
  // itree = 308
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802224,-0.0212326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555489,0.00188557) , 
2, 0.0407802, 1, 0, 0.672073,-0.00188274) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983171,-0.00616146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79173,-0.0157619) , 
0, 0.000514419, 1, 0, 0.878805,-0.00986779) , 
7, 0.000354645, 1, 0, 0.709627,-0.00333325) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817481,0.00204582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773924,0.0213357) , 
3, 99.385, 1, 0, 0.811343,0.00525059) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131014) , 
5, 0.0264099, 1, 0, 0,-0.000714806) , 
0, 0.00357872, 1, 0, 0.298655,0.00148105) , 
2, 0.142787, 1, 0, 0.503343,-0.00091675)    );
  // itree = 309
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990429,-0.00806046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97024,0.0752802) , 
2, 0.282715, 1, 0, 0.98829,0.00112323) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857932,-0.00432457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899871,-0.0142239) , 
5, 0.0205862, 1, 0, 0.867886,-0.00967116) , 
0, 0.000226688, 1, 0, 0.924729,-0.00457507) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00652123,0.0134508) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131012) , 
6, 0.0115906, 1, 0, 0,-0.000677044) , 
0, 0.00887966, 1, 0, 0.00141056,0.000141233) , 
0, 0.00238633, 1, 0, 0.491086,-0.00236002)    );
  // itree = 310
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.54754,-0.029522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.201577,-0.0419812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643202,0.000170643) , 
6, 0.0139694, 1, 0, 0.565514,-0.00269623) , 
3, 3.60502, 1, 0, 0.562862,-0.00527152) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.319444,0.0167237) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537522,-0.000510572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114551,-0.01245) , 
3, 139.403, 1, 0, 0.492514,-0.0010119) , 
4, 0.00698471, 1, 0, 0.477029,-0.000378526) , 
3, 25.2368, 1, 0, 0.503707,-0.00189934)    );
  // itree = 311
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966431,0.0216452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0729599,-0.0164922) , 
0, 0.000930895, 1, 0, 0.3709,-0.00253028) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93492,0.0112156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599853,-0.00852008) , 
4, 0.021005, 1, 0, 0.870837,0.00422155) , 
7, 0.000117163, 1, 0, 0.676599,0.00159829) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0347375) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966892,0.0329347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131021) , 
0, 0.0035809, 1, 0, 0.238615,0.00319531) , 
4, 0.0208868, 1, 0, 0.156684,-0.00224475) , 
5, 0.022773, 1, 0, 0.499001,0.000285548)    );
  // itree = 312
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716228,0.00951318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549051,-0.00281325) , 
5, 0.0129673, 1, 0, 0.601783,0.000770165) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589493,-0.00886525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.34961e-05,-0.0109555) , 
0, 0.00357693, 1, 0, 0.127284,-0.00436545) , 
2, 0.285488, 1, 0, 0.477641,-0.000573444) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885374,-0.0242992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418673,-0.0096664) , 
0, 0.00213485, 1, 0, 0.635835,-0.0215274) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.451598,-0.00977742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704187,0.0117798) , 
6, 0.0476111, 1, 0, 0.571687,-0.000192544) , 
4, 0.0233367, 1, 0, 0.606118,-0.0116437) , 
6, 0.0440685, 1, 0, 0.492321,-0.00183831)    );
  // itree = 313
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.417284,0.000387741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329633,0.0271204) , 
3, 37.7361, 1, 0, 0.368621,0.00503833) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473072,-0.0299432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.265495,-0.0127643) , 
6, 0.0163087, 1, 0, 0.330557,-0.00958025) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671569,0.00230764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258453,-0.00536369) , 
2, 0.261702, 1, 0, 0.547563,-0.00049166) , 
5, 0.00915064, 1, 0, 0.522738,-0.00153139) , 
4, 0.0069617, 1, 0, 0.509397,-0.000962714)    );
  // itree = 314
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981051,-0.0161364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95767,0.0403851) , 
0, 0.000222223, 1, 0, 0.969722,0.00905364) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00762164,-0.0254342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00169921,2.59926e-05) , 
2, 0.19079, 1, 0, 0.00413927,-0.00317384) , 
0, 0.00118303, 1, 0, 0.319526,0.000820007) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875093,-0.0252602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940567,-0.00712397) , 
5, 0.014452, 1, 0, 0.925014,-0.0100012) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.427159,0.00490804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49169,-0.0107344) , 
6, 0.0450561, 1, 0, 0.436099,0.000405741) , 
0, 0.00119363, 1, 0, 0.599102,-0.0030639) , 
6, 0.0231939, 1, 0, 0.498309,-0.00166367)    );
  // itree = 315
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892049,0.0791083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913852,0.0231175) , 
2, 0.00415221, 1, 0, 0.902069,0.00606074) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962057,-0.00991428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00339539,0.0198387) , 
0, 0.00238688, 1, 0, 0.678113,-0.00352203) , 
2, 0.00792876, 1, 0, 0.701109,-0.00253805) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495304,0.0184207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391508,0.00973749) , 
4, 0.0187136, 1, 0, 0.438121,0.00652543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260471,-0.00407764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169833,0.0133904) , 
3, 100.759, 1, 0, 0.240692,-0.000637423) , 
2, 0.214216, 1, 0, 0.276329,0.000655506) , 
2, 0.166585, 1, 0, 0.503078,-0.00104923)    );
  // itree = 316
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.290584,-0.0144634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0973572,0.0252394) , 
3, 87.4725, 1, 0, 0.240211,-0.00163543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867258,0.00540849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971078,0.0357808) , 
1, 2.04099, 1, 0, 0.875728,0.00416342) , 
7, 0.00010606, 1, 0, 0.587903,0.00153713) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623636,-0.0104537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604296,-0.0058339) , 
0, 0.00185237, 1, 0, 0.614263,-0.0153856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000116488,-0.0102753) , 
0, 0.00357331, 1, 0, 0.159619,-0.00430903) , 
2, 0.333181, 1, 0, 0.502093,0.000365802)    );
  // itree = 317
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998424,0.059566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887366,-0.00744516) , 
0, 5.67161e-05, 1, 0, 0.971088,0.000396033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774277,0.0119087) , 
2, 0.282715, 1, 0, 0.949559,0.0018359) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793092,-0.0169016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941826,-0.00123505) , 
5, 0.0146822, 1, 0, 0.908875,-0.00806148) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00489534,0.0147672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000907487,-0.00886761) , 
2, 0.119179, 1, 0, 0.00178698,-0.000221124) , 
0, 0.0023259, 1, 0, 0.282218,-0.00264501) , 
0, 0.0011911, 1, 0, 0.499882,-0.00118349)    );
  // itree = 318
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94327,-0.00266096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907591,-0.0146116) , 
0, 0.00158621, 1, 0, 0.934058,-0.00509333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00117317,-0.00125957) , 
0, 0.00238688, 1, 0, 0.560305,-0.00309864) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545508,0.00583296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.434269,-0.0125322) , 
3, 79.5605, 1, 0, 0.506933,-0.000666704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131641,0.0137601) , 
3, 135.198, 1, 0, 0.451882,0.00015051) , 
3, 37.8551, 1, 0, 0.499438,-0.00127462)    );
  // itree = 319
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244247,-0.0339968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.471704,0.000527791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645637,-0.00707928) , 
6, 0.039757, 1, 0, 0.502868,-0.00067579) , 
5, 0.00437329, 1, 0, 0.491313,-0.00124815) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576978,0.00239523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637284,-0.0267155) , 
1, 1.06469, 1, 0, 0.609848,-0.0108661) , 
6, 0.0463879, 1, 0, 0.499086,-0.00187886)    );
  // itree = 320
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842136,-0.0217853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797528,0.00619959) , 
3, 28.0617, 1, 0, 0.816185,-0.00163294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.471902,-0.0262915) , 
3, 98.2359, 1, 0, 0.777924,-0.00399369) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902007,0.00930218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.002586,-0.0158695) , 
0, 0.00205156, 1, 0, 0.449994,0.00330471) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69063,-0.00900047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291393,-0.000164943) , 
4, 0.0199886, 1, 0, 0.335291,-0.00111452) , 
4, 0.0185517, 1, 0, 0.380323,0.000620454) , 
2, 0.0713763, 1, 0, 0.506982,-0.000849424)    );
  // itree = 321
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997642,0.0446882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638927,-0.0096927) , 
0, 2.70147e-05, 1, 0, 0.962557,-0.000147428) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881885,-0.00764441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917833,0.00297274) , 
0, 0.00195074, 1, 0, 0.891665,-0.00692564) , 
0, 0.000567387, 1, 0, 0.927294,-0.00351903) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00606981,0.0184641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131005) , 
6, 0.0115828, 1, 0, 0,-0.000620744) , 
0, 0.00995428, 1, 0, 0.00147836,0.000350743) , 
0, 0.00238727, 1, 0, 0.501979,-0.00174128)    );
  // itree = 322
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.234222,-0.0181837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156464,0.00277385) , 
3, 25.206, 1, 0, 0.178011,-0.000628274) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77713,-0.00958295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947958,0.0160304) , 
1, 2.07908, 1, 0, 0.794032,-0.00601418) , 
7, 0.000109054, 1, 0, 0.404868,-0.0026117) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926056,-0.00966407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989776,0.0573992) , 
0, 0.0018575, 1, 0, 0.940811,-1.28083e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491559,0.0131459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923931,0.0782413) , 
7, 0.000522023, 1, 0, 0.672185,0.0171006) , 
0, 0.00205351, 1, 0, 0.854694,0.00547344) , 
7, 0.000345042, 1, 0, 0.50107,-0.000882581)    );
  // itree = 323
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984051,-0.0141767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617788,-0.0468707) , 
0, 0.00117648, 1, 0, 0.85784,-0.00998385) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785599,-0.0152406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683752,0.0439208) , 
2, 0.0339181, 1, 0, 0.761704,-0.00106954) , 
3, 35.3156, 1, 0, 0.805451,-0.00512605) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731044,-0.00851035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000901691,0.00190663) , 
0, 0.00237101, 1, 0, 0.114431,-0.00238214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646467,0.00762944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.271736,-0.00337737) , 
2, 0.327509, 1, 0, 0.553181,0.00203383) , 
6, 0.0232048, 1, 0, 0.408882,0.000581475) , 
2, 0.0475958, 1, 0, 0.504506,-0.000794775)    );
  // itree = 324
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937319,-0.0041791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931128,0.0167162) , 
0, 0.00125443, 1, 0, 0.935657,0.00163626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00216356,-0.0279846) , 
0, 0.00178873, 1, 0, 0.637083,-0.00296249) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00182759,0.0124553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461701,-0.0197144) , 
7, 0.000292992, 1, 0, 0.108278,-0.00385735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814291,0.0241762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0180203) , 
4, 0.0243166, 1, 0, 0.472113,0.00455203) , 
4, 0.0185766, 1, 0, 0.377219,0.00235873) , 
5, 0.0182231, 1, 0, 0.501339,-0.000182874)    );
  // itree = 325
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987639,0.0164154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566754,-0.0125521) , 
0, 0.00119115, 1, 0, 0.827463,0.000204388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730564,0.0672402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544867,0.00985902) , 
2, 0.0339617, 1, 0, 0.649443,0.00659655) , 
3, 63.0969, 1, 0, 0.777492,0.0019987) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899827,0.00785033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876683,-0.0121391) , 
3, 25.097, 1, 0, 0.883678,-0.00827274) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00486265,0.0153154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000113976,-0.0105905) , 
0, 0.00996502, 1, 0, 0.00131851,0.000262614) , 
0, 0.00238688, 1, 0, 0.36731,-0.00327775) , 
2, 0.0713937, 1, 0, 0.494612,-0.00164018)    );
  // itree = 326
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.399827,-0.0179458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79841,0.0119404) , 
6, 0.0139193, 1, 0, 0.741475,0.0026043) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760044,-0.0121337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165043,0.00328385) , 
0, 0.0011907, 1, 0, 0.264821,-0.00217462) , 
2, 0.190337, 1, 0, 0.560678,0.000791642) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.51943,-0.0059389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708648,-0.0243487) , 
7, 0.000284565, 1, 0, 0.546129,-0.00666052) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.352133,-0.00559054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251604,0.0220276) , 
2, 0.356887, 1, 0, 0.327224,0.000354888) , 
4, 0.0185532, 1, 0, 0.43163,-0.00299109) , 
3, 50.4548, 1, 0, 0.503768,-0.000876553)    );
  // itree = 327
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.272962,-0.0160667) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802388,0.0299329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353113,-0.0010772) , 
2, 0.190339, 1, 0, 0.641206,0.00484639) , 
6, 0.016266, 1, 0, 0.565871,0.00262748) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968999,0.0332809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00182826,-0.01303) , 
0, 0.00119115, 1, 0, 0.139587,0.000235158) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853648,-0.00758547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560022,-0.0285417) , 
5, 0.0231663, 1, 0, 0.807933,-0.00902213) , 
7, 9.73039e-05, 1, 0, 0.467338,-0.00430454) , 
3, 25.2268, 1, 0, 0.496762,-0.00223446)    );
  // itree = 328
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758587,-0.00752607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610793,-0.0228183) , 
2, 0.0825137, 1, 0, 0.738446,-0.00411831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583119,0.0145883) , 
2, 0.10199, 1, 0, 0.725682,-0.00317322) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.108905,-0.0104025) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.451141,0.0131909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295398,-0.00563541) , 
4, 0.0208791, 1, 0, 0.371859,0.00228885) , 
5, 0.0136763, 1, 0, 0.325922,0.000568998) , 
2, 0.118993, 1, 0, 0.505368,-0.00111083)    );
  // itree = 329
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920475,-0.00926611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94046,0.00120001) , 
7, 0.000279606, 1, 0, 0.929826,-0.00349546) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983817,-0.0329595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815146,-0.0190463) , 
0, 0.000113316, 1, 0, 0.892231,-0.0236437) , 
3, 74.942, 1, 0, 0.922337,-0.00750902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00528139,0.0134254) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.93809e-05,-0.0111441) , 
6, 0.0115858, 1, 0, 4.88262e-05,-0.000524521) , 
0, 0.00996293, 1, 0, 0.00132803,0.000208433) , 
0, 0.00238688, 1, 0, 0.496646,-0.003942)    );
  // itree = 330
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535754,-0.00497223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.469275,0.00281626) , 
3, 48.637, 1, 0, 0.51015,-0.000878245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.288693,0.0275788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.102194,0.000886996) , 
5, 0.01681, 1, 0, 0.16785,0.00590508) , 
3, 113.566, 1, 0, 0.46752,-3.34492e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636111,-0.0178025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.661825,0.00255422) , 
6, 0.0467221, 1, 0, 0.644056,-0.00980354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547394,0.00286336) , 
2, 0.356444, 1, 0, 0.624056,-0.00729393) , 
6, 0.0417491, 1, 0, 0.493841,-0.00125426)    );
  // itree = 331
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648522,-0.0148861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519538,0.000501786) , 
5, 0.0136078, 1, 0, 0.558511,-0.00249519) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.512694,-0.0518113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548766,-0.00229267) , 
3, 22.9396, 1, 0, 0.529975,-0.0263855) , 
3, 20.422, 1, 0, 0.553103,-0.00702287) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559135,0.0136789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524691,-0.00346372) , 
4, 0.0116368, 1, 0, 0.532156,-0.000424627) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0357569,0.00277618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577663,0.0190752) , 
7, 0.000105313, 1, 0, 0.189735,0.00496628) , 
3, 116.525, 1, 0, 0.473755,0.000494804) , 
3, 25.2271, 1, 0, 0.497832,-0.00178636)    );
  // itree = 332
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862445,0.0738103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.217809,-0.00780315) , 
2, 0.0711244, 1, 0, 0.475999,0.000399524) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7899,-0.0388144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58262,-0.00637785) , 
2, 0.118987, 1, 0, 0.668423,-0.0142033) , 
6, 0.0324536, 1, 0, 0.553591,-0.00548886) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983573,0.00793172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473859,-0.0249773) , 
0, 0.00118532, 1, 0, 0.761326,-0.00406155) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610699,0.0299828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29858,-0.00203382) , 
2, 0.132603, 1, 0, 0.369263,0.0014794) , 
2, 0.0713937, 1, 0, 0.490387,-0.000232429) , 
3, 12.6184, 1, 0, 0.500324,-0.00105884)    );
  // itree = 333
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95659,-8.55063e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917613,-0.0253794) , 
4, 0.014743, 1, 0, 0.94526,-0.00644608) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00180253,-0.0146925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698544,0.0188308) , 
7, 0.000117494, 1, 0, 0.181326,0.00159093) , 
0, 0.00119344, 1, 0, 0.408286,-0.000796818) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942247,-0.0132915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871723,-0.0207501) , 
6, 0.0422378, 1, 0, 0.905733,-0.0181774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.682632,-0.0105059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846152,0.0278502) , 
4, 0.0208345, 1, 0, 0.786593,0.00730833) , 
0, 0.00185625, 1, 0, 0.847263,-0.00566968) , 
7, 0.000349373, 1, 0, 0.500573,-0.00182124)    );
  // itree = 334
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953562,-0.00635575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904448,-0.022429) , 
0, 0.00192685, 1, 0, 0.947558,-0.00647685) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809657,0.0243644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761922,-8.27821e-05) , 
0, 0.000794342, 1, 0, 0.785684,0.0103986) , 
2, 0.30873, 1, 0, 0.932089,-0.00486414) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00725595,0.0149475) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130993) , 
6, 0.0115853, 1, 0, 0,-0.000540073) , 
0, 0.00887485, 1, 0, 0.00147782,0.000292855) , 
0, 0.00238727, 1, 0, 0.491017,-0.00241994)    );
  // itree = 335
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958496,0.00760796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00312254,-0.0153774) , 
0, 0.00119316, 1, 0, 0.233535,-0.00105802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938355,-0.00603939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80947,0.021151) , 
0, 0.000979164, 1, 0, 0.86922,0.00560841) , 
7, 0.000131247, 1, 0, 0.443168,0.0011404) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.289782,-0.0264161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789831,-0.00423954) , 
1, 1.21281, 1, 0, 0.615718,-0.00983429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.311252,-0.0183265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740858,0.0126721) , 
6, 0.0426873, 1, 0, 0.641328,0.00147168) , 
4, 0.0209278, 1, 0, 0.629996,-0.0035312) , 
6, 0.0371103, 1, 0, 0.497099,-0.000208123)    );
  // itree = 336
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668751,0.0232658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156478,0.00575366) , 
6, 0.0118265, 1, 0, 0.330133,0.00491612) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.171455,-0.0310757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603794,0.00125265) , 
5, 0.0078456, 1, 0, 0.316898,-0.00775957) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618474,0.0207728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526548,-0.00160996) , 
4, 0.0129344, 1, 0, 0.541827,0.000380467) , 
5, 0.00915064, 1, 0, 0.515993,-0.000554443) , 
4, 0.00695709, 1, 0, 0.499275,-6.23692e-05)    );
  // itree = 337
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.322291,0.00229409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650546,-0.00643332) , 
6, 0.0188874, 1, 0, 0.554847,-0.00198943) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642538,-0.00730526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579309,-0.0403584) , 
1, 1.11037, 1, 0, 0.623432,-0.0124107) , 
6, 0.044062, 1, 0, 0.562498,-0.00315205) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00220173,-0.0051377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757764,0.0323951) , 
7, 0.000354846, 1, 0, 0.149105,0.00383684) , 
2, 0.380778, 1, 0, 0.502298,-0.0021343)    );
  // itree = 338
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959482,0.0169522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935133,-0.0137544) , 
4, 0.0131988, 1, 0, 0.946186,-0.00130704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658313,-0.0184264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937339,-0.00442413) , 
7, 0.000191644, 1, 0, 0.89961,-0.00989678) , 
0, 0.00124678, 1, 0, 0.928772,-0.00451851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00212354,0.00536077) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000944523,-0.00126106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000141956,-0.0114729) , 
4, 0.0162501, 1, 0, 0.000391364,-0.000573879) , 
2, 0.119139, 1, 0, 0.000813787,-0.000295261) , 
0, 0.00238727, 1, 0, 0.497461,-0.00255556)    );
  // itree = 339
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53775,-0.0120971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440175,0.00434095) , 
3, 12.6104, 1, 0, 0.455269,0.000217498) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600643,-0.0205861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649338,-0.00616821) , 
4, 0.0210326, 1, 0, 0.62756,-0.00825035) , 
6, 0.0397634, 1, 0, 0.485417,-0.00126424) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631064,0.0353873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642177,-0.00495658) , 
1, 1.0691, 1, 0, 0.636316,0.00816713) , 
6, 0.0463888, 1, 0, 0.494841,-0.000675198)    );
  // itree = 340
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800999,0.0132998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.159106,-0.0228296) , 
4, 0.0069384, 1, 0, 0.383394,-0.00249776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65893,-0.0277026) , 
5, 0.0078283, 1, 0, 0.448405,-0.00577755) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778723,0.00555555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0198343) , 
5, 0.0255964, 1, 0, 0.588333,0.00133003) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157335,-0.0133595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20125,0.00618955) , 
3, 50.3956, 1, 0, 0.179862,-0.00271511) , 
2, 0.333191, 1, 0, 0.506118,0.000515846) , 
5, 0.00913014, 1, 0, 0.497687,-0.000403528)    );
  // itree = 341
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244097,0.0367728) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841492,-0.00530166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788775,0.0358188) , 
2, 0.0226557, 1, 0, 0.818306,0.00233303) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90164,-0.00476368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00105261,-0.00180301) , 
0, 0.00238582, 1, 0, 0.428896,-0.0025214) , 
2, 0.0475842, 1, 0, 0.521211,-0.0013706) , 
4, 0.0046561, 1, 0, 0.507072,-0.000887993)    );
  // itree = 342
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71156,0.00514532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16767,-0.0167074) , 
5, 0.0231193, 1, 0, 0.558504,0.000245615) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.432787,-0.0261178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621274,-0.0414055) , 
6, 0.0279294, 1, 0, 0.530884,-0.0185597) , 
3, 20.4026, 1, 0, 0.553235,-0.00334228) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942584,0.0068952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0950562,-0.00376386) , 
0, 0.00216811, 1, 0, 0.635055,0.00255971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0163766) , 
4, 0.0255068, 1, 0, 0.474141,0.0014075) , 
3, 25.2064, 1, 0, 0.498214,-3.81385e-05)    );
  // itree = 343
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53893,-6.85896e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7973,-0.0293068) , 
7, 0.000105382, 1, 0, 0.647583,-0.00665618) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.727469,-0.0170659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450732,0.00569302) , 
2, 0.0714013, 1, 0, 0.520356,0.000363271) , 
4, 0.0139702, 1, 0, 0.562448,-0.0019591) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932791,0.00118874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799629,0.0108636) , 
2, 0.16626, 1, 0, 0.88527,0.00472873) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00012604,-0.00924974) , 
5, 0.027335, 1, 0, 7.32613e-05,-0.000544564) , 
0, 0.0035809, 1, 0, 0.422153,0.00196985) , 
3, 50.2064, 1, 0, 0.498937,-0.000180474)    );
  // itree = 344
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876115,-0.0174016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869961,0.00868616) , 
4, 0.00704186, 1, 0, 0.870779,0.000503286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805277,-0.0197923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254775,-0.00204557) , 
0, 0.000907462, 1, 0, 0.38272,-0.00897073) , 
2, 0.0947847, 1, 0, 0.650295,-0.00377667) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0395782,-0.0248291) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809613,0.0144808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0221408) , 
4, 0.0243027, 1, 0, 0.471456,0.00254871) , 
4, 0.0185601, 1, 0, 0.363334,0.000368413) , 
5, 0.0184809, 1, 0, 0.501976,-0.00163424)    );
  // itree = 345
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.478188,-0.0082564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685483,0.0137493) , 
6, 0.031811, 1, 0, 0.543715,-0.000142741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639209,-0.0397094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669935,-0.00603672) , 
6, 0.0437497, 1, 0, 0.660924,-0.0100596) , 
6, 0.0417474, 1, 0, 0.563919,-0.00185215) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932589,-0.0081452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130636,0.00893675) , 
0, 0.00119363, 1, 0, 0.323532,3.89452e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926556,-1.28566e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801517,0.0337838) , 
0, 0.00183171, 1, 0, 0.863088,0.00808806) , 
7, 0.000347867, 1, 0, 0.431813,0.00165429) , 
3, 50.3741, 1, 0, 0.505222,-0.00029417)    );
  // itree = 346
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.251911,-0.00674266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500526,-0.0601786) , 
4, 0.00500832, 1, 0, 0.341023,-0.0109837) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7331,0.0110018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395928,-0.00659238) , 
4, 0.0189175, 1, 0, 0.571542,0.00113164) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.445182,-0.00780448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665312,0.013627) , 
6, 0.0440728, 1, 0, 0.470313,-0.00226493) , 
3, 37.8555, 1, 0, 0.515202,-0.000758758) , 
4, 0.00699956, 1, 0, 0.499412,-0.00168569)    );
  // itree = 347
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927628,-0.00854738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932409,0.0128799) , 
0, 0.00171561, 1, 0, 0.928349,-0.00358651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854411,-0.0172799) , 
0, 0.00211934, 1, 0, 0.923107,-0.00506404) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00490462,0.0112501) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130984) , 
6, 0.0115875, 1, 0, 0,-0.000455929) , 
0, 0.00997278, 1, 0, 0.00119439,0.000157917) , 
0, 0.00238633, 1, 0, 0.499469,-0.00266445)    );
  // itree = 348
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991676,-0.0179573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965115,0.00934161) , 
2, 0.0942383, 1, 0, 0.980794,0.000228015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823817,-0.00898696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923432,-0.00368856) , 
0, 0.00140872, 1, 0, 0.883839,-0.00805096) , 
0, 0.000340032, 1, 0, 0.930354,-0.00407899) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00312844,0.0124918) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000550469,-0.00408826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141433) , 
3, 88.2728, 1, 0, 0.000391364,-0.00066541) , 
2, 0.119179, 1, 0, 0.00104344,-0.000175887) , 
0, 0.00238582, 1, 0, 0.499007,-0.00226733)    );
  // itree = 349
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692471,-0.00206961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806662,0.0208998) , 
5, 0.0172314, 1, 0, 0.729594,0.00186959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.169656,-0.0219337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220591,0.0533924) , 
4, 0.0232229, 1, 0, 0.196933,-0.00217808) , 
5, 0.0226102, 1, 0, 0.57048,0.000660492) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659143,-0.0116616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000128842,-0.0114422) , 
0, 0.00238358, 1, 0, 0.155558,-0.0071385) , 
2, 0.356968, 1, 0, 0.498443,-0.000693541)    );
  // itree = 350
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803837,-0.0250946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808906,0.0105772) , 
3, 24.0306, 1, 0, 0.807011,-0.00244499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431333,-0.0221983) , 
3, 100.947, 1, 0, 0.766627,-0.00382602) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69805,0.00874069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00568993,-0.0193708) , 
5, 0.0187128, 1, 0, 0.434049,0.00308327) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.406317,-0.012133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.259696,0.00789954) , 
2, 0.275268, 1, 0, 0.336872,-0.0015765) , 
4, 0.0185751, 1, 0, 0.375754,0.000287935) , 
2, 0.0713634, 1, 0, 0.500972,-0.00102999)    );
  // itree = 351
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93701,0.000363733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809058,-0.0264727) , 
0, 0.00192912, 1, 0, 0.925289,-0.00425855) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00336914,0.0244904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.88388e-05,-0.0121956) , 
4, 0.0162745, 1, 0, 0.00106488,0.000191155) , 
0, 0.00238727, 1, 0, 0.482683,-0.00212761) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718433,0.0121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650853,-0.0184747) , 
2, 0.190184, 1, 0, 0.694568,0.000449838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527754,0.0420193) , 
2, 0.333478, 1, 0, 0.651585,0.00325636) , 
6, 0.0440703, 1, 0, 0.501476,-0.00152856)    );
  // itree = 352
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93414,-0.00329691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851352,-0.0190389) , 
7, 0.000506662, 1, 0, 0.928136,-0.00411802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855221,-0.0159176) , 
0, 0.00215607, 1, 0, 0.923676,-0.00550887) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00390749,0.0232595) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00143106,0.00389346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.96053e-05,-0.0127524) , 
4, 0.0162588, 1, 0, 0.000484127,-0.000551015) , 
2, 0.119511, 1, 0, 0.00129372,0.000128077) , 
0, 0.00238582, 1, 0, 0.497405,-0.0029038)    );
  // itree = 353
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.786235,0.00827652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655408,-0.0151887) , 
2, 0.0647438, 1, 0, 0.762796,-5.48027e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57994,0.0287172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529703,-0.00953279) , 
2, 0.107656, 1, 0, 0.565,0.0060951) , 
2, 0.0849915, 1, 0, 0.722829,0.00118785) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.100452,-0.0101661) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0304192,-0.0206087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438324,0.00099978) , 
4, 0.0139411, 1, 0, 0.365065,-0.000865243) , 
5, 0.0136776, 1, 0, 0.315482,-0.00223301) , 
2, 0.118989, 1, 0, 0.493796,-0.00073555)    );
  // itree = 354
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954355,0.0134867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0960159,-0.00947899) , 
0, 0.00119179, 1, 0, 0.382695,0.000220965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623217,0.0726639) , 
6, 0.0287138, 1, 0, 0.397054,0.00119109) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845114,-0.043594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950442,-0.00542807) , 
5, 0.016921, 1, 0, 0.928269,-0.00986629) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.459158,0.00572173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452071,-0.0116682) , 
6, 0.0469335, 1, 0, 0.458447,0.001288) , 
0, 0.00119344, 1, 0, 0.614211,-0.00241007) , 
6, 0.0301523, 1, 0, 0.500995,-0.000532583)    );
  // itree = 355
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989788,-0.0405603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972771,0.032983) , 
2, 0.141183, 1, 0, 0.984739,7.37318e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955001,-0.00240952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743951,-0.010257) , 
2, 0.142804, 1, 0, 0.877956,-0.00933115) , 
0, 0.000339948, 1, 0, 0.928813,-0.00488355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00417515,0.0266594) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00114983,0.00376519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.03858e-05,-0.0123935) , 
4, 0.0162501, 1, 0, 0.00039418,-0.000499124) , 
2, 0.119176, 1, 0, 0.00133325,0.000261845) , 
0, 0.00238688, 1, 0, 0.49744,-0.00249042)    );
  // itree = 356
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961261,0.0226274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.096798,-0.00962967) , 
0, 0.000851429, 1, 0, 0.445411,0.000365883) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921058,-0.0312204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566965,-0.000925429) , 
0, 0.00108124, 1, 0, 0.744511,-0.0115951) , 
7, 9.12735e-05, 1, 0, 0.577355,-0.00491054) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0856628,-0.0311697) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803789,0.00919541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.71662e-05,-0.0189312) , 
5, 0.0253736, 1, 0, 0.539484,0.00235508) , 
4, 0.0139221, 1, 0, 0.467755,0.000859072) , 
5, 0.0136731, 1, 0, 0.499277,-0.000800327)    );
  // itree = 357
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662504,-0.00964994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94663,0.00980113) , 
7, 0.000127248, 1, 0, 0.826372,0.000258562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0258107) , 
4, 0.0185511, 1, 0, 0.642594,-0.00313856) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.492218,-0.000210376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943039,0.0173636) , 
7, 0.000418339, 1, 0, 0.720942,0.00541822) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0284257) , 
6, 0.0301261, 1, 0, 0,-0.00175289) , 
5, 0.0259628, 1, 0, 0.361663,0.00184452) , 
5, 0.0184935, 1, 0, 0.500334,-0.000615193)    );
  // itree = 358
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829224,0.0364103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540503,0.00412486) , 
4, 0.0186091, 1, 0, 0.728262,0.00564991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229926,-0.00500651) , 
2, 0.190343, 1, 0, 0.541409,0.00262531) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848467,0.00859131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125464,-0.0330708) , 
5, 0.011116, 1, 0, 0.505466,-0.00414936) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69447,0.00490416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444826,-0.00330619) , 
4, 0.0151439, 1, 0, 0.486288,-0.000604277) , 
4, 0.0116057, 1, 0, 0.490512,-0.00138503) , 
3, 12.6199, 1, 0, 0.498426,-0.000761441)    );
  // itree = 359
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977894,-0.00104959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892445,0.0341653) , 
2, 0.305897, 1, 0, 0.969777,0.00168703) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923549,-0.00908967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667933,-0.0159393) , 
2, 0.308697, 1, 0, 0.895536,-0.0125199) , 
0, 0.000566503, 1, 0, 0.932764,-0.00539596) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00356671,0.0154034) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0009988,-0.000215184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.20696e-05,-0.01285) , 
4, 0.0162501, 1, 0, 0.000352065,-0.000566538) , 
2, 0.119138, 1, 0, 0.00116491,-1.96223e-06) , 
0, 0.00238727, 1, 0, 0.503199,-0.00290877)    );
  // itree = 360
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413896,-0.0174901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.785623,0.00601508) , 
6, 0.0139844, 1, 0, 0.733283,0.000722438) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785908,-0.0112162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000987613,0.00452692) , 
0, 0.00238139, 1, 0, 0.261801,-0.00619054) , 
2, 0.190324, 1, 0, 0.555885,-0.00187861) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.292051,0.0444255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.47726,-0.00062522) , 
4, 0.00697085, 1, 0, 0.458639,0.000715535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158961,0.0331339) , 
2, 0.404577, 1, 0, 0.419801,0.00163365) , 
3, 50.4548, 1, 0, 0.495364,-0.000316588)    );
  // itree = 361
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9096,-0.00969051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960306,-0.000884754) , 
5, 0.0120168, 1, 0, 0.94644,-0.00246874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692145,-0.00987171) , 
2, 0.355835, 1, 0, 0.927701,-0.00352363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00698655,0.0163617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000325594,0.0017947) , 
2, 0.356951, 1, 0, 9.16474e-05,-0.000359168) , 
0, 0.00887368, 1, 0, 0.00149608,0.000422862) , 
0, 0.00238688, 1, 0, 0.495405,-0.00168164)    );
  // itree = 362
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568533,0.00219547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530254,-0.0046956) , 
3, 44.0128, 1, 0, 0.552652,-0.000415571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448817,0.014634) , 
3, 102.72, 1, 0, 0.549062,-0.000153448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793326,-0.0132002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00207106,0.0148204) , 
0, 0.00238582, 1, 0, 0.189519,-0.00492913) , 
3, 113.566, 1, 0, 0.50151,-0.00078506)    );
  // itree = 363
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721528,0.0135456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296169,-0.0018896) , 
4, 0.0209226, 1, 0, 0.571209,0.00372539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543351,-0.0265714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544108,-0.00103433) , 
3, 23.1157, 1, 0, 0.544049,-0.00125378) , 
3, 19.2245, 1, 0, 0.551439,0.000101036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82606,0.0174855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131082) , 
0, 0.00357387, 1, 0, 0.253847,0.00472457) , 
3, 100.948, 1, 0, 0.503587,0.000844492)    );
  // itree = 364
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843219,-0.000414787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.299751,-0.0312709) , 
5, 0.014842, 1, 0, 0.642363,-0.0046155) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933355,-0.0138108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.324639,0.00723089) , 
0, 0.00119363, 1, 0, 0.473938,0.000209346) , 
4, 0.0162337, 1, 0, 0.54376,-0.00179083) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.280132,0.029067) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.282682,0.0113295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.189507,-0.0136628) , 
2, 0.260975, 1, 0, 0.242345,-0.000581024) , 
4, 0.0139484, 1, 0, 0.251879,0.00356183) , 
3, 100.947, 1, 0, 0.497775,-0.000947543)    );
  // itree = 365
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965561,0.0392804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934725,-0.0117886) , 
3, 36.7431, 1, 0, 0.949729,0.00228725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141397,-0.0253466) , 
0, 0.00077443, 1, 0, 0.462494,-0.00594144) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.110351,-0.0209987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746888,0.00975558) , 
4, 0.0097238, 1, 0, 0.620154,0.00294956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776977,0.0018056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0202013) , 
4, 0.0243027, 1, 0, 0.408422,-0.00117535) , 
4, 0.0185601, 1, 0, 0.50908,0.000785649) , 
5, 0.00925117, 1, 0, 0.50257,-0.000154438)    );
  // itree = 366
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245978,-0.0283726) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454825,0.0124662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555804,-0.00264297) , 
4, 0.00929419, 1, 0, 0.54142,-0.000472342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106304,-0.0145501) , 
2, 0.428362, 1, 0, 0.505674,-0.00099152) , 
5, 0.00463724, 1, 0, 0.49321,-0.00146746)    );
  // itree = 367
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937525,-0.0030047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845474,-0.0170925) , 
0, 0.00190834, 1, 0, 0.928736,-0.00461722) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000159942,-0.0112179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00116765,0.00309311) , 
3, 100.962, 1, 0, 0.000404012,-0.00058098) , 
0, 0.00238727, 1, 0, 0.480832,-0.0026698) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675816,0.0358287) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618873,0.0135956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658747,-0.00743203) , 
6, 0.0465271, 1, 0, 0.63192,0.00309651) , 
1, 1.06811, 1, 0, 0.643774,0.00600094) , 
6, 0.0440685, 1, 0, 0.499398,-0.00168183)    );
  // itree = 368
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684802,-0.00073001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69447,0.0202339) , 
3, 14.4134, 1, 0, 0.690513,0.00330106) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.16601,-0.00205535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212844,-0.0106664) , 
3, 17.9937, 1, 0, 0.187803,-0.00339483) , 
2, 0.285488, 1, 0, 0.574019,0.00174941) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685797,0.0347804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0560602,-0.00365124) , 
2, 0.0237921, 1, 0, 0.132422,0.000208616) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957058,-0.000129325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700833,-0.00975572) , 
0, 0.000648152, 1, 0, 0.807843,-0.00671757) , 
7, 9.73039e-05, 1, 0, 0.457781,-0.00312781) , 
3, 37.8402, 1, 0, 0.508729,-0.000990085)    );
  // itree = 369
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.345761,-0.00271559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889415,0.013514) , 
7, 0.00020658, 1, 0, 0.503698,0.00149556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939616,0.00591833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5138,-0.00912077) , 
0, 0.00118209, 1, 0, 0.661255,-0.00452441) , 
6, 0.0417491, 1, 0, 0.531619,0.000428746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115606,-0.015138) , 
3, 138.802, 1, 0, 0.499206,-0.000298074)    );
  // itree = 370
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787778,-0.0181799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827047,-0.0634207) , 
6, 0.0233406, 1, 0, 0.80183,-0.00926726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762378,0.00567155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794006,0.0595897) , 
2, 0.0249143, 1, 0, 0.776077,0.00529541) , 
6, 0.0325874, 1, 0, 0.794788,-0.0052853) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900241,0.0107573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00249776,-0.0108356) , 
0, 0.0017765, 1, 0, 0.496714,0.00421628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.371645,-0.014472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351967,0.0103194) , 
4, 0.0208791, 1, 0, 0.360606,-0.00159872) , 
5, 0.0182231, 1, 0, 0.413278,0.000651605) , 
2, 0.0475972, 1, 0, 0.505184,-0.000778592)    );
  // itree = 371
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834804,0.00239199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184146,-0.0155403) , 
4, 0.0162328, 1, 0, 0.635747,-0.000993827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711306,-0.0306723) , 
5, 0.0170408, 1, 0, 0.642278,-0.00271106) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876882,-0.0181046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0013405,0.00480333) , 
0, 0.00307441, 1, 0, 0.180346,-0.00380656) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803586,0.015935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0218321) , 
4, 0.0243457, 1, 0, 0.464645,0.00228602) , 
4, 0.0186108, 1, 0, 0.386518,0.000611742) , 
5, 0.0178926, 1, 0, 0.505873,-0.000938906)    );
  // itree = 372
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990933,0.00919295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583041,-0.0481455) , 
0, 0.00117599, 1, 0, 0.850417,-0.00869378) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.460192,-0.00847591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448313,0.00444078) , 
3, 14.4215, 1, 0, 0.453029,-0.000783218) , 
2, 0.0475809, 1, 0, 0.558868,-0.00289008) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.827161,0.0168953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202552,-0.0069117) , 
5, 0.0151573, 1, 0, 0.567221,0.00454871) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.305886,-0.0116448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423601,0.00134634) , 
5, 0.0182326, 1, 0, 0.38995,-0.00136937) , 
4, 0.0162527, 1, 0, 0.457032,0.000870104) , 
3, 37.8565, 1, 0, 0.501462,-0.000770435)    );
  // itree = 373
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896481,-0.0389769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764305,0.0054426) , 
2, 0.00905645, 1, 0, 0.787183,-0.000205523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.403265,-0.0126304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364326,-0.000860951) , 
5, 0.018092, 1, 0, 0.378562,-0.00460762) , 
2, 0.0951513, 1, 0, 0.553375,-0.00272435) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.321035,-0.0238117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0038331,0.0183821) , 
2, 0.0946408, 1, 0, 0.0860346,-0.000885773) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93942,0.0234862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430837,-0.00444962) , 
0, 0.00188611, 1, 0, 0.751031,0.0073999) , 
7, 0.000105965, 1, 0, 0.3502,0.00240565) , 
3, 75.6192, 1, 0, 0.498318,-0.00133421)    );
  // itree = 374
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537747,0.00150698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6548,-0.00714569) , 
6, 0.0417423, 1, 0, 0.556781,-0.00032524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221372,0.0152236) , 
2, 0.38755, 1, 0, 0.536688,0.000114882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103917,-0.0141812) , 
2, 0.428375, 1, 0, 0.502379,-0.000333882)    );
  // itree = 375
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660056,-0.00509212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76941,0.0145969) , 
5, 0.0140101, 1, 0, 0.718591,0.00255826) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.167193,-0.0234313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.238501,0.0347477) , 
4, 0.0232392, 1, 0, 0.205128,-0.0038579) , 
5, 0.0226127, 1, 0, 0.565833,0.000649418) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923797,-0.00445121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870108,-0.025641) , 
0, 0.00181306, 1, 0, 0.912592,-0.00942558) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00320612,0.0123053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130986) , 
0, 0.0142726, 1, 0, 0.0012678,0.000337982) , 
0, 0.00238455, 1, 0, 0.4187,-0.00413422) , 
3, 50.28, 1, 0, 0.499604,-0.00150385)    );
  // itree = 376
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.224508,-0.0254142) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598463,-0.00855433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535608,0.00138154) , 
4, 0.0139145, 1, 0, 0.555917,-0.000846072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866877,0.0120798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131098) , 
0, 0.0035809, 1, 0, 0.310893,0.00374026) , 
3, 88.3297, 1, 0, 0.505473,9.81304e-05) , 
5, 0.00463724, 1, 0, 0.492383,-0.000245453)    );
  // itree = 377
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680272,0.00853827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489387,-0.00668422) , 
4, 0.0162897, 1, 0, 0.572226,-0.000236467) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.224147,-0.00204627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827744,0.0215592) , 
7, 0.000119102, 1, 0, 0.534261,0.0051274) , 
3, 16.8128, 1, 0, 0.559231,0.00159955) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937447,-0.00309218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864202,-0.011901) , 
3, 93.3069, 1, 0, 0.924857,-0.00464338) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00377744,0.026137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000435385,-0.00715595) , 
2, 0.143435, 1, 0, 0.00142821,0.000324977) , 
0, 0.00238398, 1, 0, 0.476366,-0.00223035) , 
3, 25.2268, 1, 0, 0.501457,-0.00107066)    );
  // itree = 378
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928429,-0.00758091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939136,0.015235) , 
0, 0.00126325, 1, 0, 0.931216,-0.00039455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00210564,-0.0227739) , 
0, 0.00178279, 1, 0, 0.636859,-0.00306296) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950601,-0.00327381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506451,0.020877) , 
0, 0.00196394, 1, 0, 0.743885,0.00276992) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0227002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00152045,0.0266762) , 
4, 0.0232102, 1, 0, 0.000857402,-0.00158572) , 
5, 0.0252836, 1, 0, 0.380461,0.000639522) , 
5, 0.0180028, 1, 0, 0.499779,-0.00108347)    );
  // itree = 379
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683063,-0.0116623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675606,0.0026326) , 
3, 11.969, 1, 0, 0.677579,-0.00108258) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729658,-0.0186867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210774,0.0015469) , 
2, 0.166241, 1, 0, 0.546428,-0.00777177) , 
3, 50.2787, 1, 0, 0.623893,-0.00382077) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0204271) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834909,0.0126686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000205745,-0.0213862) , 
5, 0.0255815, 1, 0, 0.477608,0.00194567) , 
5, 0.0181896, 1, 0, 0.374742,-6.89013e-05) , 
4, 0.0185517, 1, 0, 0.499894,-0.00195352)    );
  // itree = 380
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.394246,0.000918871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297751,0.0227773) , 
3, 37.7395, 1, 0, 0.339855,0.00379471) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697721,-0.000941217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764963,-0.0148695) , 
7, 0.00037858, 1, 0, 0.706103,-0.00183027) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694932,0.0103601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0170789) , 
4, 0.0248662, 1, 0, 0.271021,0.000773103) , 
4, 0.0208868, 1, 0, 0.517794,-0.000703498) , 
4, 0.00696446, 1, 0, 0.501684,-0.000296224)    );
  // itree = 381
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951651,0.0482634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847909,0.0250834) , 
5, 0.00880379, 1, 0, 0.880722,0.00573002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720801,-0.00364368) , 
3, 73.3286, 1, 0, 0.850046,0.0044474) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862915,-0.0124434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952295,-0.00123433) , 
5, 0.0158023, 1, 0, 0.917628,-0.0060875) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00374013,0.0182674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000205394,-0.0104792) , 
2, 0.137283, 1, 0, 0.00108143,-2.38975e-06) , 
0, 0.00238582, 1, 0, 0.442902,-0.00293571) , 
2, 0.0237921, 1, 0, 0.499416,-0.00191088)    );
  // itree = 382
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957934,0.0174449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0026872,-0.0110801) , 
0, 0.00119199, 1, 0, 0.182516,0.000138642) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80232,-0.00174121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790464,-0.0240315) , 
7, 0.000325656, 1, 0, 0.801262,-0.00358252) , 
7, 0.000114619, 1, 0, 0.403795,-0.00119214) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974688,0.0372509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592279,-0.00842087) , 
4, 0.0223326, 1, 0, 0.894717,0.00887334) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580817,-0.019584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950053,0.0220951) , 
7, 0.000557892, 1, 0, 0.744448,-0.00761964) , 
5, 0.0232098, 1, 0, 0.854257,0.00443256) , 
7, 0.000347867, 1, 0, 0.499077,-2.39686e-06)    );
  // itree = 383
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611625,-0.0189568) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841326,0.0105196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.035668) , 
5, 0.0202238, 1, 0, 0.635166,0.00304766) , 
5, 0.00630557, 1, 0, 0.633336,0.0018057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0229671) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809587,0.00858323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0238595) , 
4, 0.0243158, 1, 0, 0.467969,-8.21526e-05) , 
5, 0.0184809, 1, 0, 0.36669,-0.00278213) , 
4, 0.0185751, 1, 0, 0.500733,-0.000475828)    );
  // itree = 384
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80214,-0.0175013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936571,0.0118762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927503,-0.00662996) , 
3, 12.2421, 1, 0, 0.928989,-0.00285257) , 
4, 0.00590909, 1, 0, 0.922784,-0.00400684) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00689634,0.00957274) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130979) , 
6, 0.0115906, 1, 0, 0,-0.000378302) , 
0, 0.00887485, 1, 0, 0.00142735,0.000212408) , 
0, 0.00238727, 1, 0, 0.495197,-0.00204875)    );
  // itree = 385
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867814,-0.00221846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737185,-0.0433292) , 
3, 73.328, 1, 0, 0.841383,-0.00396968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552483,0.00675063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000120446,-0.0176055) , 
4, 0.0185684, 1, 0, 0.316254,0.00129446) , 
2, 0.0237979, 1, 0, 0.39879,0.000467075) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993006,0.0774403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948115,-0.0108614) , 
2, 0.259273, 1, 0, 0.97933,0.00230718) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683913,-0.0258531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770702,-0.00297143) , 
4, 0.0206856, 1, 0, 0.734795,-0.0142001) , 
0, 0.000471105, 1, 0, 0.839766,-0.00711407) , 
7, 0.000345042, 1, 0, 0.4942,-0.0011732)    );
  // itree = 386
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939909,-0.00504191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918703,-0.0162533) , 
0, 0.00146055, 1, 0, 0.933726,-0.00692932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00142676,0.00431516) , 
0, 0.0023814, 1, 0, 0.566889,-0.00408158) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942778,0.0893198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763039,0.0133732) , 
5, 0.0119523, 1, 0, 0.846169,0.00610454) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574461,-0.0088002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.265078,0.00421528) , 
2, 0.159816, 1, 0, 0.39652,-0.000973521) , 
2, 0.0238132, 1, 0, 0.451536,-0.00010749) , 
3, 37.8578, 1, 0, 0.501358,-0.00182392)    );
  // itree = 387
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97174,0.00111956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953368,0.0331304) , 
0, 0.000454433, 1, 0, 0.964248,0.00809002) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945691,-0.0260808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83771,0.00943833) , 
2, 0.285588, 1, 0, 0.927013,-0.0105446) , 
4, 0.0134456, 1, 0, 0.94379,-0.00214833) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0130414,-0.0150431) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954261,0.0157876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00129608,-0.00721482) , 
0, 0.0023291, 1, 0, 0.336828,0.00322672) , 
4, 0.0116006, 1, 0, 0.287702,0.00166191) , 
0, 0.00119291, 1, 0, 0.509581,0.000373341)    );
  // itree = 388
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884597,0.0162618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701426,0.0303939) , 
2, 0.0736026, 1, 0, 0.851847,0.00533123) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965596,-0.0204481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466141,0.00911551) , 
0, 0.00119119, 1, 0, 0.63119,-0.000583893) , 
4, 0.0139763, 1, 0, 0.726344,0.00196688) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638426,-0.0129688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932251,0.000338753) , 
5, 0.0162424, 1, 0, 0.860718,-0.00761571) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248867,0.00428369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0764723,-0.013048) , 
2, 0.354723, 1, 0, 0.187517,-0.000428209) , 
0, 0.00119199, 1, 0, 0.309865,-0.00173447) , 
2, 0.118993, 1, 0, 0.492749,-0.00010913)    );
  // itree = 389
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636975,0.021529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450061,0.0111658) , 
6, 0.0138829, 1, 0, 0.520913,0.00449742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544429,-0.0165275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.2557e-05,-0.0114433) , 
0, 0.00596817, 1, 0, 0.0405701,-0.00131105) , 
4, 0.00934729, 1, 0, 0.172881,0.000288896) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910978,-0.00189336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327812,-0.0310749) , 
5, 0.0207189, 1, 0, 0.832592,-0.00581612) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.3974,-0.0120583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970029,0.0255067) , 
5, 0.0219463, 1, 0, 0.732632,0.00101522) , 
4, 0.0210114, 1, 0, 0.806042,-0.00400168) , 
7, 0.000103842, 1, 0, 0.497837,-0.00191315)    );
  // itree = 390
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554633,-0.00521695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488306,0.00496296) , 
3, 54.0423, 1, 0, 0.532422,-0.000722984) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724167,0.0031335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643655,-0.012291) , 
5, 0.0229386, 1, 0, 0.667108,-0.00582473) , 
6, 0.0440683, 1, 0, 0.54798,-0.00131229) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829269,-0.0175693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00139445,0.00634203) , 
0, 0.00238258, 1, 0, 0.194877,-0.00656863) , 
3, 113.566, 1, 0, 0.502047,-0.00199607)    );
  // itree = 391
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.285668,0.036027) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60539,0.0027972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.273241,-0.0111612) , 
3, 100.907, 1, 0, 0.553751,3.32451e-05) , 
4, 0.00466974, 1, 0, 0.540444,0.000530765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0933403,-0.0164414) , 
2, 0.428362, 1, 0, 0.501997,-0.000154689)    );
  // itree = 392
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.271099,0.050601) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544987,-0.00453973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370117,0.0170656) , 
3, 112.201, 1, 0, 0.535662,-0.00144766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118772,-0.0193631) , 
3, 138.633, 1, 0, 0.50671,-0.00216373) , 
4, 0.00466707, 1, 0, 0.495438,-0.00163138)    );
  // itree = 393
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834037,-0.00864514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488411,0.0032748) , 
2, 0.0407715, 1, 0, 0.573542,0.000511226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103912,-0.0165252) , 
2, 0.428127, 1, 0, 0.538079,8.17441e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225205,0.0105338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122337,0.0159629) , 
2, 0.190383, 1, 0, 0.16567,0.00499244) , 
3, 126.134, 1, 0, 0.500842,0.000506539)    );
  // itree = 394
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729704,0.00188034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483918,-0.00968662) , 
2, 0.11649, 1, 0, 0.659906,-0.00119878) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.323808,0.013776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.23029,-0.00897329) , 
4, 0.0208713, 1, 0, 0.274808,0.00259005) , 
2, 0.203905, 1, 0, 0.530933,7.01393e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109379,-0.0114061) , 
2, 0.428231, 1, 0, 0.496915,-0.000378745)    );
  // itree = 395
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836572,0.03239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291898,-0.0025781) , 
2, 0.0237979, 1, 0, 0.3797,-8.80525e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937577,-0.011271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800356,0.0234821) , 
0, 0.00143756, 1, 0, 0.862582,0.00418497) , 
7, 0.00029495, 1, 0, 0.494033,0.000923686) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707294,0.000453428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542295,-0.013552) , 
2, 0.262202, 1, 0, 0.640179,-0.00563683) , 
6, 0.0463879, 1, 0, 0.503348,0.000505556)    );
  // itree = 396
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977557,0.0147805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856388,-0.0064864) , 
0, 0.000511438, 1, 0, 0.954548,0.00077069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.196769,-0.0167191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353097,-0.00205699) , 
4, 0.0139186, 1, 0, 0.317661,-0.00253406) , 
0, 0.00119344, 1, 0, 0.5455,-0.00135182) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871443,0.0101706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00122177,0.0058912) , 
0, 0.00238582, 1, 0, 0.205341,0.0034449) , 
3, 113.521, 1, 0, 0.50199,-0.000738281)    );
  // itree = 397
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900033,-0.0145199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947952,-0.00375967) , 
5, 0.0117545, 1, 0, 0.936146,-0.00449303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832351,-0.0137872) , 
3, 112.413, 1, 0, 0.92966,-0.00585773) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00301118,0.0207096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00134316,-0.00216815) , 
5, 0.0230988, 1, 0, 0.00080432,-0.000460255) , 
4, 0.0162501, 1, 0, 0.00146509,0.00021311) , 
0, 0.00238727, 1, 0, 0.501217,-0.00305551)    );
  // itree = 398
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993156,0.0423286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97199,-0.0488463) , 
2, 0.0101951, 1, 0, 0.983154,-0.00450155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531753,-0.0391808) , 
0, 0.00119363, 1, 0, 0.833498,-0.0108822) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.556873,-0.00037059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777587,-0.0205447) , 
7, 0.000378754, 1, 0, 0.582559,-0.00233003) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72621,0.0156317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0804883,-0.0104415) , 
4, 0.0235333, 1, 0, 0.258732,0.00109094) , 
4, 0.0208849, 1, 0, 0.442431,-0.000849687) , 
2, 0.0237979, 1, 0, 0.498092,-0.00227764)    );
  // itree = 399
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989124,0.0120402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.505054,-0.0184376) , 
0, 0.00119363, 1, 0, 0.819512,-0.000901296) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627195,-0.0595704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787138,-0.0126131) , 
6, 0.025689, 1, 0, 0.712503,-0.0146677) , 
2, 0.0316976, 1, 0, 0.791724,-0.00447609) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902998,0.00706119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00251001,-0.00784586) , 
0, 0.00201153, 1, 0, 0.479112,0.00235558) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914755,-0.0160373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.222723,0.00161735) , 
0, 0.00119291, 1, 0, 0.349744,-0.00106331) , 
4, 0.0185581, 1, 0, 0.404925,0.000395009) , 
2, 0.0475972, 1, 0, 0.498654,-0.000785342)    );
  // itree = 400
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964703,0.0024909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963068,0.0307426) , 
0, 0.00062083, 1, 0, 0.964131,0.00657256) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00366061,-0.0131623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000388254,-0.00355591) , 
2, 0.166748, 1, 0, 0.00147168,-0.000734088) , 
0, 0.00119291, 1, 0, 0.1621,0.000485092) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924437,-0.00341402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.302804,-0.0302858) , 
5, 0.0206013, 1, 0, 0.848685,-0.00653304) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8944,-0.0106716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670826,0.0296511) , 
0, 0.00181129, 1, 0, 0.765002,0.00312202) , 
4, 0.0208619, 1, 0, 0.826109,-0.0039283) , 
7, 9.73033e-05, 1, 0, 0.503355,-0.00178309)    );
  // itree = 401
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691676,0.00375637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0200132) , 
4, 0.0162731, 1, 0, 0.406284,0.000187514) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744226,0.0015682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351766,0.0408182) , 
2, 0.214192, 1, 0, 0.619943,0.00566998) , 
6, 0.0318064, 1, 0, 0.448129,0.00126124) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600014,-0.059326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629121,0.00277126) , 
1, 1.30516, 1, 0, 0.614807,-0.0194259) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681184,-0.0129088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467798,0.0126756) , 
2, 0.333262, 1, 0, 0.628192,-0.0030022) , 
6, 0.0393281, 1, 0, 0.625634,-0.00614119) , 
6, 0.037112, 1, 0, 0.49995,-0.000899837)    );
  // itree = 402
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982462,0.00637268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.88993,-0.00750869) , 
2, 0.0712542, 1, 0, 0.933766,-0.00309867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851351,-0.0133994) , 
3, 106.819, 1, 0, 0.927939,-0.00412625) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00214015,0.0110616) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00124485,-0.00766342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130974) , 
0, 0.0143096, 1, 0, 0.000369977,-0.000524927) , 
4, 0.0162501, 1, 0, 0.000893406,-8.82977e-05) , 
0, 0.00238727, 1, 0, 0.497207,-0.0022501)    );
  // itree = 403
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.310412,-0.0215258) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549324,0.0436429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671691,-0.0169365) , 
5, 0.00779739, 1, 0, 0.614847,-0.000300641) , 
5, 0.00617901, 1, 0, 0.463604,-0.00611435) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724636,-0.000487875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795844,0.0237968) , 
6, 0.0347873, 1, 0, 0.749437,0.00234212) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530935,-0.0214491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371335,-0.00139067) , 
2, 0.114442, 1, 0, 0.384104,-0.00169966) , 
2, 0.0951618, 1, 0, 0.515778,-0.000242914) , 
5, 0.0092551, 1, 0, 0.50825,-0.00109008)    );
  // itree = 404
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970697,-0.00807764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96422,0.0497637) , 
0, 0.000824925, 1, 0, 0.96894,0.0044598) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00203634,0.000128241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00659677,-0.0296294) , 
6, 0.0132309, 1, 0, 0.0038983,-0.0054724) , 
0, 0.00118069, 1, 0, 0.318978,-0.0022296) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943807,0.00980345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501701,0.0332114) , 
0, 0.00119189, 1, 0, 0.665198,0.00841664) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940371,-0.00799533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429935,0.00487956) , 
0, 0.00119344, 1, 0, 0.596442,0.00012944) , 
3, 12.6164, 1, 0, 0.607183,0.00142408) , 
6, 0.0231943, 1, 0, 0.502651,9.88837e-05)    );
  // itree = 405
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748696,0.0289715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0330945,-0.00426622) , 
2, 0.0712106, 1, 0, 0.259506,0.00121743) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780525,-0.0186014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846202,-0.00387042) , 
5, 0.0159032, 1, 0, 0.822099,-0.00833882) , 
7, 0.000119384, 1, 0, 0.560024,-0.00388719) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674765,0.00580054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.90732e-05,-0.0310856) , 
5, 0.0211776, 1, 0, 0.446968,0.00126644) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625388,-0.000238238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629078,-0.0270659) , 
1, 1.16297, 1, 0, 0.626203,-0.00332276) , 
6, 0.0417491, 1, 0, 0.477736,0.000478651) , 
3, 25.2074, 1, 0, 0.50296,-0.000859635)    );
  // itree = 406
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996537,0.0330758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974415,-0.0602068) , 
2, 0.0147262, 1, 0, 0.990149,-0.00206825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508538,-0.0438857) , 
0, 0.00118818, 1, 0, 0.822049,-0.00683216) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732683,0.00700125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501058,0.0373889) , 
3, 74.6428, 1, 0, 0.679871,0.00426963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.281456,-0.00218603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596213,-0.0114488) , 
6, 0.0440712, 1, 0, 0.325937,-0.00202156) , 
2, 0.114461, 1, 0, 0.444721,8.9833e-05) , 
2, 0.0237979, 1, 0, 0.498752,-0.000901346)    );
  // itree = 407
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803234,-0.00349088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420632,-0.0306917) , 
3, 99.8483, 1, 0, 0.761818,-0.00262009) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645359,-0.0355678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665683,-0.0111788) , 
2, 0.085689, 1, 0, 0.655821,-0.0152083) , 
2, 0.077054, 1, 0, 0.746165,-0.00447901) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.2229,-0.00314092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857971,0.0153466) , 
7, 0.000258425, 1, 0, 0.49633,0.00302795) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0503094,-0.0213499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168596,0.0295008) , 
4, 0.0231947, 1, 0, 0.118769,-0.00165732) , 
5, 0.0230963, 1, 0, 0.333071,0.00100202) , 
2, 0.0951916, 1, 0, 0.494101,-0.00113456)    );
  // itree = 408
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723786,0.00222377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431228,0.0358787) , 
3, 100.753, 1, 0, 0.692948,0.00303937) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0233015) , 
7, -0.000706079, 1, 0, 0,-0.00136417) , 
4, 0.0162501, 1, 0, 0.411087,0.0012482) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750867,0.0113397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567857,-0.0090662) , 
2, 0.0952192, 1, 0, 0.624911,-0.00218294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598932,-0.0226155) , 
1, 1.45001, 1, 0, 0.622035,-0.00377883) , 
6, 0.0324717, 1, 0, 0.499172,-0.000850914)    );
  // itree = 409
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918484,-0.0775108) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811328,-0.0385237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799573,0.0148466) , 
6, 0.0324605, 1, 0, 0.807501,-0.00213405) , 
5, 0.00813005, 1, 0, 0.83526,-0.00634279) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914981,-0.00405616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.217002,0.00499652) , 
0, 0.00119129, 1, 0, 0.397972,0.000183914) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653265,-0.017304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590015,0.0030988) , 
3, 37.7871, 1, 0, 0.616672,-0.00437714) , 
6, 0.0417492, 1, 0, 0.439054,-0.000672875) , 
2, 0.0237921, 1, 0, 0.494469,-0.00146588)    );
  // itree = 410
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.200868,-0.013821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884567,0.0118149) , 
7, 7.37518e-05, 1, 0, 0.466387,0.000338493) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794691,-0.0364334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486429,-0.000818578) , 
2, 0.166564, 1, 0, 0.653428,-0.0103977) , 
6, 0.030195, 1, 0, 0.554835,-0.00473847) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863435,0.043313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.331158,0.00870699) , 
4, 0.0070387, 1, 0, 0.470956,0.00545527) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66957,-0.00731422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317823,0.00740088) , 
2, 0.166593, 1, 0, 0.50021,-1.72356e-05) , 
5, 0.00916687, 1, 0, 0.496169,0.000738681) , 
3, 12.6187, 1, 0, 0.505141,-9.89455e-05)    );
  // itree = 411
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949292,0.00401421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179678,-0.00789968) , 
0, 0.00119344, 1, 0, 0.478794,-0.00063957) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663682,-0.00905535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672042,-0.0273752) , 
3, 50.9578, 1, 0, 0.66493,-0.00662569) , 
6, 0.0324781, 1, 0, 0.556616,-0.00314232) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.103581,0.017155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377757,-0.00867116) , 
6, 0.0143522, 1, 0, 0.271876,-0.0016407) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545477,0.00678035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519827,0.0656887) , 
1, 1.40607, 1, 0, 0.539191,0.00446392) , 
6, 0.0301523, 1, 0, 0.395099,0.00117333) , 
3, 62.9677, 1, 0, 0.499988,-0.00162923)    );
  // itree = 412
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956093,-0.0164522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9628,0.0508557) , 
0, 0.000431166, 1, 0, 0.958904,0.00489975) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00473441,-0.0208015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000740379,0.00551432) , 
2, 0.119176, 1, 0, 0.00171958,-0.000734476) , 
0, 0.00119344, 1, 0, 0.16217,0.000209975) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.797577,-0.00671847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887856,0.019669) , 
1, 1.76152, 1, 0, 0.807976,-0.00269135) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947717,0.000333594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843881,-0.0235531) , 
6, 0.0222445, 1, 0, 0.891078,-0.016721) , 
1, 1.98551, 1, 0, 0.817238,-0.00425505) , 
7, 9.73039e-05, 1, 0, 0.501726,-0.00210448)    );
  // itree = 413
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953959,-0.00408942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725803,0.00845475) , 
2, 0.0475809, 1, 0, 0.813153,0.00336222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0314429) , 
5, 0.0225453, 1, 0, 0.653681,0.00181048) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819312,-0.0244404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.207089,0.00568675) , 
0, 0.0018595, 1, 0, 0.337346,-0.00470744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771144,0.0156251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0273057) , 
5, 0.0266168, 1, 0, 0.221123,0.00105898) , 
5, 0.0230963, 1, 0, 0.273681,-0.00154868) , 
4, 0.0208868, 1, 0, 0.505217,0.000498073)    );
  // itree = 414
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802586,-0.0101749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468277,0.00233954) , 
5, 0.0120638, 1, 0, 0.612323,-0.00248043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.569145,-0.0254822) , 
7, 0.000241841, 1, 0, 0.607559,-0.00457502) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88184,0.0153735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0824498,-0.0194496) , 
4, 0.0178182, 1, 0, 0.33134,-0.00394644) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825275,0.0112412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.59986e-05,-0.0211215) , 
5, 0.0256297, 1, 0, 0.468527,0.00248934) , 
5, 0.0182615, 1, 0, 0.427485,0.00056395) , 
4, 0.0162745, 1, 0, 0.500777,-0.00152767)    );
  // itree = 415
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950284,0.0502102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491118,-0.0535394) , 
5, 0.00866314, 1, 0, 0.771018,-0.00457987) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0877895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793544,0.0679852) , 
0, 0.00118221, 1, 0, 0.907103,0.00806153) , 
8, 0.0327922, 1, 0, 0.843024,0.00210901) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758878,-0.0101742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932365,-0.00348301) , 
5, 0.0105825, 1, 0, 0.912064,-0.00428611) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00221416,0.0129868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000378612,-0.00951026) , 
4, 0.0162731, 1, 0, 0.000917205,-0.000116533) , 
0, 0.00238688, 1, 0, 0.439013,-0.00212134) , 
2, 0.0237979, 1, 0, 0.496573,-0.00151864)    );
  // itree = 416
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615068,-0.00303167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315881,0.0422683) , 
3, 100.749, 1, 0, 0.577049,0.00106604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616864,-0.0165017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.306198,0.000449197) , 
2, 0.166611, 1, 0, 0.453119,-0.00277499) , 
4, 0.0139186, 1, 0, 0.493606,-0.00152015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628279,0.000117912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62761,0.0213846) , 
6, 0.047715, 1, 0, 0.627999,0.00520785) , 
6, 0.0463888, 1, 0, 0.50209,-0.00109542)    );
  // itree = 417
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946871,-0.0209295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983015,0.039464) , 
7, 5.14494e-05, 1, 0, 0.964737,0.0011596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0356711,-0.0203678) , 
0, 0.000905595, 1, 0, 0.462412,-0.00686682) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793103,0.0317182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384759,-0.000509568) , 
2, 0.0475945, 1, 0, 0.470018,0.000673458) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716586,-0.0203887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631387,-0.00198648) , 
2, 0.0713763, 1, 0, 0.647943,-0.00419311) , 
6, 0.0417491, 1, 0, 0.504584,-0.000271969) , 
4, 0.00928328, 1, 0, 0.498285,-0.00125702)    );
  // itree = 418
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987586,0.0111124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880673,-0.0112841) , 
0, 0.000223078, 1, 0, 0.931252,-0.00618096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000669047,-0.00871049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00100707,0.0120241) , 
4, 0.023238, 1, 0, 0.000850765,-0.000344999) , 
0, 0.0023814, 1, 0, 0.557028,-0.00383363) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.415872,-0.00447024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654152,0.0337992) , 
4, 0.0106224, 1, 0, 0.50807,0.00367632) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.382818,-0.00339134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644962,0.00962911) , 
6, 0.0463879, 1, 0, 0.404982,-0.000555968) , 
4, 0.0139348, 1, 0, 0.433326,0.000607695) , 
3, 50.4738, 1, 0, 0.502164,-0.00186381)    );
  // itree = 419
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944215,-0.0128661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414885,0.00121787) , 
0, 0.000875779, 1, 0, 0.632902,-0.00213746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70146,-0.0219087) , 
5, 0.0174035, 1, 0, 0.638517,-0.00303371) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000863985,-0.000379942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418145,-0.0188496) , 
7, 0.000295063, 1, 0, 0.0994935,-0.00442629) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807464,0.00954429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0225226) , 
4, 0.0243027, 1, 0, 0.467168,0.00123443) , 
4, 0.0185601, 1, 0, 0.375521,-0.000176583) , 
5, 0.018278, 1, 0, 0.500886,-0.00153853)    );
  // itree = 420
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.270946,0.0163875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641416,-0.00971912) , 
4, 0.00568331, 1, 0, 0.551525,-0.0023847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703801,-0.0244849) , 
4, 0.0132563, 1, 0, 0.567568,-0.00411864) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943308,-0.0193358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880228,0.0266304) , 
2, 0.282374, 1, 0, 0.932062,-0.0045043) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.418397,0.0113646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.139859,-0.00911579) , 
2, 0.285552, 1, 0, 0.321512,0.00102135) , 
0, 0.00119344, 1, 0, 0.479728,-0.000410542) , 
4, 0.0139198, 1, 0, 0.507044,-0.00156366)    );
  // itree = 421
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979094,-0.00799764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764458,0.0231463) , 
0, 0.000380628, 1, 0, 0.868395,0.00682935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0515313,-0.0119093) , 
5, 0.0114551, 1, 0, 0.519594,0.00255604) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592356,-0.00631761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883281,-0.0162393) , 
7, 0.000354645, 1, 0, 0.666734,-0.00418363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00023513,-0.0221273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546808,0.0053176) , 
6, 0.0255138, 1, 0, 0.334609,0.000776212) , 
2, 0.16659, 1, 0, 0.502767,-0.00173501) , 
4, 0.0116021, 1, 0, 0.506485,-0.000786762)    );
  // itree = 422
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63228,-0.0159289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65834,0.00882294) , 
6, 0.0162567, 1, 0, 0.651545,0.000331309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.39032,-0.0111078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725166,-0.0222686) , 
7, 9.14639e-05, 1, 0, 0.534576,-0.0087138) , 
3, 25.1393, 1, 0, 0.571791,-0.00583598) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676015,-0.0094068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472374,0.00382951) , 
3, 62.4609, 1, 0, 0.608752,-0.00223005) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.395378,0.00674369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204107,-0.00568669) , 
2, 0.352365, 1, 0, 0.317105,0.000545188) , 
2, 0.190348, 1, 0, 0.468964,-0.000899868) , 
4, 0.0139198, 1, 0, 0.500676,-0.00242216)    );
  // itree = 423
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934412,-0.00373822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930653,-0.017024) , 
5, 0.0218491, 1, 0, 0.934002,-0.0039533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862409,-0.0246639) , 
0, 0.00215607, 1, 0, 0.929426,-0.00546004) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0035492,0.0159009) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000672031,-0.0108767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131023) , 
0, 0.0110321, 1, 0, 0.000194646,-0.000703582) , 
2, 0.119668, 1, 0, 0.00102518,-0.000127829) , 
0, 0.00238688, 1, 0, 0.494187,-0.00296027)    );
  // itree = 424
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.250225,-0.0305306) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864578,-0.0379008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82339,0.0505732) , 
2, 0.0158488, 1, 0, 0.851775,-0.00454765) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651225,0.00464497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198802,-0.00478541) , 
5, 0.0219172, 1, 0, 0.456503,0.00111732) , 
2, 0.0237979, 1, 0, 0.508231,0.000375965) , 
5, 0.00457324, 1, 0, 0.496547,-0.000162015)    );
  // itree = 425
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.497704,-0.0123151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443154,0.00061932) , 
4, 0.00930485, 1, 0, 0.453518,-0.000848451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131455,0.0212217) , 
3, 113.432, 1, 0, 0.407738,3.86398e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963637,0.0143084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572285,-0.0210071) , 
4, 0.022331, 1, 0, 0.892448,-0.000977864) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488808,-0.026672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938038,-0.000981725) , 
7, 0.000546742, 1, 0, 0.753534,-0.0193543) , 
5, 0.0230995, 1, 0, 0.851512,-0.00639314) , 
7, 0.000349373, 1, 0, 0.502693,-0.00133758)    );
  // itree = 426
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.856235,0.00357072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679694,0.0152207) , 
2, 0.047526, 1, 0, 0.76753,0.00319733) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651953,0.00382663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415837,-0.0202162) , 
2, 0.0543155, 1, 0, 0.52981,-0.00751167) , 
3, 75.7103, 1, 0, 0.716522,0.000899442) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523729,-0.0283971) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0342418,-0.0123726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337812,0.00297576) , 
5, 0.0136731, 1, 0, 0.28142,-0.000483037) , 
2, 0.159674, 1, 0, 0.296555,-0.00188565) , 
2, 0.142613, 1, 0, 0.504157,-0.000508894)    );
  // itree = 427
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864146,0.00138613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653676,-0.0831508) , 
3, 74.8879, 1, 0, 0.820515,-0.00313886) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.797162,-0.047575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775688,0.00578834) , 
3, 33.0887, 1, 0, 0.785267,-0.0125362) , 
6, 0.0302973, 1, 0, 0.808281,-0.00640056) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488742,-0.00556019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914714,0.00879321) , 
5, 0.0108205, 1, 0, 0.873044,0.00423249) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130956) , 
5, 0.0273229, 1, 0, 0,-0.000400169) , 
0, 0.00357949, 1, 0, 0.416506,0.00180995) , 
2, 0.0475842, 1, 0, 0.512889,-0.000209966)    );
  // itree = 428
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996362,0.0309517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836929,-0.0119321) , 
0, 5.68209e-05, 1, 0, 0.942923,-0.00494968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267028,0.0102115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00780178,-0.0180541) , 
2, 0.285595, 1, 0, 0.174338,0.000516048) , 
0, 0.00119344, 1, 0, 0.405519,-0.00112798) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969003,0.0306421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586089,-0.0134937) , 
4, 0.023085, 1, 0, 0.911181,0.0077822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631411,-0.0059269) , 
5, 0.02367, 1, 0, 0.858818,0.00510865) , 
7, 0.000345042, 1, 0, 0.502468,0.000205876)    );
  // itree = 429
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838309,-0.0355809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941291,-0.00255219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825019,-0.0136902) , 
3, 116.848, 1, 0, 0.935205,-0.00275019) , 
7, 5.18447e-05, 1, 0, 0.928204,-0.0044562) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000682691,-0.00767879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00045793,-0.00104892) , 
4, 0.0231962, 1, 0, 0.000558164,-0.000392015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0031079,0.0185539) , 
3, 100.999, 1, 0, 0.00123198,0.000133751) , 
0, 0.00238455, 1, 0, 0.500388,-0.00233784)    );
  // itree = 430
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.236822,-0.0219906) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57468,-0.00157802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579438,-0.0689416) , 
3, 34.1836, 1, 0, 0.575063,-0.00242993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52208,0.0161146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435635,-0.00251315) , 
4, 0.0139254, 1, 0, 0.460545,0.000898374) , 
3, 37.7819, 1, 0, 0.510333,-0.000548641) , 
5, 0.00458917, 1, 0, 0.498054,-0.000847458)    );
  // itree = 431
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817352,0.0268299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369637,-0.0146846) , 
2, 0.0713964, 1, 0, 0.516796,-0.00689499) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86152,-0.0269893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481595,0.00381336) , 
2, 0.0237921, 1, 0, 0.538296,0.000492359) , 
3, 6.00748, 1, 0, 0.536447,-0.000142979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.153033,-0.0129682) , 
3, 126.184, 1, 0, 0.497889,-0.000927749)    );
  // itree = 432
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680469,-0.0137915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.306084,0.00795454) , 
4, 0.0208678, 1, 0, 0.551793,-0.00428617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582573,0.00918859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510035,-0.00514232) , 
3, 56.973, 1, 0, 0.551225,0.00101165) , 
3, 24.0241, 1, 0, 0.551424,-0.000849442) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836817,-0.0147961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00147465,0.00212571) , 
0, 0.00238582, 1, 0, 0.248521,-0.00560779) , 
3, 100.907, 1, 0, 0.50131,-0.0016367)    );
  // itree = 433
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789844,0.0115028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642816,-0.000442082) , 
4, 0.0139145, 1, 0, 0.697863,0.00133581) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82085,-0.00582215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000704876,0.00345166) , 
0, 0.00238462, 1, 0, 0.264086,-0.00202507) , 
2, 0.214063, 1, 0, 0.54263,0.00013307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112542,-0.01224) , 
3, 138.633, 1, 0, 0.507445,-0.000330341)    );
  // itree = 434
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955974,0.0142084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923121,-0.008942) , 
4, 0.0142124, 1, 0, 0.939188,2.64188e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729087,-0.0237057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935095,-0.00770623) , 
4, 0.0174931, 1, 0, 0.895279,-0.0147655) , 
0, 0.00158682, 1, 0, 0.927275,-0.0039867) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00265346,0.0131644) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000970903,-0.00105684) , 
5, 0.0230988, 1, 0, 0.000576818,-0.000468175) , 
4, 0.0162411, 1, 0, 0.00118587,4.58635e-05) , 
0, 0.00238727, 1, 0, 0.49859,-0.00212003)    );
  // itree = 435
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853925,0.0269259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130201,-0.00652498) , 
2, 0.166494, 1, 0, 0.659147,0.0042607) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.39032,-0.0145404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545254,0.00169716) , 
5, 0.0180964, 1, 0, 0.499553,-0.00191504) , 
4, 0.0162268, 1, 0, 0.56808,0.000736716) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750074,-0.0195403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20887,0.00302633) , 
2, 0.16569, 1, 0, 0.560133,-0.00691225) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0854549,-0.0139623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3975,0.0145904) , 
4, 0.0186002, 1, 0, 0.316397,0.000839256) , 
5, 0.0182483, 1, 0, 0.421229,-0.00249471) , 
3, 50.4539, 1, 0, 0.501658,-0.000724879)    );
  // itree = 436
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899879,-0.00726738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813727,-0.0382292) , 
2, 0.0135934, 1, 0, 0.846455,-0.0128746) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632109,-0.0256267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808684,0.011095) , 
6, 0.0139633, 1, 0, 0.775284,-0.000294507) , 
3, 24.4996, 1, 0, 0.799465,-0.00456868) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.375686,-0.000547367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780378,0.0132969) , 
6, 0.0301284, 1, 0, 0.593224,0.00366332) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905272,-0.0115954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000811032,0.00648897) , 
0, 0.00238688, 1, 0, 0.126261,-0.00193092) , 
5, 0.0230963, 1, 0, 0.409033,0.0014567) , 
2, 0.0475958, 1, 0, 0.503343,1.24488e-06)    );
  // itree = 437
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93392,0.0799355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798716,-0.0264297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838603,0.030294) , 
6, 0.0278331, 1, 0, 0.81669,0.0016788) , 
4, 0.00701635, 1, 0, 0.840606,0.0036022) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.117886,-0.0183085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.487858,-0.00168285) , 
5, 0.00735766, 1, 0, 0.245995,-0.00892448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663101,0.0075003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.31375,-0.00251636) , 
2, 0.159794, 1, 0, 0.469411,0.000341326) , 
5, 0.00910551, 1, 0, 0.446141,-0.000623765) , 
2, 0.0237986, 1, 0, 0.502755,-1.72531e-05)    );
  // itree = 438
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985745,-0.00898287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985025,0.0423006) , 
2, 0.0407715, 1, 0, 0.985564,0.00099493) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.747072,-0.0194193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910329,-0.00721112) , 
7, 0.000196546, 1, 0, 0.873161,-0.010934) , 
2, 0.0713937, 1, 0, 0.935379,-0.00433102) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0106829,-0.0126317) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948928,0.00849993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00176415,-0.0101953) , 
0, 0.00232795, 1, 0, 0.327837,0.00162214) , 
4, 0.0116438, 1, 0, 0.281528,0.000756425) , 
0, 0.00119231, 1, 0, 0.498533,-0.000932038)    );
  // itree = 439
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997267,0.0299827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965395,-0.0477231) , 
8, 0.184767, 1, 0, 0.992918,-0.000701189) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928291,-0.0041061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579345,-0.012997) , 
4, 0.0109178, 1, 0, 0.792907,-0.0192254) , 
0, 5.67495e-05, 1, 0, 0.9417,-0.00544487) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.110872,-0.00315601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784451,0.0088231) , 
7, 0.000254291, 1, 0, 0.254636,0.000778133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.464581,-0.0207436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446689,0.00520607) , 
4, 0.0233355, 1, 0, 0.456496,-0.00665144) , 
6, 0.0440614, 1, 0, 0.277717,-7.13704e-05) , 
0, 0.00119199, 1, 0, 0.495311,-0.00183232)    );
  // itree = 440
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.408591,-0.0018269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435391,-0.0218196) , 
7, 4.50164e-05, 1, 0, 0.416884,-0.00492977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637681,-0.0349874) , 
5, 0.00792714, 1, 0, 0.476939,-0.00928785) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641566,0.0122933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137915,-0.0091068) , 
4, 0.0162411, 1, 0, 0.399152,0.00184227) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6341,-0.0169748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65889,-0.00294389) , 
6, 0.0374482, 1, 0, 0.653817,-0.00360921) , 
6, 0.0347909, 1, 0, 0.499222,-0.000299874) , 
5, 0.00925117, 1, 0, 0.496239,-0.001503)    );
  // itree = 441
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.344092,-0.013463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646985,-0.00488598) , 
5, 0.00484812, 1, 0, 0.491086,-0.00429915) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681666,0.00863921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124787,-0.00832005) , 
4, 0.0139226, 1, 0, 0.379573,0.000971945) , 
5, 0.00726007, 1, 0, 0.393969,0.00029147) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963634,0.00295259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.162379,-0.0295877) , 
5, 0.018271, 1, 0, 0.607735,-0.00781677) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710684,0.00618931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49939,-0.00537463) , 
2, 0.261705, 1, 0, 0.632229,0.000324882) , 
4, 0.0185964, 1, 0, 0.622748,-0.00282642) , 
6, 0.0301521, 1, 0, 0.501499,-0.00117398)    );
  // itree = 442
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849334,-0.013865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454986,0.00211259) , 
2, 0.0475813, 1, 0, 0.560155,-0.000629369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619577,-0.0155731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.245864,0.00319535) , 
2, 0.261666, 1, 0, 0.50735,-0.0044859) , 
3, 47.8838, 1, 0, 0.540341,-0.00207645) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831026,0.0073428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131183) , 
0, 0.00356904, 1, 0, 0.246915,0.00197102) , 
3, 100.558, 1, 0, 0.491871,-0.00140787)    );
  // itree = 443
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267,-0.0268403) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979143,0.00758781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794272,-0.00919026) , 
0, 0.000340892, 1, 0, 0.938015,-0.00181439) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0114927,-0.0120044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34007,0.00557917) , 
4, 0.0115978, 1, 0, 0.287967,0.000631407) , 
0, 0.00119316, 1, 0, 0.500721,-0.000169079) , 
5, 0.00467499, 1, 0, 0.490404,-0.00060236)    );
  // itree = 444
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84226,0.00329748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0803957,-0.0326515) , 
5, 0.0151516, 1, 0, 0.598517,-0.00110937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705314,-0.0391665) , 
4, 0.0154584, 1, 0, 0.607954,-0.00340317) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0283676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000116308,-0.00604828) , 
0, 0.0167173, 1, 0, 7.06831e-05,-0.00250274) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707256,-0.00455933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74529,0.0160954) , 
1, 1.20193, 1, 0, 0.728915,0.00215736) , 
6, 0.0324872, 1, 0, 0.43212,0.000259709) , 
4, 0.0162328, 1, 0, 0.502056,-0.00119715)    );
  // itree = 445
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960466,0.0157107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0500243,-0.0130464) , 
0, 0.00119053, 1, 0, 0.434718,0.00086612) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758851,-0.0156425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253889,0.00517428) , 
4, 0.0233075, 1, 0, 0.643969,-0.00759033) , 
6, 0.0255126, 1, 0, 0.56143,-0.00425469) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813948,0.0120242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311486,-0.00117979) , 
4, 0.0162594, 1, 0, 0.60732,0.00368891) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0737758,-0.0346341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423453,0.00382404) , 
4, 0.0186033, 1, 0, 0.334605,-0.00151517) , 
5, 0.0182802, 1, 0, 0.45484,0.000779213) , 
3, 37.8551, 1, 0, 0.501428,-0.00142098)    );
  // itree = 446
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.24335,0.0259361) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553143,0.00216096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.302702,0.0487486) , 
3, 118.909, 1, 0, 0.542967,0.00110034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122156,-0.0123747) , 
3, 138.802, 1, 0, 0.511497,0.000591323) , 
4, 0.00464135, 1, 0, 0.498978,0.000937151)    );
  // itree = 447
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.397373,0.00316652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27244,0.0371278) , 
3, 50.2979, 1, 0, 0.341999,0.00549038) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.29591,0.00298788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632696,-0.00430612) , 
6, 0.0242933, 1, 0, 0.504629,-0.00113192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711217,-0.00730677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670799,0.022274) , 
6, 0.047715, 1, 0, 0.693479,0.00403274) , 
6, 0.0463895, 1, 0, 0.516885,-0.000796746) , 
4, 0.00696227, 1, 0, 0.501414,-0.000240568)    );
  // itree = 448
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.514157,-0.00204444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621162,0.0227432) , 
6, 0.0441388, 1, 0, 0.520382,-0.000205385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.100358,-0.0133565) , 
3, 138.634, 1, 0, 0.486977,-0.000845515) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663909,0.023514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565962,-0.01926) , 
6, 0.0474945, 1, 0, 0.612027,-0.0110425) , 
6, 0.0463879, 1, 0, 0.494987,-0.00149873)    );
  // itree = 449
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951036,-0.0349426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812558,-0.0531954) , 
2, 0.0180897, 1, 0, 0.894426,-0.0192648) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81119,0.00830295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695946,-0.0275511) , 
2, 0.0294516, 1, 0, 0.772334,-0.00213963) , 
5, 0.00916687, 1, 0, 0.806649,-0.00695286) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.395643,-0.000731873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63763,-0.0140173) , 
6, 0.0440691, 1, 0, 0.428095,-0.00146345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109598,0.033273) , 
3, 138.803, 1, 0, 0.400692,-0.000481219) , 
2, 0.0475972, 1, 0, 0.497095,-0.00201804)    );
  // itree = 450
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945178,-0.0395133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.197313,0.00940128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366288,-0.00753523) , 
7, 6.39218e-05, 1, 0, 0.259926,0.00136126) , 
2, 0.02354, 1, 0, 0.497125,-0.00357263) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0588194,-0.020238) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.745055,0.0044901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0200444) , 
4, 0.0243071, 1, 0, 0.544373,0.000913187) , 
4, 0.0093021, 1, 0, 0.503306,0.000405557) , 
5, 0.00915273, 1, 0, 0.502488,-0.000120956)    );
  // itree = 451
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97103,-0.00572268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993543,0.0532135) , 
5, 0.0188089, 1, 0, 0.978748,0.00123637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875956,-0.00123016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905481,-0.0228305) , 
5, 0.0207946, 1, 0, 0.882689,-0.00672994) , 
0, 0.000339948, 1, 0, 0.929137,-0.00287794) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00759544,0.0105378) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000474469,0.0261719) , 
2, 0.357049, 1, 0, 0.000138518,-0.00012009) , 
0, 0.00887966, 1, 0, 0.00171216,0.000480872) , 
0, 0.00238633, 1, 0, 0.493644,-0.00130074)    );
  // itree = 452
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711609,0.00610767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576607,-0.00660841) , 
3, 37.5426, 1, 0, 0.637982,-0.000494976) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848742,-0.0560576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873206,-0.000960073) , 
7, 0.000414079, 1, 0, 0.866381,-0.00849887) , 
7, 0.000357959, 1, 0, 0.678739,-0.00192323) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928597,0.0363229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75445,-0.00296878) , 
0, 0.000564476, 1, 0, 0.831034,0.00435507) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0013583,0.00868386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.90264e-05,-0.0122976) , 
2, 0.278076, 1, 0, 0.00048534,-0.000309191) , 
0, 0.00238398, 1, 0, 0.269409,0.00120105) , 
2, 0.166585, 1, 0, 0.489007,-0.000475068)    );
  // itree = 453
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962549,-0.0128247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985265,0.0170127) , 
5, 0.0117139, 1, 0, 0.979622,0.00104979) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897336,0.00446608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865608,-0.0137529) , 
3, 12.4218, 1, 0, 0.8708,-0.0138937) , 
0, 0.000339805, 1, 0, 0.922436,-0.00680307) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00255695,0.0180573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00174668,-0.00740997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.11115e-05,-0.00829083) , 
0, 0.0153596, 1, 0, 0.000644248,-0.000484086) , 
4, 0.0162501, 1, 0, 0.00122954,0.000100978) , 
0, 0.00238633, 1, 0, 0.499222,-0.00363127)    );
  // itree = 454
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.479282,-0.00288201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618784,-0.0261304) , 
6, 0.03755, 1, 0, 0.488004,-0.00163495) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94806,-0.00545241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5263,0.00683261) , 
0, 0.00118715, 1, 0, 0.678214,0.00172282) , 
6, 0.0394295, 1, 0, 0.53227,-0.000853522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115759,0.0229128) , 
3, 138.633, 1, 0, 0.499302,-0.000344095)    );
  // itree = 455
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763543,-0.0114312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648601,0.0395812) , 
5, 0.00584682, 1, 0, 0.678077,0.00645366) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0163517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467227,0.0138682) , 
6, 0.0178785, 1, 0, 0.0985719,-0.000535558) , 
4, 0.00930662, 1, 0, 0.292951,0.00180878) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.590164,-0.0319395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566604,-0.00424243) , 
1, 1.31593, 1, 0, 0.568663,-0.00383516) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687527,0.0174344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614632,-0.00286472) , 
3, 25.1786, 1, 0, 0.635492,0.000711029) , 
6, 0.0394315, 1, 0, 0.591312,-0.00229443) , 
6, 0.0208746, 1, 0, 0.499029,-0.00102532)    );
  // itree = 456
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.720843,-0.00270224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963921,0.023872) , 
6, 0.0265945, 1, 0, 0.827902,0.00366705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00527895,-0.0155207) , 
5, 0.0187128, 1, 0, 0.622093,0.00170028) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0238789) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803343,-0.0131628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408955,0.00834245) , 
4, 0.0199949, 1, 0, 0.462925,0.000484244) , 
5, 0.0182376, 1, 0, 0.363271,-0.00148994) , 
4, 0.01856, 1, 0, 0.493332,0.000113178)    );
  // itree = 457
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840477,-0.0219737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943467,0.00138638) , 
5, 0.00645659, 1, 0, 0.935601,-0.000780024) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701525,-0.0381475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944327,-0.00309389) , 
6, 0.0349079, 1, 0, 0.900759,-0.0142179) , 
0, 0.00158868, 1, 0, 0.926223,-0.00439704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00468048,0.0183436) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00117415,-0.00709048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.99284e-05,-0.00864877) , 
0, 0.011015, 1, 0, 0.000394826,-0.000446576) , 
2, 0.119548, 1, 0, 0.00142473,0.000188946) , 
0, 0.00238455, 1, 0, 0.500837,-0.00228759)    );
  // itree = 458
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244651,0.0224233) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.354632,-0.00493297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868156,0.00497701) , 
7, 0.000254539, 1, 0, 0.492069,-0.000303021) , 
4, 0.0046431, 1, 0, 0.478943,8.29517e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744079,-0.00118707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604826,-0.0373163) , 
2, 0.119141, 1, 0, 0.661454,-0.0135308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523107,0.0103713) , 
2, 0.357049, 1, 0, 0.630418,-0.00927486) , 
6, 0.0440685, 1, 0, 0.496563,-0.00100556)    );
  // itree = 459
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679651,-0.0114507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649316,-0.0401374) , 
3, 20.4073, 1, 0, 0.673963,-0.0105859) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.536704,-0.00922227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.31718,0.0300675) , 
2, 0.16715, 1, 0, 0.411683,0.00115759) , 
4, 0.0185381, 1, 0, 0.555729,-0.00529203) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629013,0.00495923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.11115e-05,-0.0194924) , 
4, 0.0185669, 1, 0, 0.381256,0.000713088) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924731,-0.0138826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672783,0.0199495) , 
0, 0.00205351, 1, 0, 0.846147,-0.00520951) , 
7, 0.000345041, 1, 0, 0.482524,-0.00057704) , 
3, 25.2268, 1, 0, 0.504929,-0.00202009)    );
  // itree = 460
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993741,-0.0623698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995789,0.0111965) , 
8, 0.0461917, 1, 0, 0.99533,-0.000251311) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930336,0.0128969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621686,-0.0146008) , 
4, 0.0104656, 1, 0, 0.79623,-0.0142083) , 
0, 5.68376e-05, 1, 0, 0.944399,-0.00382165) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.012053,-0.0179788) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57327,0.0159859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180982,-0.00674239) , 
4, 0.0204768, 1, 0, 0.336238,0.00178423) , 
4, 0.0116567, 1, 0, 0.286117,0.000301221) , 
0, 0.00119363, 1, 0, 0.503904,-0.00106279)    );
  // itree = 461
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78234,-0.0135075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.734052,0.00328484) , 
3, 43.2131, 1, 0, 0.762469,-0.00281765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330004,-0.0228863) , 
3, 113.565, 1, 0, 0.726995,-0.00383964) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00115963,-0.0126448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784294,0.00926703) , 
7, 0.000114696, 1, 0, 0.482228,0.00332448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0534081,-0.0221084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164378,0.0252456) , 
4, 0.0232033, 1, 0, 0.117632,-0.00131746) , 
5, 0.0230963, 1, 0, 0.322138,0.00128625) , 
2, 0.118989, 1, 0, 0.503864,-0.00101458)    );
  // itree = 462
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865953,0.0294896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76223,0.00592374) , 
4, 0.00927792, 1, 0, 0.783735,0.00260591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439904,-0.00786257) , 
3, 100.948, 1, 0, 0.748372,0.00194656) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963605,0.000202465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788643,-0.00946934) , 
0, 0.000339902, 1, 0, 0.8669,-0.00893181) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00464168,0.0463076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000159378,-0.0130293) , 
2, 0.268659, 1, 0, 0.00206302,0.00089972) , 
0, 0.00238582, 1, 0, 0.338162,-0.00292108) , 
2, 0.0951916, 1, 0, 0.499645,-0.00100489)    );
  // itree = 463
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996875,0.0174327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978006,-0.106847) , 
8, 0.19549, 1, 0, 0.994878,-0.000683528) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96906,0.00730205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517815,-0.0089902) , 
2, 0.0464914, 1, 0, 0.77347,-0.0118853) , 
0, 5.68264e-05, 1, 0, 0.938046,-0.00355883) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499614,-0.0164906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165528,0.00672898) , 
2, 0.166606, 1, 0, 0.312809,-0.00286461) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0023001,-0.00592147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739229,0.00601523) , 
7, 0.00012098, 1, 0, 0.278073,0.00118994) , 
3, 12.6214, 1, 0, 0.283272,0.00058305) , 
0, 0.00119344, 1, 0, 0.501376,-0.000796602)    );
  // itree = 464
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929225,-0.00482237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795167,-0.0261768) , 
4, 0.0107994, 1, 0, 0.901288,-0.00992952) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95075,0.00379743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939839,-0.011671) , 
6, 0.0380771, 1, 0, 0.945981,-0.00173691) , 
5, 0.0117314, 1, 0, 0.935111,-0.00372953) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134327) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00340193,0.0366124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145803) , 
2, 0.269012, 1, 0, 0.00142994,0.000418783) , 
2, 0.0957554, 1, 0, 0.00114072,3.54638e-05) , 
0, 0.00238582, 1, 0, 0.496497,-0.00196141)    );
  // itree = 465
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.199189,-0.0195749) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79235,0.0158061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.242837,0.0031806) , 
5, 0.022643, 1, 0, 0.638734,0.00473701) , 
6, 0.0140037, 1, 0, 0.561772,0.00240977) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.588242,-0.00577264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.299692,-0.0234677) , 
2, 0.265137, 1, 0, 0.560928,-0.00313119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828265,0.0101815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000129063,-0.00912906) , 
0, 0.00238398, 1, 0, 0.188457,0.00216724) , 
2, 0.309382, 1, 0, 0.469535,-0.00183112) , 
3, 25.2289, 1, 0, 0.497049,-0.000566056)    );
  // itree = 466
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666455,0.0197773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.217331,0.0181764) , 
6, 0.011581, 1, 0, 0.388342,0.00604889) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561371,-0.115241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0567063,-0.0041029) , 
2, 0.0238124, 1, 0, 0.0996762,-0.000900711) , 
4, 0.00695912, 1, 0, 0.14684,0.000234762) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930536,-0.010593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.252507,-0.0282501) , 
0, 0.00173874, 1, 0, 0.826312,-0.00976963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923253,0.0104604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442737,-0.0103493) , 
5, 0.0237539, 1, 0, 0.812477,0.00213136) , 
5, 0.0187358, 1, 0, 0.820442,-0.00472048) , 
7, 8.86918e-05, 1, 0, 0.49741,-0.00234415)    );
  // itree = 467
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988196,0.011337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754569,0.0224148) , 
2, 0.094994, 1, 0, 0.951995,0.00655458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000558118,-0.012564) , 
0, 0.00196119, 1, 0, 0.569236,0.00300863) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644486,-0.0266444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724724,-0.00337259) , 
4, 0.0145531, 1, 0, 0.689933,-0.0104195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.573446,-0.00437864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338203,0.00784063) , 
2, 0.166555, 1, 0, 0.443546,0.000637637) , 
4, 0.0155796, 1, 0, 0.466528,-0.000393707) , 
4, 0.0139198, 1, 0, 0.498084,0.000651629)    );
  // itree = 468
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.264546,-0.021721) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86746,0.0284376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296115,0.00315416) , 
5, 0.00969961, 1, 0, 0.501223,0.00416639) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937071,-0.0100682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348727,0.00489398) , 
0, 0.00119363, 1, 0, 0.513889,-0.000302383) , 
4, 0.0116006, 1, 0, 0.51113,0.000670951) , 
5, 0.00463724, 1, 0, 0.500396,0.000302408)    );
  // itree = 469
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.797239,0.00259005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762339,-0.0233694) , 
6, 0.0417722, 1, 0, 0.793032,-0.00137791) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.449456,-0.050018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544357,0.00271479) , 
6, 0.025542, 1, 0, 0.496431,-0.0164416) , 
3, 88.3286, 1, 0, 0.749207,-0.00360364) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830973,-0.00577051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838987,0.0066166) , 
3, 12.5493, 1, 0, 0.837764,0.00376897) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000167905,9.17155e-05) , 
5, 0.027339, 1, 0, 9.37288e-05,-0.000237535) , 
0, 0.00358032, 1, 0, 0.334206,0.00136049) , 
2, 0.0951916, 1, 0, 0.497846,-0.000596921)    );
  // itree = 470
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646897,-0.00497538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.208686,0.00302345) , 
5, 0.0104185, 1, 0, 0.345015,-0.000537177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616729,0.0394162) , 
6, 0.0265075, 1, 0, 0.366714,0.000342382) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561806,-0.005176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596744,-0.031895) , 
6, 0.0312447, 1, 0, 0.577829,-0.0126327) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721637,0.00910529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509377,-0.00468797) , 
2, 0.190401, 1, 0, 0.619866,5.41555e-05) , 
6, 0.0338014, 1, 0, 0.607999,-0.00352748) , 
6, 0.0278331, 1, 0, 0.493586,-0.00169246)    );
  // itree = 471
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.254912,-0.0273543) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798196,0.00716983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42626,-0.0054788) , 
2, 0.0713714, 1, 0, 0.550721,-0.00119674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123506,0.0125838) , 
3, 137.983, 1, 0, 0.518563,-0.000739681) , 
5, 0.00463724, 1, 0, 0.506441,-0.00110264)    );
  // itree = 472
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643192,0.00238447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154154,-0.0113802) , 
2, 0.333089, 1, 0, 0.55421,-0.000192118) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502432,-0.0331331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450319,-0.00213947) , 
5, 0.0129127, 1, 0, 0.462421,-0.00471844) , 
3, 81.0138, 1, 0, 0.541903,-0.000799039) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892634,0.024175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00201666,0.0113353) , 
0, 0.00238582, 1, 0, 0.204753,0.00568831) , 
3, 113.428, 1, 0, 0.500582,-3.95949e-06)    );
  // itree = 473
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941774,0.083791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617166,-0.00128098) , 
4, 0.0162584, 1, 0, 0.849787,0.00525571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800186,-0.00800353) , 
2, 0.0180897, 1, 0, 0.839037,0.00378655) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905392,-0.0119449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000875874,-0.00438704) , 
0, 0.00238688, 1, 0, 0.490089,-0.00515669) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.420947,-0.00775689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424596,0.00291357) , 
4, 0.0139673, 1, 0, 0.423655,-0.000271498) , 
3, 25.2368, 1, 0, 0.443523,-0.00173245) , 
2, 0.0237906, 1, 0, 0.498914,-0.000959522)    );
  // itree = 474
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895416,-0.0155058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762354,0.00719571) , 
2, 0.0226557, 1, 0, 0.808531,0.000367032) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864972,-0.00626031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00175021,0.00396487) , 
0, 0.00238398, 1, 0, 0.379473,-0.00285895) , 
2, 0.0951625, 1, 0, 0.561264,-0.0014921) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.294471,-0.0189969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00282296,0.0202277) , 
2, 0.0952163, 1, 0, 0.0790247,-0.000842473) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93467,0.0142072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347449,-0.00239695) , 
0, 0.00199952, 1, 0, 0.746836,0.00620884) , 
7, 9.73026e-05, 1, 0, 0.355186,0.00207347) , 
3, 75.6804, 1, 0, 0.505915,-0.00053444)    );
  // itree = 475
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715875,0.0122232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.28872,-0.00281092) , 
5, 0.021111, 1, 0, 0.562227,0.00252459) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721621,-0.0139375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336165,-0.000379325) , 
2, 0.142744, 1, 0, 0.533785,-0.00285414) , 
3, 17.9818, 1, 0, 0.540722,-0.00154237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168006,0.0180154) , 
3, 125.886, 1, 0, 0.506919,-0.000802779)    );
  // itree = 476
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869531,0.0804681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82975,-0.135345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826307,-0.0122937) , 
2, 0.00911676, 1, 0, 0.827323,-0.00844346) , 
2, 0.00453113, 1, 0, 0.836982,-0.00492226) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89466,0.00190783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737348,0.0200969) , 
3, 112.93, 1, 0, 0.884288,0.00257026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.33953e-05,-0.0102) , 
0, 0.0107475, 1, 0, 4.02755e-05,-0.000325462) , 
0, 0.00358032, 1, 0, 0.446323,0.00113602) , 
2, 0.0237906, 1, 0, 0.501392,0.000282027)    );
  // itree = 477
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819579,-0.010022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692757,0.00771009) , 
3, 37.4804, 1, 0, 0.752806,-0.000231935) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545582,-0.00124157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386992,-0.0264015) , 
3, 62.5999, 1, 0, 0.490378,-0.00574466) , 
2, 0.0917653, 1, 0, 0.648996,-0.00241263) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.257048,0.0160615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340264,-0.00167161) , 
4, 0.0185533, 1, 0, 0.312764,0.00330624) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.178802,-0.0181321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130679,0.00183927) , 
2, 0.40271, 1, 0, 0.143763,-0.00230724) , 
2, 0.363771, 1, 0, 0.235062,0.00072532) , 
2, 0.214181, 1, 0, 0.493022,-0.00123023)    );
  // itree = 478
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.236221,-0.0218166) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661901,-0.002186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72117,0.0147493) , 
5, 0.0144602, 1, 0, 0.680459,0.00131582) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765087,-0.00858445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.246916,0.00352615) , 
5, 0.0212599, 1, 0, 0.39888,-0.000933742) , 
5, 0.0175519, 1, 0, 0.516828,8.55229e-06) , 
5, 0.00456855, 1, 0, 0.504206,-0.00034023)    );
  // itree = 479
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977352,0.00819718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757267,0.018452) , 
0, 0.000457664, 1, 0, 0.861097,0.00727326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00017076,-0.0285294) , 
5, 0.014762, 1, 0, 0.575623,0.00359698) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829037,-0.0232047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943918,-0.00533707) , 
5, 0.0158088, 1, 0, 0.923422,-0.00705884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597172,0.00901938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0280091,-0.015487) , 
4, 0.0238658, 1, 0, 0.311458,0.00137443) , 
0, 0.00119344, 1, 0, 0.467013,-0.000769218) , 
4, 0.0139209, 1, 0, 0.500139,0.000562486)    );
  // itree = 480
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616402,-0.00341912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698632,0.00594735) , 
4, 0.0168743, 1, 0, 0.634725,-0.000523049) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983739,-0.0130816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541592,-0.0219224) , 
5, 0.0206264, 1, 0, 0.798108,-0.0147257) , 
7, 0.000380795, 1, 0, 0.651033,-0.00194062) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0212113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130961) , 
5, 0.0214783, 1, 0, 0,-0.00132333) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947515,0.0239198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.412316,-0.00302854) , 
4, 0.0235176, 1, 0, 0.733051,0.00454427) , 
6, 0.041749, 1, 0, 0.268445,0.000825398) , 
4, 0.0208697, 1, 0, 0.502064,-0.000863607)    );
  // itree = 481
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97657,-0.00192022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904913,-0.00860326) , 
2, 0.0883789, 1, 0, 0.947441,-0.00384586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00450221,0.0052838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131006) , 
0, 0.0121068, 1, 0, 0.00156354,0.000178498) , 
0, 0.00238688, 1, 0, 0.596313,-0.00235194) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777318,0.022999) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.149474,0.0158413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0840091,-0.00629161) , 
2, 0.363826, 1, 0, 0.102933,-0.00034146) , 
0, 0.00119199, 1, 0, 0.180152,0.00140707) , 
2, 0.309382, 1, 0, 0.499727,-0.00147952)    );
  // itree = 482
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231795,0.0433643) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678397,0.00601804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.230167,-0.00202998) , 
2, 0.261717, 1, 0, 0.548884,0.00119273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115632,-0.0103484) , 
3, 138.803, 1, 0, 0.516312,0.000716989) , 
4, 0.004641, 1, 0, 0.50254,0.00111474)    );
  // itree = 483
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800676,-0.0318419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804216,0.0138659) , 
4, 0.00701623, 1, 0, 0.803708,0.000540205) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935419,-0.0127568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00284417,0.00517309) , 
0, 0.00238582, 1, 0, 0.599046,-0.00685235) , 
2, 0.0555267, 1, 0, 0.700462,-0.0031891) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00241179,-0.00851533) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.213954,0.0195638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53405,-4.35102e-05) , 
4, 0.0162277, 1, 0, 0.455899,0.00199113) , 
6, 0.0255232, 1, 0, 0.272983,0.000498979) , 
2, 0.166585, 1, 0, 0.502258,-0.00147909)    );
  // itree = 484
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926274,0.0100482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013121) , 
0, 0.00356259, 1, 0, 0.514803,0.00232597) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576277,-0.00932033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0780783,0.0107857) , 
2, 0.166585, 1, 0, 0.337996,-0.000967755) , 
3, 50.4798, 1, 0, 0.43494,0.000838212) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631686,0.0154166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646637,0.00701696) , 
1, 1.06271, 1, 0, 0.64109,0.00559397) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.321063,-0.0213651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674929,-0.00405137) , 
5, 0.0178637, 1, 0, 0.616509,-0.00390661) , 
1, 1.09864, 1, 0, 0.621317,-0.00204842) , 
6, 0.0347929, 1, 0, 0.501363,-0.000190558)    );
  // itree = 485
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413136,0.0256526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687823,0.023883) , 
4, 0.00468826, 1, 0, 0.546228,0.00874763) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969179,-0.00649604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42705,0.00695198) , 
0, 0.00119316, 1, 0, 0.652916,0.000278995) , 
4, 0.00700775, 1, 0, 0.643782,0.00100406) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.835988,-0.02649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746507,-0.00790801) , 
2, 0.287679, 1, 0, 0.773854,-0.0226648) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00215501,0.0204053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132758) , 
2, 0.350412, 1, 0, 0.000865391,0.000254678) , 
0, 0.00238462, 1, 0, 0.225904,-0.00641781) , 
2, 0.237979, 1, 0, 0.502864,-0.00149875)    );
  // itree = 486
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603346,-0.0201856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810104,-0.0025326) , 
6, 0.0162379, 1, 0, 0.764735,-0.00268501) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538055,0.0110205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398779,-0.0029362) , 
4, 0.01856, 1, 0, 0.460532,0.00235133) , 
2, 0.0792876, 1, 0, 0.593788,0.000145162) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665418,-0.00957889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566444,-0.0090953) , 
2, 0.404123, 1, 0, 0.614647,-0.0182753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000112235,-0.00501369) , 
0, 0.00357537, 1, 0, 0.155477,-0.00467229) , 
2, 0.333089, 1, 0, 0.504042,-0.000841223)    );
  // itree = 487
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.563954,-0.0081828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24089,0.0374312) , 
3, 98.2497, 1, 0, 0.51496,-0.00105206) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957831,-0.00143907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348844,-0.0340038) , 
5, 0.0158423, 1, 0, 0.758472,-0.0110211) , 
7, 0.000159481, 1, 0, 0.595306,-0.00434132) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762577,0.0226016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368874,0.00417407) , 
4, 0.0193321, 1, 0, 0.469157,0.00340915) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69146,-0.00992989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327801,0.00131636) , 
4, 0.0193338, 1, 0, 0.411262,-0.00123124) , 
3, 25.2106, 1, 0, 0.427915,0.000103462) , 
4, 0.0162376, 1, 0, 0.495757,-0.00169797)    );
  // itree = 488
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802036,0.00853442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579893,-0.00898492) , 
2, 0.0555013, 1, 0, 0.693296,-0.00146937) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00910585,-0.00895303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452357,0.0129019) , 
6, 0.0272695, 1, 0, 0.232271,0.00180942) , 
2, 0.166545, 1, 0, 0.488583,-1.34652e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.375024,-0.00932346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968868,0.083096) , 
4, 0.0223922, 1, 0, 0.686493,0.00780748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542798,0.00443956) , 
4, 0.0234832, 1, 0, 0.630839,0.00548097) , 
6, 0.0440685, 1, 0, 0.505016,0.000621246)    );
  // itree = 489
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510421,0.00124218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665673,0.0390593) , 
6, 0.0371376, 1, 0, 0.55608,0.00361048) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.494258,-0.0105126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557613,-0.000585001) , 
4, 0.00932381, 1, 0, 0.547889,-0.000801102) , 
3, 9.59094, 1, 0, 0.549035,-0.000183698) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833958,0.0134764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131195) , 
0, 0.00357872, 1, 0, 0.270062,0.00405818) , 
3, 100.709, 1, 0, 0.505488,0.000478446)    );
  // itree = 490
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934301,-0.00796496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940632,0.00155099) , 
3, 48.1768, 1, 0, 0.936564,-0.0027281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802965,-0.00998176) , 
3, 112.414, 1, 0, 0.928509,-0.00358692) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00332928,0.0257342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131331) , 
5, 0.0192796, 1, 0, 0.001101,0.000474637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00163953,-0.00968742) , 
6, 0.0347819, 1, 0, 0.00124114,-0.000113263) , 
0, 0.00238688, 1, 0, 0.509637,-0.00201777)    );
  // itree = 491
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965682,-0.00644328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951101,0.0238862) , 
0, 0.000510545, 1, 0, 0.959668,0.00406752) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0413568,-0.0128004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172621,0.0186988) , 
3, 75.6193, 1, 0, 0.0327003,-0.000817121) , 
0, 0.0011913, 1, 0, 0.348033,0.00084452) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.806059,-0.0159052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348802,0.00424171) , 
2, 0.26179, 1, 0, 0.701302,-0.00477833) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0357825,-0.0148769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748535,0.00810642) , 
6, 0.0420846, 1, 0, 0.466667,0.00104731) , 
4, 0.0209088, 1, 0, 0.610272,-0.00251818) , 
6, 0.0255134, 1, 0, 0.501024,-0.00111729)    );
  // itree = 492
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485899,-0.00761234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508048,0.015856) , 
3, 6.00087, 1, 0, 0.505412,0.00258297) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.127419,0.0286337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416405,-0.0101498) , 
6, 0.0149429, 1, 0, 0.315499,-0.00155202) , 
3, 63.0154, 1, 0, 0.440242,0.00116402) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.795499,-0.0483502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.543754,-0.00775704) , 
2, 0.166214, 1, 0, 0.6765,-0.0187588) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607232,0.0143702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62149,-0.0110334) , 
6, 0.0381176, 1, 0, 0.617863,-0.00233931) , 
3, 12.5248, 1, 0, 0.626823,-0.00484836) , 
6, 0.034808, 1, 0, 0.506475,-0.000970263)    );
  // itree = 493
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803442,-0.00103297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00301413,-0.018363) , 
5, 0.0224108, 1, 0, 0.646176,-0.00146782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687215,-0.0165692) , 
4, 0.0220812, 1, 0, 0.648761,-0.00196826) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0204502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013095) , 
4, 0.0329163, 1, 0, 0,-0.00158882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758971,0.0298395) , 
6, 0.0463877, 1, 0, 0.125883,0.000307497) , 
4, 0.0231859, 1, 0, 0.494974,-0.00129892)    );
  // itree = 494
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994751,0.00103636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799031,-0.0278231) , 
0, 4.05247e-05, 1, 0, 0.935804,-0.0122454) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748011,-0.0152384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.237484,0.00820121) , 
2, 0.0474688, 1, 0, 0.350664,0.00135664) , 
0, 0.000851428, 1, 0, 0.594941,-0.00432176) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84589,0.0124738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355076,-0.0066051) , 
4, 0.0209432, 1, 0, 0.753833,0.00368908) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00014063,-0.0247281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315753,0.0177239) , 
4, 0.0208868, 1, 0, 0.212803,-0.000955707) , 
5, 0.0217783, 1, 0, 0.463113,0.00119322) , 
5, 0.0138671, 1, 0, 0.502586,-0.000458129)    );
  // itree = 495
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977659,0.0432733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925551,-0.0131439) , 
7, 4.69493e-05, 1, 0, 0.953713,0.00253008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142076,-0.0228877) , 
0, 0.000773593, 1, 0, 0.468401,-0.00643483) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.46487,0.010142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.246391,-0.00694671) , 
3, 75.7158, 1, 0, 0.401034,0.000696649) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708243,-0.0104029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473111,0.00539994) , 
2, 0.309387, 1, 0, 0.650418,-0.0034412) , 
6, 0.0347909, 1, 0, 0.498623,-0.000922584) , 
5, 0.00912318, 1, 0, 0.494383,-0.00169594)    );
  // itree = 496
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549853,-0.0258957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481653,0.00689489) , 
5, 0.00757057, 1, 0, 0.49137,-0.000948023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757207,-0.0234825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443607,0.011344) , 
2, 0.261542, 1, 0, 0.664779,-0.00975923) , 
6, 0.032492, 1, 0, 0.562826,-0.00457883) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704561,-0.00239235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485519,0.0204108) , 
2, 0.101842, 1, 0, 0.627274,0.0019304) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812312,-0.010479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135551,-0.00170963) , 
0, 0.00119199, 1, 0, 0.233158,-0.00250062) , 
2, 0.213893, 1, 0, 0.469915,0.000161219) , 
3, 25.2282, 1, 0, 0.497948,-0.00126896)    );
  // itree = 497
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957739,-0.00606986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930267,-0.0163927) , 
3, 61.2032, 1, 0, 0.95037,-0.0056746) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00505763,0.0179175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136672) , 
2, 0.112122, 1, 0, 0.00215964,0.000195442) , 
0, 0.00238688, 1, 0, 0.625215,-0.00366168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802063,0.0128947) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00126072,-0.0135158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.302879,0.004892) , 
6, 0.0324572, 1, 0, 0.116958,-0.000102483) , 
0, 0.00119199, 1, 0, 0.207373,0.00127266) , 
2, 0.261777, 1, 0, 0.497715,-0.00215601)    );
  // itree = 498
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.265137,-0.022895) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715367,0.00570201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112208,-0.0135738) , 
5, 0.0209299, 1, 0, 0.492441,0.000999042) , 
5, 0.00436968, 1, 0, 0.482507,0.000551819) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630108,0.0239456) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672723,-0.0193127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.543613,-0.00403539) , 
2, 0.238114, 1, 0, 0.620221,-0.00910366) , 
1, 1.06346, 1, 0, 0.622318,-0.00493357) , 
6, 0.0440685, 1, 0, 0.498998,-9.51988e-05)    );
  // itree = 499
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.263186,-0.0163681) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.745528,0.0105204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.342335,-0.00317123) , 
2, 0.142744, 1, 0, 0.55667,0.000788255) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505101,-0.0110715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.101968,0.0199383) , 
5, 0.0220181, 1, 0, 0.289811,-0.00311907) , 
3, 88.2938, 1, 0, 0.500405,-3.55735e-05) , 
5, 0.00462472, 1, 0, 0.489614,-0.00042949)    );
  // itree = 500
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982274,-0.0253671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990117,0.0149221) , 
5, 0.0140293, 1, 0, 0.987309,6.10599e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884051,-0.00634212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804529,-0.0146663) , 
3, 87.8444, 1, 0, 0.873498,-0.00979878) , 
0, 0.000226955, 1, 0, 0.926787,-0.00518224) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0041577,0.00875471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131007) , 
0, 0.0131748, 1, 0, 0.00161228,0.000331906) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0155691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131019) , 
4, 0.025541, 1, 0, 0,-0.000790289) , 
2, 0.28561, 1, 0, 0.000927845,-0.000144481) , 
0, 0.00238462, 1, 0, 0.498348,-0.00285103)    );
  // itree = 501
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951181,-0.00424905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829428,0.01153) , 
0, 0.000673589, 1, 0, 0.893387,0.00320557) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.31901e-05,-0.00839344) , 
4, 0.0185669, 1, 0, 4.99764e-05,-0.000398294) , 
0, 0.00357949, 1, 0, 0.424582,0.00131434) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609918,-0.046123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633441,-0.00652738) , 
1, 1.28298, 1, 0, 0.626247,-0.0085697) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619889,-0.0023811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707196,0.0482548) , 
1, 1.19236, 1, 0, 0.635395,0.00094434) , 
6, 0.0407597, 1, 0, 0.631404,-0.00320621) , 
6, 0.0347911, 1, 0, 0.496099,-0.000248813)    );
  // itree = 502
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813373,0.00911977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.405636,-0.00335817) , 
2, 0.0713959, 1, 0, 0.541443,-0.000140911) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.457109,0.0176702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.37289,0.0223053) , 
3, 112.437, 1, 0, 0.412904,0.00606166) , 
3, 102.136, 1, 0, 0.532994,0.000266789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148897,-0.0124859) , 
3, 126.185, 1, 0, 0.494188,-0.00031151)    );
  // itree = 503
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670182,-0.00932566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683561,0.0218312) , 
5, 0.00917532, 1, 0, 0.675742,-0.00107646) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904271,-0.0305476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301122,-0.00511303) , 
0, 0.000842616, 1, 0, 0.44806,-0.00757416) , 
6, 0.0231483, 1, 0, 0.581326,-0.00377095) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969394,0.0145034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000870691,-0.0164075) , 
0, 0.00204879, 1, 0, 0.515353,0.00216784) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922769,-0.0171126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.274703,0.00180418) , 
0, 0.00119363, 1, 0, 0.424428,-0.00131905) , 
4, 0.0185917, 1, 0, 0.461817,0.000114789) , 
5, 0.0136813, 1, 0, 0.495658,-0.000985522)    );
  // itree = 504
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633619,0.00275989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763219,-0.0165109) , 
6, 0.0300363, 1, 0, 0.674418,-0.001484) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.847755,0.0302483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57152,0.00399981) , 
5, 0.0229148, 1, 0, 0.733776,0.0056917) , 
6, 0.0394234, 1, 0, 0.686004,-8.33635e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903732,0.00424175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747533,-0.0114509) , 
0, 0.00056175, 1, 0, 0.818619,-0.00850058) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00160373,0.0127494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00027216,-0.0101456) , 
4, 0.0185684, 1, 0, 0.000721378,-0.000113414) , 
0, 0.00238462, 1, 0, 0.25666,-0.00273795) , 
2, 0.190324, 1, 0, 0.504588,-0.00120504)    );
  // itree = 505
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580546,-0.0200621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564448,-0.000580663) , 
4, 0.0115696, 1, 0, 0.568287,-0.00407028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512268,-0.0213207) , 
3, 10.8007, 1, 0, 0.559301,-0.00654828) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.254612,0.0287941) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538036,-0.000957323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.090544,-0.0217971) , 
3, 144.635, 1, 0, 0.501405,-0.000973959) , 
4, 0.00467012, 1, 0, 0.488685,-0.000545013) , 
3, 12.603, 1, 0, 0.499883,-0.00149699)    );
  // itree = 506
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821049,-0.0196968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942038,-0.000731573) , 
5, 0.00658015, 1, 0, 0.933949,-0.00192211) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.733558,-0.0280061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958125,0.00504671) , 
7, 0.000449517, 1, 0, 0.879603,-0.0183841) , 
0, 0.00192912, 1, 0, 0.925899,-0.00436074) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00361088,0.0210514) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00138572,-0.00857787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00016256,-0.00132089) , 
0, 0.015354, 1, 0, 0.000585169,-0.000371881) , 
4, 0.0162337, 1, 0, 0.00151257,0.000378909) , 
0, 0.00238727, 1, 0, 0.496642,-0.00215979)    );
  // itree = 507
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732105,0.00613053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4798,0.0358793) , 
3, 100.558, 1, 0, 0.705,0.00477602) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0161999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130939) , 
5, 0.0253711, 1, 0, 0,-0.00131328) , 
4, 0.0139198, 1, 0, 0.371657,0.00189684) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615981,-0.00588048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632336,0.0657589) , 
1, 1.30667, 1, 0, 0.617915,-0.000517039) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597761,-0.028292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588191,-0.00661712) , 
1, 1.38937, 1, 0, 0.58943,-0.00638942) , 
1, 1.35036, 1, 0, 0.605662,-0.00304297) , 
6, 0.027833, 1, 0, 0.495349,-0.000714263)    );
  // itree = 508
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571232,0.00683878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524552,-0.0396254) , 
3, 11.6114, 1, 0, 0.561852,-0.00154386) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683931,0.0234609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202878,-0.00940752) , 
2, 0.261697, 1, 0, 0.556649,0.00322741) , 
3, 14.3456, 1, 0, 0.558731,0.00131851) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715523,0.00216557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.487595,-0.017093) , 
2, 0.0951625, 1, 0, 0.648228,-0.00297983) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.277549,-0.00531578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24548,0.0101314) , 
3, 59.1859, 1, 0, 0.25544,0.00138735) , 
2, 0.166585, 1, 0, 0.45028,-0.000778968) , 
3, 37.6561, 1, 0, 0.497512,0.000134512)    );
  // itree = 509
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982507,-0.00871814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56904,-0.0273432) , 
0, 0.00116991, 1, 0, 0.818831,-0.00773448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.788398,0.0172286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490634,-0.0073265) , 
3, 99.8158, 1, 0, 0.731917,0.00180041) , 
3, 36.773, 1, 0, 0.77312,-0.00271972) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89223,0.0117352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00192905,-0.00960282) , 
0, 0.00203939, 1, 0, 0.432308,0.00433046) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.890447,-0.0122287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211311,0.00455584) , 
0, 0.00119344, 1, 0, 0.333063,-0.000481149) , 
4, 0.0185751, 1, 0, 0.372846,0.00144758) , 
2, 0.0713959, 1, 0, 0.499548,0.000128462)    );
  // itree = 510
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646652,-0.0174749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198124,-0.00526573) , 
6, 0.0115812, 1, 0, 0.359932,-0.00543183) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589343,-0.00556872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530601,0.000191354) , 
3, 19.8184, 1, 0, 0.545341,-0.00061024) , 
4, 0.00699384, 1, 0, 0.528427,-0.00105009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112457,0.0140179) , 
3, 138.802, 1, 0, 0.496424,-0.000620131)    );
  // itree = 511
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95513,0.00855264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954434,0.0338372) , 
0, 0.000605955, 1, 0, 0.954857,0.0064696) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00406802,-0.0109115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00511655,0.0031439) , 
3, 62.7579, 1, 0, 0.00451632,-0.000539448) , 
0, 0.00117974, 1, 0, 0.320498,0.00179101) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828989,-0.0193275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346975,1.4266e-05) , 
2, 0.166506, 1, 0, 0.662041,-0.00577773) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912686,-0.0107738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385271,0.00550683) , 
0, 0.00119231, 1, 0, 0.539729,1.7389e-05) , 
4, 0.0185531, 1, 0, 0.598479,-0.00276619) , 
6, 0.0231939, 1, 0, 0.497077,-0.00110382)    );
  // itree = 512
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861312,0.0326147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454417,-0.007171) , 
2, 0.0475813, 1, 0, 0.563005,-0.00146383) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932865,0.0166519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013113) , 
0, 0.00356038, 1, 0, 0.580992,0.00391058) , 
3, 14.4026, 1, 0, 0.57368,0.00172567) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954973,-0.0173357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811891,0.00799021) , 
2, 0.237979, 1, 0, 0.93074,-0.00443426) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00161208,-0.0128879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705542,0.00744534) , 
7, 9.7303e-05, 1, 0, 0.251307,0.00102043) , 
0, 0.00119179, 1, 0, 0.450725,-0.000580565) , 
3, 37.8094, 1, 0, 0.504217,0.000422779)    );
  // itree = 513
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981431,-0.00264629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837372,0.016474) , 
2, 0.284982, 1, 0, 0.964992,0.000972774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8131,-0.0193229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89956,-0.00537902) , 
4, 0.0102697, 1, 0, 0.886589,-0.00875885) , 
0, 0.000566581, 1, 0, 0.925637,-0.00391214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00392079,0.00913776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00082068,-0.0115176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130993) , 
0, 0.0110321, 1, 0, 0.000247614,-0.000794547) , 
2, 0.119906, 1, 0, 0.00115568,-0.000328799) , 
0, 0.00238688, 1, 0, 0.501198,-0.00226699)    );
  // itree = 514
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.258461,-0.00159001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467447,0.0740603) , 
7, 2.64299e-05, 1, 0, 0.334985,0.0047889) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715152,0.00298976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.31042,-0.00532422) , 
2, 0.190337, 1, 0, 0.555045,-0.000407338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118807,-0.0139515) , 
3, 138.802, 1, 0, 0.521996,-0.000831545) , 
4, 0.00695911, 1, 0, 0.504699,-0.000311705)    );
  // itree = 515
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929837,-0.00671384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766079,-0.0239978) , 
0, 0.00178294, 1, 0, 0.918463,-0.00683026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000694494,-0.00555923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000950083,0.0180459) , 
2, 0.261829, 1, 0, 0.000816528,-3.50379e-06) , 
0, 0.00238582, 1, 0, 0.459842,-0.00341839) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761788,0.046135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647695,0.00150577) , 
3, 12.4945, 1, 0, 0.664344,0.00195507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456857,0.0306747) , 
2, 0.40382, 1, 0, 0.636293,0.00334745) , 
6, 0.0394337, 1, 0, 0.501122,-0.00183556)    );
  // itree = 516
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.255852,-0.0150744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595298,0.00162518) , 
5, 0.00437899, 1, 0, 0.47238,-0.00225135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.36234,-0.032581) , 
7, 7.13625e-05, 1, 0, 0.44762,-0.00525704) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662436,0.00527875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128454,-0.0172273) , 
4, 0.0185586, 1, 0, 0.448712,0.0002362) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66186,-0.00398468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66939,0.0179829) , 
1, 1.08671, 1, 0, 0.667539,0.00347928) , 
6, 0.0394377, 1, 0, 0.505867,0.00108325) , 
5, 0.00915451, 1, 0, 0.497572,0.000180288)    );
  // itree = 517
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547756,-0.0154131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53245,-0.00382246) , 
5, 0.00864024, 1, 0, 0.534674,-0.00272711) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.50343,0.0111062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118128,-0.0106388) , 
3, 127.941, 1, 0, 0.447465,0.0016241) , 
3, 25.2338, 1, 0, 0.474532,0.000273604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705302,-0.0230171) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.604273,0.00998078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565261,-0.015032) , 
3, 49.84, 1, 0, 0.585291,-0.00113539) , 
2, 0.0953892, 1, 0, 0.619182,-0.00516893) , 
6, 0.0417491, 1, 0, 0.499339,-0.000659766)    );
  // itree = 518
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.271932,0.00524592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364099,-0.00645685) , 
6, 0.0198661, 1, 0, 0.319727,-0.00042966) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93376,-0.010092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835373,0.0232254) , 
0, 0.0014125, 1, 0, 0.881865,0.00385015) , 
7, 0.000208973, 1, 0, 0.471631,0.000726852) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.742477,-0.00613594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39961,-0.0285045) , 
5, 0.0219531, 1, 0, 0.585081,-0.00984282) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.551526,-0.00446493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679094,0.00925238) , 
4, 0.0232379, 1, 0, 0.618559,4.29629e-05) , 
6, 0.044743, 1, 0, 0.603927,-0.00427767) , 
6, 0.0417501, 1, 0, 0.494445,-0.000136179)    );
  // itree = 519
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864185,0.00339545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.13436,-0.0139809) , 
2, 0.118743, 1, 0, 0.625174,-0.00255287) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9391,-0.010975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361614,0.0111178) , 
0, 0.00119363, 1, 0, 0.523426,0.000909639) , 
4, 0.0139198, 1, 0, 0.556029,-0.000199843) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846435,-0.0106901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00165923,0.00131866) , 
0, 0.00238258, 1, 0, 0.255833,-0.00445187) , 
3, 100.749, 1, 0, 0.506582,-0.000900219)    );
  // itree = 520
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81824,-0.000435916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718561,-0.0219883) , 
2, 0.0634562, 1, 0, 0.794186,-0.0021965) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576515,-0.0521836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44877,0.00716117) , 
2, 0.0407737, 1, 0, 0.514598,-0.0135951) , 
3, 88.3289, 1, 0, 0.75376,-0.00384466) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597012,0.0166902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448719,-0.00377223) , 
3, 49.8929, 1, 0, 0.530488,0.00288774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222356,3.72958e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561914,-0.0121397) , 
6, 0.0463879, 1, 0, 0.250402,-0.000715454) , 
2, 0.191538, 1, 0, 0.336135,0.000387468) , 
2, 0.0951945, 1, 0, 0.498392,-0.00125681)    );
  // itree = 521
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928397,0.0892236) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.856606,-0.0227496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813727,0.0397662) , 
3, 21.7518, 1, 0, 0.826348,0.00157822) , 
5, 0.00868277, 1, 0, 0.858247,0.00389719) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915957,-0.00851555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891811,0.000608152) , 
3, 62.1107, 1, 0, 0.908845,-0.00422016) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000465828,-0.00859562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00249654,0.0123201) , 
3, 100.973, 1, 0, 0.000971655,-9.15978e-05) , 
0, 0.00238688, 1, 0, 0.438746,-0.00208238) , 
2, 0.0237986, 1, 0, 0.496971,-0.00125244)    );
  // itree = 522
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879349,-0.0304159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528516,-0.00103764) , 
2, 0.0203905, 1, 0, 0.579107,-0.00106913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0883932,-0.0201046) , 
2, 0.428258, 1, 0, 0.538241,-0.00187365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15157,0.020101) , 
3, 126.185, 1, 0, 0.500179,-0.00110404)    );
  // itree = 523
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828927,-0.0208254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00106469,0.00500813) , 
0, 0.00234462, 1, 0, 0.165519,-0.0030726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.725296,0.00628457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00276528,-0.0199758) , 
5, 0.0184935, 1, 0, 0.472256,0.000939365) , 
6, 0.0139024, 1, 0, 0.401387,1.24302e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958221,-0.0139008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712279,-0.0183871) , 
0, 0.000637318, 1, 0, 0.899264,-0.0140997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543992,-0.0151581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843982,0.0291162) , 
4, 0.0207019, 1, 0, 0.747874,0.00380218) , 
0, 0.00191199, 1, 0, 0.83339,-0.00631018) , 
7, 0.000340735, 1, 0, 0.496841,-0.0013846)    );
  // itree = 524
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267551,0.017542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659676,-0.0100917) , 
4, 0.00515954, 1, 0, 0.600125,-0.00274643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717517,-0.0272107) , 
4, 0.0154647, 1, 0, 0.61051,-0.00409709) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.30644,-0.0138201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927113,0.0126419) , 
7, 0.000282703, 1, 0, 0.753377,0.00375823) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.268804,-0.0126742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258132,0.00224661) , 
5, 0.022495, 1, 0, 0.262417,-0.00168321) , 
4, 0.0208795, 1, 0, 0.426864,0.000139392) , 
4, 0.0162398, 1, 0, 0.499753,-0.00154207)    );
  // itree = 525
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872788,0.00334838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381977,0.012494) , 
2, 0.261695, 1, 0, 0.799538,0.0029757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0200391) , 
5, 0.0228751, 1, 0, 0.649841,0.00176097) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758545,-0.023789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184363,0.00549973) , 
0, 0.00186102, 1, 0, 0.308056,-0.00630841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978407,0.053891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.139068,-0.00338209) , 
0, 0.00119363, 1, 0, 0.237128,0.000681165) , 
5, 0.0227863, 1, 0, 0.267227,-0.00228492) , 
4, 0.0208697, 1, 0, 0.499321,0.000169314)    );
  // itree = 526
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979293,0.0273584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954335,-0.0091145) , 
4, 0.011889, 1, 0, 0.964382,0.000844986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782524,0.018226) , 
2, 0.306048, 1, 0, 0.949009,0.00202233) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8699,-0.0164083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952439,0.00115861) , 
6, 0.0349079, 1, 0, 0.917578,-0.00708194) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00283414,0.0122582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00130439,-0.0133371) , 
4, 0.0162501, 1, 0, 0.0017726,-6.62774e-05) , 
0, 0.002327, 1, 0, 0.284477,-0.00223198) , 
0, 0.00119179, 1, 0, 0.505684,-0.00081582)    );
  // itree = 527
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537181,-0.00308529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.47474,0.0136403) , 
3, 59.4628, 1, 0, 0.519567,0.000185512) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.274974,-0.0175345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0970408,0.00690529) , 
2, 0.166585, 1, 0, 0.169942,-0.00393589) , 
3, 113.521, 1, 0, 0.473374,-0.000359008) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705922,-0.0237282) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676648,0.011468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477954,-0.0147569) , 
2, 0.307452, 1, 0, 0.587094,-0.0023362) , 
2, 0.0959142, 1, 0, 0.62019,-0.00624972) , 
6, 0.0417551, 1, 0, 0.498924,-0.00138416)    );
  // itree = 528
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526864,0.0084891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540282,-0.00787444) , 
3, 10.8114, 1, 0, 0.53446,-0.000323522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842393,0.0387044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473173,0.00646534) , 
5, 0.0232122, 1, 0, 0.689026,0.0076144) , 
6, 0.0394247, 1, 0, 0.569989,0.00150107) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99369,-0.0162297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870922,-0.00794957) , 
0, 0.000113301, 1, 0, 0.927413,-0.00544349) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00423247,0.0222577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000210734,-0.0123641) , 
4, 0.0162683, 1, 0, 0.00139008,0.000222858) , 
0, 0.00238633, 1, 0, 0.469348,-0.00264058) , 
3, 25.2268, 1, 0, 0.499663,-0.00139304)    );
  // itree = 529
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829074,-0.0220389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932781,-0.00840892) , 
7, 4.90623e-05, 1, 0, 0.925632,-0.00606462) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000369977,-0.00931998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00092899,0.00907746) , 
4, 0.0232361, 1, 0, 0.00065789,-0.00030774) , 
0, 0.00238462, 1, 0, 0.558027,-0.00377671) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985148,-0.00523611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784895,0.0151753) , 
0, 0.000170135, 1, 0, 0.872385,0.00787693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000110344,-0.0101224) , 
0, 0.00357949, 1, 0, 0.352347,0.00296299) , 
3, 75.6804, 1, 0, 0.503437,-0.0019879)    );
  // itree = 530
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826466,0.00197548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.111181,-0.0217064) , 
4, 0.0162335, 1, 0, 0.640701,-0.00179588) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767877,0.0152774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110226,-0.00729161) , 
5, 0.0200249, 1, 0, 0.3181,0.00171502) , 
5, 0.0166555, 1, 0, 0.471521,4.53303e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678723,0.00861628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646876,-0.0140325) , 
1, 1.11134, 1, 0, 0.662353,-0.00198577) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913021,-0.00741642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.434843,-0.0139107) , 
0, 0.00118579, 1, 0, 0.585263,-0.00963635) , 
3, 49.8436, 1, 0, 0.626237,-0.00557005) , 
6, 0.0417491, 1, 0, 0.497779,-0.000907724)    );
  // itree = 531
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95063,0.00473149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849916,-0.0190685) , 
4, 0.0203759, 1, 0, 0.935322,-0.000293356) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708903,-0.0312671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9722,0.019297) , 
4, 0.020965, 1, 0, 0.886224,-0.0217535) , 
0, 0.00192685, 1, 0, 0.928042,-0.00347505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00274068,0.0298339) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000927084,-0.007839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00061662,0.00104) , 
4, 0.0231947, 1, 0, 0.000759732,-0.000503545) , 
5, 0.0137163, 1, 0, 0.00118968,-7.75781e-06) , 
0, 0.00238727, 1, 0, 0.498118,-0.00186674)    );
  // itree = 532
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.241401,-0.0181017) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695073,-0.00373447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636337,0.00688167) , 
4, 0.0116491, 1, 0, 0.649907,0.00127374) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.356834,-0.0133159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210661,-0.000261408) , 
2, 0.275425, 1, 0, 0.233667,-0.00127185) , 
2, 0.237983, 1, 0, 0.51062,0.000421906) , 
5, 0.00464456, 1, 0, 0.497724,1.46411e-05)    );
  // itree = 533
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982507,-0.00941985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995516,0.0583127) , 
5, 0.0163445, 1, 0, 0.988931,0.00217934) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643145,-0.0102732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.88585,-0.0070382) , 
0, 0.00074188, 1, 0, 0.863037,-0.00939863) , 
0, 0.000226688, 1, 0, 0.922735,-0.00390846) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00135372,0.012516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000437493,-0.004848) , 
6, 0.00995507, 1, 0, 0.000713407,2.69294e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00288572,-0.00749507) , 
6, 0.0347618, 1, 0, 0.00128037,-0.000293981) , 
0, 0.00238582, 1, 0, 0.502107,-0.00225852)    );
  // itree = 534
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.279495,-0.0069543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509894,-0.044871) , 
4, 0.00562856, 1, 0, 0.342382,-0.00642332) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.239444,-0.00498451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598586,0.0112488) , 
6, 0.0216462, 1, 0, 0.411114,0.0015651) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675949,-0.0149507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.661281,0.00127955) , 
3, 12.5901, 1, 0, 0.663655,-0.0013833) , 
6, 0.0324738, 1, 0, 0.520018,0.000293659) , 
4, 0.00695963, 1, 0, 0.503545,-0.000329243)    );
  // itree = 535
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982092,0.0118016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0137701,-0.0100065) , 
0, 0.00118069, 1, 0, 0.559999,0.000805145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776096,-0.0193408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681701,0.0013433) , 
2, 0.103112, 1, 0, 0.749343,-0.00464812) , 
6, 0.0231906, 1, 0, 0.67885,-0.00261785) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981375,-0.0134308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688427,0.00568467) , 
0, 0.000170136, 1, 0, 0.802587,0.00311273) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130978) , 
0, 0.0127825, 1, 0, 0,-0.000269852) , 
0, 0.00357693, 1, 0, 0.271446,0.000874184) , 
2, 0.16659, 1, 0, 0.49152,-0.00101217)    );
  // itree = 536
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845336,0.0024774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666362,-0.0232656) , 
6, 0.0393507, 1, 0, 0.831271,-5.37173e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767267,-0.00969625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00114748,0.01135) , 
0, 0.00317033, 1, 0, 0.377495,-0.00643314) , 
2, 0.142709, 1, 0, 0.654739,-0.00253551) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0190158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130942) , 
4, 0.0301643, 1, 0, 0,-0.00137211) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944827,0.0202669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423484,-4.16988e-05) , 
4, 0.0235265, 1, 0, 0.741009,0.00499577) , 
6, 0.0417499, 1, 0, 0.263122,0.000889037) , 
4, 0.0208773, 1, 0, 0.500815,-0.0011895)    );
  // itree = 537
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634823,-0.010517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521258,-0.0189083) , 
3, 71.9595, 1, 0, 0.617364,-0.00602723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282671,0.00923482) , 
3, 100.748, 1, 0, 0.571747,-0.00436367) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873417,-0.018428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947407,0.000358832) , 
5, 0.0160216, 1, 0, 0.933565,-0.00275923) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617871,0.00941421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.10661,-0.00581934) , 
4, 0.0222147, 1, 0, 0.313408,0.00144728) , 
0, 0.00119228, 1, 0, 0.469436,0.000388942) , 
4, 0.0139317, 1, 0, 0.500952,-0.00107505)    );
  // itree = 538
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997388,0.0297302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977786,-0.0540329) , 
8, 0.19549, 1, 0, 0.995326,0.000641791) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926424,0.0081174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57332,-0.0128186) , 
4, 0.0109502, 1, 0, 0.789423,-0.0108261) , 
0, 5.68208e-05, 1, 0, 0.941616,-0.00234963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0117311,-0.0124362) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949774,0.00928025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00154958,-0.0103888) , 
0, 0.00233019, 1, 0, 0.331537,0.00170836) , 
4, 0.0116124, 1, 0, 0.281542,0.000701389) , 
0, 0.00119344, 1, 0, 0.50049,-0.000310641)    );
  // itree = 539
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495198,0.0031073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704344,-0.0112208) , 
5, 0.00859024, 1, 0, 0.620073,-0.00316304) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0270288,-0.021436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579884,0.00439139) , 
4, 0.0139213, 1, 0, 0.499983,0.000265626) , 
5, 0.0138651, 1, 0, 0.536778,-0.000784895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.159669,0.0285378) , 
3, 126.03, 1, 0, 0.500599,-3.15786e-05)    );
  // itree = 540
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966945,-0.00415618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975775,0.0534331) , 
0, 0.000680993, 1, 0, 0.969984,0.00642036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0424356,-0.0103356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0216938,0.0181448) , 
3, 75.4761, 1, 0, 0.0355438,-0.000773221) , 
0, 0.00119179, 1, 0, 0.344837,0.00160781) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951722,-0.0144854) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0036905,0.00938418) , 
0, 0.00238727, 1, 0, 0.705766,-0.00635017) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.856556,0.0231427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203365,-0.00555563) , 
0, 0.00119231, 1, 0, 0.336633,0.00161111) , 
2, 0.285592, 1, 0, 0.609474,-0.00427341) , 
6, 0.0255134, 1, 0, 0.499658,-0.00183288)    );
  // itree = 541
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.254574,-0.0136777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.471446,0.0202335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0473038,-0.0148724) , 
4, 0.00929419, 1, 0, 0.158138,0.000450728) , 
5, 0.00454046, 1, 0, 0.166424,-0.000105294) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952434,0.00387823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883419,-0.0159073) , 
4, 0.0199136, 1, 0, 0.937387,-0.000839412) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.255648,-0.024639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65413,0.00572858) , 
5, 0.0207777, 1, 0, 0.516089,-0.00719649) , 
0, 0.00193454, 1, 0, 0.825725,-0.00252431) , 
7, 0.000103841, 1, 0, 0.498528,-0.00132381)    );
  // itree = 542
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934645,-0.000568325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914134,-0.0176908) , 
5, 0.0205826, 1, 0, 0.931883,-0.00252397) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816119,-0.025008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972728,0.0466432) , 
4, 0.0219244, 1, 0, 0.889401,-0.0172842) , 
0, 0.00192637, 1, 0, 0.925486,-0.00474648) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00302297,0.0129485) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00125765,-0.0106485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130949) , 
0, 0.0153483, 1, 0, 0.000416524,-0.000608949) , 
4, 0.0162411, 1, 0, 0.00120102,-1.1428e-05) , 
0, 0.00238633, 1, 0, 0.491878,-0.00252513)    );
  // itree = 543
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997296,0.0284865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783756,-0.0253952) , 
0, 4.01237e-05, 1, 0, 0.934911,-0.0111404) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74209,-0.0225014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220476,0.00562403) , 
2, 0.0475945, 1, 0, 0.334275,-6.55886e-05) , 
0, 0.000842615, 1, 0, 0.57319,-0.0044708) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0246186,-0.0167044) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.529835,0.00526706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752278,-0.0091998) , 
6, 0.0463879, 1, 0, 0.550674,0.000754302) , 
4, 0.0139158, 1, 0, 0.46767,-0.000160934) , 
5, 0.0138671, 1, 0, 0.499471,-0.00145984)    );
  // itree = 544
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524209,0.0052931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.26556,-0.00542445) , 
3, 88.2214, 1, 0, 0.470704,0.000682174) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655349,-0.013799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573712,0.00670314) , 
3, 61.1647, 1, 0, 0.625384,-0.00353799) , 
6, 0.0419677, 1, 0, 0.487204,0.000231999) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663131,-0.00379194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686683,-0.0269593) , 
1, 1.07352, 1, 0, 0.673156,-0.00963598) , 
6, 0.0463887, 1, 0, 0.49853,-0.000369051)    );
  // itree = 545
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764501,-0.00951543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545332,-0.0212375) , 
2, 0.0849261, 1, 0, 0.724931,-0.00485656) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287735,0.003312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0134211,-0.0123022) , 
2, 0.372748, 1, 0, 0.215446,9.00124e-05) , 
2, 0.11896, 1, 0, 0.460176,-0.00228606) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957985,0.0127002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573685,0.0327535) , 
0, 0.00118171, 1, 0, 0.720774,0.007806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576662,-0.0054955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595254,0.0280788) , 
1, 1.19154, 1, 0, 0.581978,0.00110398) , 
2, 0.119179, 1, 0, 0.629511,0.00339921) , 
6, 0.0394297, 1, 0, 0.498972,-0.000983535)    );
  // itree = 546
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0875571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.830217,-0.019711) , 
0, 4.04045e-05, 1, 0, 0.948785,-0.00726517) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0768937,-0.00827128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557917,0.00550551) , 
5, 0.00912535, 1, 0, 0.338195,-0.000225281) , 
0, 0.000851428, 1, 0, 0.591464,-0.00314539) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85953,0.0189962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218533,-0.0158978) , 
4, 0.020954, 1, 0, 0.746965,0.00437093) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0274945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335894,0.005207) , 
4, 0.0208868, 1, 0, 0.227257,-0.0015896) , 
5, 0.0214819, 1, 0, 0.464382,0.00112999) , 
5, 0.0136796, 1, 0, 0.499778,-6.08407e-05)    );
  // itree = 547
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91282,0.0176443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.505406,0.030246) , 
2, 0.0713714, 1, 0, 0.710317,0.00720546) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591816,-0.0256026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343634,0.0134379) , 
2, 0.0953933, 1, 0, 0.412276,-0.000468412) , 
4, 0.0186174, 1, 0, 0.572004,0.00364423) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955338,0.00325527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187256,-0.0208858) , 
0, 0.000912629, 1, 0, 0.48657,-0.00815736) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671294,0.013592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451199,-0.00204361) , 
4, 0.0133791, 1, 0, 0.468273,-6.98311e-05) , 
4, 0.0116057, 1, 0, 0.472097,-0.00176002) , 
3, 25.2389, 1, 0, 0.502099,-0.000137155)    );
  // itree = 548
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708065,0.00707447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403524,-0.00342551) , 
5, 0.0185174, 1, 0, 0.55988,0.000862247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566969,0.0628255) , 
3, 21.5792, 1, 0, 0.560852,0.00210168) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961781,0.0109128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00186952,-0.00476354) , 
0, 0.00119316, 1, 0, 0.139436,0.00022405) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632873,-0.0325123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833238,-0.00411742) , 
4, 0.0123531, 1, 0, 0.801526,-0.00592885) , 
7, 9.73029e-05, 1, 0, 0.468312,-0.00283224) , 
3, 25.1871, 1, 0, 0.496313,-0.00133934)    );
  // itree = 549
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.336325,-0.00945141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639152,0.0308672) , 
5, 0.0060913, 1, 0, 0.492606,0.00321205) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.460641,-0.00801818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.302156,0.00313072) , 
3, 50.4738, 1, 0, 0.388594,-0.00100376) , 
5, 0.00912527, 1, 0, 0.405515,-0.000317934) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.890729,-0.0190891) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919719,-0.00930607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679785,0.0186693) , 
0, 0.00205768, 1, 0, 0.830134,-0.00163288) , 
6, 0.0395648, 1, 0, 0.84062,-0.00478869) , 
7, 0.00034942, 1, 0, 0.498257,-0.00127087)    );
  // itree = 550
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.426734,-0.00770035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.302724,0.00598394) , 
3, 37.809, 1, 0, 0.3556,-0.000108857) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942397,-0.00786986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794641,0.0200038) , 
0, 0.00150115, 1, 0, 0.861333,0.00374291) , 
7, 0.000254539, 1, 0, 0.484274,0.000871151) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67796,-0.00724662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581994,0.0156483) , 
3, 48.9279, 1, 0, 0.632929,0.000366834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59587,-0.0291524) , 
1, 1.11011, 1, 0, 0.62217,-0.00550476) , 
6, 0.0440703, 1, 0, 0.500187,0.000135369)    );
  // itree = 551
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729889,0.0414024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167173,0.0142806) , 
6, 0.0116037, 1, 0, 0.347784,0.00717142) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758047,0.00343975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486761,-0.0128201) , 
2, 0.0951742, 1, 0, 0.627376,-0.00279682) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826788,0.0211713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125171,-0.00104742) , 
0, 0.0011913, 1, 0, 0.220867,0.00190704) , 
2, 0.285575, 1, 0, 0.522198,-0.00157977) , 
4, 0.0069561, 1, 0, 0.506996,-0.00081705)    );
  // itree = 552
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.318109,-0.00558398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59403,0.00401311) , 
6, 0.0233728, 1, 0, 0.454242,3.32016e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726762,0.0157004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611531,-0.0262372) , 
1, 1.2285, 1, 0, 0.64511,-0.00870282) , 
6, 0.0377676, 1, 0, 0.477516,-0.00103205) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761877,0.00938478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484515,-0.0132895) , 
2, 0.261641, 1, 0, 0.662431,-0.000329568) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7251,0.0229835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44845,0.00829564) , 
3, 91.7316, 1, 0, 0.624594,0.00486124) , 
3, 37.7684, 1, 0, 0.641296,0.0025699) , 
6, 0.0417491, 1, 0, 0.505459,-0.000417513)    );
  // itree = 553
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.239501,0.0292213) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.465514,0.00106031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605847,-0.0258668) , 
6, 0.03755, 1, 0, 0.474242,-0.000831702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.786796,0.0104157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355692,-0.00792502) , 
4, 0.0235682, 1, 0, 0.665623,0.00215483) , 
6, 0.0394297, 1, 0, 0.520506,-0.000109735) , 
4, 0.00465645, 1, 0, 0.505858,0.000302971)    );
  // itree = 554
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995976,0.0452098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969624,-0.0156972) , 
5, 0.00878286, 1, 0, 0.976715,-0.0012362) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558423,-0.0238978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34961,0.0026529) , 
3, 62.4665, 1, 0, 0.488487,-0.00904988) , 
0, 0.00119363, 1, 0, 0.754514,-0.00479234) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.348821,-0.0208423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355608,-6.33256e-05) , 
3, 12.6157, 1, 0, 0.354503,-0.00289705) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.374817,0.0222549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308481,-0.00117718) , 
3, 25.0906, 1, 0, 0.325329,0.00096367) , 
5, 0.018229, 1, 0, 0.33578,-0.000419299) , 
2, 0.0951945, 1, 0, 0.497297,-0.0021061)    );
  // itree = 555
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963919,-0.0137859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827163,-0.0208375) , 
0, 0.000551505, 1, 0, 0.942349,-0.00777788) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.39662,-7.1646e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68874,-0.0102739) , 
7, 0.000368922, 1, 0, 0.42765,-0.00121934) , 
0, 0.00105335, 1, 0, 0.642806,-0.00396096) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.118752,-0.00133519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763435,-0.0151457) , 
6, 0.0441503, 1, 0, 0.198941,-0.000859529) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938408,0.0391107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603633,-0.00290272) , 
4, 0.0237855, 1, 0, 0.770184,0.00610706) , 
6, 0.0463879, 1, 0, 0.276953,9.18623e-05) , 
4, 0.0208849, 1, 0, 0.502092,-0.00240217)    );
  // itree = 556
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685129,-0.00884684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788989,0.0103202) , 
5, 0.0156285, 1, 0, 0.710358,-0.00215196) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.42901,-0.00240485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627061,-0.018513) , 
5, 0.0139095, 1, 0, 0.499863,-0.00725022) , 
3, 62.7408, 1, 0, 0.642958,-0.00378443) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260949,-0.0110882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96374,0.017944) , 
7, 0.000342871, 1, 0, 0.760468,0.0032869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000136058,-0.0199313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.322281,0.0101212) , 
4, 0.0208851, 1, 0, 0.213855,-0.00120735) , 
5, 0.0219226, 1, 0, 0.370323,7.91224e-05) , 
5, 0.0182309, 1, 0, 0.500153,-0.00176072)    );
  // itree = 557
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583043,-0.0375851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.469891,-0.0044629) , 
3, 12.4198, 1, 0, 0.486768,-0.00382848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653446,-0.0365328) , 
4, 0.0105189, 1, 0, 0.515726,-0.00688826) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902897,-0.0150441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95817,0.0169761) , 
5, 0.0193986, 1, 0, 0.924757,-0.0040714) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287129,0.0093748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526839,-0.0094022) , 
6, 0.0417423, 1, 0, 0.331077,0.000406742) , 
0, 0.00119363, 1, 0, 0.494221,-0.000823856) , 
4, 0.0116233, 1, 0, 0.498958,-0.00215978)    );
  // itree = 558
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.808469,-0.0137629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668165,0.00758005) , 
2, 0.0415381, 1, 0, 0.758195,-0.00129054) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657242,0.0262983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573203,0.0173171) , 
4, 0.0139945, 1, 0, 0.596682,0.00755622) , 
2, 0.079305, 1, 0, 0.721341,0.000728123) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609138,-0.0154664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334078,0.00283343) , 
4, 0.0209738, 1, 0, 0.498342,-0.00755238) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.182779,0.00424302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292282,-0.0070001) , 
4, 0.0186138, 1, 0, 0.254561,-0.00071993) , 
2, 0.191543, 1, 0, 0.317741,-0.00249067) , 
2, 0.118993, 1, 0, 0.496834,-0.00106236)    );
  // itree = 559
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930553,0.0461643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15296,-0.0113414) , 
2, 0.0237485, 1, 0, 0.417062,-0.00175152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676778,-0.0232683) , 
5, 0.00793143, 1, 0, 0.484039,-0.00480919) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.835712,-0.0149519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731272,0.0189845) , 
2, 0.00906517, 1, 0, 0.743678,0.00279742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0915401,0.00675925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583573,-0.00585172) , 
6, 0.0278507, 1, 0, 0.381684,-0.00142329) , 
2, 0.0951916, 1, 0, 0.511662,9.22052e-05) , 
5, 0.00925117, 1, 0, 0.507818,-0.000589892)    );
  // itree = 560
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.486835,-0.000686111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691226,0.0114718) , 
6, 0.033789, 1, 0, 0.537522,0.000857643) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661602,0.00580212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665726,-0.020135) , 
3, 32.3142, 1, 0, 0.663627,-0.00489681) , 
6, 0.0417434, 1, 0, 0.55937,-0.000139362) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765215,-0.0328033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929945,-0.0026511) , 
5, 0.0122354, 1, 0, 0.888616,-0.0139013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00164135,-0.000977259) , 
0, 0.00238582, 1, 0, 0.346409,-0.00546435) , 
3, 75.418, 1, 0, 0.501027,-0.00159821)    );
  // itree = 561
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.447524,-0.00574683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165457,0.0299631) , 
3, 100.947, 1, 0, 0.39985,-0.000360716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685619,0.0126458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346596,-0.00928486) , 
3, 100.914, 1, 0, 0.632278,0.00276218) , 
6, 0.0318083, 1, 0, 0.471668,0.000604219) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708683,0.0115957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63018,-0.0173957) , 
2, 0.0687548, 1, 0, 0.649865,-0.00546831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584996,0.0236992) , 
2, 0.357242, 1, 0, 0.636939,-0.00341875) , 
6, 0.0417492, 1, 0, 0.499431,-7.15908e-05)    );
  // itree = 562
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.235637,0.0208343) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857465,0.0297557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506782,-0.00391555) , 
2, 0.0238059, 1, 0, 0.558648,-0.000698822) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875626,-0.0117783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000532942,-0.0047729) , 
0, 0.00238633, 1, 0, 0.307558,-0.00505751) , 
3, 88.2948, 1, 0, 0.506773,-0.00159932) , 
4, 0.00464426, 1, 0, 0.493032,-0.00116253)    );
  // itree = 563
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.525736,-0.00037629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452832,0.0284303) , 
3, 37.5141, 1, 0, 0.485528,0.00453925) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695342,-0.0303598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55919,-0.00918145) , 
6, 0.0172511, 1, 0, 0.578925,-0.00628821) , 
6, 0.0139411, 1, 0, 0.560524,-0.00415496) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.808091,-0.0448415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669016,0.00225065) , 
3, 35.7835, 1, 0, 0.728925,-0.00471619) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70707,0.00370505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0491429,-0.0133586) , 
4, 0.0238573, 1, 0, 0.438553,0.000283215) , 
2, 0.0237986, 1, 0, 0.463464,-0.000145692) , 
4, 0.0139186, 1, 0, 0.494067,-0.00140981)    );
  // itree = 564
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632618,-0.0227637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82169,0.000168464) , 
6, 0.0139851, 1, 0, 0.787753,-0.00138268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675074,-0.0271779) , 
2, 0.0577596, 1, 0, 0.771804,-0.00423208) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.361059,-0.0115868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4232,-0.00018259) , 
4, 0.0162278, 1, 0, 0.403049,-0.00381732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.487644,0.00869724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.246981,-0.00426118) , 
4, 0.0208806, 1, 0, 0.370989,0.00169946) , 
3, 12.5915, 1, 0, 0.375743,0.000881434) , 
2, 0.0713763, 1, 0, 0.502264,-0.000752078)    );
  // itree = 565
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676911,-0.00385933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44609,0.0173175) , 
5, 0.0174865, 1, 0, 0.557721,0.00115662) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.476596,-0.00323815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879088,-0.024172) , 
7, 0.000356082, 1, 0, 0.560699,-0.00365369) , 
3, 17.9965, 1, 0, 0.55923,-0.00128089) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88141,0.0135126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901465,0.000390279) , 
6, 0.0278713, 1, 0, 0.894748,0.00283038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130972) , 
0, 0.0138242, 1, 0, 0,-0.000424914) , 
0, 0.00357949, 1, 0, 0.453112,0.00122361) , 
3, 37.7863, 1, 0, 0.49927,0.00013422)    );
  // itree = 566
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.728928,-0.0134915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941545,0.0743212) , 
8, 0.017117, 1, 0, 0.864361,0.00257187) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448645,-0.0185412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608964,-0.00557163) , 
5, 0.00886607, 1, 0, 0.591162,-0.00344358) , 
2, 0.0124657, 1, 0, 0.62497,-0.00269918) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.35419,0.0329208) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738135,0.00804893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0972044,-0.010002) , 
0, 0.00119056, 1, 0, 0.17711,-0.00127247) , 
2, 0.295935, 1, 0, 0.206213,0.000645519) , 
2, 0.261785, 1, 0, 0.496951,-0.00167667)    );
  // itree = 567
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86251,-0.0581057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.49942,-0.0143644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512125,0.000667598) , 
3, 4.20469, 1, 0, 0.507587,-0.00323455) , 
2, 0.0237906, 1, 0, 0.56738,-0.00618529) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77537,0.00194054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.36117,-0.00625672) , 
2, 0.0951945, 1, 0, 0.526428,-0.00136776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150435,0.0117119) , 
3, 132.742, 1, 0, 0.490815,-0.000840899) , 
3, 12.6149, 1, 0, 0.502401,-0.00164962)    );
  // itree = 568
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67513,0.00242421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224474,0.0271189) , 
2, 0.14713, 1, 0, 0.586931,0.00184887) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0239585,-0.00692346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130935) , 
0, 0.0143077, 1, 0, 0.0111292,-0.00219953) , 
2, 0.237905, 1, 0, 0.408433,0.000593865) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753606,-0.0180778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.427923,0.00384134) , 
2, 0.261718, 1, 0, 0.662477,-0.00817374) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607667,-0.00571288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586931,0.0313675) , 
6, 0.047164, 1, 0, 0.605624,-0.00123501) , 
3, 25.0464, 1, 0, 0.622657,-0.00331377) , 
6, 0.0324738, 1, 0, 0.497697,-0.00103439)    );
  // itree = 569
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247289,-0.0399061) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.451352,-0.00289918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70259,-0.0123962) , 
6, 0.03015, 1, 0, 0.570936,-0.00336848) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892825,0.00794398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132006) , 
0, 0.00357949, 1, 0, 0.402071,0.00204137) , 
3, 63.0931, 1, 0, 0.512726,-0.00150365) , 
5, 0.00458697, 1, 0, 0.500064,-0.00201757)    );
  // itree = 570
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507231,0.00884511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908609,0.0205858) , 
7, 0.000131214, 1, 0, 0.740981,0.00486958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.238253,-0.00296632) , 
2, 0.189895, 1, 0, 0.550468,0.00252553) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.426908,-0.00461989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736438,-0.0173477) , 
7, 0.000101335, 1, 0, 0.553569,-0.00538427) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624713,0.00765101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348567,-0.00776803) , 
2, 0.142723, 1, 0, 0.462996,-0.000917852) , 
4, 0.013907, 1, 0, 0.490904,-0.00229407) , 
3, 12.6149, 1, 0, 0.500221,-0.00154021)    );
  // itree = 571
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.746543,-0.029659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0882931,-0.00211348) , 
2, 0.0237986, 1, 0, 0.175481,-0.00102214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784636,4.42402e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837675,0.0166327) , 
5, 0.0143777, 1, 0, 0.814537,0.00391571) , 
7, 0.000114619, 1, 0, 0.402319,0.00073059) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962602,-0.0094582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636613,-0.0199787) , 
5, 0.0215763, 1, 0, 0.865921,-0.0106256) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863101,-0.00891614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772953,0.0225919) , 
0, 0.00204788, 1, 0, 0.814372,0.00190781) , 
4, 0.0223376, 1, 0, 0.847562,-0.00616181) , 
7, 0.000347867, 1, 0, 0.495376,-0.000709949)    );
  // itree = 572
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697613,-0.00296686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.511612,0.0111047) , 
3, 62.568, 1, 0, 0.639254,0.000224031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.339755,0.0565607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311989,0.00160928) , 
2, 0.274141, 1, 0, 0.322841,0.00422356) , 
2, 0.237863, 1, 0, 0.58702,0.000884278) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00294997,-0.00764064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376465,0.00702682) , 
6, 0.0356603, 1, 0, 0.0974414,-0.000470235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478278,-0.0132064) , 
6, 0.0440686, 1, 0, 0.152966,-0.00191243) , 
2, 0.333069, 1, 0, 0.496607,0.000301725)    );
  // itree = 573
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994039,0.00339069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902453,0.00907647) , 
0, 0.000112895, 1, 0, 0.945287,0.00397474) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000640595,-0.00815885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0011574,0.0100731) , 
4, 0.0232323, 1, 0, 0.000912114,-0.000322207) , 
0, 0.0023814, 1, 0, 0.559501,0.00221939) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958903,-0.0115486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292107,-0.000956072) , 
0, 0.00119228, 1, 0, 0.51936,-0.00220363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787014,0.00744033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000170182,-0.0104853) , 
0, 0.00238462, 1, 0, 0.204205,0.0013522) , 
2, 0.285575, 1, 0, 0.422991,-0.00111631) , 
3, 50.4539, 1, 0, 0.498596,0.00073114)    );
  // itree = 574
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.263457,-0.0220426) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593897,0.00177805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709155,0.0211266) , 
5, 0.0109204, 1, 0, 0.637543,0.00342523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.152581,-0.0250205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536254,-0.000539713) , 
4, 0.0139209, 1, 0, 0.472527,-0.00143242) , 
5, 0.0134313, 1, 0, 0.512108,-0.000267261) , 
5, 0.00464138, 1, 0, 0.501142,-0.000725723)    );
  // itree = 575
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998146,0.0481701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629078,-0.0089888) , 
0, 2.68952e-05, 1, 0, 0.962709,-0.000173923) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812083,-0.0170289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903554,-0.00618211) , 
0, 0.00108468, 1, 0, 0.887595,-0.00840294) , 
0, 0.000566581, 1, 0, 0.925454,-0.00425541) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00275635,0.0318965) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00327147,-0.00765728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000128842,0.000734288) , 
0, 0.00996141, 1, 0, 0.000984501,-0.000632692) , 
6, 0.00927304, 1, 0, 0.00136353,-0.000119936) , 
0, 0.00238727, 1, 0, 0.49733,-0.00233948)    );
  // itree = 576
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.414125,0.00346947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239137,-0.0123826) , 
3, 62.9677, 1, 0, 0.349843,-0.00135458) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828489,0.00152785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392089,0.0199836) , 
2, 0.118829, 1, 0, 0.601617,0.00439108) , 
6, 0.0265092, 1, 0, 0.43059,0.000488102) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688373,-0.0363568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680563,-0.00633594) , 
6, 0.0394309, 1, 0, 0.683178,-0.00909659) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598749,-0.00622321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594968,0.0234407) , 
1, 1.31396, 1, 0, 0.597894,-0.000578898) , 
3, 37.7692, 1, 0, 0.634894,-0.00427425) , 
6, 0.034793, 1, 0, 0.502234,-0.00118193)    );
  // itree = 577
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848272,-0.00394908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000608596,0.00135718) , 
0, 0.00238688, 1, 0, 0.123432,-0.000316785) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955756,0.0159981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.363868,-0.0269986) , 
0, 0.00148965, 1, 0, 0.855488,0.00201517) , 
7, 6.4239e-05, 1, 0, 0.407044,0.000586656) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849204,-0.023626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949506,-0.0148708) , 
5, 0.0177617, 1, 0, 0.928054,-0.00833224) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600332,0.0164554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421359,-0.00598276) , 
2, 0.0714842, 1, 0, 0.459849,-0.000904727) , 
0, 0.0011907, 1, 0, 0.614367,-0.00335598) , 
6, 0.0324783, 1, 0, 0.492766,-0.00104351)    );
  // itree = 578
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652785,0.00925542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760403,0.040323) , 
7, 0.000221969, 1, 0, 0.668939,0.00420523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.445314,-0.0262511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.496175,0.00235468) , 
3, 4.78607, 1, 0, 0.490226,-0.000577172) , 
4, 0.0162411, 1, 0, 0.566712,0.00146961) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.426043,0.00522696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597571,-0.0156991) , 
4, 0.0108946, 1, 0, 0.515343,-0.00523427) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.301766,0.00877361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663626,-0.00870872) , 
6, 0.0440685, 1, 0, 0.359975,0.000186772) , 
4, 0.0162923, 1, 0, 0.418784,-0.00186517) , 
3, 50.2064, 1, 0, 0.499172,-5.29529e-05)    );
  // itree = 579
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625274,-0.00442783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751188,-0.0269556) , 
4, 0.0154698, 1, 0, 0.636293,-0.0031947) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.140254,-0.00827549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760794,0.0114629) , 
6, 0.0347911, 1, 0, 0.476265,0.00208075) , 
4, 0.0162501, 1, 0, 0.542506,-0.000102949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.159747,-0.0126998) , 
3, 126.134, 1, 0, 0.503831,-0.000882256)    );
  // itree = 580
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.49745,0.0159771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478319,-0.0087886) , 
3, 11.9937, 1, 0, 0.483347,-0.000962391) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887326,0.0165178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.61116e-05,-0.0105532) , 
0, 0.00357949, 1, 0, 0.325233,0.00297283) , 
3, 50.3741, 1, 0, 0.411782,0.000818751) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938766,-0.000184823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897129,-0.031982) , 
3, 36.8021, 1, 0, 0.915457,-0.0117039) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838957,0.0300112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746467,-0.00818745) , 
5, 0.0217742, 1, 0, 0.794765,0.00199952) , 
0, 0.00154013, 1, 0, 0.849037,-0.00416251) , 
7, 0.000347868, 1, 0, 0.502823,-0.000218395)    );
  // itree = 581
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.27984,-0.00417517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39426,0.0255526) , 
4, 0.00444574, 1, 0, 0.341401,0.00130156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664047,-0.0340115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562243,-0.00813234) , 
3, 50.0542, 1, 0, 0.624548,-0.0101299) , 
7, 4.55776e-05, 1, 0, 0.463626,-0.00363301) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.368381,-0.0151936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74614,0.00783637) , 
5, 0.0101972, 1, 0, 0.719287,0.00244911) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0190635) , 
6, 0.0254866, 1, 0, 0,-0.00118654) , 
4, 0.0243166, 1, 0, 0.511512,0.0013989) , 
4, 0.0093056, 1, 0, 0.504317,0.000642911)    );
  // itree = 582
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596939,-0.00152321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954334,0.0240587) , 
7, 0.000125697, 1, 0, 0.704139,0.0020651) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0234117) , 
7, -0.00073198, 1, 0, 0,-0.00164551) , 
4, 0.0139198, 1, 0, 0.378809,0.000350706) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767778,-0.00415738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742824,0.0186432) , 
2, 0.0793317, 1, 0, 0.761078,0.000642338) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895407,-0.0102917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00147948,-0.000201293) , 
0, 0.00238688, 1, 0, 0.50657,-0.00535989) , 
2, 0.119004, 1, 0, 0.6068,-0.0029961) , 
6, 0.027833, 1, 0, 0.500172,-0.00143084)    );
  // itree = 583
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583624,0.00600375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777788,0.0495275) , 
6, 0.0230797, 1, 0, 0.615188,0.00311638) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796676,-0.010453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589185,-0.0359512) , 
3, 75.0924, 1, 0, 0.75241,-0.00664508) , 
6, 0.0255095, 1, 0, 0.694605,-0.00253307) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836986,-0.000238267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851283,0.0131016) , 
0, 0.00124648, 1, 0, 0.844071,0.00513199) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00160945,0.00524703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.05477e-05,-0.0140786) , 
4, 0.0162588, 1, 0, 0.00055534,-0.000446464) , 
0, 0.00238398, 1, 0, 0.272282,0.00135056) , 
2, 0.166534, 1, 0, 0.501095,-0.000753575)    );
  // itree = 584
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996664,0.0608884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961323,0.0535913) , 
0, 0.000129637, 1, 0, 0.979456,0.00954496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0326905,-0.0035466) , 
0, 0.000907609, 1, 0, 0.445448,0.00327061) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978695,-0.000267298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69416,-0.0112372) , 
0, 0.000340892, 1, 0, 0.935967,-0.00356247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941853,0.0060662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00127644,-0.0103161) , 
0, 0.00232952, 1, 0, 0.324113,0.000896596) , 
0, 0.00119316, 1, 0, 0.509457,-0.000454149) , 
4, 0.00929419, 1, 0, 0.499728,0.000111975)    );
  // itree = 585
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937461,-0.00589563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000494546,-0.000649945) , 
0, 0.00238462, 1, 0, 0.458587,-0.00153523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832919,0.0127977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132113) , 
0, 0.00357872, 1, 0, 0.215275,0.0026027) , 
3, 88.3286, 1, 0, 0.405912,-0.000639406) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985061,-0.0468032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61033,-0.0165228) , 
0, 0.000179448, 1, 0, 0.90283,-0.0133269) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767384,0.0188839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746981,-0.00236759) , 
3, 24.1328, 1, 0, 0.752972,0.001598) , 
0, 0.00188442, 1, 0, 0.83382,-0.00645392) , 
7, 0.000345042, 1, 0, 0.499164,-0.00190653)    );
  // itree = 586
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791683,0.00434656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915841,0.0301549) , 
7, 0.000357623, 1, 0, 0.81044,0.0018057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893481,-0.0046065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00108291,-0.00200148) , 
0, 0.00238462, 1, 0, 0.403886,-0.00173639) , 
2, 0.0713634, 1, 0, 0.537119,-0.000575594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165553,-0.0140822) , 
3, 126.184, 1, 0, 0.501671,-0.00132113)    );
  // itree = 587
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.372953,0.00280046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58237,-0.00917882) , 
6, 0.0283985, 1, 0, 0.412891,-0.000198356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579892,0.037917) , 
6, 0.0331333, 1, 0, 0.42368,0.000426846) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757569,-0.023153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509599,0.00515594) , 
2, 0.213474, 1, 0, 0.657661,-0.00967865) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731075,0.0239776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538679,-0.00562383) , 
2, 0.142809, 1, 0, 0.616618,0.000804812) , 
3, 25.1786, 1, 0, 0.629134,-0.00239213) , 
6, 0.0347908, 1, 0, 0.496627,-0.000574045)    );
  // itree = 588
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979191,-0.00810956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801677,-0.00917972) , 
2, 0.094994, 1, 0, 0.917224,-0.00567646) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00175873,0.011988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000344062,-0.00879272) , 
6, 0.00938805, 1, 0, 0.000691903,-0.000250547) , 
0, 0.00238398, 1, 0, 0.448104,-0.00289925) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755091,-0.00278109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688386,0.0202456) , 
3, 24.5286, 1, 0, 0.709469,0.00366078) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616303,-0.0143799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510209,0.00562862) , 
2, 0.308614, 1, 0, 0.556371,-0.00150441) , 
2, 0.190942, 1, 0, 0.630265,0.000988619) , 
6, 0.0394297, 1, 0, 0.490445,-0.00199555)    );
  // itree = 589
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687145,0.0158811) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809444,0.000671771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683112,-0.0155485) , 
3, 24.9873, 1, 0, 0.724134,-0.00328681) , 
4, 0.00694323, 1, 0, 0.720363,-0.00219984) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.182196,0.0120388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152329,-0.00331827) , 
3, 12.626, 1, 0, 0.156544,-0.000437194) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871934,0.00572087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784435,0.0187124) , 
2, 0.318525, 1, 0, 0.840857,0.00524718) , 
7, 0.000344736, 1, 0, 0.319857,0.00091939) , 
2, 0.118993, 1, 0, 0.497614,-0.000465025)    );
  // itree = 590
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996265,0.00128481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809154,-0.0131423) , 
0, 5.66696e-05, 1, 0, 0.94792,-0.00440738) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937927,0.0182408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00137378,-0.00677167) , 
0, 0.00232502, 1, 0, 0.335658,0.00336393) , 
0, 0.0011907, 1, 0, 0.562383,0.000486156) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779704,0.0210184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512271,-0.0167201) , 
2, 0.0317267, 1, 0, 0.591619,-0.00597083) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887635,0.0239477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144297,-0.0038139) , 
0, 0.0011913, 1, 0, 0.251765,0.000780469) , 
2, 0.166585, 1, 0, 0.414034,-0.00244306) , 
3, 50.4748, 1, 0, 0.495466,-0.000835155)    );
  // itree = 591
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990636,-0.0204791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735319,-0.0582796) , 
0, 0.000990405, 1, 0, 0.923099,-0.00750975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668169,0.0341717) , 
4, 0.0160452, 1, 0, 0.844867,-0.00363982) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675554,-0.00630452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.289056,0.00732183) , 
2, 0.182404, 1, 0, 0.497682,-0.000518522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844189,0.00961359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131687) , 
0, 0.0035739, 1, 0, 0.306099,0.00276092) , 
3, 75.6198, 1, 0, 0.44212,0.000432575) , 
2, 0.0237906, 1, 0, 0.499485,-0.00014748)    );
  // itree = 592
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.258894,-0.0173731) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953792,0.0023619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934281,0.0230934) , 
3, 99.3758, 1, 0, 0.952067,0.00185702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862619,-0.00456915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.12346e-05,-0.0115247) , 
0, 0.0034602, 1, 0, 0.295895,-0.00150728) , 
0, 0.00119119, 1, 0, 0.513235,-0.000392938) , 
5, 0.00457544, 1, 0, 0.503051,-0.000768378)    );
  // itree = 593
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.252991,-0.018145) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.521407,0.00389088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651434,-0.00835949) , 
6, 0.0417434, 1, 0, 0.544468,0.000299857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.105817,-0.0163016) , 
2, 0.428362, 1, 0, 0.508034,-0.000187107) , 
5, 0.00458917, 1, 0, 0.496787,-0.000509479)    );
  // itree = 594
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865294,0.0181743) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852875,-0.02863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758378,-0.0109884) , 
3, 34.3674, 1, 0, 0.801386,-0.00583934) , 
4, 0.00698958, 1, 0, 0.810994,-0.00414163) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.428586,0.0142288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329946,-0.00145299) , 
3, 37.8565, 1, 0, 0.370756,0.00124327) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616961,0.00242732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596562,-0.0338166) , 
1, 1.11011, 1, 0, 0.611329,-0.00365406) , 
6, 0.0440685, 1, 0, 0.402034,0.000606553) , 
2, 0.0475958, 1, 0, 0.497961,-0.0005072)    );
  // itree = 595
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.257889,0.0178512) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666828,-0.00321496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518702,-0.0230143) , 
3, 62.9695, 1, 0, 0.623606,-0.00557681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.725584,0.010705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428649,-0.00316666) , 
4, 0.0164457, 1, 0, 0.485395,8.86269e-05) , 
4, 0.0130478, 1, 0, 0.517848,-0.00124166) , 
4, 0.00464601, 1, 0, 0.505587,-0.00088733)    );
  // itree = 596
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731443,-0.000234094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277364,-0.00895951) , 
2, 0.190337, 1, 0, 0.55748,-0.0013016) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.110963,-0.00689031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.805516,0.0154429) , 
7, 0.000105965, 1, 0, 0.427512,0.0033774) , 
3, 85.859, 1, 0, 0.537598,-0.000585812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.120104,-0.0101024) , 
3, 138.802, 1, 0, 0.505655,-0.000911577)    );
  // itree = 597
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961519,0.00605737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255977,-0.00681436) , 
0, 0.000959155, 1, 0, 0.55589,-0.0014524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713256,-0.0234556) , 
4, 0.0132613, 1, 0, 0.571643,-0.00330522) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.786078,-0.0103083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963969,0.0147175) , 
5, 0.0150326, 1, 0, 0.945679,0.00424586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00183813,0.00510919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000116129,-0.0149626) , 
2, 0.285688, 1, 0, 0.00107738,-0.000334315) , 
0, 0.00238462, 1, 0, 0.478511,0.00198066) , 
4, 0.0139254, 1, 0, 0.507754,0.000320929)    );
  // itree = 598
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886455,-0.0059036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297423,-0.0161887) , 
2, 0.0951109, 1, 0, 0.660908,-0.00776014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.478046,0.00445761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403111,-0.0143014) , 
3, 20.4212, 1, 0, 0.463198,0.000408249) , 
4, 0.016269, 1, 0, 0.548545,-0.00311784) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803318,-0.0244089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7694,0.0137362) , 
6, 0.0324994, 1, 0, 0.793899,-0.0023367) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.263982,0.00492853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828137,-0.00549854) , 
7, 0.00036124, 1, 0, 0.386094,0.000288219) , 
2, 0.0475958, 1, 0, 0.479124,-0.000310586) , 
3, 25.2289, 1, 0, 0.500658,-0.00118138)    );
  // itree = 599
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919712,0.00950861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510945,-0.00959666) , 
4, 0.0162335, 1, 0, 0.815083,0.00199781) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.2311,-0.021992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564294,0.0131727) , 
4, 0.0185949, 1, 0, 0.478631,-0.00098665) , 
5, 0.0180313, 1, 0, 0.674649,0.000752108) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559664,-0.013578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904411,-0.00712245) , 
4, 0.0178487, 1, 0, 0.814706,-0.0126628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000605571,0.002648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000348843,-0.0113206) , 
3, 50.2406, 1, 0, 0.000474594,-0.000384962) , 
0, 0.00238398, 1, 0, 0.249251,-0.00413627) , 
2, 0.190337, 1, 0, 0.497311,-0.00128574)    );
  // itree = 600
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959097,-0.00547862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717414,-0.00850864) , 
2, 0.237485, 1, 0, 0.925137,-0.00426065) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00360122,0.0203659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134243) , 
4, 0.0162745, 1, 0, 0.00113834,0.000368022) , 
0, 0.00238582, 1, 0, 0.478138,-0.00202146) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943515,0.0343211) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448808,0.0116067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488711,-0.00581056) , 
6, 0.0462767, 1, 0, 0.472175,0.000199105) , 
0, 0.00118137, 1, 0, 0.627565,0.00299857) , 
6, 0.0440685, 1, 0, 0.494883,-0.0014589)    );
  // itree = 601
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990298,0.0314486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544896,-0.013036) , 
0, 0.00119115, 1, 0, 0.800598,0.00030802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704999,-0.0383979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524105,-0.00451814) , 
5, 0.0128419, 1, 0, 0.589867,-0.0128987) , 
3, 75.7105, 1, 0, 0.757617,-0.00238565) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692751,0.0459798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508588,0.00845181) , 
4, 0.0163005, 1, 0, 0.582078,0.00806377) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.438213,-0.0049174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.228164,0.00228237) , 
2, 0.238355, 1, 0, 0.304611,-0.00029626) , 
2, 0.133744, 1, 0, 0.344637,0.000909716) , 
2, 0.0951945, 1, 0, 0.50632,-0.000380433)    );
  // itree = 602
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884932,0.00979389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844502,-0.0249526) , 
6, 0.02336, 1, 0, 0.864808,-0.00263517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771002,-0.0485988) , 
3, 72.0055, 1, 0, 0.845636,-0.00560479) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853723,0.00590321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013224) , 
0, 0.0035739, 1, 0, 0.298305,0.00113624) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570807,-0.0110199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623924,-0.00128325) , 
4, 0.0186144, 1, 0, 0.604102,-0.00292493) , 
6, 0.0301682, 1, 0, 0.452854,-0.000916273) , 
2, 0.0237979, 1, 0, 0.508127,-0.00157605)    );
  // itree = 603
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982786,-0.00530722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930006,0.0186005) , 
0, 0.000227094, 1, 0, 0.961327,0.00470492) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.745726,-0.00736149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000709765,0.000258627) , 
0, 0.00232828, 1, 0, 0.0835361,-0.00110136) , 
0, 0.00119231, 1, 0, 0.367538,0.000777214) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770887,-0.0104952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.302357,-0.0406165) , 
5, 0.0155618, 1, 0, 0.580271,-0.0119398) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626785,-0.00644174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64032,0.0227192) , 
1, 1.45183, 1, 0, 0.628622,-0.00163557) , 
6, 0.0318089, 1, 0, 0.62,-0.00347292) , 
6, 0.0278328, 1, 0, 0.499831,-0.0014499)    );
  // itree = 604
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.370366,0.0071734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623714,-0.0141809) , 
4, 0.00749154, 1, 0, 0.485197,-0.00159094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.716164,-0.0370775) , 
4, 0.0104927, 1, 0, 0.522905,-0.00452008) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899839,0.009405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516873,0.0332088) , 
2, 0.0706297, 1, 0, 0.696156,0.00939486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.113342,-0.0160978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54613,0.000838473) , 
5, 0.0137487, 1, 0, 0.48417,-0.000713547) , 
4, 0.0133763, 1, 0, 0.500976,8.78468e-05) , 
4, 0.0115997, 1, 0, 0.505805,-0.000926799)    );
  // itree = 605
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568647,-0.0159421) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868209,0.00158156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45116,-0.00631817) , 
2, 0.0951625, 1, 0, 0.647947,-0.00195301) , 
5, 0.0065807, 1, 0, 0.641989,-0.0027329) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0199511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130935) , 
4, 0.0314882, 1, 0, 0,-0.00155137) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966727,0.0324508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404731,-0.00763338) , 
4, 0.0235385, 1, 0, 0.743829,0.00444358) , 
6, 0.0417491, 1, 0, 0.27161,0.000637692) , 
4, 0.020893, 1, 0, 0.497604,-0.00141894)    );
  // itree = 606
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898438,0.0479983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813619,0.000646866) , 
3, 24.3285, 1, 0, 0.841222,0.00229837) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71552,-0.00951478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463902,-0.024155) , 
3, 75.7119, 1, 0, 0.659021,-0.00549524) , 
2, 0.0317179, 1, 0, 0.741016,-0.00198793) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.534471,0.0468077) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.484543,0.00505866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131599,-0.0128636) , 
5, 0.0227805, 1, 0, 0.32127,0.000361625) , 
2, 0.114442, 1, 0, 0.337052,0.00115517) , 
2, 0.0951625, 1, 0, 0.4945,-6.98756e-05)    );
  // itree = 607
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784851,0.0253776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947749,0.0711881) , 
7, 0.000147407, 1, 0, 0.859379,0.00616827) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820722,0.0252515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715078,-0.00797261) , 
2, 0.0294335, 1, 0, 0.789049,0.00206093) , 
3, 24.9647, 1, 0, 0.813358,0.0034806) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881727,0.0102165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0664996,-0.000965758) , 
0, 0.00119179, 1, 0, 0.191011,0.00104178) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57109,-0.00393611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473688,-0.0210343) , 
1, 1.62229, 1, 0, 0.561439,-0.00270999) , 
6, 0.0278326, 1, 0, 0.403455,-0.00110989) , 
2, 0.0475842, 1, 0, 0.500645,-2.14587e-05)    );
  // itree = 608
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.32265,2.80737e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539039,-0.0219545) , 
6, 0.0239864, 1, 0, 0.351255,-0.00107438) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73958,0.0183543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407159,-0.00753421) , 
4, 0.0162351, 1, 0, 0.602267,0.00346732) , 
6, 0.026512, 1, 0, 0.432598,0.000397413) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764191,-0.0123001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560942,-0.030841) , 
2, 0.0947892, 1, 0, 0.633034,-0.0130109) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662036,0.00450461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549648,-0.0078625) , 
2, 0.380825, 1, 0, 0.642278,0.000400054) , 
6, 0.0407614, 1, 0, 0.638266,-0.00542095) , 
6, 0.0347969, 1, 0, 0.504959,-0.00164968)    );
  // itree = 609
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74125,0.00331436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970978,0.0222195) , 
7, 0.000185357, 1, 0, 0.83535,0.00439161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00442823,-0.0141673) , 
5, 0.0187183, 1, 0, 0.641981,0.00266607) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0191192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.563041,-0.0123824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417592,0.0100564) , 
3, 37.8565, 1, 0, 0.47448,4.76447e-05) , 
5, 0.0182798, 1, 0, 0.372891,-0.00145308) , 
4, 0.0185511, 1, 0, 0.509171,0.000633055)    );
  // itree = 610
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619862,-0.000424576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137162,-0.0131649) , 
2, 0.380778, 1, 0, 0.551958,-0.000768343) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.476478,-0.023891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361866,-0.0142366) , 
4, 0.016388, 1, 0, 0.40623,-0.0126824) , 
3, 96.1117, 1, 0, 0.53887,-0.00183841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0818014,0.00688871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279631,0.0265018) , 
6, 0.0324872, 1, 0, 0.152529,0.00396044) , 
3, 126.184, 1, 0, 0.498823,-0.00123732)    );
  // itree = 611
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88148,0.0665788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374995,-0.00386111) , 
2, 0.0271083, 1, 0, 0.592084,0.00115527) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859951,-0.0172242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652193,0.000144036) , 
5, 0.0177334, 1, 0, 0.767274,-0.00387531) , 
6, 0.0208753, 1, 0, 0.713659,-0.00233574) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79699,0.0121286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00128462,-0.00423567) , 
0, 0.00205893, 1, 0, 0.276045,0.00440598) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660393,-0.0222178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.266882,0.0014833) , 
4, 0.0200059, 1, 0, 0.307912,-0.001504) , 
4, 0.0185684, 1, 0, 0.296258,0.000657311) , 
2, 0.142753, 1, 0, 0.502604,-0.000822337)    );
  // itree = 612
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794228,-0.0010203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516796,-0.0144293) , 
3, 88.3286, 1, 0, 0.753729,-0.00126637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4895,-0.00873365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.841289,-0.0216224) , 
7, 0.000374013, 1, 0, 0.562185,-0.0080351) , 
2, 0.088376, 1, 0, 0.704486,-0.0030065) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607996,-0.00285421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920061,0.00878963) , 
4, 0.0160503, 1, 0, 0.861828,0.00272083) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000859221,0.00329212) , 
5, 0.0182274, 1, 0, 0.000609492,-0.000199292) , 
0, 0.00238462, 1, 0, 0.286845,0.000771244) , 
2, 0.142787, 1, 0, 0.494406,-0.00110623)    );
  // itree = 613
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89913,-0.00668934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0011295,0.0112712) , 
0, 0.00237101, 1, 0, 0.295834,-0.000961327) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935322,0.00787306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134301) , 
0, 0.00238688, 1, 0, 0.556906,0.00227076) , 
6, 0.0216461, 1, 0, 0.412896,0.000487908) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950228,0.00755287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468934,-0.00694566) , 
0, 0.00119199, 1, 0, 0.626214,-0.00156712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600773,-0.0252144) , 
1, 1.47252, 1, 0, 0.624446,-0.00256992) , 
6, 0.0324739, 1, 0, 0.500601,-0.000779822)    );
  // itree = 614
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930251,-0.000891743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90289,-0.0157188) , 
5, 0.022033, 1, 0, 0.927852,-0.00193332) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852186,-0.0236561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969133,-0.00719412) , 
5, 0.023004, 1, 0, 0.911117,-0.0127355) , 
0, 0.00203969, 1, 0, 0.926242,-0.00297263) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.002729,0.00915207) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000608261,-0.0119715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00103615,0.00403296) , 
3, 37.9211, 1, 0, 0.000888999,-0.000278445) , 
4, 0.0162575, 1, 0, 0.00141697,7.59386e-05) , 
0, 0.00238633, 1, 0, 0.497658,-0.00155986)    );
  // itree = 615
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636024,0.00650089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0232418) , 
5, 0.0119633, 1, 0, 0.245282,0.000214907) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889716,-0.00500987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756367,-0.02001) , 
4, 0.0173984, 1, 0, 0.861613,-0.00502536) , 
7, 0.00013594, 1, 0, 0.452191,-0.00154431) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970157,0.0235731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166244,-0.0216687) , 
0, 0.00215216, 1, 0, 0.727092,0.00410208) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731905,0.0143643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.207978,-0.0275485) , 
1, 1.07265, 1, 0, 0.390027,-0.00123573) , 
4, 0.0232337, 1, 0, 0.623945,0.00246864) , 
6, 0.0371174, 1, 0, 0.503024,-0.00035661)    );
  // itree = 616
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.346909,6.36946e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495072,-0.0355387) , 
6, 0.0252419, 1, 0, 0.35567,-0.00121358) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807461,7.94739e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388586,0.0123922) , 
2, 0.119013, 1, 0, 0.590801,0.00311754) , 
6, 0.0265067, 1, 0, 0.432432,0.000200362) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723468,-0.00272566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433996,-0.0310677) , 
2, 0.237926, 1, 0, 0.622329,-0.00916864) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954871,0.0201523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470867,-0.00433923) , 
0, 0.00118679, 1, 0, 0.629205,0.000333561) , 
6, 0.0407614, 1, 0, 0.626227,-0.00378124) , 
6, 0.0347909, 1, 0, 0.501818,-0.0012252)    );
  // itree = 617
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992497,0.0043316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.287839,-0.0350323) , 
0, 0.00115044, 1, 0, 0.803795,-0.00302326) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498546,0.0114296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0192229) , 
4, 0.0139186, 1, 0, 0.191406,0.00158886) , 
2, 0.0475842, 1, 0, 0.383924,0.000138934) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642359,-0.0123929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609283,-0.00219259) , 
3, 12.6138, 1, 0, 0.614442,-0.00180525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532694,-0.0240297) , 
1, 1.65626, 1, 0, 0.607663,-0.00277864) , 
6, 0.0278328, 1, 0, 0.502779,-0.00141095)    );
  // itree = 618
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473518,-0.013111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376187,0.00776583) , 
4, 0.0069617, 1, 0, 0.388956,0.000191729) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635379,-0.0043792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567126,-0.0300483) , 
1, 1.54394, 1, 0, 0.6243,-0.00401953) , 
6, 0.0293783, 1, 0, 0.48826,-0.00158524) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.728676,0.0725252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632666,0.0144979) , 
6, 0.0456206, 1, 0, 0.676459,0.00827027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568212,-0.00243477) , 
4, 0.0233972, 1, 0, 0.630825,0.00441455) , 
6, 0.0440684, 1, 0, 0.504345,-0.000908333)    );
  // itree = 619
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840525,-0.030457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819901,0.0178936) , 
3, 15.0112, 1, 0, 0.825652,0.0009097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865108,-0.015635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27268,-0.00568567) , 
0, 0.00119053, 1, 0, 0.416566,-0.00466106) , 
2, 0.0713239, 1, 0, 0.560054,-0.0027071) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567898,0.0345469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284946,0.00841025) , 
6, 0.0185118, 1, 0, 0.40326,0.00792136) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.215939,-0.0126171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415191,0.00491912) , 
5, 0.0135053, 1, 0, 0.38041,0.000218563) , 
4, 0.0116057, 1, 0, 0.384961,0.00175267) , 
3, 63.067, 1, 0, 0.498885,-0.0011491)    );
  // itree = 620
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953227,0.00912512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00140474,-0.0166047) , 
0, 0.00205893, 1, 0, 0.658212,0.00170658) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750967,-0.0112575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.267283,-0.00123803) , 
4, 0.0214237, 1, 0, 0.401819,-0.00152535) , 
4, 0.0185511, 1, 0, 0.534295,0.000144564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.113418,-0.0144045) , 
3, 138.474, 1, 0, 0.501752,-0.000344504)    );
  // itree = 621
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868326,0.0486726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80121,-0.0170097) , 
4, 0.00694982, 1, 0, 0.808932,-0.00348433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514777,-0.0218639) , 
3, 87.3637, 1, 0, 0.763609,-0.00505708) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.442894,0.0052746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0163735) , 
4, 0.0185669, 1, 0, 0.22938,0.000904026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896396,-0.0145766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744267,0.00755652) , 
0, 0.00186697, 1, 0, 0.824276,-0.00410668) , 
7, 0.000344744, 1, 0, 0.377394,-0.000342673) , 
2, 0.0713714, 1, 0, 0.501947,-0.00186305)    );
  // itree = 622
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881877,-0.00314357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795322,0.026944) , 
2, 0.0271606, 1, 0, 0.832367,0.00333215) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.344572,-0.012012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.365121,0.000520632) , 
3, 4.79472, 1, 0, 0.36096,-0.00122619) , 
2, 0.0951625, 1, 0, 0.562711,0.000724669) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934663,-0.00460846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897441,-0.0156094) , 
0, 0.00158643, 1, 0, 0.924251,-0.00615453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00370346,0.0123496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000287803,-0.0101317) , 
2, 0.142966, 1, 0, 0.00127755,-8.15988e-05) , 
0, 0.00238727, 1, 0, 0.474557,-0.00319565) , 
3, 25.1871, 1, 0, 0.501298,-0.00200644)    );
  // itree = 623
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520261,-0.0111747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.323429,0.00478978) , 
5, 0.00704695, 1, 0, 0.351369,5.45342e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647478,0.0314394) , 
6, 0.0265076, 1, 0, 0.374409,0.000702096) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764513,-0.00981347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.482669,0.00305364) , 
2, 0.214205, 1, 0, 0.660656,-0.00178613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.285384,-0.0170031) , 
3, 112.441, 1, 0, 0.613962,-0.00270948) , 
6, 0.027833, 1, 0, 0.499962,-0.00108596)    );
  // itree = 624
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900507,0.0157092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933565,-0.00268751) , 
5, 0.0198058, 1, 0, 0.909174,0.00461245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131394) , 
0, 0.00357208, 1, 0, 0.561355,0.00275014) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499748,-0.0104838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44423,0.00501242) , 
4, 0.0116195, 1, 0, 0.457532,-0.000164727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644205,-0.0173943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542229,-0.00341857) , 
3, 70.2628, 1, 0, 0.601838,-0.00652679) , 
6, 0.0440684, 1, 0, 0.474883,-0.000929662) , 
3, 25.2268, 1, 0, 0.500813,0.000173786)    );
  // itree = 625
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861511,0.0150183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849041,-0.0374308) , 
3, 16.0515, 1, 0, 0.854521,-0.00936247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882913,-0.0214828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709526,0.0305186) , 
5, 0.0091865, 1, 0, 0.755756,0.000513164) , 
3, 37.4473, 1, 0, 0.804276,-0.00433843) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.15372,-0.00180918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527356,0.01045) , 
6, 0.0265005, 1, 0, 0.304973,0.00121236) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721383,-0.0104103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394473,0.00903981) , 
4, 0.0232397, 1, 0, 0.624403,-0.00325662) , 
6, 0.0371105, 1, 0, 0.408109,-0.000230557) , 
2, 0.0475972, 1, 0, 0.504717,-0.00123229)    );
  // itree = 626
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973029,-0.0172866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708754,-0.0223214) , 
0, 0.000335189, 1, 0, 0.83485,-0.0186116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973873,0.00137386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876108,-0.00575291) , 
2, 0.118554, 1, 0, 0.933481,-0.00212242) , 
5, 0.00805822, 1, 0, 0.923708,-0.00375621) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00410762,0.0133068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131043) , 
4, 0.0162427, 1, 0, 0.00115125,0.000403891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0022522,-0.00855267) , 
6, 0.0347702, 1, 0, 0.00142651,2.29607e-05) , 
0, 0.00238727, 1, 0, 0.499216,-0.0020168)    );
  // itree = 627
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.345877,-0.00861134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.240293,0.0152981) , 
3, 37.6739, 1, 0, 0.284766,0.000459335) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944029,-0.00665411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.434817,-0.0333092) , 
5, 0.0104746, 1, 0, 0.699586,-0.0105341) , 
7, 4.46481e-05, 1, 0, 0.510852,-0.00553229) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877189,0.0124732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372067,-0.00299838) , 
4, 0.0204307, 1, 0, 0.671998,0.00199054) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861299,-0.0075704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202031,0.00318142) , 
0, 0.00119056, 1, 0, 0.321835,-0.00055817) , 
2, 0.166603, 1, 0, 0.496589,0.000713799) , 
4, 0.0115987, 1, 0, 0.499798,-0.00069154)    );
  // itree = 628
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.788012,0.0190446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840817,-0.0227696) , 
6, 0.0255126, 1, 0, 0.816159,-0.00136473) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000137048,-0.0127413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75633,0.0112017) , 
7, 8.80962e-05, 1, 0, 0.373351,0.00251732) , 
2, 0.0950637, 1, 0, 0.563039,0.000854346) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927543,-0.0040191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878716,-0.0249262) , 
0, 0.00204019, 1, 0, 0.922391,-0.00421365) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00250432,0.00933753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000430943,-0.0117992) , 
6, 0.013905, 1, 0, 0.00110511,-0.000294445) , 
0, 0.00238633, 1, 0, 0.446356,-0.00218857) , 
3, 37.8402, 1, 0, 0.496647,-0.000877064)    );
  // itree = 629
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839366,-0.00833154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862239,-0.0764903) , 
7, 0.000213045, 1, 0, 0.842672,-0.00522395) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587958,-0.01604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596527,0.00316771) , 
2, 0.0181659, 1, 0, 0.594929,-0.000415069) , 
4, 0.0162156, 1, 0, 0.739565,-0.00322256) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.342113,0.00123747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619729,-0.00854203) , 
6, 0.0463879, 1, 0, 0.364668,-0.000140619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.10246,0.0199273) , 
3, 138.531, 1, 0, 0.338543,0.000447771) , 
2, 0.0951945, 1, 0, 0.495382,-0.000987689)    );
  // itree = 630
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613068,-0.0201016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564283,-0.0139299) , 
6, 0.0163029, 1, 0, 0.582949,-0.00675706) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538007,0.0189004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.365217,-0.00597112) , 
6, 0.0162053, 1, 0, 0.421372,0.00142789) , 
3, 50.28, 1, 0, 0.512064,-0.00316626) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703623,-0.00198939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577749,0.0190961) , 
2, 0.0996995, 1, 0, 0.65753,0.0012646) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454096,-0.00758599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.237143,0.000257071) , 
4, 0.0204358, 1, 0, 0.305847,-0.00212849) , 
2, 0.190356, 1, 0, 0.500405,-0.000251369) , 
4, 0.0116006, 1, 0, 0.503044,-0.000911174)    );
  // itree = 631
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843064,0.00667817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717037,-0.0205104) , 
2, 0.0294524, 1, 0, 0.804687,-0.00207039) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654899,0.0155347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613498,0.00165877) , 
5, 0.0129736, 1, 0, 0.623764,0.00283197) , 
2, 0.0475871, 1, 0, 0.711704,0.000449105) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589585,-0.00773752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396842,-0.0210249) , 
3, 49.7021, 1, 0, 0.500608,-0.00911895) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.029891,-0.0106128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.323564,0.000595364) , 
4, 0.0139158, 1, 0, 0.264439,-0.00101898) , 
2, 0.176817, 1, 0, 0.294411,-0.00204694) , 
2, 0.142792, 1, 0, 0.500926,-0.00081167)    );
  // itree = 632
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523074,-0.00650824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67791,-0.0427199) , 
6, 0.0188742, 1, 0, 0.547874,-0.00651737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934844,0.00321325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122583,-0.0202217) , 
5, 0.0182323, 1, 0, 0.658452,-0.00169783) , 
6, 0.0208631, 1, 0, 0.623352,-0.00322769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.020557) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543911,0.034946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395332,-0.00157424) , 
3, 50.4561, 1, 0, 0.470508,0.0030281) , 
5, 0.0180011, 1, 0, 0.370805,0.00127635) , 
4, 0.0185601, 1, 0, 0.498565,-0.00100218)    );
  // itree = 633
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673633,-0.0145202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714281,0.017672) , 
5, 0.0060739, 1, 0, 0.708835,0.00367338) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000137926,0.00689509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0175232) , 
7, -0.000705776, 1, 0, 7.82465e-05,-0.00147549) , 
4, 0.0139353, 1, 0, 0.374009,0.00124098) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765634,-0.0203176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535545,0.0064573) , 
3, 74.9645, 1, 0, 0.71251,-0.00618702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470891,0.00742914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368547,-0.0108322) , 
3, 87.46, 1, 0, 0.444915,0.000776751) , 
2, 0.214199, 1, 0, 0.608915,-0.00349112) , 
6, 0.027833, 1, 0, 0.498893,-0.00127476)    );
  // itree = 634
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504872,-0.00953575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706422,0.00804997) , 
4, 0.0119948, 1, 0, 0.536449,-0.00209749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743758,-0.0216872) , 
4, 0.013259, 1, 0, 0.556076,-0.00318402) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0208156) , 
7, -0.000731712, 1, 0, 0,-0.00161825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736048,0.00921853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.360233,-0.00851904) , 
3, 112.696, 1, 0, 0.694439,0.00230574) , 
6, 0.0278331, 1, 0, 0.470005,0.00103755) , 
4, 0.0139221, 1, 0, 0.496984,-0.000285688)    );
  // itree = 635
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876417,-0.0389626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759533,0.00172468) , 
2, 0.00690569, 1, 0, 0.776943,-0.00113798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732796,-0.0305639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625392,0.0133085) , 
4, 0.0163818, 1, 0, 0.670235,-0.011556) , 
2, 0.0725214, 1, 0, 0.757701,-0.00301664) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940206,0.0281261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831733,0.00498899) , 
2, 0.114479, 1, 0, 0.842799,0.00531588) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130976) , 
0, 0.0117643, 1, 0, 0,-0.000296115) , 
0, 0.00358032, 1, 0, 0.344066,0.00199493) , 
2, 0.0951916, 1, 0, 0.506637,2.52372e-05)    );
  // itree = 636
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845549,0.0569339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953904,0.0407672) , 
4, 0.00619241, 1, 0, 0.911105,0.00711874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0829328,0.00229677) , 
2, 0.047497, 1, 0, 0.472276,0.00380396) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6841,-0.00507333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710814,-0.0187137) , 
4, 0.0153535, 1, 0, 0.69045,-0.00415575) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.480033,-0.00510054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381277,0.00947965) , 
3, 37.8578, 1, 0, 0.421687,0.000638781) , 
4, 0.0167831, 1, 0, 0.509952,-0.000935797) , 
4, 0.00927535, 1, 0, 0.504617,-0.000264599)    );
  // itree = 637
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978989,0.00116614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888996,-0.00967828) , 
0, 0.000339805, 1, 0, 0.93216,-0.00480115) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0044002,0.0115721) , 
6, 0.0324503, 1, 0, 0.00123531,-7.93681e-06) , 
0, 0.00238398, 1, 0, 0.542676,-0.00279574) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685646,0.0128302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.331675,0.0136013) , 
4, 0.0139121, 1, 0, 0.459375,0.00706375) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.369273,0.00978777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121709,-0.0207563) , 
3, 121.931, 1, 0, 0.227267,-0.00127452) , 
5, 0.0181877, 1, 0, 0.312195,0.00177646) , 
3, 88.2938, 1, 0, 0.496359,-0.00187693)    );
  // itree = 638
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895299,0.0332353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804971,-0.0527835) , 
3, 54.3974, 1, 0, 0.864633,-0.00395696) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532939,0.0238437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0113167,-0.00686608) , 
2, 0.137097, 1, 0, 0.219515,0.00151799) , 
2, 0.0237921, 1, 0, 0.341928,0.000479103) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771807,-0.0120396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.505221,-0.000374486) , 
2, 0.118979, 1, 0, 0.612167,-0.00184694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485009,-0.033981) , 
1, 1.82844, 1, 0, 0.60625,-0.00261312) , 
6, 0.0255134, 1, 0, 0.497611,-0.00134219)    );
  // itree = 639
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82125,0.0236814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666521,-0.141235) , 
6, 0.013763, 1, 0, 0.74729,-0.0038922) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.300958,0.0147981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00943077,-0.0160895) , 
5, 0.00925326, 1, 0, 0.0642063,9.45601e-05) , 
2, 0.0237905, 1, 0, 0.150869,-0.00041124) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940669,0.02726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75356,-0.00246868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848806,0.00870529) , 
7, 0.00025693, 1, 0, 0.816985,0.00214352) , 
6, 0.0231029, 1, 0, 0.82799,0.00273762) , 
7, 8.86924e-05, 1, 0, 0.508777,0.00125316)    );
  // itree = 640
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985491,-0.0131771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614132,0.0193891) , 
0, 0.00118221, 1, 0, 0.868708,5.52153e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70553,-0.0474417) , 
3, 73.4777, 1, 0, 0.836077,-0.00447977) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685601,0.0111628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585374,0.00032608) , 
5, 0.0137279, 1, 0, 0.615523,0.00162667) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135765,-0.00896449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29049,0.00136302) , 
5, 0.018092, 1, 0, 0.245271,-0.00184694) , 
2, 0.205125, 1, 0, 0.448333,5.81369e-05) , 
2, 0.0237986, 1, 0, 0.50485,-0.000603307)    );
  // itree = 641
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696327,-0.0153375) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56684,-0.0170993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.305766,0.00942412) , 
3, 75.4278, 1, 0, 0.498745,-0.00358613) , 
5, 0.00576011, 1, 0, 0.523337,-0.00467033) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951043,-0.015946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821826,0.0179235) , 
2, 0.285588, 1, 0, 0.931692,-0.00315947) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89602,0.0106972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.80169e-05,-0.00992802) , 
0, 0.00346679, 1, 0, 0.329831,0.00249607) , 
0, 0.00119344, 1, 0, 0.494757,0.000946298) , 
4, 0.0116006, 1, 0, 0.500984,-0.000277416)    );
  // itree = 642
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244431,-0.00256138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.434286,-0.0274861) , 
4, 0.00397451, 1, 0, 0.347112,-0.00888768) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582467,-0.00695675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561701,-0.0289703) , 
3, 34.2501, 1, 0, 0.58065,-0.00353127) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.557105,0.00840958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356309,-0.00578286) , 
3, 81.1209, 1, 0, 0.473113,0.000423547) , 
3, 37.8555, 1, 0, 0.519856,-0.00129551) , 
4, 0.00695659, 1, 0, 0.504342,-0.00197738)    );
  // itree = 643
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962521,-0.00263903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932569,0.0267631) , 
0, 0.000453995, 1, 0, 0.951821,0.00474987) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.827694,-0.00505377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000692101,0.000738568) , 
0, 0.00232743, 1, 0, 0.114755,-0.00089463) , 
0, 0.00119179, 1, 0, 0.396354,0.00100425) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687307,0.00855055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311892,-0.0240707) , 
3, 113.298, 1, 0, 0.636265,0.000839817) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.58816,-0.00670087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597193,-0.0327729) , 
6, 0.0361734, 1, 0, 0.589905,-0.00604709) , 
1, 1.3227, 1, 0, 0.616904,-0.00203639) , 
6, 0.030152, 1, 0, 0.50061,-0.000433079)    );
  // itree = 644
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992513,0.0379977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561364,0.0597058) , 
0, 0.00118818, 1, 0, 0.865009,0.00503235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781709,-0.00885799) , 
2, 0.0169918, 1, 0, 0.84487,0.00333716) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667265,-0.0056525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251278,-0.0166308) , 
3, 113.565, 1, 0, 0.625739,-0.00308821) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.419973,0.0133964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204984,-0.00232555) , 
2, 0.258037, 1, 0, 0.265237,0.000630355) , 
2, 0.18246, 1, 0, 0.444214,-0.00121579) , 
2, 0.0237986, 1, 0, 0.502606,-0.000552235)    );
  // itree = 645
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996213,0.010598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633197,-0.00629976) , 
0, 2.7048e-05, 1, 0, 0.95957,-0.000967895) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811076,-0.0192566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883021,-0.0021233) , 
0, 0.000984832, 1, 0, 0.842572,-0.0158771) , 
0, 0.000568153, 1, 0, 0.938129,-0.00370013) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.401792,-0.0190632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106043,0.000313774) , 
2, 0.0713812, 1, 0, 0.167225,-0.00250159) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954641,0.00798339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00112365,-0.00345963) , 
0, 0.00234398, 1, 0, 0.319315,0.00160117) , 
4, 0.0139306, 1, 0, 0.283293,0.000629461) , 
0, 0.00119316, 1, 0, 0.500409,-0.000806046)    );
  // itree = 646
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650266,-0.00950498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.31496,0.00936514) , 
3, 100.749, 1, 0, 0.606733,-0.00231717) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47504,0.00520482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0591804,-0.0135981) , 
2, 0.380355, 1, 0, 0.406876,0.000301494) , 
4, 0.0139209, 1, 0, 0.477609,-0.000625307) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.727609,-0.0249987) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639132,-0.0067901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517377,0.0218427) , 
3, 73.3911, 1, 0, 0.601071,-0.000221646) , 
2, 0.0958619, 1, 0, 0.636847,-0.00433125) , 
6, 0.0417491, 1, 0, 0.504825,-0.0012587)    );
  // itree = 647
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707876,-0.0100594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897622,0.0191431) , 
5, 0.00606505, 1, 0, 0.851342,0.00316542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.057389,-0.0505078) , 
5, 0.0114551, 1, 0, 0.520132,-0.00262589) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688598,0.011706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67895,0.0664362) , 
4, 0.0126181, 1, 0, 0.684542,0.00880068) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0977322,-0.0175555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544313,0.00583734) , 
5, 0.0136842, 1, 0, 0.481982,0.000797198) , 
4, 0.0133763, 1, 0, 0.499149,0.00147551) , 
4, 0.0115997, 1, 0, 0.503863,0.000554189)    );
  // itree = 648
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821119,0.0232754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1654,-0.00612772) , 
2, 0.0475813, 1, 0, 0.363566,-0.000633024) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552221,-0.00627086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583267,0.0287403) , 
1, 1.69883, 1, 0, 0.57093,0.00589878) , 
6, 0.0272781, 1, 0, 0.390261,0.000207845) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631721,0.00570212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621679,-0.00622703) , 
6, 0.0382825, 1, 0, 0.625706,-0.000757465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537826,-0.0289325) , 
1, 1.54503, 1, 0, 0.617764,-0.00220095) , 
6, 0.0301521, 1, 0, 0.496531,-0.000917336)    );
  // itree = 649
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.257675,0.00753077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293571,0.000603981) , 
3, 6.61505, 1, 0, 0.275134,0.000404427) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794115,-0.0138245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828811,-0.00214888) , 
7, 0.000329721, 1, 0, 0.810569,-0.00724567) , 
7, 0.000132165, 1, 0, 0.550405,-0.00352854) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.565603,0.00228321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.47323,-0.0130064) , 
3, 72.0991, 1, 0, 0.544934,-0.000658946) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798871,0.00945013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132447) , 
0, 0.00356566, 1, 0, 0.224497,0.0027607) , 
3, 108.717, 1, 0, 0.492084,-9.49411e-05) , 
3, 12.6138, 1, 0, 0.501281,-0.000636406)    );
  // itree = 650
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.284014,-0.00405804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822506,-0.0192096) , 
7, 0.000143454, 1, 0, 0.553107,-0.00670408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.516482,-0.002366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.661375,-0.010309) , 
6, 0.0440683, 1, 0, 0.533221,-0.00133451) , 
3, 16.1838, 1, 0, 0.53774,-0.00255463) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758493,0.0127617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131637) , 
0, 0.00357387, 1, 0, 0.198627,0.00376406) , 
3, 113.297, 1, 0, 0.493732,-0.00173464)    );
  // itree = 651
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.33174,-0.018898) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74738,0.00803983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497138,-0.0155519) , 
6, 0.0253996, 1, 0, 0.67656,-0.000605033) , 
5, 0.00595424, 1, 0, 0.600666,-0.00250743) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947162,0.0291816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95291,0.00479469) , 
5, 0.0150516, 1, 0, 0.952321,0.0034769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00252672,-0.00534675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.8591e-05,-0.00137281) , 
5, 0.0257467, 1, 0, 0.00077989,-0.00025645) , 
0, 0.00238455, 1, 0, 0.466079,0.00156914) , 
5, 0.0138651, 1, 0, 0.50629,0.00035116)    );
  // itree = 652
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.384733,-0.015892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.373891,0.00510556) , 
5, 0.00609461, 1, 0, 0.377176,-0.000955041) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910265,-0.00894817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407235,-0.0101459) , 
2, 0.188774, 1, 0, 0.815241,-0.00542245) , 
7, 8.83563e-05, 1, 0, 0.639942,-0.00363474) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789916,0.0144919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.234505,-0.00391618) , 
5, 0.0218849, 1, 0, 0.409492,0.00126695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156278,-0.0218619) , 
3, 112.965, 1, 0, 0.36998,0.000256567) , 
5, 0.0182022, 1, 0, 0.498838,-0.00160083)    );
  // itree = 653
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668564,-0.0136839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501699,0.00958586) , 
4, 0.0162278, 1, 0, 0.574641,-0.000726518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547681,-0.0373914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560402,0.0138921) , 
3, 22.4885, 1, 0, 0.554582,-0.0099045) , 
3, 20.4279, 1, 0, 0.570816,-0.00247663) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796708,-0.0223609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195534,0.000699536) , 
2, 0.0475842, 1, 0, 0.363469,-0.00112799) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679863,0.0168848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532956,-0.00510687) , 
4, 0.0209504, 1, 0, 0.619258,0.00238783) , 
6, 0.0301523, 1, 0, 0.483271,0.000518688) , 
3, 25.2368, 1, 0, 0.51008,-0.00039856)    );
  // itree = 654
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898051,-0.0554489) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287439,-0.00855669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197263,0.00941196) , 
3, 37.7217, 1, 0, 0.234177,0.000121849) , 
2, 0.0237906, 1, 0, 0.446895,-0.00729634) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550234,0.00195275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739113,0.0156344) , 
6, 0.0347853, 1, 0, 0.621634,0.00180242) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.229659,-0.0121246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.242519,0.00529882) , 
3, 49.9891, 1, 0, 0.236285,-0.0017209) , 
2, 0.261788, 1, 0, 0.503347,0.000720898) , 
4, 0.00928328, 1, 0, 0.494772,-0.000496923)    );
  // itree = 655
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842236,0.00739409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736214,-0.0217708) , 
2, 0.0302633, 1, 0, 0.825758,-0.000655416) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918173,0.0118058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132545) , 
0, 0.00358032, 1, 0, 0.556475,0.003651) , 
2, 0.0373884, 1, 0, 0.634888,0.00239701) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719405,-0.0150088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800056,0.00577876) , 
3, 49.6283, 1, 0, 0.759861,-0.00818314) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00111931,0.0363019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000307955,-0.00863146) , 
3, 50.5159, 1, 0, 0.000705977,0.000126912) , 
0, 0.00238462, 1, 0, 0.205183,-0.00211139) , 
2, 0.261777, 1, 0, 0.504463,0.00102862)    );
  // itree = 656
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981818,-0.00419356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981918,0.0391428) , 
3, 87.4391, 1, 0, 0.981828,0.000317364) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931233,-0.0172673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835367,0.000459294) , 
2, 0.173035, 1, 0, 0.883838,-0.00694067) , 
2, 0.0712455, 1, 0, 0.929419,-0.00356455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00272806,0.0234777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000851015,-0.00792736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00114799,0.0285024) , 
5, 0.0231066, 1, 0, 0.00103326,-9.61559e-05) , 
6, 0.00930127, 1, 0, 0.0013811,0.0002094) , 
0, 0.00238258, 1, 0, 0.502264,-0.00182749)    );
  // itree = 657
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.588243,-0.0216169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462868,-0.00067003) , 
3, 37.4482, 1, 0, 0.522383,-0.00664098) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954068,0.0134657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.4453e-05,-0.0114236) , 
0, 0.00238727, 1, 0, 0.386215,0.00212528) , 
5, 0.00750349, 1, 0, 0.405155,0.000905924) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671779,0.00012178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639546,-0.00912285) , 
1, 1.3227, 1, 0, 0.658378,-0.00202581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.326845,-0.0171708) , 
3, 113.43, 1, 0, 0.620629,-0.00299365) , 
6, 0.0301521, 1, 0, 0.507798,-0.000951661)    );
  // itree = 658
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888079,-0.0201901) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961522,-0.0012138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793616,-0.00901608) , 
2, 0.213505, 1, 0, 0.924612,-0.00298361) , 
4, 0.0071565, 1, 0, 0.922075,-0.00413531) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00379226,0.013753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000141025,0.00388018) , 
4, 0.0162411, 1, 0, 0.00116636,0.000468502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00203783,-0.0110499) , 
6, 0.0347559, 1, 0, 0.00137937,-5.10146e-05) , 
0, 0.00238688, 1, 0, 0.505661,-0.00228806)    );
  // itree = 659
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.856699,0.0292104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754398,0.00366628) , 
3, 24.9681, 1, 0, 0.788223,0.00208553) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606594,-0.0326384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282678,-0.000761869) , 
2, 0.0917954, 1, 0, 0.313475,-0.00126984) , 
2, 0.0713763, 1, 0, 0.473826,-0.00013653) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657689,-0.0224576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552579,-0.00578316) , 
2, 0.167043, 1, 0, 0.601195,-0.00759977) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922266,0.0144678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479647,-0.00369136) , 
0, 0.00118209, 1, 0, 0.620236,0.000198498) , 
6, 0.0447482, 1, 0, 0.611849,-0.00323627) , 
6, 0.0417492, 1, 0, 0.497924,-0.000677739)    );
  // itree = 660
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94933,0.0103816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00182921,-0.0154497) , 
0, 0.00182378, 1, 0, 0.692142,0.00197532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00012011,0.00554942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0237728) , 
7, -0.000700263, 1, 0, 7.13527e-05,-0.0019665) , 
4, 0.0162389, 1, 0, 0.408166,0.000357875) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935332,-0.0143265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0012332,-0.000639073) , 
0, 0.00238398, 1, 0, 0.621668,-0.00564942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774325,0.0711989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547335,-0.00114302) , 
2, 0.167107, 1, 0, 0.639163,0.00403016) , 
6, 0.0456154, 1, 0, 0.625021,-0.0037941) , 
6, 0.0324714, 1, 0, 0.49744,-0.0013514)    );
  // itree = 661
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892561,0.0574948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840337,-0.00409844) , 
2, 0.00603376, 1, 0, 0.862131,0.00180589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84472,0.0615852) , 
2, 0.015859, 1, 0, 0.857313,0.00330111) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505277,0.00989636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413744,-0.00345395) , 
3, 12.6184, 1, 0, 0.427103,-0.000393863) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628433,-0.0202661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585189,-0.0020008) , 
3, 24.4647, 1, 0, 0.597206,-0.00390663) , 
6, 0.0440686, 1, 0, 0.449203,-0.000850237) , 
2, 0.0237979, 1, 0, 0.506651,-0.000265869)    );
  // itree = 662
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93346,0.0296203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636636,0.0289655) , 
2, 0.0270255, 1, 0, 0.821178,0.00706388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976412,-0.00852812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54351,0.0104825) , 
0, 0.00119363, 1, 0, 0.748322,0.000171145) , 
4, 0.00930335, 1, 0, 0.764629,0.00171392) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690773,-0.00862403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00152268,-0.0060201) , 
0, 0.00194391, 1, 0, 0.168465,-0.00579849) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.482451,-0.0339783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38119,0.00083187) , 
2, 0.114479, 1, 0, 0.388389,-0.000391126) , 
4, 0.0139209, 1, 0, 0.340186,-0.00157631) , 
2, 0.0951945, 1, 0, 0.50336,-0.000311412)    );
  // itree = 663
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859196,-0.0720982) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843097,-0.0225487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83835,0.0256472) , 
2, 0.0156737, 1, 0, 0.841117,-0.000965901) , 
2, 0.00678362, 1, 0, 0.847178,-0.00597105) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554909,-0.0140414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466312,0.00246416) , 
3, 25.1874, 1, 0, 0.494025,-0.00199152) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579296,0.0148599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.191876,-0.00792365) , 
5, 0.022868, 1, 0, 0.411545,0.0012998) , 
4, 0.0162337, 1, 0, 0.440591,0.000140712) , 
2, 0.0237979, 1, 0, 0.498497,-0.000729724)    );
  // itree = 664
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871159,0.0546781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942522,0.0850959) , 
8, 0.0479889, 1, 0, 0.900868,0.00599931) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.772592,-0.0134275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810609,0.0211893) , 
6, 0.0188285, 1, 0, 0.796033,0.00100291) , 
3, 36.7491, 1, 0, 0.846008,0.00338472) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87172,-0.00611685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00150137,0.000281756) , 
0, 0.00298237, 1, 0, 0.507836,-0.00339122) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737966,0.00857344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.320221,-0.00627728) , 
4, 0.0193342, 1, 0, 0.40832,-0.00026916) , 
4, 0.0162411, 1, 0, 0.442974,-0.00135633) , 
2, 0.0237986, 1, 0, 0.499141,-0.000695613)    );
  // itree = 665
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933293,-0.00664895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949,0.00970845) , 
0, 0.00165328, 1, 0, 0.935766,-0.00217571) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816242,-0.0403696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973425,0.023365) , 
5, 0.0229636, 1, 0, 0.895299,-0.0188804) , 
0, 0.00204259, 1, 0, 0.931887,-0.00377684) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00355269,0.0121105) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00048165,-0.0120816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00103148,0.0128909) , 
3, 63.1505, 1, 0, 0.000732741,-0.000223465) , 
4, 0.0162349, 1, 0, 0.00155626,0.000243192) , 
0, 0.00238727, 1, 0, 0.499583,-0.00190882)    );
  // itree = 666
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.400906,-0.00857016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.270943,0.00160844) , 
3, 37.8422, 1, 0, 0.325964,-0.000615181) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900234,-0.0074609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621748,-0.0257673) , 
5, 0.020347, 1, 0, 0.855872,-0.00717979) , 
7, 0.000211428, 1, 0, 0.477733,-0.00249532) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62017,0.0128121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654155,-0.0104897) , 
6, 0.0462943, 1, 0, 0.62922,0.00119998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62907,0.0238329) , 
6, 0.0477162, 1, 0, 0.629196,0.00228478) , 
6, 0.0417491, 1, 0, 0.503554,-0.0016804)    );
  // itree = 667
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996244,0.024489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722891,-0.00479912) , 
0, 4.32854e-05, 1, 0, 0.94722,-0.000146043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902522,0.0156625) , 
0, 0.000909401, 1, 0, 0.942767,0.000951084) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930747,-0.00437649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72972,-0.0139966) , 
2, 0.308244, 1, 0, 0.904102,-0.00610751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00093751,0.00367794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00353878,-0.00771533) , 
6, 0.0347838, 1, 0, 0.00158974,-9.33157e-05) , 
0, 0.00233047, 1, 0, 0.279663,-0.00194635) , 
0, 0.00119363, 1, 0, 0.497597,-0.000994086)    );
  // itree = 668
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761891,0.00321851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622958,-0.00887528) , 
2, 0.0845889, 1, 0, 0.740069,0.000104573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607614,0.0202158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466794,0.00113211) , 
3, 50.0567, 1, 0, 0.547135,0.00421314) , 
2, 0.111053, 1, 0, 0.700142,0.000954827) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.480119,-0.0775566) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.10045,-0.00583213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.320997,0.00133092) , 
4, 0.0162398, 1, 0, 0.264604,-0.000746082) , 
2, 0.182489, 1, 0, 0.278084,-0.00172325) , 
2, 0.166585, 1, 0, 0.506277,-0.000275301)    );
  // itree = 669
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917177,-0.00834129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.755599,-0.0178146) , 
4, 0.0123176, 1, 0, 0.889875,-0.00817453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946994,-4.00165e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918045,-0.0193418) , 
0, 0.00215301, 1, 0, 0.94453,-0.00119856) , 
5, 0.0133342, 1, 0, 0.926716,-0.0034723) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00235603,0.0284741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0027614,-0.00785171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013094) , 
0, 0.00995821, 1, 0, 0.000713857,-0.000567091) , 
6, 0.00927015, 1, 0, 0.00107588,-0.000163244) , 
0, 0.00238727, 1, 0, 0.496727,-0.00193514)    );
  // itree = 670
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955261,-0.00513225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769054,0.00654362) , 
2, 0.308239, 1, 0, 0.937892,-0.00154211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806855,-0.0103653) , 
3, 111.796, 1, 0, 0.929727,-0.00234614) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00123827,0.00234656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00165624,-0.0105743) , 
6, 0.0254916, 1, 0, 0.00141708,-0.000442058) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0019502,0.0278685) , 
6, 0.0254904, 1, 0, 0.000868604,0.000394781) , 
2, 0.262242, 1, 0, 0.00115769,-4.62891e-05) , 
0, 0.00238582, 1, 0, 0.498558,-0.00127823)    );
  // itree = 671
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677649,-0.0221833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627999,-0.00172244) , 
3, 37.6115, 1, 0, 0.651454,-0.00858021) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.378253,0.0485359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211056,-0.0205556) , 
3, 36.6974, 1, 0, 0.276511,-0.00237868) , 
6, 0.016079, 1, 0, 0.442548,-0.00512493) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737139,0.0177504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426282,-0.00861256) , 
3, 99.1288, 1, 0, 0.700733,0.00394156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.565715,0.00563319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330556,-0.00813314) , 
2, 0.142784, 1, 0, 0.418875,-0.00104041) , 
4, 0.0167983, 1, 0, 0.511916,0.000604124) , 
4, 0.00928404, 1, 0, 0.501254,-0.000276397)    );
  // itree = 672
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227926,0.0279344) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589035,0.0172083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578165,-0.0037966) , 
3, 7.2, 1, 0, 0.584362,0.00222836) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680598,-0.00569184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.231223,0.00449384) , 
4, 0.0214192, 1, 0, 0.505511,-0.00129428) , 
3, 12.603, 1, 0, 0.517782,-0.000746072) , 
4, 0.00464256, 1, 0, 0.502776,-0.000356633)    );
  // itree = 673
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810312,-0.0449786) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68808,-0.0531157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939085,0.0403823) , 
8, 0.0336566, 1, 0, 0.851657,-0.0023863) , 
6, 0.013951, 1, 0, 0.842316,-0.00550213) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946113,0.0304106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00508542,-0.00480361) , 
0, 0.00118182, 1, 0, 0.19254,0.00169743) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586761,0.00123111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437892,-0.0209703) , 
1, 1.8433, 1, 0, 0.570346,-0.000864202) , 
6, 0.0232251, 1, 0, 0.443652,-5.18234e-06) , 
2, 0.0237986, 1, 0, 0.500078,-0.000783198)    );
  // itree = 674
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787997,-0.0234703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927132,0.0182459) , 
8, 0.0418946, 1, 0, 0.843432,-0.00403681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692249,0.0160263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605951,-0.000358002) , 
3, 25.0963, 1, 0, 0.634164,0.00144145) , 
2, 0.0181245, 1, 0, 0.673821,0.000403292) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882253,-0.0178858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24678,-0.00851836) , 
0, 0.00119109, 1, 0, 0.369727,-0.00723967) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.309427,0.0205722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167161,-0.00550659) , 
2, 0.331415, 1, 0, 0.204258,0.000288905) , 
2, 0.278809, 1, 0, 0.258974,-0.00220058) , 
2, 0.190383, 1, 0, 0.50239,-0.000672735)    );
  // itree = 675
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956481,0.000851681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165366,-0.0102064) , 
0, 0.000761598, 1, 0, 0.474483,-0.0028549) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.347429,0.00335942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486653,-0.00675218) , 
6, 0.0301175, 1, 0, 0.396955,-0.000346396) , 
5, 0.00925812, 1, 0, 0.411234,-0.000808393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.847074,0.0339193) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921524,-0.00844215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787917,0.0189888) , 
0, 0.00188442, 1, 0, 0.854231,0.000789838) , 
7, 0.000364761, 1, 0, 0.853379,0.00223527) , 
7, 0.000340735, 1, 0, 0.509786,-0.000129977)    );
  // itree = 676
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854439,0.0766183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576847,0.00489319) , 
2, 0.0316976, 1, 0, 0.723467,0.00342525) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834739,-0.0273686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779054,0.00594792) , 
2, 0.0181338, 1, 0, 0.791348,-0.000963714) , 
6, 0.0255126, 1, 0, 0.758832,0.00113868) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.599912,-0.00755682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419428,-0.0455441) , 
3, 62.206, 1, 0, 0.542652,-0.00914878) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.252122,-0.000879154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603544,-0.0108241) , 
6, 0.044074, 1, 0, 0.299777,-0.000929936) , 
2, 0.133744, 1, 0, 0.335972,-0.00215478) , 
2, 0.0951945, 1, 0, 0.499206,-0.000883431)    );
  // itree = 677
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233569,-0.0065728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488681,-0.0611666) , 
4, 0.00497399, 1, 0, 0.326067,-0.00919464) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.349335,-0.00322822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868177,0.00933218) , 
7, 0.000256743, 1, 0, 0.495888,0.000703453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719015,-0.0179127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627808,-0.00156234) , 
2, 0.0953921, 1, 0, 0.653768,-0.00403175) , 
6, 0.0440684, 1, 0, 0.515587,0.000112642) , 
4, 0.00696502, 1, 0, 0.498227,-0.000739902)    );
  // itree = 678
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926135,-0.00164086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882792,-0.0301615) , 
5, 0.0109652, 1, 0, 0.917719,-0.00659314) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950787,0.00648466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921555,-0.00583465) , 
4, 0.0173401, 1, 0, 0.933405,-0.000773366) , 
4, 0.0118727, 1, 0, 0.929593,-0.0021876) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000479503,0.000281959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0019805,-0.00935426) , 
6, 0.0347576, 1, 0, 0.00085439,-0.000294361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00286907,0.012414) , 
3, 113.615, 1, 0, 0.00127826,2.88799e-06) , 
0, 0.00238688, 1, 0, 0.489248,-0.00114854)    );
  // itree = 679
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898789,0.00593346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52973,0.0219811) , 
2, 0.0725214, 1, 0, 0.796001,0.0041863) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.308454,-0.0368587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667134,0.00794378) , 
4, 0.0139763, 1, 0, 0.611487,-0.000390394) , 
5, 0.0134118, 1, 0, 0.674264,0.00116673) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498607,-0.0112436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901968,8.94772e-05) , 
4, 0.0171669, 1, 0, 0.815396,-0.00643628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00180078,0.014509) , 
6, 0.032439, 1, 0, 0.00057948,3.43723e-05) , 
0, 0.00238358, 1, 0, 0.249431,-0.00194182) , 
2, 0.190389, 1, 0, 0.493878,-0.000153172)    );
  // itree = 680
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935152,-0.00459179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519635,-0.0171651) , 
0, 0.00219742, 1, 0, 0.904549,-0.00324576) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130955) , 
5, 0.0231232, 1, 0, 0,-0.000232661) , 
0, 0.00357693, 1, 0, 0.557236,-0.00208884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0675656,-0.00570404) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.746516,0.0171618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668341,0.00360256) , 
6, 0.039344, 1, 0, 0.710791,0.00678996) , 
7, 0.000105965, 1, 0, 0.297866,0.00178158) , 
3, 88.2226, 1, 0, 0.503038,-0.00128009)    );
  // itree = 681
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.536285,0.0229456) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481038,-0.0118868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629867,-0.0219095) , 
6, 0.0324601, 1, 0, 0.541407,-0.00874172) , 
3, 2.40491, 1, 0, 0.540404,-0.00577191) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.422627,-0.00185332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754564,-0.0115315) , 
7, 9.47631e-05, 1, 0, 0.565365,-0.00366036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4222,0.000168213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696788,0.0163133) , 
6, 0.0440686, 1, 0, 0.463791,0.000819445) , 
4, 0.0139198, 1, 0, 0.495142,-0.00056327) , 
3, 12.6199, 1, 0, 0.502299,-0.00138685)    );
  // itree = 682
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960564,-0.00377409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484759,-0.0100698) , 
2, 0.237485, 1, 0, 0.924156,-0.00385957) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00308571,0.0106421) , 
7, -0.000139902, 1, 0, 0.00081296,0.000171877) , 
0, 0.00238688, 1, 0, 0.40225,-0.00158085) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910185,0.00810518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853411,-0.014442) , 
2, 0.16295, 1, 0, 0.890188,0.000249337) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774352,0.0163856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832956,0.0238629) , 
1, 1.17349, 1, 0, 0.800812,0.0109843) , 
2, 0.285194, 1, 0, 0.865763,0.00318304) , 
7, 0.000340736, 1, 0, 0.502183,-0.00055376)    );
  // itree = 683
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.590437,-0.0127698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550505,0.0115562) , 
3, 2.91708, 1, 0, 0.561421,0.000336147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50369,-0.0321762) , 
3, 10.2087, 1, 0, 0.549676,-0.00491717) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.437905,0.00166364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743361,-0.0126768) , 
7, 9.08522e-05, 1, 0, 0.575805,-0.00334309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.496352,0.00623198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122818,-0.011899) , 
2, 0.42838, 1, 0, 0.458699,0.000902355) , 
5, 0.0137483, 1, 0, 0.492129,-0.000309594) , 
3, 12.6149, 1, 0, 0.501038,-0.0010229)    );
  // itree = 684
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964299,0.0145163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0382654,-0.00973436) , 
0, 0.00119179, 1, 0, 0.367388,0.000411665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932092,-0.00940635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500204,-0.000181753) , 
0, 0.00119344, 1, 0, 0.64908,-0.00176984) , 
6, 0.0255134, 1, 0, 0.532661,-0.000868255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114544,-0.0139851) , 
3, 138.749, 1, 0, 0.499245,-0.00137303)    );
  // itree = 685
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875022,0.0444559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453025,-0.00796446) , 
2, 0.0475809, 1, 0, 0.565127,-0.00185156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.749821,-0.0384747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368232,-0.0240363) , 
2, 0.0951687, 1, 0, 0.541552,-0.0186481) , 
3, 20.4288, 1, 0, 0.560584,-0.005088) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0387176,-0.0187494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823717,0.00949915) , 
7, 3.02122e-05, 1, 0, 0.456041,0.00163266) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580333,0.00982481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613256,-0.0253052) , 
1, 1.07278, 1, 0, 0.602426,-0.00518611) , 
6, 0.0440684, 1, 0, 0.473357,0.000826047) , 
3, 25.2382, 1, 0, 0.499696,-0.000959743)    );
  // itree = 686
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.397064,-0.000209577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561079,-0.0311578) , 
6, 0.0303997, 1, 0, 0.407886,-0.000815183) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.612859,0.0107802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619101,-0.0127628) , 
6, 0.038, 1, 0, 0.613823,0.00211386) , 
6, 0.0319221, 1, 0, 0.460328,-6.92988e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676416,0.0222279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642445,-0.00657806) , 
3, 24.535, 1, 0, 0.652537,-0.000360532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569624,-0.020274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668322,-0.00124379) , 
5, 0.0232122, 1, 0, 0.637882,-0.00701655) , 
6, 0.0451751, 1, 0, 0.646976,-0.00288597) , 
6, 0.0394336, 1, 0, 0.504125,-0.000730232)    );
  // itree = 687
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859383,-0.0189358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94171,-0.00216885) , 
5, 0.00642257, 1, 0, 0.935201,-0.00212083) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666156,-0.0194497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928986,-0.00970361) , 
6, 0.030319, 1, 0, 0.892392,-0.0133967) , 
0, 0.00135922, 1, 0, 0.920953,-0.00587377) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00341187,0.00896951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013098) , 
4, 0.0162398, 1, 0, 0.000984869,0.000252444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00145051,-0.0102441) , 
6, 0.0347718, 1, 0, 0.00110288,-0.000120998) , 
0, 0.0023826, 1, 0, 0.493434,-0.00320005)    );
  // itree = 688
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535103,-0.00709117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610627,-0.0334396) , 
7, 0.000100543, 1, 0, 0.554387,-0.00522398) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.754708,0.0150061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404983,-0.00687394) , 
4, 0.0186757, 1, 0, 0.542675,0.00080602) , 
4, 0.0116157, 1, 0, 0.545363,-0.000577654) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820424,0.0170183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133481) , 
0, 0.00357387, 1, 0, 0.269563,0.0043286) , 
3, 100.907, 1, 0, 0.502932,0.000177151)    );
  // itree = 689
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997232,0.00166042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815116,-0.0190159) , 
0, 8.03166e-05, 1, 0, 0.943436,-0.00788968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877185,0.0122691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00166089,-0.0160047) , 
0, 0.00164722, 1, 0, 0.319988,0.00127309) , 
0, 0.000843381, 1, 0, 0.566526,-0.00235026) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801913,0.0245319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.249657,0.000965923) , 
4, 0.0230142, 1, 0, 0.663387,0.00329245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544649,-0.0180047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.322538,0.00450336) , 
2, 0.172295, 1, 0, 0.379068,-0.000381607) , 
2, 0.0952163, 1, 0, 0.466706,0.000750887) , 
5, 0.0136776, 1, 0, 0.495896,-0.000155969)    );
  // itree = 690
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940598,0.0078642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853396,-0.0543106) , 
2, 0.0135847, 1, 0, 0.890183,-0.00767958) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680329,-0.00060313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575867,0.0544359) , 
2, 0.0249394, 1, 0, 0.629168,0.00204781) , 
4, 0.0162235, 1, 0, 0.799914,-0.00431547) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907531,-0.00100306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837796,0.00990546) , 
0, 0.00101038, 1, 0, 0.871292,0.00394092) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.65632e-05,-0.00500861) , 
0, 0.0107395, 1, 0, 4.20167e-05,-0.000187464) , 
0, 0.00357949, 1, 0, 0.402967,0.00172178) , 
2, 0.0475958, 1, 0, 0.497127,0.000289683)    );
  // itree = 691
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549093,-0.0144975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391612,0.00355126) , 
5, 0.00725798, 1, 0, 0.414491,-2.14841e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.153625,0.0371082) , 
3, 100.947, 1, 0, 0.372136,0.00118278) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668,-0.00818975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636276,0.00851761) , 
3, 64.7236, 1, 0, 0.660413,-0.00200628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334339,-0.0134203) , 
3, 113.297, 1, 0, 0.623673,-0.00271322) , 
6, 0.0278417, 1, 0, 0.504661,-0.000869883)    );
  // itree = 692
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509073,-0.0143465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679007,0.0161286) , 
6, 0.0370831, 1, 0, 0.557875,-0.00241391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521777,-0.0390876) , 
3, 21.6248, 1, 0, 0.552753,-0.00413951) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485093,-0.00570902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337918,0.00783293) , 
4, 0.0116089, 1, 0, 0.377932,0.000582553) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839056,0.00312944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895745,-0.0188672) , 
1, 1.24968, 1, 0, 0.850714,-0.00248015) , 
7, 0.000347868, 1, 0, 0.477004,-5.92426e-05) , 
3, 25.2289, 1, 0, 0.50029,-0.00131357)    );
  // itree = 693
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709687,-0.0106003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248815,0.0145793) , 
2, 0.214116, 1, 0, 0.556651,-0.00122249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551071,-0.0405725) , 
3, 34.1806, 1, 0, 0.556197,-0.00252265) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939262,0.0170301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132554) , 
0, 0.00357949, 1, 0, 0.574143,0.00391438) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848997,0.0122491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124571,-0.0103673) , 
0, 0.00119231, 1, 0, 0.221359,-0.00112708) , 
2, 0.237979, 1, 0, 0.444362,0.00205974) , 
3, 37.7809, 1, 0, 0.49318,5.9415e-05)    );
  // itree = 694
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.503919,0.00920386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371723,-0.00786258) , 
4, 0.00695912, 1, 0, 0.388151,-0.000886893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559994,-0.0189196) , 
6, 0.0287182, 1, 0, 0.398964,-0.00160399) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780186,0.0115902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292185,-0.00668128) , 
4, 0.023222, 1, 0, 0.661979,0.00300294) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488731,0.00502674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.207548,-0.0114396) , 
1, 1.15586, 1, 0, 0.30729,-0.00324953) , 
2, 0.356239, 1, 0, 0.600274,0.0019152) , 
6, 0.0301547, 1, 0, 0.495369,8.13022e-05)    );
  // itree = 695
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959353,-0.0018674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982316,0.0436912) , 
0, 0.000700351, 1, 0, 0.966121,0.00324702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00312673,-0.0048514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000744708,0.017507) , 
2, 0.262044, 1, 0, 0.00200911,-0.000128486) , 
0, 0.00119291, 1, 0, 0.17749,0.000485899) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932172,-0.00865488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516028,0.00103734) , 
0, 0.00198488, 1, 0, 0.838996,-0.00389681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.746651,0.0129798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599162,0.00249593) , 
2, 0.190412, 1, 0, 0.675673,0.00478359) , 
3, 100.175, 1, 0, 0.821349,-0.0029589) , 
7, 0.000105966, 1, 0, 0.505034,-0.00126654)    );
  // itree = 696
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652668,0.00148232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605804,0.0307587) , 
3, 81.6737, 1, 0, 0.648995,0.00129679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495046,0.00417006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462153,-0.0109701) , 
3, 43.2494, 1, 0, 0.480737,-0.000903271) , 
4, 0.0162618, 1, 0, 0.550954,1.48604e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893758,-0.021805) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00454399,0.0279136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486973,-0.0077332) , 
7, 9.58092e-05, 1, 0, 0.120928,-0.000431934) , 
0, 0.00118797, 1, 0, 0.253709,-0.00430161) , 
3, 100.91, 1, 0, 0.502375,-0.00069059)    );
  // itree = 697
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848284,-0.0151116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77539,0.046917) , 
3, 48.0053, 1, 0, 0.819834,7.86755e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718988,-0.032235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695047,0.00429481) , 
2, 0.0404329, 1, 0, 0.707331,-0.0105974) , 
2, 0.0339617, 1, 0, 0.795159,-0.00226286) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884342,0.00850391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131121) , 
0, 0.00357565, 1, 0, 0.455209,0.00276964) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518639,-0.00859503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.252411,0.000385342) , 
2, 0.155262, 1, 0, 0.33935,-0.00113164) , 
3, 50.4805, 1, 0, 0.400662,0.000932897) , 
2, 0.0475958, 1, 0, 0.495129,0.000167633)    );
  // itree = 698
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776578,-0.0108793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98343,0.0517305) , 
6, 0.017573, 1, 0, 0.863783,-0.00010233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0195664,-0.0577584) , 
5, 0.0115418, 1, 0, 0.516418,-0.00458434) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0284764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702578,0.00340506) , 
6, 0.0232126, 1, 0, 0.533989,0.000329226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156489,-0.0161969) , 
3, 126.03, 1, 0, 0.496416,-0.000348346) , 
4, 0.0115962, 1, 0, 0.500872,-0.00129197)    );
  // itree = 699
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.442192,-0.00904996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440619,0.0162745) , 
3, 15.6189, 1, 0, 0.441586,-0.000221306) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776886,-0.0283168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484205,-1.24553e-05) , 
2, 0.166452, 1, 0, 0.647799,-0.00716166) , 
6, 0.0278313, 1, 0, 0.551572,-0.00392301) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65425,0.0415457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329931,0.00582302) , 
6, 0.0139441, 1, 0, 0.434789,0.00536136) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683971,-0.0128944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351124,0.00333092) , 
2, 0.119016, 1, 0, 0.487381,-0.000859712) , 
5, 0.00912617, 1, 0, 0.480318,-2.42775e-05) , 
3, 25.2368, 1, 0, 0.502819,-0.00125544)    );
  // itree = 700
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998405,0.0463161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988319,-0.0635504) , 
7, 0.000507832, 1, 0, 0.997193,0.00136678) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93881,0.00304732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550042,-0.0115516) , 
4, 0.0109178, 1, 0, 0.778716,-0.0115372) , 
0, 5.68376e-05, 1, 0, 0.940436,-0.00198546) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823088,0.00922101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131668) , 
0, 0.00346726, 1, 0, 0.182062,0.001341) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757234,0.000153934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864902,-0.0232599) , 
1, 1.23571, 1, 0, 0.782148,-0.00423269) , 
7, 0.000347867, 1, 0, 0.289344,0.000344545) , 
0, 0.00119363, 1, 0, 0.507626,-0.000436601)    );
  // itree = 701
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.449043,-0.00366172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86324,0.00644316) , 
7, 0.000340735, 1, 0, 0.545859,-0.00016832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.360366,-0.0156679) , 
3, 108.087, 1, 0, 0.537385,-0.000545315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166032,0.0178481) , 
3, 126.135, 1, 0, 0.501925,-8.77079e-05)    );
  // itree = 702
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829453,0.00180963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288436,-0.0208098) , 
5, 0.0196162, 1, 0, 0.682164,-0.00145892) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6528,-0.0250851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2919,0.00219374) , 
2, 0.166239, 1, 0, 0.490137,-0.00805102) , 
3, 75.2632, 1, 0, 0.636428,-0.00302901) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90375,-0.00398313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98516,0.0553776) , 
0, 0.00192637, 1, 0, 0.943323,0.00502801) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000563511,0.00393473) , 
3, 37.7275, 1, 0, 0.000363285,-0.00014327) , 
0, 0.00238727, 1, 0, 0.264961,0.00130781) , 
4, 0.0209021, 1, 0, 0.491303,-0.0013347)    );
  // itree = 703
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527169,0.00169317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459414,-0.0117125) , 
3, 86.4893, 1, 0, 0.521005,2.23725e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.286681,0.0181076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.094401,0.0144718) , 
2, 0.166239, 1, 0, 0.167894,0.00394568) , 
3, 113.565, 1, 0, 0.475778,0.000524871) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635707,-0.00551845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558821,-0.0324904) , 
6, 0.0434738, 1, 0, 0.604896,-0.00828837) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675196,-0.00537953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631533,0.0112769) , 
1, 1.08008, 1, 0, 0.652206,0.000110459) , 
6, 0.0447481, 1, 0, 0.631633,-0.00354187) , 
6, 0.0417491, 1, 0, 0.502714,-0.000177961)    );
  // itree = 704
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.237424,0.020142) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704154,0.00642751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288685,-0.00354821) , 
2, 0.190394, 1, 0, 0.540154,0.000483243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118257,-0.00923411) , 
3, 138.802, 1, 0, 0.509388,0.000159094) , 
4, 0.0046561, 1, 0, 0.495476,0.000475499)    );
  // itree = 705
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636136,-0.00887133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45183,0.00253534) , 
4, 0.0139209, 1, 0, 0.51988,-0.000917385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152616,0.0357929) , 
3, 126.134, 1, 0, 0.486519,-0.000191653) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656303,-0.0111761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62907,-0.0749129) , 
3, 23.3582, 1, 0, 0.646023,-0.0118548) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676446,0.00272492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430493,-0.0129104) , 
3, 91.7244, 1, 0, 0.59486,-0.00225636) , 
3, 37.7731, 1, 0, 0.616335,-0.00628522) , 
6, 0.0417489, 1, 0, 0.509323,-0.00126207)    );
  // itree = 706
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907277,-0.012496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656765,-0.0590498) , 
4, 0.00691639, 1, 0, 0.760231,-0.0172525) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994487,-0.029288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812483,0.0783585) , 
0, 0.00118069, 1, 0, 0.91312,0.00222703) , 
8, 0.0336566, 1, 0, 0.840052,-0.00708256) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583072,0.0111855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0149829) , 
4, 0.0139416, 1, 0, 0.262504,0.00159782) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697699,-0.0130871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435985,0.000928354) , 
2, 0.227744, 1, 0, 0.59237,-0.00257534) , 
6, 0.027833, 1, 0, 0.445048,-0.000711557) , 
2, 0.0237921, 1, 0, 0.501331,-0.00161934)    );
  // itree = 707
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832473,-0.00812312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60766,-0.0122753) , 
2, 0.13247, 1, 0, 0.785231,-0.00382321) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752452,0.0683819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013838) , 
4, 0.0244376, 1, 0, 0.141942,0.000839086) , 
4, 0.0232174, 1, 0, 0.647226,-0.00282301) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.147815,-0.00131832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700408,0.0223582) , 
5, 0.0187204, 1, 0, 0.365086,0.00308026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.727351,-0.0104591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000115772,0.0192578) , 
0, 0.00595552, 1, 0, 0.108305,-0.00194177) , 
5, 0.0231193, 1, 0, 0.243433,0.000701019) , 
2, 0.21409, 1, 0, 0.499456,-0.00153337)    );
  // itree = 708
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730552,-0.0110647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465456,0.000740918) , 
2, 0.100935, 1, 0, 0.619139,-0.00172494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.326621,-0.0140723) , 
2, 0.265137, 1, 0, 0.596394,-0.00231665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764542,0.00975758) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.015095,-0.00813889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348201,0.0058575) , 
6, 0.0394011, 1, 0, 0.0957642,-0.000171662) , 
0, 0.00119179, 1, 0, 0.169757,0.000754672) , 
2, 0.309382, 1, 0, 0.495411,-0.00158968)    );
  // itree = 709
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.339133,-0.00686034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646179,0.00694717) , 
6, 0.0215258, 1, 0, 0.493659,0.000548351) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675216,-0.00138459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682756,-0.0343786) , 
1, 1.35036, 1, 0, 0.676351,-0.00272285) , 
6, 0.0347853, 1, 0, 0.558329,-0.000609589) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.31245,-0.0119742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529575,-0.0164442) , 
5, 0.00982845, 1, 0, 0.400931,-0.0121696) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935037,0.0177559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188295,-0.0117326) , 
0, 0.00119363, 1, 0, 0.314732,-0.00129318) , 
5, 0.0137279, 1, 0, 0.335694,-0.00393811) , 
3, 75.6184, 1, 0, 0.497491,-0.00151916)    );
  // itree = 710
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829014,-0.0306944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695768,0.00355609) , 
2, 0.031064, 1, 0, 0.763252,-0.00265076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648795,-0.0431403) , 
2, 0.0815866, 1, 0, 0.750903,-0.00405472) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00535993,-0.0103009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825442,0.0121604) , 
7, 0.00010577, 1, 0, 0.467976,0.00280813) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692402,-0.00434515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.06771e-05,-0.00429935) , 
0, 0.00357693, 1, 0, 0.197435,-0.00138414) , 
2, 0.268596, 1, 0, 0.336746,0.000774597) , 
2, 0.0951945, 1, 0, 0.497176,-0.00109611)    );
  // itree = 711
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.23649,0.0179908) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.546747,-0.000317886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664421,-0.00835766) , 
6, 0.0463877, 1, 0, 0.554511,-0.00045334) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.132374,0.00104329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335228,-0.0164996) , 
6, 0.0347911, 1, 0, 0.198913,-0.00375173) , 
3, 112.966, 1, 0, 0.5087,-0.000878267) , 
4, 0.00464135, 1, 0, 0.494908,-0.000522416)    );
  // itree = 712
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99426,-0.0545096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817657,-0.0180773) , 
0, 4.77525e-05, 1, 0, 0.941135,-0.00940709) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625999,0.00838074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.107773,-0.0110639) , 
5, 0.0151921, 1, 0, 0.32473,0.00081865) , 
0, 0.00100305, 1, 0, 0.583734,-0.00347805) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921592,-0.00478667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973057,0.028714) , 
0, 0.00168525, 1, 0, 0.943723,0.00362576) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00319123,-0.00554667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130935) , 
0, 0.0142696, 1, 0, 0.00101931,-0.000312871) , 
0, 0.00238633, 1, 0, 0.437075,0.00150897) , 
4, 0.0162411, 1, 0, 0.496488,-0.00051133)    );
  // itree = 713
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841175,0.0108907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492914,-0.00505462) , 
2, 0.0373971, 1, 0, 0.601202,-0.000805158) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787138,0.0223907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479687,-0.00839575) , 
4, 0.0232083, 1, 0, 0.682963,0.00229709) , 
6, 0.0394234, 1, 0, 0.61874,-0.000139703) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.13705,0.0102649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00843037,-0.00741444) , 
2, 0.318491, 1, 0, 0.0408668,6.21443e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785395,-0.0145788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747516,-0.00205083) , 
6, 0.0433293, 1, 0, 0.765311,-0.00980936) , 
7, 0.000349446, 1, 0, 0.207149,-0.00220367) , 
2, 0.261785, 1, 0, 0.495408,-0.000758164)    );
  // itree = 714
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.375178,-0.00108628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564892,-0.0182678) , 
6, 0.0283984, 1, 0, 0.412246,-0.0019425) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918935,0.0105973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131209) , 
0, 0.00357565, 1, 0, 0.628174,0.00324815) , 
6, 0.0331339, 1, 0, 0.488962,-9.83433e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60826,-0.0135029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628057,-0.00434275) , 
1, 1.06469, 1, 0, 0.619927,-0.00683319) , 
6, 0.0463879, 1, 0, 0.497386,-0.000531567)    );
  // itree = 715
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596161,-0.031663) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530188,0.0109544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34259,-0.0163777) , 
3, 58.9249, 1, 0, 0.428575,-0.00434308) , 
3, 25.0094, 1, 0, 0.47664,-0.00771895) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609942,-0.00265377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309378,0.0130825) , 
2, 0.288798, 1, 0, 0.577506,-0.000299724) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.714778,-0.0117866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000297025,-0.00819619) , 
0, 0.00238358, 1, 0, 0.166939,-0.00526126) , 
2, 0.356772, 1, 0, 0.504912,-0.00117699) , 
5, 0.00913312, 1, 0, 0.501102,-0.00205879)    );
  // itree = 716
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965775,0.00297119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865363,0.0118911) , 
2, 0.111043, 1, 0, 0.930351,0.00326926) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130961) , 
0, 0.012782, 1, 0, 0,-0.000279693) , 
0, 0.00357683, 1, 0, 0.594491,0.00198807) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.129257,-0.00188432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144676,-0.0163732) , 
3, 29.6913, 1, 0, 0.136467,-0.00385185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180965,0.00959173) , 
3, 62.344, 1, 0, 0.155446,-0.00147943) , 
2, 0.333171, 1, 0, 0.502791,0.00126384)    );
  // itree = 717
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941897,0.0829438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923609,0.0832416) , 
6, 0.0186661, 1, 0, 0.93227,0.00584907) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678828,-0.0059373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492606,-0.0154139) , 
2, 0.143877, 1, 0, 0.662441,-0.0028912) , 
2, 0.00793021, 1, 0, 0.689278,-0.00202188) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657634,0.0160809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889749,0.00017364) , 
4, 0.0183299, 1, 0, 0.812318,0.0053605) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130943) , 
0, 0.0127778, 1, 0, 0,-0.000125593) , 
0, 0.00357537, 1, 0, 0.27905,0.00175901) , 
2, 0.166585, 1, 0, 0.501708,-0.000293129)    );
  // itree = 718
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964833,-0.0033699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761908,-0.0181108) , 
2, 0.237165, 1, 0, 0.935433,-0.00446102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00109979,-0.00188949) , 
0, 0.00238139, 1, 0, 0.561824,-0.00271517) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815952,-0.0028674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917567,0.0114892) , 
5, 0.0121784, 1, 0, 0.890405,0.00303204) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130938) , 
0, 0.0138074, 1, 0, 0,-0.000299276) , 
0, 0.00357949, 1, 0, 0.447809,0.00137613) , 
3, 37.8117, 1, 0, 0.496967,-0.000387868)    );
  // itree = 719
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83415,-0.008401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594079,-0.0135961) , 
2, 0.13469, 1, 0, 0.814127,-0.00449829) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743438,0.00520113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00119647,-0.0114051) , 
0, 0.00204879, 1, 0, 0.222815,0.000470422) , 
2, 0.166585, 1, 0, 0.623266,-0.00289451) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.01806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812731,0.0148338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0156267) , 
4, 0.0243185, 1, 0, 0.475585,0.0020528) , 
5, 0.0184809, 1, 0, 0.37291,0.000728753) , 
4, 0.0185848, 1, 0, 0.502017,-0.00113973)    );
  // itree = 720
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919786,0.0134956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131184) , 
0, 0.00356786, 1, 0, 0.580084,0.00291726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579286,-0.0340939) , 
3, 34.2482, 1, 0, 0.580019,0.00167387) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545287,-0.00573999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624244,-0.0204837) , 
6, 0.0440642, 1, 0, 0.553651,-0.00329964) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828547,0.0115877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000292129,-0.00101667) , 
0, 0.00238358, 1, 0, 0.215316,0.00237015) , 
2, 0.285575, 1, 0, 0.457675,-0.00169129) , 
3, 37.8555, 1, 0, 0.510442,-0.000239897)    );
  // itree = 721
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260316,-0.0257992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644424,0.00448219) , 
6, 0.0162336, 1, 0, 0.56496,9.10805e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909111,-0.0105969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131325) , 
0, 0.00357693, 1, 0, 0.544297,-0.00384175) , 
3, 28.8287, 1, 0, 0.553848,-0.00202388) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706575,0.0313785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224895,0.00707873) , 
5, 0.0117667, 1, 0, 0.399569,0.00788281) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.338317,-0.0123945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.318394,0.00833588) , 
5, 0.0181877, 1, 0, 0.324963,-0.000939827) , 
4, 0.0139769, 1, 0, 0.3453,0.00146518) , 
3, 75.6806, 1, 0, 0.496679,-0.00106742)    );
  // itree = 722
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618468,0.00260426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933229,0.015786) , 
7, 0.000166966, 1, 0, 0.711912,0.00267634) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0224501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130927) , 
5, 0.0265906, 1, 0, 0,-0.000951614) , 
4, 0.0162411, 1, 0, 0.4252,0.00121524) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736767,-0.0294302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446418,-0.00616957) , 
2, 0.142672, 1, 0, 0.594946,-0.00888373) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681235,-0.0064986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.471096,0.00885472) , 
2, 0.30967, 1, 0, 0.622531,-0.000807532) , 
6, 0.0363402, 1, 0, 0.615556,-0.00284978) , 
6, 0.0324717, 1, 0, 0.504792,-0.000484433)    );
  // itree = 723
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.232812,-0.0128467) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686108,0.00469201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.120318,-0.0142332) , 
4, 0.0172461, 1, 0, 0.419136,0.000269356) , 
4, 0.00465782, 1, 0, 0.406774,-0.000298077) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950842,-0.00935734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771895,-0.0241177) , 
0, 0.000819408, 1, 0, 0.9109,-0.0139761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737385,-0.00637629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768658,0.0391211) , 
3, 37.5697, 1, 0, 0.754391,0.00329452) , 
0, 0.00191199, 1, 0, 0.843374,-0.00652468) , 
7, 0.000340735, 1, 0, 0.50394,-0.00168383)    );
  // itree = 724
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927583,-0.00158754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.786734,-0.014904) , 
0, 0.00202162, 1, 0, 0.920114,-0.00189085) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86272,-0.0253121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978209,0.0116936) , 
4, 0.0232215, 1, 0, 0.929644,-0.0139685) , 
5, 0.0225729, 1, 0, 0.921235,-0.00331222) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00646271,0.00986645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130946) , 
0, 0.0132078, 1, 0, 0.00252308,0.000606855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.06819e-05,-0.0129993) , 
2, 0.285679, 1, 0, 0.00149491,0.00014194) , 
0, 0.00238688, 1, 0, 0.502899,-0.00174112)    );
  // itree = 725
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995828,0.0182235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812421,0.00819316) , 
0, 0.000113675, 1, 0, 0.952546,0.00311765) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.297284,-0.00156073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500569,-0.0103816) , 
6, 0.0463804, 1, 0, 0.311311,-0.000860311) , 
0, 0.00119363, 1, 0, 0.537149,0.000540692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0933187,-0.0105856) , 
3, 138.633, 1, 0, 0.500053,8.9921e-06)    );
  // itree = 726
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995524,0.00338492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894571,0.0138491) , 
0, 0.000113307, 1, 0, 0.954688,0.00489566) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00321493,-0.012416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386812,0.00885326) , 
6, 0.0229697, 1, 0, 0.124711,-0.000510793) , 
0, 0.00119053, 1, 0, 0.400397,0.00128502) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752212,-0.00520115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610684,-0.0143258) , 
6, 0.0450999, 1, 0, 0.737718,-0.00351777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0786472,-0.0107343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728593,0.0298904) , 
6, 0.0469421, 1, 0, 0.298707,0.00190445) , 
4, 0.0232238, 1, 0, 0.626172,-0.00214006) , 
6, 0.0301521, 1, 0, 0.507378,-0.000337915)    );
  // itree = 727
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739049,0.00265497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.480805,-0.0188925) , 
2, 0.0849697, 1, 0, 0.691809,-0.00158016) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0006131,-0.00886846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600383,0.00932522) , 
7, 0.00010059, 1, 0, 0.156715,0.00139788) , 
2, 0.118993, 1, 0, 0.403938,2.19731e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893227,-0.000895902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553089,-0.0139305) , 
5, 0.023934, 1, 0, 0.847016,-0.00277735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.693963,-0.0194456) , 
3, 100.714, 1, 0, 0.827531,-0.004498) , 
7, 0.000340735, 1, 0, 0.497488,-0.000976265)    );
  // itree = 728
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940437,-0.00506758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00118027,0.000532078) , 
0, 0.00238688, 1, 0, 0.552974,-0.00170206) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.501667,0.0127936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000169036,0.0307474) , 
0, 0.00476716, 1, 0, 0.108942,0.00217253) , 
2, 0.380778, 1, 0, 0.491755,-0.00116787) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724983,-0.00852286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549435,-0.0117533) , 
2, 0.262202, 1, 0, 0.651008,-0.00755376) , 
6, 0.0463877, 1, 0, 0.501755,-0.00156886)    );
  // itree = 729
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755685,0.00202965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592175,-0.0157877) , 
3, 50.0542, 1, 0, 0.688956,-0.00222038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.104783,-0.000391264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558964,0.0157896) , 
6, 0.0357911, 1, 0, 0.202197,0.000979781) , 
2, 0.166585, 1, 0, 0.476654,-0.00082462) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702239,-0.0283001) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591467,0.00918299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572726,-0.0124898) , 
6, 0.0460764, 1, 0, 0.584001,-0.00119428) , 
2, 0.0957266, 1, 0, 0.617256,-0.00638778) , 
6, 0.041749, 1, 0, 0.501416,-0.00180438)    );
  // itree = 730
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.512974,0.0170007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338425,-0.00560543) , 
4, 0.00696227, 1, 0, 0.361428,-0.000220758) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635481,0.0312546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563712,0.0110646) , 
4, 0.0141398, 1, 0, 0.590178,0.00629464) , 
6, 0.0272765, 1, 0, 0.391773,0.000643532) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723203,-0.0276254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384867,0.00637928) , 
2, 0.260903, 1, 0, 0.631707,-0.0086431) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69891,0.00769878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463276,-0.0115141) , 
2, 0.214199, 1, 0, 0.601057,-0.00110315) , 
3, 25.0439, 1, 0, 0.610449,-0.00341366) , 
6, 0.030152, 1, 0, 0.496387,-0.00129741)    );
  // itree = 731
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996875,0.0133301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961147,-0.138237) , 
8, 0.19549, 1, 0, 0.993029,-0.00249119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668863,-0.0155027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864662,0.001263) , 
0, 0.000705895, 1, 0, 0.793505,-0.0133024) , 
0, 5.67735e-05, 1, 0, 0.942422,-0.00523335) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.345,0.00817677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0487988,-0.0100055) , 
2, 0.28558, 1, 0, 0.241672,0.000700769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.432345,-0.0262752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48223,0.00029678) , 
6, 0.0454069, 1, 0, 0.456904,-0.00613093) , 
6, 0.0417434, 1, 0, 0.279965,-0.000514694) , 
0, 0.00119291, 1, 0, 0.497183,-0.00206193)    );
  // itree = 732
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787855,-0.0325243) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.858429,-0.027125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846468,0.0802847) , 
2, 0.0147196, 1, 0, 0.85431,-0.0024727) , 
6, 0.0162647, 1, 0, 0.834262,-0.00689912) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962637,0.0220006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83377,0.00235764) , 
2, 0.0916574, 1, 0, 0.884491,0.0036292) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.49737e-05,-0.00210996) , 
0, 0.0107385, 1, 0, 4.08101e-05,-0.000152612) , 
0, 0.00357693, 1, 0, 0.445171,0.00175072) , 
2, 0.0237986, 1, 0, 0.499995,0.000531935)    );
  // itree = 733
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.46993,-0.0155048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821404,0.0152211) , 
7, 0.000340735, 1, 0, 0.555124,-0.00180232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558055,-0.0288354) , 
3, 10.2085, 1, 0, 0.555691,-0.00518223) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.401939,0.0160829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296773,0.0297167) , 
3, 47.4299, 1, 0, 0.342631,0.00618486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552537,0.000955325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168972,-0.00993896) , 
3, 120.732, 1, 0, 0.500872,-0.000237682) , 
4, 0.00699956, 1, 0, 0.487232,0.000315928) , 
3, 12.6138, 1, 0, 0.497627,-0.000518918)    );
  // itree = 734
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852825,0.0152206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701973,-0.0118316) , 
3, 50.2609, 1, 0, 0.795478,0.000186459) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836729,-0.0728166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818045,-0.019759) , 
4, 0.0118459, 1, 0, 0.821972,-0.00781414) , 
6, 0.0186137, 1, 0, 0.813308,-0.00519782) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813504,-0.0180044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.22095,0.00209575) , 
0, 0.000836006, 1, 0, 0.333644,-0.00269973) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914361,0.00613205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.47938e-05,-0.00729129) , 
0, 0.00358032, 1, 0, 0.435404,0.0016744) , 
5, 0.0134635, 1, 0, 0.41489,0.000792591) , 
2, 0.0475958, 1, 0, 0.5106,-0.000646459)    );
  // itree = 735
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964338,0.0169937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.10475,-0.00406813) , 
0, 0.00119231, 1, 0, 0.436203,0.00126753) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664023,-0.00238523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600822,-0.0197011) , 
1, 1.65651, 1, 0, 0.658718,-0.00182849) , 
6, 0.0278283, 1, 0, 0.556809,-0.000410558) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589649,-0.0351139) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.890379,0.00669797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135517,-0.00887912) , 
0, 0.00119316, 1, 0, 0.245499,-0.00171647) , 
2, 0.0475958, 1, 0, 0.297759,-0.00387634) , 
3, 88.1548, 1, 0, 0.501688,-0.00114802)    );
  // itree = 736
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713744,0.00815535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137882,-0.00516763) , 
4, 0.0162376, 1, 0, 0.473984,0.00145679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656683,-0.0106012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663695,0.000281113) , 
6, 0.0414229, 1, 0, 0.66028,-0.00237831) , 
6, 0.0347908, 1, 0, 0.541723,6.22985e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1461,-0.0128533) , 
3, 125.517, 1, 0, 0.500255,-0.00051075)    );
  // itree = 737
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598517,4.60158e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.235651,0.0362854) , 
2, 0.387329, 1, 0, 0.578464,0.000340221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0945616,-0.0237062) , 
2, 0.428231, 1, 0, 0.541107,-0.000254061) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781835,-0.0149304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00189013,-0.00161233) , 
0, 0.00238221, 1, 0, 0.19283,-0.00704671) , 
3, 113.566, 1, 0, 0.495464,-0.00114428)    );
  // itree = 738
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976806,0.0854854) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900443,0.00333613) , 
2, 0.0101754, 1, 0, 0.942895,0.0036642) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.411418,-0.00408141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.304577,-0.0159046) , 
3, 24.9958, 1, 0, 0.337169,-0.00856634) , 
2, 0.0237906, 1, 0, 0.505627,-0.00516491) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939446,-0.00450713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.363893,0.00497257) , 
0, 0.00119363, 1, 0, 0.531283,0.000399552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115138,-0.0244117) , 
2, 0.428182, 1, 0, 0.492804,-0.000234643) , 
4, 0.0116238, 1, 0, 0.495657,-0.00133176)    );
  // itree = 739
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735978,-0.00471644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.259599,0.0193998) , 
2, 0.0995491, 1, 0, 0.613671,0.000172801) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.756432,-0.00372753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652859,-0.0268331) , 
2, 0.145054, 1, 0, 0.737392,-0.00320291) , 
6, 0.0278435, 1, 0, 0.677312,-0.00156363) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00090228,-0.011944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000211375,0.0598978) , 
4, 0.0208853, 1, 0, 0.000466561,-0.000687768) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918684,0.027956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544206,-0.00148058) , 
0, 0.000666506, 1, 0, 0.682386,0.00394187) , 
7, 0.000103094, 1, 0, 0.257409,0.00105665) , 
2, 0.190383, 1, 0, 0.50133,-0.00046547)    );
  // itree = 740
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.837629,-0.0284408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946423,0.082736) , 
8, 0.0661977, 1, 0, 0.864587,-0.00437479) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624731,0.00692923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000676863,-0.0231007) , 
5, 0.021004, 1, 0, 0.401157,0.00148252) , 
2, 0.0237921, 1, 0, 0.472476,0.000581105) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567141,-0.0214054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632913,-0.0141932) , 
1, 1.17652, 1, 0, 0.600344,-0.0142039) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65723,0.00815008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602292,-0.011014) , 
4, 0.0231887, 1, 0, 0.630547,-0.00143164) , 
6, 0.0437519, 1, 0, 0.621614,-0.00520924) , 
6, 0.0417489, 1, 0, 0.497978,-0.000408991)    );
  // itree = 741
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619888,-0.0106538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456392,0.00449248) , 
4, 0.00698579, 1, 0, 0.487142,-0.000724098) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899976,-0.0248446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809234,-0.00672757) , 
6, 0.026488, 1, 0, 0.821924,-0.00671525) , 
7, 0.000145796, 1, 0, 0.638516,-0.00343305) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665993,-0.00841494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131059) , 
0, 0.00411787, 1, 0, 0.123149,-0.00277409) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968484,0.019128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000611258,-0.00674831) , 
0, 0.00238727, 1, 0, 0.469083,0.00270777) , 
4, 0.018631, 1, 0, 0.376013,0.00123293) , 
5, 0.0181912, 1, 0, 0.500268,-0.000975692)    );
  // itree = 742
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986709,-0.0108049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904616,0.0248744) , 
2, 0.189988, 1, 0, 0.968527,0.000993067) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901423,-0.005896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824269,-0.0136603) , 
3, 87.8404, 1, 0, 0.890628,-0.00721183) , 
0, 0.000566342, 1, 0, 0.929249,-0.00314401) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00510114,0.0178396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.92851e-05,0.00142833) , 
4, 0.0162683, 1, 0, 0.00149119,0.000624195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00201595,-0.00938812) , 
6, 0.0347611, 1, 0, 0.00162585,0.000174123) , 
0, 0.00238633, 1, 0, 0.497315,-0.00159897)    );
  // itree = 743
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.312165,-0.00547327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877839,0.0122376) , 
7, 5.45628e-05, 1, 0, 0.534747,0.000303667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386099,-0.017707) , 
7, 0.000123552, 1, 0, 0.51303,-0.00136728) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938174,0.00149216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93641,0.0100882) , 
0, 0.00113477, 1, 0, 0.937285,0.0036013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00146645,0.0063304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.015188) , 
2, 0.333111, 1, 0, 0.000986958,-0.000106078) , 
0, 0.00238688, 1, 0, 0.495496,0.00185199) , 
4, 0.011593, 1, 0, 0.499443,0.00112728)    );
  // itree = 744
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989336,0.00346449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570527,-0.0374083) , 
0, 0.00119363, 1, 0, 0.863744,-0.00348477) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900533,0.00675208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013216) , 
0, 0.00357949, 1, 0, 0.48804,0.00184108) , 
2, 0.0203974, 1, 0, 0.538535,0.00112528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0955289,-0.0168246) , 
2, 0.428375, 1, 0, 0.499539,0.000479539)    );
  // itree = 745
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993543,-0.0608407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928972,0.0233932) , 
0, 0.000113499, 1, 0, 0.962796,0.00444006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00459248,-0.00944427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186193,0.0134839) , 
6, 0.0218649, 1, 0, 0.0367779,-0.000679796) , 
0, 0.00119179, 1, 0, 0.343149,0.0010141) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962776,-0.00591989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897546,-0.0116459) , 
0, 0.000567387, 1, 0, 0.928847,-0.0066538) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00135677,-0.00937613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00150243,0.0147347) , 
2, 0.261901, 1, 0, 0.00143018,-0.000102929) , 
0, 0.00238727, 1, 0, 0.606373,-0.00437598) , 
6, 0.0255133, 1, 0, 0.49852,-0.00216745)    );
  // itree = 746
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825891,-0.00497607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512309,0.00836683) , 
2, 0.0679874, 1, 0, 0.636241,0.00129121) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.140901,0.00160343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180924,-0.0146598) , 
3, 33.6416, 1, 0, 0.161802,-0.0040352) , 
2, 0.356979, 1, 0, 0.563775,0.000477655) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921236,0.00101619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677829,-0.0131812) , 
0, 0.00136051, 1, 0, 0.819537,-0.00900239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133315) , 
0, 0.00357949, 1, 0, 0.298025,-0.00346299) , 
3, 88.3289, 1, 0, 0.506896,-0.00036577)    );
  // itree = 747
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696668,-0.0168962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.178982,-0.0184855) , 
6, 0.0116037, 1, 0, 0.344103,-0.00836246) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824672,0.000315573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710092,0.0165737) , 
2, 0.0317281, 1, 0, 0.757269,0.00235168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.516891,-0.020779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352171,-0.00112647) , 
2, 0.114479, 1, 0, 0.364949,-0.0012961) , 
2, 0.0951916, 1, 0, 0.513852,8.83958e-05) , 
4, 0.00698842, 1, 0, 0.498416,-0.000680053)    );
  // itree = 748
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506716,0.000642281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71602,0.010416) , 
6, 0.0301473, 1, 0, 0.606531,0.00161637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117457,-0.00823507) , 
3, 138.803, 1, 0, 0.571645,0.00115358) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628388,-0.00617504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131162) , 
0, 0.00357114, 1, 0, 0.149346,-0.00206607) , 
2, 0.356979, 1, 0, 0.498829,0.000598427)    );
  // itree = 749
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.699744,-0.00227516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507122,0.0117467) , 
2, 0.150674, 1, 0, 0.68943,-0.000379704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655414,0.0308108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.716542,0.00826654) , 
2, 0.0712367, 1, 0, 0.686539,0.00442774) , 
6, 0.0440614, 1, 0, 0.689156,7.51035e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.464775,-0.0881329) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.173478,-0.00120231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55433,-0.0140456) , 
6, 0.0417491, 1, 0, 0.252019,-0.00162306) , 
2, 0.182489, 1, 0, 0.265186,-0.00254769) , 
2, 0.166585, 1, 0, 0.491189,-0.00114958)    );
  // itree = 750
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690931,-0.0100627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397947,0.000996963) , 
4, 0.0161755, 1, 0, 0.541122,-0.00187758) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511865,0.0103301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.33406,-0.00237544) , 
4, 0.0139254, 1, 0, 0.392143,0.00106176) , 
3, 50.1918, 1, 0, 0.474367,-0.000560508) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961613,0.0311698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928724,-0.010146) , 
2, 0.188488, 1, 0, 0.946391,0.00114744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473222,-0.0116416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450176,-0.0171861) , 
6, 0.0470532, 1, 0, 0.467351,-0.00959346) , 
0, 0.00118481, 1, 0, 0.618758,-0.00619864) , 
6, 0.041749, 1, 0, 0.499671,-0.00154855)    );
  // itree = 751
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996989,0.0132818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723359,-0.0173718) , 
0, 4.32854e-05, 1, 0, 0.929626,-0.00636651) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.411562,-0.00318873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604711,0.0339197) , 
5, 0.017586, 1, 0, 0.429263,-0.000292759) , 
0, 0.000910876, 1, 0, 0.636879,-0.00281296) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59005,-0.0184555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382848,0.00195894) , 
3, 48.8213, 1, 0, 0.497772,-0.00518072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00301391,-0.0105926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887642,0.00817164) , 
7, 0.000340438, 1, 0, 0.330312,0.00133771) , 
2, 0.0716051, 1, 0, 0.359908,0.000185688) , 
5, 0.018479, 1, 0, 0.493935,-0.00126537)    );
  // itree = 752
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.856436,0.0168797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674275,-0.0057094) , 
2, 0.0396438, 1, 0, 0.748555,-0.000495391) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718694,-0.020096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513438,-0.00801999) , 
4, 0.0139484, 1, 0, 0.590851,-0.00687495) , 
3, 50.4735, 1, 0, 0.685203,-0.00305815) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926419,0.0187243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691448,-0.000475282) , 
0, 0.000503408, 1, 0, 0.789679,0.00331441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130939) , 
0, 0.0127815, 1, 0, 0,-0.000117659) , 
0, 0.00357331, 1, 0, 0.276321,0.00108327) , 
2, 0.16659, 1, 0, 0.498193,-0.00116399)    );
  // itree = 753
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421104,-0.00713188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804539,0.0229687) , 
6, 0.014038, 1, 0, 0.750122,0.00374661) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0391688,-0.0250507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513678,0.00683898) , 
6, 0.0324805, 1, 0, 0.271314,-0.00205398) , 
2, 0.190325, 1, 0, 0.570686,0.00157281) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830384,0.0216345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640276,-0.000711218) , 
4, 0.0116601, 1, 0, 0.711456,0.00180807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868333,-0.00829923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00108449,0.00631846) , 
0, 0.00238633, 1, 0, 0.333644,-0.00278535) , 
2, 0.0713937, 1, 0, 0.441953,-0.00146854) , 
3, 37.7806, 1, 0, 0.49685,-0.000171583)    );
  // itree = 754
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.336507,0.00612873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.778017,-0.00948041) , 
7, 4.20567e-05, 1, 0, 0.59231,-0.00222848) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605742,0.0148283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136605,-0.0081828) , 
4, 0.0162411, 1, 0, 0.354641,0.00146863) , 
5, 0.0114086, 1, 0, 0.420107,0.000450259) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614263,0.0155811) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895213,-0.0128474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131037) , 
0, 0.00357344, 1, 0, 0.623656,-0.00509426) , 
1, 1.06273, 1, 0, 0.622931,-0.00416255) , 
6, 0.0347969, 1, 0, 0.490007,-0.00113946)    );
  // itree = 755
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667252,0.0262728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337742,-0.00364349) , 
4, 0.013907, 1, 0, 0.470672,0.000949769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856259,0.0404176) , 
7, 0.000339733, 1, 0, 0.557684,0.00279179) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586877,-0.0637512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567599,-0.0058036) , 
3, 15.9903, 1, 0, 0.569645,-0.00352363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554715,0.0160114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370276,-0.00115249) , 
3, 69.0055, 1, 0, 0.430478,0.000967613) , 
3, 48.4836, 1, 0, 0.492789,-0.00104333) , 
3, 12.57, 1, 0, 0.502914,-0.000445)    );
  // itree = 756
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912134,-0.0400901) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.114715,-0.0109089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470113,0.0024836) , 
5, 0.00741674, 1, 0, 0.236448,-0.00290117) , 
2, 0.0236962, 1, 0, 0.461258,-0.00565023) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811472,-0.00725724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465005,0.00966526) , 
2, 0.0714013, 1, 0, 0.57334,0.00112072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606674,0.0112484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.305652,-0.00878271) , 
2, 0.142743, 1, 0, 0.434082,-0.000982431) , 
3, 50.2067, 1, 0, 0.510936,0.000178256) , 
5, 0.00915759, 1, 0, 0.504097,-0.000624071)    );
  // itree = 757
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919853,0.0183908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.487639,0.0247158) , 
2, 0.033456, 1, 0, 0.777399,0.0071857) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978934,-0.00305035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523462,0.0123391) , 
0, 0.00119363, 1, 0, 0.729523,0.00126784) , 
4, 0.00934798, 1, 0, 0.739308,0.00247737) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.808593,0.00274324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795293,-0.00961923) , 
3, 25.097, 1, 0, 0.799283,-0.00659179) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.0916e-05,0.010314) , 
0, 0.0117766, 1, 0, 5.02766e-05,-9.36459e-05) , 
0, 0.00357872, 1, 0, 0.316895,-0.00266974) , 
2, 0.118989, 1, 0, 0.500713,-0.00042991)    );
  // itree = 758
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861882,0.0113124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272823,-0.0115331) , 
5, 0.0224991, 1, 0, 0.749456,0.00201179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379649,-0.00967156) , 
3, 100.947, 1, 0, 0.705859,0.00122046) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622737,0.00547409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.78421e-05,-0.00937294) , 
0, 0.00238633, 1, 0, 0.0873465,0.00106009) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.446734,-0.0189382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561963,0.00126637) , 
6, 0.0394345, 1, 0, 0.517209,-0.00397557) , 
6, 0.0324785, 1, 0, 0.29643,-0.00138923) , 
2, 0.142709, 1, 0, 0.500674,-8.73818e-05)    );
  // itree = 759
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846535,0.00827641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719525,-0.0408315) , 
6, 0.0138679, 1, 0, 0.774995,-0.0109784) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954045,0.00982039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920629,0.0956449) , 
4, 0.0148748, 1, 0, 0.934137,0.00407684) , 
8, 0.0369655, 1, 0, 0.852312,-0.00366396) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.48696,-0.0103806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.285201,0.0136616) , 
3, 75.5675, 1, 0, 0.436714,-0.00201285) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617924,0.0109928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357902,-0.000634971) , 
2, 0.137113, 1, 0, 0.448718,0.000793913) , 
4, 0.0139198, 1, 0, 0.445531,4.86621e-05) , 
2, 0.0237906, 1, 0, 0.502601,-0.000472207)    );
  // itree = 760
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75423,-0.0274744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932312,0.0607948) , 
8, 0.0369655, 1, 0, 0.839827,-0.00299758) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712557,0.00971372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.326121,-0.00248952) , 
2, 0.0917794, 1, 0, 0.433966,0.000114173) , 
2, 0.0237921, 1, 0, 0.494178,-0.000347473) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67557,-0.0185929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557195,-0.00280748) , 
3, 49.0376, 1, 0, 0.621767,-0.00657064) , 
6, 0.0463879, 1, 0, 0.502673,-0.000761832)    );
  // itree = 761
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.352769,0.0075124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679895,-0.0220113) , 
7, 2.15687e-05, 1, 0, 0.504928,-0.00605372) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713896,0.014009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.41003e-05,-0.0155305) , 
4, 0.0139567, 1, 0, 0.353667,0.00139294) , 
5, 0.00708322, 1, 0, 0.373554,0.000413857) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669909,-0.00317795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63892,-0.0161926) , 
3, 52.8584, 1, 0, 0.660082,-0.00284309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574774,0.0129833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250669,0.00547246) , 
3, 124.341, 1, 0, 0.37954,0.00295047) , 
3, 100.909, 1, 0, 0.619307,-0.00200102) , 
6, 0.0278329, 1, 0, 0.503125,-0.00085936)    );
  // itree = 762
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.314251,0.00104164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512498,-0.00806255) , 
6, 0.0227188, 1, 0, 0.354589,-0.000364551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6313,0.0156994) , 
6, 0.0265079, 1, 0, 0.37631,-1.09077e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900068,-0.0126449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919127,0.00454761) , 
6, 0.0457315, 1, 0, 0.902901,-0.00644559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131022) , 
0, 0.0035809, 1, 0, 0.610018,-0.00437552) , 
6, 0.0278358, 1, 0, 0.500227,-0.0023251)    );
  // itree = 763
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955744,0.00526276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904332,-0.0103518) , 
4, 0.0170347, 1, 0, 0.939377,4.18514e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751752,-0.0284043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948394,-0.00435835) , 
4, 0.0177177, 1, 0, 0.905719,-0.0147163) , 
0, 0.00158868, 1, 0, 0.930357,-0.00391325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00280446,0.0252348) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000897621,-0.00921395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00111776,0.0339806) , 
4, 0.0231981, 1, 0, 0.00101584,-0.00046191) , 
6, 0.00927323, 1, 0, 0.00138878,-7.70237e-05) , 
0, 0.00238688, 1, 0, 0.496797,-0.00212284)    );
  // itree = 764
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921006,0.0454633) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817566,-0.0586572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808144,-0.0135317) , 
2, 0.00678362, 1, 0, 0.81086,-0.00795972) , 
4, 0.00698958, 1, 0, 0.833316,-0.00461741) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.270053,-0.00228034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458598,-0.0307011) , 
6, 0.0287193, 1, 0, 0.282533,-0.00179198) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608738,-0.0057993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583558,0.0104216) , 
1, 1.29465, 1, 0, 0.597649,0.000325448) , 
6, 0.0301635, 1, 0, 0.437219,-0.000752563) , 
2, 0.0237979, 1, 0, 0.493078,-0.0012976)    );
  // itree = 765
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789918,0.00334949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633305,-0.00906438) , 
5, 0.0129464, 1, 0, 0.68932,-0.00125429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709734,-0.0100128) , 
6, 0.0463826, 1, 0, 0.690356,-0.00158022) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920568,0.0252712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.78173,-0.00109716) , 
0, 0.000567387, 1, 0, 0.844612,0.00380886) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000872262,0.0140955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000178236,-0.0142351) , 
3, 88.3096, 1, 0, 0.000658565,-0.000239247) , 
0, 0.00238462, 1, 0, 0.272811,0.00106616) , 
2, 0.166545, 1, 0, 0.496681,-0.000352714)    );
  // itree = 766
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553974,-0.0275246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561536,0.0284981) , 
3, 7.54838, 1, 0, 0.557211,-0.00182494) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513997,0.00164321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675725,0.0127102) , 
6, 0.0440684, 1, 0, 0.532269,0.000875735) , 
3, 13.2102, 1, 0, 0.53672,0.000393828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109563,-0.00773024) , 
3, 138.802, 1, 0, 0.503128,4.41933e-05)    );
  // itree = 767
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76677,-0.0110889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974797,0.0200419) , 
7, 0.000123468, 1, 0, 0.842646,-0.00154938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0275782) , 
5, 0.0146433, 1, 0, 0.578804,-0.00331636) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731786,-0.0189509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.47286,-0.00193069) , 
2, 0.0475607, 1, 0, 0.5192,-0.00174013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950396,0.0137305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00137797,0.00361149) , 
0, 0.00238727, 1, 0, 0.373641,0.00245293) , 
3, 63.0922, 1, 0, 0.467303,-0.000245151) , 
4, 0.013932, 1, 0, 0.501625,-0.00119053)    );
  // itree = 768
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866825,0.0805199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.238149,-0.0046763) , 
2, 0.0712106, 1, 0, 0.499382,0.000866399) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686924,-0.0043373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62583,-0.0166226) , 
1, 1.29228, 1, 0, 0.661037,-0.00882664) , 
6, 0.0324687, 1, 0, 0.56629,-0.00314552) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.289974,0.024382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852007,0.0227543) , 
7, 0.000143197, 1, 0, 0.558264,0.00516982) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.311211,-0.00568158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593153,0.0044189) , 
6, 0.0255137, 1, 0, 0.476501,0.000246944) , 
3, 24.6392, 1, 0, 0.490133,0.00106773) , 
3, 12.6187, 1, 0, 0.501722,0.00042657)    );
  // itree = 769
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472599,5.33268e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109785,0.0139418) , 
3, 126.184, 1, 0, 0.434845,0.00043703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633274,0.0334422) , 
6, 0.0353314, 1, 0, 0.44805,0.000869528) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705048,-0.000584129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528061,-0.0353266) , 
2, 0.255071, 1, 0, 0.663325,-0.00455871) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.375013,0.000523157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57107,0.0305268) , 
6, 0.0437404, 1, 0, 0.462234,0.00377813) , 
2, 0.357049, 1, 0, 0.622844,-0.00288042) , 
6, 0.0371104, 1, 0, 0.499449,-0.000233154)    );
  // itree = 770
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.516195,0.00352527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665635,0.0325028) , 
6, 0.0377768, 1, 0, 0.534679,0.00162019) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637916,-0.014847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663614,0.00354108) , 
3, 14.4124, 1, 0, 0.655553,-0.00201342) , 
6, 0.0417494, 1, 0, 0.554874,0.0010131) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857955,-0.017925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662939,0.0237022) , 
2, 0.0101842, 1, 0, 0.703285,0.00159801) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887812,-0.00756456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000906625,-0.0034863) , 
0, 0.00238455, 1, 0, 0.321367,-0.00248849) , 
2, 0.0713959, 1, 0, 0.424233,-0.00138782) , 
3, 50.4536, 1, 0, 0.496496,-5.97674e-05)    );
  // itree = 771
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9974,0.0153765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973964,-0.116224) , 
8, 0.195629, 1, 0, 0.994892,-0.00135817) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634262,-0.0104646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856454,-0.00433198) , 
0, 0.000597689, 1, 0, 0.790262,-0.0106597) , 
0, 5.67606e-05, 1, 0, 0.942862,-0.00372322) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0101094,-0.0127054) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591114,0.00747057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186294,-0.0026398) , 
4, 0.0204427, 1, 0, 0.341691,0.000992676) , 
4, 0.0116081, 1, 0, 0.289837,0.000125341) , 
0, 0.00119199, 1, 0, 0.508992,-0.00116623)    );
  // itree = 772
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985281,0.0128683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881103,-0.0109529) , 
0, 0.000339805, 1, 0, 0.931249,-0.00363679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00123688,-0.00647194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00125792,0.0389692) , 
2, 0.261813, 1, 0, 0.00124681,0.000136462) , 
0, 0.00238218, 1, 0, 0.559547,-0.0021287) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626602,0.0155798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247213,-0.000932981) , 
2, 0.237398, 1, 0, 0.501618,0.00400357) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832945,-0.0110659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130957) , 
0, 0.0035809, 1, 0, 0.175189,-0.00202046) , 
4, 0.0208676, 1, 0, 0.34629,0.00113711) , 
3, 75.7103, 1, 0, 0.501173,-0.00123477)    );
  // itree = 773
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936309,0.0887859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824876,-0.0104838) , 
5, 0.00844714, 1, 0, 0.857679,0.00136535) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793911,0.00269374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682308,-0.0160449) , 
3, 12.5502, 1, 0, 0.700491,-0.00543688) , 
2, 0.0226629, 1, 0, 0.754627,-0.00309417) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545401,0.0223809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12539,-0.00444112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377978,0.00368883) , 
4, 0.0139487, 1, 0, 0.325477,0.000230826) , 
2, 0.114479, 1, 0, 0.340982,0.000787399) , 
2, 0.0951916, 1, 0, 0.503344,-0.00073618)    );
  // itree = 774
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.330992,0.0108426) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.417202,-0.0159858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414991,0.00153056) , 
5, 0.00772793, 1, 0, 0.415259,-0.000172355) , 
4, 0.00469131, 1, 0, 0.409854,0.000158143) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783388,-0.0267622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700376,-0.0279401) , 
6, 0.0417497, 1, 0, 0.754803,-0.0116131) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907301,-0.0122823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439574,0.00219682) , 
0, 0.00119199, 1, 0, 0.587089,-0.00143097) , 
2, 0.07141, 1, 0, 0.625528,-0.00376469) , 
6, 0.0324717, 1, 0, 0.499221,-0.00146734)    );
  // itree = 775
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996401,0.0158622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819432,-0.00770166) , 
0, 5.68153e-05, 1, 0, 0.936918,-0.00311224) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799741,0.00903728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131783) , 
0, 0.00346587, 1, 0, 0.183769,0.00115576) , 
0, 0.00119316, 1, 0, 0.409488,-0.000123361) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87291,-0.00684164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749197,-0.0210388) , 
3, 87.6623, 1, 0, 0.85403,-0.00672021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.778732,0.023749) , 
2, 0.379685, 1, 0, 0.843573,-0.00411672) , 
7, 0.00035688, 1, 0, 0.498065,-0.000938224)    );
  // itree = 776
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941031,0.028935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835119,-0.0243014) , 
5, 0.00757243, 1, 0, 0.864415,-0.00203313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720012,-0.0307451) , 
6, 0.0347741, 1, 0, 0.835086,-0.00482177) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713521,0.0461853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709548,0.0015391) , 
5, 0.0092085, 1, 0, 0.710227,0.00213867) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538285,-0.00404308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118842,0.0197156) , 
4, 0.0232019, 1, 0, 0.383378,-0.000938952) , 
2, 0.0691063, 1, 0, 0.449035,-0.000320725) , 
2, 0.0237848, 1, 0, 0.503957,-0.000961065)    );
  // itree = 777
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882757,-0.0155725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416875,-0.017761) , 
2, 0.0634075, 1, 0, 0.772943,-0.00831145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62602,-0.00293404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781182,-0.0174019) , 
6, 0.0394247, 1, 0, 0.663617,-0.0021709) , 
4, 0.0115907, 1, 0, 0.69381,-0.00386673) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585739,0.018552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137927,0.00328) , 
5, 0.0228212, 1, 0, 0.400213,0.00348875) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0753257,-0.00825211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261941,0.00722773) , 
5, 0.0182472, 1, 0, 0.209862,-0.000380396) , 
2, 0.261762, 1, 0, 0.276978,0.000983839) , 
2, 0.166534, 1, 0, 0.504628,-0.00166527)    );
  // itree = 778
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654549,-0.0150749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763025,-0.0192522) , 
6, 0.0324687, 1, 0, 0.696428,-0.008023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209194,0.0109567) , 
2, 0.237917, 1, 0, 0.54963,-0.00498137) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937971,-0.0165619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421371,-0.00139658) , 
0, 0.000888237, 1, 0, 0.628254,-0.00302441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765755,0.0154488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205076,-0.00220224) , 
5, 0.0219817, 1, 0, 0.368018,0.001189) , 
5, 0.0182798, 1, 0, 0.489786,-0.000782517) , 
3, 12.6134, 1, 0, 0.499174,-0.00144121)    );
  // itree = 779
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.717737,-0.0360491) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87222,-0.016306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921069,0.0560415) , 
6, 0.0235233, 1, 0, 0.905216,0.000889882) , 
8, 0.0204631, 1, 0, 0.843469,-0.00396436) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.263493,0.00278363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843207,-0.00516809) , 
7, 0.000254711, 1, 0, 0.418193,-0.000322978) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591723,0.0413882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640578,0.00629741) , 
6, 0.0462964, 1, 0, 0.618335,0.0048121) , 
6, 0.044069, 1, 0, 0.442593,0.00030304) , 
2, 0.0237979, 1, 0, 0.500475,-0.000313125)    );
  // itree = 780
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586026,-0.0120078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763071,-0.0247505) , 
7, 0.000168713, 1, 0, 0.644375,-0.0080247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960824,0.0142546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.31678,-0.00624466) , 
0, 0.00100305, 1, 0, 0.573479,-0.000248864) , 
3, 25.1874, 1, 0, 0.596606,-0.00278539) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763486,0.0227544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385408,0.00298934) , 
4, 0.0193417, 1, 0, 0.484033,0.00232688) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.346689,-0.00483271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680386,0.00960991) , 
6, 0.0463901, 1, 0, 0.376982,-0.000619943) , 
3, 37.7684, 1, 0, 0.420975,0.000591071) , 
4, 0.0162439, 1, 0, 0.491961,-0.000773614)    );
  // itree = 781
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.286483,-0.0227471) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859213,-0.0240573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504844,0.00436107) , 
2, 0.0204155, 1, 0, 0.550717,0.000634964) , 
5, 0.00456661, 1, 0, 0.538318,0.000318341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103591,-0.0211615) , 
2, 0.428375, 1, 0, 0.500937,-0.000213375)    );
  // itree = 782
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807626,-0.0139348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368472,0.0036951) , 
2, 0.0951618, 1, 0, 0.560254,-0.00131367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50997,-0.0550074) , 
3, 21.5792, 1, 0, 0.552732,-0.00449617) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.48592,0.000354285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722397,0.0332278) , 
5, 0.0110792, 1, 0, 0.561013,0.00298247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735712,-0.00787508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219389,0.0101406) , 
5, 0.0214886, 1, 0, 0.443275,-0.00117513) , 
5, 0.0136813, 1, 0, 0.476151,-1.4206e-05) , 
3, 25.1871, 1, 0, 0.499697,-0.00139223)    );
  // itree = 783
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.540456,0.025776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566311,-0.00757687) , 
3, 2.06084, 1, 0, 0.563624,-0.00156006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556414,-0.0360774) , 
3, 21.6243, 1, 0, 0.562645,-0.00281003) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.289018,-0.00536922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895777,0.0107786) , 
7, 0.000105965, 1, 0, 0.619788,0.00131788) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0674112,-0.000874398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797514,-0.013425) , 
7, 0.000350923, 1, 0, 0.242938,-0.0025181) , 
2, 0.214188, 1, 0, 0.472494,-0.00018143) , 
3, 25.2282, 1, 0, 0.499742,-0.000975915)    );
  // itree = 784
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97333,-0.000902108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851425,-0.0159404) , 
2, 0.176752, 1, 0, 0.958519,-0.00202028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775801,0.0138676) , 
2, 0.285575, 1, 0, 0.938954,-0.000661045) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.788842,-0.00443654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95505,0.0116985) , 
7, 0.000220031, 1, 0, 0.915325,0.00377742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00144346,0.00932704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00274519,-0.0182106) , 
6, 0.0347718, 1, 0, 0.00176377,-0.000208499) , 
0, 0.00232921, 1, 0, 0.282779,0.00101758) , 
0, 0.00119291, 1, 0, 0.502364,0.000455841)    );
  // itree = 785
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86268,-0.00501137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314772,0.00658649) , 
2, 0.118742, 1, 0, 0.656414,0.000179133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953494,-0.0116351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000345773,-0.00254251) , 
0, 0.00238633, 1, 0, 0.332433,-0.00245368) , 
5, 0.017427, 1, 0, 0.487415,-0.00119423) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940254,0.0405992) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532348,0.0126272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424402,-0.0158258) , 
3, 50.3758, 1, 0, 0.483327,-0.000332747) , 
0, 0.0011812, 1, 0, 0.632791,0.00254536) , 
6, 0.0440684, 1, 0, 0.50373,-0.000774537)    );
  // itree = 786
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947382,-0.00383864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927434,0.0182366) , 
0, 0.00101371, 1, 0, 0.939998,0.00283096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00193479,-0.017028) , 
0, 0.00178873, 1, 0, 0.643688,0.000729993) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586393,-0.0157311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317829,-0.041125) , 
2, 0.142918, 1, 0, 0.421163,-0.00960302) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780731,-0.00938835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204513,0.00385782) , 
5, 0.021981, 1, 0, 0.370533,-0.000977579) , 
3, 12.5965, 1, 0, 0.377639,-0.00218822) , 
5, 0.0182798, 1, 0, 0.504946,-0.000791825)    );
  // itree = 787
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851974,0.0266018) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.129843,-0.0120355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698658,0.0702923) , 
5, 0.00752262, 1, 0, 0.379342,0.0012723) , 
4, 0.00699313, 1, 0, 0.507666,0.0044559) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951475,-0.0186337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374139,-0.0022008) , 
0, 0.000994124, 1, 0, 0.556422,-0.00311523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.525522,-0.00101472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264381,0.0142854) , 
3, 100.949, 1, 0, 0.479643,0.000261806) , 
4, 0.0162337, 1, 0, 0.507882,-0.000980245) , 
5, 0.0092825, 1, 0, 0.507852,-0.000229482)    );
  // itree = 788
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758847,-0.00366978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464105,0.0137571) , 
2, 0.0951742, 1, 0, 0.702259,0.000310732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966315,0.0112535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624432,0.0362198) , 
0, 0.00119115, 1, 0, 0.753539,0.00559999) , 
6, 0.0347873, 1, 0, 0.717327,0.00186493) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499982,-0.00265496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476696,-0.0561635) , 
2, 0.162214, 1, 0, 0.490045,-0.00729273) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.262414,0.0169762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.271659,0.000309846) , 
3, 12.6057, 1, 0, 0.270349,0.000700778) , 
2, 0.176816, 1, 0, 0.298899,-0.000338014) , 
2, 0.142787, 1, 0, 0.505807,0.000751319)    );
  // itree = 789
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676966,0.00373962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192401,-0.0257587) , 
6, 0.0347403, 1, 0, 0.609833,0.000628993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73416,0.0242322) , 
4, 0.0176729, 1, 0, 0.61889,0.0011994) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0198618) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522967,0.00517128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257314,-0.0278838) , 
3, 99.9653, 1, 0, 0.470833,-0.000278504) , 
5, 0.0182022, 1, 0, 0.368037,-0.00199593) , 
4, 0.0185566, 1, 0, 0.496192,-0.000363514)    );
  // itree = 790
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956202,0.0186132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00130817,-0.0104524) , 
0, 0.00119363, 1, 0, 0.185869,0.00036215) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.786952,-0.0126192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8609,-0.00169192) , 
5, 0.014451, 1, 0, 0.839601,-0.00236689) , 
7, 9.73027e-05, 1, 0, 0.546718,-0.00114423) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87475,0.0147756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00234816,-0.000627344) , 
0, 0.00237689, 1, 0, 0.211796,0.00363797) , 
3, 112.964, 1, 0, 0.504683,-0.000544028)    );
  // itree = 791
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643739,0.00575679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964738,0.0722646) , 
7, 0.000110029, 1, 0, 0.69453,0.00379789) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0285476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130924) , 
4, 0.0292909, 1, 0, 0,-0.00171678) , 
4, 0.0116597, 1, 0, 0.313472,0.000772236) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.111336,-0.0360317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836947,0.00572325) , 
4, 0.0119274, 1, 0, 0.472667,-0.00460694) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828018,-0.0173293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629108,0.000953233) , 
2, 0.0238277, 1, 0, 0.6499,-0.000197045) , 
4, 0.0139168, 1, 0, 0.612884,-0.00111807) , 
6, 0.023194, 1, 0, 0.50306,-0.000424706)    );
  // itree = 792
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515201,0.00451862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673693,-0.00847003) , 
6, 0.037777, 1, 0, 0.544721,0.000375808) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889488,-0.0131998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00136137,2.06683e-05) , 
0, 0.00238727, 1, 0, 0.317243,-0.00458248) , 
3, 75.7105, 1, 0, 0.483484,-0.000958962) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507583,-0.0127721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76456,0.0115799) , 
4, 0.0231572, 1, 0, 0.672705,-0.00172722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584075,-0.0407682) , 
1, 1.11011, 1, 0, 0.646351,-0.00765411) , 
6, 0.0440725, 1, 0, 0.50194,-0.00171767)    );
  // itree = 793
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624553,-0.00832737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503913,-0.0167276) , 
3, 84.0672, 1, 0, 0.610284,-0.00383347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526733,-0.00590926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459257,0.0111) , 
3, 60.0422, 1, 0, 0.505596,-0.000594851) , 
4, 0.0139106, 1, 0, 0.538722,-0.00161964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152694,0.0201084) , 
3, 126.134, 1, 0, 0.499494,-0.00104558)    );
  // itree = 794
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990003,-0.00508499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954123,0.0198069) , 
2, 0.140974, 1, 0, 0.979352,0.00122022) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887291,0.00548581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870928,-0.0110891) , 
3, 12.4903, 1, 0, 0.873624,-0.00889929) , 
0, 0.000339948, 1, 0, 0.924258,-0.00405295) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00101678,-9.97848e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134155) , 
6, 0.0169783, 1, 0, 0.000547468,-0.000148726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00325047,0.00906649) , 
6, 0.032439, 1, 0, 0.00137066,0.000118145) , 
0, 0.00238582, 1, 0, 0.505019,-0.00215815)    );
  // itree = 795
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825353,0.0236798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535598,-0.00737699) , 
3, 85.9533, 1, 0, 0.779342,0.00145824) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776245,-0.00557036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000849591,0.000891882) , 
0, 0.00238358, 1, 0, 0.159814,-0.00162254) , 
2, 0.0713763, 1, 0, 0.391811,-0.000468869) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970193,0.0214135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912944,-0.00990947) , 
4, 0.0181423, 1, 0, 0.931215,-0.00126094) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903647,0.0107636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134266) , 
0, 0.00353449, 1, 0, 0.476676,0.00330668) , 
0, 0.00119344, 1, 0, 0.631091,0.00175498) , 
6, 0.0301525, 1, 0, 0.502988,0.000564405)    );
  // itree = 796
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584319,0.0182701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591249,0.000840126) , 
3, 4.80267, 1, 0, 0.590746,0.000564787) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865207,-0.00894787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00247493,0.00115658) , 
0, 0.00238221, 1, 0, 0.278372,-0.00328537) , 
3, 100.825, 1, 0, 0.54151,-4.2067e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103106,-0.0161565) , 
2, 0.428375, 1, 0, 0.505081,-0.000487811)    );
  // itree = 797
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998942,0.0568548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957043,-0.044191) , 
8, 0.19549, 1, 0, 0.994346,4.65654e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923189,-0.00535123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590767,-0.0106895) , 
6, 0.0212377, 1, 0, 0.780638,-0.0158241) , 
0, 5.68264e-05, 1, 0, 0.938426,-0.00410623) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0125721,-0.0127418) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953775,0.0114288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00148355,-0.00391747) , 
0, 0.00233008, 1, 0, 0.336587,0.00188884) , 
4, 0.0116006, 1, 0, 0.284862,0.000720447) , 
0, 0.00119344, 1, 0, 0.501959,-0.000882845)    );
  // itree = 798
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94245,0.0356596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597615,0.079294) , 
4, 0.00703444, 1, 0, 0.747048,0.0045556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85957,-0.00689181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00186159,-0.000790449) , 
0, 0.00119231, 1, 0, 0.0682598,-0.0004226) , 
2, 0.0237906, 1, 0, 0.156206,0.000222389) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952407,-0.0181127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527371,-0.0124321) , 
2, 0.141449, 1, 0, 0.860343,-0.00990274) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75579,-0.00593557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872529,0.00930301) , 
7, 0.000474827, 1, 0, 0.787176,-0.00100159) , 
6, 0.0321483, 1, 0, 0.812904,-0.00413149) , 
7, 9.73033e-05, 1, 0, 0.490782,-0.00199584)    );
  // itree = 799
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978874,-0.0348153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98444,0.0249059) , 
6, 0.01411, 1, 0, 0.982824,-0.00122957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550674,-0.0330705) , 
0, 0.00119363, 1, 0, 0.838313,-0.00508449) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.284735,-0.000777408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396181,0.010891) , 
6, 0.0301358, 1, 0, 0.323725,0.000671428) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832783,-0.0155491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827784,0.00113248) , 
3, 37.7684, 1, 0, 0.830024,-0.00398113) , 
7, 0.000349419, 1, 0, 0.439478,-0.00039227) , 
2, 0.0237979, 1, 0, 0.49488,-0.00104406)    );
  // itree = 800
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957333,0.0108066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912921,-0.00673359) , 
4, 0.0150188, 1, 0, 0.937731,0.000433423) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.390618,-0.0186133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889472,-0.00775179) , 
7, 0.000273212, 1, 0, 0.790054,-0.0123734) , 
0, 0.00153122, 1, 0, 0.891118,-0.0036089) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131678) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130928) , 
6, 0.0115911, 1, 0, 0,-5.84135e-05) , 
0, 0.00971851, 1, 0, 0,-0.000157227) , 
0, 0.00358032, 1, 0, 0.492196,-0.00206371)    );
  // itree = 801
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861006,-0.00553652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747719,-0.0240038) , 
3, 60.8012, 1, 0, 0.829496,-0.00241018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730931,-0.0242483) , 
2, 0.0339617, 1, 0, 0.808405,-0.00449938) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715785,0.0074332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.319703,-0.00362751) , 
4, 0.020858, 1, 0, 0.579006,0.00222838) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865286,-0.0123951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130941) , 
0, 0.00357872, 1, 0, 0.122385,-0.00152377) , 
5, 0.0231101, 1, 0, 0.399533,0.000753614) , 
2, 0.0475958, 1, 0, 0.496187,-0.000488156)    );
  // itree = 802
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844755,-0.00451684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502955,-0.0173196) , 
2, 0.124584, 1, 0, 0.756584,-0.00425548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0887596,0.00351854) , 
2, 0.261697, 1, 0, 0.621676,-0.00306435) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0174988) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810571,0.0314604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.325323,0.000370746) , 
4, 0.021441, 1, 0, 0.472747,0.00231275) , 
5, 0.0184853, 1, 0, 0.363639,0.000968244) , 
4, 0.0185684, 1, 0, 0.493986,-0.00106882)    );
  // itree = 803
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96385,-0.00880638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791486,0.00535223) , 
2, 0.214181, 1, 0, 0.932387,-0.0022204) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.788264,-0.0272015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954813,0.0202847) , 
4, 0.0227497, 1, 0, 0.873645,-0.0146243) , 
0, 0.00203883, 1, 0, 0.926458,-0.00347231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00348392,0.00902038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000591154,0.00596246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139206) , 
3, 50.5163, 1, 0, 0.000284139,-0.000307344) , 
2, 0.119146, 1, 0, 0.00104624,-0.000106648) , 
0, 0.00238582, 1, 0, 0.491339,-0.00188981)    );
  // itree = 804
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724897,0.00168944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461815,-0.009983) , 
3, 75.7103, 1, 0, 0.662743,-0.000617613) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.138852,-0.00141999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615023,-0.0194915) , 
6, 0.034764, 1, 0, 0.350207,-0.00538118) , 
2, 0.206197, 1, 0, 0.601583,-0.00154979) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00663319,-0.00723478) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814488,0.0243937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764913,0.018141) , 
5, 0.0220769, 1, 0, 0.788995,0.0103844) , 
7, 0.000339949, 1, 0, 0.184678,0.00143973) , 
2, 0.309297, 1, 0, 0.505428,-0.00086029)    );
  // itree = 805
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9971,0.0185784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842407,-0.00608097) , 
0, 5.68375e-05, 1, 0, 0.946071,-0.00175057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00202278,-0.00826325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652245,0.00938143) , 
7, 0.000109037, 1, 0, 0.17753,0.000733566) , 
0, 0.00119363, 1, 0, 0.40838,-1.26032e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972603,0.0255348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904783,-0.00521855) , 
4, 0.0207535, 1, 0, 0.931208,0.000588593) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83951,-0.0114897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718554,-0.000746976) , 
0, 0.0019687, 1, 0, 0.754205,-0.00554714) , 
0, 0.00102675, 1, 0, 0.83188,-0.00285455) , 
7, 0.000345041, 1, 0, 0.501118,-0.000634934)    );
  // itree = 806
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663511,0.025905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000133643,-0.0148657) , 
5, 0.00878516, 1, 0, 0.172364,0.0016386) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711653,-0.000504571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297462,-0.007583) , 
2, 0.237979, 1, 0, 0.58012,-0.00123573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392354,-0.0246245) , 
1, 3.00129, 1, 0, 0.571782,-0.00182005) , 
6, 0.0139215, 1, 0, 0.501386,-0.00121047)    );
  // itree = 807
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961817,0.0891073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824339,-0.0167516) , 
5, 0.00798195, 1, 0, 0.865171,-1.30992e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688621,-0.0702045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919124,-0.0111812) , 
7, 0.000151441, 1, 0, 0.804124,-0.0133884) , 
2, 0.0135934, 1, 0, 0.843265,-0.0048127) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618203,0.0103449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160446,-0.00649492) , 
2, 0.114461, 1, 0, 0.318328,-0.000608054) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923096,-0.00743538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819967,0.021039) , 
0, 0.00154013, 1, 0, 0.866625,0.00343676) , 
7, 0.000340735, 1, 0, 0.445366,0.000329117) , 
2, 0.0237979, 1, 0, 0.502103,-0.000404057)    );
  // itree = 808
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.563287,-0.00541013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558939,0.0192724) , 
3, 15.7295, 1, 0, 0.561081,0.00093841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907696,-0.0112402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.46038e-05,-0.00787829) , 
0, 0.0035809, 1, 0, 0.515559,-0.00361001) , 
3, 33.0324, 1, 0, 0.53466,-0.00170146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121365,0.0134579) , 
3, 138.802, 1, 0, 0.504648,-0.00129883)    );
  // itree = 809
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950074,0.00631689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915673,-0.0130738) , 
4, 0.0135103, 1, 0, 0.931368,-0.00256382) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635645,-0.0325445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941465,-0.00305217) , 
4, 0.016302, 1, 0, 0.891053,-0.0139631) , 
0, 0.00147521, 1, 0, 0.919262,-0.00598681) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000923296,-0.00862868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00151927,0.0168289) , 
4, 0.0232305, 1, 0, 0.00125026,-0.000369699) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00161871,0.0205967) , 
6, 0.0208925, 1, 0, 0.000861828,0.00029439) , 
2, 0.261893, 1, 0, 0.00106772,-5.7624e-05) , 
0, 0.00238727, 1, 0, 0.495253,-0.0032488)    );
  // itree = 810
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998442,0.0403695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972355,-0.0512781) , 
8, 0.19549, 1, 0, 0.9958,-0.000126518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928868,0.00139801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537679,-0.0137349) , 
4, 0.0109502, 1, 0, 0.774204,-0.0141346) , 
0, 5.68264e-05, 1, 0, 0.93869,-0.00373673) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.176355,-0.00912999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300145,0.0059021) , 
4, 0.0139264, 1, 0, 0.270559,0.000263834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48088,-0.0105306) , 
6, 0.0463804, 1, 0, 0.284257,-0.000167553) , 
0, 0.00119344, 1, 0, 0.503306,-0.00136222)    );
  // itree = 811
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979375,-0.00232762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947905,0.0155337) , 
0, 0.000625212, 1, 0, 0.97368,0.00116733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770634,0.013235) , 
2, 0.285575, 1, 0, 0.95222,0.00216281) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00996413,-0.0128551) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206171,0.00209865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793093,-0.0048128) , 
7, 0.000345042, 1, 0, 0.326737,-0.000379343) , 
4, 0.0115997, 1, 0, 0.277505,-0.00116295) , 
0, 0.00119363, 1, 0, 0.496242,-8.47665e-05)    );
  // itree = 812
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936873,-0.00349561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702176,-0.0193121) , 
0, 0.00169343, 1, 0, 0.91922,-0.00415081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00517385,0.0107823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130969) , 
0, 0.00994558, 1, 0, 0.00108088,0.000308591) , 
0, 0.00238633, 1, 0, 0.396073,-0.00160989) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930039,0.00965199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933117,-0.0143332) , 
3, 33.0929, 1, 0, 0.931877,-0.00238848) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839493,0.0438801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695346,-0.00529479) , 
5, 0.022605, 1, 0, 0.787313,0.00663006) , 
0, 0.00154326, 1, 0, 0.853239,0.00251732) , 
7, 0.000340735, 1, 0, 0.494004,-0.00072578)    );
  // itree = 813
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523939,0.00103749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654788,-0.0111569) , 
6, 0.0417474, 1, 0, 0.546673,-0.000616938) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.516025,-0.0302714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445232,0.00215061) , 
4, 0.0139769, 1, 0, 0.465731,-0.00601421) , 
3, 76.9034, 1, 0, 0.536636,-0.00128624) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.860799,0.0131232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00108032,-0.0061368) , 
0, 0.00238076, 1, 0, 0.258286,0.0027019) , 
3, 100.947, 1, 0, 0.492374,-0.000652063)    );
  // itree = 814
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93649,-0.00134535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00054598,-0.0259588) , 
0, 0.00178279, 1, 0, 0.672067,-0.00276192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.404885,-0.0261413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.40381,0.00613265) , 
3, 5.99902, 1, 0, 0.403892,0.000587436) , 
5, 0.0182925, 1, 0, 0.536066,-0.00106334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.162899,0.0182659) , 
3, 125.935, 1, 0, 0.500498,-0.000561122)    );
  // itree = 815
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.24121,-0.00154825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831104,0.00994216) , 
7, 0.000120095, 1, 0, 0.472423,0.00139003) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913502,-0.00877874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.108015,-0.00095816) , 
0, 0.00119363, 1, 0, 0.279867,-0.0016656) , 
3, 63.0688, 1, 0, 0.403201,0.000291558) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866839,-0.00488645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696562,-0.0208144) , 
4, 0.0223405, 1, 0, 0.820713,-0.00562932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93949,0.0108163) , 
7, 0.000557405, 1, 0, 0.835099,-0.00419799) , 
7, 0.000345042, 1, 0, 0.496489,-0.000678161)    );
  // itree = 816
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95399,0.0179039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476437,-0.0375064) , 
5, 0.00866314, 1, 0, 0.769298,-0.00902231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867476,0.0162728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932699,0.0687735) , 
6, 0.0280063, 1, 0, 0.90772,0.00383486) , 
8, 0.0336566, 1, 0, 0.841143,-0.00234902) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.556006,0.00248955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158138,-0.00745424) , 
2, 0.363661, 1, 0, 0.484644,0.000188541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.14543,0.0150261) , 
3, 126.185, 1, 0, 0.447972,0.000593209) , 
2, 0.0237906, 1, 0, 0.504727,0.00016849)    );
  // itree = 817
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877179,-0.00687099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484606,-0.0335049) , 
5, 0.0199185, 1, 0, 0.758261,-0.00812873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277569,0.00456284) , 
2, 0.166316, 1, 0, 0.559361,-0.0040857) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703969,0.00895073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0167215) , 
4, 0.0139106, 1, 0, 0.365653,0.00130471) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62215,0.00263642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54609,-0.0139667) , 
1, 1.4521, 1, 0, 0.599872,-0.00170034) , 
6, 0.0278417, 1, 0, 0.490161,-0.000292737) , 
3, 12.6199, 1, 0, 0.500852,-0.000878771)    );
  // itree = 818
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984255,0.00918794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952162,-0.0149972) , 
8, 0.13671, 1, 0, 0.980385,0.000404535) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.604482,-0.0121138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896715,-0.00494818) , 
4, 0.0142286, 1, 0, 0.846446,-0.00726063) , 
2, 0.0951916, 1, 0, 0.920281,-0.00303512) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00344531,0.0177757) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0014042,-0.00928331) , 
6, 0.0301355, 1, 0, 0.000445306,-0.000318594) , 
4, 0.0162671, 1, 0, 0.00137973,0.000213621) , 
0, 0.00238727, 1, 0, 0.502602,-0.00155844)    );
  // itree = 819
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647442,-0.00796768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451802,0.000985616) , 
4, 0.0139209, 1, 0, 0.524191,-0.000978363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798846,0.0127411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132512) , 
0, 0.00357872, 1, 0, 0.220981,0.0025081) , 
3, 100.824, 1, 0, 0.474,-0.000401239) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664377,-0.0260775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635787,-0.00477182) , 
3, 37.3855, 1, 0, 0.648125,-0.00568056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639531,0.00925778) , 
6, 0.0473858, 1, 0, 0.646378,-0.00367836) , 
6, 0.0417501, 1, 0, 0.503399,-0.000960148)    );
  // itree = 820
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826824,0.00750079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.245564,-0.00728402) , 
4, 0.0162618, 1, 0, 0.639988,0.00176296) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00196174,-0.0255366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429197,0.00410769) , 
4, 0.0162398, 1, 0, 0.3385,-0.000887337) , 
5, 0.0174088, 1, 0, 0.484667,0.000397571) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639345,-0.0343675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.697898,-0.00550511) , 
6, 0.0456363, 1, 0, 0.677757,-0.00938798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521804,0.00952921) , 
2, 0.285522, 1, 0, 0.624483,-0.0053174) , 
6, 0.0440684, 1, 0, 0.500751,-0.000259867)    );
  // itree = 821
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845162,-0.0121194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648452,0.00717149) , 
2, 0.0362491, 1, 0, 0.716895,0.000608838) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821301,-0.00577745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000706381,-0.00204045) , 
0, 0.00238462, 1, 0, 0.273722,-0.00191138) , 
2, 0.190389, 1, 0, 0.538276,-0.000406926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154997,-0.0148398) , 
3, 125.699, 1, 0, 0.500386,-0.000917103)    );
  // itree = 822
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955908,0.0105058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856384,-0.0423049) , 
2, 0.0135324, 1, 0, 0.906948,-0.00911934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0791578,-0.00226785) , 
2, 0.0475842, 1, 0, 0.483736,-0.00504295) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63058,0.0102334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522318,-7.23175e-05) , 
4, 0.0162411, 1, 0, 0.562953,0.00104259) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.320342,-0.010009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498621,0.0136209) , 
6, 0.0417492, 1, 0, 0.355302,-0.00204783) , 
3, 75.7105, 1, 0, 0.506705,0.000205464) , 
5, 0.00915064, 1, 0, 0.503582,-0.000508004)    );
  // itree = 823
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979276,-0.0027831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995083,0.080557) , 
7, 0.000451408, 1, 0, 0.982146,0.00121212) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893581,-0.00678079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852604,-0.0252472) , 
0, 0.00218539, 1, 0, 0.889509,-0.00742397) , 
0, 0.000339948, 1, 0, 0.934337,-0.00324488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00244491,0.0054548) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000102813,0.0174702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00196951,-0.00870692) , 
6, 0.0278039, 1, 0, 0.000821782,-0.000226459) , 
4, 0.0208791, 1, 0, 0.00147428,6.79755e-05) , 
0, 0.00238727, 1, 0, 0.502818,-0.00171243)    );
  // itree = 824
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421684,0.00574379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268681,0.0231591) , 
3, 48.964, 1, 0, 0.349505,0.00463849) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638111,-0.0130992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502895,-0.00138139) , 
4, 0.00898751, 1, 0, 0.511178,-0.000707787) , 
4, 0.00699956, 1, 0, 0.496043,-0.000207272) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652069,0.00670386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641338,0.0382529) , 
6, 0.0477145, 1, 0, 0.647495,0.00564202) , 
6, 0.0463879, 1, 0, 0.505758,0.000167947)    );
  // itree = 825
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628724,0.0285544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00580119,-0.0118128) , 
2, 0.0713763, 1, 0, 0.187616,0.000330919) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892982,-0.0130322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568886,0.00495029) , 
2, 0.260818, 1, 0, 0.835704,-0.00340044) , 
7, 8.86924e-05, 1, 0, 0.553329,-0.00177467) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922858,0.0169877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760272,-0.00102324) , 
3, 110.923, 1, 0, 0.86846,0.00386141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133582) , 
0, 0.00357872, 1, 0, 0.338355,0.0013402) , 
3, 75.7125, 1, 0, 0.494673,-0.000924772)    );
  // itree = 826
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670585,-0.0159073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521217,0.0023175) , 
5, 0.00555569, 1, 0, 0.541395,-0.00114091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400776,-0.0340536) , 
7, 0.000122957, 1, 0, 0.519894,-0.00362339) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545557,-0.0133426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547812,0.000309031) , 
3, 4.20052, 1, 0, 0.547029,-0.002852) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.534236,0.00567501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140385,-0.0115415) , 
3, 132.632, 1, 0, 0.493208,0.00103342) , 
3, 12.6034, 1, 0, 0.501504,0.000434563) , 
4, 0.0116233, 1, 0, 0.505562,-0.000460818)    );
  // itree = 827
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921545,-0.00437028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947656,-0.0179933) , 
5, 0.0179851, 1, 0, 0.925587,-0.00405873) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0012332,-0.00794615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000472176,0.00651024) , 
4, 0.0139107, 1, 0, 0.000663156,-0.000175026) , 
0, 0.00238582, 1, 0, 0.458011,-0.0020954) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757438,0.0184153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495581,-1.97756e-05) , 
4, 0.023193, 1, 0, 0.67081,0.003534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385025,-0.00854639) , 
3, 100.71, 1, 0, 0.62171,0.00236653) , 
6, 0.0394298, 1, 0, 0.497182,-0.00102773)    );
  // itree = 828
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.26924,0.00548847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517559,0.0648386) , 
4, 0.00531371, 1, 0, 0.34618,0.00325999) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.698697,-0.00503868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675695,-0.0221647) , 
4, 0.0221087, 1, 0, 0.697501,-0.00263254) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.745273,0.0311591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0194543,-0.0122029) , 
4, 0.0240995, 1, 0, 0.147186,0.000536496) , 
4, 0.0228669, 1, 0, 0.509221,-0.00154831) , 
4, 0.00697394, 1, 0, 0.49495,-0.00112744)    );
  // itree = 829
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942832,-0.00484985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735397,-0.0163036) , 
0, 0.00169343, 1, 0, 0.927011,-0.00392404) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00362537,0.0060871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130968) , 
0, 0.00997608, 1, 0, 0.000791778,0.000129267) , 
0, 0.00238727, 1, 0, 0.407057,-0.00164862) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844554,0.00220286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767348,0.0229556) , 
2, 0.356352, 1, 0, 0.830826,0.00275657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951956,0.0503154) , 
1, 1.28104, 1, 0, 0.848166,0.00424146) , 
7, 0.000345041, 1, 0, 0.503246,-0.00036422)    );
  // itree = 830
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.235135,-0.00889451) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78086,-0.00282265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497033,0.00892758) , 
2, 0.0815659, 1, 0, 0.630791,0.00115885) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.203691,-0.0120738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21498,0.00704882) , 
3, 50.2134, 1, 0, 0.209511,-0.00128199) , 
2, 0.285587, 1, 0, 0.519655,0.000514949) , 
4, 0.00464135, 1, 0, 0.50496,0.000225467)    );
  // itree = 831
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995608,0.00630179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80413,0.00679881) , 
0, 0.000113664, 1, 0, 0.948767,0.00201002) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.326647,-0.00754937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301536,0.00362977) , 
3, 48.5763, 1, 0, 0.316697,-0.00130046) , 
0, 0.00119363, 1, 0, 0.542607,-0.000117246) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812358,-0.0137308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00211467,0.000729359) , 
0, 0.00238258, 1, 0, 0.194665,-0.00429924) , 
3, 113.342, 1, 0, 0.497826,-0.00065548)    );
  // itree = 832
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763412,0.00930344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674997,-0.0191805) , 
6, 0.0440647, 1, 0, 0.756522,0.000678843) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597292,-0.0250687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.574564,-0.0110576) , 
4, 0.0140011, 1, 0, 0.581223,-0.00852213) , 
2, 0.0849915, 1, 0, 0.722115,-0.00112706) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853229,0.0166304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00193104,-0.0077292) , 
0, 0.00205156, 1, 0, 0.324929,0.00407863) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666175,-0.0258165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277484,0.00713267) , 
4, 0.0200049, 1, 0, 0.320057,-0.000383024) , 
4, 0.0185682, 1, 0, 0.321865,0.00127312) , 
2, 0.118993, 1, 0, 0.503266,0.000185314)    );
  // itree = 833
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603084,-0.000803862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811501,-0.0108817) , 
7, 0.000214517, 1, 0, 0.651868,-0.00174662) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0187339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902899,0.00673) , 
7, 0.000255619, 1, 0, 0.330423,0.000830969) , 
5, 0.0174088, 1, 0, 0.486468,-0.00042032) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547223,-0.0333844) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662417,0.0256225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64255,-0.00307741) , 
1, 1.06416, 1, 0, 0.648688,0.00131233) , 
6, 0.0453999, 1, 0, 0.620168,-0.0043839) , 
6, 0.0440685, 1, 0, 0.502098,-0.000883679)    );
  // itree = 834
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878755,-0.0186683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678439,0.00613742) , 
2, 0.0226469, 1, 0, 0.722783,0.000246047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0464803,-0.00936104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702674,-0.0227399) , 
7, 0.000339584, 1, 0, 0.217011,-0.00715243) , 
2, 0.237906, 1, 0, 0.566638,-0.00203805) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600785,0.00111491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330855,0.02803) , 
2, 0.206223, 1, 0, 0.533202,0.00131458) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00472891,-0.000139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775456,-0.0072003) , 
7, 0.000347081, 1, 0, 0.173144,-0.00125895) , 
2, 0.333181, 1, 0, 0.452769,0.000739678) , 
3, 37.7094, 1, 0, 0.502153,-0.000464984)    );
  // itree = 835
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.140647,-0.00248862) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.392548,-0.0273676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771704,-0.0154365) , 
4, 0.00593642, 1, 0, 0.643958,-0.00906079) , 
7, 1.25291e-05, 1, 0, 0.442397,-0.00570337) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763341,-0.0081535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329658,0.005496) , 
2, 0.0475756, 1, 0, 0.428593,0.00074336) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958392,0.0112751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516497,-0.00917938) , 
0, 0.00119069, 1, 0, 0.666994,-0.00197978) , 
6, 0.0371102, 1, 0, 0.505121,-0.000130778) , 
4, 0.00928068, 1, 0, 0.495361,-0.000997856)    );
  // itree = 836
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.279722,-0.00472307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501746,0.0197686) , 
5, 0.00537882, 1, 0, 0.354025,0.00122555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582053,-0.0351682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660088,-0.0144254) , 
5, 0.0082062, 1, 0, 0.621081,-0.0133076) , 
5, 0.00705275, 1, 0, 0.458344,-0.00445148) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568169,-0.00121677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536368,0.0123806) , 
3, 37.8451, 1, 0, 0.552337,0.00113601) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.409307,-0.0121314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0798082,-0.00360253) , 
5, 0.021602, 1, 0, 0.197461,-0.00386642) , 
3, 113.566, 1, 0, 0.507228,0.000500133) , 
5, 0.00925117, 1, 0, 0.500213,-0.000210439)    );
  // itree = 837
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843278,0.0285591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165974,-0.0198756) , 
4, 0.00699313, 1, 0, 0.396115,-0.000667425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656925,-0.0247128) , 
5, 0.00792714, 1, 0, 0.459769,-0.00385455) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812154,0.0255081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595329,-0.00612465) , 
4, 0.01635, 1, 0, 0.703253,0.00106807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56948,-0.0209676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.325514,-0.00107487) , 
2, 0.13715, 1, 0, 0.34608,-0.00168626) , 
2, 0.118993, 1, 0, 0.497969,-0.000514978) , 
5, 0.00925117, 1, 0, 0.492645,-0.000980366)    );
  // itree = 838
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658092,-0.00424265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696689,0.0258328) , 
6, 0.044062, 1, 0, 0.661676,-0.000625004) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413495,-0.0246867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315093,0.0008392) , 
3, 62.6191, 1, 0, 0.376751,-0.00575418) , 
2, 0.199405, 1, 0, 0.621518,-0.00134792) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.338296,0.0294001) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732551,0.00791384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0994499,-0.00812483) , 
0, 0.00119048, 1, 0, 0.175125,-0.000728239) , 
2, 0.295831, 1, 0, 0.202557,0.000669999) , 
2, 0.261785, 1, 0, 0.494824,-0.000737695)    );
  // itree = 839
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554183,-0.00519137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.765851,-0.0199421) , 
7, 0.000124435, 1, 0, 0.627447,-0.00421399) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537139,0.00212002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492583,-0.0175323) , 
3, 45.6425, 1, 0, 0.533449,-0.000374029) , 
4, 0.0139198, 1, 0, 0.564589,-0.00164616) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715877,0.0125418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.287048,-0.004568) , 
2, 0.308768, 1, 0, 0.631247,0.00263173) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.11091,-0.0184669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150903,0.0268676) , 
4, 0.023231, 1, 0, 0.133622,-0.000689576) , 
5, 0.0227805, 1, 0, 0.436103,0.00132928) , 
3, 50.4748, 1, 0, 0.507652,-0.000327637)    );
  // itree = 840
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826347,-0.0186648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658101,0.00844848) , 
2, 0.042729, 1, 0, 0.765003,-0.00249298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658033,-0.0346249) , 
2, 0.0815866, 1, 0, 0.753711,-0.00358694) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74625,0.013667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00295856,0.00101177) , 
0, 0.00194391, 1, 0, 0.172698,0.00324779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899087,-0.0108923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.243182,0.00412472) , 
0, 0.00119316, 1, 0, 0.380017,-0.000387073) , 
4, 0.0139578, 1, 0, 0.336543,0.000375144) , 
2, 0.0951945, 1, 0, 0.499672,-0.00117419)    );
  // itree = 841
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95057,0.00777807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000169036,-0.0188) , 
0, 0.00176313, 1, 0, 0.688998,0.00105884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665907,0.0370365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449955,0.0218768) , 
4, 0.0116368, 1, 0, 0.508031,0.00835159) , 
3, 75.2474, 1, 0, 0.649206,0.00266242) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801887,-0.0129265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949414,-0.00246404) , 
4, 0.0192451, 1, 0, 0.918446,-0.00458473) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130943) , 
5, 0.0330674, 1, 0, 0,-8.33434e-05) , 
0, 0.0035809, 1, 0, 0.370686,-0.00190011) , 
5, 0.0182798, 1, 0, 0.502982,0.000267081)    );
  // itree = 842
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.556282,0.024574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542314,-0.00323779) , 
3, 5.13943, 1, 0, 0.54335,-0.000507146) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.455769,0.0244168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.265584,0.0186294) , 
5, 0.0182473, 1, 0, 0.338988,0.00572826) , 
3, 107.932, 1, 0, 0.526421,9.37525e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0796996,-0.0163138) , 
3, 151.122, 1, 0, 0.496961,-0.000484185)    );
  // itree = 843
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79837,0.00454947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724569,-0.0226609) , 
6, 0.0417489, 1, 0, 0.790996,-0.000390217) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.167568,0.00163784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891809,0.0224521) , 
7, 0.000137863, 1, 0, 0.584549,0.00374463) , 
2, 0.0611703, 1, 0, 0.702144,0.00138936) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842276,-0.0166949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856497,-0.00012795) , 
3, 37.6461, 1, 0, 0.850493,-0.00738625) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000751488,0.00751839) , 
5, 0.018229, 1, 0, 0.000518273,-4.76478e-05) , 
0, 0.00238688, 1, 0, 0.293859,-0.00258033) , 
2, 0.142792, 1, 0, 0.497153,-0.000603734)    );
  // itree = 844
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243835,-0.0217599) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859092,0.0442173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76355,0.00738925) , 
3, 36.0034, 1, 0, 0.808901,0.00281089) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655847,-0.00661286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345487,0.00147015) , 
2, 0.1122, 1, 0, 0.423337,-0.000325063) , 
2, 0.0475958, 1, 0, 0.515051,0.000420882) , 
5, 0.00463944, 1, 0, 0.501711,1.70253e-05)    );
  // itree = 845
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.462345,-0.00328503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671788,0.00877919) , 
6, 0.0331182, 1, 0, 0.536903,0.000445542) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652544,0.000605536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682033,-0.0131607) , 
6, 0.0474937, 1, 0, 0.667344,-0.00500356) , 
6, 0.04639, 1, 0, 0.545162,0.000100525) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945123,0.0124262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824253,-0.014722) , 
0, 0.00090782, 1, 0, 0.887801,-0.00839817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00169239,-0.00170608) , 
0, 0.00238727, 1, 0, 0.297326,-0.00290133) , 
3, 88.2938, 1, 0, 0.493069,-0.000530436)    );
  // itree = 846
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.298329,-0.00508063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888813,0.0114637) , 
7, 0.000116513, 1, 0, 0.633415,0.0017545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.188146,-0.0152905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109922,-0.00779014) , 
2, 0.418239, 1, 0, 0.144175,-0.00387208) , 
2, 0.356979, 1, 0, 0.558029,0.000887503) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894328,-0.0138526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931571,0.0104362) , 
0, 0.00168468, 1, 0, 0.903943,-0.00839283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00231367,0.0110111) , 
0, 0.00238633, 1, 0, 0.34212,-0.00278366) , 
3, 75.7105, 1, 0, 0.499139,-0.000113815)    );
  // itree = 847
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764954,-0.017256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.574564,0.015804) , 
4, 0.0069936, 1, 0, 0.606589,0.000256752) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838014,-0.0230254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303166,0.00347791) , 
4, 0.0233248, 1, 0, 0.751059,-0.00958616) , 
6, 0.0255126, 1, 0, 0.688511,-0.00532471) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79675,0.0177538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00153631,-0.00445609) , 
0, 0.00202809, 1, 0, 0.241253,0.00467774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.316932,0.0365901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301756,-0.00848487) , 
3, 25.1145, 1, 0, 0.30604,-0.000417463) , 
4, 0.0185684, 1, 0, 0.283258,0.00137421) , 
2, 0.166545, 1, 0, 0.503083,-0.00225954)    );
  // itree = 848
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777923,0.0141561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6656,0.000169658) , 
4, 0.00935551, 1, 0, 0.692457,0.000995816) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899829,-0.000290722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884603,-0.029713) , 
2, 0.0571285, 1, 0, 0.892061,-0.0101446) , 
7, 0.000372586, 1, 0, 0.723998,-0.000764557) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000355987,0.153684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0182623,-0.00973842) , 
7, -0.000511495, 1, 0, 0.00882143,-0.00181512) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91049,0.00877373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00108183,-0.00381092) , 
0, 0.00238462, 1, 0, 0.47622,0.00280565) , 
6, 0.0231944, 1, 0, 0.320327,0.00126448) , 
2, 0.118993, 1, 0, 0.500239,0.000360159)    );
  // itree = 849
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99314,-0.0235097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970333,0.0178968) , 
2, 0.117798, 1, 0, 0.985222,0.000176186) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905081,-0.00839416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544319,-0.012008) , 
4, 0.0109502, 1, 0, 0.770692,-0.0147698) , 
0, 0.000283966, 1, 0, 0.93562,-0.00327951) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.17649,-0.0019361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555126,0.0304376) , 
4, 0.0139226, 1, 0, 0.277087,0.00206966) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62281,-0.012479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212878,0.00470794) , 
4, 0.019356, 1, 0, 0.291227,-0.00110298) , 
4, 0.0162588, 1, 0, 0.286771,-0.000103189) , 
0, 0.00119291, 1, 0, 0.503974,-0.00116647)    );
  // itree = 850
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833457,0.0541618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431143,0.00669784) , 
4, 0.00695963, 1, 0, 0.548846,0.00335429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0135905,-0.00902505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000759827,0.0163771) , 
2, 0.214228, 1, 0, 0.0050548,-0.00046361) , 
2, 0.0713959, 1, 0, 0.152466,0.000571351) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748615,-0.00736045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844862,-0.0192863) , 
5, 0.0133032, 1, 0, 0.775473,-0.0069841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915809,-0.0167961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824503,0.00392451) , 
2, 0.07141, 1, 0, 0.851704,-0.000571997) , 
5, 0.0144726, 1, 0, 0.828883,-0.00249159) , 
7, 8.86916e-05, 1, 0, 0.50884,-0.00104238)    );
  // itree = 851
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688758,-0.0101992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698297,0.00405689) , 
3, 25.1772, 1, 0, 0.694426,-0.000999392) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677377,-0.0235306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254096,-0.00393166) , 
2, 0.0950288, 1, 0, 0.433113,-0.0100272) , 
3, 88.121, 1, 0, 0.650633,-0.00251235) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0398427,-0.00893423) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809929,0.0182477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0214531) , 
4, 0.0243112, 1, 0, 0.464392,0.00196751) , 
4, 0.0185684, 1, 0, 0.361267,0.00103743) , 
5, 0.0184825, 1, 0, 0.500961,-0.000676259)    );
  // itree = 852
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732155,-0.00630508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849963,0.0337856) , 
6, 0.0155505, 1, 0, 0.82225,0.00233899) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902091,-0.00420315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.233957,0.00310557) , 
0, 0.00119291, 1, 0, 0.389657,3.52106e-05) , 
2, 0.0475813, 1, 0, 0.49407,0.000591262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6826,-0.00707715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554717,-0.012869) , 
2, 0.260859, 1, 0, 0.632865,-0.00672296) , 
6, 0.0463878, 1, 0, 0.503319,0.000103865)    );
  // itree = 853
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544681,0.0140513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566466,-0.00117394) , 
3, 5.14866, 1, 0, 0.563153,0.000338383) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900993,-0.0115144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131632) , 
0, 0.00355771, 1, 0, 0.543536,-0.00446659) , 
3, 36.0495, 1, 0, 0.554763,-0.00171657) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732698,0.0320445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212268,0.00455926) , 
5, 0.0116701, 1, 0, 0.391917,0.00690422) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.49169,0.0263261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.265239,-0.00457245) , 
3, 93.7442, 1, 0, 0.332496,-0.000181904) , 
4, 0.0139301, 1, 0, 0.348933,0.00177824) , 
3, 75.7103, 1, 0, 0.499176,-0.00077274)    );
  // itree = 854
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.860085,-0.00444931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0685861,-0.0289057) , 
5, 0.0137534, 1, 0, 0.588701,-0.00421772) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502225,0.00487168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123177,-0.0102907) , 
2, 0.356887, 1, 0, 0.433189,0.000276919) , 
4, 0.0139186, 1, 0, 0.487143,-0.00128248) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544012,-0.0401824) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665696,0.0256457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602877,-0.00874122) , 
3, 24.5436, 1, 0, 0.620754,-0.00133848) , 
6, 0.045398, 1, 0, 0.600554,-0.00686508) , 
6, 0.0440691, 1, 0, 0.500685,-0.00194907)    );
  // itree = 855
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805388,-0.0154079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756259,0.0164666) , 
3, 7.20954, 1, 0, 0.783094,-0.00145465) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.442385,-0.0200811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187017,-0.0107264) , 
2, 0.244716, 1, 0, 0.28843,-0.00801111) , 
2, 0.142744, 1, 0, 0.539143,-0.00468807) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736114,0.0272831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268044,-0.00261252) , 
5, 0.0218814, 1, 0, 0.585329,0.00384944) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.451171,0.00129117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613386,-0.00607939) , 
6, 0.041749, 1, 0, 0.480008,-0.000118657) , 
3, 24.6396, 1, 0, 0.497759,0.000550129) , 
3, 12.6214, 1, 0, 0.504314,-0.000279643)    );
  // itree = 856
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997851,0.0137384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972697,-0.041946) , 
8, 0.184767, 1, 0, 0.994431,-0.00108399) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934574,0.00515912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578699,-0.0122001) , 
4, 0.0109178, 1, 0, 0.796774,-0.0117704) , 
0, 5.68376e-05, 1, 0, 0.944753,-0.00376985) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.445583,-0.00633583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17761,0.00324902) , 
2, 0.119002, 1, 0, 0.263643,-0.000112607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51227,-0.0121242) , 
6, 0.0463804, 1, 0, 0.27923,-0.000458795) , 
0, 0.00119363, 1, 0, 0.496147,-0.00153798)    );
  // itree = 857
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951816,-0.00508312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.294949,0.0139295) , 
0, 0.0011907, 1, 0, 0.547144,0.000823614) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652917,-0.00205037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636065,-0.0341119) , 
1, 1.15562, 1, 0, 0.648287,-0.00589408) , 
6, 0.0417493, 1, 0, 0.564725,-0.000344067) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.827214,-0.0199682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931215,-0.00621801) , 
5, 0.0104909, 1, 0, 0.912836,-0.0074137) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00292812,0.00676003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000360244,-0.0108676) , 
6, 0.0185392, 1, 0, 0.00141508,-7.54073e-05) , 
0, 0.00238727, 1, 0, 0.419115,-0.00343851) , 
3, 50.4536, 1, 0, 0.498995,-0.00174093)    );
  // itree = 858
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.3661,0.0443234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634948,-0.015585) , 
5, 0.00573473, 1, 0, 0.530835,-0.00285817) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435836,0.00374909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868387,0.0106532) , 
7, 0.000340736, 1, 0, 0.551873,0.00161318) , 
5, 0.00925117, 1, 0, 0.548839,0.000968217) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752872,-0.00192068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791578,-0.0237383) , 
5, 0.0176939, 1, 0, 0.771838,-0.0173956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132979) , 
0, 0.00357387, 1, 0, 0.238999,-0.0056466) , 
3, 100.907, 1, 0, 0.496515,-0.000148852)    );
  // itree = 859
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.363882,0.0137123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772052,-0.0190412) , 
7, 0.000201223, 1, 0, 0.539289,-0.00599924) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.551787,-0.0094364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539904,0.00815833) , 
4, 0.0116233, 1, 0, 0.542641,0.000782987) , 
3, 6.00856, 1, 0, 0.54236,0.000213528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.146663,-0.015988) , 
3, 126.184, 1, 0, 0.502105,-0.000460459)    );
  // itree = 860
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997326,0.0107355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981844,-0.0337195) , 
2, 0.258516, 1, 0, 0.995339,-0.000462431) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641888,-0.0086484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878014,-0.00539526) , 
0, 0.000706711, 1, 0, 0.788264,-0.0108292) , 
0, 5.68376e-05, 1, 0, 0.942915,-0.00308697) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956136,0.0117381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782934,-0.00423289) , 
2, 0.260631, 1, 0, 0.924054,0.00410982) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00106326,0.00548926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0030157,-0.0105556) , 
6, 0.0347684, 1, 0, 0.00155405,-0.000239073) , 
0, 0.00233047, 1, 0, 0.288108,0.00111181) , 
0, 0.00119363, 1, 0, 0.505893,-0.000284683)    );
  // itree = 861
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72524,-0.0115906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719247,0.00988608) , 
3, 8.41103, 1, 0, 0.720049,0.00127753) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822225,-0.0111918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177708,-0.00068766) , 
0, 0.00119179, 1, 0, 0.287287,-0.00181027) , 
2, 0.190325, 1, 0, 0.551844,7.73747e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811388,-0.0197575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922331,-0.0030536) , 
7, 0.000224891, 1, 0, 0.881153,-0.0148118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00165961,-0.0041054) , 
0, 0.00238633, 1, 0, 0.302751,-0.0052785) , 
3, 88.2965, 1, 0, 0.500409,-0.00102855)    );
  // itree = 862
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.457426,0.000937199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860636,-0.0059267) , 
7, 0.00034831, 1, 0, 0.549,-0.000491965) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.486267,-0.0171794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277613,-0.00339803) , 
4, 0.018589, 1, 0, 0.366477,-0.00674975) , 
3, 105.704, 1, 0, 0.534981,-0.000972606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125159,0.01244) , 
3, 138.748, 1, 0, 0.503673,-0.000630742)    );
  // itree = 863
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.391142,0.0270157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794718,0.0384503) , 
7, 0.000208652, 1, 0, 0.561025,0.00618775) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597897,-0.0124927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564004,0.000717466) , 
3, 8.44924, 1, 0, 0.567282,-0.000331147) , 
3, 5.37656, 1, 0, 0.566321,0.000669969) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928183,-0.00519532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861231,-0.0247032) , 
0, 0.00204259, 1, 0, 0.921095,-0.00513294) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00353601,0.0112196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000903905,-0.00119154) , 
2, 0.167056, 1, 0, 0.00179434,0.000222973) , 
0, 0.00238633, 1, 0, 0.4487,-0.00238073) , 
3, 37.633, 1, 0, 0.499821,-0.0010548)    );
  // itree = 864
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591942,0.000595496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0710506,-0.0168466) , 
2, 0.0792004, 1, 0, 0.431429,-0.00132396) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962105,-0.0080449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639428,-0.0213669) , 
0, 0.00178009, 1, 0, 0.885753,-0.00603965) , 
7, 0.000122467, 1, 0, 0.692053,-0.00402913) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00062498,-0.006275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591626,0.0115083) , 
7, 0.000118064, 1, 0, 0.0946623,0.00132751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.528363,-0.00695776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583493,0.0223355) , 
6, 0.0467206, 1, 0, 0.537049,-0.00147468) , 
6, 0.0347967, 1, 0, 0.28148,0.000144161) , 
2, 0.166585, 1, 0, 0.505374,-0.00213163)    );
  // itree = 865
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.54262,-0.0125464) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545414,0.0320226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559394,0.00246042) , 
3, 10.4517, 1, 0, 0.557628,0.00111146) , 
3, 3.59797, 1, 0, 0.556713,0.000691601) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648038,-0.00400711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417829,-0.02063) , 
2, 0.054269, 1, 0, 0.525996,-0.00752064) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852787,0.00673572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000282275,-0.0109931) , 
0, 0.00238582, 1, 0, 0.227224,0.00116366) , 
2, 0.142543, 1, 0, 0.345218,-0.00226605) , 
3, 75.5612, 1, 0, 0.498592,-0.000121187)    );
  // itree = 866
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.456909,0.00455785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.405759,-0.022131) , 
3, 20.3497, 1, 0, 0.446365,-0.000259851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662542,0.00160861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625517,-0.0232357) , 
1, 1.3506, 1, 0, 0.646122,-0.00853881) , 
6, 0.0278313, 1, 0, 0.553212,-0.00468817) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591051,0.00978187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34418,-0.011908) , 
3, 47.6922, 1, 0, 0.419556,-0.00458356) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948104,0.0112995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.289801,-0.000479056) , 
0, 0.00119363, 1, 0, 0.476321,0.000970097) , 
5, 0.00917097, 1, 0, 0.468173,0.000172993) , 
3, 25.1397, 1, 0, 0.493776,-0.00129053)    );
  // itree = 867
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753942,-0.00134368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58687,-0.0278587) , 
2, 0.0873936, 1, 0, 0.735437,-0.00154607) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.209447,-0.00485944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462998,0.0104386) , 
4, 0.0139499, 1, 0, 0.40808,0.00126937) , 
2, 0.10197, 1, 0, 0.570633,-0.000128664) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64602,-0.00813286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131065) , 
0, 0.00357537, 1, 0, 0.153437,-0.00267807) , 
2, 0.356979, 1, 0, 0.497395,-0.000576209)    );
  // itree = 868
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650764,0.00505671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158358,-0.0121674) , 
2, 0.333089, 1, 0, 0.559643,0.000365955) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930223,-0.0240263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.235515,-0.001473) , 
0, 0.00119363, 1, 0, 0.427811,-0.00450208) , 
3, 85.0948, 1, 0, 0.539289,-0.00038562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123427,0.0159974) , 
3, 137.477, 1, 0, 0.508353,-3.75652e-05)    );
  // itree = 869
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665475,-0.00371604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555375,-0.0146407) , 
3, 75.688, 1, 0, 0.647713,-0.00188011) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.168216,0.00511562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383671,0.0172806) , 
6, 0.0301757, 1, 0, 0.250581,0.00319656) , 
3, 113.565, 1, 0, 0.605772,-0.00134397) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801998,0.00743427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689858,0.0232643) , 
2, 0.391078, 1, 0, 0.743451,0.0111438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000279395,0.000381193) , 
0, 0.00238398, 1, 0, 0.169133,0.00253787) , 
2, 0.309373, 1, 0, 0.501498,-0.000416944)    );
  // itree = 870
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968505,-0.0209757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731402,-0.0213828) , 
0, 0.000222038, 1, 0, 0.844913,-0.0146369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957282,0.0123985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933585,-0.00696803) , 
6, 0.0255354, 1, 0, 0.938584,-0.00241193) , 
5, 0.00805533, 1, 0, 0.929294,-0.00362429) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00322903,0.00616878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130992) , 
4, 0.0162398, 1, 0, 0.000904508,0.00013945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00181497,-0.0106593) , 
6, 0.0347629, 1, 0, 0.00114548,-0.000156826) , 
0, 0.00238462, 1, 0, 0.497262,-0.00201026)    );
  // itree = 871
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670037,-0.0243515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.580267,-0.00454725) , 
3, 25.1964, 1, 0, 0.610274,-0.00405912) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859011,-0.00679461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506553,0.0248357) , 
2, 0.190347, 1, 0, 0.742719,0.00151261) , 
5, 0.0158424, 1, 0, 0.641349,-0.00275185) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946083,0.00971322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013104) , 
0, 0.0035809, 1, 0, 0.42014,0.00142145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567304,-0.0136148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131993,0.00436223) , 
5, 0.022252, 1, 0, 0.220911,-0.00225048) , 
2, 0.333252, 1, 0, 0.365795,0.000419831) , 
5, 0.018479, 1, 0, 0.4998,-0.0011226)    );
  // itree = 872
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.414581,0.00872992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288213,0.0310474) , 
3, 50.3318, 1, 0, 0.358473,0.00435168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649474,-0.00660293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327599,0.00692652) , 
4, 0.0129266, 1, 0, 0.408924,0.000161997) , 
4, 0.00696227, 1, 0, 0.403488,0.000613438) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574747,-0.0405874) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963209,0.00735844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740994,-0.0167525) , 
5, 0.0231826, 1, 0, 0.893766,-0.000994358) , 
5, 0.019261, 1, 0, 0.849623,-0.0038005) , 
7, 0.000347868, 1, 0, 0.497531,-0.000316995)    );
  // itree = 873
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872948,0.0386206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715223,-0.00518161) , 
2, 0.0142386, 1, 0, 0.751824,-0.000372898) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901166,0.00929435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131917) , 
0, 0.00357949, 1, 0, 0.4696,0.0022919) , 
2, 0.0996937, 1, 0, 0.631356,0.000764586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74497,-0.0111573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0631226,-0.00577164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.367952,0.023021) , 
6, 0.0417103, 1, 0, 0.121916,-7.38175e-06) , 
0, 0.00119231, 1, 0, 0.214399,-0.00167494) , 
2, 0.261785, 1, 0, 0.507951,4.25698e-05)    );
  // itree = 874
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821119,-0.0247222) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964397,-0.000787967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798123,-0.00911536) , 
2, 0.237107, 1, 0, 0.933903,-0.00236539) , 
5, 0.00678603, 1, 0, 0.926541,-0.00349127) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00316285,0.0136646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013495) , 
5, 0.0193099, 1, 0, 0.00107701,0.000291193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00128462,-0.0118833) , 
6, 0.0347611, 1, 0, 0.00113189,-0.000133818) , 
0, 0.00238727, 1, 0, 0.501988,-0.00195096)    );
  // itree = 875
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553261,-0.00546397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738017,0.0113292) , 
4, 0.0132548, 1, 0, 0.598146,-0.000533654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668205,-0.0198051) , 
4, 0.0154645, 1, 0, 0.604768,-0.00185207) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622943,0.00807396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210592,-0.00683662) , 
5, 0.0231193, 1, 0, 0.470026,0.000995608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141234,-0.0153126) , 
3, 124.936, 1, 0, 0.43219,0.000368535) , 
4, 0.0162398, 1, 0, 0.501356,-0.000521445)    );
  // itree = 876
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580488,-0.00513286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896514,0.0446183) , 
5, 0.00568998, 1, 0, 0.781922,0.0063967) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777088,-0.0101484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657246,0.00996441) , 
2, 0.040802, 1, 0, 0.701965,0.000650624) , 
5, 0.00916687, 1, 0, 0.715812,0.00164575) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843885,-0.00222106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653026,-0.0104611) , 
2, 0.329212, 1, 0, 0.789769,-0.00489291) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130932) , 
0, 0.0128061, 1, 0, 0,-0.00012375) , 
0, 0.00358032, 1, 0, 0.294423,-0.00190167) , 
2, 0.142744, 1, 0, 0.4982,-0.000186199)    );
  // itree = 877
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.41449,-0.0256785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346765,-0.00402367) , 
3, 35.9295, 1, 0, 0.378104,-0.00664874) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.353193,0.00731211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680695,-0.00488907) , 
6, 0.0255137, 1, 0, 0.55643,-0.000894248) , 
4, 0.00699956, 1, 0, 0.540317,-0.0014142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155168,0.00949142) , 
3, 126.135, 1, 0, 0.502932,-0.000996682)    );
  // itree = 878
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56408,0.00123988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520331,-0.007901) , 
3, 56.6098, 1, 0, 0.552107,-0.000535578) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.494848,0.0362689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.287361,0.0043749) , 
5, 0.0182395, 1, 0, 0.367764,0.00466155) , 
3, 99.0681, 1, 0, 0.533277,-4.70574e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.108507,-0.012334) , 
3, 138.802, 1, 0, 0.499255,-0.000433572)    );
  // itree = 879
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963688,0.016689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212633,-0.0234033) , 
0, 0.000751376, 1, 0, 0.542835,-0.000763676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369987,-0.0142544) , 
3, 49.9612, 1, 0, 0.465074,-0.00530299) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.756024,0.00470418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.36268,-0.0134327) , 
2, 0.142731, 1, 0, 0.570758,-0.00199592) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.035938,-0.00914578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837344,0.0101215) , 
7, 0.000105965, 1, 0, 0.438454,0.00178671) , 
3, 50.4748, 1, 0, 0.512128,-0.000319651) , 
5, 0.00925326, 1, 0, 0.50534,-0.00103851)    );
  // itree = 880
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729041,-0.0110808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794286,0.00895754) , 
6, 0.0278313, 1, 0, 0.758313,-0.000832369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586912,0.0220597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362529,-0.00556071) , 
3, 74.8456, 1, 0, 0.526117,0.00329389) , 
2, 0.0906227, 1, 0, 0.674511,0.000656845) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692378,-0.00997247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938833,0.0042326) , 
6, 0.0394468, 1, 0, 0.827229,-0.00643917) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00211467,0.00618004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013887) , 
4, 0.0185684, 1, 0, 0.00070782,-0.000104083) , 
0, 0.00238462, 1, 0, 0.250407,-0.00201797) , 
2, 0.190324, 1, 0, 0.496713,-0.000464524)    );
  // itree = 881
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875306,0.0486364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749303,-0.00276895) , 
5, 0.00872301, 1, 0, 0.777022,0.00104253) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662938,-0.0232297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485949,-0.00459852) , 
2, 0.0907811, 1, 0, 0.522933,-0.00365437) , 
2, 0.0622995, 1, 0, 0.629952,-0.0016761) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694766,0.0011575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784157,0.0181345) , 
3, 71.6138, 1, 0, 0.723277,0.00455504) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130924) , 
5, 0.0277316, 1, 0, 0,-8.53979e-05) , 
0, 0.00357537, 1, 0, 0.209399,0.00125808) , 
2, 0.261713, 1, 0, 0.505076,-0.000804848)    );
  // itree = 882
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850351,0.00665633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329707,-0.00731849) , 
2, 0.118742, 1, 0, 0.628859,-0.00104807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782004,-0.0298563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645646,-0.00866268) , 
2, 0.189597, 1, 0, 0.714763,-0.0100466) , 
4, 0.0188882, 1, 0, 0.641386,-0.00236027) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.749567,-0.00893052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669378,0.0228818) , 
2, 0.0720193, 1, 0, 0.685864,0.00310642) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0146921) , 
6, 0.025497, 1, 0, 0,-0.000697955) , 
4, 0.0248541, 1, 0, 0.273307,0.000818038) , 
4, 0.0208773, 1, 0, 0.499103,-0.00113168)    );
  // itree = 883
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.330339,-0.00593498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127159,0.0123567) , 
3, 88.3297, 1, 0, 0.282759,-0.000180905) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922631,-0.0169457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796362,-0.00381726) , 
0, 0.0010247, 1, 0, 0.853698,-0.00575195) , 
7, 0.000169998, 1, 0, 0.460053,-0.00191089) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770537,0.00923652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477842,-0.00869395) , 
4, 0.0232243, 1, 0, 0.67531,0.000725418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488041,0.0236219) , 
2, 0.403326, 1, 0, 0.650635,0.00169957) , 
6, 0.0394297, 1, 0, 0.50368,-0.00108442)    );
  // itree = 884
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691972,-0.00161428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711534,0.031027) , 
6, 0.0278583, 1, 0, 0.70035,0.00274502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763611,-0.015531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362785,0.000770746) , 
4, 0.0199886, 1, 0, 0.417451,-0.000964711) , 
4, 0.0185517, 1, 0, 0.568256,0.00101284) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687904,-0.00377522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502917,0.0334053) , 
2, 0.0793254, 1, 0, 0.638673,0.00150277) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.419868,-0.0241467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.266523,-0.00318902) , 
2, 0.155391, 1, 0, 0.2859,-0.00419317) , 
2, 0.118993, 1, 0, 0.423583,-0.00197011) , 
3, 50.4735, 1, 0, 0.503339,-0.000325649)    );
  // itree = 885
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753799,-0.0262721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7702,-0.00625393) , 
4, 0.00703382, 1, 0, 0.76864,-0.0027302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.342936,-0.0248799) , 
3, 111.964, 1, 0, 0.732966,-0.004109) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0256186,-0.00772945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408457,-0.000242762) , 
4, 0.0120203, 1, 0, 0.124458,-0.0024117) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.5583,0.0194269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34283,0.00306952) , 
4, 0.0173275, 1, 0, 0.373421,0.00179759) , 
4, 0.0140107, 1, 0, 0.320176,0.000897353) , 
2, 0.118993, 1, 0, 0.501685,-0.001304)    );
  // itree = 886
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45996,0.00133774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664982,-0.00838869) , 
6, 0.03015, 1, 0, 0.558713,-0.00148208) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.20741,-0.01837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577247,0.0210954) , 
6, 0.0208749, 1, 0, 0.460306,0.00171301) , 
3, 72.0757, 1, 0, 0.537291,-0.000786544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136403,-0.0142137) , 
3, 126.135, 1, 0, 0.495933,-0.00129059)    );
  // itree = 887
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245682,-0.00469961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503527,0.00871341) , 
4, 0.00477144, 1, 0, 0.342142,-0.00100502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867318,-0.0053467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375993,-0.0196606) , 
5, 0.00863939, 1, 0, 0.614784,-0.00671604) , 
4, 0.00666789, 1, 0, 0.466244,-0.00360458) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803648,-0.0092353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706787,0.0146557) , 
2, 0.0317281, 1, 0, 0.744173,0.00145106) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568975,-0.0225444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.365932,0.00103953) , 
2, 0.114479, 1, 0, 0.381267,-0.000723343) , 
2, 0.0951916, 1, 0, 0.514386,7.42584e-05) , 
4, 0.00931665, 1, 0, 0.507197,-0.000475141)    );
  // itree = 888
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.308998,-0.0114641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534665,-0.0145938) , 
5, 0.00564603, 1, 0, 0.39495,-0.00524389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61615,0.00500784) , 
5, 0.00741103, 1, 0, 0.468679,-0.00283665) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80316,0.023963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417549,-0.00746617) , 
6, 0.0252598, 1, 0, 0.703516,0.00429478) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520714,0.00943394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446082,-0.00490695) , 
3, 25.2371, 1, 0, 0.468171,-0.000143567) , 
5, 0.0132832, 1, 0, 0.502729,0.000508166) , 
5, 0.00915064, 1, 0, 0.497947,3.84411e-05)    );
  // itree = 889
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993366,-0.00687529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947717,0.0485904) , 
0, 0.000129585, 1, 0, 0.971106,0.00660008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0333434,0.00527644) , 
0, 0.000907609, 1, 0, 0.457058,0.00365722) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.457022,0.00727126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.88715,0.0670628) , 
7, 0.000340735, 1, 0, 0.5635,0.00349468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896704,-0.00804792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.26673e-05,-0.00500564) , 
0, 0.00357693, 1, 0, 0.489429,-0.00252479) , 
3, 12.6138, 1, 0, 0.500829,-0.00159831) , 
4, 0.00927453, 1, 0, 0.494311,-0.000815699)    );
  // itree = 890
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.418736,-0.0287252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316134,-0.0295672) , 
3, 36.8035, 1, 0, 0.361523,-0.0123017) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473251,0.0298187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672302,-0.0101246) , 
7, 5.84935e-05, 1, 0, 0.576659,0.000662576) , 
5, 0.00617802, 1, 0, 0.477109,-0.00533636) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966853,0.00147765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857739,0.0176612) , 
2, 0.282384, 1, 0, 0.953648,0.00196768) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.197714,-0.0174563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.354818,-0.000604287) , 
4, 0.0139226, 1, 0, 0.319334,-0.00156504) , 
0, 0.00119363, 1, 0, 0.509879,-0.000503831) , 
5, 0.0092551, 1, 0, 0.505266,-0.0011841)    );
  // itree = 891
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816369,0.00591218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535937,-0.0134975) , 
3, 87.8367, 1, 0, 0.775781,-0.000266351) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287829,0.00425665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7126,-0.0261192) , 
6, 0.0255167, 1, 0, 0.572156,-0.0062555) , 
2, 0.0815778, 1, 0, 0.714129,-0.0020797) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61976,0.014598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.174083,0.0145276) , 
5, 0.0223824, 1, 0, 0.440355,0.00388669) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.251172,-0.00899721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143304,0.0176063) , 
2, 0.402667, 1, 0, 0.214023,-0.000825029) , 
2, 0.244808, 1, 0, 0.293701,0.000833688) , 
2, 0.142792, 1, 0, 0.500087,-0.000596477)    );
  // itree = 892
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834157,-0.0271115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904777,0.0506445) , 
8, 0.0661977, 1, 0, 0.855436,-0.00209986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763075,-0.0261055) , 
3, 60.003, 1, 0, 0.829462,-0.00554822) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91987,-0.00397301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176908,0.0101904) , 
0, 0.00119316, 1, 0, 0.359801,0.000778929) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715777,-0.00965692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392549,0.00714044) , 
4, 0.023193, 1, 0, 0.617923,-0.00267792) , 
6, 0.0371102, 1, 0, 0.441749,-0.000318543) , 
2, 0.0237979, 1, 0, 0.49753,-0.00107095)    );
  // itree = 893
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.563769,-0.0117766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571421,-0.0215623) , 
3, 5.54587, 1, 0, 0.565875,-0.0066286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594388,0.0128216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556139,-0.00388577) , 
3, 10.2778, 1, 0, 0.575761,0.000602692) , 
3, 7.77091, 1, 0, 0.569662,-0.00385809) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518762,-0.00445583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349311,0.0061152) , 
4, 0.0116224, 1, 0, 0.395747,0.000323097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921577,-0.0109515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66374,0.00957859) , 
0, 0.00205768, 1, 0, 0.841561,-0.00280079) , 
7, 0.000348309, 1, 0, 0.489814,-0.000336044) , 
3, 12.5538, 1, 0, 0.501617,-0.000856682)    );
  // itree = 894
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.285878,0.00198827) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92736,-0.0391246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437002,-0.0116861) , 
2, 0.02367, 1, 0, 0.609259,-0.0111898) , 
7, 3.29308e-05, 1, 0, 0.449351,-0.00535466) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946272,0.0046956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000915811,-0.00640427) , 
0, 0.00238727, 1, 0, 0.541014,0.00101685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126032,-0.0185071) , 
3, 138.803, 1, 0, 0.509738,0.000438237) , 
5, 0.00912617, 1, 0, 0.501139,-0.00038672)    );
  // itree = 895
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.292282,-0.00723907) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793479,-0.00479583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861022,-0.0230766) , 
3, 7.20597, 1, 0, 0.82125,-0.00916702) , 
7, 0.000141058, 1, 0, 0.566423,-0.00503371) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72178,-0.00453684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524136,-0.0166225) , 
2, 0.115519, 1, 0, 0.696499,-0.00215626) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873885,0.00761185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000527652,-0.00424289) , 
0, 0.00238582, 1, 0, 0.28922,0.00162567) , 
2, 0.142753, 1, 0, 0.48582,-0.00019992) , 
3, 12.6187, 1, 0, 0.49797,-0.00092857)    );
  // itree = 896
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245405,-0.0155212) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707481,-0.0119226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.222641,0.00772362) , 
2, 0.237919, 1, 0, 0.562818,-0.00264735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485654,-0.00132199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650276,0.00693336) , 
6, 0.0440686, 1, 0, 0.50559,-4.0165e-05) , 
3, 12.6184, 1, 0, 0.514758,-0.000457834) , 
5, 0.00464456, 1, 0, 0.502197,-0.000725814)    );
  // itree = 897
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715255,-0.00360773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624414,-0.0132376) , 
3, 54.0246, 1, 0, 0.685824,-0.00224235) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0115958,-0.00689564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52001,0.00857886) , 
6, 0.0324854, 1, 0, 0.244234,0.000644995) , 
2, 0.237906, 1, 0, 0.546007,-0.00132816) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83791,0.00817158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00236518,0.0094296) , 
0, 0.00238582, 1, 0, 0.197893,0.00274228) , 
3, 113.565, 1, 0, 0.502481,-0.000819214)    );
  // itree = 898
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982087,-0.013263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813727,-0.0221775) , 
2, 0.16451, 1, 0, 0.948411,-0.00617559) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.239098,-0.0117079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375107,0.00749684) , 
5, 0.0138671, 1, 0, 0.346101,0.000333688) , 
0, 0.00119188, 1, 0, 0.574029,-0.00212957) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990437,0.0178799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799766,0.0106752) , 
0, 0.000170182, 1, 0, 0.947969,0.00417446) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.368391,-0.0043889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163479,0.0101373) , 
2, 0.16656, 1, 0, 0.249514,0.000228542) , 
0, 0.00119129, 1, 0, 0.460616,0.00142117) , 
3, 37.8422, 1, 0, 0.509341,-0.000104314)    );
  // itree = 899
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945265,0.089727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.805084,-0.0117467) , 
5, 0.00851383, 1, 0, 0.849391,0.000343159) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853173,-0.0440183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635004,0.00705916) , 
4, 0.0162776, 1, 0, 0.763848,-0.0116144) , 
2, 0.0181303, 1, 0, 0.804522,-0.00592889) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729797,0.031121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611307,0.00872169) , 
4, 0.0138903, 1, 0, 0.64971,0.00416677) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87066,-0.0058507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000582393,-0.00307059) , 
0, 0.00238633, 1, 0, 0.326126,-0.00186587) , 
2, 0.1122, 1, 0, 0.406278,-0.000371573) , 
2, 0.0475958, 1, 0, 0.50133,-0.00169798)    );
  // itree = 900
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267757,-0.0119366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69141,0.0332702) , 
5, 0.00441432, 1, 0, 0.550689,0.00271166) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0444686,-0.0135741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.61222e-05,0.00976319) , 
5, 0.0217764, 1, 0, 0.0113082,-0.000338174) , 
5, 0.00925117, 1, 0, 0.15207,0.000457741) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926695,-0.00520973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649259,-0.0119034) , 
2, 0.0950132, 1, 0, 0.789864,-0.00541069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986556,0.0670159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751548,-0.00297237) , 
0, 0.00041869, 1, 0, 0.852093,0.00166052) , 
7, 0.00042475, 1, 0, 0.806107,-0.00356495) , 
7, 8.86924e-05, 1, 0, 0.49898,-0.00167595)    );
  // itree = 901
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680915,-0.0104408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658858,-0.0273941) , 
3, 20.4031, 1, 0, 0.676823,-0.00533834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20772,0.0186034) , 
2, 0.261704, 1, 0, 0.548779,-0.00285418) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798831,0.0277728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.193146,-0.00560302) , 
2, 0.0475842, 1, 0, 0.360175,-0.000519713) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.786145,0.0144801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296341,-0.00842452) , 
5, 0.0228899, 1, 0, 0.606027,0.00233384) , 
6, 0.030152, 1, 0, 0.4765,0.000830443) , 
3, 25.2074, 1, 0, 0.498375,-0.000284691)    );
  // itree = 902
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724649,-0.00653855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547554,0.00256054) , 
4, 0.0162884, 1, 0, 0.627657,-0.000856221) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697975,-0.0148013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133548) , 
0, 0.00238096, 1, 0, 0.161621,-0.00460726) , 
2, 0.356979, 1, 0, 0.553282,-0.00145485) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8943,0.0111612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00291496,-0.00310839) , 
0, 0.00238582, 1, 0, 0.259723,0.0016896) , 
3, 100.91, 1, 0, 0.506884,-0.000957854)    );
  // itree = 903
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857057,0.0316641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757362,0.00113423) , 
3, 36.4437, 1, 0, 0.805033,0.00189158) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635711,-0.0148028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.225401,0.000713818) , 
2, 0.069139, 1, 0, 0.265385,-0.000441438) , 
2, 0.0475972, 1, 0, 0.404179,0.000158598) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974059,0.000277377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756034,-0.0157749) , 
0, 0.000436108, 1, 0, 0.853963,-0.0059401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845456,0.0229925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803675,-0.00321496) , 
6, 0.0470134, 1, 0, 0.823625,0.00187907) , 
6, 0.0454725, 1, 0, 0.844816,-0.00358272) , 
7, 0.000349372, 1, 0, 0.49664,-0.000626463)    );
  // itree = 904
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864582,0.00636664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775984,-0.0180594) , 
2, 0.0181187, 1, 0, 0.818316,-0.00182058) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.455134,0.00519314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0758403,-0.00744036) , 
2, 0.370455, 1, 0, 0.377374,0.000759499) , 
2, 0.0475809, 1, 0, 0.488758,0.000107759) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71156,-0.0105882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584443,0.0111048) , 
3, 61.1641, 1, 0, 0.668699,-0.00198919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490016,-0.0130582) , 
2, 0.333285, 1, 0, 0.621451,-0.00349624) , 
6, 0.044069, 1, 0, 0.504617,-0.000322991)    );
  // itree = 905
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.3589,-0.00817795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649329,0.00351077) , 
6, 0.0231943, 1, 0, 0.545977,0.000112071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.319391,0.0437892) , 
3, 112.094, 1, 0, 0.532615,0.000443852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106883,-0.011361) , 
3, 138.529, 1, 0, 0.498967,-6.02538e-05)    );
  // itree = 906
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971306,0.0464267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955063,-0.00245327) , 
3, 36.7515, 1, 0, 0.96317,0.00272925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128965,-0.0194942) , 
0, 0.00077443, 1, 0, 0.461262,-0.00569536) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.264025,0.00215836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872465,-0.007701) , 
7, 0.000209346, 1, 0, 0.462523,-0.000990243) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645364,0.0176389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668131,-0.00284091) , 
6, 0.0467276, 1, 0, 0.652492,0.00266489) , 
6, 0.0417491, 1, 0, 0.498235,-0.000303124) , 
5, 0.0091424, 1, 0, 0.493082,-0.00105458)    );
  // itree = 907
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481179,-0.00235359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641077,-0.0240662) , 
6, 0.0309306, 1, 0, 0.493508,-0.0013339) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666032,-0.003512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691436,0.0188292) , 
1, 1.29238, 1, 0, 0.676571,0.00134653) , 
6, 0.0324762, 1, 0, 0.568035,-0.000242665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705823,-0.0131347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000509508,0.00623888) , 
0, 0.00238076, 1, 0, 0.154288,-0.00406835) , 
2, 0.356968, 1, 0, 0.496648,-0.000902741)    );
  // itree = 908
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978251,-0.00761065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490466,-0.0129991) , 
2, 0.047497, 1, 0, 0.83858,-0.00842098) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919503,0.00123125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91951,-0.0115152) , 
5, 0.0198429, 1, 0, 0.919505,-0.00236726) , 
5, 0.01078, 1, 0, 0.903313,-0.00357853) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130928) , 
6, 0.0115858, 1, 0, 0,-5.29205e-05) , 
0, 0.00972214, 1, 0, 0,-0.000183975) , 
0, 0.00357949, 1, 0, 0.502999,-0.00207419)    );
  // itree = 909
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.847735,0.0199087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831169,0.00124261) , 
4, 0.00709367, 1, 0, 0.838732,0.00445651) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.84054e-05,0.00540766) , 
0, 0.0127944, 1, 0, 4.34843e-05,-0.000121665) , 
0, 0.0035809, 1, 0, 0.144247,0.000665502) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893947,-0.00517596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790045,-0.0228394) , 
4, 0.0142269, 1, 0, 0.862585,-0.00705086) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831987,0.0166417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780982,-0.00650605) , 
3, 24.9889, 1, 0, 0.796336,-0.000529472) , 
6, 0.0316377, 1, 0, 0.819493,-0.00280899) , 
7, 8.86924e-05, 1, 0, 0.496387,-0.00114644)    );
  // itree = 910
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.714309,-0.00572941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730222,0.00896766) , 
4, 0.0070271, 1, 0, 0.728611,0.00146014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.477109,-0.00609972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335023,0.00558347) , 
2, 0.227379, 1, 0, 0.417805,-0.000420781) , 
2, 0.111043, 1, 0, 0.584211,0.000586265) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62819,-0.00832682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131063) , 
0, 0.00357331, 1, 0, 0.148374,-0.00245946) , 
2, 0.333171, 1, 0, 0.492373,-5.55182e-05)    );
  // itree = 911
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661668,0.0837992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00589967,-0.0141464) , 
2, 0.0713719, 1, 0, 0.191564,0.00076633) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809917,-0.000922485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80926,-0.0257626) , 
3, 13.2253, 1, 0, 0.809606,-0.00672271) , 
7, 8.86915e-05, 1, 0, 0.537436,-0.00342474) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.364596,-0.00418503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55793,-0.0209428) , 
4, 0.0079565, 1, 0, 0.416477,-0.00333771) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627932,0.0226969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460588,0.00346081) , 
4, 0.0130486, 1, 0, 0.483577,0.00153553) , 
4, 0.00929419, 1, 0, 0.47348,0.000802222) , 
3, 25.2428, 1, 0, 0.493091,-0.000493896)    );
  // itree = 912
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997268,-0.00781065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917092,-0.0294121) , 
0, 5.67716e-05, 1, 0, 0.971145,-0.00769175) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.424034,0.0089794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578655,-0.0149605) , 
6, 0.0347873, 1, 0, 0.481457,-0.000461538) , 
0, 0.00119363, 1, 0, 0.763274,-0.00462254) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.462553,0.00560297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370254,-0.00278844) , 
4, 0.0185517, 1, 0, 0.407605,0.000521615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.111571,0.0308616) , 
3, 138.535, 1, 0, 0.379907,0.00113867) , 
2, 0.0713959, 1, 0, 0.50478,-0.000737916)    );
  // itree = 913
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.311428,0.0024146) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891566,-0.0420647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455379,-0.00444212) , 
2, 0.0236606, 1, 0, 0.615906,-0.00949494) , 
7, 3.57489e-05, 1, 0, 0.465361,-0.00438259) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85391,0.000255175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163255,-0.0220736) , 
4, 0.0209308, 1, 0, 0.736005,-0.00114901) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0168183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333316,0.0184132) , 
4, 0.0208654, 1, 0, 0.226704,0.000810675) , 
5, 0.0214813, 1, 0, 0.503866,-0.00025579) , 
5, 0.00912617, 1, 0, 0.498618,-0.000818262)    );
  // itree = 914
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886818,-0.015492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705603,0.01377) , 
2, 0.027181, 1, 0, 0.765683,0.00114119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841393,-0.00943822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201566,-0.000938547) , 
0, 0.00119344, 1, 0, 0.320936,-0.00176586) , 
2, 0.142743, 1, 0, 0.553647,-0.000244765) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877905,-0.0113008) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00459015,0.0174787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527756,-0.00865869) , 
7, 0.000105964, 1, 0, 0.146846,-0.00119502) , 
0, 0.00119363, 1, 0, 0.292022,-0.00306494) , 
3, 88.2214, 1, 0, 0.498037,-0.000844214)    );
  // itree = 915
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.390427,-0.00111538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592414,-0.0168795) , 
5, 0.00671418, 1, 0, 0.457623,-0.00419135) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735087,0.00620022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0228165,-0.0233112) , 
5, 0.0195135, 1, 0, 0.453997,0.000732526) , 
5, 0.0082914, 1, 0, 0.45451,3.5156e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678344,0.0254959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651125,-0.00702643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454174,-0.0109449) , 
2, 0.404623, 1, 0, 0.621515,-0.00352371) , 
3, 12.5924, 1, 0, 0.629776,-0.00232163) , 
6, 0.0394297, 1, 0, 0.495706,-0.000518803)    );
  // itree = 916
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876872,-0.0208805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762874,0.00561101) , 
2, 0.00906372, 1, 0, 0.786611,-0.000267619) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765686,-0.0256882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587632,-0.00215566) , 
5, 0.016423, 1, 0, 0.665338,-0.00791068) , 
2, 0.0634562, 1, 0, 0.755878,-0.00220451) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703804,0.00862275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132859) , 
0, 0.00357872, 1, 0, 0.148583,0.00170158) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577371,0.000596517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499334,-0.0131404) , 
1, 1.40393, 1, 0, 0.564084,-0.00100679) , 
6, 0.0324854, 1, 0, 0.342421,0.000438086) , 
2, 0.0951945, 1, 0, 0.503773,-0.000593192)    );
  // itree = 917
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896882,0.0121497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132495) , 
0, 0.00354547, 1, 0, 0.314679,0.00151679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922326,-0.00613869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131058) , 
0, 0.0035809, 1, 0, 0.641735,-0.00228285) , 
6, 0.0185566, 1, 0, 0.558516,-0.00131604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0028091,0.000912347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780677,0.0227382) , 
7, 0.000354846, 1, 0, 0.1542,0.00237905) , 
2, 0.380766, 1, 0, 0.500129,-0.000782426)    );
  // itree = 918
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888857,-0.0240118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710265,-0.00106815) , 
2, 0.0102481, 1, 0, 0.739472,-0.0013237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525163,-0.030355) , 
2, 0.107608, 1, 0, 0.726181,-0.00206943) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.302429,0.00039003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87805,0.0175208) , 
7, 0.000352916, 1, 0, 0.464671,0.00212111) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920801,-0.0098815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00015921,0.0113236) , 
0, 0.00238633, 1, 0, 0.118006,-0.000890822) , 
5, 0.023093, 1, 0, 0.311294,0.000788521) , 
2, 0.11896, 1, 0, 0.494304,-0.000472146)    );
  // itree = 919
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.396911,0.00728931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251331,-0.0243787) , 
3, 49.9953, 1, 0, 0.330783,-0.00709117) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853336,-0.0466286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711999,0.00674941) , 
2, 0.0067967, 1, 0, 0.721996,0.000941698) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.480397,-0.00693089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129763,0.0133961) , 
4, 0.022863, 1, 0, 0.321646,-0.00183087) , 
2, 0.142787, 1, 0, 0.517837,-0.000472174) , 
4, 0.00696239, 1, 0, 0.500119,-0.00109915)    );
  // itree = 920
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917915,-0.02806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.188542,0.00245807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347295,-0.0101713) , 
7, 6.39218e-05, 1, 0, 0.244567,-0.00124957) , 
2, 0.0237921, 1, 0, 0.472861,-0.00391478) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962053,0.010537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00111047,-0.0123345) , 
0, 0.00205156, 1, 0, 0.602243,0.00153008) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768807,-0.0165217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.36107,0.0028278) , 
4, 0.019996, 1, 0, 0.415984,-0.000796113) , 
4, 0.0185601, 1, 0, 0.506624,0.000335894) , 
5, 0.00925117, 1, 0, 0.501865,-0.000263322)    );
  // itree = 921
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535117,-0.0148441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449021,0.00586116) , 
3, 25.0092, 1, 0, 0.477028,-0.000710492) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678118,-0.0209077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725134,0.00999308) , 
4, 0.0126401, 1, 0, 0.696453,-0.00773923) , 
4, 0.0105916, 1, 0, 0.562261,-0.00344073) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.346665,-0.00168426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700808,0.011775) , 
6, 0.0377823, 1, 0, 0.43385,0.000562968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.720287,-0.0134328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654657,0.00305361) , 
1, 1.11457, 1, 0, 0.704068,-0.00496128) , 
6, 0.044073, 1, 0, 0.474713,-0.000272423) , 
4, 0.0139135, 1, 0, 0.502086,-0.00126302)    );
  // itree = 922
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984787,0.00399616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89039,-0.00983688) , 
0, 0.000339902, 1, 0, 0.936021,-0.00394627) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00169921,0.0161942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00046257,-0.0112848) , 
4, 0.0162683, 1, 0, 0.000848533,-0.000104648) , 
0, 0.00238377, 1, 0, 0.55216,-0.0023694) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93247,0.0179959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244607,-0.00697574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0654806,0.0166207) , 
3, 130.24, 1, 0, 0.15785,0.000351944) , 
0, 0.00119291, 1, 0, 0.30965,0.00203736) , 
3, 88.2211, 1, 0, 0.501801,-0.0014543)    );
  // itree = 923
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78124,-0.0104262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746632,-0.0256763) , 
3, 20.4285, 1, 0, 0.774674,-0.00509267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.34751,-0.00444466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337321,0.0373192) , 
3, 18.0232, 1, 0, 0.344781,0.000410234) , 
2, 0.118958, 1, 0, 0.558061,-0.00231988) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932545,0.00175172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934831,0.0214079) , 
0, 0.00170216, 1, 0, 0.933051,0.00259796) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00292707,-0.00742476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130947) , 
0, 0.0110337, 1, 0, 0.000822472,-0.00039918) , 
0, 0.00238727, 1, 0, 0.476037,0.00112865) , 
3, 25.2368, 1, 0, 0.501452,6.01341e-05)    );
  // itree = 924
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474931,0.000431192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593165,-0.0130221) , 
6, 0.0420696, 1, 0, 0.481926,-0.000226624) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607118,0.0185026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606859,0.0638211) , 
1, 1.1147, 1, 0, 0.606986,0.00587482) , 
6, 0.0441745, 1, 0, 0.488855,0.000111447) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753663,-0.0229898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556876,-0.00344693) , 
2, 0.167193, 1, 0, 0.639887,-0.0067629) , 
6, 0.0463877, 1, 0, 0.49831,-0.000318907)    );
  // itree = 925
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567038,0.000595407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464759,-0.0163757) , 
3, 74.0962, 1, 0, 0.55815,-0.000501703) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485101,0.0763078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436056,0.00885964) , 
3, 96.7436, 1, 0, 0.457298,0.00365961) , 
3, 86.4474, 1, 0, 0.547756,-7.28246e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.313347,-0.0149745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.153501,0.00152702) , 
2, 0.166585, 1, 0, 0.212123,-0.00457171) , 
3, 113.566, 1, 0, 0.505637,-0.0006374)    );
  // itree = 926
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741883,-0.00901026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77793,0.0128473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684181,-0.00940879) , 
6, 0.0417633, 1, 0, 0.766223,0.00142684) , 
4, 0.00699693, 1, 0, 0.76329,0.000608857) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879028,-0.0111998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902482,0.00694613) , 
0, 0.00170216, 1, 0, 0.886426,-0.00466376) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00320096,0.017487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000371497,-0.0100068) , 
4, 0.0162501, 1, 0, 0.00121613,0.000139367) , 
0, 0.00238455, 1, 0, 0.375085,-0.00188924) , 
2, 0.0713763, 1, 0, 0.498448,-0.0010954)    );
  // itree = 927
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.276071,-0.0140195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966419,0.00988888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00238749,-0.0028952) , 
0, 0.00119316, 1, 0, 0.160313,0.000300972) , 
5, 0.00458057, 1, 0, 0.170154,-0.000200101) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825132,-0.00734283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887992,-0.021877) , 
1, 1.85489, 1, 0, 0.834995,-0.00543123) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963346,0.0272842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640128,-0.00376761) , 
0, 0.000641825, 1, 0, 0.767453,0.00100029) , 
3, 62.5689, 1, 0, 0.814743,-0.00350278) , 
7, 0.000106059, 1, 0, 0.493104,-0.0018548)    );
  // itree = 928
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959039,0.00146006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838808,0.0151106) , 
0, 0.00112778, 1, 0, 0.922884,0.00356341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000631994,-0.00877305) , 
0, 0.00298311, 1, 0, 0.605322,0.00212287) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547588,-0.0248287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.259168,-0.00366614) , 
2, 0.0713926, 1, 0, 0.325203,-0.00244427) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.373314,0.00732283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793557,-0.00550435) , 
6, 0.0440691, 1, 0, 0.46511,0.000252794) , 
5, 0.0182249, 1, 0, 0.421793,-0.000582257) , 
4, 0.0162376, 1, 0, 0.494032,0.000482513)    );
  // itree = 929
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.25064,-0.0141798) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676122,0.0131413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916102,-0.0154766) , 
7, 0.000139473, 1, 0, 0.794532,-0.00194306) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.483744,0.00873749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383622,-0.00311295) , 
3, 37.809, 1, 0, 0.425062,0.000327034) , 
2, 0.0475756, 1, 0, 0.512708,-0.000211478) , 
5, 0.00457474, 1, 0, 0.500566,-0.000516394)    );
  // itree = 930
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944091,0.00285732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900613,-0.011917) , 
3, 75.2871, 1, 0, 0.935732,-0.00119819) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703618,-0.0262852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986106,0.0169408) , 
7, 0.000449414, 1, 0, 0.881735,-0.0148704) , 
0, 0.00192637, 1, 0, 0.927889,-0.00318424) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00127341,-0.00552608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0012831,0.0345055) , 
2, 0.262046, 1, 0, 0.00127786,0.000148401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00140003,-0.00818137) , 
3, 100.922, 1, 0, 0.00130719,-0.000101493) , 
0, 0.00238688, 1, 0, 0.500697,-0.00176297)    );
  // itree = 931
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992089,-0.0782046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99636,0.0234806) , 
4, 0.011614, 1, 0, 0.995358,0.000334075) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8553,0.0234696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750372,0.00363881) , 
3, 37.2836, 1, 0, 0.799831,0.00894791) , 
0, 0.000113631, 1, 0, 0.948735,0.00238801) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920049,-0.00258518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540008,-0.0215979) , 
0, 0.00216218, 1, 0, 0.833174,-0.0062968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.73322e-05,0.0133794) , 
0, 0.00965627, 1, 0, 7.62078e-05,-8.06706e-05) , 
0, 0.00346679, 1, 0, 0.277912,-0.00215373) , 
0, 0.00119344, 1, 0, 0.494512,-0.000687268)    );
  // itree = 932
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97772,-0.0121633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594021,0.00067504) , 
0, 0.00106357, 1, 0, 0.782897,-0.00108463) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.773187,-0.00797881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0383089,-0.00281087) , 
0, 0.00215399, 1, 0, 0.337788,-0.00443182) , 
2, 0.237487, 1, 0, 0.666638,-0.00195889) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779276,0.073492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644288,0.0272393) , 
2, 0.188727, 1, 0, 0.709406,0.00685603) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0160365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130924) , 
0, 0.0179565, 1, 0, 0,-0.000727904) , 
4, 0.0244045, 1, 0, 0.126363,0.000622989) , 
4, 0.0231877, 1, 0, 0.507244,-0.00119717)    );
  // itree = 933
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64787,-0.00854946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541867,-0.0133054) , 
3, 96.0891, 1, 0, 0.640083,-0.00412393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.42764,0.00242298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727043,-0.00756962) , 
6, 0.0463895, 1, 0, 0.457708,4.31119e-05) , 
4, 0.0162398, 1, 0, 0.53165,-0.00164638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154515,0.0206539) , 
3, 126.135, 1, 0, 0.494694,-0.00106082)    );
  // itree = 934
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566303,0.0164295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534421,0.00177294) , 
3, 4.8022, 1, 0, 0.53661,0.000748151) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715212,0.00327175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.697464,-0.0107704) , 
6, 0.0474938, 1, 0, 0.706273,-0.00372772) , 
6, 0.0463877, 1, 0, 0.547081,0.000471918) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844362,-0.00971038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00329976,0.00129512) , 
0, 0.00238582, 1, 0, 0.255645,-0.00304177) , 
3, 100.825, 1, 0, 0.49941,-0.000102824)    );
  // itree = 935
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790661,-0.00118292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699976,-0.0196243) , 
2, 0.0582275, 1, 0, 0.781231,-0.00101265) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692946,0.0583098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.569221,0.00365937) , 
4, 0.0139107, 1, 0, 0.605586,0.00400195) , 
2, 0.0679408, 1, 0, 0.727182,0.000530411) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826612,-0.0128128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777856,-0.00315485) , 
0, 0.00168088, 1, 0, 0.808057,-0.00849284) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130935) , 
0, 0.0117689, 1, 0, 0,-8.99365e-05) , 
0, 0.00358032, 1, 0, 0.313047,-0.00334528) , 
2, 0.118989, 1, 0, 0.497245,-0.00162146)    );
  // itree = 936
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56487,-0.00551173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420219,0.00373785) , 
4, 0.0115997, 1, 0, 0.462774,-1.5947e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.406667,-0.0189745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.100371,0.000555002) , 
2, 0.0712716, 1, 0, 0.168009,-0.00399837) , 
3, 100.908, 1, 0, 0.410011,-0.0007288) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567944,-0.0409799) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882342,-0.00767536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883588,0.00766735) , 
3, 49.0621, 1, 0, 0.882867,-0.000833376) , 
5, 0.0191793, 1, 0, 0.841682,-0.00378876) , 
7, 0.000348309, 1, 0, 0.503112,-0.00138876)    );
  // itree = 937
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680442,0.00613027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0501482,-0.0189777) , 
4, 0.0139306, 1, 0, 0.371962,0.000214704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635892,0.0218713) , 
6, 0.0287072, 1, 0, 0.386784,0.000565174) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637506,-0.00481055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584785,0.02274) , 
1, 1.28293, 1, 0, 0.631046,-0.000552984) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761884,-0.000507225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426861,-0.0229409) , 
2, 0.142801, 1, 0, 0.603531,-0.00528505) , 
1, 1.3227, 1, 0, 0.619607,-0.0025202) , 
6, 0.030152, 1, 0, 0.495853,-0.000880217)    );
  // itree = 938
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.235688,0.0131521) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769312,-0.00285814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614286,-0.014492) , 
3, 49.9739, 1, 0, 0.707421,-0.00260175) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0321388,-0.00827162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352668,0.00209527) , 
5, 0.0138651, 1, 0, 0.292115,2.22124e-05) , 
2, 0.166545, 1, 0, 0.518306,-0.00140689) , 
4, 0.00465782, 1, 0, 0.502962,-0.00110353)    );
  // itree = 939
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952085,-0.0161682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.318335,0.00125432) , 
0, 0.000990405, 1, 0, 0.586749,-0.00221721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731362,-0.0189802) , 
4, 0.0154645, 1, 0, 0.599157,-0.0033465) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.599749,0.030971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201537,-0.00114424) , 
2, 0.307802, 1, 0, 0.488968,0.00303784) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.49311,-0.00803684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352605,0.00562833) , 
3, 59.466, 1, 0, 0.414842,-0.000376487) , 
3, 25.2282, 1, 0, 0.43674,0.000632184) , 
4, 0.0162389, 1, 0, 0.503325,-0.000998916)    );
  // itree = 940
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473163,0.00278056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429076,-0.0120035) , 
3, 36.0471, 1, 0, 0.456765,-0.000808199) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896658,0.0124194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000938916,-0.00772561) , 
0, 0.0023826, 1, 0, 0.270639,0.00242195) , 
3, 63.0931, 1, 0, 0.392367,0.000309418) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831849,-0.00823633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530097,0.028953) , 
2, 0.118987, 1, 0, 0.652566,0.00247798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90204,-0.0123281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013121) , 
0, 0.00358032, 1, 0, 0.607534,-0.00502875) , 
3, 12.5222, 1, 0, 0.614486,-0.00386986) , 
6, 0.0301524, 1, 0, 0.497533,-0.00166935)    );
  // itree = 941
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944764,-0.0141171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.33719,0.0213149) , 
0, 0.00119069, 1, 0, 0.559962,-0.000278191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565846,-0.0214335) , 
3, 10.2104, 1, 0, 0.561115,-0.00261644) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.284727,0.00327978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529013,-0.0147937) , 
6, 0.021865, 1, 0, 0.335404,-0.00101451) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709583,0.0104501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465792,-0.00326773) , 
4, 0.0208713, 1, 0, 0.61288,0.0015748) , 
6, 0.0255138, 1, 0, 0.497429,0.000497448) , 
3, 12.6134, 1, 0, 0.507341,1.28131e-05)    );
  // itree = 942
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986334,-0.0147195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943085,0.0220157) , 
0, 0.000165002, 1, 0, 0.9644,0.00406254) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00266689,0.00506842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00914575,-0.0149762) , 
6, 0.014333, 1, 0, 0.00511534,-0.000722086) , 
0, 0.00118069, 1, 0, 0.314894,0.000822998) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634581,-0.00606923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632267,0.0150968) , 
1, 1.30718, 1, 0, 0.633683,0.000237238) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561228,-0.019932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551326,-0.00688879) , 
1, 1.67744, 1, 0, 0.554193,-0.00567446) , 
1, 1.54576, 1, 0, 0.607756,-0.001691) , 
6, 0.0231943, 1, 0, 0.499665,-0.000763122)    );
  // itree = 943
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970709,0.010564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963832,-0.00678327) , 
7, 0.00013992, 1, 0, 0.966685,0.000684164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812949,0.0170098) , 
2, 0.284982, 1, 0, 0.951057,0.00171786) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909543,0.00341681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912916,-0.0114744) , 
0, 0.0016243, 1, 0, 0.911757,-0.00459259) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00111826,-0.00636544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00213894,0.0050018) , 
5, 0.0182376, 1, 0, 0.00183184,-1.86626e-05) , 
0, 0.00232795, 1, 0, 0.282997,-0.001432) , 
0, 0.00119231, 1, 0, 0.501804,-0.000400342)    );
  // itree = 944
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684647,-0.0172509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53045,-0.00164829) , 
5, 0.00586654, 1, 0, 0.54631,-0.00144446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72359,-0.0184138) , 
4, 0.0133089, 1, 0, 0.563669,-0.00246198) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935546,-0.00692011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559911,0.0346057) , 
0, 0.000994124, 1, 0, 0.707319,0.00554465) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.408706,-0.0102184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454581,0.00547313) , 
5, 0.018278, 1, 0, 0.44013,-0.000341766) , 
4, 0.0156313, 1, 0, 0.464744,0.000200506) , 
4, 0.0139765, 1, 0, 0.495682,-0.00063217)    );
  // itree = 945
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515592,-0.00955304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479155,0.00306385) , 
6, 0.0116527, 1, 0, 0.486838,-0.00104626) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672813,-0.0174886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714551,0.00709099) , 
4, 0.0126596, 1, 0, 0.689343,-0.00726221) , 
4, 0.0106088, 1, 0, 0.567753,-0.00352996) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.529148,-0.0245896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502961,0.00101833) , 
3, 4.20449, 1, 0, 0.511543,-0.0032346) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.43433,0.00804251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715485,-0.00751282) , 
6, 0.0463879, 1, 0, 0.457601,0.00099074) , 
3, 12.6199, 1, 0, 0.465647,0.000360483) , 
4, 0.0139221, 1, 0, 0.497378,-0.000848548)    );
  // itree = 946
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814176,-0.00823122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641124,0.0146497) , 
3, 75.2877, 1, 0, 0.780609,-0.000549514) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931779,-0.0115701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00383827,-0.000821379) , 
0, 0.00238455, 1, 0, 0.577399,-0.00478317) , 
2, 0.0634301, 1, 0, 0.687602,-0.00248721) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.50274,0.0457674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397714,0.0114732) , 
4, 0.0185532, 1, 0, 0.44458,0.00462687) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.181663,-0.00354419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583214,0.0114505) , 
6, 0.0440737, 1, 0, 0.239493,-0.000447556) , 
2, 0.214116, 1, 0, 0.277,0.000480484) , 
2, 0.166534, 1, 0, 0.498726,-0.00112207)    );
  // itree = 947
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696141,0.00104126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176331,-0.0125533) , 
2, 0.260698, 1, 0, 0.552995,-0.00140975) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75658,-0.0317036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308215,0.023931) , 
2, 0.118959, 1, 0, 0.530561,-0.00755992) , 
3, 18.0251, 1, 0, 0.546807,-0.00310613) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578584,0.047001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423984,0.000628922) , 
3, 36.6537, 1, 0, 0.449607,0.000873945) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642581,-0.0118452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536699,0.000938902) , 
3, 59.4186, 1, 0, 0.585854,-0.00322947) , 
6, 0.0440685, 1, 0, 0.466097,0.000377302) , 
3, 25.2368, 1, 0, 0.49081,-0.000689319)    );
  // itree = 948
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543623,0.00204438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549161,-0.0199619) , 
3, 33.3788, 1, 0, 0.545238,-0.00169482) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.459308,0.00806531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0929057,-0.00743741) , 
3, 141.255, 1, 0, 0.398543,0.0011663) , 
3, 50.0683, 1, 0, 0.47947,-0.00041208) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653475,0.00927761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668843,-0.00561586) , 
6, 0.0469386, 1, 0, 0.660063,0.000362096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.546219,-0.0316202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561623,-0.00900574) , 
4, 0.023193, 1, 0, 0.553836,-0.0116138) , 
3, 48.9469, 1, 0, 0.610115,-0.00526896) , 
6, 0.0440685, 1, 0, 0.494406,-0.000967355)    );
  // itree = 949
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82872,-0.0072615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253903,0.0033571) , 
2, 0.0475958, 1, 0, 0.420564,0.000227732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630775,0.0257913) , 
6, 0.0331338, 1, 0, 0.433762,0.000645795) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.837765,0.0058365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369652,-0.0117122) , 
5, 0.0231291, 1, 0, 0.673357,-0.00032029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.40291,-0.0264501) , 
3, 100.175, 1, 0, 0.629939,-0.00213598) , 
6, 0.0347908, 1, 0, 0.503467,-0.000342624)    );
  // itree = 950
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739472,0.0167996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203366,-0.00528436) , 
2, 0.190325, 1, 0, 0.548279,0.00196742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.317488,0.00303911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855678,-0.00777088) , 
7, 0.000256743, 1, 0, 0.44871,-0.000473668) , 
3, 25.2282, 1, 0, 0.479007,0.000269119) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776297,-0.0178272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612041,-0.0133955) , 
3, 36.7757, 1, 0, 0.68113,-0.00859857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559093,-0.000508376) , 
2, 0.238107, 1, 0, 0.628951,-0.00500187) , 
6, 0.0440704, 1, 0, 0.496002,-0.000328317)    );
  // itree = 951
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.604356,-0.0336119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.452097,0.00169508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67149,-0.00905407) , 
6, 0.0324686, 1, 0, 0.553785,-0.00205428) , 
5, 0.00887418, 1, 0, 0.559577,-0.00299931) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.320265,0.000691753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90423,0.013729) , 
7, 0.000120981, 1, 0, 0.634444,0.00199308) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.162352,0.0060317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520261,-0.0156147) , 
6, 0.0417576, 1, 0, 0.245751,-0.000543828) , 
2, 0.214188, 1, 0, 0.483753,0.00100955) , 
3, 25.2404, 1, 0, 0.507044,-0.000221896)    );
  // itree = 952
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732301,-0.00257858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.259409,-0.0157433) , 
2, 0.190325, 1, 0, 0.557604,-0.00250186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542917,-0.0292483) , 
3, 34.2482, 1, 0, 0.556355,-0.00363948) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766964,0.0150116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.189238,0.00538383) , 
5, 0.00818772, 1, 0, 0.405427,0.0037287) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.437294,-0.00760236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.471241,0.00259304) , 
5, 0.0137143, 1, 0, 0.463419,-0.000217961) , 
4, 0.00930005, 1, 0, 0.454516,0.000387979) , 
3, 37.8551, 1, 0, 0.498893,-0.00136703)    );
  // itree = 953
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958762,0.0136231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474445,-0.00802616) , 
0, 0.0014867, 1, 0, 0.902983,0.00277109) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.8985e-05,0.0111294) , 
0, 0.0127944, 1, 0, 5.49136e-05,-0.000117422) , 
0, 0.0035809, 1, 0, 0.414703,0.00120906) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735455,0.016133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537964,-0.00470156) , 
2, 0.14332, 1, 0, 0.615828,0.000254555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695353,-0.000589347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522282,-0.0369671) , 
3, 45.9796, 1, 0, 0.611026,-0.0084651) , 
1, 1.35968, 1, 0, 0.61456,-0.00204792) , 
6, 0.0324715, 1, 0, 0.498476,-0.000156163)    );
  // itree = 954
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939486,-0.00269214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468277,-0.0126002) , 
0, 0.00181854, 1, 0, 0.8677,-0.00308283) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.33418e-05,0.00656683) , 
0, 0.0125151, 1, 0, 4.50582e-05,-5.75774e-05) , 
0, 0.00477454, 1, 0, 0.469317,-0.00169379) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731374,0.0239383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567221,0.00736905) , 
2, 0.262067, 1, 0, 0.677693,0.00462908) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526761,-0.0268767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53924,0.0245133) , 
6, 0.045408, 1, 0, 0.53306,-0.000624829) , 
3, 62.2033, 1, 0, 0.624749,0.00270586) , 
6, 0.0417492, 1, 0, 0.496263,-0.000931068)    );
  // itree = 955
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.107888,0.0129559) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902872,-0.0284347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.265614,-0.00313623) , 
2, 0.0237559, 1, 0, 0.447683,-0.0035535) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723722,0.00775251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537052,-0.00368923) , 
4, 0.0130727, 1, 0, 0.564965,-0.000777917) , 
4, 0.00932106, 1, 0, 0.548216,-0.0011743) , 
6, 0.00927764, 1, 0, 0.500556,-0.000869277)    );
  // itree = 956
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.486386,-0.0060525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404445,0.00756893) , 
3, 48.061, 1, 0, 0.452987,-0.000345841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933848,-0.00039193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760943,0.0185222) , 
0, 0.00186697, 1, 0, 0.851715,0.00292126) , 
7, 0.000340736, 1, 0, 0.545577,0.000412824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150753,-0.0119007) , 
3, 126.184, 1, 0, 0.505428,-7.37031e-05)    );
  // itree = 957
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558219,-0.00991802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451159,0.00150465) , 
3, 25.2404, 1, 0, 0.483735,-0.000733473) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692791,-0.0106215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518251,-0.0267919) , 
2, 0.190687, 1, 0, 0.605781,-0.00722175) , 
6, 0.0419656, 1, 0, 0.490797,-0.00110892) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713256,0.025053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577707,0.0219841) , 
2, 0.213536, 1, 0, 0.650853,0.005478) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72101,0.00280042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612404,0.00429038) , 
3, 44.8278, 1, 0, 0.666377,0.00143129) , 
6, 0.0467281, 1, 0, 0.658274,0.00354366) , 
6, 0.0440684, 1, 0, 0.509618,-0.000586082)    );
  // itree = 958
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839915,0.0366214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8934,0.0254759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.083243,-0.0127522) , 
4, 0.00891651, 1, 0, 0.35128,0.000833655) , 
4, 0.00693558, 1, 0, 0.478987,0.00379992) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.207102,-0.00275419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703158,-0.0206266) , 
4, 0.0104955, 1, 0, 0.328766,-0.00228963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578088,-0.00697543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52994,0.00439953) , 
3, 12.6034, 1, 0, 0.537423,0.000476988) , 
4, 0.0116157, 1, 0, 0.502446,1.32176e-05) , 
5, 0.00925812, 1, 0, 0.499039,0.000563112)    );
  // itree = 959
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532065,-0.0014926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652375,-0.011954) , 
6, 0.0417489, 1, 0, 0.553383,-0.00123828) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56012,-0.0239226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376696,-0.00999223) , 
4, 0.0163059, 1, 0, 0.441374,-0.00876467) , 
3, 86.5007, 1, 0, 0.541264,-0.00205258) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838336,0.0126591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000727182,-0.00748842) , 
0, 0.00238258, 1, 0, 0.19333,0.00220934) , 
3, 113.566, 1, 0, 0.498249,-0.00152568)    );
  // itree = 960
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832077,0.00433681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664066,-0.00905964) , 
2, 0.0622791, 1, 0, 0.774382,-0.000713994) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000137611,-0.0146247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738226,0.0102046) , 
7, 0.000103551, 1, 0, 0.342197,0.00183339) , 
2, 0.118953, 1, 0, 0.542607,0.000652133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.363011,-0.016138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128274,0.00649181) , 
3, 135.221, 1, 0, 0.204114,-0.00195156) , 
3, 113.566, 1, 0, 0.499913,0.00032373)    );
  // itree = 961
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931205,-0.0119506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923343,0.00130591) , 
3, 49.6872, 1, 0, 0.928126,-0.00343304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861921,-0.0246611) , 
0, 0.00215607, 1, 0, 0.923938,-0.00429615) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00489392,-0.00420606) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000159716,0.0856248) , 
2, 0.357038, 1, 0, 4.65912e-05,-4.45906e-06) , 
0, 0.00887789, 1, 0, 0.00103779,-0.000194329) , 
0, 0.00238688, 1, 0, 0.495646,-0.00239261)    );
  // itree = 962
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598258,-0.00539561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483002,0.0181005) , 
3, 96.0164, 1, 0, 0.588689,-0.00105872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169943,-0.010983) , 
3, 126.03, 1, 0, 0.549265,-0.00148767) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170585,0.0130214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.101845,0.0521924) , 
5, 0.0227976, 1, 0, 0.131288,0.00289825) , 
2, 0.404564, 1, 0, 0.499258,-0.00096293)    );
  // itree = 963
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872614,0.0184036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679702,0.0419275) , 
2, 0.0962989, 1, 0, 0.853947,0.00414568) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538538,-0.011329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440123,0.0156165) , 
3, 25.0996, 1, 0, 0.470027,-6.10892e-05) , 
4, 0.0185787, 1, 0, 0.723626,0.00271769) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894858,-0.0171305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780909,0.0028832) , 
2, 0.281747, 1, 0, 0.856377,-0.00689484) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225647,-0.0150378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195461,0.00422862) , 
3, 12.6005, 1, 0, 0.19961,2.45527e-05) , 
0, 0.00119179, 1, 0, 0.325635,-0.00130318) , 
2, 0.118989, 1, 0, 0.504451,0.00050339)    );
  // itree = 964
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996098,-0.0565614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810114,-0.0289361) , 
0, 4.01236e-05, 1, 0, 0.942568,-0.0119525) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707025,-0.0134821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172059,0.0100618) , 
2, 0.0713261, 1, 0, 0.344679,-0.000140348) , 
0, 0.000842616, 1, 0, 0.589677,-0.00498063) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736524,-0.00761803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470012,0.0122996) , 
2, 0.0475985, 1, 0, 0.51738,0.00189547) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.414344,-0.013316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.193712,0.0200339) , 
2, 0.356977, 1, 0, 0.361203,-0.0019335) , 
3, 63.0673, 1, 0, 0.460727,0.000506513) , 
5, 0.0138651, 1, 0, 0.499478,-0.00114242)    );
  // itree = 965
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572476,0.00309719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340467,-0.0132316) , 
3, 50.2134, 1, 0, 0.465773,-0.00375283) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718393,0.00444915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376573,-0.00813224) , 
5, 0.0169818, 1, 0, 0.498603,-0.000507266) , 
5, 0.00892803, 1, 0, 0.493919,-0.000970335) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694738,0.00398443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604505,0.0374116) , 
2, 0.211278, 1, 0, 0.649316,0.0040383) , 
6, 0.0463879, 1, 0, 0.503617,-0.000657775)    );
  // itree = 966
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.320004,0.00351835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565892,-0.00440747) , 
6, 0.0225185, 1, 0, 0.43006,-0.00028463) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61,0.0188366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583693,-0.0183227) , 
6, 0.0383554, 1, 0, 0.605444,0.0024733) , 
6, 0.033795, 1, 0, 0.463683,0.000244092) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764937,0.0425943) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718524,-0.0253479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572308,-0.00809686) , 
2, 0.134389, 1, 0, 0.610185,-0.0054264) , 
2, 0.0484049, 1, 0, 0.631789,-0.00409186) , 
6, 0.0394297, 1, 0, 0.503926,-0.000793905)    );
  // itree = 967
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473151,0.00209508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651371,-0.0194849) , 
6, 0.0309099, 1, 0, 0.54887,-0.00284066) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.411998,-0.00802798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472737,0.00927458) , 
4, 0.00930263, 1, 0, 0.463246,0.00122071) , 
3, 25.2282, 1, 0, 0.48939,-1.93504e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.682952,0.00840208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611396,-0.0136402) , 
6, 0.0474939, 1, 0, 0.644022,-0.00712354) , 
6, 0.0463879, 1, 0, 0.499138,-0.000467187)    );
  // itree = 968
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680675,0.00911794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90563,0.029285) , 
7, 0.000368118, 1, 0, 0.72399,0.00296707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767939,-0.00528727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00108254,0.00222179) , 
0, 0.00238057, 1, 0, 0.252491,-0.00153382) , 
2, 0.214116, 1, 0, 0.56292,0.0014295) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716712,0.00551925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358355,-0.0109311) , 
2, 0.0950056, 1, 0, 0.493882,-0.00203326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131402,0.00854911) , 
3, 131.883, 1, 0, 0.41987,-0.0010473) , 
3, 50.3576, 1, 0, 0.498673,0.000317116)    );
  // itree = 969
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950011,0.00672079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897983,-0.00622207) , 
4, 0.0175332, 1, 0, 0.935158,0.00105011) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930615,0.0269307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950928,-0.00603211) , 
5, 0.0226243, 1, 0, 0.936139,0.00711778) , 
0, 0.00169951, 1, 0, 0.935378,0.0024078) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00423029,-0.0070068) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130928) , 
6, 0.0115858, 1, 0, 0,-5.32061e-05) , 
0, 0.0088679, 1, 0, 0.000893627,-0.000419828) , 
0, 0.00238688, 1, 0, 0.502541,0.00109809)    );
  // itree = 970
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6529,-0.0131507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646594,0.00811711) , 
3, 38.4336, 1, 0, 0.650104,-0.00152347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637654,0.0162779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376759,-0.00184216) , 
2, 0.142766, 1, 0, 0.480299,0.000764757) , 
4, 0.0162376, 1, 0, 0.550619,-0.000182846) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823381,-0.0107868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00217001,-0.00472402) , 
0, 0.00238582, 1, 0, 0.24453,-0.00490338) , 
3, 100.908, 1, 0, 0.499032,-0.000978427)    );
  // itree = 971
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99438,-0.0507207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995061,0.0259004) , 
3, 11.9369, 1, 0, 0.99495,0.000901308) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67351,0.00986635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860122,0.00714993) , 
0, 0.000679451, 1, 0, 0.801292,0.00793116) , 
0, 0.000113608, 1, 0, 0.947873,0.00261022) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.194371,-0.00882059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.252663,0.00447379) , 
4, 0.0139416, 1, 0, 0.238335,-0.000313071) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.536533,-0.0184072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.405308,-0.00124836) , 
2, 0.142683, 1, 0, 0.454365,-0.00480185) , 
6, 0.0417424, 1, 0, 0.276341,-0.00110278) , 
0, 0.00119291, 1, 0, 0.495545,0.000109226)    );
  // itree = 972
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781047,-0.0265133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880353,-0.0111595) , 
5, 0.00766474, 1, 0, 0.865188,-0.00509563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220164,0.0129228) , 
5, 0.0228722, 1, 0, 0.753121,-0.00405383) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80919,0.00612839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131694) , 
0, 0.00357872, 1, 0, 0.297078,0.00146835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.581168,-0.0237048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59565,-0.00173454) , 
4, 0.0232379, 1, 0, 0.58849,-0.00513993) , 
6, 0.0440684, 1, 0, 0.338222,0.000535341) , 
2, 0.0951945, 1, 0, 0.499777,-0.00125161)    );
  // itree = 973
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900682,0.0157994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764001,0.0802453) , 
3, 73.4777, 1, 0, 0.872472,0.00302589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91426,-0.00529015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000602699,-0.00283703) , 
0, 0.00238688, 1, 0, 0.423915,-0.00147707) , 
2, 0.0237921, 1, 0, 0.490132,-0.000812335) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744081,-0.0072318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562076,0.0277) , 
2, 0.143429, 1, 0, 0.628184,0.00191489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613168,0.0281301) , 
6, 0.0478277, 1, 0, 0.624811,0.00330228) , 
6, 0.0440685, 1, 0, 0.50588,-0.000331216)    );
  // itree = 974
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962664,0.000109971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218959,-0.0106287) , 
0, 0.000760725, 1, 0, 0.54782,-0.00372872) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767481,0.00572717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0657797,-0.0119105) , 
4, 0.0167764, 1, 0, 0.404912,0.000586201) , 
4, 0.00927289, 1, 0, 0.43255,-0.00024829) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940076,0.0218783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506676,-0.0156232) , 
0, 0.0011907, 1, 0, 0.655671,-0.00530697) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587387,0.00627821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560211,-0.0128479) , 
6, 0.0460587, 1, 0, 0.581761,-0.000217679) , 
3, 37.5681, 1, 0, 0.613994,-0.00243719) , 
6, 0.0347909, 1, 0, 0.497146,-0.00102756)    );
  // itree = 975
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.717508,0.0310906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689885,-0.00668163) , 
3, 8.99498, 1, 0, 0.708821,0.00334177) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908083,-0.0120856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000880139,-0.00283294) , 
0, 0.00307733, 1, 0, 0.615218,-0.00491313) , 
3, 12.5935, 1, 0, 0.630205,-0.00359145) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0197697) , 
7, -0.000599024, 1, 0, 0,-0.000848096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918226,-0.0038464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877892,0.023676) , 
0, 0.00149444, 1, 0, 0.897545,0.00370454) , 
7, 0.000345042, 1, 0, 0.364857,0.00100258) , 
4, 0.0185669, 1, 0, 0.499,-0.00131987)    );
  // itree = 976
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943385,0.0495682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831836,0.0916747) , 
2, 0.0202985, 1, 0, 0.901853,0.0065415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0747844,-0.00174545) , 
2, 0.047497, 1, 0, 0.478267,0.00285655) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796291,-0.0275723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190766,-0.00109191) , 
2, 0.0951811, 1, 0, 0.493056,-0.00386822) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.759263,0.0140689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449246,-0.0041585) , 
4, 0.0172342, 1, 0, 0.512535,0.000164819) , 
4, 0.0139168, 1, 0, 0.507433,-0.000891517) , 
5, 0.00912617, 1, 0, 0.503364,-0.000368596)    );
  // itree = 977
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505368,0.0147718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905395,0.0375187) , 
7, 0.000132166, 1, 0, 0.738317,0.00474438) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0881016,-0.0122536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801827,0.0166906) , 
7, 0.000340108, 1, 0, 0.270138,-0.00138294) , 
2, 0.190174, 1, 0, 0.564152,0.00246499) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.693086,-0.000729743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492468,-0.017924) , 
2, 0.118975, 1, 0, 0.656476,-0.00230434) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.340024,0.0112838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160396,-0.00927008) , 
2, 0.372849, 1, 0, 0.276641,0.000649175) , 
2, 0.166585, 1, 0, 0.476091,-0.000901703) , 
3, 25.2368, 1, 0, 0.50268,0.000114813)    );
  // itree = 978
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96581,0.0856054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793042,0.0019484) , 
5, 0.0129927, 1, 0, 0.883356,0.00227881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600075,-0.00767034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404062,0.000881889) , 
5, 0.0185302, 1, 0, 0.495516,-0.00142133) , 
2, 0.0237986, 1, 0, 0.556029,-0.000844019) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931888,0.0297633) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.229797,0.0209004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112783,-0.00498006) , 
2, 0.142804, 1, 0, 0.149388,0.000367696) , 
0, 0.00119363, 1, 0, 0.292984,0.00236635) , 
3, 88.2989, 1, 0, 0.500094,-0.000161359)    );
  // itree = 979
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878282,-0.0236087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763878,0.00116207) , 
3, 12.6206, 1, 0, 0.783044,-0.000633462) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648543,-0.0319384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495568,-0.00678417) , 
2, 0.0942267, 1, 0, 0.516693,-0.00407642) , 
2, 0.0815778, 1, 0, 0.662515,-0.00219147) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883326,-0.00152927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816907,0.0262193) , 
2, 0.307617, 1, 0, 0.850262,0.00709905) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.165497,0.00641483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0511275,-0.014976) , 
2, 0.431774, 1, 0, 0.138453,0.000209191) , 
0, 0.00119199, 1, 0, 0.237054,0.00116359) , 
2, 0.214181, 1, 0, 0.501509,-0.000921821)    );
  // itree = 980
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998146,0.0215613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987197,-0.0497133) , 
2, 0.16451, 1, 0, 0.995381,-0.000517669) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63464,-0.00928363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850195,-0.00293017) , 
0, 0.00065249, 1, 0, 0.775349,-0.009992) , 
0, 5.68264e-05, 1, 0, 0.938393,-0.00297152) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507359,0.000560264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439828,-0.016569) , 
2, 0.0544148, 1, 0, 0.491803,-0.00340613) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.414682,0.0232993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203011,-0.000588146) , 
2, 0.112247, 1, 0, 0.231792,0.000546224) , 
2, 0.0714166, 1, 0, 0.282248,-0.000220733) , 
0, 0.00119344, 1, 0, 0.501281,-0.001139)    );
  // itree = 981
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684175,0.0226198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419884,-0.00658111) , 
4, 0.0162214, 1, 0, 0.543187,0.00139943) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933547,-0.00776456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00106087,0.00465724) , 
0, 0.00238455, 1, 0, 0.460333,-0.00180998) , 
3, 25.2368, 1, 0, 0.48587,-0.00082079) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.548672,-0.0430161) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.529287,-0.0113215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747773,0.000758295) , 
4, 0.0231572, 1, 0, 0.666989,-0.00272008) , 
6, 0.0453959, 1, 0, 0.633874,-0.00759171) , 
6, 0.0440683, 1, 0, 0.503112,-0.00160959)    );
  // itree = 982
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247339,-0.0130119) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767475,0.0151704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379313,0.0025313) , 
6, 0.0162216, 1, 0, 0.571095,0.00335309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.362992,-0.0164227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537962,0.00326034) , 
4, 0.0116124, 1, 0, 0.508973,0.000172387) , 
5, 0.00903731, 1, 0, 0.514906,0.000476163) , 
5, 0.00463724, 1, 0, 0.501525,0.000176447)    );
  // itree = 983
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964025,-0.00797117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943855,-0.0207674) , 
0, 0.0018135, 1, 0, 0.961754,-0.00428736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00237698,-0.00258394) , 
0, 0.00238633, 1, 0, 0.707509,-0.00320471) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75997,0.0114955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890676,0.00538212) , 
4, 0.0176047, 1, 0, 0.85222,0.0047297) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.316017,-0.00674295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.139264,0.0023813) , 
2, 0.210737, 1, 0, 0.177679,-0.000141371) , 
0, 0.00119231, 1, 0, 0.293036,0.000691659) , 
2, 0.142753, 1, 0, 0.496333,-0.00121949)    );
  // itree = 984
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731836,-0.0265611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362417,-0.00280785) , 
6, 0.0163401, 1, 0, 0.548179,-0.00824245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655145,0.00635793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.249688,-0.00385615) , 
6, 0.0161672, 1, 0, 0.421095,0.000994231) , 
3, 37.709, 1, 0, 0.477898,-0.00313432) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701062,0.00504837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388462,-0.00773247) , 
2, 0.144996, 1, 0, 0.564619,-0.000609018) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791212,0.0173387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000544172,0.00454886) , 
0, 0.00238221, 1, 0, 0.18025,0.00276227) , 
2, 0.380673, 1, 0, 0.508501,-0.000116816) , 
4, 0.00929419, 1, 0, 0.503976,-0.000563059)    );
  // itree = 985
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667607,-0.0019479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479439,-0.0105243) , 
3, 73.4846, 1, 0, 0.623957,-0.00263502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976833,0.0450438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300668,0.0016946) , 
5, 0.0127176, 1, 0, 0.51551,0.00383443) , 
6, 0.0208391, 1, 0, 0.564557,0.000908504) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980217,0.00373084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871695,-0.00817339) , 
0, 0.000340432, 1, 0, 0.922409,-0.0034356) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000446792,-0.0114071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00135524,0.03594) , 
2, 0.262033, 1, 0, 0.000848076,-6.28349e-05) , 
0, 0.00238688, 1, 0, 0.462325,-0.00175177) , 
4, 0.0139307, 1, 0, 0.494105,-0.000924799)    );
  // itree = 986
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.216575,-0.00229301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825343,0.0156946) , 
7, 2.48372e-05, 1, 0, 0.614559,0.00258463) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686728,-0.0176603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.228685,0.0031789) , 
2, 0.0475377, 1, 0, 0.316757,-0.000330445) , 
4, 0.0115907, 1, 0, 0.41263,0.000608018) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655707,0.00759641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628358,-0.00936895) , 
6, 0.0386002, 1, 0, 0.637485,-0.00161577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.580058,-0.0331501) , 
1, 1.47179, 1, 0, 0.63321,-0.00267554) , 
6, 0.0324856, 1, 0, 0.503209,-0.000740346)    );
  // itree = 987
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830885,-0.0241597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746503,0.00245466) , 
4, 0.00930335, 1, 0, 0.766331,-0.00160948) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938611,-0.0466146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42747,-0.0279276) , 
0, 0.00119228, 1, 0, 0.606842,-0.0149859) , 
2, 0.0849533, 1, 0, 0.735866,-0.00416459) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.362906,-0.00171717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333119,-0.00846374) , 
3, 81.0267, 1, 0, 0.358381,-0.000971337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151121,0.0165938) , 
3, 113.521, 1, 0, 0.322772,-0.000213482) , 
2, 0.118953, 1, 0, 0.507069,-0.00197622)    );
  // itree = 988
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853756,-0.0118973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956959,-0.0724269) , 
4, 0.007509, 1, 0, 0.894072,-0.00905868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0850772,0.0027953) , 
2, 0.0475958, 1, 0, 0.469493,-0.0037604) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705379,0.00661464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335034,-0.00479504) , 
2, 0.16642, 1, 0, 0.534188,0.000103273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.11213,-0.0152378) , 
3, 138.805, 1, 0, 0.502869,-0.000265057) , 
4, 0.00927792, 1, 0, 0.498103,-0.000764203)    );
  // itree = 989
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.198968,-0.0219615) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844945,0.0106885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.05296e-05,-0.00916329) , 
0, 0.00357949, 1, 0, 0.146596,0.000696758) , 
3, 12.603, 1, 0, 0.153924,0.000241286) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893986,-0.00647172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66928,0.024345) , 
0, 0.00194686, 1, 0, 0.7644,0.00127789) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828918,-0.0023326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87835,-0.0125381) , 
7, 0.000325795, 1, 0, 0.843087,-0.00292557) , 
1, 1.18989, 1, 0, 0.823016,-0.00185338) , 
7, 8.86915e-05, 1, 0, 0.501847,-0.000847926)    );
  // itree = 990
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95864,0.000326189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868677,0.0120211) , 
0, 0.000677704, 1, 0, 0.913622,0.00305159) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130926) , 
5, 0.0267993, 1, 0, 0,-0.000118648) , 
0, 0.00356905, 1, 0, 0.563532,0.00183678) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94655,0.0100688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104567,-0.00375773) , 
0, 0.00119363, 1, 0, 0.327791,0.000522694) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656994,-0.0226155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504552,-0.000129743) , 
2, 0.190013, 1, 0, 0.577897,-0.00330332) , 
6, 0.0324783, 1, 0, 0.430572,-0.0010496) , 
3, 50.4121, 1, 0, 0.504398,0.00055306)    );
  // itree = 991
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655073,-0.0126269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879557,0.0191224) , 
4, 0.00559356, 1, 0, 0.861159,0.00238157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176474,-0.0254467) , 
4, 0.023233, 1, 0, 0.748761,0.00146294) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831934,-0.0117137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939521,0.000621255) , 
6, 0.0394354, 1, 0, 0.880321,-0.00599292) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00395244,0.0143619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000859661,-0.00775356) , 
4, 0.0162411, 1, 0, 0.0017972,0.000157265) , 
0, 0.00238633, 1, 0, 0.337547,-0.00219319) , 
2, 0.0951683, 1, 0, 0.496778,-0.000777449)    );
  // itree = 992
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.23246,-0.0121704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455821,-0.0342631) , 
5, 0.00412126, 1, 0, 0.320905,-0.00710064) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691256,0.00260957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750958,-0.0128421) , 
5, 0.0173085, 1, 0, 0.698729,-8.98188e-05) , 
5, 0.0061771, 1, 0, 0.644107,-0.00110338) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726202,0.0304536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730322,0.00552281) , 
5, 0.019544, 1, 0, 0.729602,0.00289047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0197822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000116129,0.0341595) , 
5, 0.0394805, 1, 0, 6.86536e-05,-0.00057092) , 
5, 0.0259531, 1, 0, 0.368399,0.00117668) , 
5, 0.0184809, 1, 0, 0.503162,6.22124e-05)    );
  // itree = 993
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.21782,-0.0215065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524194,0.0115208) , 
5, 0.00437038, 1, 0, 0.364114,-0.0022778) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558021,-0.03181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653939,0.00391496) , 
5, 0.00809607, 1, 0, 0.61277,-0.00933351) , 
5, 0.00705021, 1, 0, 0.46541,-0.00515212) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953016,0.010591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000260211,0.00124751) , 
0, 0.00238633, 1, 0, 0.342544,0.00136321) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657739,-0.00350328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619636,-0.019372) , 
1, 1.54503, 1, 0, 0.654568,-0.00231064) , 
6, 0.0301524, 1, 0, 0.504831,-0.0005476) , 
5, 0.00925326, 1, 0, 0.499199,-0.00120541)    );
  // itree = 994
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871043,0.00543152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.245435,-0.0199458) , 
5, 0.0152471, 1, 0, 0.662059,-0.000751573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652392,-0.0129523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.344668,-0.00301494) , 
5, 0.0120454, 1, 0, 0.450589,-0.00680318) , 
3, 75.2868, 1, 0, 0.612697,-0.00216417) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914473,0.000169309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953983,0.0180401) , 
0, 0.00158868, 1, 0, 0.934236,0.00340382) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.71643e-05,0.00980781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00123464,-0.0133746) , 
6, 0.0301516, 1, 0, 0.000429438,-0.000458956) , 
0, 0.00238688, 1, 0, 0.434069,0.00133483) , 
4, 0.0162527, 1, 0, 0.505718,-6.86332e-05)    );
  // itree = 995
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.219022,-0.00369405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465789,0.0311012) , 
4, 0.00410824, 1, 0, 0.328629,0.0006798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680665,-0.0113638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410044,-0.0205974) , 
3, 75.086, 1, 0, 0.616856,-0.00567806) , 
4, 0.00663255, 1, 0, 0.510728,-0.00333703) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922322,-0.0167286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.208911,-0.00589335) , 
0, 0.000832379, 1, 0, 0.335058,-0.00268659) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646956,0.0120597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298727,-0.00267918) , 
2, 0.261786, 1, 0, 0.531788,0.0012211) , 
5, 0.0135734, 1, 0, 0.495705,0.000504366) , 
4, 0.0116021, 1, 0, 0.499067,-0.000355373)    );
  // itree = 996
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.304668,-0.00743972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0963576,0.0111388) , 
3, 88.3286, 1, 0, 0.249933,-0.000266151) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843245,0.00172471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928407,0.0103779) , 
1, 1.4807, 1, 0, 0.879116,0.00202073) , 
7, 0.000105965, 1, 0, 0.597008,0.000995356) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65169,-0.00407033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013122) , 
0, 0.00357331, 1, 0, 0.152217,-0.00118083) , 
2, 0.333171, 1, 0, 0.505841,0.000549313)    );
  // itree = 997
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696335,0.001149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441191,-0.00754424) , 
3, 75.2877, 1, 0, 0.635319,-0.000467931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361678,-0.0292627) , 
2, 0.236793, 1, 0, 0.621425,-0.000906606) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.337845,0.0220563) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0182575,-0.00505342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766319,0.00601049) , 
7, 0.000349446, 1, 0, 0.187793,0.000371974) , 
2, 0.295829, 1, 0, 0.212538,0.00132098) , 
2, 0.261777, 1, 0, 0.500411,-0.000247332)    );
  // itree = 998
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963543,-0.00480163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956947,0.0520048) , 
0, 0.00060513, 1, 0, 0.960844,0.00436905) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00231746,0.000886858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0114547,-0.00882598) , 
6, 0.0143801, 1, 0, 0.00580417,-0.000591122) , 
0, 0.00118303, 1, 0, 0.318127,0.00103098) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702126,-0.0169031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711561,-0.00549446) , 
6, 0.0329426, 1, 0, 0.70775,-0.00413702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819014,0.0110381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000172323,-0.0142589) , 
0, 0.00238398, 1, 0, 0.311399,0.00260248) , 
2, 0.285583, 1, 0, 0.606431,-0.0024142) , 
6, 0.0232197, 1, 0, 0.502195,-0.0011686)    );
  // itree = 999
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.51702,-0.0140504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333669,0.00301958) , 
5, 0.00681886, 1, 0, 0.357493,-0.000406168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636681,0.0327711) , 
6, 0.0265075, 1, 0, 0.380122,0.000253962) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981899,0.00283413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880997,-0.00837892) , 
0, 0.000226955, 1, 0, 0.92852,-0.00382633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00223632,-0.00028268) , 
0, 0.00238727, 1, 0, 0.607623,-0.00250746) , 
6, 0.027833, 1, 0, 0.501568,-0.00122017)    );
   return;
};
 
// Clean up
inline void ReadBDTG40::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDTG40::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
         if (IsNormalised()) {
            // normalise variables
            std::vector<double> iV;
            iV.reserve(inputValues.size());
            int ivar = 0;
            for (std::vector<double>::const_iterator varIt = inputValues.begin();
                 varIt != inputValues.end(); varIt++, ivar++) {
               iV.push_back(NormVariable( *varIt, fVmin[ivar], fVmax[ivar] ));
            }
            retval = GetMvaValue__( iV );
         }
         else {
            retval = GetMvaValue__( inputValues );
         }
      }

      return retval;
   }
