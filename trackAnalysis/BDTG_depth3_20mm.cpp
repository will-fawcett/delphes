// Class: ReadBDTG20
// Automatically generated by MethodBase::MakeClass
//

/* configuration options =====================================================

#GEN -*-*-*-*-*-*-*-*-*-*-*- general info -*-*-*-*-*-*-*-*-*-*-*-

Method         : BDT::BDTG
TMVA Release   : 4.2.1         [262657]
ROOT Release   : 6.10/04       [395780]
Creator        : wfawcett
Date           : Wed Mar 14 20:29:43 2018
Host           : Linux lcgapp-slc6-x86-64-3.cern.ch 2.6.32-642.4.2.el6.x86_64 #1 SMP Wed Aug 24 09:19:54 CEST 2016 x86_64 x86_64 x86_64 GNU/Linux
Dir            : /atlas/users/wfawcett/fcc/testTMVA/tmvatutorial
Training events: 66730
Analysis type  : [Classification]


#OPT -*-*-*-*-*-*-*-*-*-*-*-*- options -*-*-*-*-*-*-*-*-*-*-*-*-

# Set by User:
V: "False" [Verbose output (short form of "VerbosityLevel" below - overrides the latter one)]
H: "False" [Print method-specific help message]
NTrees: "1000" [Number of trees in the forest]
MaxDepth: "3" [Max depth of the decision tree allowed]
MinNodeSize: "2.5%" [Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%)]
nCuts: "20" [Number of grid points in variable range used in finding optimal cut in node splitting]
BoostType: "Grad" [Boosting type for the trees in the forest (note: AdaCost is still experimental)]
UseBaggedBoost: "True" [Use only a random subsample of all events for growing the trees in each boost iteration.]
Shrinkage: "1.000000e-01" [Learning rate for GradBoost algorithm]
BaggedSampleFraction: "5.000000e-01" [Relative size of bagged event sample to original size of the data sample (used whenever bagging is used (i.e. UseBaggedBoost, Bagging,)]
# Default:
VerbosityLevel: "Default" [Verbosity level]
VarTransform: "None" [List of variable transformations performed before training, e.g., "D_Background,P_Signal,G,N_AllClasses" for: "Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed)"]
CreateMVAPdfs: "False" [Create PDFs for classifier outputs (signal and background)]
IgnoreNegWeightsInTraining: "False" [Events with negative weights are ignored in the training (but are included for testing and performance evaluation)]
AdaBoostR2Loss: "quadratic" [Type of Loss function in AdaBoostR2]
AdaBoostBeta: "5.000000e-01" [Learning rate  for AdaBoost algorithm]
UseRandomisedTrees: "False" [Determine at each node splitting the cut variable only as the best out of a random subset of variables (like in RandomForests)]
UseNvars: "3" [Size of the subset of variables used with RandomisedTree option]
UsePoissonNvars: "True" [Interpret "UseNvars" not as fixed number but as mean of a Poisson distribution in each split with RandomisedTree option]
UseYesNoLeaf: "True" [Use Sig or Bkg categories, or the purity=S/(S+B) as classification of the leaf node -> Real-AdaBoost]
NegWeightTreatment: "pray" [How to treat events with negative weights in the BDT training (particular the boosting) : IgnoreInTraining;  Boost With inverse boostweight; Pair events with negative and positive weights in training sample and *annihilate* them (experimental!)]
Css: "1.000000e+00" [AdaCost: cost of true signal selected signal]
Cts_sb: "1.000000e+00" [AdaCost: cost of true signal selected bkg]
Ctb_ss: "1.000000e+00" [AdaCost: cost of true bkg    selected signal]
Cbb: "1.000000e+00" [AdaCost: cost of true bkg    selected bkg ]
NodePurityLimit: "5.000000e-01" [In boosting/pruning, nodes with purity > NodePurityLimit are signal; background otherwise.]
SeparationType: "giniindex" [Separation criterion for node splitting]
RegressionLossFunctionBDTG: "huber" [Loss function for BDTG regression.]
HuberQuantile: "7.000000e-01" [In the Huber loss function this is the quantile that separates the core from the tails in the residuals distribution.]
DoBoostMonitor: "False" [Create control plot with ROC integral vs tree number]
UseFisherCuts: "False" [Use multivariate splits using the Fisher criterion]
MinLinCorrForFisher: "8.000000e-01" [The minimum linear correlation between two variables demanded for use in Fisher criterion in node splitting]
UseExclusiveVars: "False" [Variables already used in fisher criterion are not anymore analysed individually for node splitting]
DoPreselection: "False" [and and apply automatic pre-selection for 100% efficient signal (bkg) cuts prior to training]
SigToBkgFraction: "1.000000e+00" [Sig to Bkg ratio used in Training (similar to NodePurityLimit, which cannot be used in real adaboost]
PruneMethod: "nopruning" [Note: for BDTs use small trees (e.g.MaxDepth=3) and NoPruning:  Pruning: Method used for pruning (removal) of statistically insignificant branches ]
PruneStrength: "0.000000e+00" [Pruning strength]
PruningValFraction: "5.000000e-01" [Fraction of events to use for optimizing automatic pruning.]
SkipNormalization: "False" [Skip normalization at initialization, to keep expectation value of BDT output according to the fraction of events]
nEventsMin: "0" [deprecated: Use MinNodeSize (in % of training events) instead]
UseBaggedGrad: "False" [deprecated: Use *UseBaggedBoost* instead:  Use only a random subsample of all events for growing the trees in each iteration.]
GradBaggingFraction: "5.000000e-01" [deprecated: Use *BaggedSampleFraction* instead: Defines the fraction of events to be used in each iteration, e.g. when UseBaggedGrad=kTRUE. ]
UseNTrainEvents: "0" [deprecated: Use *BaggedSampleFraction* instead: Number of randomly picked training events used in randomised (and bagged) trees]
NNodesMax: "0" [deprecated: Use MaxDepth instead to limit the tree size]
##


#VAR -*-*-*-*-*-*-*-*-*-*-*-* variables *-*-*-*-*-*-*-*-*-*-*-*-

NVar 9
abs(tracks20.kappa_123-tracks20.kappa_013)   abs_tracks20.kappa_123_M_tracks20.kappa_013_ abs(tracks20.kappa_123-tracks20.kappa_013)   |deltaKappa|                                 units                                            'F'    [0,0.0493865758181]
tracks20.pT                   tracks20.pT                   tracks20.pT                   pT                            units                             'F'    [1.04471206665,30543.0605469]
abs(tracks20.zresiduum)       abs_tracks20.zresiduum_       abs(tracks20.zresiduum)       |zresiduum|                   units                             'F'    [0,0.499938964844]
abs(tracks20.beamlineIntersect) abs_tracks20.beamlineIntersect_ abs(tracks20.beamlineIntersect) |beamlineIntersect|             units                               'F'    [0.000390624976717,264.899993896]
abs(tracks20.hit1phi-tracks20.hit2phi)   abs_tracks20.hit1phi_M_tracks20.hit2phi_ abs(tracks20.hit1phi-tracks20.hit2phi)   |dPhi12|                                 units                                        'F'    [7.15255737305e-06,0.0243498086929]
abs(tracks20.hit2phi-tracks20.hit3phi)   abs_tracks20.hit2phi_M_tracks20.hit3phi_ abs(tracks20.hit2phi-tracks20.hit3phi)   |dPhi23|                                 units                                        'F'    [2.50339508057e-06,0.0485149621964]
abs(tracks20.hit1phi-tracks20.hit3phi)   abs_tracks20.hit1phi_M_tracks20.hit3phi_ abs(tracks20.hit1phi-tracks20.hit3phi)   |dPhi13|                                 units                                        'F'    [7.7486038208e-07,0.0243527889252]
tracks20.z_phi12*tracks20.z_phi23   tracks20.z_phi12_T_tracks20.z_phi23 tracks20.z_phi12*tracks20.z_phi23   z phi12*23                          units                                   'F'    [-0.00117372558452,0.000148255800013]
abs(tracks20.zresiduum/tracks20.eta)   abs_tracks20.zresiduum_D_tracks20.eta_ abs(tracks20.zresiduum/tracks20.eta)   |zresiduum/eta|                        units                                      'F'    [0,22186.0214844]
NSpec 0


============================================================================ */

#include <vector>
#include <cmath>
#include <string>
#include <iostream>

#include "IClassifierReader.h"
#include "BDTGNode.h"

#define NN new BDTGNode
   

class ReadBDTG20 : public IClassifierReader {

 public:

   // constructor
   ReadBDTG20( std::vector<std::string>& theInputVars ) 
      : IClassifierReader(),
        fClassName( "ReadBDTG20" ),
        fNvars( 9 ),
        fIsNormalised( false )
   {      
      // the training input variables
      const char* inputVars[] = { "abs(tracks20.kappa_123-tracks20.kappa_013)", "tracks20.pT", "abs(tracks20.zresiduum)", "abs(tracks20.beamlineIntersect)", "abs(tracks20.hit1phi-tracks20.hit2phi)", "abs(tracks20.hit2phi-tracks20.hit3phi)", "abs(tracks20.hit1phi-tracks20.hit3phi)", "tracks20.z_phi12*tracks20.z_phi23", "abs(tracks20.zresiduum/tracks20.eta)" };

      // sanity checks
      if (theInputVars.size() <= 0) {
         std::cout << "Problem in class \"" << fClassName << "\": empty input vector" << std::endl;
         fStatusIsClean = false;
      }

      if (theInputVars.size() != fNvars) {
         std::cout << "Problem in class \"" << fClassName << "\": mismatch in number of input values: "
                   << theInputVars.size() << " != " << fNvars << std::endl;
         fStatusIsClean = false;
      }

      // validate input variables
      for (size_t ivar = 0; ivar < theInputVars.size(); ivar++) {
         if (theInputVars[ivar] != inputVars[ivar]) {
            std::cout << "Problem in class \"" << fClassName << "\": mismatch in input variable names" << std::endl
                      << " for variable [" << ivar << "]: " << theInputVars[ivar].c_str() << " != " << inputVars[ivar] << std::endl;
            fStatusIsClean = false;
         }
      }

      // initialize min and max vectors (for normalisation)
      fVmin[0] = 0;
      fVmax[0] = 0;
      fVmin[1] = 0;
      fVmax[1] = 0;
      fVmin[2] = 0;
      fVmax[2] = 0;
      fVmin[3] = 0;
      fVmax[3] = 0;
      fVmin[4] = 0;
      fVmax[4] = 0;
      fVmin[5] = 0;
      fVmax[5] = 0;
      fVmin[6] = 0;
      fVmax[6] = 0;
      fVmin[7] = 0;
      fVmax[7] = 0;
      fVmin[8] = 0;
      fVmax[8] = 0;

      // initialize input variable types
      fType[0] = 'F';
      fType[1] = 'F';
      fType[2] = 'F';
      fType[3] = 'F';
      fType[4] = 'F';
      fType[5] = 'F';
      fType[6] = 'F';
      fType[7] = 'F';
      fType[8] = 'F';

      // initialize constants
      Initialize();

   }

   // destructor
   virtual ~ReadBDTG20() {
      Clear(); // method-specific
   }

   // the classifier response
   // "inputValues" is a vector of input values in the same order as the 
   // variables given to the constructor
   double GetMvaValue( const std::vector<double>& inputValues ) const;

 private:

   // method-specific destructor
   void Clear();

   // common member variables
   const char* fClassName;

   const size_t fNvars;
   size_t GetNvar()           const { return fNvars; }
   char   GetType( int ivar ) const { return fType[ivar]; }

   // normalisation of input variables
   const bool fIsNormalised;
   bool IsNormalised() const { return fIsNormalised; }
   double fVmin[9];
   double fVmax[9];
   double NormVariable( double x, double xmin, double xmax ) const {
      // normalise to output range: [-1, 1]
      return 2*(x - xmin)/(xmax - xmin) - 1.0;
   }

   // type of input variable: 'F' or 'I'
   char   fType[9];

   // initialize internal variables
   void Initialize();
   double GetMvaValue__( const std::vector<double>& inputValues ) const;

   // private members (method specific)
   std::vector<BDTGNode*> fForest;       // i.e. root nodes of decision trees
   std::vector<double>                fBoostWeights; // the weights applied in the individual boosts
};

double ReadBDTG20::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTGNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTGNode*)current->GetRight();
         else current=(BDTGNode*)current->GetLeft();
      }
      myMVA += current->GetResponse();
   }
   return 2.0/(1.0+exp(-2.0*myMVA))-1.0;
};

void ReadBDTG20::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99796,0.171139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970612,0.140344) , 
8, 0.0418939, 1, 0, 0.993433,0.493433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721744,0.0300067) , 
2, 0.091435, 1, 0, 0.970595,0.470595) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00867405,-0.0259199) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0261831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000160739,-0.0261783) , 
5, 0.0244918, 1, 0, 4.3877e-05,-0.499956) , 
0, 0.0157914, 1, 0, 0.0018137,-0.498186) , 
0, 0.00235174, 1, 0, 0.495563,-0.00443715)    );
  // itree = 1
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998039,0.146459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942396,0.0999512) , 
8, 0.0436366, 1, 0, 0.990346,0.408304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715072,0.0267074) , 
2, 0.0937047, 1, 0, 0.967666,0.391148) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00793492,-0.0252763) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0255152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0255153) , 
5, 0.0250527, 1, 0, 0,-0.486912) , 
0, 0.0157978, 1, 0, 0.00166901,-0.485271) , 
0, 0.00235038, 1, 0, 0.494664,-0.0379914)    );
  // itree = 2
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991751,0.124261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.137967) , 
5, 0.0104721, 1, 0, 0.993274,0.345226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658407,0.015504) , 
2, 0.0946626, 1, 0, 0.964832,0.326953) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00535108,-0.0247405) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0248972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000175128,-0.0248917) , 
3, 88.112, 1, 0, 4.51257e-05,-0.474129) , 
0, 0.0157936, 1, 0, 0.00117269,-0.473055) , 
0, 0.00235174, 1, 0, 0.500029,-0.0589157)    );
  // itree = 3
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988798,0.110877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997032,0.121624) , 
6, 0.0185945, 1, 0, 0.991494,0.287815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673792,0.0167348) , 
2, 0.0930474, 1, 0, 0.964429,0.274873) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00687817,-0.0241171) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000176152,-0.0243182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0243237) , 
7, -0.000366989, 1, 0, 4.47237e-05,-0.461734) , 
0, 0.01579, 1, 0, 0.00145519,-0.46039) , 
0, 0.00235152, 1, 0, 0.496923,-0.0820839)    );
  // itree = 4
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998079,0.11397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983723,0.099198) , 
0, 0.000223289, 1, 0, 0.990996,0.242499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66874,0.0151968) , 
2, 0.0948702, 1, 0, 0.96449,0.232784) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00893638,-0.0235147) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0237904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000172323,-0.0237848) , 
2, 0.356968, 1, 0, 4.50717e-05,-0.449668) , 
0, 0.0157936, 1, 0, 0.00186421,-0.447936) , 
0, 0.00235174, 1, 0, 0.498469,-0.0967624)    );
  // itree = 5
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994608,0.103928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596161,-0.00877539) , 
2, 0.0697855, 1, 0, 0.966772,0.185776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991533,0.102008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90489,0.079999) , 
2, 0.09276, 1, 0, 0.974356,0.237218) , 
5, 0.0099316, 1, 0, 0.968999,0.200879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00916329,-0.0230084) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000657368,-0.0232715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0232933) , 
7, -0.000352909, 1, 0, 0.000176876,-0.437792) , 
0, 0.0157914, 1, 0, 0.00197953,-0.436102) , 
0, 0.00235174, 1, 0, 0.499511,-0.108375)    );
  // itree = 6
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.105639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992466,0.124199) , 
2, 0.0718587, 1, 0, 0.999091,0.19301) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989946,0.0950392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516948,-0.00545801) , 
2, 0.0948702, 1, 0, 0.941552,0.150566) , 
0, 0.000111812, 1, 0, 0.969512,0.171191) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00598936,-0.0226514) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0228289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0228295) , 
0, 0.0413921, 1, 0, 0,-0.42654) , 
0, 0.0158091, 1, 0, 0.00131101,-0.42538) , 
0, 0.00235174, 1, 0, 0.507201,-0.113669)    );
  // itree = 7
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995584,0.0967673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782302,0.0011598) , 
2, 0.0473313, 1, 0, 0.965537,0.126658) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995358,0.0974478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896263,0.0625061) , 
2, 0.0900503, 1, 0, 0.973838,0.176464) , 
5, 0.00980521, 1, 0, 0.968054,0.141758) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00688825,-0.0221828) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0223943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0223948) , 
0, 0.0413883, 1, 0, 0,-0.415411) , 
0, 0.0158038, 1, 0, 0.00140349,-0.414165) , 
0, 0.00235152, 1, 0, 0.504286,-0.124956)    );
  // itree = 8
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995979,0.0942445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705384,-0.00886686) , 
2, 0.0468524, 1, 0, 0.95986,0.101332) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995483,0.0944997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900199,0.0583706) , 
2, 0.0886407, 1, 0, 0.976491,0.150425) , 
6, 0.0185945, 1, 0, 0.965993,0.119434) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0110663,-0.0216214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0219869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000361108,-0.0219744) , 
5, 0.0254201, 1, 0, 8.96297e-05,-0.404488) , 
0, 0.015806, 1, 0, 0.00237692,-0.402381) , 
0, 0.00235174, 1, 0, 0.498119,-0.133928)    );
  // itree = 9
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998281,0.0949638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.886359,0.0126818) , 
2, 0.0234262, 1, 0, 0.968466,0.0883266) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995649,0.0925382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838794,0.0349504) , 
2, 0.0946657, 1, 0, 0.97379,0.121916) , 
5, 0.00845528, 1, 0, 0.970985,0.104222) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00802994,-0.021347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0216043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000629223,-0.0215815) , 
2, 0.357029, 1, 0, 0.000180912,-0.393851) , 
0, 0.0157914, 1, 0, 0.00179606,-0.392448) , 
0, 0.00235174, 1, 0, 0.504277,-0.134947)    );
  // itree = 10
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994364,0.0869461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719831,-0.0105611) , 
2, 0.0468524, 1, 0, 0.963236,0.071143) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998524,0.0940592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891566,0.0473652) , 
2, 0.0886561, 1, 0, 0.977473,0.112769) , 
5, 0.00919293, 1, 0, 0.968586,0.0867869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00655032,-0.0210388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0212443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000461861,-0.0212276) , 
2, 0.356925, 1, 0, 0.000132741,-0.383634) , 
0, 0.0157693, 1, 0, 0.00147088,-0.382534) , 
0, 0.00234768, 1, 0, 0.495326,-0.142876)    );
  // itree = 11
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999478,0.0938439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.112227) , 
2, 0.0702079, 1, 0, 0.999542,0.093091) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986535,0.0732493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50582,-0.0124226) , 
2, 0.0946626, 1, 0, 0.937399,0.0539262) , 
0, 0.000111694, 1, 0, 0.967557,0.0729325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00751279,-0.0206586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0209053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000347769,-0.0208925) , 
5, 0.0250687, 1, 0, 9.03555e-05,-0.373681) , 
0, 0.0157914, 1, 0, 0.00152955,-0.372479) , 
0, 0.00235174, 1, 0, 0.50489,-0.140392)    );
  // itree = 12
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990956,0.0711748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914732,0.0038994) , 
0, 0.000111695, 1, 0, 0.951346,0.0312763) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974856,0.0506314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982298,0.0722852) , 
5, 0.0098143, 1, 0, 0.977873,0.0734461) , 
5, 0.00604627, 1, 0, 0.971081,0.062649) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00652966,-0.020382) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0205853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.020586) , 
2, 0.357025, 1, 0, 0,-0.364039) , 
0, 0.0157637, 1, 0, 0.00134478,-0.363007) , 
0, 0.00234767, 1, 0, 0.505895,-0.14154)    );
  // itree = 13
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9965,0.0865438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961356,0.0310961) , 
8, 0.0418939, 1, 0, 0.990551,0.0568592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720466,0.000910551) , 
2, 0.0934942, 1, 0, 0.969009,0.0527938) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0101703,-0.0199187) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0202832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000168846,-0.0202766) , 
6, 0.0162453, 1, 0, 4.52885e-05,-0.354516) , 
0, 0.01579, 1, 0, 0.0020662,-0.352775) , 
0, 0.00235152, 1, 0, 0.503978,-0.142256)    );
  // itree = 14
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996083,0.0826816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985371,0.0671994) , 
2, 0.0450498, 1, 0, 0.99396,0.0514488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678871,-0.00368694) , 
2, 0.0946626, 1, 0, 0.968269,0.045097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00535742,-0.0198254) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000157875,-0.0199908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0199974) , 
6, 0.00582127, 1, 0, 4.44597e-05,-0.34529) , 
0, 0.0157914, 1, 0, 0.00110352,-0.34454) , 
0, 0.00235174, 1, 0, 0.499903,-0.143591)    );
  // itree = 15
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994982,0.0788102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685867,-0.015241) , 
2, 0.070997, 1, 0, 0.97028,0.0319707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993495,0.0759074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917997,0.0506716) , 
2, 0.0900657, 1, 0, 0.976007,0.0679719) , 
5, 0.0104175, 1, 0, 0.971562,0.0400342) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00788458,-0.0194433) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0197266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000173514,-0.0197195) , 
3, 88.238, 1, 0, 4.58816e-05,-0.336305) , 
0, 0.0158283, 1, 0, 0.00164379,-0.335034) , 
0, 0.00235152, 1, 0, 0.50592,-0.14003)    );
  // itree = 16
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992748,0.0707369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593311,-0.0195886) , 
2, 0.0711526, 1, 0, 0.965031,0.0211833) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0906944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921818,0.0482558) , 
2, 0.0886561, 1, 0, 0.982034,0.0641813) , 
5, 0.0100512, 1, 0, 0.969674,0.0329241) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00770676,-0.0191884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0194698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0194704) , 
2, 0.356951, 1, 0, 0,-0.327602) , 
0, 0.01579, 1, 0, 0.00152356,-0.326417) , 
0, 0.00235152, 1, 0, 0.498515,-0.141952)    );
  // itree = 17
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992612,0.067497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652344,-0.0148454) , 
2, 0.070997, 1, 0, 0.965956,0.0184268) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997758,0.0834305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912564,0.0423289) , 
2, 0.09276, 1, 0, 0.979684,0.0524481) , 
5, 0.0102439, 1, 0, 0.969402,0.026967) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00781377,-0.0189339) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0192263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000154159,-0.0192197) , 
6, 0.0162099, 1, 0, 4.4355e-05,-0.319038) , 
0, 0.0157988, 1, 0, 0.00168065,-0.317783) , 
0, 0.00235054, 1, 0, 0.496953,-0.141343)    );
  // itree = 18
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997931,0.0819777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976359,0.0672312) , 
2, 0.0723354, 1, 0, 0.995428,0.0351157) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98316,0.0396269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714951,-0.0103981) , 
2, 0.070997, 1, 0, 0.941404,0.00464695) , 
0, 0.000111812, 1, 0, 0.967614,0.0194291) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00458497,-0.0187991) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0190198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000649432,-0.0189712) , 
5, 0.00904922, 1, 0, 0.000449324,-0.31075) , 
2, 0.095209, 1, 0, 0.00131465,-0.30988) , 
0, 0.00235174, 1, 0, 0.499297,-0.140171)    );
  // itree = 19
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995102,0.0703919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984476,0.0607414) , 
2, 0.0705915, 1, 0, 0.99444,0.0242775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717053,-0.00343003) , 
2, 0.0926921, 1, 0, 0.972207,0.0205919) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00671185,-0.0185168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0187766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0187751) , 
2, 0.119067, 1, 0, 0,-0.302732) , 
0, 0.015806, 1, 0, 0.00140584,-0.301718) , 
0, 0.00235174, 1, 0, 0.492503,-0.138672)    );
  // itree = 20
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999415,0.0870507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963328,-0.00537097) , 
8, 0.0418939, 1, 0, 0.993215,0.0195761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692261,-0.00671091) , 
2, 0.0934942, 1, 0, 0.967233,0.0140428) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00553501,-0.0183567) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.018567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0185656) , 
2, 0.118997, 1, 0, 0,-0.294863) , 
0, 0.01579, 1, 0, 0.00111645,-0.294141) , 
0, 0.00235152, 1, 0, 0.502726,-0.134132)    );
  // itree = 21
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995145,0.0652117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988145,0.063881) , 
2, 0.0722656, 1, 0, 0.99472,0.0179249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.693209,-0.0052769) , 
2, 0.0948702, 1, 0, 0.970828,0.013686) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00796033,-0.0180334) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0183665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000308902,-0.0183515) , 
2, 0.35699, 1, 0, 9.09008e-05,-0.287111) , 
0, 0.01579, 1, 0, 0.00167094,-0.285935) , 
0, 0.00235152, 1, 0, 0.507368,-0.129596)    );
  // itree = 22
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990992,0.0415181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655605,-0.0174154) , 
2, 0.0702785, 1, 0, 0.964714,-0.000549697) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995349,0.066064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943899,0.0559971) , 
2, 0.0899264, 1, 0, 0.984429,0.0393637) , 
5, 0.0102416, 1, 0, 0.969536,0.00921168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00468013,-0.0179553) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0181989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000645813,-0.0181494) , 
5, 0.00911592, 1, 0, 0.000445471,-0.279713) , 
2, 0.0953006, 1, 0, 0.00133657,-0.278828) , 
0, 0.00235152, 1, 0, 0.495482,-0.131819)    );
  // itree = 23
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997387,0.073938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961793,-0.0241449) , 
8, 0.0418939, 1, 0, 0.991328,0.0101923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679379,-0.00693238) , 
2, 0.0937047, 1, 0, 0.965528,0.00537195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0106849,-0.0175033) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0179954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000156237,-0.017987) , 
2, 0.356968, 1, 0, 4.42248e-05,-0.272455) , 
0, 0.0157923, 1, 0, 0.0020754,-0.27082) , 
0, 0.00235152, 1, 0, 0.501207,-0.127734)    );
  // itree = 24
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983228,-0.00880393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994889,0.0605864) , 
6, 0.0116846, 1, 0, 0.992037,0.0095416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679921,-0.00716784) , 
2, 0.0948702, 1, 0, 0.966541,0.00473564) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00757395,-0.0174828) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0178239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0178213) , 
2, 0.11909, 1, 0, 0,-0.265425) , 
0, 0.015806, 1, 0, 0.00148958,-0.264373) , 
0, 0.00235174, 1, 0, 0.498647,-0.125739)    );
  // itree = 25
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995999,0.0585352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711476,-0.0248672) , 
2, 0.0465237, 1, 0, 0.961345,-0.00814797) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994224,0.0557881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.88511,0.0271387) , 
2, 0.0927446, 1, 0, 0.974553,0.0249224) , 
5, 0.00921227, 1, 0, 0.966266,0.0041729) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00842926,-0.017263) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0176564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000164963,-0.0176473) , 
2, 0.356943, 1, 0, 4.61911e-05,-0.258487) , 
0, 0.0157841, 1, 0, 0.00184911,-0.257183) , 
0, 0.00235054, 1, 0, 0.505187,-0.120779)    );
  // itree = 26
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999478,0.0835746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988454,0.0799665) , 
2, 0.0713356, 1, 0, 0.99816,0.0191776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983258,0.000320636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544061,-0.0149566) , 
2, 0.0948702, 1, 0, 0.940803,-0.0128916) , 
0, 0.000111645, 1, 0, 0.968587,0.00264312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00798368,-0.0171198) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0174981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000167346,-0.0174886) , 
2, 0.35699, 1, 0, 4.46972e-05,-0.25178) , 
0, 0.01579, 1, 0, 0.00167055,-0.250651) , 
0, 0.00235152, 1, 0, 0.499011,-0.120367)    );
  // itree = 27
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978232,-0.0407601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993566,0.0421771) , 
6, 0.00708432, 1, 0, 0.99255,0.00608998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695239,-0.00631964) , 
2, 0.0946626, 1, 0, 0.96862,0.00228724) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0041272,-0.01713) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0173711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000575838,-0.0173202) , 
5, 0.00901902, 1, 0, 0.000402131,-0.245387) , 
2, 0.0952032, 1, 0, 0.00114476,-0.24467) , 
0, 0.00235174, 1, 0, 0.502291,-0.116748)    );
  // itree = 28
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993617,0.0303558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774712,-0.0205648) , 
2, 0.0474351, 1, 0, 0.962616,-0.00927226) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996219,0.0579632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914916,0.0326747) , 
2, 0.088493, 1, 0, 0.977999,0.0245705) , 
5, 0.00980521, 1, 0, 0.967313,0.00105951) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00797215,-0.0168019) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0172044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.99154e-05,-0.0171975) , 
2, 0.118997, 1, 0, 4.44335e-05,-0.2389) , 
0, 0.015806, 1, 0, 0.00169008,-0.237768) , 
0, 0.00235174, 1, 0, 0.494899,-0.115783)    );
  // itree = 29
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995845,0.0480306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758537,-0.0244018) , 
2, 0.0474351, 1, 0, 0.962918,-0.0097283) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997473,0.066841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901095,0.0276401) , 
2, 0.09276, 1, 0, 0.979454,0.021127) , 
5, 0.00962619, 1, 0, 0.968243,0.00020744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00741695,-0.0166858) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0170653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.14303e-05,-0.0170584) , 
2, 0.118997, 1, 0, 4.5425e-05,-0.232699) , 
0, 0.0158051, 1, 0, 0.00161021,-0.23168) , 
0, 0.00235174, 1, 0, 0.502872,-0.111431)    );
  // itree = 30
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0877092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985566,-0.00563923) , 
2, 0.0135498, 1, 0, 0.991812,0.00306837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703363,-0.00697327) , 
2, 0.0948702, 1, 0, 0.968561,-0.000670312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00687404,-0.0165758) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0169298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000632525,-0.0168911) , 
2, 0.35699, 1, 0, 0.00018037,-0.226527) , 
0, 0.0157988, 1, 0, 0.00151599,-0.225722) , 
0, 0.00235054, 1, 0, 0.50414,-0.108751)    );
  // itree = 31
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998573,0.0738434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974202,-0.0218192) , 
8, 0.0426388, 1, 0, 0.99491,0.00551781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688793,-0.00639244) , 
2, 0.0946626, 1, 0, 0.969945,0.00162576) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00619576,-0.0164806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0168041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0168012) , 
2, 0.118997, 1, 0, 0,-0.220831) , 
0, 0.0158078, 1, 0, 0.00132119,-0.220092) , 
0, 0.00235152, 1, 0, 0.50082,-0.105757)    );
  // itree = 32
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997995,0.0602906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75448,-0.0226606) , 
2, 0.0468524, 1, 0, 0.968317,-0.00802031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993208,0.0274023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913198,0.0343097) , 
2, 0.0927446, 1, 0, 0.978923,0.0190798) , 
5, 0.00935849, 1, 0, 0.972158,0.0017952) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00802994,-0.0162326) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0166815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0166786) , 
2, 0.119053, 1, 0, 0,-0.215104) , 
0, 0.01579, 1, 0, 0.00162776,-0.21404) , 
0, 0.00235152, 1, 0, 0.497857,-0.103684)    );
  // itree = 33
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998338,0.0643818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958857,-0.0306643) , 
2, 0.0575823, 1, 0, 0.993447,0.00263807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681717,-0.00847826) , 
2, 0.0930474, 1, 0, 0.965728,-0.00254588) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00654606,-0.0162002) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0165636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0165609) , 
2, 0.118997, 1, 0, 0,-0.209524) , 
0, 0.01579, 1, 0, 0.00128401,-0.208807) , 
0, 0.00235152, 1, 0, 0.500007,-0.102147)    );
  // itree = 34
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977721,-0.0784659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994569,0.029609) , 
4, 0.00347841, 1, 0, 0.993472,0.0022177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689066,-0.00722966) , 
2, 0.0946626, 1, 0, 0.969284,-0.00169826) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00771929,-0.0159991) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0164486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000332053,-0.0164263) , 
2, 0.356679, 1, 0, 9.09008e-05,-0.204) , 
0, 0.01579, 1, 0, 0.00166053,-0.203037) , 
0, 0.00235152, 1, 0, 0.503328,-0.0986523)    );
  // itree = 35
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998448,0.0586516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983735,0.0649713) , 
2, 0.0723354, 1, 0, 0.996788,0.00977119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984213,-0.0348621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554902,-0.0123374) , 
2, 0.0934942, 1, 0, 0.940678,-0.0159132) , 
0, 0.000111845, 1, 0, 0.967817,-0.00349034) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00440102,-0.0160545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0163639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000790117,-0.0162917) , 
5, 0.00914598, 1, 0, 0.000533256,-0.198828) , 
2, 0.0952265, 1, 0, 0.00133751,-0.198056) , 
0, 0.00235152, 1, 0, 0.496995,-0.0982735)    );
  // itree = 36
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991974,-0.0128325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99753,0.0662076) , 
6, 0.0162912, 1, 0, 0.994689,0.00300586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688191,-0.00785434) , 
2, 0.0948702, 1, 0, 0.970232,-0.0012669) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00595974,-0.0158348) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0162609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00077388,-0.0161872) , 
5, 0.00899963, 1, 0, 0.000531063,-0.193699) , 
2, 0.0953006, 1, 0, 0.00157336,-0.192699) , 
0, 0.00235174, 1, 0, 0.501952,-0.0938113)    );
  // itree = 37
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990186,-0.0207627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603744,-0.0205991) , 
2, 0.0948702, 1, 0, 0.96493,-0.0121053) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996564,0.0420607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904008,0.0260738) , 
2, 0.0695746, 1, 0, 0.966411,0.0256548) , 
0, 0.00178952, 1, 0, 0.96521,-0.00497191) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00586547,-0.015777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0161403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0161349) , 
2, 0.119045, 1, 0, 0,-0.188689) , 
0, 0.015806, 1, 0, 0.00115463,-0.188105) , 
0, 0.00235174, 1, 0, 0.504977,-0.0923981)    );
  // itree = 38
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99202,-0.0171847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559833,-0.0192504) , 
2, 0.0694493, 1, 0, 0.961323,-0.0126826) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993699,0.00402943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921985,0.0347282) , 
2, 0.0928465, 1, 0, 0.97918,0.0164646) , 
5, 0.00980521, 1, 0, 0.966855,-0.00365176) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00345095,-0.0157999) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000536421,-0.0160379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.23531e-05,-0.0160323) , 
0, 0.0225194, 1, 0, 0.000225537,-0.184125) , 
2, 0.166707, 1, 0, 0.00137742,-0.183023) , 
0, 0.00235152, 1, 0, 0.503074,-0.0898154)    );
  // itree = 39
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994131,0.0211112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984038,-0.10327) , 
4, 0.0104855, 1, 0, 0.992307,0.000354652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663244,-0.0110031) , 
2, 0.0934942, 1, 0, 0.963576,-0.00598962) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00886263,-0.0153393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0159514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000120736,-0.0159363) , 
2, 0.119067, 1, 0, 9.02743e-05,-0.178964) , 
0, 0.0157817, 1, 0, 0.00192706,-0.177732) , 
0, 0.00234977, 1, 0, 0.501175,-0.0885704)    );
  // itree = 40
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99293,-0.00888382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686728,-0.0142136) , 
2, 0.0711526, 1, 0, 0.964331,-0.00879076) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994945,0.025332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972653,0.0571087) , 
2, 0.0676782, 1, 0, 0.986993,0.0258084) , 
5, 0.0105402, 1, 0, 0.968966,-0.00171475) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00671856,-0.0154007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0158616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0158559) , 
2, 0.118997, 1, 0, 0,-0.174415) , 
0, 0.0157979, 1, 0, 0.00132938,-0.173682) , 
0, 0.00235054, 1, 0, 0.502857,-0.0845511)    );
  // itree = 41
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998752,0.0672312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832524,-0.0278936) , 
2, 0.0234262, 1, 0, 0.960223,-0.0139485) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975181,-0.00168972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992405,0.0762592) , 
0, 0.00189796, 1, 0, 0.979923,0.00938632) , 
5, 0.0079853, 1, 0, 0.970742,-0.00148832) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0077645,-0.0152196) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0157752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0157696) , 
2, 0.119067, 1, 0, 0,-0.169901) , 
0, 0.0158047, 1, 0, 0.00156187,-0.168957) , 
0, 0.00235152, 1, 0, 0.499145,-0.0829776)    );
  // itree = 42
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99749,0.0534833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972104,-0.0478348) , 
8, 0.0436366, 1, 0, 0.99418,0.00174931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680665,-0.00916205) , 
2, 0.0930474, 1, 0, 0.967995,-0.00315645) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00501991,-0.0152968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0157126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000575838,-0.015646) , 
5, 0.00895042, 1, 0, 0.000400942,-0.165669) , 
2, 0.095209, 1, 0, 0.00132025,-0.164811) , 
0, 0.00235152, 1, 0, 0.500053,-0.0814093)    );
  // itree = 43
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998568,0.0620454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985847,-0.0293543) , 
0, 0.000334934, 1, 0, 0.992278,-0.000126537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674564,-0.0109781) , 
2, 0.0948702, 1, 0, 0.966121,-0.00578137) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00432482,-0.0152671) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000116985,-0.01561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00198287,-0.0154492) , 
3, 88.3036, 1, 0, 0.000574112,-0.161206) , 
2, 0.0952265, 1, 0, 0.00133689,-0.160535) , 
0, 0.00235174, 1, 0, 0.496576,-0.0810975)    );
  // itree = 44
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972933,-0.0652285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994518,0.0180892) , 
6, 0.007078, 1, 0, 0.992972,0.000446318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692328,-0.00786105) , 
2, 0.0946626, 1, 0, 0.9684,-0.00348286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0075189,-0.0149509) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0155371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0155294) , 
2, 0.118997, 1, 0, 0,-0.157091) , 
0, 0.0157936, 1, 0, 0.00156138,-0.156157) , 
0, 0.00235174, 1, 0, 0.504293,-0.0767705)    );
  // itree = 45
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996788,0.0413141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947162,-0.0788162) , 
8, 0.0456433, 1, 0, 0.99161,-0.0011239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675222,-0.00775201) , 
2, 0.0946626, 1, 0, 0.965669,-0.00514366) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00889726,-0.0147412) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0154623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0154548) , 
2, 0.11909, 1, 0, 0,-0.153018) , 
0, 0.0157852, 1, 0, 0.00179949,-0.151848) , 
0, 0.00235034, 1, 0, 0.503526,-0.0754834)    );
  // itree = 46
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971139,-0.0998313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993788,0.00722878) , 
4, 0.00347827, 1, 0, 0.992272,-0.000724451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654694,-0.0100853) , 
2, 0.0948702, 1, 0, 0.963542,-0.0063691) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00636538,-0.0148785) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.015389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0153829) , 
2, 0.142796, 1, 0, 0,-0.149056) , 
0, 0.0157693, 1, 0, 0.0012731,-0.148429) , 
0, 0.00234768, 1, 0, 0.503752,-0.0742482)    );
  // itree = 47
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997293,0.0453449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961296,-0.0486802) , 
8, 0.0456433, 1, 0, 0.993468,0.000509165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651559,-0.011569) , 
2, 0.0948702, 1, 0, 0.964563,-0.00603942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00378152,-0.0149829) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.18164e-05,-0.0153059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000175128,-0.015336) , 
7, -3.37052e-05, 1, 0, 0.000111529,-0.14566) , 
2, 0.166707, 1, 0, 0.00142952,-0.144445) , 
0, 0.00235038, 1, 0, 0.499546,-0.0728639)    );
  // itree = 48
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997425,0.0376937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966142,-0.0415673) , 
8, 0.0425803, 1, 0, 0.992709,-0.000641145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6941,-0.00605537) , 
2, 0.0937047, 1, 0, 0.96851,-0.00358938) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00102601,-0.0151581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0152594) , 
6, 0.0046469, 1, 0, 0.00030556,-0.141678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00376004,-0.0149114) , 
6, 0.0162387, 1, 0, 0.00139477,-0.140729) , 
0, 0.00235054, 1, 0, 0.493617,-0.0709304)    );
  // itree = 49
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989411,-0.0631689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747535,-0.0122846) , 
2, 0.0702785, 1, 0, 0.965079,-0.0110463) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997829,0.0592542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964994,0.0432899) , 
2, 0.0638657, 1, 0, 0.98526,0.0233506) , 
5, 0.0108441, 1, 0, 0.968406,-0.0053751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00731611,-0.0145401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0151852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000492569,-0.0151344) , 
2, 0.35699, 1, 0, 0.00013321,-0.137698) , 
0, 0.0157914, 1, 0, 0.00156445,-0.136897) , 
0, 0.00235174, 1, 0, 0.500961,-0.0689628)    );
  // itree = 50
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994191,-0.000590344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616386,-0.0143729) , 
2, 0.0934942, 1, 0, 0.968904,-0.00674273) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998641,0.065815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92281,0.0288976) , 
2, 0.0679539, 1, 0, 0.977469,0.0207583) , 
0, 0.00167718, 1, 0, 0.970836,-0.000540105) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0111302,-0.0140833) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0151274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000124942,-0.0151074) , 
2, 0.119039, 1, 0, 9.06001e-05,-0.134176) , 
0, 0.01579, 1, 0, 0.00225736,-0.132643) , 
0, 0.00235152, 1, 0, 0.508276,-0.063628)    );
  // itree = 51
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988742,-0.0365431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995142,0.0345939) , 
5, 0.00764728, 1, 0, 0.992251,-0.000462126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691797,-0.00731681) , 
2, 0.0948702, 1, 0, 0.968151,-0.00395838) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00917108,-0.014198) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0150667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0150596) , 
2, 0.118997, 1, 0, 0,-0.130789) , 
0, 0.0157914, 1, 0, 0.0018189,-0.129644) , 
0, 0.00235174, 1, 0, 0.499747,-0.0648813)    );
  // itree = 52
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996911,0.00603949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987759,0.0706856) , 
2, 0.0723354, 1, 0, 0.995886,0.00703464) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982883,-0.0286338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504851,-0.0144615) , 
2, 0.0946626, 1, 0, 0.933122,-0.0189789) , 
0, 0.000111812, 1, 0, 0.963397,-0.00643072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00427572,-0.0145758) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.015027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000851808,-0.0149186) , 
5, 0.00891842, 1, 0, 0.000593064,-0.127413) , 
2, 0.0953195, 1, 0, 0.00136853,-0.126737) , 
0, 0.00235174, 1, 0, 0.501831,-0.0641518)    );
  // itree = 53
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993892,-0.0152686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988058,0.0375595) , 
2, 0.0661796, 1, 0, 0.993416,0.00025085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700741,-0.00658066) , 
2, 0.0926921, 1, 0, 0.968938,-0.00295702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0047943,-0.0144557) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000117901,-0.0149449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00209993,-0.0147292) , 
3, 88.3266, 1, 0, 0.000617342,-0.124073) , 
2, 0.0952265, 1, 0, 0.00142344,-0.123395) , 
0, 0.00234977, 1, 0, 0.498619,-0.0615033)    );
  // itree = 54
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998983,0.0590177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988898,0.0696609) , 
2, 0.0711583, 1, 0, 0.997764,0.00792648) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987724,-0.0153563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516733,-0.0120128) , 
2, 0.0946626, 1, 0, 0.941271,-0.0126787) , 
0, 0.000111812, 1, 0, 0.968819,-0.00263088) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00827982,-0.0140531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0148992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000182852,-0.0148704) , 
2, 0.118989, 1, 0, 0.000135162,-0.120814) , 
0, 0.0158101, 1, 0, 0.00179392,-0.119838) , 
0, 0.00235174, 1, 0, 0.506642,-0.0586483)    );
  // itree = 55
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995368,0.00971335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984302,0.02982) , 
2, 0.0720796, 1, 0, 0.994687,0.00146319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67705,-0.00741266) , 
2, 0.0946626, 1, 0, 0.968333,-0.00245694) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00577413,-0.0142102) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00123176,-0.0147508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.81798e-05,-0.0148313) , 
0, 0.0180469, 1, 0, 0.000349788,-0.118071) , 
2, 0.0953078, 1, 0, 0.00140781,-0.117125) , 
0, 0.00235152, 1, 0, 0.497823,-0.058255)    );
  // itree = 56
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997992,0.0504966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965202,-0.0412713) , 
8, 0.0425803, 1, 0, 0.992957,-0.000214363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660072,-0.00666615) , 
2, 0.0948702, 1, 0, 0.965067,-0.00380675) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0148161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000680868,-0.0147189) , 
5, 0.00695329, 1, 0, 0.000507246,-0.11505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00334304,-0.0144126) , 
3, 88.3073, 1, 0, 0.00116746,-0.114352) , 
0, 0.00235038, 1, 0, 0.496129,-0.0575869)    );
  // itree = 57
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968266,-0.051181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994066,0.00457112) , 
6, 0.00709757, 1, 0, 0.992307,-0.00087414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68255,-0.00651366) , 
2, 0.0948702, 1, 0, 0.967094,-0.00403702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00915259,-0.0137265) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0147475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0147378) , 
2, 0.11916, 1, 0, 0,-0.111854) , 
0, 0.0158078, 1, 0, 0.00183667,-0.11068) , 
0, 0.00235152, 1, 0, 0.49891,-0.0557628)    );
  // itree = 58
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99588,0.00114736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714601,-0.0202651) , 
2, 0.0468524, 1, 0, 0.966107,-0.0100061) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994081,0.0197966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887371,0.0200049) , 
2, 0.0949227, 1, 0, 0.976842,0.0110294) , 
5, 0.00903012, 1, 0, 0.970407,-0.00158071) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00755045,-0.0138474) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0146991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.01469) , 
2, 0.119082, 1, 0, 0,-0.108967) , 
0, 0.0158051, 1, 0, 0.00156306,-0.108111) , 
0, 0.00235174, 1, 0, 0.496438,-0.0536967)    );
  // itree = 59
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998165,0.0666047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936461,-0.0277953) , 
0, 8.50626e-05, 1, 0, 0.973215,-0.00667325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996551,0.0288603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903175,0.0220155) , 
2, 0.0663921, 1, 0, 0.966995,0.0187143) , 
0, 0.00178631, 1, 0, 0.972044,-0.00189459) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00409442,-0.0141577) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00107227,-0.014561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0146438) , 
0, 0.0180439, 1, 0, 0.000266463,-0.106462) , 
2, 0.0953006, 1, 0, 0.00108304,-0.105782) , 
0, 0.00235174, 1, 0, 0.497322,-0.0526869)    );
  // itree = 60
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997384,0.034569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958966,-0.038255) , 
8, 0.0422866, 1, 0, 0.991024,-0.00191736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69248,-0.00723821) , 
2, 0.0948702, 1, 0, 0.965798,-0.00525781) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0146249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00106931,-0.0144736) , 
4, 0.0069685, 1, 0, 0.000786678,-0.103385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00400573,-0.014097) , 
3, 100.939, 1, 0, 0.00140978,-0.102721) , 
0, 0.00235034, 1, 0, 0.496169,-0.0527196)    );
  // itree = 61
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995026,-0.022742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811672,-0.0126409) , 
2, 0.0474351, 1, 0, 0.971626,-0.00618078) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995764,0.024904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923377,0.0277092) , 
2, 0.09276, 1, 0, 0.982124,0.0130915) , 
5, 0.00962619, 1, 0, 0.975057,0.000118031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00590881,-0.0138067) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.01458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000761259,-0.0144623) , 
5, 0.00908203, 1, 0, 0.00050539,-0.10085) , 
2, 0.0952265, 1, 0, 0.00166132,-0.0998452) , 
0, 0.00235054, 1, 0, 0.504127,-0.0482443)    );
  // itree = 62
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977805,-0.0508342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995165,0.014153) , 
7, 2.11539e-05, 1, 0, 0.992687,-0.000834907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687062,-0.00824433) , 
2, 0.0937047, 1, 0, 0.966559,-0.00482351) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00688825,-0.0136611) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.03474e-05,-0.0145062) , 
2, 0.118997, 1, 0, 4.43942e-05,-0.0981539) , 
0, 0.0157841, 1, 0, 0.00141908,-0.0974359) , 
0, 0.00235054, 1, 0, 0.497222,-0.0498599)    );
  // itree = 63
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999074,0.0729358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937177,-0.0205856) , 
0, 8.50625e-05, 1, 0, 0.973904,-0.00413089) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994758,0.00156797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929481,0.0330982) , 
2, 0.0679703, 1, 0, 0.974623,0.0201958) , 
0, 0.00178632, 1, 0, 0.974037,0.000374714) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00680054,-0.0136113) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.1032e-05,-0.0144651) , 
2, 0.118989, 1, 0, 4.5673e-05,-0.0956095) , 
0, 0.0157969, 1, 0, 0.00141908,-0.0949188) , 
0, 0.00235038, 1, 0, 0.506259,-0.0454564)    );
  // itree = 64
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993624,-0.0192879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991984,0.052257) , 
2, 0.0720796, 1, 0, 0.993526,-0.000331373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712683,-0.00927407) , 
2, 0.0946626, 1, 0, 0.9709,-0.00421747) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00850868,-0.0133121) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.13302e-05,-0.0144254) , 
2, 0.118997, 1, 0, 4.48169e-05,-0.0931418) , 
0, 0.0157936, 1, 0, 0.00172434,-0.0921429) , 
0, 0.00235174, 1, 0, 0.505349,-0.0464532)    );
  // itree = 65
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995095,-0.00451363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996582,0.0474516) , 
0, 0.00122809, 1, 0, 0.995624,0.00169671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699754,-0.00642044) , 
2, 0.0948702, 1, 0, 0.972236,-0.00121936) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0067692,-0.0134956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000121908,-0.0143781) , 
2, 0.119266, 1, 0, 8.96831e-05,-0.0906852) , 
0, 0.0157936, 1, 0, 0.00146104,-0.090042) , 
0, 0.00235174, 1, 0, 0.500197,-0.0444094)    );
  // itree = 66
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991867,-0.0233837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998802,0.068133) , 
3, 71.9235, 1, 0, 0.993261,-0.000747785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.693973,-0.00848631) , 
2, 0.0948702, 1, 0, 0.96923,-0.00438604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00483574,-0.0136647) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000826289,-0.0142424) , 
5, 0.00901902, 1, 0, 0.000573272,-0.088418) , 
2, 0.0952032, 1, 0, 0.00144026,-0.0876974) , 
0, 0.00235152, 1, 0, 0.497931,-0.0449574)    );
  // itree = 67
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994413,0.0231938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56391,-0.014723) , 
2, 0.0474156, 1, 0, 0.934111,-0.008803) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98945,0.00550081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834327,0.0197788) , 
2, 0.094128, 1, 0, 0.961841,0.0099572) , 
5, 0.00919293, 1, 0, 0.94444,-0.00181532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143233) , 
2, 0.142862, 1, 0, 0,-0.0861704) , 
0, 0.0175309, 1, 0, 0,-0.086803) , 
0, 0.00470304, 1, 0, 0.506153,-0.0412556)    );
  // itree = 68
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985898,-0.0002119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923533,0.0551491) , 
2, 0.0905878, 1, 0, 0.9827,0.00505413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143073) , 
0, 0.00469775, 1, 0, 0.788602,-0.0127234) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135725,-0.0191616) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142888) , 
0, 0.0265296, 1, 0, 0,-0.0841778) , 
0, 0.0094015, 1, 0, 0.0212254,-0.0932869) , 
2, 0.119033, 1, 0, 0.497207,-0.0433158)    );
  // itree = 69
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995786,-0.00397001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788561,-0.0152666) , 
2, 0.0461716, 1, 0, 0.966456,-0.00757221) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998293,0.0562662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918641,0.0188459) , 
2, 0.09276, 1, 0, 0.982814,0.0107704) , 
5, 0.00964214, 1, 0, 0.971749,-0.00163669) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00639929,-0.0133201) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.03958e-05,-0.014245) , 
2, 0.118989, 1, 0, 4.4565e-05,-0.0817214) , 
0, 0.0157817, 1, 0, 0.00131838,-0.0811852) , 
0, 0.00234977, 1, 0, 0.501435,-0.0401895)    );
  // itree = 70
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992559,-0.00919322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681153,-0.00880008) , 
2, 0.0946626, 1, 0, 0.971281,-0.00435421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974601,0.0318036) , 
3, 97.5279, 1, 0, 0.971603,-0.00204485) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00780385,-0.013056) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.20119e-05,-0.0142118) , 
2, 0.119059, 1, 0, 4.54387e-05,-0.0796139) , 
0, 0.0157617, 1, 0, 0.00168446,-0.0788307) , 
0, 0.00234734, 1, 0, 0.501691,-0.0392466)    );
  // itree = 71
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998296,0.051411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968021,-0.0435911) , 
8, 0.0425803, 1, 0, 0.993538,-0.000512512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707621,-0.00720495) , 
2, 0.0946626, 1, 0, 0.970908,-0.00333541) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0077645,-0.012979) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141905) , 
2, 0.119067, 1, 0, 0,-0.0775883) , 
0, 0.0157936, 1, 0, 0.00154909,-0.0767685) , 
0, 0.00235174, 1, 0, 0.500453,-0.0389744)    );
  // itree = 72
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985196,-0.00247961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916115,0.0477663) , 
2, 0.0950521, 1, 0, 0.981125,0.00503167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141771) , 
0, 0.00469775, 1, 0, 0.768676,-0.0126323) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0218087,-0.0180356) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000175946,-0.0141281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141601) , 
3, 37.9681, 1, 0, 6.60352e-05,-0.0753714) , 
0, 0.0164484, 1, 0, 0.00568166,-0.0865502) , 
2, 0.142814, 1, 0, 0.500675,-0.0385959)    );
  // itree = 73
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995405,0.0115889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978847,-0.042833) , 
0, 0.00212125, 1, 0, 0.994462,0.000440175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703798,-0.00912379) , 
2, 0.0948702, 1, 0, 0.971404,-0.00327462) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00457051,-0.0133531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000867275,-0.0139819) , 
5, 0.00914598, 1, 0, 0.000578351,-0.0736443) , 
2, 0.0953006, 1, 0, 0.00138463,-0.0730206) , 
0, 0.00234767, 1, 0, 0.501259,-0.0370789)    );
  // itree = 74
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995147,0.0277921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962686,-0.0276612) , 
2, 0.0316162, 1, 0, 0.985135,-0.0021708) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602557,-0.0181166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437274,-3.31762e-05) , 
0, 0.00179113, 1, 0, 0.51088,-0.0489781) , 
2, 0.0949358, 1, 0, 0.932075,-0.00740768) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141012) , 
2, 0.143069, 1, 0, 0,-0.0717566) , 
0, 0.0175256, 1, 0, 0,-0.0722476) , 
0, 0.00470304, 1, 0, 0.49298,-0.0379533)    );
  // itree = 75
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987241,-0.0205263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994682,0.101641) , 
3, 85.3346, 1, 0, 0.988248,-0.00132438) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611901,-0.0147225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439438,-0.000481077) , 
0, 0.00178866, 1, 0, 0.520375,-0.0422138) , 
2, 0.0949358, 1, 0, 0.938673,-0.00565695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014105) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000139072,-0.0140467) , 
2, 0.142862, 1, 0, 9.61518e-05,-0.0698115) , 
0, 0.0196366, 1, 0, 7.44931e-05,-0.0702635) , 
0, 0.00470068, 1, 0, 0.502744,-0.0356632)    );
  // itree = 76
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982361,-0.00967812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954729,0.0693354) , 
2, 0.0905878, 1, 0, 0.980961,0.00349703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140629) , 
0, 0.00469775, 1, 0, 0.794374,-0.0103023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.126934,-0.0181479) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000237042,-0.014) , 
0, 0.0265399, 1, 0, 0.000160112,-0.0680786) , 
0, 0.00940608, 1, 0, 0.021116,-0.0761841) , 
2, 0.118997, 1, 0, 0.496062,-0.0357186)    );
  // itree = 77
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984213,-0.0148715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923791,0.0412689) , 
2, 0.0906808, 1, 0, 0.981152,0.00126947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140358) , 
0, 0.00470348, 1, 0, 0.793561,-0.0118312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.137261,-0.0169284) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140199) , 
0, 0.0265414, 1, 0, 0,-0.0664807) , 
0, 0.00940609, 1, 0, 0.0216789,-0.0734006) , 
2, 0.119026, 1, 0, 0.504162,-0.0349152)    );
  // itree = 78
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988195,0.0118516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900738,0.0396373) , 
2, 0.0952148, 1, 0, 0.983191,0.0056209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140083) , 
0, 0.00470348, 1, 0, 0.774123,-0.00948614) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0212606,-0.0181291) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000161948,-0.0139602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139942) , 
3, 37.8629, 1, 0, 6.43979e-05,-0.0644133) , 
0, 0.0164538, 1, 0, 0.0052526,-0.0761145) , 
2, 0.14284, 1, 0, 0.500046,-0.0332369)    );
  // itree = 79
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998584,0.0475455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982191,-0.0272065) , 
2, 0.0310059, 1, 0, 0.99344,-0.000741036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726343,-0.008367) , 
2, 0.0930474, 1, 0, 0.971659,-0.00376839) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00680054,-0.012687) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139688) , 
2, 0.11916, 1, 0, 0,-0.0629382) , 
0, 0.0157936, 1, 0, 0.00135088,-0.062294) , 
0, 0.00235174, 1, 0, 0.493772,-0.0325929)    );
  // itree = 80
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987498,-0.00929129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915582,0.0274343) , 
2, 0.0816127, 1, 0, 0.981209,0.00285841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139603) , 
0, 0.00469044, 1, 0, 0.765989,-0.0114132) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0276937,-0.0166708) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000498547,-0.013837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139448) , 
6, 0.00811772, 1, 0, 0.000193417,-0.0609927) , 
0, 0.0164524, 1, 0, 0.00702585,-0.0699112) , 
2, 0.142831, 1, 0, 0.498929,-0.0319972)    );
  // itree = 81
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998834,0.0596777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973873,-0.0168025) , 
8, 0.0418939, 1, 0, 0.994661,0.00094488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70805,-0.00884431) , 
2, 0.0948702, 1, 0, 0.972666,-0.00239181) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000138179,-0.0139108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000626967,-0.0137935) , 
5, 0.00899963, 1, 0, 0.000463139,-0.0598716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00268537,-0.0133694) , 
3, 88.3297, 1, 0, 0.000989582,-0.0594387) , 
0, 0.00235174, 1, 0, 0.498026,-0.0302578)    );
  // itree = 82
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99311,-0.00977636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879055,0.0223794) , 
0, 0.00216223, 1, 0, 0.986748,-1.16205e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.447568,-0.0121611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644806,-0.00377042) , 
3, 62.1295, 1, 0, 0.536415,-0.0438144) , 
2, 0.0949358, 1, 0, 0.93941,-0.00461607) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139186) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138991) , 
2, 0.142853, 1, 0, 0,-0.0582151) , 
0, 0.0195766, 1, 0, 0,-0.0584944) , 
0, 0.00469775, 1, 0, 0.499639,-0.0298384)    );
  // itree = 83
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98403,-0.0108038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93288,0.0390932) , 
2, 0.0905878, 1, 0, 0.981444,0.00152711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138913) , 
0, 0.00469044, 1, 0, 0.789981,-0.00999779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.125569,-0.0167949) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.87373e-05,-0.0138588) , 
0, 0.0265414, 1, 0, 5.42413e-05,-0.0566963) , 
0, 0.00940608, 1, 0, 0.0204435,-0.0631085) , 
2, 0.119033, 1, 0, 0.500213,-0.0299965)    );
  // itree = 84
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9983,0.0439072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966107,-0.0295882) , 
8, 0.0426388, 1, 0, 0.993297,-0.000661393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706878,-0.00738659) , 
2, 0.0934942, 1, 0, 0.969688,-0.00335053) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000941496,-0.0136475) , 
5, 0.00899935, 1, 0, 0.000616787,-0.055385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00358084,-0.0130396) , 
3, 88.0492, 1, 0, 0.00133193,-0.0546764) , 
0, 0.00235174, 1, 0, 0.50591,-0.0279322)    );
  // itree = 85
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996206,0.0530263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926322,-0.0271607) , 
8, 0.0418939, 1, 0, 0.983892,-0.00187295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553694,-0.0075272) , 
2, 0.0948702, 1, 0, 0.939797,-0.00505606) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138537) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138351) , 
2, 0.119067, 1, 0, 0,-0.0538587) , 
0, 0.0174616, 1, 0, 0,-0.0540889) , 
0, 0.00470108, 1, 0, 0.497507,-0.0281321)    );
  // itree = 86
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987413,-0.00543617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918183,0.0298996) , 
2, 0.0850133, 1, 0, 0.982739,0.0022447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138275) , 
0, 0.00470348, 1, 0, 0.78972,-0.0086464) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1385,-0.016747) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013815) , 
0, 0.0265262, 1, 0, 0,-0.0525135) , 
0, 0.00940151, 1, 0, 0.022222,-0.0588222) , 
2, 0.119026, 1, 0, 0.496923,-0.0277883)    );
  // itree = 87
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98656,0.000884602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985962,0.0551231) , 
7, 0.000133996, 1, 0, 0.986519,0.00089751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526822,-0.00716878) , 
2, 0.0949358, 1, 0, 0.939301,-0.00243445) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013795) , 
2, 0.142927, 1, 0, 0,-0.0511041) , 
0, 0.0196004, 1, 0, 0,-0.0513026) , 
0, 0.00470075, 1, 0, 0.501697,-0.0252013)    );
  // itree = 88
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993546,-0.0134676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.999408,0.0771507) , 
5, 0.00873808, 1, 0, 0.995922,0.00148706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710977,-0.00699859) , 
2, 0.0937047, 1, 0, 0.972282,-0.00129438) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00105757,-0.0135177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137919) , 
6, 0.00541063, 1, 0, 0.000371541,-0.0499135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00343698,-0.0129246) , 
6, 0.0162347, 1, 0, 0.00136396,-0.0491676) , 
0, 0.00235174, 1, 0, 0.506208,-0.0242752)    );
  // itree = 89
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987113,-0.0074402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941264,0.0465607) , 
2, 0.0906808, 1, 0, 0.984771,0.00220532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137693) , 
0, 0.00470348, 1, 0, 0.794489,-0.00772811) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12328,-0.015312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.23531e-05,-0.0137355) , 
0, 0.026597, 1, 0, 5.51953e-05,-0.0485085) , 
0, 0.00940608, 1, 0, 0.0206805,-0.0540509) , 
2, 0.119033, 1, 0, 0.501258,-0.0252819)    );
  // itree = 90
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98562,-0.0442192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995995,0.0129349) , 
3, 23.9752, 1, 0, 0.992508,-0.00189417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713502,-0.00818283) , 
2, 0.0930474, 1, 0, 0.969408,-0.00470179) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000493646,-0.0136357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000625027,-0.0135734) , 
4, 0.0115996, 1, 0, 0.000562634,-0.0473269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0030383,-0.0129599) , 
3, 88.3297, 1, 0, 0.00116855,-0.0468408) , 
0, 0.00235174, 1, 0, 0.499483,-0.0251535)    );
  // itree = 91
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983407,-0.0134293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857189,0.0205784) , 
2, 0.0952148, 1, 0, 0.975733,0.000730927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137328) , 
0, 0.00470348, 1, 0, 0.762251,-0.00964161) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0231621,-0.0167455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137239) , 
3, 62.8993, 1, 0, 0,-0.0459747) , 
0, 0.0164538, 1, 0, 0.00565493,-0.0537865) , 
2, 0.14284, 1, 0, 0.493368,-0.02533)    );
  // itree = 92
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980576,-0.0188046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888688,0.0203708) , 
2, 0.0950521, 1, 0, 0.974998,-0.000591694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013715) , 
0, 0.00470348, 1, 0, 0.762806,-0.0103523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0264227,-0.0159677) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000508647,-0.0135545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013706) , 
3, 37.8433, 1, 0, 0.000202336,-0.0445849) , 
0, 0.0164607, 1, 0, 0.00669746,-0.0511096) , 
2, 0.142814, 1, 0, 0.503099,-0.0243516)    );
  // itree = 93
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986065,0.000885969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928877,0.0280841) , 
2, 0.0849261, 1, 0, 0.982386,0.0025709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137001) , 
0, 0.00469044, 1, 0, 0.788632,-0.00669342) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.127292,-0.0163828) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000502986,-0.0135377) , 
0, 0.0398725, 1, 0, 0.000160796,-0.043546) , 
0, 0.00940215, 1, 0, 0.0207142,-0.0500793) , 
2, 0.119026, 1, 0, 0.496018,-0.0232256)    );
  // itree = 94
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985339,-0.0105153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903452,0.0240903) , 
2, 0.0952148, 1, 0, 0.980615,0.00112252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136818) , 
0, 0.00470348, 1, 0, 0.766057,-0.00855847) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0293216,-0.0160232) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000322113,-0.0135719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136731) , 
3, 37.6201, 1, 0, 0.000130066,-0.042367) , 
0, 0.0163021, 1, 0, 0.00745375,-0.0496907) , 
2, 0.14284, 1, 0, 0.500624,-0.0229505)    );
  // itree = 95
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985603,-0.00944439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99608,0.0713146) , 
5, 0.0104738, 1, 0, 0.987527,-2.26236e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545629,-0.0084838) , 
2, 0.0949358, 1, 0, 0.942859,-0.00358052) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013667) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136588) , 
3, 75.7142, 1, 0, 0,-0.0413996) , 
2, 0.119119, 1, 0, 0,-0.0415767) , 
0, 0.00470068, 1, 0, 0.497478,-0.0215289)    );
  // itree = 96
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992605,-0.0139168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963939,0.0353891) , 
2, 0.0882626, 1, 0, 0.9906,0.00170195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00269314,-0.0129435) , 
0, 0.00235174, 1, 0, 0.765588,-0.00790127) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0257399,-0.0165052) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000520361,-0.0134712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136424) , 
3, 37.877, 1, 0, 0.000197733,-0.0401486) , 
0, 0.0164484, 1, 0, 0.00635336,-0.0475689) , 
2, 0.142814, 1, 0, 0.501576,-0.0216951)    );
  // itree = 97
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986369,-0.0139203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892118,0.0198365) , 
2, 0.0952148, 1, 0, 0.980677,0.000475231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136368) , 
0, 0.00469775, 1, 0, 0.771865,-0.00813547) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0234797,-0.017103) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136282) , 
3, 62.9599, 1, 0, 0,-0.0392995) , 
0, 0.0164606, 1, 0, 0.00576033,-0.047203) , 
2, 0.14284, 1, 0, 0.502878,-0.0218524)    );
  // itree = 98
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989087,-0.0307415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962724,0.0393022) , 
2, 0.0884138, 1, 0, 0.987327,-0.000920554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00279834,-0.0128227) , 
0, 0.00235174, 1, 0, 0.757481,-0.00960071) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.025813,-0.0163363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000340305,-0.013495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136131) , 
3, 37.8825, 1, 0, 0.000130179,-0.0381586) , 
0, 0.0164607, 1, 0, 0.00635985,-0.0446296) , 
2, 0.14284, 1, 0, 0.497275,-0.0217355)    );
  // itree = 99
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985995,0.00380069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944911,0.0336051) , 
2, 0.0849261, 1, 0, 0.983419,0.00273432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136088) , 
0, 0.00469775, 1, 0, 0.789434,-0.00529966) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.122038,-0.0146966) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136002) , 
3, 75.4479, 1, 0, 0,-0.0372844) , 
0, 0.00940609, 1, 0, 0.0203212,-0.0421652) , 
2, 0.119033, 1, 0, 0.494451,-0.0194389)    );
  // itree = 100
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983904,-0.016619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904561,0.0126725) , 
2, 0.0814732, 1, 0, 0.976954,-0.000330293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135944) , 
0, 0.00469775, 1, 0, 0.764763,-0.00828832) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0279685,-0.0153101) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135863) , 
3, 63.1492, 1, 0, 0,-0.0363381) , 
0, 0.0164606, 1, 0, 0.00683457,-0.0417223) , 
2, 0.142805, 1, 0, 0.502159,-0.0198724)    );
  // itree = 101
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996049,0.0636701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836979,-0.0188265) , 
8, 0.0542703, 1, 0, 0.985267,0.00275588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135812) , 
0, 0.00470348, 1, 0, 0.789815,-0.00494034) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135411,-0.0147431) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135732) , 
3, 75.7025, 1, 0, 0,-0.0353693) , 
0, 0.00938934, 1, 0, 0.020221,-0.0395176) , 
2, 0.119033, 1, 0, 0.497714,-0.0180642)    );
  // itree = 102
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974017,-0.0211103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989659,0.0349741) , 
5, 0.00700225, 1, 0, 0.984027,0.00120204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135682) , 
0, 0.00470348, 1, 0, 0.787596,-0.00604838) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.129479,-0.0159092) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135594) , 
0, 0.0265293, 1, 0, 0,-0.0344503) , 
0, 0.00940136, 1, 0, 0.0211543,-0.040431) , 
2, 0.119033, 1, 0, 0.496838,-0.0190918)    );
  // itree = 103
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98759,-0.00315453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941491,0.0216244) , 
2, 0.0849261, 1, 0, 0.984547,0.00102462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135559) , 
0, 0.00465931, 1, 0, 0.799568,-0.00559997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.133744,-0.0141074) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.30341e-05,-0.0135129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135476) , 
3, 75.7145, 1, 0, 5.66909e-05,-0.0335019) , 
0, 0.00940609, 1, 0, 0.0215518,-0.0377923) , 
2, 0.118997, 1, 0, 0.512612,-0.0174735)    );
  // itree = 104
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985384,-0.0110376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8646,0.0147928) , 
2, 0.0950143, 1, 0, 0.977213,0.000551824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135408) , 
0, 0.00469775, 1, 0, 0.744012,-0.0074929) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00386106,-0.0164288) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013535) , 
5, 0.0180122, 1, 0, 0,-0.0327259) , 
0, 0.0211625, 1, 0, 0.00117713,-0.0400034) , 
2, 0.166646, 1, 0, 0.503479,-0.0180199)    );
  // itree = 105
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97797,-0.00461701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988693,0.0769896) , 
6, 0.0232015, 1, 0, 0.978816,0.000553083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135309) , 
0, 0.00470348, 1, 0, 0.772189,-0.00641438) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0270663,-0.0157394) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135231) , 
5, 0.0182079, 1, 0, 0,-0.0318571) , 
0, 0.0164338, 1, 0, 0.00661688,-0.037862) , 
2, 0.14284, 1, 0, 0.503533,-0.0174501)    );
  // itree = 106
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984047,-0.0190815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937812,0.0144217) , 
2, 0.0849261, 1, 0, 0.98098,-0.00135814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135192) , 
0, 0.00470348, 1, 0, 0.795131,-0.00709087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.143037,-0.0142034) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135114) , 
0, 0.0265296, 1, 0, 0,-0.0309739) , 
0, 0.0094015, 1, 0, 0.0217802,-0.0349753) , 
2, 0.119033, 1, 0, 0.4994,-0.0177539)    );
  // itree = 107
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97679,-0.00223154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997259,0.113241) , 
7, 0.000133937, 1, 0, 0.978482,0.000998112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013507) , 
0, 0.00470348, 1, 0, 0.760823,-0.00606321) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0262378,-0.0163931) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135003) , 
5, 0.0157225, 1, 0, 0,-0.0302376) , 
0, 0.0164538, 1, 0, 0.00645193,-0.0367873) , 
2, 0.142796, 1, 0, 0.502021,-0.0166037)    );
  // itree = 108
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977255,-0.00654555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968121,0.0488251) , 
3, 106.946, 1, 0, 0.97661,-0.000121415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134952) , 
0, 0.00470348, 1, 0, 0.739711,-0.00734366) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00339721,-0.0169841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134896) , 
3, 50.3597, 1, 0, 0,-0.029472) , 
0, 0.0211541, 1, 0, 0.00110601,-0.0369531) , 
2, 0.166646, 1, 0, 0.497741,-0.0170438)    );
  // itree = 109
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984775,-0.00586727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95479,0.0299294) , 
2, 0.0905878, 1, 0, 0.983254,0.000488984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134865) , 
0, 0.00469775, 1, 0, 0.791805,-0.00530524) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.134725,-0.0142006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134787) , 
0, 0.0265277, 1, 0, 0,-0.0285818) , 
0, 0.00940216, 1, 0, 0.0208824,-0.0329103) , 
2, 0.119026, 1, 0, 0.498435,-0.0158102)    );
  // itree = 110
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984353,-0.0033686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880255,0.0161701) , 
2, 0.0947963, 1, 0, 0.97751,0.0013152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134737) , 
0, 0.00470348, 1, 0, 0.744326,-0.00576066) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00500227,-0.0158165) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000152288,-0.0133957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134684) , 
3, 50.3277, 1, 0, 7.50124e-05,-0.027869) , 
0, 0.0188418, 1, 0, 0.00149503,-0.0335695) , 
2, 0.166595, 1, 0, 0.502348,-0.0148194)    );
  // itree = 111
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989901,-0.00777134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93442,0.0168784) , 
0, 0.00178866, 1, 0, 0.979179,0.000901725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134647) , 
0, 0.00469775, 1, 0, 0.76909,-0.00523559) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.024592,-0.0151635) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134585) , 
0, 0.0321334, 1, 0, 0,-0.0272056) , 
0, 0.0164538, 1, 0, 0.00615385,-0.032067) , 
2, 0.14284, 1, 0, 0.508813,-0.0143892)    );
  // itree = 112
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992493,-0.0033223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962606,0.0294972) , 
2, 0.0952148, 1, 0, 0.990847,0.00121475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00243868,-0.0125748) , 
0, 0.00235174, 1, 0, 0.764617,-0.00526258) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0275177,-0.0144721) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134488) , 
0, 0.0321247, 1, 0, 0,-0.026501) , 
0, 0.0164524, 1, 0, 0.00692467,-0.0307789) , 
2, 0.142831, 1, 0, 0.504744,-0.0140142)    );
  // itree = 113
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986779,0.00294041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485658,-0.00846419) , 
2, 0.0949358, 1, 0, 0.94067,-0.00199396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893909,0.0237589) , 
3, 110.976, 1, 0, 0.937715,-0.000538954) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134462) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134391) , 
0, 0.0238948, 1, 0, 0,-0.0255227) , 
2, 0.142883, 1, 0, 0,-0.0257746) , 
0, 0.00470304, 1, 0, 0.502137,-0.0122612)    );
  // itree = 114
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992224,-0.0146269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963304,0.0264659) , 
2, 0.0791713, 1, 0, 0.989535,0.000884463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00438758,-0.0120913) , 
0, 0.00233794, 1, 0, 0.737559,-0.00581026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00255241,-0.0169509) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000170182,-0.0133409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134299) , 
6, 0.00927916, 1, 0, 7.9276e-05,-0.0251081) , 
0, 0.0211731, 1, 0, 0.000865287,-0.0329267) , 
2, 0.166646, 1, 0, 0.501468,-0.0145004)    );
  // itree = 115
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979856,-0.0128604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981744,0.0345128) , 
3, 73.144, 1, 0, 0.980236,-0.00102592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134289) , 
0, 0.00469044, 1, 0, 0.792031,-0.00564968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.130916,-0.0142225) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000624656,-0.0130816) , 
2, 0.372859, 1, 0, 0.000211523,-0.0241725) , 
0, 0.00940136, 1, 0, 0.0200499,-0.0288919) , 
2, 0.118997, 1, 0, 0.495525,-0.0145767)    );
  // itree = 116
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986627,-0.0095778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874498,0.0159204) , 
2, 0.0950056, 1, 0, 0.979626,0.000305182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134179) , 
0, 0.00469775, 1, 0, 0.743565,-0.00562604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00554817,-0.014953) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000164963,-0.0133215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134124) , 
6, 0.0104552, 1, 0, 8.06339e-05,-0.0238297) , 
0, 0.0211942, 1, 0, 0.00181624,-0.0286125) , 
2, 0.166524, 1, 0, 0.50809,-0.0129233)    );
  // itree = 117
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991209,0.102586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985068,0.00539724) , 
5, 0.00324887, 1, 0, 0.985387,0.00166718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134109) , 
0, 0.00468623, 1, 0, 0.799397,-0.00314075) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.138657,-0.0137766) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134041) , 
0, 0.0265262, 1, 0, 0,-0.0231324) , 
0, 0.0094015, 1, 0, 0.0211676,-0.0273408) , 
2, 0.119033, 1, 0, 0.502871,-0.0123616)    );
  // itree = 118
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987873,-0.00510636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977878,0.053033) , 
2, 0.0736026, 1, 0, 0.986942,0.00155036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134032) , 
0, 0.00469775, 1, 0, 0.790751,-0.0033777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.132881,-0.0123402) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000157134,-0.0133048) , 
0, 0.0265277, 1, 0, 0.000106709,-0.0224295) , 
0, 0.00940215, 1, 0, 0.0211854,-0.0250013) , 
2, 0.119011, 1, 0, 0.497396,-0.0116205)    );
  // itree = 119
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97734,-0.0154379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972833,0.0256299) , 
3, 84.5768, 1, 0, 0.976664,-0.00211345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133936) , 
0, 0.00470348, 1, 0, 0.765573,-0.00652932) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0238864,-0.0150527) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000513853,-0.0130809) , 
2, 0.363788, 1, 0, 0.00019939,-0.0218653) , 
0, 0.0164314, 1, 0, 0.00620243,-0.0262008) , 
2, 0.14284, 1, 0, 0.499572,-0.0134201)    );
  // itree = 120
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972768,-0.012969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985816,0.0456572) , 
5, 0.0103374, 1, 0, 0.975854,-0.000297132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133851) , 
0, 0.00469775, 1, 0, 0.742712,-0.0054623) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00527356,-0.0144164) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000504108,-0.013072) , 
2, 0.357029, 1, 0, 0.000218794,-0.0212895) , 
0, 0.018813, 1, 0, 0.00166574,-0.0254209) , 
2, 0.166595, 1, 0, 0.498205,-0.0120476)    );
  // itree = 121
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998273,0.0497539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968217,-0.0132401) , 
8, 0.0426388, 1, 0, 0.992544,0.000556555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0035003,-0.0119361) , 
0, 0.00234522, 1, 0, 0.788003,-0.00400567) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.127238,-0.0121972) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133724) , 
0, 0.0264769, 1, 0, 0,-0.0208112) , 
0, 0.0093796, 1, 0, 0.0205936,-0.0237521) , 
2, 0.119011, 1, 0, 0.497324,-0.0114852)    );
  // itree = 122
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993328,0.0065994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961302,-0.0360713) , 
0, 0.00212125, 1, 0, 0.991227,-0.000511481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0022976,-0.0124838) , 
0, 0.00234888, 1, 0, 0.78883,-0.0049337) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.122458,-0.0138457) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133651) , 
0, 0.0266506, 1, 0, 0,-0.0203025) , 
0, 0.00940215, 1, 0, 0.0202894,-0.0244446) , 
2, 0.119026, 1, 0, 0.495407,-0.0123828)    );
  // itree = 123
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988846,-0.0039081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0962371) , 
7, 0.000134098, 1, 0, 0.989757,0.000605988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00299339,-0.0119977) , 
0, 0.00234888, 1, 0, 0.743705,-0.00459934) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00440616,-0.0141858) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000143443,-0.0132628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013358) , 
5, 0.0202598, 1, 0, 7.73227e-05,-0.0198434) , 
0, 0.0211954, 1, 0, 0.001469,-0.0235309) , 
2, 0.166646, 1, 0, 0.499418,-0.0108302)    );
  // itree = 124
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97163,-0.0105846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982801,0.0395928) , 
7, 0.000119883, 1, 0, 0.97336,-0.000887178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133567) , 
0, 0.00470348, 1, 0, 0.736584,-0.0054976) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00396579,-0.0145723) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000165325,-0.0132384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133509) , 
5, 0.01805, 1, 0, 7.96111e-05,-0.0193252) , 
0, 0.0211556, 1, 0, 0.00134316,-0.0231211) , 
2, 0.166646, 1, 0, 0.501161,-0.0111406)    );
  // itree = 125
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999095,0.0527292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981004,-0.0199564) , 
0, 0.000334934, 1, 0, 0.990154,-0.00169917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00343678,-0.0116609) , 
0, 0.00235174, 1, 0, 0.792247,-0.00520039) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12821,-0.0131873) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000249336,-0.0131642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133431) , 
4, 0.0115992, 1, 0, 0.000106747,-0.0186375) , 
0, 0.00940609, 1, 0, 0.0204319,-0.0219239) , 
2, 0.119033, 1, 0, 0.498626,-0.0115625)    );
  // itree = 126
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994426,0.024499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962582,-0.0163873) , 
2, 0.0317383, 1, 0, 0.984451,-0.0011217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133461) , 
0, 0.00468623, 1, 0, 0.81924,-0.00413288) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674036,-0.0126241) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000470517,-0.0132897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000684807,-0.0128379) , 
2, 0.211038, 1, 0, 0.000623917,-0.0181721) , 
0, 0.00235174, 1, 0, 0.0672606,-0.0210854) , 
2, 0.0952207, 1, 0, 0.497752,-0.0113805)    );
  // itree = 127
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991672,-0.0182368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990732,0.0482852) , 
2, 0.0790202, 1, 0, 0.991601,-0.000473037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00256837,-0.012151) , 
0, 0.00235174, 1, 0, 0.779089,-0.00453044) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.134105,-0.0122125) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000150163,-0.0132215) , 
0, 0.024638, 1, 0, 0.000105661,-0.0176993) , 
0, 0.00940608, 1, 0, 0.021228,-0.0207887) , 
2, 0.119026, 1, 0, 0.489036,-0.0107529)    );
  // itree = 128
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97835,-0.012207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98403,0.0313161) , 
3, 60.9534, 1, 0, 0.980026,4.84274e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133323) , 
0, 0.00468813, 1, 0, 0.733201,-0.00449511) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00475675,-0.0140223) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000169036,-0.0131979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133247) , 
6, 0.00929507, 1, 0, 7.76015e-05,-0.0174224) , 
0, 0.0211556, 1, 0, 0.00158037,-0.0206979) , 
2, 0.166646, 1, 0, 0.495877,-0.00975098)    );
  // itree = 129
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99802,0.0538021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915442,-0.0280818) , 
8, 0.0542703, 1, 0, 0.992811,0.000774386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00364019,-0.0115171) , 
0, 0.00235174, 1, 0, 0.795292,-0.00298408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.167255,-0.0131763) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133188) , 
0, 0.023174, 1, 0, 0,-0.0168265) , 
0, 0.00705102, 1, 0, 0.0209692,-0.0204357) , 
2, 0.118997, 1, 0, 0.4916,-0.00982865)    );
  // itree = 130
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976191,-0.00608277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980481,0.0245222) , 
3, 60.4137, 1, 0, 0.977454,0.000806518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133191) , 
0, 0.00470348, 1, 0, 0.744824,-0.00344979) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00322212,-0.0146879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00035473,-0.0130328) , 
2, 0.357012, 1, 0, 0.000159801,-0.0164482) , 
0, 0.0211538, 1, 0, 0.00117505,-0.0203386) , 
2, 0.166636, 1, 0, 0.505332,-0.00888882)    );
  // itree = 131
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981193,-0.0160216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988827,0.0299107) , 
3, 23.9665, 1, 0, 0.986288,0.00112639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545227,-0.00501449) , 
2, 0.0946626, 1, 0, 0.940499,-0.000307989) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132945) , 
7, -3.60429e-05, 1, 0, 0,-0.01589) , 
2, 0.142892, 1, 0, 0,-0.0161402) , 
0, 0.00470348, 1, 0, 0.500952,-0.00770728)    );
  // itree = 132
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977181,-0.00658229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982176,0.0912681) , 
3, 108.74, 1, 0, 0.977496,-0.000212188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133072) , 
0, 0.00469775, 1, 0, 0.745868,-0.00399931) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00371215,-0.0136529) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000349788,-0.0130099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133012) , 
4, 0.0139334, 1, 0, 0.000154159,-0.0156088) , 
0, 0.0211644, 1, 0, 0.00123452,-0.0186363) , 
2, 0.166636, 1, 0, 0.50372,-0.00875912)    );
  // itree = 133
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97232,-0.0119416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982023,0.0272162) , 
5, 0.00893359, 1, 0, 0.976335,0.000364542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133018) , 
0, 0.00469535, 1, 0, 0.741266,-0.00352512) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00355768,-0.0151823) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000692897,-0.0127048) , 
2, 0.357029, 1, 0, 0.000308744,-0.0150521) , 
0, 0.0211644, 1, 0, 0.00132567,-0.0185068) , 
2, 0.166646, 1, 0, 0.499229,-0.00842568)    );
  // itree = 134
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992738,-0.0114281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975606,0.0313166) , 
2, 0.0952148, 1, 0, 0.991775,-2.76153e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00234269,-0.0119316) , 
0, 0.00235174, 1, 0, 0.76708,-0.00365411) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000865687,-0.0142663) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00345425,-0.0139177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0166762,-0.00928206) , 
3, 62.8996, 1, 0, 0.00904937,-0.0140013) , 
5, 0.011391, 1, 0, 0.00576223,-0.0170667) , 
2, 0.142831, 1, 0, 0.501574,-0.00833169)    );
  // itree = 135
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989707,-0.00711536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966161,0.0171526) , 
2, 0.0634766, 1, 0, 0.98754,4.06903e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132935) , 
0, 0.00467342, 1, 0, 0.819294,-0.00255268) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704843,-0.0109728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000934754,-0.0127837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000312945,-0.0129962) , 
2, 0.210981, 1, 0, 0.000491158,-0.0144112) , 
0, 0.00235175, 1, 0, 0.0659372,-0.0161398) , 
2, 0.0952265, 1, 0, 0.499057,-0.0083283)    );
  // itree = 136
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995996,0.00168677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296143,-0.0139988) , 
0, 0.00206425, 1, 0, 0.922219,-0.00127708) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.374633,-0.0305526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436418,-0.00536633) , 
5, 0.011813, 1, 0, 0.40873,-0.0118948) , 
4, 0.0115312, 1, 0, 0.852179,-0.00272535) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0380883,-0.0154649) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.469584,-0.00149041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00313638,-0.0133625) , 
2, 0.153068, 1, 0, 0.158372,-0.0116833) , 
5, 0.00911023, 1, 0, 0.121725,-0.0150555) , 
2, 0.0714198, 1, 0, 0.498656,-0.00869285)    );
  // itree = 137
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975831,-0.0113668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987577,0.0455341) , 
3, 85.3365, 1, 0, 0.977515,-0.00103214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132822) , 
0, 0.00469775, 1, 0, 0.746764,-0.00417392) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00592313,-0.0139341) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013276) , 
5, 0.0157769, 1, 0, 0,-0.0138269) , 
0, 0.0188144, 1, 0, 0.00170522,-0.0171229) , 
2, 0.166606, 1, 0, 0.504865,-0.00837809)    );
  // itree = 138
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99583,0.0118833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926229,-0.0292185) , 
8, 0.0542703, 1, 0, 0.99149,-0.00124704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00364697,-0.0109584) , 
0, 0.00235174, 1, 0, 0.79582,-0.00373143) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121068,-0.0114531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.10679e-05,-0.0131928) , 
0, 0.0265399, 1, 0, 5.42608e-05,-0.0133076) , 
0, 0.00940609, 1, 0, 0.0186843,-0.0157949) , 
2, 0.118997, 1, 0, 0.502814,-0.00827976)    );
  // itree = 139
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975703,-0.00549907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985277,0.0483967) , 
7, 0.000126778, 1, 0, 0.97686,-7.42062e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132736) , 
0, 0.00468623, 1, 0, 0.74611,-0.00328665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00406843,-0.0137968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132668) , 
3, 50.4454, 1, 0, 0,-0.0131538) , 
0, 0.0211731, 1, 0, 0.0012831,-0.0159947) , 
2, 0.166616, 1, 0, 0.504945,-0.00740137)    );
  // itree = 140
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979085,-0.00200626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972659,0.0331435) , 
3, 116.958, 1, 0, 0.978766,0.000329892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132683) , 
0, 0.00470348, 1, 0, 0.744497,-0.00293403) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00413488,-0.0145528) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000139977,-0.0131174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132621) , 
5, 0.0202645, 1, 0, 7.87373e-05,-0.0127356) , 
0, 0.021173, 1, 0, 0.00138692,-0.0170114) , 
2, 0.166606, 1, 0, 0.501725,-0.00753309)    );
  // itree = 141
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985301,0.0125348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978529,-0.018484) , 
4, 0.010365, 1, 0, 0.983845,0.00100683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013265) , 
0, 0.00468623, 1, 0, 0.791644,-0.0017422) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0150769,-0.0151868) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0806417,-0.000828003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000352654,-0.0138934) , 
2, 0.245941, 1, 0, 0.0287297,-0.00944495) , 
5, 0.0113809, 1, 0, 0.0231284,-0.0142132) , 
2, 0.119004, 1, 0, 0.496326,-0.00653445)    );
  // itree = 142
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921276,0.0105462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945505,-0.0380994) , 
4, 0.00892368, 1, 0, 0.926252,0.000519413) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513527,-0.0238653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936633,0.0477944) , 
6, 0.0231952, 1, 0, 0.614869,-0.00735739) , 
4, 0.0104132, 1, 0, 0.853933,-0.00130998) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.104254,-0.0143682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.1798e-05,-0.0131982) , 
0, 0.0141105, 1, 0, 0.0173634,-0.014114) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937975,0.0271239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313637,-0.0074497) , 
2, 0.112286, 1, 0, 0.65646,-0.00239482) , 
7, 8.7226e-05, 1, 0, 0.121041,-0.0122128) , 
2, 0.0714198, 1, 0, 0.503327,-0.00652576)    );
  // itree = 143
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9931,0.00193244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968182,-0.15448) , 
0, 0.00212125, 1, 0, 0.991477,-0.00127797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00389378,-0.010877) , 
0, 0.00234888, 1, 0, 0.794255,-0.00356724) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.142325,-0.0109375) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.23531e-05,-0.0131595) , 
0, 0.0265399, 1, 0, 5.57262e-05,-0.0117148) , 
0, 0.00940609, 1, 0, 0.0224452,-0.01395) , 
2, 0.119033, 1, 0, 0.507426,-0.00742579)    );
  // itree = 144
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989599,-0.00666937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934574,0.0238151) , 
0, 0.00177887, 1, 0, 0.978622,0.00133762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132521) , 
0, 0.00470348, 1, 0, 0.743279,-0.00189061) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00497843,-0.0134894) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000148534,-0.0130746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132451) , 
3, 50.3597, 1, 0, 7.36194e-05,-0.0114718) , 
0, 0.0188386, 1, 0, 0.00150982,-0.0146719) , 
2, 0.166616, 1, 0, 0.497832,-0.00611988)    );
  // itree = 145
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972925,0.0493337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735109,-0.00865012) , 
2, 0.0271694, 1, 0, 0.924367,0.00158589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.773788,-0.0210272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928254,0.0361577) , 
6, 0.0231952, 1, 0, 0.791259,-0.0040015) , 
4, 0.00811871, 1, 0, 0.858644,-0.00117294) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.534267,-0.0169455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75098,-0.000231602) , 
3, 46.5975, 1, 0, 0.644099,-0.0222615) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.93255e-05,-0.0131673) , 
2, 0.173413, 1, 0, 4.45254e-05,-0.0111616) , 
0, 0.00470108, 1, 0, 0.122262,-0.0132679) , 
2, 0.0714024, 1, 0, 0.503905,-0.00699948)    );
  // itree = 146
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989078,0.0117352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974641,-0.0372557) , 
4, 0.00971781, 1, 0, 0.985114,-0.000411428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132464) , 
0, 0.00465931, 1, 0, 0.818636,-0.00229372) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.714282,-0.00901726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000241056,-0.0130452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00233139,-0.0106376) , 
3, 88.2794, 1, 0, 0.000766812,-0.0106375) , 
0, 0.00235054, 1, 0, 0.0678384,-0.0118918) , 
2, 0.0952032, 1, 0, 0.500465,-0.00636116)    );
  // itree = 147
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880086,0.0129409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176258,-0.0155071) , 
2, 0.0101929, 1, 0, 0.548732,-0.00488361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978619,0.000153647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903919,0.0196296) , 
2, 0.054362, 1, 0, 0.97093,0.000741297) , 
7, 2.23528e-05, 1, 0, 0.863798,-0.000686003) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.104002,-0.0159923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000101874,-0.0131097) , 
0, 0.014102, 1, 0, 0.0172289,-0.013165) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951885,0.0276035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303288,-0.00650197) , 
2, 0.112184, 1, 0, 0.643678,-0.00133586) , 
7, 8.7226e-05, 1, 0, 0.122206,-0.0111827) , 
2, 0.0713981, 1, 0, 0.502244,-0.00580356)    );
  // itree = 148
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.49081,-0.0274835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930215,-0.000845218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787305,-0.0250697) , 
4, 0.00934785, 1, 0, 0.881568,-0.0021317) , 
6, 0.0058946, 1, 0, 0.851352,-0.00320281) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622971,-0.0138504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769608,0.00488641) , 
3, 74.4897, 1, 0, 0.67075,-0.0215373) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132268) , 
2, 0.173607, 1, 0, 0,-0.0103766) , 
0, 0.00470304, 1, 0, 0.123279,-0.0124278) , 
2, 0.0713937, 1, 0, 0.503702,-0.0076077)    );
  // itree = 149
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974034,-0.0148041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983252,0.0262278) , 
5, 0.0102076, 1, 0, 0.976366,-0.00123091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132329) , 
0, 0.00468813, 1, 0, 0.740822,-0.00349407) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00535108,-0.0131623) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000128294,-0.0130582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132268) , 
5, 0.0202525, 1, 0, 7.34399e-05,-0.0100705) , 
0, 0.0188222, 1, 0, 0.00157596,-0.0127392) , 
2, 0.166585, 1, 0, 0.499346,-0.00651401)    );
  // itree = 150
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977324,-0.00672537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984266,0.0456724) , 
5, 0.0109715, 1, 0, 0.978415,0.000458664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132298) , 
0, 0.00470348, 1, 0, 0.738735,-0.00219718) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00362854,-0.0129491) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00015738,-0.0130128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132233) , 
3, 50.3597, 1, 0, 7.80438e-05,-0.00983568) , 
0, 0.0211644, 1, 0, 0.00121846,-0.0120367) , 
2, 0.166616, 1, 0, 0.498629,-0.00540056)    );
  // itree = 151
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990386,-0.00885122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992909,0.0329891) , 
0, 0.00167467, 1, 0, 0.990949,0.000596371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00314954,-0.0107282) , 
0, 0.00234767, 1, 0, 0.742811,-0.0020621) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00378319,-0.0135201) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.01322) , 
5, 0.017956, 1, 0, 0,-0.00966177) , 
0, 0.0211731, 1, 0, 0.00109909,-0.0119438) , 
2, 0.166646, 1, 0, 0.499683,-0.00530125)    );
  // itree = 152
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974798,-0.017926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985066,0.0136507) , 
5, 0.00766828, 1, 0, 0.980671,-0.000503172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132233) , 
0, 0.00470348, 1, 0, 0.770311,-0.00251778) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0279949,-0.0129076) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132167) , 
0, 0.0321372, 1, 0, 0,-0.00938791) , 
0, 0.0164538, 1, 0, 0.00680054,-0.0123777) , 
2, 0.14284, 1, 0, 0.501436,-0.00599)    );
  // itree = 153
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992456,-0.0131736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984934,0.0263878) , 
2, 0.0792643, 1, 0, 0.991876,-0.00049054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00291901,-0.0106968) , 
0, 0.00234888, 1, 0, 0.785624,-0.00241011) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.133356,-0.00981994) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132135) , 
0, 0.0265259, 1, 0, 0,-0.00908392) , 
0, 0.00940136, 1, 0, 0.0210352,-0.0109547) , 
2, 0.119033, 1, 0, 0.491592,-0.00569604)    );
  // itree = 154
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805238,-0.0121325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966271,0.0216301) , 
7, 4.51307e-05, 1, 0, 0.894578,-0.000236376) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.581809,-0.0281626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502399,-0.00742054) , 
3, 62.2805, 1, 0, 0.554243,-0.00865683) , 
4, 0.0104131, 1, 0, 0.792958,-0.00275064) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135279,-0.0107589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132103) , 
0, 0.0246364, 1, 0, 0,-0.00884404) , 
0, 0.00940609, 1, 0, 0.0222736,-0.0114409) , 
2, 0.119033, 1, 0, 0.502047,-0.00603095)    );
  // itree = 155
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939902,0.0575846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907409,-0.0122197) , 
5, 0.00443285, 1, 0, 0.913271,0.000156416) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.188215,-0.0164864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752286,-0.00180517) , 
6, 0.0150872, 1, 0, 0.555423,-0.00671429) , 
2, 0.0317267, 1, 0, 0.747598,-0.00302451) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0025239,-0.0138061) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000520961,-0.0124192) , 
2, 0.357003, 1, 0, 0.000231576,-0.00846651) , 
0, 0.0211624, 1, 0, 0.000952486,-0.0114801) , 
2, 0.166606, 1, 0, 0.502913,-0.00579551)    );
  // itree = 156
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978954,0.0241127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838147,-0.0152778) , 
2, 0.0204032, 1, 0, 0.928594,-0.00135044) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761338,-0.072374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690052,-0.0114581) , 
2, 0.0171422, 1, 0, 0.710574,-0.0085924) , 
4, 0.00927724, 1, 0, 0.849433,-0.00397993) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936726,0.0224182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474436,-0.0146902) , 
0, 0.000447603, 1, 0, 0.637636,-0.0197362) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.76896e-05,-0.0131098) , 
2, 0.173806, 1, 0, 4.34217e-05,-0.00839306) , 
0, 0.00470108, 1, 0, 0.120228,-0.0105312) , 
2, 0.0714155, 1, 0, 0.495373,-0.00716085)    );
  // itree = 157
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985136,-0.0144838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910504,0.0120838) , 
2, 0.0791713, 1, 0, 0.977864,-0.000595963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132078) , 
0, 0.00468623, 1, 0, 0.744993,-0.00251966) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00291019,-0.0136036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132012) , 
5, 0.0179603, 1, 0, 0,-0.00826053) , 
0, 0.0211538, 1, 0, 0.000950483,-0.0107694) , 
2, 0.166646, 1, 0, 0.50167,-0.00521757)    );
  // itree = 158
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982445,-0.00628597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997463,0.120732) , 
3, 97.5269, 1, 0, 0.983796,-0.000430435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132063) , 
0, 0.00470348, 1, 0, 0.785231,-0.00207001) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0499521,-0.013288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.45725e-05,-0.0130593) , 
0, 0.0164606, 1, 0, 0.0143644,-0.0104982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0376508,-0.00600176) , 
3, 88.3266, 1, 0, 0.0201662,-0.00902355) , 
2, 0.119033, 1, 0, 0.496689,-0.00469251)    );
  // itree = 159
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941748,-0.00136472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772855,-0.0320148) , 
4, 0.0104055, 1, 0, 0.929683,-0.00291116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993801,0.016668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929642,0.0296588) , 
2, 0.0652128, 1, 0, 0.969327,0.00877879) , 
5, 0.0108271, 1, 0, 0.936332,-0.000950355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013202) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.30341e-05,-0.0130576) , 
0, 0.023853, 1, 0, 5.6436e-05,-0.00763925) , 
2, 0.166646, 1, 0, 3.67482e-05,-0.00785743) , 
0, 0.00470108, 1, 0, 0.498403,-0.00418098)    );
  // itree = 160
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853578,-0.00678824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410261,-0.0190414) , 
4, 0.0104252, 1, 0, 0.733179,-0.00404349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848472,0.0397675) , 
6, 0.023195, 1, 0, 0.741409,-0.00298999) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131934) , 
5, 0.0167752, 1, 0, 0,-0.0076515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00335399,-0.0126268) , 
7, -2.84106e-05, 1, 0, 0.00111655,-0.00950333) , 
2, 0.166616, 1, 0, 0.501705,-0.00509898)    );
  // itree = 161
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975748,-0.00517743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982826,0.0486627) , 
7, 0.000119737, 1, 0, 0.976859,0.000348927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131973) , 
0, 0.00469044, 1, 0, 0.739203,-0.00165086) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00152908,-0.010708) , 
2, 0.325335, 1, 0, 0.000805676,-0.00733093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00462994,-0.012904) , 
6, 0.0173834, 1, 0, 0.00192021,-0.00928853) , 
2, 0.166616, 1, 0, 0.495591,-0.00417449)    );
  // itree = 162
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934448,0.0254371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887351,-0.0126293) , 
3, 71.8993, 1, 0, 0.925063,0.00202016) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736957,-0.0358657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700138,-0.000147577) , 
2, 0.0544239, 1, 0, 0.730128,-0.00598426) , 
4, 0.00925721, 1, 0, 0.856186,-0.000808076) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0347923,-0.0140384) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.340906,-0.00304895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000979744,-0.0133459) , 
2, 0.234628, 1, 0, 0.163378,-0.00618888) , 
5, 0.0091083, 1, 0, 0.125401,-0.00824822) , 
2, 0.0714155, 1, 0, 0.50346,-0.00439918)    );
  // itree = 163
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983753,-0.00359444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970851,0.0225364) , 
0, 0.00135872, 1, 0, 0.980196,0.00106002) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00824982,-0.0152125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000534517,-0.0125203) , 
2, 0.238418, 1, 0, 0.00437953,-0.010106) , 
0, 0.00204279, 1, 0, 0.662053,-0.00258039) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884071,-0.0461751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206004,-0.0083108) , 
0, 0.00190351, 1, 0, 0.3417,-0.0140379) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00977626,-0.01506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848658,0.0182886) , 
6, 0.0231936, 1, 0, 0.190245,-0.00516695) , 
5, 0.0115948, 1, 0, 0.262213,-0.00938221) , 
4, 0.0104397, 1, 0, 0.497151,-0.0053856)    );
  // itree = 164
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984139,0.00819619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974889,-0.0257734) , 
4, 0.0104692, 1, 0, 0.9823,0.000200061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131924) , 
0, 0.00469775, 1, 0, 0.798844,-0.00122373) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.138048,-0.0101969) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000487784,-0.0122467) , 
2, 0.372925, 1, 0, 0.00016114,-0.00674259) , 
0, 0.00940136, 1, 0, 0.0215169,-0.00867148) , 
2, 0.119033, 1, 0, 0.50361,-0.00405244)    );
  // itree = 165
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986999,0.00431307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393933,-0.0104553) , 
2, 0.0948312, 1, 0, 0.943454,-0.00102432) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976773,0.0106514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953907,0.027043) , 
0, 0.00156661, 1, 0, 0.964838,0.00975945) , 
7, 0.000126909, 1, 0, 0.945961,0.000240278) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131877) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013181) , 
0, 0.0238415, 1, 0, 0,-0.00661979) , 
2, 0.166718, 1, 0, 0,-0.0068046) , 
0, 0.00470108, 1, 0, 0.497138,-0.00310225)    );
  // itree = 166
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974649,-0.00399754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937683,0.0262297) , 
3, 109.717, 1, 0, 0.97226,-8.41548e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013185) , 
0, 0.00469775, 1, 0, 0.733633,-0.00176685) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013179) , 
3, 50.3597, 1, 0, 0,-0.00657609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00281757,-0.0133218) , 
7, -3.13146e-05, 1, 0, 0.000897175,-0.00876782) , 
2, 0.190453, 1, 0, 0.505027,-0.00395108)    );
  // itree = 167
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965685,-0.00176649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95848,0.0549612) , 
3, 109.718, 1, 0, 0.965224,0.000773657) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131771) , 
4, 0.0115941, 1, 0, 0,-0.00669634) , 
0, 0.00469537, 1, 0, 0.676058,-0.00146423) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000894777,-0.0145071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131759) , 
0, 0.025887, 1, 0, 0.000336129,-0.00877331) , 
2, 0.238023, 1, 0, 0.501747,-0.0033497)    );
  // itree = 168
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998124,0.0483886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703987,-0.0142172) , 
2, 0.0237078, 1, 0, 0.922087,-0.00357738) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949316,0.00717783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952909,0.0321645) , 
7, 0.000138315, 1, 0, 0.949679,0.00338372) , 
5, 0.00799131, 1, 0, 0.936966,0.000176499) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131808) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.65651e-05,-0.0129932) , 
0, 0.023846, 1, 0, 5.83827e-05,-0.00605871) , 
2, 0.166677, 1, 0, 3.76388e-05,-0.00625867) , 
0, 0.00470348, 1, 0, 0.505078,-0.00278987)    );
  // itree = 169
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248737,-0.0261508) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990938,0.00354039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00276413,-0.00990579) , 
0, 0.00234888, 1, 0, 0.746186,-0.00119128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00515572,-0.012454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.41943e-05,-0.0129914) , 
0, 0.0235041, 1, 0, 0.0017518,-0.00820623) , 
2, 0.166636, 1, 0, 0.509563,-0.00342103) , 
5, 0.00232522, 1, 0, 0.497972,-0.00408018)    );
  // itree = 170
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917266,0.023206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921431,-0.185701) , 
6, 0.0197382, 1, 0, 0.917997,-0.00026461) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.397176,-0.0200646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67857,-0.00585687) , 
5, 0.00693612, 1, 0, 0.638539,-0.00527019) , 
2, 0.0283341, 1, 0, 0.790529,-0.00254779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.125189,-0.00947529) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131708) , 
0, 0.0265399, 1, 0, 0,-0.00589251) , 
0, 0.00940609, 1, 0, 0.0213013,-0.00769878) , 
2, 0.119011, 1, 0, 0.505268,-0.00445799)    );
  // itree = 171
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248006,-0.0300286) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918756,0.0237194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790896,-0.0120712) , 
4, 0.00816989, 1, 0, 0.855932,0.000495227) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.105993,-0.0165411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148104,-0.00596834) , 
3, 37.7583, 1, 0, 0.130949,-0.00641813) , 
2, 0.0714155, 1, 0, 0.512346,-0.00278117) , 
5, 0.00231262, 1, 0, 0.50022,-0.00361206)    );
  // itree = 172
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831941,-0.0105291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.153611,-0.010947) , 
2, 0.0747877, 1, 0, 0.636252,-0.0034532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774363,0.00072333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.765517,0.033081) , 
3, 72.8054, 1, 0, 0.77191,0.00389896) , 
6, 0.0220335, 1, 0, 0.653579,-0.00251415) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000130179,-0.0128646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000679611,-0.0150894) , 
7, -9.00502e-05, 1, 0, 0.000368529,-0.00879136) , 
2, 0.261857, 1, 0, 0.499576,-0.00399409)    );
  // itree = 173
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.860805,-0.00281508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965376,0.0441334) , 
7, 6.88634e-05, 1, 0, 0.89505,0.00125735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.317942,-0.0220867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916202,-0.000440397) , 
6, 0.0220346, 1, 0, 0.567851,-0.00529179) , 
4, 0.0104357, 1, 0, 0.799198,-0.000661196) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.142121,-0.00943579) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131654) , 
0, 0.0265385, 1, 0, 0,-0.00548754) , 
0, 0.00940151, 1, 0, 0.0221441,-0.00699174) , 
2, 0.119033, 1, 0, 0.507447,-0.00303805)    );
  // itree = 174
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879084,0.00950245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782558,-0.0466313) , 
4, 0.00699047, 1, 0, 0.815984,-0.00837818) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.382685,-0.0118623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950439,0.0137076) , 
7, 2.23528e-05, 1, 0, 0.787098,0.000319327) , 
3, 12.6002, 1, 0, 0.791867,-0.00111672) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.130407,-0.00979175) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131635) , 
0, 0.0265399, 1, 0, 0,-0.00534537) , 
0, 0.00940608, 1, 0, 0.0201078,-0.00698432) , 
2, 0.119011, 1, 0, 0.500094,-0.00333504)    );
  // itree = 175
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985756,-0.00364739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499537,-0.00663085) , 
2, 0.0946626, 1, 0, 0.939676,-0.0016668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932394,0.0591603) , 
3, 111.732, 1, 0, 0.939255,-0.000459934) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131703) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000352241,-0.0122544) , 
2, 0.388753, 1, 0, 0.000114889,-0.0050005) , 
2, 0.166656, 1, 0, 7.4291e-05,-0.00525964) , 
0, 0.00470348, 1, 0, 0.499696,-0.00270631)    );
  // itree = 176
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863182,-0.00486294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429353,-0.0166924) , 
4, 0.0104356, 1, 0, 0.753473,-0.00262496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842284,0.0250841) , 
6, 0.0231937, 1, 0, 0.759765,-0.00205303) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00190016,-0.0144468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0245863,-0.000626574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000146797,-0.0144771) , 
2, 0.295785, 1, 0, 0.0106393,-0.00418812) , 
5, 0.0114093, 1, 0, 0.00702452,-0.00670636) , 
2, 0.142831, 1, 0, 0.497286,-0.00367564)    );
  // itree = 177
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678947,-0.00919466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946395,0.0173272) , 
7, 6.23703e-05, 1, 0, 0.804936,8.15636e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0220149) , 
4, 0.0127525, 1, 0, 0.68201,-0.00129401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00052459,-0.014901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131571) , 
0, 0.025887, 1, 0, 0.000202065,-0.0074198) , 
2, 0.238052, 1, 0, 0.506466,-0.0028712)    );
  // itree = 178
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994493,0.0717929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780489,-0.0050713) , 
5, 0.00741827, 1, 0, 0.963995,0.00235395) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834159,-0.0870605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887003,0.00578829) , 
2, 0.0113351, 1, 0, 0.85935,-0.00443941) , 
4, 0.00804846, 1, 0, 0.925093,-0.00017147) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667443,-0.0170376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133532) , 
0, 0.00372335, 1, 0, 0.159969,-0.0097514) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621188,-0.00154634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.66148e-05,-0.0150268) , 
4, 0.0127535, 1, 0, 0.358762,-0.00286024) , 
4, 0.00696043, 1, 0, 0.315885,-0.00434657) , 
2, 0.0238066, 1, 0, 0.506252,-0.00304193)    );
  // itree = 179
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944009,0.00420657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758966,-0.0791948) , 
4, 0.00916799, 1, 0, 0.87964,-0.00575869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868041,0.011462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.820574,-0.0139096) , 
3, 58.6333, 1, 0, 0.850511,8.22481e-05) , 
3, 12.1925, 1, 0, 0.855285,-0.000874928) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.55738,-0.0150668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131535) , 
0, 0.00470304, 1, 0, 0.097188,-0.00890349) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0177263,-0.0108698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718272,0.0107147) , 
7, 8.67632e-05, 1, 0, 0.139175,-0.00250812) , 
3, 37.8455, 1, 0, 0.121415,-0.00521323) , 
2, 0.0714198, 1, 0, 0.49899,-0.00298118)    );
  // itree = 180
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.806666,0.0356461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872925,-0.00326183) , 
4, 0.00347996, 1, 0, 0.867839,8.09534e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644631,0.0230575) , 
2, 0.0612095, 1, 0, 0.854614,0.000531211) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.111124,-0.0139576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131553) , 
0, 0.0136323, 1, 0, 0.0426923,-0.00825139) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.444377,0.00549172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00352911,-0.0125608) , 
2, 0.153111, 1, 0, 0.154531,-0.00348192) , 
4, 0.00928376, 1, 0, 0.117795,-0.00504856) , 
2, 0.0714155, 1, 0, 0.492925,-0.00220778)    );
  // itree = 181
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659616,-0.00903896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772123,-0.0490675) , 
6, 0.0209843, 1, 0, 0.666477,-0.00313162) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907216,0.00824925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548874,0.0235078) , 
2, 0.099762, 1, 0, 0.806876,0.00543427) , 
6, 0.0220335, 1, 0, 0.68464,-0.00202348) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00121194,-0.01393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000107894,-0.0128375) , 
0, 0.0234839, 1, 0, 0.000531766,-0.00707244) , 
2, 0.238008, 1, 0, 0.505003,-0.00334926)    );
  // itree = 182
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850043,-0.00271163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968019,0.0299627) , 
7, 4.05929e-05, 1, 0, 0.912304,0.00163434) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64134,-0.0208141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950902,0.0233042) , 
6, 0.0231972, 1, 0, 0.685726,-0.00295463) , 
4, 0.00927716, 1, 0, 0.822373,-0.000187063) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666889,-0.0107647) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000196188,-0.0129179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00145331,-0.00935426) , 
3, 75.6896, 1, 0, 0.000586316,-0.00431556) , 
0, 0.00235153, 1, 0, 0.0674011,-0.00635912) , 
2, 0.0952032, 1, 0, 0.501073,-0.00281376)    );
  // itree = 183
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.269222,-0.0245531) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597832,-0.0104049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917818,0.0103549) , 
7, 8.5304e-05, 1, 0, 0.687986,-0.00099185) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000690515,-0.0138583) , 
7, -8.75014e-05, 1, 0, 0.000281879,-0.00639434) , 
2, 0.238066, 1, 0, 0.511162,-0.00238094) , 
5, 0.00231625, 1, 0, 0.500649,-0.00309601)    );
  // itree = 184
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96909,0.0158564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.745858,0.01999) , 
2, 0.0237732, 1, 0, 0.913356,0.00217228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00602201,-0.0111065) , 
2, 0.0713981, 1, 0, 0.618411,-0.00033617) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.442564,-0.0279679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779416,-0.0148861) , 
5, 0.00846937, 1, 0, 0.717294,-0.00814265) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0201345,-0.0169246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.26246,-0.00160819) , 
5, 0.0112913, 1, 0, 0.17925,-0.00314246) , 
4, 0.0112083, 1, 0, 0.418547,-0.00536632) , 
4, 0.00811879, 1, 0, 0.496129,-0.00341374)    );
  // itree = 185
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721866,-0.0172557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934107,0.0165973) , 
4, 0.00270796, 1, 0, 0.913988,0.000693013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854758,-0.0951274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774333,-0.00339637) , 
2, 0.0170027, 1, 0, 0.800124,-0.00328499) , 
4, 0.00810695, 1, 0, 0.858343,-0.00125104) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762055,-0.0176909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000327363,-0.0123737) , 
0, 0.00235152, 1, 0, 0.104002,-0.00772561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0209795,-0.0125424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746718,0.0271282) , 
7, 8.67631e-05, 1, 0, 0.13935,-0.00201922) , 
3, 50.4736, 1, 0, 0.121263,-0.00493905) , 
2, 0.0714155, 1, 0, 0.505118,-0.00301841)    );
  // itree = 186
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.238489,-0.0236151) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703927,-0.00947941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562278,0.00930134) , 
3, 86.9318, 1, 0, 0.679565,-0.00174813) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000370888,-0.0119383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000866968,-0.0144718) , 
7, -8.96956e-05, 1, 0, 0.00057737,-0.00612337) , 
2, 0.237979, 1, 0, 0.50998,-0.00284089) , 
5, 0.00225267, 1, 0, 0.498108,-0.00323897)    );
  // itree = 187
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962399,0.0374688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94776,-0.015767) , 
3, 34.982, 1, 0, 0.954672,0.000650898) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642593,-0.043296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958766,0.0334808) , 
6, 0.0220377, 1, 0, 0.734745,-0.00401247) , 
4, 0.00927716, 1, 0, 0.887469,-0.00077408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00959894,-0.0160971) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.214496,-0.00582311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.569845,-0.0159322) , 
6, 0.0231923, 1, 0, 0.243621,-0.00354309) , 
5, 0.00693817, 1, 0, 0.199627,-0.0049892) , 
2, 0.0476103, 1, 0, 0.499742,-0.00315008)    );
  // itree = 188
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994241,0.0409755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943831,-0.0154868) , 
0, 0.000341157, 1, 0, 0.974738,-0.000118543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652766,0.000930025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957347,0.0381101) , 
5, 0.0102976, 1, 0, 0.822882,0.00795764) , 
0, 0.00179113, 1, 0, 0.943188,0.00155939) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131596) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000542865,-0.0112324) , 
2, 0.388814, 1, 0, 0.000173447,-0.00361119) , 
2, 0.166677, 1, 0, 0.00011204,-0.00394766) , 
0, 0.00470304, 1, 0, 0.504975,-0.000999541)    );
  // itree = 189
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906528,0.00556765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.200678,-0.0206903) , 
2, 0.0272059, 1, 0, 0.663536,-0.00441957) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87875,0.00426556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590937,0.0170417) , 
2, 0.0952148, 1, 0, 0.844813,0.00168527) , 
6, 0.0139371, 1, 0, 0.770853,-0.000805469) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.027789,-0.010387) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013143) , 
5, 0.0134787, 1, 0, 0,-0.00378916) , 
0, 0.0163668, 1, 0, 0.00666869,-0.00535427) , 
2, 0.14284, 1, 0, 0.500054,-0.0024174)    );
  // itree = 190
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.717239,-0.0169062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754755,-0.00777258) , 
3, 4.79575, 1, 0, 0.75182,-0.00224178) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00137692,-0.0131394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00010402,-0.0127701) , 
0, 0.0235257, 1, 0, 0.000583521,-0.00518555) , 
2, 0.166585, 1, 0, 0.523909,-0.00313486) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523187,0.00854869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.120513,-0.0125755) , 
4, 0.00926565, 1, 0, 0.285356,-0.00132888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490725,0.0314885) , 
6, 0.0208885, 1, 0, 0.326879,0.00137838) , 
3, 100.709, 1, 0, 0.497697,-0.00253445)    );
  // itree = 191
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992293,-0.00453821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955984,0.0176654) , 
2, 0.0950521, 1, 0, 0.990232,0.000321146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0027669,-0.00941567) , 
0, 0.00235174, 1, 0, 0.764214,-0.000879186) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0259174,-0.0113092) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000108282,-0.0127363) , 
2, 0.278797, 1, 0, 6.68855e-05,-0.00357082) , 
0, 0.0164527, 1, 0, 0.00656087,-0.00525612) , 
2, 0.142805, 1, 0, 0.502771,-0.00238953)    );
  // itree = 192
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939572,0.000528999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874655,-0.019235) , 
4, 0.0110828, 1, 0, 0.935454,-0.000445182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958818,0.0217992) , 
7, 0.000133937, 1, 0, 0.9374,0.000357382) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131552) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.4954e-05,-0.0128049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131396) , 
5, 0.0202598, 1, 0, 5.70559e-05,-0.00339399) , 
2, 0.166707, 1, 0, 3.67751e-05,-0.00369595) , 
0, 0.00470348, 1, 0, 0.499125,-0.0015378)    );
  // itree = 193
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998628,0.0514819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903074,-0.0224766) , 
0, 6.38807e-05, 1, 0, 0.972201,-0.00236779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805283,-0.00593483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925974,0.0183639) , 
5, 0.00891023, 1, 0, 0.877592,0.00299767) , 
0, 0.0013415, 1, 0, 0.938253,-0.000442517) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131558) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000144405,-0.0125518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131374) , 
3, 37.7559, 1, 0, 5.76896e-05,-0.00331094) , 
2, 0.166697, 1, 0, 3.67571e-05,-0.0036278) , 
0, 0.00470348, 1, 0, 0.501869,-0.00192406)    );
  // itree = 194
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942221,0.0177801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910604,0.0363207) , 
3, 70.1748, 1, 0, 0.935831,0.00230309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877184,-0.0463161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818441,0.0321409) , 
2, 0.0226411, 1, 0, 0.853125,-0.000523164) , 
4, 0.00696034, 1, 0, 0.888336,0.000680087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0120212,-0.0165231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.551647,0.00160141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00222527,-0.0132147) , 
2, 0.155247, 1, 0, 0.237911,-0.00317784) , 
5, 0.00693817, 1, 0, 0.198026,-0.00434075) , 
2, 0.0476016, 1, 0, 0.493476,-0.00219185)    );
  // itree = 195
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928917,-0.0205644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940735,0.00791935) , 
3, 37.2441, 1, 0, 0.934881,-0.00182978) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990652,-0.0129027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938788,0.0155467) , 
2, 0.0227785, 1, 0, 0.953849,0.00486722) , 
5, 0.00972641, 1, 0, 0.940849,0.000277352) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131533) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000538338,-0.0108769) , 
2, 0.388753, 1, 0, 0.000174722,-0.00301388) , 
2, 0.166606, 1, 0, 0.000110858,-0.00340312) , 
0, 0.00470348, 1, 0, 0.503049,-0.00143546)    );
  // itree = 196
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947325,-0.0041781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809615,0.0212425) , 
2, 0.0452895, 1, 0, 0.918833,0.00120017) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.43875,0.000731733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.302638,-0.0317907) , 
3, 46.7899, 1, 0, 0.37204,-0.00504321) , 
5, 0.0116071, 1, 0, 0.836995,0.000265725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.500276,-0.00526138) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000223557,-0.0121717) , 
2, 0.24946, 1, 0, 0.000139201,-0.00307091) , 
0, 0.00470108, 1, 0, 0.0645922,-0.00377274) , 
2, 0.0951974, 1, 0, 0.50433,-0.0014736)    );
  // itree = 197
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917701,0.00886345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332719,-0.00856065) , 
2, 0.0317237, 1, 0, 0.584999,-0.00168156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767584,0.0101928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762495,0.0350313) , 
6, 0.0236905, 1, 0, 0.764828,0.00762573) , 
6, 0.0231934, 1, 0, 0.597135,-0.00105347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00021654,-0.0155903) , 
2, 0.333211, 1, 0, 0.502367,-0.00187062)    );
  // itree = 198
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.487341,-0.00324868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6765,-0.0183852) , 
6, 0.016903, 1, 0, 0.5316,-0.00305525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576554,-0.0413048) , 
6, 0.0208809, 1, 0, 0.539604,-0.00839767) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981669,0.00870806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131505) , 
0, 0.00469535, 1, 0, 0.744911,0.000278985) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00371394,-0.0125782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000208738,-0.0122476) , 
0, 0.0258673, 1, 0, 0.00154789,-0.00475651) , 
2, 0.166646, 1, 0, 0.504575,-0.00134903) , 
3, 12.5889, 1, 0, 0.510146,-0.00247006)    );
  // itree = 199
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523866,-0.0114486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556036,-0.0814745) , 
3, 12.3404, 1, 0, 0.528629,-0.00628788) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762036,-0.00544647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000521562,-0.0145118) , 
2, 0.166616, 1, 0, 0.537471,-0.00241907) , 
3, 14.3995, 1, 0, 0.535581,-0.00324599) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0693081,-0.0048782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766976,0.0309024) , 
7, 2.5301e-05, 1, 0, 0.320478,0.00205212) , 
3, 100.78, 1, 0, 0.505993,-0.00251722)    );
  // itree = 200
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9738,0.0432848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85188,-0.0306576) , 
4, 0.00690757, 1, 0, 0.922634,0.000484242) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115972,-0.0149091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.240547,-0.00670746) , 
5, 0.00625696, 1, 0, 0.218444,-0.00300782) , 
2, 0.0238066, 1, 0, 0.454176,-0.00183883) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935276,-0.13482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922853,-0.130965) , 
6, 0.0217075, 1, 0, 0.929007,-0.0195758) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.54356,0.00399503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595602,-0.0105155) , 
6, 0.0228082, 1, 0, 0.561651,-0.00157821) , 
2, 0.0239904, 1, 0, 0.641791,-0.00550447) , 
6, 0.0197154, 1, 0, 0.497434,-0.00268399)    );
  // itree = 201
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946658,0.00705925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791519,-0.0231752) , 
4, 0.0104055, 1, 0, 0.936294,-3.98685e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892897,0.00150472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986155,0.0621517) , 
4, 0.0113185, 1, 0, 0.951516,0.00715039) , 
5, 0.0108182, 1, 0, 0.938909,0.00119556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131483) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.98168e-05,-0.0126941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131304) , 
5, 0.0202026, 1, 0, 5.91159e-05,-0.00273125) , 
2, 0.166697, 1, 0, 3.83089e-05,-0.00305949) , 
0, 0.00470348, 1, 0, 0.510316,-0.000746869)    );
  // itree = 202
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760891,-0.000472596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758562,0.0632412) , 
3, 46.643, 1, 0, 0.759959,0.00263477) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913786,-0.0177603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736411,0.00303481) , 
5, 0.00842385, 1, 0, 0.808374,-0.00139461) , 
5, 0.00445874, 1, 0, 0.801857,-0.000852209) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.163528,-0.00878976) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.09807e-05,-0.0127275) , 
2, 0.24586, 1, 0, 5.35472e-05,-0.00272577) , 
0, 0.00705456, 1, 0, 0.0220577,-0.00419119) , 
2, 0.118946, 1, 0, 0.50832,-0.00210909)    );
  // itree = 203
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916852,-0.000572542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754009,-0.0250325) , 
2, 0.0294335, 1, 0, 0.881944,-0.00116579) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.747024,0.0560543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659131,0.0140987) , 
5, 0.0093166, 1, 0, 0.691306,0.00643434) , 
2, 0.0475667, 1, 0, 0.853073,-1.48063e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0263854,-0.0148893) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128595,-0.00233705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444814,-0.014283) , 
6, 0.0231927, 1, 0, 0.158448,-0.00196307) , 
5, 0.00898341, 1, 0, 0.118607,-0.00396744) , 
2, 0.0713981, 1, 0, 0.490835,-0.00196424)    );
  // itree = 204
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924853,-0.00909851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829253,0.0937038) , 
2, 0.0256435, 1, 0, 0.915175,0.000501428) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689259,-0.043218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818563,0.0312398) , 
2, 0.0362723, 1, 0, 0.770896,-0.00493851) , 
2, 0.0317383, 1, 0, 0.888815,-0.000492467) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00435696,-0.0173608) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.188033,-0.00343378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531563,-0.0135846) , 
6, 0.0220355, 1, 0, 0.240287,-0.00227693) , 
5, 0.00676489, 1, 0, 0.19724,-0.0035488) , 
2, 0.0476132, 1, 0, 0.499383,-0.00221351)    );
  // itree = 205
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886142,0.00793659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0713444,-0.0139314) , 
2, 0.0238066, 1, 0, 0.31942,-0.00283717) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810609,-0.00763061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878257,0.0157029) , 
5, 0.00848371, 1, 0, 0.852313,0.00102965) , 
7, 5.18993e-05, 1, 0, 0.472886,-0.00172358) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635527,-0.00172285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636173,-0.0368255) , 
1, 1.08177, 1, 0, 0.635984,-0.0115739) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.604494,0.0091909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594391,-0.00813666) , 
6, 0.0230295, 1, 0, 0.600233,-0.000781009) , 
3, 63.0729, 1, 0, 0.623413,-0.00777886) , 
6, 0.0208739, 1, 0, 0.499348,-0.00278807)    );
  // itree = 206
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947813,0.0121921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951156,0.0728866) , 
7, 5.96937e-05, 1, 0, 0.948152,0.00294141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131755) , 
0, 0.0038848, 1, 0, 0.609392,0.000672482) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.455354,-0.0109575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46743,-0.0722207) , 
3, 54.0615, 1, 0, 0.456624,-0.00480363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.313885,-0.00683555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71436,0.00982242) , 
6, 0.0220345, 1, 0, 0.380784,-0.000474787) , 
3, 63.0738, 1, 0, 0.430445,-0.00330936) , 
4, 0.00810697, 1, 0, 0.500671,-0.00174673)    );
  // itree = 207
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.252106,-0.0276565) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625015,-0.00599375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.271388,0.016864) , 
3, 138.76, 1, 0, 0.607392,-0.00103253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000116039,-0.0143933) , 
2, 0.333293, 1, 0, 0.512963,-0.00163563) , 
5, 0.00226026, 1, 0, 0.501537,-0.00197112)    );
  // itree = 208
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.251563,-0.0273239) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807795,0.00125338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00584981,-0.0126441) , 
2, 0.0951974, 1, 0, 0.46638,-0.00143522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925715,-0.11133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553836,-0.00101225) , 
2, 0.0237994, 1, 0, 0.634549,-0.00507642) , 
6, 0.0197143, 1, 0, 0.507368,-0.00232269) , 
5, 0.00226026, 1, 0, 0.496421,-0.00266945)    );
  // itree = 209
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805928,-0.00765978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000256119,-0.0236887) , 
4, 0.0104139, 1, 0, 0.629972,-0.0029825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899288,-0.0132158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509386,0.0204297) , 
2, 0.0872498, 1, 0, 0.764345,0.00214201) , 
6, 0.0208739, 1, 0, 0.655453,-0.00201077) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000362847,-0.0151954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131231) , 
0, 0.0257558, 1, 0, 0.000146797,-0.0045558) , 
2, 0.261793, 1, 0, 0.500845,-0.00261122)    );
  // itree = 210
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973991,0.064521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9226,0.00855331) , 
3, 83.1798, 1, 0, 0.967451,0.00214267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656319,-0.0136874) , 
5, 0.0107405, 1, 0, 0.925809,0.001656) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0509194,-0.0168942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248384,-0.00333476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61657,-0.0113064) , 
6, 0.0197133, 1, 0, 0.354821,-0.00233622) , 
4, 0.00579414, 1, 0, 0.308088,-0.00310103) , 
2, 0.0238052, 1, 0, 0.499537,-0.00162669)    );
  // itree = 211
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994248,0.0533311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942123,-0.0178584) , 
0, 0.000340655, 1, 0, 0.974163,-0.000418999) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992349,0.000472258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.776533,0.0207717) , 
2, 0.0238139, 1, 0, 0.833988,0.00878454) , 
0, 0.00178866, 1, 0, 0.94462,0.00152073) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131423) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131236) , 
5, 0.0109932, 1, 0, 0,-0.00225126) , 
2, 0.166646, 1, 0, 0,-0.00256094) , 
0, 0.00469953, 1, 0, 0.499188,-0.000403966)    );
  // itree = 212
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95355,0.0299945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768895,-0.0338518) , 
4, 0.00810695, 1, 0, 0.881046,5.4219e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926037,0.0712549) , 
6, 0.0220377, 1, 0, 0.885219,0.000765383) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12358,-0.0113075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19346,-0.00479592) , 
5, 0.00891842, 1, 0, 0.172441,-0.00250917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49636,-0.0130424) , 
6, 0.0231923, 1, 0, 0.196617,-0.00296782) , 
2, 0.0476132, 1, 0, 0.493469,-0.00135846)    );
  // itree = 213
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607833,-0.00692073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887001,0.0319631) , 
7, 6.72349e-05, 1, 0, 0.650431,-0.000296925) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.32175e-05,-0.0126403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0229407) , 
6, 0.0150688, 1, 0, 5.68406e-05,-0.00364634) , 
4, 0.00927725, 1, 0, 0.400052,-0.00158637) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947296,0.0235858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517153,-0.0281975) , 
6, 0.0201599, 1, 0, 0.801038,-0.00454782) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504483,-0.0077155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982277,0.033254) , 
4, 0.0104562, 1, 0, 0.888547,0.00665894) , 
5, 0.0102854, 1, 0, 0.855653,0.00244639) , 
7, 8.53043e-05, 1, 0, 0.49909,-0.000709736)    );
  // itree = 214
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95081,0.0212837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.182493,-0.0136569) , 
2, 0.0238023, 1, 0, 0.51485,-0.0020928) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969117,0.00112084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669547,0.0179543) , 
2, 0.0713479, 1, 0, 0.881284,0.00298676) , 
7, 6.53838e-05, 1, 0, 0.659698,-8.48857e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0201349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013122) , 
4, 0.0171655, 1, 0, 0,-0.00344202) , 
4, 0.0127514, 1, 0, 0.501029,-0.000892335)    );
  // itree = 215
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800389,-0.00769328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873885,-0.0447843) , 
7, 5.84916e-05, 1, 0, 0.806861,-0.00331781) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96297,0.0306306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132572) , 
0, 0.00403406, 1, 0, 0.518255,0.00159293) , 
5, 0.00805722, 1, 0, 0.660089,-0.00082044) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895355,-0.0276217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974486,-0.00119009) , 
5, 0.0109326, 1, 0, 0.951622,-0.00863892) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00272149,-0.00285503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.93374e-05,-0.0125727) , 
4, 0.0150596, 1, 0, 0.000957785,-0.00157628) , 
0, 0.00235174, 1, 0, 0.269794,-0.00357351) , 
4, 0.0104251, 1, 0, 0.501583,-0.00193851)    );
  // itree = 216
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914234,0.000395018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.78022,-0.0421549) , 
2, 0.0291399, 1, 0, 0.903083,-0.000948408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838051,0.0198075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356362,-0.031077) , 
4, 0.0115626, 1, 0, 0.724296,0.00259128) , 
2, 0.0340053, 1, 0, 0.854139,2.06056e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0213255,-0.0131014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132688,-0.00552837) , 
5, 0.00872951, 1, 0, 0.0999706,-0.00272737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.402713,-0.0130113) , 
6, 0.0231925, 1, 0, 0.122624,-0.00362256) , 
2, 0.0714198, 1, 0, 0.502417,-0.00173107)    );
  // itree = 217
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986513,-0.00184196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756282,0.00989951) , 
2, 0.0885417, 1, 0, 0.965809,0.000671695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131228) , 
4, 0.0115941, 1, 0, 0,-0.00268825) , 
0, 0.00470348, 1, 0, 0.666796,-0.000368539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000513269,-0.0140952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00023513,-0.0116067) , 
0, 0.0259538, 1, 0, 0.000348412,-0.0035246) , 
2, 0.238066, 1, 0, 0.502526,-0.00114646)    );
  // itree = 218
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.772367,0.000145416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00579834,-0.0161617) , 
2, 0.124554, 1, 0, 0.650222,-0.000865803) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879603,0.0144177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536144,0.03102) , 
2, 0.101585, 1, 0, 0.787803,0.00635602) , 
6, 0.0220345, 1, 0, 0.667854,5.97395e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000848413,-0.0128344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000226981,-0.0116172) , 
0, 0.0259055, 1, 0, 0.00047604,-0.00315077) , 
2, 0.238066, 1, 0, 0.499108,-0.000752037)    );
  // itree = 219
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776057,-0.000268447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891714,0.0518629) , 
6, 0.0231932, 1, 0, 0.784639,0.000590043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00117089,-0.012732) , 
2, 0.261809, 1, 0, 0.663002,-0.000170893) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0249145) , 
6, 0.0139286, 1, 0, 0,-0.00363222) , 
4, 0.012739, 1, 0, 0.499609,-0.00102392)    );
  // itree = 220
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.278068,-0.0276726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94433,0.00468063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131262) , 
0, 0.00470304, 1, 0, 0.489062,-0.000554352) , 
5, 0.00218462, 1, 0, 0.480044,-0.00107951) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59581,-0.00083804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632992,-0.0480482) , 
1, 1.08028, 1, 0, 0.613439,-0.0115073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609971,0.0353377) , 
1, 1.11943, 1, 0, 0.612709,-0.00733322) , 
6, 0.0220335, 1, 0, 0.496457,-0.00185318)    );
  // itree = 221
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973844,0.00685474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527561,-0.00815661) , 
0, 0.00178634, 1, 0, 0.93403,0.000205347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000140238,-0.0120731) , 
2, 0.166728, 1, 0, 8.89155e-05,-0.00194224) , 
0, 0.00470304, 1, 0, 0.459063,-0.000886834) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660532,-0.0099845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612203,0.0233337) , 
1, 1.09414, 1, 0, 0.636122,0.000723713) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697744,-0.00949352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551155,-0.025383) , 
4, 0.0104237, 1, 0, 0.633584,-0.00935683) , 
1, 1.16013, 1, 0, 0.635003,-0.00372133) , 
6, 0.0197164, 1, 0, 0.500535,-0.00155497)    );
  // itree = 222
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986049,-0.00103464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99053,0.0280063) , 
5, 0.00893359, 1, 0, 0.987754,0.00134392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131483) , 
0, 0.00468623, 1, 0, 0.815122,0.000601922) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701563,-0.00559204) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000304223,-0.0117432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00255282,-0.000999592) , 
3, 88.3036, 1, 0, 0.000866811,-0.0015434) , 
0, 0.00235054, 1, 0, 0.0677593,-0.00226819) , 
2, 0.0952265, 1, 0, 0.501433,-0.000602745)    );
  // itree = 223
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.856732,-0.0100221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973743,0.0675121) , 
7, 3.76959e-05, 1, 0, 0.920401,0.00141381) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760117,-0.00344419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681623,-0.0423708) , 
3, 49.6087, 1, 0, 0.728066,-0.00290975) , 
4, 0.00926379, 1, 0, 0.852825,-0.000105242) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517434,-0.0165489) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00170439,-0.0128821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103291,-0.00414823) , 
5, 0.00912451, 1, 0, 0.0723281,-0.00222013) , 
2, 0.0918129, 1, 0, 0.120351,-0.00318635) , 
2, 0.0714068, 1, 0, 0.499405,-0.00159188)    );
  // itree = 224
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907244,-0.00734581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773517,0.0226416) , 
5, 0.00844279, 1, 0, 0.843344,0.000821816) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877539,0.0216281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655519,-0.0241252) , 
2, 0.0317383, 1, 0, 0.78547,-0.00220443) , 
3, 49.6023, 1, 0, 0.820297,-0.000383281) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675064,-0.0130225) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000116895,-0.0126627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00304656,0.000692593) , 
3, 88.2073, 1, 0, 0.000837392,-0.00146174) , 
0, 0.00235054, 1, 0, 0.0665841,-0.00349774) , 
2, 0.0952207, 1, 0, 0.494525,-0.00172943)    );
  // itree = 225
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923538,0.00673036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.886731,0.0646937) , 
3, 85.3346, 1, 0, 0.91886,0.00167608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00507818,-0.0104351) , 
2, 0.0714198, 1, 0, 0.612376,6.2939e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863938,-0.0264145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131139) , 
0, 0.0052534, 1, 0, 0.326231,-0.00538963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508315,0.00788661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429608,-0.0125833) , 
3, 37.8455, 1, 0, 0.462373,-0.00107247) , 
5, 0.00902973, 1, 0, 0.423018,-0.00232046) , 
4, 0.00812137, 1, 0, 0.497507,-0.00138289)    );
  // itree = 226
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97382,0.017794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172374,-0.0238981) , 
2, 0.0238066, 1, 0, 0.615506,-0.00489899) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886931,-0.049813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364634,-0.00276775) , 
2, 0.0238059, 1, 0, 0.493883,-0.00174114) , 
4, 0.00696399, 1, 0, 0.531906,-0.00272839) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962603,0.00611601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842004,0.0325238) , 
0, 0.00140738, 1, 0, 0.919942,0.00612513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131273) , 
0, 0.00469537, 1, 0, 0.371124,0.00120048) , 
3, 88.1204, 1, 0, 0.501622,-0.00198835)    );
  // itree = 227
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.266856,-0.0206575) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970049,-0.00277821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748091,0.0171611) , 
0, 0.00201224, 1, 0, 0.940014,0.000728827) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000173982,-0.011733) , 
2, 0.166728, 1, 0, 0.000113078,-0.00188521) , 
0, 0.00469953, 1, 0, 0.498837,-0.00049817) , 
5, 0.00225663, 1, 0, 0.489663,-0.000895408)    );
  // itree = 228
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947321,0.00818371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638461,0.0123776) , 
2, 0.051008, 1, 0, 0.891196,0.00151671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00252277,-0.0111662) , 
2, 0.119033, 1, 0, 0.642945,0.000251028) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.362704,-0.0603057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952523,0.114708) , 
6, 0.0220452, 1, 0, 0.616681,-0.00871901) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.432794,0.0046927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00240084,-0.01122) , 
2, 0.155284, 1, 0, 0.169864,-0.00138211) , 
2, 0.0476045, 1, 0, 0.268213,-0.00299703) , 
4, 0.0104397, 1, 0, 0.493224,-0.00104671)    );
  // itree = 229
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991824,0.00324321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943883,0.0158944) , 
0, 0.00177581, 1, 0, 0.982666,0.00170698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131439) , 
0, 0.00470348, 1, 0, 0.759,0.000745557) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000915281,-0.00591203) , 
2, 0.312834, 1, 0, 0.000483018,-0.00131223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0244348,-0.0118052) , 
6, 0.0173942, 1, 0, 0.00730407,-0.00255485) , 
2, 0.142814, 1, 0, 0.496142,-0.000408555)    );
  // itree = 230
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743007,-0.00451657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884583,0.0160411) , 
6, 0.0178362, 1, 0, 0.781897,0.000296836) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0135592,-0.0127566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.87162e-05,-0.0125434) , 
0, 0.0188122, 1, 0, 0.0037118,-0.00279694) , 
2, 0.119033, 1, 0, 0.478499,-0.000909362) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922783,-0.0288185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473174,-0.0374908) , 
2, 0.0477889, 1, 0, 0.653983,-0.0137315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613461,0.00294642) , 
3, 62.8617, 1, 0, 0.63985,-0.00846922) , 
6, 0.0220335, 1, 0, 0.497668,-0.00180747)    );
  // itree = 231
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656164,-0.0121639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66319,-0.0263102) , 
7, 6.90035e-05, 1, 0, 0.656724,-0.00278205) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953748,0.00821424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131248) , 
0, 0.00470348, 1, 0, 0.333962,-0.000416764) , 
5, 0.00868277, 1, 0, 0.489004,-0.00155296) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613965,-0.0419633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618558,-0.00560338) , 
1, 1.10952, 1, 0, 0.616606,-0.0144441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659574,0.0235905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631445,-0.00866511) , 
6, 0.0237756, 1, 0, 0.645159,-0.000804692) , 
6, 0.0232487, 1, 0, 0.630882,-0.00762498) , 
6, 0.0220335, 1, 0, 0.506194,-0.00228866)    );
  // itree = 232
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915835,0.00418722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221903,-0.0126587) , 
2, 0.023795, 1, 0, 0.454099,-0.00195139) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623829,-0.0117711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625427,-0.0261019) , 
6, 0.0204445, 1, 0, 0.624518,-0.00812923) , 
6, 0.0198767, 1, 0, 0.466163,-0.00238874) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625427,0.0189456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663284,0.0367024) , 
3, 12.0061, 1, 0, 0.644775,0.00589863) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620349,-0.0157147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60717,0.0147507) , 
3, 59.3179, 1, 0, 0.613404,-0.000589898) , 
3, 25.1847, 1, 0, 0.622383,0.00126714) , 
6, 0.0208748, 1, 0, 0.494135,-0.00173413)    );
  // itree = 233
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.382231,-0.00684009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595887,-0.0342425) , 
6, 0.0144347, 1, 0, 0.408903,-0.00154945) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617604,0.000886849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575857,0.0505505) , 
1, 1.42388, 1, 0, 0.600539,0.00246902) , 
6, 0.015958, 1, 0, 0.45908,-0.000497264) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671523,-0.0321334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622468,-0.00819918) , 
6, 0.0217588, 1, 0, 0.638682,-0.00609093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650615,0.0235741) , 
1, 1.22309, 1, 0, 0.640593,-0.00457492) , 
6, 0.0197143, 1, 0, 0.501772,-0.00145632)    );
  // itree = 234
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.236941,-0.033103) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695665,-0.00136368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957193,0.0249543) , 
7, 8.67919e-05, 1, 0, 0.773015,0.000925136) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000506692,-0.0091538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0229493,-0.00955006) , 
6, 0.0173946, 1, 0, 0.00670593,-0.0022898) , 
2, 0.142796, 1, 0, 0.510845,-0.000174759) , 
5, 0.00225663, 1, 0, 0.497595,-0.000483223)    );
  // itree = 235
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.25342,-0.0193946) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978369,0.0331685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888573,-0.0648931) , 
4, 0.0069264, 1, 0, 0.932229,-0.00269696) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883577,0.00585828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.27926e-05,-0.0127833) , 
0, 0.00470348, 1, 0, 0.331456,-5.9714e-05) , 
2, 0.0238052, 1, 0, 0.519547,-0.000885387) , 
5, 0.00231625, 1, 0, 0.507274,-0.00110057)    );
  // itree = 236
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851573,0.0141435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0414713,-0.0134147) , 
2, 0.0476132, 1, 0, 0.422126,-0.00123435) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61068,0.108458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616086,-0.0027354) , 
6, 0.0174346, 1, 0, 0.615077,0.00152794) , 
6, 0.0168967, 1, 0, 0.458643,-0.000711566) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926537,-0.0550103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939716,0.00911272) , 
5, 0.0107068, 1, 0, 0.934435,-0.00830247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68028,0.00481183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277163,-0.0160276) , 
5, 0.0116001, 1, 0, 0.475818,-0.00160069) , 
2, 0.0476953, 1, 0, 0.641597,-0.00402321) , 
6, 0.0197143, 1, 0, 0.50186,-0.00149383)    );
  // itree = 237
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245965,-0.020136) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757156,-0.00176008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000229838,-0.0152491) , 
2, 0.14284, 1, 0, 0.48879,-0.00120473) , 
5, 0.00219359, 1, 0, 0.477257,-0.00143301) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626118,-0.0298879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533428,-0.0102472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725614,0.0150636) , 
6, 0.0236946, 1, 0, 0.599442,-0.000736792) , 
5, 0.0114154, 1, 0, 0.606908,-0.00553315) , 
6, 0.0220335, 1, 0, 0.492844,-0.00192594)    );
  // itree = 238
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893363,0.0169628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636665,-0.0160556) , 
2, 0.0317383, 1, 0, 0.853499,2.27329e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72768,-0.0137663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000369775,-0.0111601) , 
0, 0.00235054, 1, 0, 0.0617338,-0.00294108) , 
2, 0.0476132, 1, 0, 0.397076,-0.00168579) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866876,0.00482031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930648,0.0485989) , 
7, 0.000123146, 1, 0, 0.886718,0.00379591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570485,-0.0162798) , 
4, 0.0119271, 1, 0, 0.84664,0.00218375) , 
7, 8.53043e-05, 1, 0, 0.494054,-0.000851069)    );
  // itree = 239
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.478176,-0.00550672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619752,-0.017655) , 
6, 0.0210329, 1, 0, 0.486031,-0.00111326) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648965,0.0470706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579933,0.020092) , 
1, 1.11461, 1, 0, 0.613563,0.00566191) , 
6, 0.0220871, 1, 0, 0.493137,-0.000735753) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909646,-0.029746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410479,-0.0115823) , 
2, 0.0714814, 1, 0, 0.637311,-0.00651136) , 
6, 0.0231934, 1, 0, 0.502862,-0.00112534)    );
  // itree = 240
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499156,-0.0132147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484039,-0.00524124) , 
3, 19.2211, 1, 0, 0.490403,-0.00165993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64343,0.00955003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662666,-0.0182207) , 
1, 1.08668, 1, 0, 0.658126,-0.00657161) , 
6, 0.0197142, 1, 0, 0.528515,-0.00277602) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.494628,-0.0165104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760304,0.016246) , 
6, 0.0139269, 1, 0, 0.647901,0.000403702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000568116,-0.0127983) , 
2, 0.238023, 1, 0, 0.46343,-0.000547448) , 
3, 50.4575, 1, 0, 0.500806,-0.00182724)    );
  // itree = 241
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655218,0.000720629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4146,-0.0146493) , 
4, 0.0104665, 1, 0, 0.637259,-0.000446174) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791892,-0.000742579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995436,0.0709413) , 
4, 0.0111564, 1, 0, 0.893221,0.00478667) , 
7, 0.000116861, 1, 0, 0.655679,-6.95974e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0448437) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831566,0.0535951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000114714,-0.0128946) , 
4, 0.0121861, 1, 0, 0.202159,0.00078613) , 
5, 0.0115632, 1, 0, 0.129657,-0.0025953) , 
4, 0.0115791, 1, 0, 0.494392,-0.00084402)    );
  // itree = 242
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887144,0.000275729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663488,-0.0237303) , 
6, 0.0173713, 1, 0, 0.866943,-0.00138542) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.728186,0.0278285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66159,-0.0013835) , 
3, 37.7944, 1, 0, 0.691267,0.00185415) , 
5, 0.00899172, 1, 0, 0.787368,8.19981e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.168333,-0.0100507) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.01311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00031275,-0.00949372) , 
2, 0.372904, 1, 0, 0.000103733,-0.00112442) , 
0, 0.00705102, 1, 0, 0.0216606,-0.00268902) , 
2, 0.119011, 1, 0, 0.495669,-0.000973632)    );
  // itree = 243
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879969,-0.00695521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488639,0.0135695) , 
2, 0.051008, 1, 0, 0.784038,0.000468676) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0127308,-0.010108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131078) , 
0, 0.018803, 1, 0, 0.00342126,-0.00175353) , 
2, 0.119033, 1, 0, 0.485426,-0.00038139) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661021,-0.00341529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630001,-0.0253371) , 
1, 1.08679, 1, 0, 0.645223,-0.00664719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619036,0.00960689) , 
3, 74.4998, 1, 0, 0.638173,-0.00372093) , 
6, 0.0220335, 1, 0, 0.504021,-0.000787943)    );
  // itree = 244
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267457,-0.00582641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818326,0.0175664) , 
7, 3.52565e-05, 1, 0, 0.537063,0.00159349) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.484975,-0.0107578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648388,-0.0154505) , 
6, 0.0197151, 1, 0, 0.523381,-0.00260473) , 
3, 9.58636, 1, 0, 0.525245,-0.00203267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0705928,0.000426333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71675,0.0167148) , 
7, 3.05038e-05, 1, 0, 0.305985,0.0020066) , 
3, 100.682, 1, 0, 0.495287,-0.00148077)    );
  // itree = 245
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71335,0.00202493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956805,0.0522316) , 
7, 9.1588e-05, 1, 0, 0.772129,0.00194859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00052581,-0.0149986) , 
2, 0.142805, 1, 0, 0.533344,0.000488424) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.51787,-0.0092001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460132,-0.0318304) , 
3, 93.577, 1, 0, 0.513763,-0.00233456) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230707,-0.00202104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508612,0.0314715) , 
6, 0.0197536, 1, 0, 0.297281,0.00136486) , 
3, 104.983, 1, 0, 0.474276,-0.00165977) , 
3, 25.1987, 1, 0, 0.492657,-0.000991309)    );
  // itree = 246
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.262988,-0.0458257) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.425971,-0.0089175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638416,0.00894475) , 
6, 0.0168976, 1, 0, 0.480558,-0.000535852) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650462,-0.0281993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625046,-0.00286728) , 
5, 0.0109536, 1, 0, 0.632143,-0.00416223) , 
6, 0.0208739, 1, 0, 0.507823,-0.00118811) , 
5, 0.00228181, 1, 0, 0.497815,-0.00151336)    );
  // itree = 247
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678896,-0.00123147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204489,-0.0138058) , 
4, 0.0104411, 1, 0, 0.511402,-0.000938795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163,0.0141887) , 
3, 138.758, 1, 0, 0.490964,-0.000712244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613644,-0.00265433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658877,-0.0197392) , 
1, 1.06907, 1, 0, 0.634997,-0.00652255) , 
6, 0.0231934, 1, 0, 0.500147,-0.00108267)    );
  // itree = 248
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980886,0.0126628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00254478,-0.00895214) , 
0, 0.00194657, 1, 0, 0.658713,0.000260883) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0197741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356589,-0.00419765) , 
5, 0.00867968, 1, 0, 0.272126,-0.00171402) , 
4, 0.00926377, 1, 0, 0.480676,-0.000648629) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931512,0.0365335) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.44778,-0.0468554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477484,-0.0100738) , 
3, 37.2815, 1, 0, 0.4669,-0.0126614) , 
2, 0.0477684, 1, 0, 0.619491,-0.00701528) , 
6, 0.0220339, 1, 0, 0.497641,-0.0014267)    );
  // itree = 249
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940601,0.0434925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789639,-0.00579279) , 
2, 0.0373579, 1, 0, 0.91648,0.00129326) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763281,-0.0364116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69291,0.00699516) , 
2, 0.0374175, 1, 0, 0.735683,-0.00310416) , 
5, 0.00929161, 1, 0, 0.853418,-0.000240568) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582128,-0.0151045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688953,-0.0024033) , 
3, 36.9964, 1, 0, 0.649206,-0.00929123) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131067) , 
2, 0.173354, 1, 0, 0,-0.00116862) , 
0, 0.00470075, 1, 0, 0.118984,-0.0026573) , 
2, 0.0713675, 1, 0, 0.497793,-0.00141079)    );
  // itree = 250
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231245,-0.020039) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871158,0.100688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594934,-0.00240673) , 
5, 0.00374322, 1, 0, 0.618189,0.000236367) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748967,-0.0168307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103531,-0.00121542) , 
2, 0.0951974, 1, 0, 0.441955,-0.00150587) , 
4, 0.00812115, 1, 0, 0.509956,-0.000833619) , 
5, 0.00231262, 1, 0, 0.496662,-0.00102361)    );
  // itree = 251
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598833,0.00666607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68773,-0.00985226) , 
6, 0.0173946, 1, 0, 0.626556,-0.000232017) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958811,-0.00894207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895389,0.0582655) , 
0, 0.00187659, 1, 0, 0.926728,0.00453134) , 
7, 0.000120338, 1, 0, 0.660177,0.000301505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0228882) , 
6, 0.0139282, 1, 0, 0,-0.00238865) , 
4, 0.0127587, 1, 0, 0.49776,-0.000360328)    );
  // itree = 252
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963307,0.0361195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878549,-0.0410623) , 
2, 0.00680106, 1, 0, 0.905492,-0.00347548) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.138689,-0.0101653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.246285,0.000801815) , 
4, 0.00928217, 1, 0, 0.206094,-0.00138474) , 
2, 0.0476132, 1, 0, 0.536121,-0.00237131) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994485,0.0152746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832805,0.0246954) , 
2, 0.0474679, 1, 0, 0.925606,0.00542249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000149418,-0.0117721) , 
0, 0.00470075, 1, 0, 0.356676,0.00128866) , 
3, 88.3006, 1, 0, 0.502396,-0.00168346)    );
  // itree = 253
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836299,0.00294236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000474469,-0.0255615) , 
4, 0.0104095, 1, 0, 0.677357,-0.000497615) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894767,0.00158071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653414,0.0272656) , 
2, 0.0964879, 1, 0, 0.83624,0.0032859) , 
6, 0.0208788, 1, 0, 0.707112,0.000210941) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00226925,-0.0110198) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000521562,-0.00616216) , 
2, 0.352528, 1, 0, 0.000251977,-0.000770626) , 
0, 0.0211778, 1, 0, 0.000907307,-0.00176812) , 
2, 0.190441, 1, 0, 0.494397,-0.000385168)    );
  // itree = 254
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919498,0.00641729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796675,0.0532787) , 
5, 0.00884107, 1, 0, 0.871105,0.00230486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626514,-0.00858957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131066) , 
0, 0.00469044, 1, 0, 0.103104,-0.00253492) , 
2, 0.0714155, 1, 0, 0.541961,0.000230669) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515425,-0.00812274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464283,-0.0327139) , 
3, 72.8427, 1, 0, 0.508175,-0.00278963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.500514,0.0157941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327669,-0.00573219) , 
4, 0.00811712, 1, 0, 0.381575,-1.61995e-05) , 
3, 81.0938, 1, 0, 0.458668,-0.00170507) , 
3, 37.8432, 1, 0, 0.495601,-0.000846748)    );
  // itree = 255
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854108,0.000488555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0418098,-0.0152339) , 
2, 0.0476132, 1, 0, 0.422476,-0.00191197) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618332,0.0864625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617826,0.00284352) , 
6, 0.0174742, 1, 0, 0.6179,0.00165718) , 
6, 0.0169033, 1, 0, 0.471735,-0.00101232) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925941,-0.0329678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837445,-0.0628017) , 
2, 0.0498105, 1, 0, 0.894334,-0.0123672) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243408,0.00833147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.367206,0.0243642) , 
3, 63.1524, 1, 0, 0.296526,0.00521761) , 
2, 0.0950986, 1, 0, 0.637608,-0.0048155) , 
6, 0.0208771, 1, 0, 0.500429,-0.00167023)    );
  // itree = 256
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.269232,-0.034173) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702845,0.00408007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118343,-0.0125806) , 
4, 0.0104387, 1, 0, 0.502117,-0.000128422) , 
5, 0.00217487, 1, 0, 0.491617,-0.000480023) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876492,0.0654615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920801,-0.011678) , 
1, 1.08182, 1, 0, 0.901287,0.00203967) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.337082,-0.0262007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443977,-0.000315539) , 
3, 62.8748, 1, 0, 0.381739,-0.011645) , 
2, 0.0715779, 1, 0, 0.622999,-0.00529032) , 
6, 0.0220335, 1, 0, 0.507898,-0.00107611)    );
  // itree = 257
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.279248,-0.0479811) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631545,0.0063243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20469,-0.0184221) , 
4, 0.00811712, 1, 0, 0.414277,-0.00074159) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90389,0.0402752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81811,-0.00852551) , 
6, 0.0216322, 1, 0, 0.861041,0.0017155) , 
7, 8.67922e-05, 1, 0, 0.514528,-0.000190234) , 
5, 0.00228181, 1, 0, 0.505384,-0.000519685)    );
  // itree = 258
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.275154,-0.0205222) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0830744,0.00836363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566412,-0.00938833) , 
6, 0.00596893, 1, 0, 0.4818,-0.00134234) , 
5, 0.00214123, 1, 0, 0.47189,-0.00155197) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942318,-0.0217773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612655,0.0230213) , 
0, 0.00139651, 1, 0, 0.749179,-0.00183617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.322851,-0.0365533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663393,0.00245338) , 
6, 0.0236934, 1, 0, 0.460306,-0.0100187) , 
5, 0.0116554, 1, 0, 0.608491,-0.00582125) , 
6, 0.0208748, 1, 0, 0.497157,-0.00234166)    );
  // itree = 259
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.531424,-0.0011035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.505321,-0.0151369) , 
3, 36.0213, 1, 0, 0.517787,-0.00142031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202807,0.0172281) , 
3, 126.143, 1, 0, 0.492995,-0.00108638) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648505,-0.00477386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611221,-0.0192162) , 
1, 1.07571, 1, 0, 0.634105,-0.00644139) , 
6, 0.0231934, 1, 0, 0.502368,-0.00144206)    );
  // itree = 260
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929767,-0.000444202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918351,-0.0335547) , 
7, 3.14617e-05, 1, 0, 0.927371,-0.00214256) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94731,0.0488756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947295,0.0075262) , 
4, 0.0079554, 1, 0, 0.947299,0.00325529) , 
5, 0.00614792, 1, 0, 0.942037,0.00183003) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131439) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.11169e-05,-0.0120051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131103) , 
3, 75.56, 1, 0, 4.94351e-05,-0.000881124) , 
2, 0.119103, 1, 0, 3.65875e-05,-0.0011438) , 
0, 0.00470348, 1, 0, 0.499205,0.000432034)    );
  // itree = 261
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998653,0.0341068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973212,-0.0382934) , 
8, 0.038156, 1, 0, 0.995562,-0.000871079) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886559,0.00427427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914218,0.0402417) , 
0, 0.00201321, 1, 0, 0.892299,0.00488046) , 
2, 0.0474351, 1, 0, 0.969801,0.000563785) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00460053,0.00349967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.49252e-05,-0.0125863) , 
4, 0.00812107, 1, 0, 0.00131633,-0.000542061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00173177,-0.01405) , 
6, 0.0173946, 1, 0, 0.00141841,-0.00129609) , 
0, 0.00235174, 1, 0, 0.499738,-0.000339017)    );
  // itree = 262
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886391,-0.0261088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158504,-0.00159369) , 
2, 0.0476132, 1, 0, 0.507508,-0.00154305) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660157,0.0147374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662065,-0.0298658) , 
3, 33.6184, 1, 0, 0.661229,-0.00536028) , 
6, 0.0220335, 1, 0, 0.525716,-0.0019952) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0622187,0.00311893) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651597,0.0269972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845446,0.0107208) , 
7, 8.38371e-05, 1, 0, 0.749702,0.00504704) , 
7, 2.5301e-05, 1, 0, 0.314916,0.00204785) , 
3, 100.915, 1, 0, 0.496615,-0.00143705)    );
  // itree = 263
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988196,0.0628888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85721,-0.0392921) , 
6, 0.010325, 1, 0, 0.957026,0.00052309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.058215,-0.0182745) , 
2, 0.0238052, 1, 0, 0.535838,-0.00331275) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597497,-0.0252793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.755988,0.0339076) , 
5, 0.00619988, 1, 0, 0.731504,0.00253494) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574407,-0.00200919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000107663,-0.0149772) , 
2, 0.261811, 1, 0, 0.416119,-0.00112163) , 
4, 0.00843692, 1, 0, 0.497625,-0.000176646) , 
4, 0.00579198, 1, 0, 0.505869,-0.000853188)    );
  // itree = 264
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0942853,-0.04921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945208,0.00709911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131214) , 
0, 0.00470304, 1, 0, 0.510653,0.000232395) , 
6, 0.00298211, 1, 0, 0.474417,-0.000260664) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618249,-0.0104543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648297,-0.0262809) , 
3, 32.3249, 1, 0, 0.632619,-0.00664203) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504506,0.0134803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579263,0.000707872) , 
6, 0.0227029, 1, 0, 0.542147,0.00167583) , 
3, 75.4334, 1, 0, 0.607299,-0.00431414) , 
6, 0.0208739, 1, 0, 0.49845,-0.000993778)    );
  // itree = 265
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.25793,-0.061078) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.528906,-0.00607229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476894,-0.016026) , 
3, 78.0816, 1, 0, 0.519918,-0.00149036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.233825,0.0115672) , 
3, 126.143, 1, 0, 0.499546,-0.00122571) , 
5, 0.00233533, 1, 0, 0.489134,-0.00161255)    );
  // itree = 266
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988998,0.0622636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910183,-0.113683) , 
6, 0.0102855, 1, 0, 0.969138,-0.000467612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0598059,-0.0188794) , 
2, 0.0237746, 1, 0, 0.539936,-0.00324841) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701933,0.0173452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681558,-0.0645003) , 
4, 0.00631019, 1, 0, 0.693209,-0.00396437) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738495,0.00455702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219693,-0.0104268) , 
4, 0.0108928, 1, 0, 0.474567,-0.00044513) , 
4, 0.00668873, 1, 0, 0.491217,-0.000713124) , 
4, 0.00580353, 1, 0, 0.501438,-0.00124503)    );
  // itree = 267
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.261745,-0.00628186) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993512,0.0135765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703093,0.0243871) , 
2, 0.0237161, 1, 0, 0.82995,0.00413367) , 
7, 3.21561e-05, 1, 0, 0.553972,0.00179692) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.456848,-0.00678379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623933,0.00888286) , 
6, 0.0209627, 1, 0, 0.475384,-0.000634502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675896,0.00738381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602067,-0.0210957) , 
1, 1.06907, 1, 0, 0.639686,-0.00436439) , 
6, 0.0231937, 1, 0, 0.485813,-0.000871256) , 
3, 12.5889, 1, 0, 0.496541,-0.000451301)    );
  // itree = 268
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674729,-0.00949075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590229,0.0064155) , 
3, 50.4579, 1, 0, 0.640336,-0.000535382) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.756525,0.00905166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775435,0.0585711) , 
6, 0.0237477, 1, 0, 0.765765,0.00649767) , 
6, 0.0231944, 1, 0, 0.649132,-4.21776e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000703413,-0.0142378) , 
6, 0.0139331, 1, 0, 0.000298496,-0.00213058) , 
2, 0.261825, 1, 0, 0.499893,-0.000522533)    );
  // itree = 269
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.529073,0.00883155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483142,-0.0113585) , 
3, 19.7984, 1, 0, 0.495381,-0.000810614) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639182,-0.0157609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680266,0.021986) , 
6, 0.0233594, 1, 0, 0.65177,-0.00343431) , 
6, 0.0208748, 1, 0, 0.522171,-0.00126005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181036,0.016148) , 
3, 138.571, 1, 0, 0.502234,-0.00100592)    );
  // itree = 270
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871346,0.0275156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166806,-0.0106349) , 
2, 0.0101929, 1, 0, 0.531384,-0.000517997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998797,0.0296788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921488,0.0230114) , 
0, 0.00100905, 1, 0, 0.960076,0.00237774) , 
7, 2.23528e-05, 1, 0, 0.849596,0.00163147) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6133,-0.0131712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728919,-0.00220021) , 
3, 49.3267, 1, 0, 0.673606,-0.00965966) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.84507e-05,-0.0121023) , 
2, 0.17342, 1, 0, 4.36861e-05,-0.000828478) , 
0, 0.00470075, 1, 0, 0.121264,-0.00241782) , 
2, 0.0714068, 1, 0, 0.497286,-0.000327263)    );
  // itree = 271
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533202,-0.0170312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518941,-0.00422768) , 
3, 21.6243, 1, 0, 0.525694,-0.00226981) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945168,0.0250055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.38662e-05,-0.0120074) , 
0, 0.00470075, 1, 0, 0.446055,0.00151724) , 
3, 50.4575, 1, 0, 0.492465,-0.000689669) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608744,-0.00399688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591495,-0.0146241) , 
3, 59.0005, 1, 0, 0.601909,-0.00755308) , 
6, 0.0231937, 1, 0, 0.500031,-0.00116418)    );
  // itree = 272
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.483242,-0.00534318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637922,-0.0155576) , 
6, 0.0210328, 1, 0, 0.491499,-0.000915445) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554892,0.0464272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615151,0.0567786) , 
6, 0.0226678, 1, 0, 0.583391,0.00537224) , 
6, 0.0220869, 1, 0, 0.497072,-0.000534071) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660905,0.00204199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629881,-0.026322) , 
3, 56.0109, 1, 0, 0.648401,-0.00665983) , 
6, 0.0231932, 1, 0, 0.50685,-0.000929884)    );
  // itree = 273
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995293,0.0478801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908841,-0.000526174) , 
5, 0.0061128, 1, 0, 0.976445,0.00123324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712878,-0.0221888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133197) , 
0, 0.00369543, 1, 0, 0.164102,-0.00673252) , 
2, 0.0237994, 1, 0, 0.581402,-0.00264051) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.01547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905149,0.0353168) , 
7, 4.29822e-05, 1, 0, 0.360459,0.000920969) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647367,-0.0357098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715977,-0.000702987) , 
4, 0.01027, 1, 0, 0.701591,-0.00225928) , 
6, 0.0197143, 1, 0, 0.465321,-5.66217e-05) , 
4, 0.00696221, 1, 0, 0.500363,-0.000836635)    );
  // itree = 274
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865267,0.0201202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899675,-0.0601253) , 
6, 0.0143697, 1, 0, 0.881636,-0.00204391) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627337,0.0145202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0502097,-0.00635504) , 
2, 0.0906692, 1, 0, 0.173937,-0.000119022) , 
2, 0.0475958, 1, 0, 0.486184,-0.000968312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620045,-0.00279219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600354,-0.0346962) , 
3, 49.2992, 1, 0, 0.610921,-0.00943876) , 
6, 0.0231935, 1, 0, 0.494434,-0.00152854)    );
  // itree = 275
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614169,0.000529255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.14459,-0.0177107) , 
4, 0.00696322, 1, 0, 0.347743,-0.0011884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896275,0.00912061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701292,-0.0110053) , 
4, 0.0104835, 1, 0, 0.860409,0.000397937) , 
7, 6.29304e-05, 1, 0, 0.481839,-0.000773466) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941558,0.00436494) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.439284,-0.0482021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517772,-0.00587278) , 
3, 62.92, 1, 0, 0.470119,-0.0118747) , 
2, 0.0477466, 1, 0, 0.629725,-0.00763103) , 
6, 0.0220335, 1, 0, 0.499706,-0.00160199)    );
  // itree = 276
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247178,-0.0439743) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652655,-0.0034713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779911,0.0237994) , 
6, 0.0231944, 1, 0, 0.661862,-0.00024408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.001071,-0.0137869) , 
6, 0.0127646, 1, 0, 0.000493915,-0.00256257) , 
2, 0.261825, 1, 0, 0.51601,-0.00075538) , 
5, 0.00231262, 1, 0, 0.503887,-0.000966954)    );
  // itree = 277
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.557165,0.00242022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521584,-0.0223564) , 
3, 12.268, 1, 0, 0.543243,-0.00263025) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550386,0.0142598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503373,-0.00861488) , 
3, 36.8089, 1, 0, 0.515931,-0.000666552) , 
3, 19.8201, 1, 0, 0.523108,-0.00118256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17012,0.0209391) , 
3, 138.759, 1, 0, 0.502241,-0.000926557)    );
  // itree = 278
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.273124,0.0283076) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67085,-0.00462328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739551,-0.0290091) , 
5, 0.00769599, 1, 0, 0.689115,-0.00249217) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504509,0.00336465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180533,-0.0144927) , 
4, 0.0116003, 1, 0, 0.377266,-0.000261142) , 
5, 0.00895304, 1, 0, 0.511457,-0.00122117) , 
5, 0.00235576, 1, 0, 0.501272,-0.00104599)    );
  // itree = 279
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.249507,-0.0300651) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.349631,-0.0102379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606424,0.0298515) , 
6, 0.0132522, 1, 0, 0.435447,0.000393594) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652043,0.00752989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649699,-0.0112874) , 
1, 1.08061, 1, 0, 0.650029,-0.00213465) , 
6, 0.0173951, 1, 0, 0.514478,-0.000537564) , 
5, 0.00227818, 1, 0, 0.502908,-0.000792747)    );
  // itree = 280
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88477,0.0297323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347693,-0.00787577) , 
5, 0.00453656, 1, 0, 0.657499,0.00107087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00108906,-0.0138823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.47577e-05,-0.011916) , 
2, 0.155414, 1, 0, 0.000334105,-0.00111843) , 
2, 0.0476103, 1, 0, 0.168252,-0.000559025) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839676,-0.0172863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743815,0.00194261) , 
5, 0.010469, 1, 0, 0.809783,-0.00261393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926013,-0.0347372) , 
1, 2.07638, 1, 0, 0.817964,-0.00332426) , 
7, 2.55039e-05, 1, 0, 0.499767,-0.00196998)    );
  // itree = 281
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443687,-0.00387941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351774,-0.0178398) , 
3, 77.9076, 1, 0, 0.42775,-0.000939398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129591,0.02524) , 
3, 125.855, 1, 0, 0.402235,-0.00060194) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963457,0.0101627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925941,-0.0144559) , 
6, 0.0232653, 1, 0, 0.956319,0.000213484) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587672,0.0154705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533042,0.0131961) , 
1, 1.12514, 1, 0, 0.559591,0.00887738) , 
2, 0.0953111, 1, 0, 0.860155,0.00231354) , 
7, 8.68799e-05, 1, 0, 0.499715,1.86934e-05)    );
  // itree = 282
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.239467,-0.0171794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.275542,0.00230369) , 
3, 5.99602, 1, 0, 0.257406,-0.00151183) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810287,0.0101262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836791,0.0285023) , 
5, 0.00897132, 1, 0, 0.823429,0.00370065) , 
7, 3.52563e-05, 1, 0, 0.531373,0.00101112) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792933,0.000987196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00703087,-0.0124576) , 
2, 0.0952207, 1, 0, 0.451618,-0.000688733) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66105,-0.032081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648637,-0.000549994) , 
6, 0.0208233, 1, 0, 0.651878,-0.00266376) , 
6, 0.0197143, 1, 0, 0.49855,-0.00115159) , 
3, 12.5981, 1, 0, 0.503856,-0.000801943)    );
  // itree = 283
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818319,0.00149378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0170493,-0.0255691) , 
4, 0.0103884, 1, 0, 0.663837,-0.000898262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779834,0.0439025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775316,0.000776364) , 
5, 0.0111911, 1, 0, 0.778357,0.00554687) , 
5, 0.0104574, 1, 0, 0.678302,-8.41649e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.478668,-0.128701) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.183336,0.00248592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000268203,-0.0154052) , 
2, 0.273186, 1, 0, 0.105419,-0.000672626) , 
2, 0.0239156, 1, 0, 0.136732,-0.00166394) , 
5, 0.0115578, 1, 0, 0.499032,-0.000607102)    );
  // itree = 284
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974967,-0.000741062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861772,-0.0381982) , 
0, 0.00167768, 1, 0, 0.965968,-0.00204951) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00202888,0.00120755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.14303e-05,-0.0122094) , 
5, 0.0115531, 1, 0, 0.000826163,-0.000454827) , 
0, 0.00235054, 1, 0, 0.399313,-0.00111324) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979068,0.0197016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941748,-0.0166399) , 
4, 0.0108531, 1, 0, 0.963978,0.000181335) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530147,0.0271027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579224,0.00996901) , 
6, 0.0224064, 1, 0, 0.554798,0.00923423) , 
2, 0.0949883, 1, 0, 0.867607,0.0023135) , 
7, 8.53042e-05, 1, 0, 0.500716,-0.000371219)    );
  // itree = 285
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964443,-0.0301327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000453655,-0.00986348) , 
0, 0.00235174, 1, 0, 0.274935,-0.0014465) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982306,0.00201173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592277,0.0150979) , 
2, 0.0474156, 1, 0, 0.864902,0.00230435) , 
7, 4.18239e-05, 1, 0, 0.45882,-0.000277408) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519593,0.0117494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732421,-0.0227293) , 
4, 0.0104226, 1, 0, 0.656932,-0.00723482) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66805,0.0264965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589768,-0.00307289) , 
3, 58.5308, 1, 0, 0.614677,0.000558139) , 
3, 37.2453, 1, 0, 0.632701,-0.00276601) , 
6, 0.0197143, 1, 0, 0.499559,-0.000860471)    );
  // itree = 286
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939667,0.0107602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00322557,-0.0144204) , 
2, 0.0476103, 1, 0, 0.563683,-0.000786802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726381,0.0124386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788568,0.0698386) , 
4, 0.00775435, 1, 0, 0.741219,0.00334502) , 
4, 0.00657556, 1, 0, 0.61963,0.000515263) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.746467,0.00416351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722354,-0.018297) , 
3, 24.2101, 1, 0, 0.73029,-0.00339023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7413,0.00946096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205286,-0.00674314) , 
4, 0.0110667, 1, 0, 0.340758,-0.000125452) , 
4, 0.00966742, 1, 0, 0.428709,-0.000862598) , 
4, 0.00812137, 1, 0, 0.503667,-0.000321629)    );
  // itree = 287
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.254655,-0.0406671) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.699954,-0.0128703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27439,0.00933772) , 
5, 0.0081187, 1, 0, 0.467862,-0.00055896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64236,-0.00784455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658993,0.0207243) , 
1, 1.22309, 1, 0, 0.645011,-0.00197989) , 
6, 0.019715, 1, 0, 0.511629,-0.000910025) , 
5, 0.00228181, 1, 0, 0.500611,-0.00122387)    );
  // itree = 288
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652641,-0.00646233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811635,0.0319379) , 
4, 0.00657754, 1, 0, 0.705116,0.000466002) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.449349,0.0200298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0371499,-0.0138888) , 
2, 0.0476278, 1, 0, 0.122011,-0.000890339) , 
4, 0.00812304, 1, 0, 0.437126,-0.00015736) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618495,0.000223335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629247,-0.0133588) , 
6, 0.023122, 1, 0, 0.620721,-0.000987284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572844,-0.048651) , 
1, 1.38558, 1, 0, 0.616692,-0.00165254) , 
6, 0.0174014, 1, 0, 0.501938,-0.000697028)    );
  // itree = 289
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975165,0.0479624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842443,-0.0190621) , 
5, 0.00757344, 1, 0, 0.933554,0.000498695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905927,-0.00916017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000826033,-0.00609782) , 
0, 0.00234888, 1, 0, 0.211687,-0.00124418) , 
2, 0.023795, 1, 0, 0.454356,-0.000658277) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943609,-0.0359952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630356,-0.0122007) , 
0, 0.00153228, 1, 0, 0.755332,-0.00829959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.339211,-0.00983432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691392,0.0218461) , 
4, 0.0115898, 1, 0, 0.509763,0.000582225) , 
5, 0.011287, 1, 0, 0.633489,-0.00389275) , 
6, 0.0197151, 1, 0, 0.496866,-0.00142584)    );
  // itree = 290
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.427096,-0.00507222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611759,0.0645183) , 
6, 0.0165662, 1, 0, 0.439143,-0.000132643) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912564,-0.0173098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131178) , 
0, 0.00466873, 1, 0, 0.285766,-0.0028518) , 
6, 0.0173937, 1, 0, 0.410167,-0.000646346) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973848,-0.000996455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847012,0.0341922) , 
0, 0.00175476, 1, 0, 0.90808,0.00379768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529921,-0.0124749) , 
4, 0.0119127, 1, 0, 0.854968,0.00221479) , 
7, 8.67922e-05, 1, 0, 0.505584,-3.25884e-05)    );
  // itree = 291
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739749,0.0107682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112685,-0.0148895) , 
5, 0.00769847, 1, 0, 0.462563,-1.10042e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.381457,-0.0566274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239124,0.00493007) , 
3, 93.5846, 1, 0, 0.288606,-0.00159858) , 
3, 75.5842, 1, 0, 0.419854,-0.000400781) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934071,-0.0364552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941266,-0.0515633) , 
3, 21.6001, 1, 0, 0.938965,-0.00846534) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59756,0.0205555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5141,-0.00656354) , 
1, 1.06722, 1, 0, 0.520784,-0.00111268) , 
2, 0.023803, 1, 0, 0.621961,-0.00289162) , 
6, 0.0162428, 1, 0, 0.505755,-0.00145946)    );
  // itree = 292
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958741,0.00699195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0745076,-0.0143162) , 
2, 0.0238066, 1, 0, 0.576969,-0.00132281) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751199,0.0241004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754663,-0.000211214) , 
4, 0.00813834, 1, 0, 0.753428,0.00110378) , 
5, 0.00607338, 1, 0, 0.694259,0.000290113) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0346123,-0.0303919) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994236,0.0600788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000781045,-0.0102148) , 
0, 0.00235174, 1, 0, 0.203895,0.00127252) , 
4, 0.0115989, 1, 0, 0.134183,-0.00172893) , 
5, 0.0115713, 1, 0, 0.5093,-0.000376654)    );
  // itree = 293
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975196,0.0392008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804882,-0.0246253) , 
4, 0.00808445, 1, 0, 0.923748,0.000141781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965539,0.0771211) , 
6, 0.0208914, 1, 0, 0.928212,0.000571546) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91771,-0.00845316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890379,-0.0439433) , 
0, 0.00212506, 1, 0, 0.914634,-0.00652574) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0026727,-0.0094383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000864977,0.00102455) , 
2, 0.137147, 1, 0, 0.00134516,-0.000659965) , 
0, 0.00235038, 1, 0, 0.306867,-0.00262224) , 
2, 0.0238023, 1, 0, 0.499222,-0.00163351)    );
  // itree = 294
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97224,0.057406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870101,-0.13267) , 
2, 0.0147356, 1, 0, 0.954256,-0.00123514) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667393,-0.0239586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138183) , 
0, 0.00331051, 1, 0, 0.137109,-0.00773806) , 
2, 0.0238066, 1, 0, 0.574017,-0.00426111) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800594,-0.0126593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579585,0.00745522) , 
5, 0.00814667, 1, 0, 0.618967,0.000735528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.68628e-05,-0.031237) , 
4, 0.0127526, 1, 0, 0.467151,4.31872e-05) , 
5, 0.00677409, 1, 0, 0.496967,-0.00115771)    );
  // itree = 295
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949242,-0.0390104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.207914,0.00467855) , 
2, 0.0238008, 1, 0, 0.480725,-0.000625678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825296,-0.0249228) , 
7, 9.0176e-05, 1, 0, 0.553401,-0.00308512) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629322,0.00119608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812608,0.0299028) , 
6, 0.0208739, 1, 0, 0.663184,0.00110549) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000539624,-0.0155818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000869136,0.00854588) , 
0, 0.0282365, 1, 0, 0.000722147,-0.00178301) , 
2, 0.238052, 1, 0, 0.492995,0.00036342) , 
3, 12.5727, 1, 0, 0.502455,-0.000176643)    );
  // itree = 296
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965723,-0.0134655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000787226,-0.0061564) , 
0, 0.00235174, 1, 0, 0.445207,-0.00144076) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652879,-0.00891952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653486,0.0100653) , 
1, 1.13446, 1, 0, 0.653294,0.000338337) , 
6, 0.017395, 1, 0, 0.519015,-0.000809724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.175438,0.0359161) , 
3, 138.571, 1, 0, 0.498399,-0.000440071)    );
  // itree = 297
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998486,0.0211437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86331,-0.0102958) , 
2, 0.0474351, 1, 0, 0.97323,-0.00078828) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655768,-0.00902573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928136,0.0256686) , 
5, 0.00858592, 1, 0, 0.869902,0.00440025) , 
0, 0.00155922, 1, 0, 0.942982,0.000730595) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131382) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131024) , 
5, 0.00926227, 1, 0, 0,-0.000551087) , 
4, 0.00811021, 1, 0, 0,-0.000758034) , 
0, 0.00470075, 1, 0, 0.502555,3.53183e-05)    );
  // itree = 298
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287766,-0.0271966) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.483847,-0.00734214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678706,0.010682) , 
6, 0.0209842, 1, 0, 0.494501,-0.000595651) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622025,-0.0198923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619563,-0.00269216) , 
3, 37.2453, 1, 0, 0.620616,-0.00324266) , 
6, 0.0220339, 1, 0, 0.510542,-0.000932341) , 
5, 0.00231262, 1, 0, 0.501347,-0.00113725)    );
  // itree = 299
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507125,-0.00139938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682539,0.0182695) , 
6, 0.0209837, 1, 0, 0.51663,0.000109802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.213091,0.0423667) , 
3, 126.145, 1, 0, 0.494749,0.000434591) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.514809,-0.0358945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735505,0.00182456) , 
4, 0.0115997, 1, 0, 0.645226,-0.00669341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61089,0.0587709) , 
1, 1.11943, 1, 0, 0.637571,-0.00363526) , 
6, 0.0220341, 1, 0, 0.511942,-5.53513e-05)    );
  // itree = 300
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606265,-0.0115453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250745,0.000847658) , 
5, 0.00668141, 1, 0, 0.377253,-0.00062779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834417,-0.0219605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859235,-0.00282314) , 
7, 8.55932e-05, 1, 0, 0.853391,-0.0025575) , 
7, 7.40899e-05, 1, 0, 0.48811,-0.00107707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891545,-0.000377885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419116,0.0100646) , 
2, 0.0715615, 1, 0, 0.636466,0.00192223) , 
6, 0.0231937, 1, 0, 0.497546,-0.000886304)    );
  // itree = 301
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508683,-0.0158975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681467,0.0191977) , 
6, 0.0188859, 1, 0, 0.529497,-0.00181801) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.29676,-0.006171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875649,0.0149971) , 
7, 5.43464e-05, 1, 0, 0.447038,5.94215e-05) , 
3, 25.2002, 1, 0, 0.472083,-0.00051081) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803749,-0.00300695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451518,-0.022464) , 
5, 0.0114039, 1, 0, 0.623682,-0.00509205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621434,0.0201622) , 
6, 0.0236911, 1, 0, 0.623228,-0.00300382) , 
6, 0.0208775, 1, 0, 0.498532,-0.000947062)    );
  // itree = 302
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66117,-0.00528525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.78582,0.019047) , 
6, 0.0168997, 1, 0, 0.697352,0.000437011) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000107432,-0.0103964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.022227) , 
7, -0.000177164, 1, 0, 6.71838e-05,-0.00144448) , 
4, 0.0104405, 1, 0, 0.477642,-0.000155837) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672311,0.00372291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577446,-0.0159989) , 
3, 75.6871, 1, 0, 0.645874,-0.00184638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600132,-0.0213632) , 
1, 1.16343, 1, 0, 0.635642,-0.00370306) , 
6, 0.0208754, 1, 0, 0.505459,-0.000780351)    );
  // itree = 303
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509579,0.0122927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942883,0.0554671) , 
7, 3.5413e-05, 1, 0, 0.774252,0.00389347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934265,-0.0371975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629766,0.00530017) , 
2, 0.0158633, 1, 0, 0.736191,0.000180305) , 
3, 12.6173, 1, 0, 0.742439,0.000789863) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00255819,-0.0110785) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000327719,-0.0034675) , 
4, 0.0150764, 1, 0, 0.000163088,-0.000362648) , 
0, 0.021173, 1, 0, 0.000937835,-0.0013085) , 
2, 0.166646, 1, 0, 0.508828,0.000128769)    );
  // itree = 304
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899612,0.00858192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939752,0.045232) , 
5, 0.00841258, 1, 0, 0.906418,0.0016434) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74083,0.0109381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622717,-0.0246311) , 
3, 50.3113, 1, 0, 0.689564,-0.000722591) , 
5, 0.00929161, 1, 0, 0.820516,0.000706166) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.423061,-0.00423415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617772,-0.00625082) , 
3, 62.077, 1, 0, 0.510013,-0.00637731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 6.98635e-05,-0.0112122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131099) , 
6, 0.0162288, 1, 0, 4.74871e-05,-0.000527898) , 
0, 0.00470348, 1, 0, 0.0692411,-0.00132156) , 
2, 0.0952265, 1, 0, 0.503429,-0.000149666)    );
  // itree = 305
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558275,-0.000538743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756657,-0.0433108) , 
5, 0.00555035, 1, 0, 0.593249,-0.0019424) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765873,0.00937569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0446344,-0.012709) , 
5, 0.00964242, 1, 0, 0.401607,-5.22048e-05) , 
5, 0.00613617, 1, 0, 0.456218,-0.000590844) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945387,-0.045166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913793,-0.0649543) , 
1, 1.16005, 1, 0, 0.929566,-0.00963272) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566223,-0.00411415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49422,-0.0167445) , 
3, 88.3036, 1, 0, 0.549833,-0.00305243) , 
2, 0.0237979, 1, 0, 0.630117,-0.00444366) , 
6, 0.0197143, 1, 0, 0.497793,-0.00151195)    );
  // itree = 306
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.459167,-0.003813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648543,-0.0132696) , 
6, 0.017838, 1, 0, 0.504363,-0.00100654) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646832,-0.00620346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629376,0.0213885) , 
3, 39.4608, 1, 0, 0.637582,0.00182807) , 
6, 0.0220346, 1, 0, 0.520434,-0.000664592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183834,0.0140132) , 
3, 138.352, 1, 0, 0.500442,-0.000419185)    );
  // itree = 307
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956215,0.00405423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92628,0.0697678) , 
7, 5.97178e-05, 1, 0, 0.953134,0.00131292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136302) , 
0, 0.00383088, 1, 0, 0.618708,0.00026635) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822208,-0.0521515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757665,-0.0155848) , 
2, 0.0169881, 1, 0, 0.778642,-0.00419034) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.111521,-0.00430129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504797,0.0127519) , 
6, 0.0220353, 1, 0, 0.168334,0.000157726) , 
2, 0.0714068, 1, 0, 0.426858,-0.0016841) , 
4, 0.00812296, 1, 0, 0.502425,-0.000915844)    );
  // itree = 308
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921326,0.0164869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943688,-0.0394478) , 
6, 0.0197331, 1, 0, 0.924548,-0.000282834) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881847,0.112511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744085,0.00198324) , 
2, 0.0276664, 1, 0, 0.774745,0.00183773) , 
2, 0.0203857, 1, 0, 0.857163,0.000671049) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953956,0.0196686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523759,-0.0106607) , 
0, 0.000443526, 1, 0, 0.684233,-0.00399489) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000467596,0.000541814) , 
2, 0.377454, 1, 0, 0.000131466,-0.000433036) , 
0, 0.00470075, 1, 0, 0.123581,-0.00107579) , 
2, 0.0714068, 1, 0, 0.502476,-0.000173546)    );
  // itree = 309
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910231,0.0220669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467224,0.024944) , 
2, 0.0226411, 1, 0, 0.838231,0.00168909) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00263578,-0.0137456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130982) , 
4, 0.0104292, 1, 0, 0.00103922,-0.0010276) , 
2, 0.0476103, 1, 0, 0.341436,7.69911e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927816,-0.0122162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131242) , 
0, 0.00470108, 1, 0, 0.603109,-0.00322625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619487,0.0301818) , 
6, 0.0238009, 1, 0, 0.603978,-0.00269537) , 
6, 0.0127566, 1, 0, 0.494884,-0.00154338)    );
  // itree = 310
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965922,-0.000366175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57317,-0.0458751) , 
5, 0.0105791, 1, 0, 0.923917,-0.00138415) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876808,0.00714892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131094) , 
0, 0.00470348, 1, 0, 0.288314,0.000466714) , 
2, 0.0238023, 1, 0, 0.489,-0.00011768) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651527,0.0200647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638141,-0.0178217) , 
1, 1.06907, 1, 0, 0.64506,-0.00293398) , 
6, 0.0231935, 1, 0, 0.499177,-0.00030134)    );
  // itree = 311
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.447336,-0.0168426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498425,0.0208315) , 
3, 3.59938, 1, 0, 0.483009,-6.99625e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584173,-0.0280125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684755,-0.0145468) , 
1, 1.18782, 1, 0, 0.638218,-0.0123697) , 
6, 0.0174034, 1, 0, 0.536884,-0.00433934) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0975518,-0.0462598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551549,0.00175974) , 
6, 0.00347963, 1, 0, 0.513382,-8.80375e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167862,-0.00991356) , 
3, 132.572, 1, 0, 0.484563,-0.000425364) , 
3, 12.5981, 1, 0, 0.492742,-0.00103725)    );
  // itree = 312
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267599,-0.0267986) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524005,-0.00480294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540507,0.0223093) , 
3, 14.3984, 1, 0, 0.530765,0.000404017) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.459673,-0.010906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674351,0.0020407) , 
6, 0.0208755, 1, 0, 0.498221,-0.00116313) , 
3, 25.1963, 1, 0, 0.508777,-0.000654821) , 
5, 0.00231625, 1, 0, 0.49821,-0.00085213)    );
  // itree = 313
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.251967,-0.0337455) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94096,0.0152785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531995,-0.0128979) , 
5, 0.0111179, 1, 0, 0.867492,0.00101889) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.169689,-0.00805437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0940274,0.00531412) , 
5, 0.0108895, 1, 0, 0.122553,-0.000660459) , 
2, 0.0713981, 1, 0, 0.507121,0.000206492) , 
5, 0.00231262, 1, 0, 0.496038,-1.70489e-05)    );
  // itree = 314
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57686,0.00170553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4175,-0.0833418) , 
7, 3.76003e-05, 1, 0, 0.554246,-0.00146744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940809,0.032541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0915368,-0.0048339) , 
2, 0.0952032, 1, 0, 0.744967,0.00208224) , 
4, 0.00645608, 1, 0, 0.660897,0.000517553) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577085,-0.00562987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519891,-0.03309) , 
3, 49.7932, 1, 0, 0.551317,-0.00338111) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.158097,0.0245004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013321) , 
4, 0.013083, 1, 0, 0.0353842,0.00116929) , 
2, 0.118997, 1, 0, 0.26881,-0.000889466) , 
4, 0.0104255, 1, 0, 0.499367,-6.21041e-05)    );
  // itree = 315
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.451609,-0.00573881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865245,0.0155766) , 
7, 8.94083e-05, 1, 0, 0.534579,0.000155423) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47517,-0.00480871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650267,-0.01402) , 
6, 0.0208755, 1, 0, 0.507497,-0.00126843) , 
3, 33.0293, 1, 0, 0.519098,-0.000658472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157131,0.0206749) , 
3, 138.757, 1, 0, 0.496606,-0.000447696)    );
  // itree = 316
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997379,0.00439245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0894588) , 
4, 0.00985274, 1, 0, 0.998172,0.00166449) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937719,-0.0116296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933887,-0.0269106) , 
5, 0.0110394, 1, 0, 0.93717,-0.00530667) , 
0, 0.000111645, 1, 0, 0.966758,-0.00192542) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00317077,-0.00631341) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00201892,0.0172577) , 
6, 0.016236, 1, 0, 0.000669275,6.5733e-05) , 
2, 0.142927, 1, 0, 0.00145109,-0.000340719) , 
0, 0.00235038, 1, 0, 0.49821,-0.00115623)    );
  // itree = 317
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.542096,-0.00720046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53545,0.0166324) , 
3, 39.1257, 1, 0, 0.541261,-0.00060693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504257,-0.0520314) , 
3, 45.6511, 1, 0, 0.538289,-0.00127742) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960847,-0.0732023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000879111,-0.00281221) , 
0, 0.00235038, 1, 0, 0.146535,-0.000790002) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966487,0.0102758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525712,0.0143851) , 
2, 0.0710493, 1, 0, 0.825089,0.00282317) , 
7, 2.91706e-05, 1, 0, 0.453572,0.000844916) , 
3, 50.4587, 1, 0, 0.502206,-0.000373472)    );
  // itree = 318
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.468385,0.00524041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.289232,-0.0185479) , 
3, 75.4506, 1, 0, 0.423532,-0.000305234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638752,0.0719379) , 
6, 0.0165653, 1, 0, 0.436983,0.000242654) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923265,-0.012491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879495,0.0334043) , 
2, 0.0373757, 1, 0, 0.907333,-0.000327878) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770398,-0.0100239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000490431,-0.00420126) , 
0, 0.00468527, 1, 0, 0.309702,-0.00426382) , 
2, 0.0714013, 1, 0, 0.615971,-0.00224676) , 
6, 0.0173961, 1, 0, 0.501675,-0.000657091)    );
  // itree = 319
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656381,-0.00486535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950706,0.045574) , 
7, 8.93104e-05, 1, 0, 0.691836,-0.000144912) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0247193) , 
6, 0.0129355, 1, 0, 0,-0.00155645) , 
4, 0.0104411, 1, 0, 0.471318,-0.000594832) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962078,-0.0244521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604039,0.0296237) , 
0, 0.00135132, 1, 0, 0.750502,0.00054768) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.725824,0.00129399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260356,-0.0454504) , 
1, 1.08136, 1, 0, 0.493231,-0.00734773) , 
5, 0.0115876, 1, 0, 0.62073,-0.0034349) , 
6, 0.0208771, 1, 0, 0.498033,-0.00110264)    );
  // itree = 320
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.797936,0.0049734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989301,0.0605384) , 
6, 0.0210319, 1, 0, 0.819789,0.0017786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000258314,-0.02244) , 
5, 0.011699, 1, 0, 0.662509,0.000757511) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0360544) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846,0.0414648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135956) , 
4, 0.0122076, 1, 0, 0.200039,0.000998224) , 
5, 0.0113809, 1, 0, 0.131503,-0.00115384) , 
4, 0.0116002, 1, 0, 0.500274,0.000173547)    );
  // itree = 321
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995957,-0.0202516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73858,-0.0118109) , 
2, 0.0465237, 1, 0, 0.964511,-0.00231236) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00257359,0.00152646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00011186,-0.0123007) , 
5, 0.00926227, 1, 0, 0.00088328,-0.000522104) , 
0, 0.00235152, 1, 0, 0.403731,-0.00127052) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968875,0.0289302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568364,-0.0176904) , 
4, 0.0115325, 1, 0, 0.899608,0.00336231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62079,-0.03382) , 
5, 0.0118035, 1, 0, 0.847324,0.000890664) , 
7, 8.53041e-05, 1, 0, 0.501779,-0.000792832)    );
  // itree = 322
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488212,-0.0107304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662466,0.0231243) , 
6, 0.0188759, 1, 0, 0.509392,-0.000816997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615963,-0.0137505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653256,0.00680791) , 
3, 46.0869, 1, 0, 0.628727,-0.00285581) , 
6, 0.0208745, 1, 0, 0.530362,-0.00117525) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552728,0.00299875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385211,0.057876) , 
6, 0.01276, 1, 0, 0.465056,0.00261058) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678857,-0.017703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.200492,0.00990406) , 
4, 0.0104084, 1, 0, 0.318862,-0.000688785) , 
4, 0.00809371, 1, 0, 0.3637,0.000323146) , 
3, 88.0036, 1, 0, 0.498896,-0.000892358)    );
  // itree = 323
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.456346,-0.00759434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834249,-0.0143003) , 
7, 9.01716e-05, 1, 0, 0.536079,-0.00197248) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509624,-0.023257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507299,0.0049331) , 
4, 0.00580493, 1, 0, 0.507799,2.40875e-05) , 
3, 39.5114, 1, 0, 0.52185,-0.000967948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183727,0.0391684) , 
3, 138.312, 1, 0, 0.501464,-0.000601143)    );
  // itree = 324
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998782,0.0335547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806556,0.0190246) , 
2, 0.0233736, 1, 0, 0.94966,0.00259093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132523) , 
0, 0.0038848, 1, 0, 0.610851,0.00117083) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958262,-0.239651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725017,-0.00972284) , 
4, 0.00964967, 1, 0, 0.818649,-0.00455858) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.223944,-0.00937994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672883,0.00840921) , 
6, 0.0208777, 1, 0, 0.329321,-0.00030422) , 
2, 0.0237994, 1, 0, 0.423237,-0.00112075) , 
4, 0.00812304, 1, 0, 0.497039,-0.000219309)    );
  // itree = 325
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922913,0.0144251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833977,0.0773235) , 
2, 0.02384, 1, 0, 0.914257,0.00149445) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.754586,-0.0349031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793332,0.0234567) , 
2, 0.0363857, 1, 0, 0.776061,-0.00292672) , 
2, 0.0294713, 1, 0, 0.886069,0.00059265) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861111,-0.00516772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00102258,-0.00277653) , 
0, 0.00235034, 1, 0, 0.171018,-0.000780271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49102,-0.0141202) , 
6, 0.0231928, 1, 0, 0.194851,-0.00126596) , 
2, 0.0476103, 1, 0, 0.495133,-0.000458534)    );
  // itree = 326
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553849,-0.0164661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.88431,0.00643192) , 
7, 7.07747e-05, 1, 0, 0.648038,-0.000961228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867749,-0.0144129) , 
7, 0.000120366, 1, 0, 0.662284,-0.00150963) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762042,0.106651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701973,0.0210882) , 
4, 0.0118602, 1, 0, 0.730062,0.00608759) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.015315) , 
6, 0.0127701, 1, 0, 0,-0.000957619) , 
4, 0.0122076, 1, 0, 0.136148,0.000356227) , 
4, 0.0115996, 1, 0, 0.504302,-0.000949369)    );
  // itree = 327
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966112,0.0253349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925403,-0.0454037) , 
2, 0.020377, 1, 0, 0.962444,0.000538377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467992,-0.0540318) , 
4, 0.0115063, 1, 0, 0.918583,-1.44741e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868113,-0.0288821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951489,-0.0115672) , 
4, 0.00842869, 1, 0, 0.926527,-0.00696977) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0010076,0.00161422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00179172,-0.0105746) , 
6, 0.01739, 1, 0, 0.0012175,-0.000433083) , 
0, 0.00235174, 1, 0, 0.305521,-0.00258278) , 
2, 0.0238008, 1, 0, 0.497603,-0.00177809)    );
  // itree = 328
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96892,-0.00357751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593344,-0.0443832) , 
4, 0.0103916, 1, 0, 0.920051,-0.00153856) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0501726,-0.0121155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.322686,0.00703816) , 
4, 0.00579437, 1, 0, 0.280843,0.000349019) , 
2, 0.0238052, 1, 0, 0.481215,-0.000242679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642907,0.000571468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646759,-0.018841) , 
1, 1.06907, 1, 0, 0.644777,-0.0047657) , 
6, 0.0231935, 1, 0, 0.491702,-0.000532668)    );
  // itree = 329
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976598,0.010635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00180437,-0.0331884) , 
0, 0.00175113, 1, 0, 0.649394,-0.00176231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940923,0.0128099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.84054e-05,-0.0118647) , 
0, 0.00470304, 1, 0, 0.329244,0.000698099) , 
5, 0.00871643, 1, 0, 0.484401,-0.000494312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597957,-0.0450254) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66947,0.0112797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637383,-0.00119823) , 
1, 1.06396, 1, 0, 0.648051,0.00115204) , 
6, 0.0229217, 1, 0, 0.62959,-0.00327313) , 
6, 0.0220346, 1, 0, 0.502067,-0.000832424)    );
  // itree = 330
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671869,-0.00275043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768858,0.030428) , 
5, 0.00986053, 1, 0, 0.686285,0.000345827) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.106997,-0.026627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131034) , 
0, 0.0282065, 1, 0, 0.0236242,-0.00155116) , 
5, 0.0108978, 1, 0, 0.478718,-0.000248372) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939266,0.028654) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.484306,-0.0212116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438616,-0.0058375) , 
1, 1.09598, 1, 0, 0.465032,-0.00760433) , 
2, 0.0476212, 1, 0, 0.621686,-0.00428196) , 
6, 0.0220342, 1, 0, 0.495719,-0.000728019)    );
  // itree = 331
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96549,0.020526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317143,-0.0137425) , 
2, 0.0237994, 1, 0, 0.626507,-0.00178674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721446,-0.0277191) , 
4, 0.00883961, 1, 0, 0.633807,-0.00238902) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774311,0.0723516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781201,-0.0451859) , 
2, 0.00905645, 1, 0, 0.778622,-0.00413163) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600912,0.0210178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0148401,-0.0109096) , 
2, 0.137126, 1, 0, 0.287861,6.014e-05) , 
2, 0.0237979, 1, 0, 0.36392,-0.000589507) , 
4, 0.00928143, 1, 0, 0.497505,-0.00148021)    );
  // itree = 332
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247044,-0.0419544) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81467,0.0255556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0116495,-0.00869591) , 
2, 0.0714068, 1, 0, 0.437964,0.000419069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.393898,-0.030426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720866,-0.000685504) , 
4, 0.00925525, 1, 0, 0.634836,-0.00156279) , 
6, 0.0173962, 1, 0, 0.510518,-0.000311311) , 
5, 0.00226254, 1, 0, 0.498807,-0.000583512)    );
  // itree = 333
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520089,-0.00620247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537383,0.045051) , 
3, 3.5978, 1, 0, 0.532208,0.00122943) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648502,-0.0153203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.325887,-2.56434e-05) , 
5, 0.00855957, 1, 0, 0.473252,-0.00097924) , 
3, 12.5882, 1, 0, 0.482639,-0.00062755) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615593,0.0517917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607376,-0.0358353) , 
6, 0.0225539, 1, 0, 0.610887,-0.00790476) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67312,0.0214735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619191,-0.0100592) , 
3, 49.7289, 1, 0, 0.647113,-0.000800111) , 
6, 0.0232487, 1, 0, 0.629747,-0.00420593) , 
6, 0.0220335, 1, 0, 0.500639,-0.00106539)    );
  // itree = 334
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908933,-0.0119108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382699,0.00531483) , 
2, 0.0339301, 1, 0, 0.662492,1.82086e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898697,3.46197e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678753,0.0561555) , 
2, 0.0896915, 1, 0, 0.832779,0.00459272) , 
6, 0.0220335, 1, 0, 0.683541,0.000583641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000705059,-0.0123508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000219859,-0.00472386) , 
0, 0.0258956, 1, 0, 0.000406228,-0.0012386) , 
2, 0.238066, 1, 0, 0.507037,0.000112821)    );
  // itree = 335
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.424059,0.00360013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.569278,-0.0534038) , 
6, 0.0160908, 1, 0, 0.435377,-0.000534302) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635386,0.0434275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629405,0.0161766) , 
6, 0.0174641, 1, 0, 0.63026,0.00271774) , 
6, 0.0168958, 1, 0, 0.485445,0.000301184) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636766,-0.00508818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631886,0.033204) , 
1, 1.14061, 1, 0, 0.635849,-0.000359373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646424,-0.0362944) , 
1, 1.17089, 1, 0, 0.637728,-0.00359463) , 
6, 0.0208745, 1, 0, 0.512205,-0.000383413)    );
  // itree = 336
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966683,0.00598546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567565,-0.144554) , 
5, 0.0112697, 1, 0, 0.928211,-0.00040099) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800668,0.0636234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5726,0.00177098) , 
2, 0.0501665, 1, 0, 0.679316,0.0020377) , 
2, 0.0226469, 1, 0, 0.801402,0.000841491) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.137602,-0.00703818) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000338774,0.000833871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131064) , 
6, 0.00695832, 1, 0, 0.000107356,-0.0002761) , 
0, 0.00938934, 1, 0, 0.0212186,-0.00107812) , 
2, 0.118989, 1, 0, 0.500545,0.000101246)    );
  // itree = 337
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.462436,0.0165943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407209,-0.00725103) , 
3, 12.5856, 1, 0, 0.416282,-0.000391098) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584624,0.0796412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620302,0.00313275) , 
6, 0.0174342, 1, 0, 0.613454,0.00190533) , 
6, 0.0168973, 1, 0, 0.452705,3.31157e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686841,0.0446737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743939,-0.00601397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400573,-0.0223117) , 
4, 0.0115673, 1, 0, 0.649999,-0.00299769) , 
1, 1.0657, 1, 0, 0.654289,-0.00179703) , 
6, 0.0197151, 1, 0, 0.499931,-0.000395638)    );
  // itree = 338
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993808,0.0422445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443588,0.0225934) , 
2, 0.0230858, 1, 0, 0.840769,0.00209457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0159305) , 
5, 0.0073015, 1, 0, 0.567045,0.00079913) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722146,-0.00607194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659538,-0.0193717) , 
4, 0.0107087, 1, 0, 0.716222,-0.00198964) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.699043,0.0171724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0148139) , 
4, 0.0123658, 1, 0, 0.202725,0.000254877) , 
4, 0.0111031, 1, 0, 0.461363,-0.000875645) , 
4, 0.0069622, 1, 0, 0.493171,-0.000371582)    );
  // itree = 339
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.314855,-0.0221795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417565,-0.0051425) , 
4, 0.00232777, 1, 0, 0.411406,-0.000605258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610066,0.0655098) , 
6, 0.0165651, 1, 0, 0.424472,-8.22704e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911853,-0.00107966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880549,-0.0638262) , 
3, 23.7674, 1, 0, 0.890204,-0.00588414) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.213212,0.0123772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.235649,-0.0136465) , 
3, 75.6879, 1, 0, 0.221684,-0.000924558) , 
2, 0.0951017, 1, 0, 0.634001,-0.00398344) , 
6, 0.0173951, 1, 0, 0.498689,-0.00146409)    );
  // itree = 340
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908618,0.00386412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904507,-0.0808639) , 
6, 0.0220376, 1, 0, 0.908279,-0.000693945) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648594,-0.0378172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797511,-0.0159061) , 
2, 0.0362723, 1, 0, 0.742301,-0.0103651) , 
2, 0.0317383, 1, 0, 0.878331,-0.00243895) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.177681,-0.00931164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.57183e-05,-0.0107341) , 
0, 0.0117576, 1, 0, 0.027411,-0.00112865) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872081,0.00979027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000140762,-0.0107755) , 
0, 0.00467623, 1, 0, 0.428178,0.00186737) , 
6, 0.0162363, 1, 0, 0.202505,0.000180304) , 
2, 0.0476103, 1, 0, 0.503828,-0.000987515)    );
  // itree = 341
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.290521,-0.0301293) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943879,0.0275114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.1787e-05,-0.0105416) , 
0, 0.00470304, 1, 0, 0.178709,6.93786e-06) , 
5, 0.00225059, 1, 0, 0.187497,-0.000310825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809642,-0.0358347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834895,-0.0134233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811166,0.00122991) , 
3, 48.1412, 1, 0, 0.824753,-0.00204947) , 
7, 3.48397e-05, 1, 0, 0.823815,-0.00258479) , 
7, 2.91574e-05, 1, 0, 0.502936,-0.00143809)    );
  // itree = 342
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956318,-0.00131052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493172,-0.0286637) , 
4, 0.0114696, 1, 0, 0.910372,-0.000701346) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671207,0.0265038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744007,0.0174727) , 
4, 0.00827876, 1, 0, 0.722228,0.00308795) , 
2, 0.0340053, 1, 0, 0.856917,0.000375247) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.105793,-0.00072716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0824737,-0.0131551) , 
3, 113.389, 1, 0, 0.102184,-0.000586275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407197,-0.00906077) , 
6, 0.0231927, 1, 0, 0.126704,-0.000982976) , 
2, 0.0714198, 1, 0, 0.503442,-0.00028223)    );
  // itree = 343
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.276344,-0.0381966) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524085,-0.00862133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438299,0.00512464) , 
3, 50.3893, 1, 0, 0.488212,-0.000405522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615713,0.0154972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651815,-0.0165327) , 
6, 0.0225886, 1, 0, 0.643723,-0.00355154) , 
6, 0.0220359, 1, 0, 0.507292,-0.000791501) , 
5, 0.00231262, 1, 0, 0.497353,-0.00103132)    );
  // itree = 344
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.430821,-0.0030176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626321,0.0669158) , 
6, 0.0169872, 1, 0, 0.443712,0.000104126) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629843,-0.00160178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586882,-0.0171124) , 
1, 1.342, 1, 0, 0.622532,-0.00162439) , 
6, 0.0178373, 1, 0, 0.48715,-0.000315757) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947192,-0.0295782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700335,0.0416249) , 
0, 0.00126404, 1, 0, 0.807827,-0.00235194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375993,-0.0382993) , 
5, 0.0119217, 1, 0, 0.621256,-0.00710244) , 
6, 0.0220339, 1, 0, 0.503704,-0.00115348)    );
  // itree = 345
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.228927,-0.00029109) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813583,-0.034032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850409,-0.00518008) , 
5, 0.00915933, 1, 0, 0.829781,-0.00562379) , 
7, 3.20588e-05, 1, 0, 0.53592,-0.00287945) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914599,0.0121345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931597,0.0455314) , 
6, 0.0162824, 1, 0, 0.920275,0.00130188) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.207614,-0.00184671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556012,-0.00879146) , 
6, 0.0197138, 1, 0, 0.301008,-0.00085592) , 
2, 0.0237994, 1, 0, 0.486377,-0.000210013) , 
3, 12.5856, 1, 0, 0.494056,-0.000623806)    );
  // itree = 346
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935663,-0.0285349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916877,0.0258983) , 
3, 12.0841, 1, 0, 0.920248,0.000207721) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474272,-0.0367468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738339,-0.0148948) , 
4, 0.00693144, 1, 0, 0.695927,-0.00691275) , 
2, 0.0272042, 1, 0, 0.825042,-0.00281434) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481039,0.0153056) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0205021,-0.0100267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.032407,0.00750519) , 
5, 0.0113809, 1, 0, 0.0275654,-0.000345803) , 
2, 0.114589, 1, 0, 0.0697544,9.41746e-05) , 
2, 0.0952265, 1, 0, 0.505352,-0.00158325)    );
  // itree = 347
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976841,0.0310145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915515,-0.0206737) , 
0, 0.00167541, 1, 0, 0.969449,0.00115169) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000589919,-0.00526842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00131834,-0.00943304) , 
6, 0.0140762, 1, 0, 0.000799051,-0.000543045) , 
0, 0.00235174, 1, 0, 0.453465,0.00024893) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670254,-0.00534856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673331,0.0356174) , 
3, 9.61344, 1, 0, 0.672117,0.00125141) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655013,-0.0378275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585414,-0.00151055) , 
3, 59.482, 1, 0, 0.617147,-0.0044774) , 
3, 25.2334, 1, 0, 0.633026,-0.00282247) , 
6, 0.0197185, 1, 0, 0.496212,-0.000482267)    );
  // itree = 348
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980105,0.00895328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00294157,-0.0178341) , 
0, 0.00176196, 1, 0, 0.629845,-0.00106374) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979107,0.0193761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000676559,-0.00766657) , 
0, 0.00235152, 1, 0, 0.357186,0.000458084) , 
4, 0.00695957, 1, 0, 0.457035,-9.92174e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969181,-0.0062596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441944,-0.0262766) , 
4, 0.0110133, 1, 0, 0.764652,-0.00547602) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.381763,-0.00417815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700138,0.0343231) , 
6, 0.0236909, 1, 0, 0.475799,0.00145226) , 
5, 0.0114475, 1, 0, 0.630082,-0.0022483) , 
6, 0.0197143, 1, 0, 0.498414,-0.000613104)    );
  // itree = 349
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645245,-0.0119317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743798,-0.0459931) , 
5, 0.00829663, 1, 0, 0.653232,-0.00298555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683119,0.0171138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.046862,-0.00775783) , 
2, 0.0951831, 1, 0, 0.323666,0.000430973) , 
5, 0.00871643, 1, 0, 0.481986,-0.00121028) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61937,0.00436382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579382,-0.0637054) , 
6, 0.022559, 1, 0, 0.598475,-0.0138983) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664624,0.015379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632964,-0.0111763) , 
3, 57.0958, 1, 0, 0.652133,-0.000129934) , 
6, 0.0231383, 1, 0, 0.628492,-0.00619617) , 
6, 0.0220335, 1, 0, 0.499879,-0.00181921)    );
  // itree = 350
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928995,0.0140784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922071,-0.0338351) , 
6, 0.0155029, 1, 0, 0.926485,-0.00145107) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64749,0.0189703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0124477,-0.00720219) , 
2, 0.114479, 1, 0, 0.283532,0.000815783) , 
2, 0.0238023, 1, 0, 0.486676,9.95599e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.599088,0.00297934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6361,-0.0203037) , 
3, 47.2931, 1, 0, 0.616051,-0.00513086) , 
6, 0.0231937, 1, 0, 0.495181,-0.00024429)    );
  // itree = 351
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.088492,-0.050709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495842,-0.0039678) , 
6, 0.00285932, 1, 0, 0.460737,-0.000644565) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638924,-0.0361334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688604,0.00298576) , 
1, 1.22408, 1, 0, 0.664956,-0.00725076) , 
6, 0.0198829, 1, 0, 0.473855,-0.0010689) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654319,0.0165183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616165,-0.0156052) , 
1, 1.06935, 1, 0, 0.629655,-0.00275898) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.699228,0.0382914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562018,0.00850052) , 
3, 60.9818, 1, 0, 0.648641,0.00515006) , 
1, 1.11883, 1, 0, 0.638241,0.000817911) , 
6, 0.0208771, 1, 0, 0.50201,-0.000745743)    );
  // itree = 352
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67183,-0.00102666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899334,0.0355609) , 
7, 5.92443e-05, 1, 0, 0.691157,0.000467033) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913304,-0.0197107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130981) , 
0, 0.00470348, 1, 0, 0.123449,-0.00076717) , 
4, 0.00812232, 1, 0, 0.431649,-9.71406e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913095,0.0228518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930493,-0.0314981) , 
1, 1.09856, 1, 0, 0.927219,-0.00564447) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.436735,0.00495286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506966,-0.0162547) , 
6, 0.0236898, 1, 0, 0.445315,-0.000312086) , 
2, 0.0475784, 1, 0, 0.633465,-0.00239401) , 
6, 0.0173982, 1, 0, 0.504033,-0.00092095)    );
  // itree = 353
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673185,0.00297702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749695,0.0449731) , 
6, 0.0231932, 1, 0, 0.67826,0.00068449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0340191) , 
4, 0.0127361, 1, 0, 0.537813,0.000255922) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864826,0.0262702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648224,-0.0251946) , 
2, 0.0316976, 1, 0, 0.769965,-0.00542762) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620045,0.0146761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131118) , 
0, 0.00469467, 1, 0, 0.0984,0.00144298) , 
2, 0.0951756, 1, 0, 0.437576,-0.00202703) , 
3, 62.9865, 1, 0, 0.505246,-0.000485818)    );
  // itree = 354
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955721,0.0645038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899356,-0.0607298) , 
2, 0.00452823, 1, 0, 0.919236,-0.00123565) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910312,0.00996997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00122172,-0.00766073) , 
0, 0.00235054, 1, 0, 0.220653,0.000177497) , 
2, 0.0238023, 1, 0, 0.456813,-0.000300223) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959071,-0.103981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920681,-0.00214539) , 
3, 35.6963, 1, 0, 0.939573,-0.00915788) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902491,0.0308786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391056,-0.0106559) , 
2, 0.0692182, 1, 0, 0.558861,-0.0018539) , 
2, 0.0238793, 1, 0, 0.640954,-0.00342887) , 
6, 0.0197143, 1, 0, 0.500664,-0.00104527)    );
  // itree = 355
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.266283,-0.0421364) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.38557,0.00879617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.661012,-0.00916225) , 
6, 0.0127585, 1, 0, 0.548921,-0.00118741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968405,0.0233822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00136686,-0.0103715) , 
0, 0.00235038, 1, 0, 0.44444,0.000499866) , 
3, 50.4575, 1, 0, 0.503579,-0.000455179) , 
5, 0.00226923, 1, 0, 0.494049,-0.000686691)    );
  // itree = 356
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.414003,0.00180255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346167,-0.0602215) , 
3, 76.7191, 1, 0, 0.405951,-0.000283455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.18376,0.0222231) , 
3, 100.709, 1, 0, 0.375345,3.77637e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639242,0.00878358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61728,-0.0132062) , 
1, 1.10293, 1, 0, 0.620832,-0.00184764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544357,-0.04066) , 
1, 1.65625, 1, 0, 0.614551,-0.00271828) , 
6, 0.0139162, 1, 0, 0.50297,-0.00144854)    );
  // itree = 357
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817372,0.00543081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983039,0.0739705) , 
6, 0.0158345, 1, 0, 0.85688,0.00168592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000338394,-0.0155798) , 
4, 0.00924882, 1, 0, 0.671083,0.000929608) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724241,-0.00374148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643407,-0.043049) , 
3, 48.1885, 1, 0, 0.688354,-0.00290295) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0290121,-0.00836113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376182,0.0102907) , 
6, 0.0208773, 1, 0, 0.0979549,0.000206686) , 
2, 0.0952595, 1, 0, 0.361318,-0.00118045) , 
5, 0.00924799, 1, 0, 0.509028,-0.000174283)    );
  // itree = 358
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.682846,-0.00909196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5408,-0.01833) , 
6, 0.0208729, 1, 0, 0.672049,-0.00191084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764448,0.0390612) , 
5, 0.0108387, 1, 0, 0.677492,-0.00154164) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982223,0.120434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921308,-0.0185553) , 
5, 0.011834, 1, 0, 0.954903,0.00357687) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130989) , 
2, 0.167033, 1, 0, 0,-0.000471003) , 
0, 0.00470304, 1, 0, 0.162498,0.000217833) , 
5, 0.0113809, 1, 0, 0.499879,-0.000934829)    );
  // itree = 359
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0760983,-0.0348532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549112,-0.0146008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478282,0.0101361) , 
3, 25.1948, 1, 0, 0.500771,-0.000126977) , 
6, 0.00282223, 1, 0, 0.462879,-0.000446135) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710174,0.0164712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63301,-0.00326806) , 
4, 0.0112523, 1, 0, 0.67882,0.00124617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792964,-0.00339234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.402102,-0.0188009) , 
5, 0.0115876, 1, 0, 0.621607,-0.00310218) , 
3, 25.1455, 1, 0, 0.638525,-0.00181639) , 
6, 0.0197155, 1, 0, 0.504665,-0.000772117)    );
  // itree = 360
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.272756,-0.0278547) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816063,0.0227995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0165125,-0.00921442) , 
2, 0.0714198, 1, 0, 0.410738,0.000248929) , 
5, 0.00231262, 1, 0, 0.403844,-4.30751e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979664,-7.32251e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770146,0.0417292) , 
0, 0.00179726, 1, 0, 0.863737,0.00332905) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84957,-0.0435247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852645,0.000799793) , 
3, 66.7766, 1, 0, 0.850803,-0.0065084) , 
3, 23.7684, 1, 0, 0.854542,-0.00366507) , 
7, 8.53042e-05, 1, 0, 0.503095,-0.000840697)    );
  // itree = 361
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9485,0.0140014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.276829,-0.099769) , 
5, 0.00904847, 1, 0, 0.860627,-6.91886e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983257,0.0148251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993014,0.0726125) , 
4, 0.0105719, 1, 0, 0.988201,0.00326037) , 
7, 8.70455e-05, 1, 0, 0.889107,0.000674116) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69187,-0.00136515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660041,-0.0438528) , 
2, 0.0589242, 1, 0, 0.678795,-0.00705321) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.401954,0.0072741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00295942,-0.0085505) , 
2, 0.151257, 1, 0, 0.127106,-7.50535e-05) , 
2, 0.0692052, 1, 0, 0.197121,-0.000960653) , 
2, 0.0476132, 1, 0, 0.493151,-0.000261304)    );
  // itree = 362
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977549,0.0178653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795704,0.0322208) , 
4, 0.00808453, 1, 0, 0.92541,0.00105486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849606,-0.00747996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131094) , 
0, 0.00470304, 1, 0, 0.245481,-0.00126502) , 
2, 0.0238008, 1, 0, 0.470113,-0.000498589) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676384,-0.0116268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594164,-0.050391) , 
1, 1.11893, 1, 0, 0.63557,-0.0130001) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876609,-0.0234634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.307737,0.00320141) , 
2, 0.0953645, 1, 0, 0.625962,-0.0013053) , 
3, 25.2314, 1, 0, 0.628766,-0.00471814) , 
6, 0.0208745, 1, 0, 0.497731,-0.00123312)    );
  // itree = 363
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997685,0.030676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736505,0.0149637) , 
2, 0.0231498, 1, 0, 0.947604,0.00187611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133009) , 
0, 0.00372334, 1, 0, 0.574101,0.000739381) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970029,0.00776492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502943,-0.0118994) , 
2, 0.0237826, 1, 0, 0.705204,-0.00350849) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817313,-0.0160995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260319,0.0026431) , 
2, 0.047608, 1, 0, 0.446794,-0.000367728) , 
4, 0.00777755, 1, 0, 0.470085,-0.000650815) , 
4, 0.00694985, 1, 0, 0.501978,-0.000224555)    );
  // itree = 364
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9271,-0.0115414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887184,-0.0492127) , 
6, 0.0198824, 1, 0, 0.921867,-0.00190968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.307266,-0.0102575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288356,0.00448222) , 
3, 25.1955, 1, 0, 0.293921,-0.000200097) , 
2, 0.0238066, 1, 0, 0.497803,-0.000755168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630942,-0.00779359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641483,-0.0219011) , 
6, 0.0238561, 1, 0, 0.635171,-0.00506161) , 
6, 0.0231932, 1, 0, 0.506815,-0.00103769)    );
  // itree = 365
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.265987,-0.0286645) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814221,0.00847337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0352486,-0.00589425) , 
2, 0.0951974, 1, 0, 0.488255,0.000146399) , 
5, 0.00213226, 1, 0, 0.4784,-1.27029e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87639,-0.0211988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871443,-0.0296605) , 
3, 33.3405, 1, 0, 0.873523,-0.00876818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316757,0.00205034) , 
2, 0.0952595, 1, 0, 0.628923,-0.00457751) , 
6, 0.0220339, 1, 0, 0.49625,-0.000554026)    );
  // itree = 366
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592897,-0.01163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195429,0.000190679) , 
5, 0.00655838, 1, 0, 0.343961,-0.000409205) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941746,0.0319264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821233,0.00214343) , 
6, 0.0173613, 1, 0, 0.846723,0.00153094) , 
7, 6.30911e-05, 1, 0, 0.475515,9.846e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511051,-0.0183758) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.465885,-0.0134046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806719,0.0160887) , 
4, 0.0115681, 1, 0, 0.649736,-0.00027975) , 
5, 0.0112593, 1, 0, 0.619984,-0.00195578) , 
6, 0.0220339, 1, 0, 0.493274,-0.00015406)    );
  // itree = 367
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922223,0.0434168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85351,-0.0058696) , 
2, 0.0135847, 1, 0, 0.90426,0.000561928) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680494,-0.0217935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.067867,-0.00332929) , 
2, 0.0464652, 1, 0, 0.17246,-0.000814577) , 
2, 0.023795, 1, 0, 0.408056,-0.000371424) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917102,0.0250244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897298,0.0559439) , 
6, 0.0207076, 1, 0, 0.911727,0.00465488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.756324,-0.0303464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856152,0.0177716) , 
4, 0.0112288, 1, 0, 0.820149,-0.00187523) , 
6, 0.0213586, 1, 0, 0.86301,0.00118105) , 
7, 8.67922e-05, 1, 0, 0.504779,-4.13692e-05)    );
  // itree = 368
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623715,-0.00403261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815467,-0.017134) , 
7, 5.65641e-05, 1, 0, 0.659614,-0.00122335) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509901,0.0191534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.60598e-05,-0.0225697) , 
4, 0.0104358, 1, 0, 0.293258,0.000362466) , 
5, 0.00853144, 1, 0, 0.472406,-0.000412998) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537265,0.011123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946711,0.0711415) , 
4, 0.0110481, 1, 0, 0.67177,0.00547414) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.376704,-0.0210699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791033,0.00183814) , 
6, 0.0236963, 1, 0, 0.540243,-0.00303043) , 
4, 0.0115992, 1, 0, 0.616877,0.00192475) , 
6, 0.0208739, 1, 0, 0.498188,4.19601e-06)    );
  // itree = 369
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.462007,0.0126714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433161,-0.0292876) , 
6, 0.0162296, 1, 0, 0.454957,-0.00079069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798871,0.00300814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884687,0.0386245) , 
5, 0.0103706, 1, 0, 0.850191,0.00425294) , 
7, 8.72358e-05, 1, 0, 0.540002,0.000294588) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991768,-0.00225697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846453,-0.0125992) , 
2, 0.023734, 1, 0, 0.917871,-0.0037922) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130982) , 
4, 0.0104122, 1, 0, 0,-0.000376979) , 
0, 0.00469537, 1, 0, 0.463789,-0.00210265) , 
3, 37.8437, 1, 0, 0.497639,-0.00103792)    );
  // itree = 370
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65293,-0.0069464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779353,-0.0230581) , 
6, 0.0162019, 1, 0, 0.70054,-0.00329206) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571226,0.0323453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0745747,-0.00842855) , 
2, 0.0716139, 1, 0, 0.211992,0.000144948) , 
5, 0.0110468, 1, 0, 0.538618,-0.00215291) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83368,-0.0152963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0841361,0.0049375) , 
2, 0.0714198, 1, 0, 0.462146,-0.000508365) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592497,0.00431145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638481,0.0300079) , 
6, 0.0228086, 1, 0, 0.624404,0.00376317) , 
6, 0.0220338, 1, 0, 0.482186,1.92014e-05) , 
3, 25.2289, 1, 0, 0.500078,-0.000669473)    );
  // itree = 371
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953177,-0.0202509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00051756,-0.00477079) , 
0, 0.00235174, 1, 0, 0.199587,-0.000627682) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995463,0.0485998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726565,0.0244108) , 
2, 0.0234869, 1, 0, 0.881399,0.00271552) , 
7, 2.54252e-05, 1, 0, 0.432896,0.000516324) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658272,-0.00886508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642352,0.0132306) , 
6, 0.0233596, 1, 0, 0.655774,-0.0015759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392048,-0.0138734) , 
3, 113.53, 1, 0, 0.626628,-0.00233292) , 
6, 0.0173982, 1, 0, 0.502346,-0.00050508)    );
  // itree = 372
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957848,0.0368342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0272661,-0.0115773) , 
2, 0.0238052, 1, 0, 0.517756,-0.000455224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66324,-0.0349314) , 
4, 0.00524931, 1, 0, 0.545419,-0.00144068) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975403,0.0197974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954887,-0.00387769) , 
4, 0.0106881, 1, 0, 0.970486,0.00135408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00149415,-0.015011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000852046,0.0119988) , 
2, 0.119104, 1, 0, 0.00102429,-0.00072976) , 
0, 0.00235174, 1, 0, 0.488577,0.000318225) , 
4, 0.00580108, 1, 0, 0.500931,-6.4066e-05)    );
  // itree = 373
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.496544,-0.0111321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442978,0.00412302) , 
3, 41.9458, 1, 0, 0.471372,-0.000507377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147502,0.0369769) , 
3, 125.855, 1, 0, 0.445068,-0.00024388) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671755,0.00481605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648557,-0.0165938) , 
6, 0.0221482, 1, 0, 0.660441,-0.00173049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.427199,-0.0191481) , 
3, 109.766, 1, 0, 0.632544,-0.00292449) , 
6, 0.0197142, 1, 0, 0.489087,-0.000873276)    );
  // itree = 374
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679575,0.0125783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969609,0.0294026) , 
7, 5.16902e-05, 1, 0, 0.802958,0.0015761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0968641,-0.00872485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130967) , 
0, 0.0117517, 1, 0, 0.0181808,-0.00112624) , 
2, 0.0952207, 1, 0, 0.478137,0.0004576) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923451,0.0308394) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839013,-0.0338133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.322072,8.71101e-05) , 
2, 0.0917707, 1, 0, 0.571348,-0.00351737) , 
2, 0.0237892, 1, 0, 0.64501,-0.00197579) , 
6, 0.0208745, 1, 0, 0.507132,3.4788e-05)    );
  // itree = 375
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81082,0.0349973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934222,0.0177072) , 
6, 0.00587529, 1, 0, 0.922095,0.000713547) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981955,0.0164978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0876735) , 
2, 0.0113691, 1, 0, 0.991,0.00355531) , 
7, 9.45785e-05, 1, 0, 0.933422,0.00118072) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815167,0.0215431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.785179,-0.0461737) , 
3, 36.2748, 1, 0, 0.798841,-0.00475653) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.138287,0.000425955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470089,-0.00650373) , 
6, 0.0208734, 1, 0, 0.208686,-0.000556508) , 
2, 0.0465044, 1, 0, 0.314506,-0.00130961) , 
2, 0.0238052, 1, 0, 0.507634,-0.000532528)    );
  // itree = 376
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.487986,0.043774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456079,-0.00550822) , 
5, 0.00419153, 1, 0, 0.460438,-0.000202481) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6562,-0.0718567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645729,-0.0289627) , 
6, 0.0203953, 1, 0, 0.651108,-0.00933809) , 
6, 0.0198748, 1, 0, 0.472739,-0.000791834) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622158,-0.0116294) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630986,0.0241594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644088,-0.00672106) , 
6, 0.0233603, 1, 0, 0.6351,0.00222293) , 
3, 12.577, 1, 0, 0.633172,0.00130316) , 
6, 0.0208739, 1, 0, 0.501101,-0.000421469)    );
  // itree = 377
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861863,0.000999315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.102824,-0.0336811) , 
5, 0.00686656, 1, 0, 0.665329,-0.00134349) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794459,0.0241547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0151272,-0.0162558) , 
4, 0.00862192, 1, 0, 0.274828,0.000313357) , 
4, 0.0069639, 1, 0, 0.435903,-0.000370066) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915757,-0.0374128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903897,-0.000338878) , 
6, 0.0207124, 1, 0, 0.910112,-0.00482239) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.503743,-0.0148154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41816,0.00957415) , 
1, 1.11653, 1, 0, 0.44234,-0.000688757) , 
2, 0.0475958, 1, 0, 0.628618,-0.00233487) , 
6, 0.0173969, 1, 0, 0.505447,-0.00107909)    );
  // itree = 378
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.534985,0.000178098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507156,-0.0104705) , 
3, 33.5577, 1, 0, 0.520215,-0.000735103) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614289,-0.0431394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650146,0.0131369) , 
6, 0.0229217, 1, 0, 0.637443,-0.00353537) , 
6, 0.0220342, 1, 0, 0.534438,-0.00107486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.406225,0.0233504) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12626,-0.0136068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614164,0.0155337) , 
6, 0.019726, 1, 0, 0.271943,0.000170837) , 
4, 0.00811879, 1, 0, 0.312456,0.00101202) , 
3, 100.685, 1, 0, 0.50362,-0.000785133)    );
  // itree = 379
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.269253,0.0408574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488162,-0.00332182) , 
4, 0.0023272, 1, 0, 0.476672,-0.000174908) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793334,0.0296736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.278976,-0.0114034) , 
5, 0.0114349, 1, 0, 0.601991,0.00213527) , 
6, 0.0209832, 1, 0, 0.49085,8.64568e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6795,0.0186939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605923,-0.0126608) , 
3, 49.6935, 1, 0, 0.643455,-0.00252831) , 
6, 0.0231935, 1, 0, 0.500881,-8.54102e-05)    );
  // itree = 380
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.27398,0.105542) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627546,-0.007178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722987,-0.0296035) , 
4, 0.00883671, 1, 0, 0.63514,-0.00130376) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567332,0.00812904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000230807,-0.0153239) , 
2, 0.238049, 1, 0, 0.389476,0.000370995) , 
4, 0.00927985, 1, 0, 0.512487,-0.000467606) , 
5, 0.00236059, 1, 0, 0.501618,-0.000289197)    );
  // itree = 381
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779273,0.00327085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0008563,-0.0145316) , 
2, 0.0476103, 1, 0, 0.278511,-0.000485925) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893484,0.0238775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732374,-0.00966799) , 
5, 0.00931144, 1, 0, 0.861715,0.00136921) , 
7, 4.28384e-05, 1, 0, 0.456776,8.11254e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.728783,0.01817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557591,-0.0109435) , 
5, 0.0114832, 1, 0, 0.625428,-0.000150384) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695815,0.0156294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514849,-0.0337304) , 
4, 0.0104212, 1, 0, 0.624675,-0.00798227) , 
1, 1.17065, 1, 0, 0.625132,-0.00322524) , 
6, 0.0197143, 1, 0, 0.496732,-0.000703564)    );
  // itree = 382
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.288659,-0.0265177) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00519296,0.0259499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202361,-0.0121258) , 
6, 0.00464392, 1, 0, 0.161679,-0.000210065) , 
5, 0.00230089, 1, 0, 0.171895,-0.000381986) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967775,-0.0212728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977922,-0.00362834) , 
3, 23.7659, 1, 0, 0.97442,-0.00177917) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891062,-0.0189217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431445,-0.00656823) , 
0, 0.00124068, 1, 0, 0.578587,-0.00641267) , 
2, 0.0475818, 1, 0, 0.820275,-0.00358355) , 
7, 2.55037e-05, 1, 0, 0.501191,-0.00200798)    );
  // itree = 383
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968638,0.00304998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954078,-0.0317621) , 
5, 0.0112327, 1, 0, 0.96765,-0.000628083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924561,-0.042658) , 
0, 0.00212506, 1, 0, 0.96448,-0.00226297) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00292892,-0.00815725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00362537,0.047181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.19319e-05,-0.00891962) , 
0, 0.0202809, 1, 0, 0.00108143,0.000472968) , 
2, 0.142805, 1, 0, 0.00164554,-0.000101901) , 
0, 0.00235174, 1, 0, 0.499279,-0.00121883)    );
  // itree = 384
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973583,-0.00372689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00217653,-0.0256406) , 
0, 0.00175113, 1, 0, 0.656037,-0.00146749) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502999,0.0184205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0271784) , 
4, 0.0104412, 1, 0, 0.287546,0.000284491) , 
5, 0.00855139, 1, 0, 0.469181,-0.000579084) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671924,-0.0216116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606367,-0.00637307) , 
3, 37.9098, 1, 0, 0.634307,-0.00740031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435903,-0.00727333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744496,0.0148334) , 
4, 0.011548, 1, 0, 0.637273,0.000854524) , 
6, 0.0226987, 1, 0, 0.635831,-0.00315977) , 
6, 0.0208775, 1, 0, 0.498043,-0.00102603)    );
  // itree = 385
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535952,-0.0152359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525077,0.0013239) , 
3, 14.3895, 1, 0, 0.528466,-0.000581825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937972,0.0115516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131213) , 
0, 0.00470348, 1, 0, 0.438842,0.0006025) , 
3, 50.3574, 1, 0, 0.49051,-8.02683e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659439,0.00353209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596482,-0.0166888) , 
3, 49.6771, 1, 0, 0.630028,-0.00565357) , 
6, 0.0231932, 1, 0, 0.499524,-0.00044034)    );
  // itree = 386
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.46345,0.00490836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617568,-0.013144) , 
6, 0.0158871, 1, 0, 0.51508,-0.000742497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654617,-0.0209867) , 
6, 0.0208739, 1, 0, 0.536848,-0.00232978) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.453304,0.000192341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624357,-0.0193228) , 
6, 0.0209836, 1, 0, 0.463533,-0.000383195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658971,0.0448884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551976,0.00641777) , 
3, 69.1864, 1, 0, 0.61166,0.00428429) , 
6, 0.0220339, 1, 0, 0.482303,0.000208257) , 
3, 25.1963, 1, 0, 0.499243,-0.00057999)    );
  // itree = 387
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.404774,-0.00404124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589573,-0.0390529) , 
6, 0.0160912, 1, 0, 0.41857,-0.000566309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631028,0.0232309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558729,-0.00635358) , 
3, 49.5306, 1, 0, 0.599165,0.00105044) , 
6, 0.0168958, 1, 0, 0.464562,-0.000154573) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913001,0.0122498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867836,-0.0581223) , 
2, 0.0339472, 1, 0, 0.892864,-0.00644614) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.331534,-0.00618799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419183,0.00423153) , 
6, 0.0223657, 1, 0, 0.385279,-0.000437341) , 
2, 0.0713239, 1, 0, 0.627218,-0.00330142) , 
6, 0.0208744, 1, 0, 0.493402,-0.000712539)    );
  // itree = 388
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916899,-0.024765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936558,0.0912033) , 
6, 0.0208802, 1, 0, 0.919291,-0.000843732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607148,0.00197556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896396,-0.0368209) , 
6, 0.0173852, 1, 0, 0.734617,-0.00640434) , 
2, 0.0317383, 1, 0, 0.885326,-0.00186643) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722445,0.0230646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.286579,-0.0377823) , 
4, 0.0115671, 1, 0, 0.587019,0.00307869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0453732,0.00142605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.01488) , 
2, 0.352269, 1, 0, 0.0283154,-0.000461501) , 
2, 0.112279, 1, 0, 0.201929,0.00063859) , 
2, 0.0476132, 1, 0, 0.501658,-0.000460079)    );
  // itree = 389
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620184,-0.00345827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945462,0.0334893) , 
7, 4.26773e-05, 1, 0, 0.715817,0.000401734) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0157335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131007) , 
2, 0.214277, 1, 0, 0,-0.000597291) , 
4, 0.00812296, 1, 0, 0.420803,-1.00011e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615357,-0.00631505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60758,-0.0337639) , 
6, 0.0221778, 1, 0, 0.614712,-0.00201406) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.468245,-0.00106629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739482,0.0162753) , 
4, 0.0116105, 1, 0, 0.634163,0.00181013) , 
6, 0.0228071, 1, 0, 0.618504,-0.00126846) , 
6, 0.0162375, 1, 0, 0.505032,-0.000546157)    );
  // itree = 390
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628535,0.0121473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909678,0.0586985) , 
7, 8.50439e-05, 1, 0, 0.686068,0.00190285) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.130223,-0.0194054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239475,0.0292023) , 
4, 0.0115819, 1, 0, 0.18784,-0.00104666) , 
5, 0.0112706, 1, 0, 0.528559,0.000970401) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880948,0.0341103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706453,-0.0318999) , 
2, 0.0305786, 1, 0, 0.820709,-0.00246451) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0208475,-0.00130412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735864,0.0157007) , 
7, 8.68506e-05, 1, 0, 0.137173,0.000907591) , 
2, 0.0714068, 1, 0, 0.442064,-0.000596531) , 
3, 50.4579, 1, 0, 0.491819,0.000304822)    );
  // itree = 391
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647818,-0.00252939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554369,-0.0294986) , 
3, 62.0824, 1, 0, 0.621076,-0.00137062) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782078,0.02467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209279,-0.00483138) , 
4, 0.00755501, 1, 0, 0.358623,0.00037648) , 
4, 0.00579199, 1, 0, 0.436177,-0.000139783) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72028,0.00510758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430984,-0.0112471) , 
4, 0.0115783, 1, 0, 0.627099,-0.000350232) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550385,-0.0161907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558981,-0.0282053) , 
1, 1.39183, 1, 0, 0.553452,-0.00631955) , 
1, 1.3319, 1, 0, 0.612387,-0.0015427) , 
6, 0.0173962, 1, 0, 0.500007,-0.000647969)    );
  // itree = 392
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942881,0.00220065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110536,-0.00723404) , 
2, 0.0476103, 1, 0, 0.629249,-0.000628769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729478,-0.0436418) , 
4, 0.00883961, 1, 0, 0.637044,-0.000972682) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996851,0.0352337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00139123,-0.00938351) , 
0, 0.00235174, 1, 0, 0.645512,0.00175793) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000116759,-0.00515117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0260333,-0.0102223) , 
7, -0.000147365, 1, 0, 0.00961548,-0.00132109) , 
2, 0.142851, 1, 0, 0.357134,0.000361595) , 
4, 0.00928143, 1, 0, 0.494466,-0.00029304)    );
  // itree = 393
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.396834,-0.0119813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618702,0.0113855) , 
6, 0.0131418, 1, 0, 0.457544,-0.000327288) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630438,-0.0127226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626284,-0.0531483) , 
3, 30.5624, 1, 0, 0.629683,-0.00503088) , 
6, 0.0162375, 1, 0, 0.529269,-0.00228714) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.107924,0.00637214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863684,-0.0160836) , 
7, 1.61448e-05, 1, 0, 0.378868,-0.00102332) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857833,0.0319694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205033,-0.00213678) , 
2, 0.0951511, 1, 0, 0.593377,0.00109435) , 
6, 0.0162367, 1, 0, 0.472916,-9.48546e-05) , 
3, 37.766, 1, 0, 0.498468,-0.00108888)    );
  // itree = 394
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623583,-0.00947861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922255,-0.0210873) , 
7, 8.47711e-05, 1, 0, 0.683136,-0.00230672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558206,-0.0479323) , 
6, 0.0220354, 1, 0, 0.678223,-0.00280526) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977646,0.0264579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131415) , 
0, 0.00470348, 1, 0, 0.300442,0.00176374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000231339,-0.0159212) , 
2, 0.238057, 1, 0, 0.17222,0.000332148) , 
5, 0.0112761, 1, 0, 0.500672,-0.00170437)    );
  // itree = 395
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970579,0.019634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766155,0.0249207) , 
2, 0.0238037, 1, 0, 0.920363,0.00159612) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80626,0.00548698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723157,-0.0155386) , 
2, 0.0442069, 1, 0, 0.782669,-0.000204338) , 
4, 0.00811871, 1, 0, 0.851822,0.000699887) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77242,0.000602519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491591,-0.0150106) , 
0, 0.00201502, 1, 0, 0.667457,-0.00530673) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000318369,0.0104873) , 
4, 0.0173905, 1, 0, 8.92315e-05,-0.000154888) , 
0, 0.00470304, 1, 0, 0.125181,-0.00112056) , 
2, 0.0714198, 1, 0, 0.505997,-0.000166503)    );
  // itree = 396
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695414,0.00549683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000132004,-0.0250645) , 
5, 0.0106847, 1, 0, 0.478397,0.000240578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645124,-0.0147122) , 
6, 0.0209845, 1, 0, 0.487336,-1.69002e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924613,0.0672245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408502,-0.00618227) , 
2, 0.0715572, 1, 0, 0.640197,-0.00014827) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63687,0.0667596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604444,0.00826704) , 
1, 1.11329, 1, 0, 0.619621,0.00378109) , 
1, 1.09131, 1, 0, 0.630563,0.00169139) , 
6, 0.0220339, 1, 0, 0.504553,0.00018845)    );
  // itree = 397
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8714,-0.0149808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919264,-0.0228948) , 
6, 0.0178581, 1, 0, 0.881441,-0.00186775) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.017495,-0.00570215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727645,0.0142687) , 
7, 6.31068e-05, 1, 0, 0.158957,0.000506183) , 
2, 0.0476103, 1, 0, 0.481012,-0.000552022) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902258,-0.107806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917676,-0.0624927) , 
1, 1.0911, 1, 0, 0.909363,-0.0117074) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.378632,-0.0126867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3605,0.000677954) , 
1, 1.08675, 1, 0, 0.369281,-0.00333776) , 
2, 0.0712422, 1, 0, 0.610404,-0.00707443) , 
6, 0.0220335, 1, 0, 0.496735,-0.0013446)    );
  // itree = 398
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283486,-0.0342836) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708396,-0.0124878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.271982,0.0136695) , 
5, 0.00811751, 1, 0, 0.467792,-0.000292861) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898736,0.000401489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284992,-0.0138996) , 
2, 0.0952432, 1, 0, 0.655635,-0.00261142) , 
6, 0.0197143, 1, 0, 0.512856,-0.000849087) , 
5, 0.00227818, 1, 0, 0.503655,-0.00122066)    );
  // itree = 399
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948141,-0.0318464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842811,0.0185412) , 
5, 0.00779833, 1, 0, 0.89677,-0.000133478) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824966,-0.027512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000425746,-0.0114429) , 
0, 0.00235034, 1, 0, 0.180736,-0.0046865) , 
2, 0.0475987, 1, 0, 0.533255,-0.00244495) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509632,0.0115528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671445,0.0456822) , 
6, 0.0208789, 1, 0, 0.537684,0.00135552) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526917,-0.0178906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445996,-0.00395347) , 
3, 58.227, 1, 0, 0.462145,-0.00102821) , 
3, 47.9195, 1, 0, 0.488885,-0.000184416) , 
3, 25.1577, 1, 0, 0.502647,-0.000885548)    );
  // itree = 400
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91683,0.0277831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749058,-0.00643727) , 
2, 0.0291225, 1, 0, 0.866699,0.000277978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.694526,0.0188338) , 
2, 0.0612095, 1, 0, 0.857193,0.000495342) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593604,-0.0123175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736311,0.00153346) , 
3, 46.681, 1, 0, 0.669872,-0.00363463) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131036) , 
6, 0.0162448, 1, 0, 0,-0.000234191) , 
0, 0.00470108, 1, 0, 0.123662,-0.000861933) , 
2, 0.0714155, 1, 0, 0.503019,-0.000159997)    );
  // itree = 401
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89597,-0.00902705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947107,0.0306235) , 
6, 0.0208788, 1, 0, 0.903083,-0.000226435) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760009,-0.0104418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013105) , 
0, 0.00470304, 1, 0, 0.198874,-0.00216845) , 
2, 0.0476103, 1, 0, 0.532567,-0.00124822) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989658,0.0111852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775467,0.0131921) , 
2, 0.0711526, 1, 0, 0.932743,0.00304369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131289) , 
0, 0.00470075, 1, 0, 0.400512,0.0010861) , 
3, 75.686, 1, 0, 0.500147,-0.000675132)    );
  // itree = 402
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596869,-0.00873052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663428,-0.0256906) , 
7, 3.87961e-05, 1, 0, 0.610218,-0.00201258) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.31862,-0.018203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258008,0.00242063) , 
3, 25.2242, 1, 0, 0.275827,-0.000377346) , 
5, 0.00693817, 1, 0, 0.395519,-0.00096266) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877227,0.000396596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885314,-0.0417051) , 
3, 41.5038, 1, 0, 0.881219,-0.0079428) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971489,-0.0283227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708085,0.00933114) , 
2, 0.0477638, 1, 0, 0.816662,0.00103334) , 
6, 0.0218355, 1, 0, 0.852735,-0.00398238) , 
7, 8.53042e-05, 1, 0, 0.496681,-0.00163079)    );
  // itree = 403
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.441642,-0.00873445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393784,0.00258326) , 
3, 48.0256, 1, 0, 0.422465,-0.000309371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124548,0.0276237) , 
3, 126.143, 1, 0, 0.398348,-6.75589e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825513,0.0101521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782456,-0.0175024) , 
3, 70.6668, 1, 0, 0.814621,-0.000797356) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864405,-0.0334158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873667,-0.00243338) , 
6, 0.0228486, 1, 0, 0.869835,-0.0106229) , 
7, 0.000115314, 1, 0, 0.840157,-0.00534161) , 
7, 8.53043e-05, 1, 0, 0.495257,-0.0012244)    );
  // itree = 404
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.292581,-0.0293959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597574,0.0110323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458668,-0.00607347) , 
4, 0.00696322, 1, 0, 0.501772,-0.000311444) , 
5, 0.00222881, 1, 0, 0.493496,-0.000449453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92716,0.020308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432546,-0.0124114) , 
2, 0.0715615, 1, 0, 0.65904,-0.0045871) , 
6, 0.0231935, 1, 0, 0.503781,-0.00070653)    );
  // itree = 405
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.406458,0.00153355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570392,0.0661358) , 
6, 0.0157765, 1, 0, 0.418965,0.000280006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630841,-0.00598327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605489,-0.0545633) , 
6, 0.0225603, 1, 0, 0.628502,-0.00186768) , 
6, 0.0165654, 1, 0, 0.493754,-0.000486556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675331,0.0111563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616313,0.0172213) , 
3, 49.6771, 1, 0, 0.647226,0.00290714) , 
6, 0.0231932, 1, 0, 0.503491,-0.000271253)    );
  // itree = 406
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.428583,-0.0109194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636487,0.0100739) , 
6, 0.0154621, 1, 0, 0.517113,0.000121706) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.184309,0.00897196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389703,-0.0215446) , 
6, 0.0177167, 1, 0, 0.248075,-0.00227942) , 
3, 113.529, 1, 0, 0.489352,-0.000126052) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671451,0.00237769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650153,-0.0175448) , 
3, 49.251, 1, 0, 0.661417,-0.00531968) , 
6, 0.0231934, 1, 0, 0.500404,-0.00045963)    );
  // itree = 407
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.541776,0.00952458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536542,-0.0359964) , 
3, 32.9035, 1, 0, 0.541116,0.00018007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22537,0.011694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849893,0.0486005) , 
7, 3.00749e-05, 1, 0, 0.540908,0.00262497) , 
3, 38.3897, 1, 0, 0.541074,0.0006678) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995293,-0.0124993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864136,-0.0126125) , 
2, 0.023734, 1, 0, 0.92583,-0.00450904) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130969) , 
2, 0.214172, 1, 0, 0,-0.000362418) , 
0, 0.00470348, 1, 0, 0.447516,-0.00236676) , 
3, 50.3923, 1, 0, 0.500857,-0.000636663)    );
  // itree = 408
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978139,0.00698354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30496,-0.0164999) , 
2, 0.0238066, 1, 0, 0.625731,-0.00239059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732958,-0.0685642) , 
4, 0.00883961, 1, 0, 0.633662,-0.00321259) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.717387,-0.0173911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743931,0.0239175) , 
5, 0.010405, 1, 0, 0.733505,0.00122569) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0268446) , 
6, 0.0139337, 1, 0, 0,-0.00116899) , 
4, 0.012152, 1, 0, 0.363184,1.67008e-05) , 
4, 0.00928143, 1, 0, 0.497662,-0.00158886)    );
  // itree = 409
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977111,0.0006018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00301187,-0.019472) , 
0, 0.0018605, 1, 0, 0.646411,-0.00109728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.693646,0.0178959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0265893,-0.00725837) , 
2, 0.095209, 1, 0, 0.332109,0.000443103) , 
4, 0.00811712, 1, 0, 0.474364,-0.000254087) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538316,0.0467881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824634,-0.0291868) , 
7, 0.000113139, 1, 0, 0.710964,-0.00632129) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869729,0.0137775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355808,-0.00679945) , 
2, 0.07147, 1, 0, 0.574433,-0.000853789) , 
5, 0.0112192, 1, 0, 0.625273,-0.00288971) , 
6, 0.0208755, 1, 0, 0.500842,-0.000716524)    );
  // itree = 410
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454434,-0.00604964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625579,0.00814102) , 
6, 0.0176697, 1, 0, 0.505064,2.45964e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624023,-0.00585681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665066,-0.014641) , 
3, 46.206, 1, 0, 0.642083,-0.00388938) , 
6, 0.0231931, 1, 0, 0.513779,-0.000224348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177547,0.0493989) , 
3, 138.758, 1, 0, 0.494498,-6.63742e-06)    );
  // itree = 411
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.265531,-0.0367312) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.430478,0.000356613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638886,0.0277663) , 
6, 0.0168967, 1, 0, 0.47128,0.000573499) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667682,-0.0101764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624211,0.0089234) , 
3, 63.0729, 1, 0, 0.652888,-0.00134638) , 
6, 0.0197143, 1, 0, 0.51564,0.000104541) , 
5, 0.00229977, 1, 0, 0.504834,-4.75656e-05)    );
  // itree = 412
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.190033,0.00182291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158961,-0.0117769) , 
3, 38.4341, 1, 0, 0.175006,-0.000251948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0613773,0.0181439) , 
3, 100.915, 1, 0, 0.154554,-8.69667e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.397708,-0.0437389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943187,0.0336939) , 
1, 2.12546, 1, 0, 0.659047,-0.00719725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900027,-0.00384273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595562,-0.0206111) , 
5, 0.0114529, 1, 0, 0.839991,-0.00171185) , 
5, 0.00606227, 1, 0, 0.812594,-0.00254239) , 
7, 2.23527e-05, 1, 0, 0.501594,-0.00138192)    );
  // itree = 413
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945193,-0.00180401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974946,0.0228953) , 
5, 0.00490814, 1, 0, 0.958788,0.000844686) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971351,-0.018093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942769,-0.0562047) , 
1, 1.77419, 1, 0, 0.969174,-0.00501718) , 
6, 0.0128493, 1, 0, 0.966165,-0.00331859) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00269874,-0.00632956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00250154,0.0228742) , 
7, -3.43032e-05, 1, 0, 0.000778278,0.000249672) , 
2, 0.14284, 1, 0, 0.00138463,-8.0287e-05) , 
0, 0.00235038, 1, 0, 0.499132,-0.00175099)    );
  // itree = 414
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625857,1.45784e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684226,-0.0168196) , 
6, 0.0121347, 1, 0, 0.656601,-0.00127256) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771758,-0.0126661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206363,0.00283805) , 
2, 0.0475992, 1, 0, 0.361246,-0.000211943) , 
5, 0.00874204, 1, 0, 0.497152,-0.000699982) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642538,-0.00784676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644214,0.060059) , 
3, 46.0674, 1, 0, 0.643357,0.00219589) , 
6, 0.0231934, 1, 0, 0.506765,-0.000509581)    );
  // itree = 415
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946975,-0.00963906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829535,0.0365415) , 
2, 0.0113351, 1, 0, 0.882787,0.000979801) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664838,-0.016122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106031,0.000371873) , 
2, 0.0692052, 1, 0, 0.177253,-0.000553205) , 
2, 0.0476132, 1, 0, 0.490318,0.000127033) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793548,-0.0298397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43948,-0.00158461) , 
5, 0.0120011, 1, 0, 0.617553,-0.00540451) , 
6, 0.0231932, 1, 0, 0.498648,-0.000235123)    );
  // itree = 416
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968534,0.00733898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133298) , 
0, 0.00233258, 1, 0, 0.221613,-0.000206619) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830025,-0.0171998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77207,-0.0016833) , 
6, 0.0185216, 1, 0, 0.804182,-0.00349469) , 
7, 2.88486e-05, 1, 0, 0.537031,-0.00198686) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907189,-0.00234645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801237,-0.0330865) , 
2, 0.0271694, 1, 0, 0.881535,-0.00139602) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894974,0.0116412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00102137,-0.0019791) , 
0, 0.00235038, 1, 0, 0.211759,0.000979115) , 
2, 0.0476045, 1, 0, 0.487523,1.20839e-06) , 
3, 25.2289, 1, 0, 0.50316,-0.000626707)    );
  // itree = 417
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606647,-0.0195111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447746,0.00334509) , 
5, 0.00633233, 1, 0, 0.49455,-0.000419499) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624991,-0.0143991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673483,0.00486262) , 
3, 53.9435, 1, 0, 0.642251,-0.00207457) , 
6, 0.0208755, 1, 0, 0.520848,-0.000714177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.225676,-0.0104645) , 
3, 125.974, 1, 0, 0.498615,-0.000937235)    );
  // itree = 418
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260477,-0.023263) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709901,-0.00600581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.139742,0.00965232) , 
5, 0.0108094, 1, 0, 0.502003,-0.000320502) , 
5, 0.00224904, 1, 0, 0.491086,-0.000500045) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655257,-0.0030357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626988,-0.0252069) , 
3, 58.2738, 1, 0, 0.64448,-0.00452254) , 
6, 0.0231934, 1, 0, 0.501236,-0.000766234)    );
  // itree = 419
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.368087,0.00441412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.274944,-0.0206569) , 
3, 50.2595, 1, 0, 0.327624,-0.000501642) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691611,0.055674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50418,0.00627681) , 
4, 0.00693405, 1, 0, 0.578397,0.00141569) , 
6, 0.0116108, 1, 0, 0.422699,0.000225269) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898009,-0.00848744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904561,0.0751824) , 
6, 0.0224239, 1, 0, 0.899294,-0.000291168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800267,-0.0110122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000148975,-0.0074819) , 
0, 0.00466661, 1, 0, 0.309047,-0.00358472) , 
2, 0.0713937, 1, 0, 0.630974,-0.00178838) , 
6, 0.0162452, 1, 0, 0.510094,-0.000619682)    );
  // itree = 420
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654507,-0.000443217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828956,0.0771444) , 
5, 0.00892181, 1, 0, 0.667126,0.000409421) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84335,-0.00114479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48016,-0.0283289) , 
4, 0.0106522, 1, 0, 0.765293,-0.00452555) , 
5, 0.00936932, 1, 0, 0.688283,-0.000654164) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959065,-0.00213409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.543554,0.0462957) , 
0, 0.00190351, 1, 0, 0.693573,0.00311808) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0167007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000105624,-0.00684536) , 
0, 0.0358881, 1, 0, 6.63844e-05,-0.000836041) , 
5, 0.0125944, 1, 0, 0.21439,0.000385955) , 
5, 0.0109298, 1, 0, 0.508187,-0.000258882)    );
  // itree = 421
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689908,0.00385223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637592,-0.0388762) , 
3, 60.5081, 1, 0, 0.674846,-0.0011831) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560799,-0.0334606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460054,0.00353175) , 
3, 62.0744, 1, 0, 0.527006,-0.00458062) , 
6, 0.016235, 1, 0, 0.63217,-0.00216384) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966273,0.0098476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000600382,-0.00866649) , 
0, 0.00235174, 1, 0, 0.396308,0.000668002) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383599,-0.0191519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163577,0.00607695) , 
5, 0.0113272, 1, 0, 0.252006,-0.00154707) , 
3, 88.3021, 1, 0, 0.362378,0.000147158) , 
4, 0.0092783, 1, 0, 0.494777,-0.00098695)    );
  // itree = 422
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817194,0.00936716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0242014) , 
4, 0.0104205, 1, 0, 0.640726,0.000323461) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736527,-0.00958852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789809,0.0483043) , 
3, 25.2303, 1, 0, 0.773062,0.00322439) , 
6, 0.0208739, 1, 0, 0.666175,0.000881336) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000843661,-0.0126971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00022115,0.00512024) , 
0, 0.025874, 1, 0, 0.000467596,-0.00087306) , 
2, 0.238066, 1, 0, 0.495301,0.000431016)    );
  // itree = 423
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671095,0.00158106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627544,-0.0303039) , 
6, 0.0154629, 1, 0, 0.658551,-0.00140139) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.25321,0.0140147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67348,-0.00730321) , 
6, 0.0209829, 1, 0, 0.335221,0.000187709) , 
5, 0.00898864, 1, 0, 0.489716,-0.0005716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617725,0.00587801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611564,-0.0183494) , 
3, 36.4042, 1, 0, 0.614195,-0.00561958) , 
6, 0.0231934, 1, 0, 0.498372,-0.00092265)    );
  // itree = 424
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509424,-0.0141323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441905,0.00466376) , 
3, 25.1284, 1, 0, 0.46301,-0.000290237) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653575,-0.0252838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685413,-0.0275022) , 
6, 0.0203976, 1, 0, 0.668888,-0.00750563) , 
6, 0.0198771, 1, 0, 0.47617,-0.000751479) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.451541,-0.0167693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.733233,0.0297387) , 
4, 0.0115195, 1, 0, 0.63569,-0.000457819) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613153,0.0121594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641585,0.0277039) , 
1, 1.16159, 1, 0, 0.627022,0.00424603) , 
1, 1.11883, 1, 0, 0.631785,0.00166127) , 
6, 0.0208745, 1, 0, 0.503556,-0.000326881)    );
  // itree = 425
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.30098,-0.0143571) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950517,0.0191308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.38456e-05,-0.00836236) , 
0, 0.00470304, 1, 0, 0.138166,5.28601e-05) , 
5, 0.00231262, 1, 0, 0.151437,-0.000152279) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702256,-0.0607775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646629,0.00157025) , 
3, 25.099, 1, 0, 0.664979,-0.00479795) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972316,0.00143512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507352,-0.00719012) , 
2, 0.0713327, 1, 0, 0.848819,-0.0010731) , 
5, 0.00607217, 1, 0, 0.818983,-0.00167761) , 
7, 2.23527e-05, 1, 0, 0.504093,-0.000958089)    );
  // itree = 426
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904024,0.0455957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.071658,-0.00779513) , 
2, 0.0238066, 1, 0, 0.32251,-0.000167286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980205,0.000530955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663252,0.0256699) , 
2, 0.0475551, 1, 0, 0.861982,0.00234779) , 
7, 5.18736e-05, 1, 0, 0.474154,0.000539696) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608757,-0.00913314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653553,-0.0288591) , 
3, 33.5057, 1, 0, 0.631197,-0.00648571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564677,0.0175983) , 
3, 88.0066, 1, 0, 0.618646,-0.00451199) , 
6, 0.0208739, 1, 0, 0.499633,-0.000351072)    );
  // itree = 427
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4764,0.0480778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404975,-0.00573602) , 
3, 12.6017, 1, 0, 0.416055,-8.49413e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888166,0.0560299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.102061,0.00113466) , 
2, 0.0949854, 1, 0, 0.620929,0.00227781) , 
6, 0.0168984, 1, 0, 0.466417,0.000495867) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63488,0.025116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674673,0.0183919) , 
1, 1.11151, 1, 0, 0.65489,0.00288823) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65041,-0.0238849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57618,-0.00170089) , 
3, 70.9545, 1, 0, 0.619248,-0.00568904) , 
3, 25.2993, 1, 0, 0.629376,-0.00325166) , 
6, 0.0208745, 1, 0, 0.495169,-0.000165349)    );
  // itree = 428
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.540739,-0.00687297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530262,0.00833178) , 
3, 32.9309, 1, 0, 0.53581,-1.61044e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.437709,-0.0402067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.505849,0.00901173) , 
3, 82.5565, 1, 0, 0.484561,-0.00250026) , 
3, 76.8392, 1, 0, 0.529378,-0.000327857) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.397999,0.0374531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.374873,0.0374355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190695,-0.00562999) , 
3, 124.371, 1, 0, 0.261432,0.000164375) , 
4, 0.00809884, 1, 0, 0.301158,0.00128921) , 
3, 100.915, 1, 0, 0.497421,-0.000101418)    );
  // itree = 429
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968848,0.0126484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000957676,-0.0116183) , 
0, 0.0019151, 1, 0, 0.634521,0.000100416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390749,0.0679236) , 
3, 111.365, 1, 0, 0.615645,0.000684598) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957253,-0.0247962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913831,0.000558957) , 
0, 0.00156661, 1, 0, 0.934893,-0.00389969) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130953) , 
2, 0.142936, 1, 0, 0,-0.000177631) , 
0, 0.00470348, 1, 0, 0.429461,-0.00188743) , 
4, 0.00812296, 1, 0, 0.503364,-0.000866503)    );
  // itree = 430
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650523,0.00198702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334663,-0.0108378) , 
4, 0.00812036, 1, 0, 0.474772,-0.000496527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616386,-0.0233174) , 
6, 0.0209834, 1, 0, 0.482689,-0.000868791) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910684,-0.00250244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.471988,0.0628202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526121,0.00515252) , 
4, 0.0116006, 1, 0, 0.500107,0.00371232) , 
2, 0.0477856, 1, 0, 0.644831,0.0023195) , 
6, 0.0220335, 1, 0, 0.50161,-0.000496733)    );
  // itree = 431
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641647,-0.00589193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792291,-0.0390474) , 
5, 0.00826684, 1, 0, 0.653126,-0.0016888) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741833,-0.012696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166741,0.00887054) , 
2, 0.0475904, 1, 0, 0.318364,0.000158206) , 
5, 0.00868052, 1, 0, 0.478102,-0.000723126) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652713,-0.00142764) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.548641,-0.0383549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607397,-0.00215614) , 
3, 58.5492, 1, 0, 0.586486,-0.00760314) , 
3, 37.2453, 1, 0, 0.613561,-0.00461248) , 
6, 0.0220342, 1, 0, 0.494334,-0.00118919)    );
  // itree = 432
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695901,0.0291939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000229646,-0.0138401) , 
2, 0.0476016, 1, 0, 0.182845,-7.33596e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81272,-0.00380598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791466,-0.0527981) , 
7, 8.14182e-05, 1, 0, 0.810829,-0.00172137) , 
7, 2.86777e-05, 1, 0, 0.407627,-0.00066325) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867755,-0.0262132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887204,0.00467346) , 
4, 0.00997056, 1, 0, 0.879499,-0.00182153) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680947,-0.0325778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847949,-0.00845071) , 
4, 0.0112065, 1, 0, 0.793662,-0.00835063) , 
6, 0.0216436, 1, 0, 0.837461,-0.0050191) , 
7, 8.70455e-05, 1, 0, 0.499016,-0.00158937)    );
  // itree = 433
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729702,0.0230462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145056,-0.0147007) , 
5, 0.00756217, 1, 0, 0.462007,0.000487183) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.410423,-0.0325114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.232509,0.0052694) , 
3, 93.5181, 1, 0, 0.290662,-0.00112624) , 
3, 75.5114, 1, 0, 0.420558,9.68906e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506588,-0.0843653) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967215,-0.0125385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0056688,0.000496102) , 
0, 0.00234264, 1, 0, 0.628232,-0.00196087) , 
6, 0.0166269, 1, 0, 0.620475,-0.00270393) , 
6, 0.0162368, 1, 0, 0.504155,-0.0010743)    );
  // itree = 434
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.39713,-0.000902571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573006,0.0224814) , 
6, 0.0153341, 1, 0, 0.434561,0.000381504) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662754,-0.00303121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472528,-0.0201875) , 
3, 86.4072, 1, 0, 0.62339,-0.00149938) , 
6, 0.0178894, 1, 0, 0.470437,2.41583e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933463,-0.0238339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926978,0.0139391) , 
6, 0.0223656, 1, 0, 0.929754,-0.00132117) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642095,0.0492603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358699,-0.00211873) , 
5, 0.0115181, 1, 0, 0.475878,0.00332271) , 
2, 0.0477509, 1, 0, 0.635278,0.00169179) , 
6, 0.0208745, 1, 0, 0.49859,0.000308978)    );
  // itree = 435
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94706,-0.00289437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.511802,-0.0347736) , 
4, 0.0104357, 1, 0, 0.874708,-0.00116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873905,0.00652235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000803763,-0.00762935) , 
0, 0.00235054, 1, 0, 0.181284,0.000313419) , 
2, 0.0476103, 1, 0, 0.492147,-0.000347115) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664519,0.00556187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598942,-0.0224666) , 
3, 55.9979, 1, 0, 0.636913,-0.00458838) , 
6, 0.0231935, 1, 0, 0.501326,-0.000616047)    );
  // itree = 436
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71822,0.00426853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15015,-0.026332) , 
4, 0.00810631, 1, 0, 0.483256,-0.000292362) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929895,0.00392523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309724,0.0263089) , 
2, 0.0714128, 1, 0, 0.676154,0.00198918) , 
6, 0.0174035, 1, 0, 0.549861,0.000495425) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.424059,-0.0150467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.262154,0.00705392) , 
3, 81.0964, 1, 0, 0.357852,-0.000775124) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824618,-0.0712171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861078,-0.0112967) , 
3, 57.5199, 1, 0, 0.848786,-0.00861486) , 
7, 8.5304e-05, 1, 0, 0.462715,-0.00244968) , 
3, 37.8469, 1, 0, 0.501344,-0.00114422)    );
  // itree = 437
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972142,0.0161051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000523808,-0.0110384) , 
0, 0.00235152, 1, 0, 0.510692,0.000447435) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659716,-0.00721148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630699,-0.0431814) , 
3, 35.9596, 1, 0, 0.651915,-0.00612915) , 
6, 0.0208739, 1, 0, 0.533958,-0.000635999) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609761,0.00628623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00645698,-0.0153391) , 
4, 0.00926563, 1, 0, 0.344338,-9.43931e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82173,-0.00096265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894178,0.054828) , 
4, 0.0103364, 1, 0, 0.868171,0.00455431) , 
7, 8.67919e-05, 1, 0, 0.453455,0.000873953) , 
3, 50.3549, 1, 0, 0.499744,5.73131e-06)    );
  // itree = 438
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627205,-0.000212888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51815,-0.0165078) , 
3, 49.3231, 1, 0, 0.582505,-0.001254) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664912,0.0122522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0963423,-0.0213552) , 
5, 0.00774622, 1, 0, 0.361512,-2.93364e-05) , 
4, 0.00464466, 1, 0, 0.406177,-0.000276855) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629589,-0.0235393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578713,0.00750126) , 
4, 0.00927657, 1, 0, 0.599848,-0.00109378) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63374,0.00161106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595458,-0.0187226) , 
3, 37.7329, 1, 0, 0.611709,-0.00458101) , 
6, 0.0216482, 1, 0, 0.603678,-0.00221995) , 
6, 0.0162368, 1, 0, 0.489907,-0.00110062)    );
  // itree = 439
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.496237,-0.00901495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524989,0.00815075) , 
3, 3.60714, 1, 0, 0.52203,0.000414593) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523329,-0.0385985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436426,-0.000308709) , 
3, 48.6604, 1, 0, 0.453402,-0.00112176) , 
3, 37.8455, 1, 0, 0.484536,-0.000424777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587825,-0.0318352) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633252,-0.0181003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622297,0.00872128) , 
1, 1.06121, 1, 0, 0.62579,-0.00158246) , 
6, 0.0229252, 1, 0, 0.61238,-0.00624911) , 
6, 0.0220334, 1, 0, 0.500213,-0.00113899)    );
  // itree = 440
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598566,0.001115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750577,-0.0173159) , 
4, 0.00735011, 1, 0, 0.621592,-0.000636247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.733421,0.00893109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0708623,-0.0127476) , 
4, 0.0112139, 1, 0, 0.386289,0.000363704) , 
4, 0.00812296, 1, 0, 0.483436,-4.91349e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603004,-0.00189624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666747,-0.0117757) , 
3, 35.4125, 1, 0, 0.639794,-0.00290178) , 
6, 0.0231942, 1, 0, 0.493477,-0.00023232)    );
  // itree = 441
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.477173,-0.0091603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651185,0.0197943) , 
6, 0.0178737, 1, 0, 0.509475,-0.000303916) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640817,0.00730566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6425,-0.0416933) , 
3, 36.0368, 1, 0, 0.641437,-0.0048993) , 
6, 0.0208745, 1, 0, 0.531563,-0.0010731) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996683,0.00566817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884188,0.0172417) , 
2, 0.023734, 1, 0, 0.935931,0.00303245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131099) , 
0, 0.00470075, 1, 0, 0.436206,0.0012485) , 
3, 63.0738, 1, 0, 0.500771,-0.000323411)    );
  // itree = 442
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661534,-0.00231052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806683,0.0232658) , 
4, 0.00657734, 1, 0, 0.709384,0.000486516) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0150679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130936) , 
2, 0.190607, 1, 0, 0,-0.000438606) , 
4, 0.00812304, 1, 0, 0.414515,0.000101971) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.795626,0.00138647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355963,-0.0195802) , 
5, 0.0115876, 1, 0, 0.639906,-0.00113811) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606444,-0.0372289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.574983,-0.00129552) , 
3, 37.2749, 1, 0, 0.589338,-0.00662957) , 
1, 1.40484, 1, 0, 0.630453,-0.00216471) , 
6, 0.0162375, 1, 0, 0.504066,-0.000838035)    );
  // itree = 443
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.529524,-0.0145361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464587,-0.00015122) , 
4, 0.00464385, 1, 0, 0.474652,-0.000284959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627093,0.0198017) , 
6, 0.0209836, 1, 0, 0.4831,-7.76759e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915091,-0.0205783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895039,-0.0459449) , 
1, 1.09128, 1, 0, 0.905903,-0.00549515) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.358771,0.00644943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424224,0.000408169) , 
6, 0.0233634, 1, 0, 0.387991,0.00114847) , 
2, 0.0707332, 1, 0, 0.623851,-0.00187707) , 
6, 0.0220338, 1, 0, 0.500004,-0.000293774)    );
  // itree = 444
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.312186,0.0421188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.273905,-0.0152643) , 
4, 0.0023268, 1, 0, 0.276708,-0.00057345) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988247,-0.00335838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587664,0.0202652) , 
2, 0.0474351, 1, 0, 0.867284,0.00167002) , 
7, 4.18238e-05, 1, 0, 0.461579,0.000128836) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623776,-0.00920614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608351,0.0192619) , 
1, 1.11592, 1, 0, 0.617524,-0.000241663) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774438,0.0159626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426853,-0.0298016) , 
4, 0.0104406, 1, 0, 0.653896,-0.00489753) , 
1, 1.18114, 1, 0, 0.630142,-0.00185689) , 
6, 0.0197164, 1, 0, 0.50179,-0.000344864)    );
  // itree = 445
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971341,0.0745704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940951,0.0552254) , 
6, 0.0151127, 1, 0, 0.963013,0.00120084) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925792,-0.0498175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788551,-0.0372991) , 
8, 0.0332476, 1, 0, 0.899771,-0.00257394) , 
2, 0.00453404, 1, 0, 0.919954,-0.00136925) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971374,0.00620111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301993,0.00881653) , 
2, 0.11423, 1, 0, 0.872788,0.00248214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130964) , 
2, 0.137355, 1, 0, 0,-0.000240182) , 
0, 0.00470108, 1, 0, 0.311582,0.000731674) , 
2, 0.0238066, 1, 0, 0.501627,7.53804e-05)    );
  // itree = 446
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996393,0.00531469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880059,0.0191444) , 
2, 0.0474351, 1, 0, 0.97281,0.00141101) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000626388,-0.000412561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000810669,-0.0112224) , 
6, 0.0157382, 1, 0, 0.000677743,-0.000399011) , 
0, 0.00235174, 1, 0, 0.475821,0.000485664) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672497,-0.0418834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650802,-0.00671847) , 
6, 0.0232871, 1, 0, 0.657537,-0.00460557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594445,0.032808) , 
1, 1.11017, 1, 0, 0.640186,-0.00231044) , 
6, 0.0220335, 1, 0, 0.494957,0.000160143)    );
  // itree = 447
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963386,-0.0117254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57622,-0.016531) , 
4, 0.0103401, 1, 0, 0.910242,-0.00111684) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737483,0.0128963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104778,-0.00303756) , 
2, 0.0691354, 1, 0, 0.290655,0.000230388) , 
2, 0.0237994, 1, 0, 0.489058,-0.000201019) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891997,0.0033054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413905,-0.00882393) , 
2, 0.0708313, 1, 0, 0.633022,-0.00240136) , 
6, 0.0231935, 1, 0, 0.498761,-0.000349321)    );
  // itree = 448
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683095,-0.0223534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668042,0.0361168) , 
3, 14.3948, 1, 0, 0.676585,-0.000960725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991786,0.0719536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00108514,-0.00426772) , 
0, 0.00235152, 1, 0, 0.419417,0.00223152) , 
5, 0.00872566, 1, 0, 0.538326,0.000755492) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.496704,-0.0054448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.365042,0.0250472) , 
3, 70.7865, 1, 0, 0.445195,0.000201745) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67704,-0.0128834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49951,0.0100749) , 
4, 0.0115652, 1, 0, 0.616373,-0.00236513) , 
6, 0.0197163, 1, 0, 0.487775,-0.000436768) , 
3, 25.1953, 1, 0, 0.503572,-6.4202e-05)    );
  // itree = 449
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92151,0.0337819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933132,-0.0265767) , 
6, 0.0127773, 1, 0, 0.927756,-0.00113136) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761998,0.0299116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638522,-0.00620195) , 
2, 0.0600295, 1, 0, 0.74204,0.00184965) , 
2, 0.0237834, 1, 0, 0.853104,6.69018e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921647,0.0178275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498689,-0.0139778) , 
0, 0.000447165, 1, 0, 0.649702,-0.00800036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000158373,0.00336102) , 
2, 0.377372, 1, 0, 4.42768e-05,-0.000133397) , 
0, 0.00470068, 1, 0, 0.126484,-0.00166451) , 
2, 0.0713937, 1, 0, 0.501815,-0.000770159)    );
  // itree = 450
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930073,-0.0228941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.306184,0.0102682) , 
2, 0.0237799, 1, 0, 0.528767,-0.00113919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525387,-0.0443885) , 
3, 9.59771, 1, 0, 0.527995,-0.00343743) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.457179,-0.0164569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38151,0.00258389) , 
4, 0.00464385, 1, 0, 0.396043,-0.000219695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840121,-0.01054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95193,0.0379794) , 
7, 0.000136555, 1, 0, 0.859517,-0.00184723) , 
7, 8.6792e-05, 1, 0, 0.493675,-0.00056254) , 
3, 12.5976, 1, 0, 0.499143,-0.00102058)    );
  // itree = 451
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.275206,-0.0129588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327059,-9.04215e-05) , 
5, 0.00213124, 1, 0, 0.323719,-8.8552e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819114,-0.0264175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858235,0.00698724) , 
5, 0.0087237, 1, 0, 0.841105,-0.00263834) , 
7, 5.26825e-05, 1, 0, 0.470741,-0.000813107) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970727,0.0406544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686641,0.00974393) , 
4, 0.0108647, 1, 0, 0.772849,0.00433105) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737208,0.0641489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345624,-0.0242963) , 
1, 1.06675, 1, 0, 0.472205,-0.000765754) , 
5, 0.0116554, 1, 0, 0.629508,0.00190099) , 
6, 0.0208748, 1, 0, 0.498074,-0.000345849)    );
  // itree = 452
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.279913,-0.0243922) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.476814,-0.000656562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667917,-0.0154783) , 
6, 0.0173951, 1, 0, 0.543285,-0.00155768) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875942,-0.0102896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229088,0.00941572) , 
2, 0.0475958, 1, 0, 0.502986,0.000434121) , 
3, 25.1722, 1, 0, 0.515728,-0.00019565) , 
5, 0.0022901, 1, 0, 0.505671,-0.000386941)    );
  // itree = 453
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99443,0.0678049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804626,-0.023644) , 
4, 0.00793684, 1, 0, 0.968476,0.000216625) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768526,0.00253261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895902,0.0809789) , 
8, 0.0314498, 1, 0, 0.832878,0.00209443) , 
5, 0.00862336, 1, 0, 0.925933,0.000805772) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98708,-0.00349838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874112,-0.0124424) , 
0, 0.000335435, 1, 0, 0.926129,-0.00453967) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.003773,0.00623984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000704171,-0.00869864) , 
4, 0.00811879, 1, 0, 0.00164932,-8.98679e-05) , 
0, 0.00235054, 1, 0, 0.310598,-0.00157693) , 
2, 0.0238023, 1, 0, 0.502107,-0.00083537)    );
  // itree = 454
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973919,0.0120075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143402,-0.00672553) , 
0, 0.00185189, 1, 0, 0.690528,0.000463118) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0296044) , 
6, 0.0119269, 1, 0, 0,-0.000965486) , 
5, 0.0105362, 1, 0, 0.473993,1.51384e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609491,-0.0297675) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620149,0.0104073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608467,-0.00955882) , 
6, 0.0230933, 1, 0, 0.614007,-0.000272712) , 
6, 0.0217062, 1, 0, 0.612922,-0.00242448) , 
6, 0.0208745, 1, 0, 0.498381,-0.000413128)    );
  // itree = 455
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921604,0.036742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855875,0.0623118) , 
2, 0.0256435, 1, 0, 0.915023,0.00163978) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75606,0.00182408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701939,-0.0411867) , 
3, 58.0834, 1, 0, 0.737681,-0.00152242) , 
2, 0.0316976, 1, 0, 0.882459,0.00105912) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629036,-0.0223757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641843,-0.0124551) , 
4, 0.00928278, 1, 0, 0.637421,-0.00469451) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.31861,0.0138263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00353367,-0.00532483) , 
2, 0.149139, 1, 0, 0.0702116,0.000273401) , 
2, 0.0906721, 1, 0, 0.20435,-0.000901448) , 
2, 0.0475987, 1, 0, 0.501867,-4.12586e-05)    );
  // itree = 456
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.408622,-0.00976235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603396,0.0107979) , 
6, 0.0161397, 1, 0, 0.458477,-0.000205667) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688293,-0.00646028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590156,-0.0214252) , 
3, 75.6896, 1, 0, 0.663655,-0.00366169) , 
6, 0.0199357, 1, 0, 0.482528,-0.000610782) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.573207,-0.00596928) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910349,0.014806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340181,0.0288115) , 
2, 0.0953024, 1, 0, 0.651298,0.00416368) , 
5, 0.0113271, 1, 0, 0.632616,0.00268394) , 
6, 0.0220342, 1, 0, 0.500486,-0.000216571)    );
  // itree = 457
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971516,-0.00888264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544972,-0.00984345) , 
0, 0.00200471, 1, 0, 0.938224,-0.00191) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900556,-0.0299178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904458,0.0255902) , 
0, 0.00199179, 1, 0, 0.902487,-0.00935312) , 
4, 0.0110986, 1, 0, 0.93305,-0.00298756) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131875) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000163886,0.00570576) , 
2, 0.384312, 1, 0, 4.57562e-05,-0.000114239) , 
2, 0.0952207, 1, 0, 3.64812e-05,-0.000246955) , 
0, 0.00470304, 1, 0, 0.495472,-0.00170223)    );
  // itree = 458
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.489707,-0.0116884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519547,0.00569999) , 
3, 4.20219, 1, 0, 0.517399,9.70559e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.01952,0.0109792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76086,-0.0134737) , 
7, 6.13909e-06, 1, 0, 0.317302,-0.00152119) , 
3, 88.183, 1, 0, 0.479871,-0.00020644) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60152,0.00778092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547608,-0.0605926) , 
6, 0.0225616, 1, 0, 0.574055,-0.00733934) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625565,-0.00505104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645605,0.0192349) , 
6, 0.0237179, 1, 0, 0.635722,0.0012573) , 
6, 0.0231395, 1, 0, 0.608016,-0.00260502) , 
6, 0.0220339, 1, 0, 0.495528,-0.000499508)    );
  // itree = 459
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851747,0.0129883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900464,-0.0408184) , 
6, 0.012925, 1, 0, 0.878329,-0.000905862) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729331,0.00813501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.58459e-05,-0.00663012) , 
0, 0.00470304, 1, 0, 0.136636,0.000512627) , 
2, 0.0476132, 1, 0, 0.477888,-0.000140017) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.459751,-0.0181393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77099,0.00330732) , 
1, 1.1119, 1, 0, 0.674825,-0.000993183) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853698,-0.0523817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379218,-0.00718967) , 
2, 0.0708542, 1, 0, 0.591591,-0.00645706) , 
4, 0.0115828, 1, 0, 0.642686,-0.00310293) , 
6, 0.0208748, 1, 0, 0.506467,-0.000653847)    );
  // itree = 460
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.330808,0.00657676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575227,-0.00993018) , 
6, 0.0120703, 1, 0, 0.42591,-0.000323565) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715019,0.0159905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497057,-0.00481453) , 
4, 0.00928329, 1, 0, 0.612539,0.00107302) , 
6, 0.0168976, 1, 0, 0.461207,-5.94322e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677058,0.0632958) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675462,-0.0184276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62619,-0.00708203) , 
3, 48.7858, 1, 0, 0.653148,-0.00367177) , 
1, 1.0657, 1, 0, 0.655798,-0.00280688) , 
6, 0.0197155, 1, 0, 0.507045,-0.000706629)    );
  // itree = 461
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950005,0.0540661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824788,-0.0153069) , 
2, 0.00840541, 1, 0, 0.865387,-0.000993525) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655238,-0.0403907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526404,-0.00607993) , 
2, 0.0709635, 1, 0, 0.575978,-0.00543792) , 
2, 0.058867, 1, 0, 0.819285,-0.00170151) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00271597,-0.0108462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000264204,0.00228515) , 
2, 0.210824, 1, 0, 0.000950983,-0.00039732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536039,0.0114178) , 
7, 8.67821e-05, 1, 0, 0.0684002,0.000200696) , 
2, 0.095209, 1, 0, 0.505995,-0.000907857)    );
  // itree = 462
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803859,-0.00583093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907543,0.0192043) , 
6, 0.00995881, 1, 0, 0.880696,0.000724969) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828961,-0.00532431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000700958,6.28759e-05) , 
0, 0.00235174, 1, 0, 0.130209,-0.000392468) , 
2, 0.0476103, 1, 0, 0.467536,0.000109795) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623742,-0.0353792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575778,-0.0119151) , 
3, 48.7858, 1, 0, 0.601378,-0.010323) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678136,0.0125507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672287,0.00880356) , 
3, 37.2815, 1, 0, 0.674863,0.00173408) , 
6, 0.0231978, 1, 0, 0.62687,-0.00614036) , 
6, 0.0208754, 1, 0, 0.49475,-0.000957725)    );
  // itree = 463
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966541,-0.000766066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962629,0.0589756) , 
4, 0.00767092, 1, 0, 0.965097,0.00106718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459711,-0.0340212) , 
4, 0.0115063, 1, 0, 0.920766,0.000527189) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976588,0.00844845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87891,-0.0118781) , 
0, 0.000335535, 1, 0, 0.924501,-0.00340297) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00163296,0.0135781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00240778,-0.00834068) , 
6, 0.0174027, 1, 0, 0.00184301,-3.08863e-05) , 
0, 0.00235174, 1, 0, 0.314747,-0.00117447) , 
2, 0.0238023, 1, 0, 0.504246,-0.00064237)    );
  // itree = 464
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97086,0.0111467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656684,-0.0807548) , 
5, 0.0105678, 1, 0, 0.930953,-0.000309638) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.259004,-0.00909186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965503,0.0307035) , 
7, 3.50602e-05, 1, 0, 0.792171,0.00188113) , 
2, 0.0170027, 1, 0, 0.860554,0.00080165) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896119,0.00952466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701539,-0.0123404) , 
0, 0.000559059, 1, 0, 0.791134,-0.00395736) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000512853,-0.0101716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00091643,0.0414877) , 
2, 0.316317, 1, 0, 0.000681726,-6.97331e-05) , 
0, 0.00235152, 1, 0, 0.119782,-0.000655497) , 
2, 0.0714198, 1, 0, 0.503262,9.88317e-05)    );
  // itree = 465
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963523,-0.177648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899177,0.0118003) , 
2, 0.00566755, 1, 0, 0.925936,-0.0012081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9242,-0.0678995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945979,-0.0495095) , 
1, 1.16005, 1, 0, 0.935038,-0.0105693) , 
6, 0.0197226, 1, 0, 0.927448,-0.00276293) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.192807,-0.00602978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554378,0.0109828) , 
6, 0.0187717, 1, 0, 0.283363,-0.000106949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58211,-0.00932337) , 
6, 0.0231923, 1, 0, 0.304636,-0.000376038) , 
2, 0.0238066, 1, 0, 0.494772,-0.00110473)    );
  // itree = 466
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65987,-0.0776571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566675,-0.00530541) , 
3, 12.5475, 1, 0, 0.582189,-0.00130775) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743727,0.00695231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0298989) , 
5, 0.01218, 1, 0, 0.456279,0.000412304) , 
5, 0.00656043, 1, 0, 0.490193,-5.09989e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623636,-0.0171545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664012,-0.00454983) , 
1, 1.06242, 1, 0, 0.648241,-0.00390858) , 
6, 0.0231934, 1, 0, 0.500572,-0.000304307)    );
  // itree = 467
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.257253,-0.0307079) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.27482,-0.00763185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86695,0.0182503) , 
7, 4.18239e-05, 1, 0, 0.466609,0.000392143) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673897,-0.0140765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636338,-0.00143342) , 
6, 0.0208236, 1, 0, 0.645877,-0.00119103) , 
6, 0.0197155, 1, 0, 0.50989,9.91293e-06) , 
5, 0.00227818, 1, 0, 0.499202,-0.000119235)    );
  // itree = 468
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769418,0.000817794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871114,0.035183) , 
6, 0.0209817, 1, 0, 0.775686,0.000429256) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0116153,-0.0117937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130948) , 
0, 0.0211531, 1, 0, 0.00330965,-0.000846106) , 
2, 0.119033, 1, 0, 0.477747,-6.2706e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631325,-0.00506058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616218,-0.0248422) , 
1, 1.08827, 1, 0, 0.626723,-0.00509376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572132,0.0330364) , 
1, 1.11017, 1, 0, 0.610349,-0.00250982) , 
6, 0.0220339, 1, 0, 0.493836,-0.000359616)    );
  // itree = 469
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959464,0.00758102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984374,0.0831667) , 
4, 0.00563811, 1, 0, 0.965681,0.000944328) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000714858,-0.00159368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140563) , 
6, 0.00789651, 1, 0, 0.000452351,-0.000305388) , 
0, 0.00235174, 1, 0, 0.342953,0.000138059) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906,-0.0127203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75342,-0.0414678) , 
2, 0.058867, 1, 0, 0.877019,-0.00375837) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.599237,0.0174371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0256744,-0.00603564) , 
2, 0.133745, 1, 0, 0.140196,8.27006e-05) , 
2, 0.0951974, 1, 0, 0.611719,-0.00237536) , 
6, 0.0127585, 1, 0, 0.501175,-0.00134159)    );
  // itree = 470
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513159,-0.00779659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55032,0.0139053) , 
3, 13.5576, 1, 0, 0.539692,0.000593168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531558,-0.024185) , 
3, 56.944, 1, 0, 0.539153,0.000369003) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499451,-0.0165453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.232684,0.0178257) , 
5, 0.00680806, 1, 0, 0.314237,-2.29405e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954394,-0.0283879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7683,-0.00505831) , 
0, 0.0016756, 1, 0, 0.853625,-0.00664227) , 
7, 8.67914e-05, 1, 0, 0.429255,-0.00143443) , 
3, 62.943, 1, 0, 0.502618,-0.000230534)    );
  // itree = 471
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.366197,0.00765681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171684,0.0777496) , 
3, 100.691, 1, 0, 0.338154,0.000552516) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638938,-0.00937377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594787,-0.00423108) , 
1, 1.22179, 1, 0, 0.60523,-0.000933429) , 
6, 0.0121481, 1, 0, 0.496624,-0.000329174) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632886,-0.0425705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653287,-0.00246686) , 
1, 1.06242, 1, 0, 0.645263,-0.00501459) , 
6, 0.0231932, 1, 0, 0.506306,-0.000634356)    );
  // itree = 472
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864353,0.0239214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15762,-0.0234831) , 
4, 0.00692872, 1, 0, 0.624188,0.000182133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650541,-0.0839308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773679,-0.0268985) , 
5, 0.00757523, 1, 0, 0.750143,-0.00800944) , 
5, 0.00724732, 1, 0, 0.663539,-0.0023771) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99543,0.00356088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92416,0.0136399) , 
2, 0.0711147, 1, 0, 0.975742,0.00177312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00251547,-0.0123038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000803332,0.0160345) , 
2, 0.142818, 1, 0, 0.00132275,-0.0003811) , 
0, 0.00235174, 1, 0, 0.371484,0.000437243) , 
5, 0.00895137, 1, 0, 0.502445,-0.000824736)    );
  // itree = 473
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.457726,-0.00112042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187234,0.0193817) , 
3, 113.378, 1, 0, 0.430801,7.45807e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.604599,0.00755083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613271,-0.0246836) , 
1, 1.34111, 1, 0, 0.606394,-0.00189894) , 
6, 0.0178916, 1, 0, 0.46394,-0.00029788) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865872,-0.0360057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889849,0.0025401) , 
6, 0.0231936, 1, 0, 0.874486,-0.00712982) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.322639,0.0126799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.271764,-0.00205453) , 
1, 1.1041, 1, 0, 0.296625,0.00125698) , 
2, 0.0951916, 1, 0, 0.629132,-0.00356887) , 
6, 0.0208739, 1, 0, 0.492727,-0.000867887)    );
  // itree = 474
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.343051,-0.00234288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57382,-0.097384) , 
6, 0.01274, 1, 0, 0.374296,-0.000574103) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73314,0.0461211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452551,-0.00378459) , 
4, 0.008075, 1, 0, 0.587771,0.00142898) , 
6, 0.0140811, 1, 0, 0.42865,-6.40879e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641827,0.00459787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619782,-0.0125428) , 
1, 1.15429, 1, 0, 0.626036,-0.00146438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593671,-0.0210247) , 
6, 0.0236906, 1, 0, 0.622685,-0.00195913) , 
6, 0.0173962, 1, 0, 0.498275,-0.000744076)    );
  // itree = 475
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53233,0.0196988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484165,-0.00711805) , 
3, 12.5981, 1, 0, 0.491816,-0.000434088) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60149,0.0156918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626284,0.036083) , 
4, 0.0113138, 1, 0, 0.613431,0.00357162) , 
6, 0.0220907, 1, 0, 0.499236,-0.000189701) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777474,-0.0294039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470081,0.000965464) , 
5, 0.0120011, 1, 0, 0.631652,-0.00612784) , 
6, 0.0231942, 1, 0, 0.508069,-0.000585847)    );
  // itree = 476
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495594,-0.00944503) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.479113,-0.00570815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671665,0.00607807) , 
6, 0.0185616, 1, 0, 0.534385,9.61995e-06) , 
3, 3.60424, 1, 0, 0.531821,-0.000196963) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753988,-0.0153914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.380661,-0.0186613) , 
2, 0.086513, 1, 0, 0.656115,-0.00354693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00526382,0.00400566) , 
2, 0.166616, 1, 0, 0.397927,-0.00190952) , 
3, 75.686, 1, 0, 0.498974,-0.000617086)    );
  // itree = 477
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.304715,-0.00533006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565551,-0.0273486) , 
6, 0.0114049, 1, 0, 0.338786,-0.00069611) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857176,0.011965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00963282,-0.00688318) , 
2, 0.118819, 1, 0, 0.604873,0.000647137) , 
6, 0.0126046, 1, 0, 0.481503,2.43468e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.548449,-0.0187281) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60614,0.0826596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647498,-0.00389209) , 
6, 0.0231804, 1, 0, 0.635023,0.000820599) , 
6, 0.022588, 1, 0, 0.61499,-0.00209353) , 
6, 0.0220365, 1, 0, 0.497799,-0.000234205)    );
  // itree = 478
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.280273,-0.00591007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86817,0.011518) , 
7, 4.33876e-05, 1, 0, 0.458787,0.000269908) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611098,0.0044692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655978,-0.0209548) , 
6, 0.0204022, 1, 0, 0.632049,-0.00308464) , 
6, 0.0198797, 1, 0, 0.470444,4.42245e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794328,0.0551838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.399222,0.00905903) , 
5, 0.0113532, 1, 0, 0.61736,0.00401379) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883188,-0.0238531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42432,0.00597976) , 
2, 0.070609, 1, 0, 0.629092,-0.000982457) , 
6, 0.0233594, 1, 0, 0.621143,0.00240267) , 
6, 0.0208748, 1, 0, 0.496757,0.000456025)    );
  // itree = 479
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.175156,-0.00682496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876356,0.0181999) , 
7, 2.2106e-05, 1, 0, 0.41902,0.00038239) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790923,-0.0134898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19442,0.0327065) , 
5, 0.0107513, 1, 0, 0.614561,-0.00213489) , 
6, 0.0167876, 1, 0, 0.478401,-0.000382048) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948682,0.0342047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.425074,-0.0276318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481073,-0.00107162) , 
6, 0.0232516, 1, 0, 0.45316,-0.00828229) , 
2, 0.0476212, 1, 0, 0.615129,-0.00463312) , 
6, 0.0220335, 1, 0, 0.495097,-0.00090115)    );
  // itree = 480
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.366785,0.0271475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411896,-0.00361598) , 
4, 0.00232324, 1, 0, 0.409267,-8.15757e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618713,0.00765788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563272,0.0355878) , 
1, 1.4363, 1, 0, 0.598776,0.00210701) , 
6, 0.0159601, 1, 0, 0.458995,0.000492721) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653236,0.0288885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611601,-0.00868171) , 
3, 72.8054, 1, 0, 0.64059,0.00141373) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587072,-0.0230098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653524,-0.000182206) , 
1, 1.16023, 1, 0, 0.630201,-0.00322868) , 
1, 1.10768, 1, 0, 0.633864,-0.00159186) , 
6, 0.0197164, 1, 0, 0.500475,-1.74995e-06)    );
  // itree = 481
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63087,-0.000752543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808133,0.0284298) , 
4, 0.00628775, 1, 0, 0.661832,0.000516944) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78631,-0.107358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147951,2.12928e-06) , 
2, 0.0237928, 1, 0, 0.272987,-0.000406721) , 
4, 0.00694997, 1, 0, 0.43268,-2.73849e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950655,-0.0220673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632542,-0.00453887) , 
0, 0.00162045, 1, 0, 0.761698,-0.00406111) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.424633,0.026278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364542,-0.00673044) , 
3, 62.6691, 1, 0, 0.401939,0.000488118) , 
5, 0.0113397, 1, 0, 0.615116,-0.00220755) , 
6, 0.0173951, 1, 0, 0.499073,-0.000820801)    );
  // itree = 482
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637446,-0.0137096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.693638,0.0100097) , 
5, 0.0081346, 1, 0, 0.656613,-0.000427694) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92145,-0.0218056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802392,0.0324026) , 
0, 0.00184021, 1, 0, 0.858386,-0.00681899) , 
7, 0.000105856, 1, 0, 0.679601,-0.00115585) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974544,-0.00217752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943052,0.0422395) , 
3, 46.569, 1, 0, 0.959137,0.00421851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000102394,-0.00234077) , 
4, 0.0104351, 1, 0, 6.01787e-05,-0.000191223) , 
0, 0.00470348, 1, 0, 0.169826,0.000589343) , 
5, 0.0113856, 1, 0, 0.502276,-0.000548785)    );
  // itree = 483
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.342575,0.000989586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624308,-0.0403648) , 
6, 0.0129937, 1, 0, 0.360628,-0.000115415) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578234,0.00128891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612265,0.0469048) , 
1, 1.72892, 1, 0, 0.590982,0.00146798) , 
6, 0.0136489, 1, 0, 0.390987,9.32618e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952208,-0.0198838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516181,0.00116593) , 
0, 0.00176723, 1, 0, 0.772367,-0.00383626) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875055,0.0163914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000160567,-0.0134222) , 
5, 0.0130274, 1, 0, 0.335921,0.00060688) , 
5, 0.0113115, 1, 0, 0.613915,-0.00222317) , 
6, 0.0150842, 1, 0, 0.497965,-0.00101834)    );
  // itree = 484
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624034,0.00700505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400061,-0.00544495) , 
4, 0.0069622, 1, 0, 0.474926,-0.000111889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640874,-0.016534) , 
6, 0.0209843, 1, 0, 0.483985,-0.000373331) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.754102,0.0147198) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4013,-0.0151686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684403,0.0124216) , 
6, 0.0235807, 1, 0, 0.555124,0.000129339) , 
5, 0.0116554, 1, 0, 0.636874,0.00144238) , 
6, 0.0220341, 1, 0, 0.502423,-0.00015436)    );
  // itree = 485
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605103,0.00108961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754502,-0.00817335) , 
4, 0.00629196, 1, 0, 0.632101,-0.000292803) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.378157,-0.00334015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653217,-0.0625421) , 
7, 2.45626e-05, 1, 0, 0.487329,-0.00753424) , 
3, 62.9865, 1, 0, 0.588678,-0.00246482) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630269,0.007913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0859702,-0.0215546) , 
5, 0.0112636, 1, 0, 0.435301,0.000201821) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665998,-0.00593656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698244,-0.0116559) , 
1, 1.07128, 1, 0, 0.680542,-0.00429719) , 
6, 0.0231934, 1, 0, 0.456265,-0.000182764) , 
4, 0.0069622, 1, 0, 0.495863,-0.000865206)    );
  // itree = 486
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466375,-0.0247854) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460358,0.0174545) , 
3, 5.99211, 1, 0, 0.46182,-0.000519704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608685,-0.0161078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677508,-0.00167573) , 
6, 0.0185565, 1, 0, 0.655566,-0.00234281) , 
6, 0.0162354, 1, 0, 0.54,-0.00125536) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519425,-0.0100361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537174,0.0419353) , 
3, 31.6864, 1, 0, 0.53166,0.00106121) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.51835,-0.0170235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440112,0.00446546) , 
3, 58.2664, 1, 0, 0.45595,-0.000161688) , 
3, 47.9582, 1, 0, 0.482128,0.000261155) , 
3, 25.1774, 1, 0, 0.500107,-0.000209979)    );
  // itree = 487
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974792,0.00935835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00246336,-0.017795) , 
0, 0.00197551, 1, 0, 0.638595,-0.000831339) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.016167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.40022,0.0103406) , 
5, 0.00867361, 1, 0, 0.315531,0.000432829) , 
4, 0.00927977, 1, 0, 0.483338,-0.000223807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706918,0.00127344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633052,-0.0158296) , 
6, 0.0238009, 1, 0, 0.671418,-0.00254287) , 
6, 0.0231934, 1, 0, 0.494969,-0.000367225)    );
  // itree = 488
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976268,-0.00562458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502658,-0.0110561) , 
0, 0.00201502, 1, 0, 0.941084,-0.00135118) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935471,-0.0326484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896687,0.00796089) , 
0, 0.00199179, 1, 0, 0.915971,-0.00654591) , 
4, 0.0110986, 1, 0, 0.937556,-0.00208079) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131383) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000167346,0.0105208) , 
2, 0.333272, 1, 0, 5.38342e-05,-7.14499e-05) , 
4, 0.00812304, 1, 0, 3.77048e-05,-0.000185223) , 
0, 0.00470304, 1, 0, 0.504815,-0.00120583)    );
  // itree = 489
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647999,-0.00383243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59466,-0.0154389) , 
7, 6.5416e-05, 1, 0, 0.642136,-0.00055593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73266,-0.0338447) , 
5, 0.0085237, 1, 0, 0.649694,-0.00112176) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78434,0.0127478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684084,0.0701132) , 
2, 0.057825, 1, 0, 0.768494,0.00170383) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.149415,-0.0129422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173196,0.00986968) , 
3, 50.2977, 1, 0, 0.161526,-0.000655277) , 
2, 0.07147, 1, 0, 0.386843,0.000220461) , 
5, 0.00895042, 1, 0, 0.506089,-0.000388459)    );
  // itree = 490
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917376,0.0340657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72105,-0.00842186) , 
2, 0.0316976, 1, 0, 0.886207,0.000821582) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.139593,-0.0137287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1303,0.00659189) , 
3, 37.7348, 1, 0, 0.134051,-0.000692643) , 
2, 0.0475987, 1, 0, 0.474828,-6.59815e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943044,0.0352049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831131,-0.0817996) , 
3, 47.0543, 1, 0, 0.895792,-0.00841972) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499575,0.0142196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.252124,0.0014889) , 
5, 0.0116001, 1, 0, 0.35187,0.00197269) , 
2, 0.0715735, 1, 0, 0.605004,-0.0028638) , 
6, 0.0208745, 1, 0, 0.498159,-0.000518679)    );
  // itree = 491
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631612,-0.00854852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44971,0.0724078) , 
3, 100.578, 1, 0, 0.613786,-0.000229962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685797,-0.0461044) , 
4, 0.00773657, 1, 0, 0.620253,-0.00118086) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93644,0.0134276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.30942e-05,-0.00638103) , 
0, 0.00470348, 1, 0, 0.390556,0.000910884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960936,0.0174769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519739,-0.0104266) , 
2, 0.0714814, 1, 0, 0.748662,-0.00301214) , 
6, 0.0231937, 1, 0, 0.423517,0.000549795) , 
4, 0.00812296, 1, 0, 0.499906,-0.000122186)    );
  // itree = 492
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961905,0.0138688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531812,-0.0828693) , 
5, 0.00746423, 1, 0, 0.865194,-0.000235922) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913147,-0.00107962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889274,0.0774909) , 
3, 23.5281, 1, 0, 0.897147,0.00155941) , 
6, 0.0162499, 1, 0, 0.877868,0.000476197) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954587,0.0096554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649415,-0.0105756) , 
0, 0.000447783, 1, 0, 0.774707,-0.00422422) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00035183,0.0244619) , 
2, 0.392183, 1, 0, 8.22407e-05,-0.000102784) , 
0, 0.00470348, 1, 0, 0.201497,-0.00117442) , 
2, 0.0475987, 1, 0, 0.498378,-0.000449913)    );
  // itree = 493
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543075,-0.000763457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541749,-0.0160694) , 
3, 35.3198, 1, 0, 0.542961,-0.00036839) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.156449,-0.00665944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83346,0.0347944) , 
7, 2.23527e-05, 1, 0, 0.527819,0.0016021) , 
3, 39.04, 1, 0, 0.53824,0.000246018) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652098,-0.0211598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321871,-0.0477575) , 
6, 0.00924457, 1, 0, 0.460812,-0.00470359) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.327791,0.00179545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652664,-0.00966544) , 
6, 0.019722, 1, 0, 0.418,-0.000806196) , 
4, 0.00580343, 1, 0, 0.425845,-0.00152038) , 
3, 63.0729, 1, 0, 0.500507,-0.000346991)    );
  // itree = 494
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303219,-0.0238649) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.425458,-0.00721336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642232,0.0150662) , 
6, 0.0168973, 1, 0, 0.466673,-2.33103e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653833,-0.0185306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636421,0.00693036) , 
3, 50.4597, 1, 0, 0.646369,-0.00191016) , 
6, 0.0197151, 1, 0, 0.510082,-0.000479112) , 
5, 0.00228408, 1, 0, 0.502123,-0.000699756)    );
  // itree = 495
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91007,0.0389545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507651,0.0332126) , 
2, 0.0224377, 1, 0, 0.845568,0.00118018) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0034952,-0.0133563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000117396,0.00349139) , 
4, 0.0104448, 1, 0, 0.00143326,-0.000413735) , 
2, 0.0476132, 1, 0, 0.348808,0.000242187) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550438,0.0123017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616842,-0.00841257) , 
6, 0.0171864, 1, 0, 0.606143,-0.00120732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920175,-0.148691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.113726,0.00644053) , 
2, 0.0476062, 1, 0, 0.583249,-0.00467557) , 
1, 1.54006, 1, 0, 0.600356,-0.00208407) , 
6, 0.0127566, 1, 0, 0.497834,-0.00113597)    );
  // itree = 496
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960716,-0.0200892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000827745,-0.00150591) , 
0, 0.00235034, 1, 0, 0.321315,-0.000971984) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981656,0.0239665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00142805,-0.00628003) , 
0, 0.00235038, 1, 0, 0.597307,0.0012385) , 
6, 0.011926, 1, 0, 0.473593,0.000247645) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.604855,-0.00803277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689525,0.0274881) , 
3, 22.9103, 1, 0, 0.635387,0.000393057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634795,-0.0252093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582215,-0.00425133) , 
3, 68.7775, 1, 0, 0.607172,-0.00403367) , 
3, 37.0337, 1, 0, 0.619208,-0.00214523) , 
6, 0.0208739, 1, 0, 0.499048,-0.000170664)    );
  // itree = 497
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938372,-0.00586171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960477,0.0504925) , 
5, 0.00616428, 1, 0, 0.948408,0.00140355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145744) , 
0, 0.00383936, 1, 0, 0.61329,0.000576055) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791527,-0.0179566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54232,-0.020844) , 
2, 0.0770046, 1, 0, 0.762362,-0.00291518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.397258,0.012095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00320775,-0.00780488) , 
2, 0.153015, 1, 0, 0.0973173,6.50726e-05) , 
2, 0.0952032, 1, 0, 0.43364,-0.00144208) , 
4, 0.00810856, 1, 0, 0.504907,-0.000641491)    );
  // itree = 498
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932034,0.01136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854254,-0.0796585) , 
3, 58.3112, 1, 0, 0.909169,-0.000433971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970371,-0.0282297) , 
7, 9.97965e-05, 1, 0, 0.918219,-0.00160125) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.263468,-0.00610384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115421,0.0039513) , 
4, 0.00812137, 1, 0, 0.16722,-0.000281271) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954526,-0.00411683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658236,0.0325753) , 
0, 0.00188487, 1, 0, 0.799866,0.00197348) , 
7, 8.68508e-05, 1, 0, 0.307291,0.000217944) , 
2, 0.0238066, 1, 0, 0.498211,-0.000350568)    );
  // itree = 499
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522505,0.00346253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494281,-0.0227167) , 
3, 17.9926, 1, 0, 0.514355,-0.000680145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971755,0.01818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000948363,-0.00936566) , 
0, 0.00235038, 1, 0, 0.434807,0.000293681) , 
3, 25.1948, 1, 0, 0.459441,-7.88255e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901643,-0.0158833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835034,-0.0206188) , 
2, 0.0736026, 1, 0, 0.883969,-0.00412572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.101509,0.00174455) , 
2, 0.118997, 1, 0, 0.638254,-0.00266737) , 
6, 0.0197143, 1, 0, 0.502297,-0.000645291)    );
  // itree = 500
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964971,-0.0100632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980902,0.0418183) , 
5, 0.00607487, 1, 0, 0.974196,0.00122397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0123708,-0.0161385) , 
0, 0.00175113, 1, 0, 0.646737,0.000144839) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.728684,-0.0237849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768663,0.00228496) , 
5, 0.00998731, 1, 0, 0.750793,-0.00351196) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0152169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311903,0.00553642) , 
4, 0.010425, 1, 0, 0.209942,-2.60165e-05) , 
5, 0.0109523, 1, 0, 0.366819,-0.00103713) , 
5, 0.00911023, 1, 0, 0.498021,-0.000483126)    );
  // itree = 501
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925354,0.0340203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931335,-0.0288902) , 
6, 0.0178904, 1, 0, 0.926225,0.000287865) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911316,-0.0154175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000812433,-0.00367657) , 
0, 0.00235152, 1, 0, 0.245789,-0.00159242) , 
2, 0.0238008, 1, 0, 0.471934,-0.0009675) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912151,-0.0781532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.555235,-0.00356469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577452,-0.0261983) , 
1, 1.16332, 1, 0, 0.559515,-0.00304176) , 
2, 0.0239745, 1, 0, 0.633919,-0.00609724) , 
6, 0.0208745, 1, 0, 0.499965,-0.00185519)    );
  // itree = 502
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978137,0.0828455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933739,-0.154571) , 
2, 0.00258527, 1, 0, 0.950154,-0.00352136) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875939,0.00700552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99411,0.0192872) , 
7, 8.70455e-05, 1, 0, 0.90888,0.000750049) , 
2, 0.00905645, 1, 0, 0.931551,-0.00159615) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936676,0.0197107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942994,-0.00286808) , 
4, 0.0103046, 1, 0, 0.939094,0.00178077) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00262049,-0.010346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000617402,-0.00113068) , 
2, 0.13714, 1, 0, 0.00114046,-0.000341923) , 
0, 0.00235174, 1, 0, 0.312633,0.00036302) , 
2, 0.0238008, 1, 0, 0.506341,-0.000250158)    );
  // itree = 503
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60552,-0.0119917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843357,0.00534472) , 
7, 6.70809e-05, 1, 0, 0.67555,-0.000397612) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8099,0.060033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759809,0.0156724) , 
3, 62.7339, 1, 0, 0.793614,0.00604831) , 
5, 0.0104501, 1, 0, 0.690282,0.00040668) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934662,-0.0234408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130952) , 
4, 0.00928055, 1, 0, 0,-0.000201143) , 
0, 0.00470304, 1, 0, 0.138954,-0.00175793) , 
5, 0.0115531, 1, 0, 0.506124,-0.000316355)    );
  // itree = 504
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.277506,-0.0225839) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635146,-0.00430236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.78007,0.0175286) , 
6, 0.0208748, 1, 0, 0.66303,0.000144237) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00015137,0.00496631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000684242,-0.0129854) , 
6, 0.0127754, 1, 0, 0.000401535,-0.00113194) , 
2, 0.261857, 1, 0, 0.512916,-0.000144874) , 
5, 0.00232522, 1, 0, 0.502714,-0.000324165)    );
  // itree = 505
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.363621,-0.0071482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848622,-0.0129109) , 
7, 5.24932e-05, 1, 0, 0.50989,-0.00102753) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92593,0.0180577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131134) , 
0, 0.00469953, 1, 0, 0.385931,0.000796082) , 
3, 62.9886, 1, 0, 0.469457,-0.000432702) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654253,0.0160612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616949,-0.018785) , 
3, 25.1663, 1, 0, 0.627476,-0.00448172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65075,0.0226187) , 
1, 1.16331, 1, 0, 0.632223,-0.00272273) , 
6, 0.0208782, 1, 0, 0.498251,-0.000837812)    );
  // itree = 506
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.312195,-0.0105661) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730968,-0.0141988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.256374,0.016056) , 
4, 0.00652463, 1, 0, 0.416819,-1.50005e-05) , 
4, 0.0023272, 1, 0, 0.410022,-0.000158286) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930012,-0.0108672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43228,-0.0157278) , 
2, 0.071385, 1, 0, 0.768717,-0.00436674) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.734972,0.0263439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316077,-0.0033037) , 
1, 1.0671, 1, 0, 0.385385,0.000176001) , 
5, 0.0112665, 1, 0, 0.623574,-0.0026467) , 
6, 0.0162376, 1, 0, 0.49965,-0.00120268)    );
  // itree = 507
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.438186,-0.0110474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.153537,-0.00400256) , 
4, 0.0034859, 1, 0, 0.198669,-0.000253011) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798117,0.0681264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000227324,0.00158964) , 
0, 0.00705523, 1, 0, 0.115103,0.000633663) , 
3, 63.0851, 1, 0, 0.168334,6.88583e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905788,-0.0273004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806026,0.00334467) , 
5, 0.00814695, 1, 0, 0.848021,-0.00143182) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.423047,-0.0241405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982144,0.0167879) , 
5, 0.0115815, 1, 0, 0.676885,-0.0060564) , 
4, 0.0111449, 1, 0, 0.814957,-0.0023253) , 
7, 2.5504e-05, 1, 0, 0.499208,-0.00115622)    );
  // itree = 508
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.356647,0.00553604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594257,-0.013801) , 
6, 0.0128752, 1, 0, 0.434977,-0.000613505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705977,0.0230219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485903,0.0184676) , 
4, 0.00927657, 1, 0, 0.601062,0.00217047) , 
6, 0.0168973, 1, 0, 0.46789,-6.18e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669546,-0.0236015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610919,-0.00654832) , 
6, 0.0217555, 1, 0, 0.629803,-0.00419083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621426,0.0338974) , 
1, 1.22311, 1, 0, 0.628348,-0.00312405) , 
6, 0.0197151, 1, 0, 0.506514,-0.000798915)    );
  // itree = 509
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997683,0.0309806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0893073) , 
4, 0.0104214, 1, 0, 0.998186,0.00165408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853946,-0.0293019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954011,-0.00873962) , 
0, 0.000855975, 1, 0, 0.941413,-0.00473059) , 
0, 0.000111645, 1, 0, 0.96897,-0.00163159) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00190883,-0.00783681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00244339,0.0176883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130956) , 
0, 0.020273, 1, 0, 0.000713407,0.000189729) , 
2, 0.14284, 1, 0, 0.00108657,-9.3226e-05) , 
0, 0.00235054, 1, 0, 0.498508,-0.000883834)    );
  // itree = 510
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.332281,0.00499492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541876,-0.0135711) , 
6, 0.0123411, 1, 0, 0.361935,-6.79043e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932425,0.0729858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387296,0.0746664) , 
2, 0.0237645, 1, 0, 0.599122,0.00229502) , 
6, 0.013641, 1, 0, 0.391803,0.000229649) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940987,-0.0548363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919241,0.0310529) , 
2, 0.0147182, 1, 0, 0.933089,-0.00470323) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499326,-0.0134478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486792,0.00757799) , 
3, 37.7183, 1, 0, 0.492033,-0.000471609) , 
2, 0.0238015, 1, 0, 0.605553,-0.00156075) , 
6, 0.0150773, 1, 0, 0.495054,-0.0006352)    );
  // itree = 511
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.54328,0.00182042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793354,-0.0206107) , 
7, 3.12903e-05, 1, 0, 0.6621,-0.00325717) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903623,0.0222773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340353,-0.00536981) , 
2, 0.0237528, 1, 0, 0.463291,1.53344e-05) , 
4, 0.00808736, 1, 0, 0.546554,-0.00135523) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526638,0.00620664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489854,-0.00772381) , 
3, 57.8297, 1, 0, 0.508574,-0.000160965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172614,0.0153096) , 
3, 139.359, 1, 0, 0.479017,3.57606e-06) , 
3, 25.2289, 1, 0, 0.499899,-0.000416558)    );
  // itree = 512
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.546136,0.00522943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422731,-0.0275817) , 
3, 62.8619, 1, 0, 0.50862,-0.000827944) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984907,0.0055196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600825,0.0299466) , 
2, 0.0237826, 1, 0, 0.797505,0.00242896) , 
7, 3.61589e-05, 1, 0, 0.617571,0.000400371) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.745088,-0.0014737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728992,-0.0225441) , 
4, 0.00888221, 1, 0, 0.734464,-0.00374746) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70562,0.00706921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0534768) , 
4, 0.0124111, 1, 0, 0.27815,-0.000208367) , 
4, 0.0104262, 1, 0, 0.434955,-0.00142452) , 
4, 0.00810925, 1, 0, 0.507222,-0.000702351)    );
  // itree = 513
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.346862,-0.0227591) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.425463,0.00806213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647671,-0.0118254) , 
6, 0.016573, 1, 0, 0.439922,0.00014908) , 
4, 0.00232623, 1, 0, 0.434992,-0.000173905) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510515,0.000735645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424589,0.0246415) , 
3, 35.4086, 1, 0, 0.460093,0.000771045) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.37121,-0.0420384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704321,-0.00774042) , 
6, 0.0187271, 1, 0, 0.667964,-0.0029715) , 
5, 0.00917595, 1, 0, 0.628895,-0.0022681) , 
6, 0.0174014, 1, 0, 0.503629,-0.0009152)    );
  // itree = 514
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821928,-0.00232271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761705,0.0390215) , 
6, 0.0162105, 1, 0, 0.807402,0.000528136) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0875947,-0.00930211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.20485e-05,-0.00694298) , 
0, 0.0141105, 1, 0, 0.015549,-0.00067507) , 
2, 0.0714155, 1, 0, 0.400263,-9.05044e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473085,-0.0751503) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95663,-0.0148764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853255,0.0113797) , 
0, 0.00165791, 1, 0, 0.903547,-0.000766256) , 
4, 0.00942389, 1, 0, 0.849312,-0.00281783) , 
7, 8.53041e-05, 1, 0, 0.497804,-0.000682926)    );
  // itree = 515
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876698,0.00330583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490022,0.0258136) , 
2, 0.0622791, 1, 0, 0.808216,0.00104098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0109885,-0.0116049) , 
2, 0.119004, 1, 0, 0.542287,0.000422171) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562854,-0.0160067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292252,0.00700195) , 
5, 0.00655716, 1, 0, 0.371681,-0.00057695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882992,-0.00635858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791839,-0.0189927) , 
5, 0.0110527, 1, 0, 0.840812,-0.00444707) , 
7, 8.8713e-05, 1, 0, 0.46892,-0.00137912) , 
3, 37.8455, 1, 0, 0.501987,-0.000567271)    );
  // itree = 516
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0871793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816726,0.0217848) , 
2, 0.0231498, 1, 0, 0.969597,0.00166573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00136755,0.00289793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137436) , 
6, 0.00530343, 1, 0, 0.000542647,-0.000175007) , 
0, 0.00235152, 1, 0, 0.375785,0.000537774) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619186,0.0408969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625753,-0.00699802) , 
6, 0.0180816, 1, 0, 0.624462,-0.00064998) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579847,-0.0194962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531404,-0.0640174) , 
6, 0.0162193, 1, 0, 0.570584,-0.00569848) , 
1, 1.48573, 1, 0, 0.610848,-0.00192559) , 
6, 0.0139179, 1, 0, 0.501433,-0.000778961)    );
  // itree = 517
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559403,-0.00155832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69683,-0.0290432) , 
7, 3.16652e-05, 1, 0, 0.591053,-0.00168367) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.300145,0.00806996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686782,-0.00923391) , 
6, 0.016906, 1, 0, 0.422894,-0.000370452) , 
5, 0.00641185, 1, 0, 0.471903,-0.000753182) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692953,0.00962473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46287,-0.0123187) , 
4, 0.0115992, 1, 0, 0.620662,0.000335709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614263,0.0452791) , 
6, 0.0238566, 1, 0, 0.619689,0.000952498) , 
6, 0.0208771, 1, 0, 0.498029,-0.000451643)    );
  // itree = 518
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57295,0.0084717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757916,0.0396876) , 
4, 0.00524162, 1, 0, 0.606046,0.00084357) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684118,-0.0401916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406792,-0.00139371) , 
4, 0.00667741, 1, 0, 0.433127,-0.000807195) , 
4, 0.00579273, 1, 0, 0.473728,-0.000419598) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617489,-0.023082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633558,0.00799783) , 
4, 0.011449, 1, 0, 0.624365,-0.00471857) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660925,-0.0165767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592567,0.0140083) , 
1, 1.08905, 1, 0, 0.617748,-0.00106275) , 
3, 50.289, 1, 0, 0.621471,-0.00311938) , 
6, 0.0208748, 1, 0, 0.499246,-0.000885907)    );
  // itree = 519
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231824,-0.0163218) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.557652,0.0137256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498488,-0.00131933) , 
3, 12.4451, 1, 0, 0.507707,7.92242e-05) , 
5, 0.00217232, 1, 0, 0.49472,-3.97298e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653863,0.00347158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588514,-0.0264143) , 
6, 0.0239113, 1, 0, 0.62892,-0.00375382) , 
6, 0.0231932, 1, 0, 0.503647,-0.000286804)    );
  // itree = 520
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.385402,0.00567203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597461,-0.0231182) , 
6, 0.0144411, 1, 0, 0.412101,-0.000146381) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.39893,-0.00582395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652465,0.0271608) , 
5, 0.00823814, 1, 0, 0.595036,0.00148108) , 
6, 0.0159622, 1, 0, 0.460081,0.000280467) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877421,-0.0492984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.360828,0.0130065) , 
2, 0.0473159, 1, 0, 0.521102,0.000146354) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906572,-0.0191156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617828,-0.0096194) , 
4, 0.0110884, 1, 0, 0.697267,-0.00516615) , 
4, 0.0104212, 1, 0, 0.638007,-0.00337908) , 
6, 0.0197185, 1, 0, 0.503427,-0.000611057)    );
  // itree = 521
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.388141,-0.000512382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564395,-0.0185925) , 
6, 0.0149882, 1, 0, 0.412891,-0.00028623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623168,0.0111418) , 
6, 0.0165653, 1, 0, 0.426515,-0.000126096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593413,-0.0294836) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639297,0.00430237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630082,-0.00764236) , 
6, 0.0213576, 1, 0, 0.63496,-0.000631205) , 
6, 0.0180624, 1, 0, 0.630453,-0.00187559) , 
6, 0.0173969, 1, 0, 0.49849,-0.000743535)    );
  // itree = 522
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85536,0.0151505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00158012,-0.00775732) , 
2, 0.0476103, 1, 0, 0.35377,0.000158601) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597364,-0.00806108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576771,-0.0640167) , 
1, 1.79015, 1, 0, 0.595624,-0.00164373) , 
6, 0.0129199, 1, 0, 0.474839,-0.000743626) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515685,0.0205473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92745,0.0396008) , 
4, 0.0110235, 1, 0, 0.653479,0.00429829) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.406399,-0.020997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7983,0.0114651) , 
6, 0.0235336, 1, 0, 0.604776,-0.00069807) , 
4, 0.0115729, 1, 0, 0.633937,0.00229351) , 
6, 0.0208739, 1, 0, 0.502637,-0.000212967)    );
  // itree = 523
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657975,0.00686391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584195,-0.0203185) , 
3, 48.7035, 1, 0, 0.628584,-0.00107987) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791506,0.0188939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0571163,-0.0194114) , 
4, 0.00843275, 1, 0, 0.35902,0.000405146) , 
4, 0.00578903, 1, 0, 0.434334,-9.75453e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938522,-0.0051093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63501,-0.0442541) , 
5, 0.0116554, 1, 0, 0.873187,-0.0033159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0722571,0.00382355) , 
2, 0.11897, 1, 0, 0.635712,-0.00215753) , 
6, 0.0173961, 1, 0, 0.505846,-0.000772459)    );
  // itree = 524
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.237425,-0.00979618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155802,0.0704336) , 
3, 62.843, 1, 0, 0.208775,0.000450878) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0644517,-0.00330754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466371,-0.0194298) , 
1, 2.60575, 1, 0, 0.133176,-0.000365353) , 
6, 0.00811724, 1, 0, 0.166359,-7.08414e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97836,-0.02009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965797,0.0398134) , 
2, 0.0226411, 1, 0, 0.973905,2.94447e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608906,-0.00422056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.367956,-0.0215536) , 
1, 1.46425, 1, 0, 0.564441,-0.00361915) , 
2, 0.0476045, 1, 0, 0.81226,-0.00142696) , 
7, 2.5835e-05, 1, 0, 0.49513,-0.000729818)    );
  // itree = 525
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.419551,0.00705849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.281258,-0.00873823) , 
3, 62.8697, 1, 0, 0.372635,5.09293e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970369,-8.33043e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663355,-0.0168749) , 
0, 0.00186874, 1, 0, 0.849273,-0.00199798) , 
7, 7.36757e-05, 1, 0, 0.485721,-0.000435191) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617545,0.0106851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622526,0.0153047) , 
3, 35.4084, 1, 0, 0.620562,0.00238062) , 
6, 0.0231942, 1, 0, 0.494755,-0.000246541)    );
  // itree = 526
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652175,-0.0158743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349883,0.00858545) , 
5, 0.0086847, 1, 0, 0.499372,-0.000403638) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893309,-0.0332234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297987,0.0111744) , 
2, 0.0953518, 1, 0, 0.635288,-0.00343613) , 
6, 0.0220346, 1, 0, 0.515682,-0.000767534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.182377,-0.0151817) , 
3, 138.475, 1, 0, 0.496367,-0.00106897)    );
  // itree = 527
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967666,-0.00296446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990683,0.0620635) , 
5, 0.00813138, 1, 0, 0.974768,0.00100354) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00267519,-0.0101533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000388087,-0.00109734) , 
2, 0.142892, 1, 0, 0.00110802,-0.000464197) , 
0, 0.00235152, 1, 0, 0.467966,0.000239564) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690395,0.0152791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629296,-0.00627096) , 
6, 0.0212648, 1, 0, 0.6505,-0.000176167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56436,-0.0146697) , 
3, 88.3229, 1, 0, 0.633689,-0.00159963) , 
6, 0.0197185, 1, 0, 0.507686,-0.00020125)    );
  // itree = 528
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934268,0.0136534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888461,-0.0304378) , 
2, 0.0181362, 1, 0, 0.928185,-0.000318806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943197,0.0873975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929482,0.0846359) , 
6, 0.0217219, 1, 0, 0.936369,0.00453431) , 
6, 0.0197403, 1, 0, 0.929574,0.000505365) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689867,-0.00753656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878858,-0.04175) , 
6, 0.0174324, 1, 0, 0.770418,-0.00530868) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704326,-0.0027241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000126853,-0.00172505) , 
0, 0.00705102, 1, 0, 0.207616,-0.000386475) , 
2, 0.046479, 1, 0, 0.307108,-0.00125663) , 
2, 0.0238052, 1, 0, 0.496533,-0.00072043)    );
  // itree = 529
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553678,0.0200026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330518,-0.00792377) , 
5, 0.00347175, 1, 0, 0.358323,-0.000148251) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.573702,-0.00116632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611183,0.101673) , 
1, 1.69856, 1, 0, 0.595268,0.0013318) , 
6, 0.013641, 1, 0, 0.388754,4.18289e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.563703,-0.0227954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599694,-0.0603274) , 
6, 0.01634, 1, 0, 0.573839,-0.00516032) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.890571,0.000833063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188019,-0.00846312) , 
2, 0.0951916, 1, 0, 0.613222,-0.0011948) , 
6, 0.0168456, 1, 0, 0.605661,-0.00195613) , 
6, 0.0150773, 1, 0, 0.492814,-0.00091668)    );
  // itree = 530
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904845,-0.0122337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670544,0.0135964) , 
2, 0.0340053, 1, 0, 0.846759,-0.000137222) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933232,0.0722107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927902,0.0874097) , 
1, 1.14817, 1, 0, 0.93158,0.00455326) , 
6, 0.0208787, 1, 0, 0.860334,0.000613437) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.541699,0.00728843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423526,-0.0200111) , 
2, 0.0909482, 1, 0, 0.48581,-0.00464449) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.20179,0.0226477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00414618,-0.00422648) , 
2, 0.14933, 1, 0, 0.0271465,6.38866e-05) , 
2, 0.112331, 1, 0, 0.11742,-0.000862812) , 
2, 0.0714155, 1, 0, 0.498502,-0.000105561)    );
  // itree = 531
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562932,-0.0164578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65114,0.0159806) , 
5, 0.00607288, 1, 0, 0.611961,0.000206074) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853628,-0.0187884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863177,0.0132715) , 
3, 59.4163, 1, 0, 0.856802,-0.00338538) , 
7, 8.41242e-05, 1, 0, 0.673287,-0.000693485) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989832,0.0346079) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0151522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00143258,0.0102129) , 
4, 0.010438, 1, 0, 0.000860038,-0.00020837) , 
0, 0.00234888, 1, 0, 0.137587,0.000494201) , 
5, 0.0115713, 1, 0, 0.498644,-0.00030629)    );
  // itree = 532
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522025,0.0165437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.511091,-0.00965183) , 
3, 18.0207, 1, 0, 0.514377,-0.000342409) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615515,0.000882191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679352,0.0420528) , 
3, 21.6057, 1, 0, 0.656638,0.00270423) , 
6, 0.0220365, 1, 0, 0.530413,1.00858e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751522,-0.0123572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348486,-0.0177868) , 
2, 0.0867048, 1, 0, 0.642587,-0.0031713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00398766,0.00991238) , 
2, 0.166565, 1, 0, 0.384904,-0.00159266) , 
3, 75.686, 1, 0, 0.493518,-0.000403077)    );
  // itree = 533
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782061,0.0277962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387787,0.00363957) , 
4, 0.00347437, 1, 0, 0.512354,0.000519389) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.352554,-0.0166673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.3815e-05,-0.00811071) , 
2, 0.0476256, 1, 0, 0.0495439,-0.000262003) , 
5, 0.00451076, 1, 0, 0.163216,-7.0083e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.797851,0.0327759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760698,-0.0057773) , 
6, 0.0204907, 1, 0, 0.774436,-9.65122e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822577,-0.0503738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870393,-0.00190403) , 
1, 1.46811, 1, 0, 0.860676,-0.00307562) , 
1, 1.3691, 1, 0, 0.817418,-0.0015813) , 
7, 2.53286e-05, 1, 0, 0.497399,-0.000842048)    );
  // itree = 534
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642039,0.00723577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740951,-0.014301) , 
4, 0.00946837, 1, 0, 0.648741,0.000335641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760589,0.039003) , 
4, 0.0099441, 1, 0, 0.657819,0.000563811) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75422,-0.0180981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973166,0.00542223) , 
5, 0.0108713, 1, 0, 0.912632,-0.0031241) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000327008,0.0433694) , 
2, 0.309429, 1, 0, 0.000118318,2.9511e-05) , 
0, 0.00470348, 1, 0, 0.262951,-0.000878827) , 
4, 0.0104411, 1, 0, 0.49592,-2.76815e-05)    );
  // itree = 535
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.302581,-0.00243433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527179,-0.0223137) , 
6, 0.0112347, 1, 0, 0.334573,-0.000576921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.759271,0.0375061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361256,-6.03714e-05) , 
4, 0.00809836, 1, 0, 0.58474,0.00140236) , 
6, 0.0124259, 1, 0, 0.43028,0.000180301) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66811,0.016757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612536,0.0275292) , 
6, 0.0207109, 1, 0, 0.639556,0.00209685) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938145,-0.0131861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00015804,-0.00512704) , 
0, 0.00468527, 1, 0, 0.606916,-0.00287215) , 
3, 12.6173, 1, 0, 0.61182,-0.00212565) , 
6, 0.0173969, 1, 0, 0.495779,-0.000651683)    );
  // itree = 536
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620865,-0.0162571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389875,0.00324896) , 
4, 0.00695181, 1, 0, 0.466965,-0.000415551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622848,-0.0189762) , 
6, 0.0209843, 1, 0, 0.475613,-0.000824601) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65479,-0.00734306) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593401,0.00445539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636095,0.0805522) , 
1, 1.08207, 1, 0, 0.617093,0.00334377) , 
3, 25.162, 1, 0, 0.62732,0.00196093) , 
6, 0.0220335, 1, 0, 0.493579,-0.000494722)    );
  // itree = 537
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.350028,-0.00352611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845087,-0.00433773) , 
7, 6.3629e-05, 1, 0, 0.478586,-0.000433639) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622223,0.0732724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652071,0.00732166) , 
1, 1.11461, 1, 0, 0.636515,0.00288338) , 
6, 0.0220863, 1, 0, 0.487468,-0.000247086) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622361,-0.0463538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630457,0.0136948) , 
1, 1.06243, 1, 0, 0.627306,-0.00362937) , 
6, 0.0231935, 1, 0, 0.49656,-0.000467009)    );
  // itree = 538
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520685,-0.00149984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519773,-0.0577593) , 
3, 45.5096, 1, 0, 0.520615,-0.000647676) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620493,-0.0376912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615846,0.0276956) , 
6, 0.0230279, 1, 0, 0.617689,-0.00461551) , 
6, 0.0220335, 1, 0, 0.532085,-0.0011165) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974776,0.0225538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013107) , 
0, 0.00470348, 1, 0, 0.63085,0.00138781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00057189,-0.0101489) , 
2, 0.237979, 1, 0, 0.453719,0.00074119) , 
3, 50.3104, 1, 0, 0.498516,-0.000320748)    );
  // itree = 539
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976828,0.00396027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942901,-0.014217) , 
4, 0.0102751, 1, 0, 0.971644,-0.000512814) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0883614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927794,0.0332589) , 
2, 0.064379, 1, 0, 0.975885,0.00490908) , 
0, 0.00178711, 1, 0, 0.972426,0.000487137) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00412453,-0.00850681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00161713,0.0277999) , 
6, 0.0162145, 1, 0, 0.00051756,0.000180013) , 
2, 0.142901, 1, 0, 0.00161828,-0.000255177) , 
0, 0.00235152, 1, 0, 0.504245,0.00012915)    );
  // itree = 540
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.361514,-0.00738829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586036,0.0184446) , 
6, 0.0132383, 1, 0, 0.436703,0.000243436) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606417,-0.0134689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138017,-0.00216746) , 
6, 0.0180391, 1, 0, 0.267118,-0.00106496) , 
6, 0.0173773, 1, 0, 0.407307,1.66391e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980986,-0.00596498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924493,-0.0410213) , 
4, 0.0110384, 1, 0, 0.959161,-0.0074922) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76601,-0.0166714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741762,0.0230433) , 
4, 0.0109281, 1, 0, 0.755645,-0.000610912) , 
0, 0.00174034, 1, 0, 0.846632,-0.00368736) , 
7, 8.53042e-05, 1, 0, 0.504433,-0.000802241)    );
  // itree = 541
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93132,0.0447891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450359,-0.0236726) , 
4, 0.0115984, 1, 0, 0.877657,0.00172353) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894894,-0.0340732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772646,0.00194041) , 
4, 0.00692872, 1, 0, 0.815857,-0.00175257) , 
3, 62.2241, 1, 0, 0.860526,0.000759973) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909668,0.0148011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540562,-0.0122619) , 
0, 0.000670749, 1, 0, 0.688199,-0.00408571) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000504108,0.0576685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131021) , 
6, 0.00579873, 1, 0, 0.00013212,4.46228e-06) , 
0, 0.00470348, 1, 0, 0.123502,-0.000728905) , 
2, 0.0714198, 1, 0, 0.504778,4.13183e-05)    );
  // itree = 542
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.249029,-0.0303796) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914049,0.0125493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715563,0.0510942) , 
2, 0.0339617, 1, 0, 0.882398,0.000855602) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696803,-0.0199254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137311,-0.000372334) , 
2, 0.0691383, 1, 0, 0.211918,-0.0005487) , 
2, 0.0475958, 1, 0, 0.505594,6.63965e-05) , 
5, 0.00227818, 1, 0, 0.4944,-0.000132672)    );
  // itree = 543
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498787,-0.0106953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515303,-0.00333391) , 
3, 3.60735, 1, 0, 0.514237,-0.000497763) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76391,-0.0201468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586519,0.0105341) , 
5, 0.0116554, 1, 0, 0.661356,-0.00363123) , 
6, 0.0220335, 1, 0, 0.531118,-0.000857312) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56716,0.00158163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732299,0.032072) , 
5, 0.00915674, 1, 0, 0.632569,0.00215117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000179297,-0.0139844) , 
5, 0.0128233, 1, 0, 0.390873,0.000914365) , 
3, 75.6882, 1, 0, 0.495928,-0.000412762)    );
  // itree = 544
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988724,-0.010803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99697,0.0356195) , 
5, 0.00994583, 1, 0, 0.991136,0.000603693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866647,-0.026498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950309,-0.00477404) , 
0, 0.00100663, 1, 0, 0.936822,-0.00403431) , 
0, 0.000335435, 1, 0, 0.963842,-0.00172703) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00357376,0.0569992) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00237782,-0.0103148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000591154,0.00802845) , 
2, 0.142901, 1, 0, 0.00111458,-0.000352835) , 
6, 0.00464231, 1, 0, 0.00162187,-2.76498e-05) , 
0, 0.00235174, 1, 0, 0.507785,-0.000921586)    );
  // itree = 545
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.266019,-0.0261601) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.469978,-0.0131117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403102,-0.0017749) , 
3, 12.5747, 1, 0, 0.413772,-0.000274292) , 
5, 0.00225267, 1, 0, 0.40592,-0.000449752) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871503,-0.00641046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802325,-0.0381264) , 
3, 29.2033, 1, 0, 0.846366,-0.0064984) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94883,-0.00962951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61069,0.00877432) , 
2, 0.0949381, 1, 0, 0.845355,0.000255891) , 
3, 47.1906, 1, 0, 0.845895,-0.00335431) , 
7, 8.70454e-05, 1, 0, 0.500822,-0.00107626)    );
  // itree = 546
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243944,-0.0265284) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554748,0.00119877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535558,-0.0283211) , 
3, 19.8214, 1, 0, 0.546055,-0.00102418) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636533,0.0130358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000140499,-0.0145441) , 
2, 0.261745, 1, 0, 0.486839,0.000638237) , 
3, 37.8445, 1, 0, 0.51377,-0.000117827) , 
5, 0.00231852, 1, 0, 0.501155,-0.000295112)    );
  // itree = 547
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567929,0.0013441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907536,0.0341026) , 
7, 3.50295e-05, 1, 0, 0.700515,0.00101371) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915313,-0.00917088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.84975e-05,-0.00198053) , 
0, 0.00469535, 1, 0, 0.119686,-0.000364102) , 
4, 0.00812304, 1, 0, 0.434401,0.000382451) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669605,0.00227991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627259,-0.0130229) , 
4, 0.0104297, 1, 0, 0.648385,-0.00157315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437489,-0.0173813) , 
3, 112.801, 1, 0, 0.626173,-0.00240349) , 
6, 0.0173981, 1, 0, 0.503437,-0.000620453)    );
  // itree = 548
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.387868,-0.00303197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540544,-0.0585613) , 
6, 0.0149847, 1, 0, 0.398491,-0.000538312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.837399,0.0175297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.289538,0.0232774) , 
2, 0.0475484, 1, 0, 0.584759,0.00242887) , 
6, 0.0157371, 1, 0, 0.42409,-0.000130526) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705801,-0.00925165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448996,0.0209419) , 
4, 0.0115584, 1, 0, 0.625101,-0.000953391) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580611,-0.0342334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612754,-0.00928627) , 
1, 1.37481, 1, 0, 0.596589,-0.00758046) , 
1, 1.3319, 1, 0, 0.619694,-0.00221019) , 
6, 0.0173961, 1, 0, 0.493478,-0.000868254)    );
  // itree = 549
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970616,-0.0150221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961218,0.00573867) , 
0, 0.00127881, 1, 0, 0.967388,-0.00131096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438777,-0.0149662) , 
0, 0.00223802, 1, 0, 0.938358,-0.00202004) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131874) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130984) , 
3, 75.5631, 1, 0, 0,-9.52986e-05) , 
4, 0.00811712, 1, 0, 0,-0.000215216) , 
0, 0.00470075, 1, 0, 0.49674,-0.00117064)    );
  // itree = 550
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663317,-0.0195858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620346,0.00334113) , 
3, 24.9532, 1, 0, 0.634649,-0.000496884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961874,0.00689672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823297,0.0400226) , 
0, 0.00167013, 1, 0, 0.888869,0.00295287) , 
7, 8.34059e-05, 1, 0, 0.697887,0.000361256) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980245,-0.00650212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87941,-0.0299072) , 
0, 0.000445283, 1, 0, 0.927109,-0.010364) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000103591,0.000786289) , 
4, 0.010425, 1, 0, 6.09826e-05,-0.000133578) , 
0, 0.00470304, 1, 0, 0.165113,-0.001955) , 
5, 0.0113809, 1, 0, 0.511192,-0.000450407)    );
  // itree = 551
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997468,-0.0616282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936659,0.029307) , 
2, 0.070997, 1, 0, 0.989819,-0.000303143) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985037,-0.00767824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501164,-0.0118129) , 
2, 0.0934942, 1, 0, 0.933974,-0.00335667) , 
0, 0.000335535, 1, 0, 0.962005,-0.00182397) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00105321,-0.00820433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000586075,0.00311263) , 
4, 0.00928217, 1, 0, 0.000753085,-0.000188433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00330764,0.0175535) , 
3, 88.3036, 1, 0, 0.001383,4.01057e-05) , 
0, 0.00235054, 1, 0, 0.495568,-0.000918856)    );
  // itree = 552
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971525,0.0261852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131563) , 
0, 0.00235152, 1, 0, 0.249556,0.000100407) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965573,-0.00742209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351673,-0.0201638) , 
2, 0.0713692, 1, 0, 0.821845,-0.00343737) , 
7, 3.21562e-05, 1, 0, 0.539427,-0.00169152) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947371,-0.0864613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71006,0.015038) , 
2, 0.00680106, 1, 0, 0.757543,0.000901187) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0245566,-0.0102287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000216229,0.00966117) , 
0, 0.0234615, 1, 0, 0.00872161,-0.00100536) , 
2, 0.14284, 1, 0, 0.487567,0.00021381) , 
3, 25.1774, 1, 0, 0.504061,-0.000392182)    );
  // itree = 553
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569655,-0.00242548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728145,0.0863046) , 
4, 0.00663066, 1, 0, 0.58597,0.00061704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527037,-0.020836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104219,0.0131605) , 
5, 0.00901053, 1, 0, 0.308562,-0.000489999) , 
4, 0.00696322, 1, 0, 0.414777,-6.61317e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963625,-0.0164537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713535,0.000203348) , 
0, 0.00188487, 1, 0, 0.839236,-0.00294514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880378,-0.0336736) , 
7, 0.000139751, 1, 0, 0.844526,-0.00516705) , 
7, 8.87131e-05, 1, 0, 0.505388,-0.00114164)    );
  // itree = 554
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0872154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911137,0.0228346) , 
2, 0.0225278, 1, 0, 0.978903,0.0015483) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00100696,0.00166526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138204) , 
6, 0.00695982, 1, 0, 0.000461704,-0.00021031) , 
0, 0.00235174, 1, 0, 0.412151,0.000529643) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651143,-0.00880213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69772,-0.032241) , 
3, 53.8824, 1, 0, 0.660293,-0.0032414) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488786,-0.00295729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588514,0.0153095) , 
6, 0.0224195, 1, 0, 0.511515,0.000299836) , 
3, 75.4356, 1, 0, 0.621079,-0.00230803) , 
6, 0.0162368, 1, 0, 0.500048,-0.000664175)    );
  // itree = 555
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669478,-0.00681131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87088,0.0157186) , 
6, 0.0119298, 1, 0, 0.796466,0.000671) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115297,-0.010938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130955) , 
0, 0.0117587, 1, 0, 0.02061,-0.000980665) , 
2, 0.095209, 1, 0, 0.470242,-2.34749e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913294,-0.0115224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827862,-0.0375264) , 
2, 0.0409807, 1, 0, 0.873885,-0.00594858) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227785,0.00627845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384652,-0.00364161) , 
3, 62.927, 1, 0, 0.290936,0.000354162) , 
2, 0.0953703, 1, 0, 0.617116,-0.00317244) , 
6, 0.0208745, 1, 0, 0.495847,-0.000572445)    );
  // itree = 556
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972694,0.00242461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00247569,-0.0267123) , 
0, 0.00195032, 1, 0, 0.653661,-0.00147862) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775923,0.0261824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0522451,-0.00872352) , 
4, 0.0107189, 1, 0, 0.271871,0.000533193) , 
4, 0.00928143, 1, 0, 0.480982,-0.000568699) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960053,-0.0136368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736335,0.031165) , 
0, 0.00135587, 1, 0, 0.836846,-0.00129844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332752,-0.0222813) , 
5, 0.0119581, 1, 0, 0.626438,-0.00407638) , 
6, 0.0220335, 1, 0, 0.498326,-0.000986971)    );
  // itree = 557
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.459814,-0.0172032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87935,-0.0102631) , 
6, 0.00475327, 1, 0, 0.85741,-0.00113383) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.482545,-0.0200543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51957,0.0144062) , 
3, 62.9903, 1, 0, 0.497303,-0.00420673) , 
2, 0.0680106, 1, 0, 0.793587,-0.00167846) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.134008,0.0228436) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00343783,0.0106602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0158044) , 
2, 0.329183, 1, 0, 0.00164061,-0.000123391) , 
2, 0.17354, 1, 0, 0.0222542,0.000427091) , 
2, 0.119033, 1, 0, 0.503787,-0.000887376)    );
  // itree = 558
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909867,-0.0180205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839252,0.0380903) , 
5, 0.00800092, 1, 0, 0.874556,0.000476487) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758284,-0.0106092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000204073,-0.00583834) , 
0, 0.00235152, 1, 0, 0.105142,-0.00157146) , 
2, 0.0714198, 1, 0, 0.536772,-0.000422593) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991853,-0.00599701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844951,-0.0127459) , 
2, 0.0237175, 1, 0, 0.912106,-0.00436492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013109) , 
0, 0.00470348, 1, 0, 0.430182,-0.00216163) , 
3, 62.9865, 1, 0, 0.501902,-0.00099151)    );
  // itree = 559
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849773,0.00118445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985029,0.0613501) , 
7, 2.52798e-05, 1, 0, 0.947535,0.00120581) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679831,-0.00926247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595455,0.00111079) , 
3, 23.5281, 1, 0, 0.620143,-0.000596052) , 
4, 0.0104205, 1, 0, 0.880906,0.000839104) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.122394,-0.00956365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.170605,0.00608198) , 
5, 0.00871643, 1, 0, 0.155622,-0.000108788) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596439,-0.0164298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420049,0.0136513) , 
5, 0.0116554, 1, 0, 0.487674,-0.00209066) , 
6, 0.0220357, 1, 0, 0.202173,-0.000386627) , 
2, 0.0476132, 1, 0, 0.50034,0.000151836)    );
  // itree = 560
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.263785,-0.019659) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932641,0.00511807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9523,0.0853719) , 
6, 0.0208802, 1, 0, 0.935018,0.000624799) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.797403,-0.0196453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.216556,-0.00100683) , 
2, 0.0465059, 1, 0, 0.320336,-0.000652982) , 
2, 0.0238066, 1, 0, 0.5106,-0.000257469) , 
5, 0.00231625, 1, 0, 0.499911,-0.00046786)    );
  // itree = 561
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.391653,0.00223079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575328,-0.0135858) , 
6, 0.0149876, 1, 0, 0.417046,-0.000151376) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949829,0.0136634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133081) , 
0, 0.00466501, 1, 0, 0.625392,0.00134698) , 
6, 0.0165653, 1, 0, 0.491196,0.000381884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638251,0.0227721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603866,-0.0141077) , 
3, 36.9287, 1, 0, 0.617672,-0.00222992) , 
6, 0.0231932, 1, 0, 0.499756,0.000205112)    );
  // itree = 562
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95282,0.0645688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942092,0.0746884) , 
6, 0.0151359, 1, 0, 0.949865,0.00105474) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915007,-0.0639712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838401,-0.0265527) , 
2, 0.00863667, 1, 0, 0.852564,-0.00371592) , 
2, 0.00453404, 1, 0, 0.874636,-0.0026337) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939165,0.031999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836267,0.00681722) , 
0, 0.000558471, 1, 0, 0.885717,0.00431638) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00214951,-0.0138006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000210931,-0.000536765) , 
2, 0.15538, 1, 0, 0.000706529,-0.000521613) , 
0, 0.00235152, 1, 0, 0.20185,0.000577957) , 
2, 0.0476103, 1, 0, 0.496448,-0.000828352)    );
  // itree = 563
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.440005,0.00372325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631359,-0.0147473) , 
6, 0.0179858, 1, 0, 0.476076,-0.000254669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672941,0.0134943) , 
6, 0.0209852, 1, 0, 0.486415,-0.000100312) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576869,-0.0023567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608006,-0.0322901) , 
6, 0.0225656, 1, 0, 0.592376,-0.00719612) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637583,0.00995852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609549,-0.00575606) , 
3, 61.5624, 1, 0, 0.627112,-2.21028e-05) , 
6, 0.0231426, 1, 0, 0.611974,-0.00314869) , 
6, 0.0220359, 1, 0, 0.501754,-0.000472715)    );
  // itree = 564
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646311,-0.0126492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417787,2.07788e-05) , 
4, 0.00810868, 1, 0, 0.512143,-0.000494795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167165,0.0381141) , 
3, 138.352, 1, 0, 0.49284,-0.000322436) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640793,0.044682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611917,-0.0275553) , 
3, 57.5158, 1, 0, 0.629203,-0.00423984) , 
6, 0.0231932, 1, 0, 0.501938,-0.000583802)    );
  // itree = 565
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.107045,0.0248401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.209551,-0.0114435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15109,0.00429357) , 
3, 25.2294, 1, 0, 0.16839,-8.85877e-05) , 
6, 0.00465479, 1, 0, 0.153386,0.000113511) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896596,-0.0675094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816226,-0.00446479) , 
6, 0.0115909, 1, 0, 0.823631,-0.00134434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711345,-0.0152549) , 
3, 112.922, 1, 0, 0.816124,-0.00182101) , 
7, 2.23528e-05, 1, 0, 0.502288,-0.000904927)    );
  // itree = 566
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999448,0.032212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961266,0.0104739) , 
2, 0.0561523, 1, 0, 0.992362,0.00102431) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892299,-0.0603729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947465,-0.00570595) , 
0, 0.000911016, 1, 0, 0.940717,-0.00344472) , 
0, 0.000335535, 1, 0, 0.966245,-0.00123572) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00556801,0.0130537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00119613,-0.0102362) , 
5, 0.00924297, 1, 0, 0.00260538,-0.000355621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0010404,0.0638476) , 
2, 0.309445, 1, 0, 0.00201115,2.86356e-05) , 
0, 0.00235152, 1, 0, 0.501231,-0.000625969)    );
  // itree = 567
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448903,-0.00614263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440486,0.0150746) , 
3, 21.5333, 1, 0, 0.443452,0.000287254) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.361049,-0.0841399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.256627,0.00321694) , 
3, 84.3588, 1, 0, 0.276022,-0.00126258) , 
3, 75.3762, 1, 0, 0.401289,-0.000103034) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825293,-0.00542194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860603,-0.0178697) , 
7, 0.00011023, 1, 0, 0.845068,-0.00425475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811826,0.0292505) , 
3, 95.0643, 1, 0, 0.840493,-0.00314956) , 
7, 8.67922e-05, 1, 0, 0.49632,-0.000762212)    );
  // itree = 568
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454573,-0.00663566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656584,0.0126118) , 
6, 0.0168955, 1, 0, 0.505071,1.06247e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896686,-0.0121815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131571) , 
0, 0.00469953, 1, 0, 0.309051,-0.00183687) , 
3, 88.1849, 1, 0, 0.469265,-0.000326853) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646985,0.105823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635318,0.0202924) , 
1, 1.12263, 1, 0, 0.638197,0.00377405) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625352,0.0236416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615615,-0.0090735) , 
3, 36.423, 1, 0, 0.619642,-0.000717347) , 
6, 0.023028, 1, 0, 0.630471,0.00190397) , 
6, 0.0208739, 1, 0, 0.497501,6.38838e-05)    );
  // itree = 569
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.30245,-0.016072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415653,0.0161442) , 
4, 0.00232281, 1, 0, 0.408271,0.000173199) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627656,0.0168079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599474,-0.0157071) , 
3, 12.5372, 1, 0, 0.604219,-0.00191509) , 
6, 0.0159013, 1, 0, 0.47186,-0.000504483) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918434,-0.0396961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923145,0.062899) , 
6, 0.0223656, 1, 0, 0.921024,-0.00175431) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.479343,0.0257954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491045,0.00752943) , 
3, 75.6879, 1, 0, 0.483127,0.00320372) , 
2, 0.0477989, 1, 0, 0.638446,0.00144514) , 
6, 0.0208739, 1, 0, 0.50105,-0.00016286)    );
  // itree = 570
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646779,-0.00469262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553515,-0.0202212) , 
3, 62.0739, 1, 0, 0.61956,-0.00131697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748374,-0.0463573) , 
4, 0.0088358, 1, 0, 0.62925,-0.00188616) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.215816,-0.00719779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753147,0.0129696) , 
6, 0.020983, 1, 0, 0.318188,0.00015854) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730107,-0.00473591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790176,-0.0108279) , 
1, 1.06907, 1, 0, 0.757204,-0.00273015) , 
6, 0.0231934, 1, 0, 0.366464,-0.000159114) , 
4, 0.00927724, 1, 0, 0.496538,-0.00101397)    );
  // itree = 571
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995044,0.0211977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948879,-0.0127876) , 
0, 0.000303392, 1, 0, 0.973418,-0.00109421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939334,-0.047595) , 
0, 0.00212442, 1, 0, 0.97104,-0.00196096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00458169,-0.00758672) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000344587,-0.00436615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00307583,0.047254) , 
6, 0.0173946, 1, 0, 0.00109796,0.000255968) , 
2, 0.119119, 1, 0, 0.00201911,-0.000108929) , 
0, 0.00235152, 1, 0, 0.508278,-0.00107651)    );
  // itree = 572
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968792,0.0129907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967065,0.0811278) , 
4, 0.00787684, 1, 0, 0.968456,0.000747215) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762813,-0.0287606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83877,0.00496929) , 
2, 0.011399, 1, 0, 0.801349,-0.00175393) , 
4, 0.00919224, 1, 0, 0.926295,0.000116179) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929123,-0.00560874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910256,-0.0300213) , 
0, 0.00212219, 1, 0, 0.926944,-0.00341372) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00346524,-0.00751862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000559673,0.0066485) , 
2, 0.137165, 1, 0, 0.00133984,-0.000135935) , 
0, 0.00234615, 1, 0, 0.31009,-0.00122929) , 
2, 0.0238052, 1, 0, 0.500385,-0.000813787)    );
  // itree = 573
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.381858,0.0157993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589626,-0.00964109) , 
6, 0.0139882, 1, 0, 0.472901,-0.000360878) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898064,-0.0049489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441133,0.0220177) , 
2, 0.0477724, 1, 0, 0.610763,0.00179146) , 
6, 0.0209826, 1, 0, 0.488453,-0.000118075) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641871,0.00874362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639347,-0.0241797) , 
3, 49.251, 1, 0, 0.640695,-0.00323102) , 
6, 0.0231932, 1, 0, 0.498268,-0.000318761)    );
  // itree = 574
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632284,-0.00852301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407242,0.0296952) , 
3, 100.575, 1, 0, 0.607994,-0.000406925) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.746582,-0.0333214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73971,0.0406851) , 
4, 0.00852437, 1, 0, 0.743543,-0.00609448) , 
4, 0.00751495, 1, 0, 0.649296,-0.00213994) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657244,-0.0194916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149451,-0.000880867) , 
2, 0.0239185, 1, 0, 0.20652,-0.000401913) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924701,0.00400043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441005,0.0120475) , 
2, 0.0951585, 1, 0, 0.762483,0.00165543) , 
6, 0.0208745, 1, 0, 0.364651,0.000183252) , 
4, 0.00928143, 1, 0, 0.504065,-0.000954602)    );
  // itree = 575
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498504,0.0049027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832663,-0.0147503) , 
7, 3.13728e-05, 1, 0, 0.646146,-0.000920662) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.397529,0.00753359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248721,-0.016614) , 
3, 87.9412, 1, 0, 0.365267,4.11484e-05) , 
4, 0.00812296, 1, 0, 0.485238,-0.000369667) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618646,-0.025745) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45211,-0.00910628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715217,0.00503129) , 
4, 0.0116671, 1, 0, 0.607382,-0.000924763) , 
6, 0.0229226, 1, 0, 0.611282,-0.00449036) , 
6, 0.0220342, 1, 0, 0.50079,-0.000878094)    );
  // itree = 576
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498925,0.00221866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723734,-0.0145584) , 
4, 0.0054591, 1, 0, 0.630546,-0.00110392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67733,-0.0360672) , 
4, 0.00881463, 1, 0, 0.63421,-0.00159604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0163404) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624749,0.0133012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000177396,-0.0133475) , 
2, 0.261808, 1, 0, 0.470789,0.000528723) , 
5, 0.00902973, 1, 0, 0.370792,8.5381e-05) , 
4, 0.00925729, 1, 0, 0.500965,-0.000745527)    );
  // itree = 577
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.349339,0.00243088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63454,-0.0372928) , 
6, 0.0129954, 1, 0, 0.3683,-7.8709e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583521,0.0915497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.580366,0.0066324) , 
6, 0.0141281, 1, 0, 0.581531,0.00144448) , 
6, 0.0136455, 1, 0, 0.396855,0.000125269) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888827,-0.00854413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.266004,-0.0250554) , 
2, 0.0475311, 1, 0, 0.603687,-0.00419049) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86522,0.00604464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0288315,-0.00607775) , 
2, 0.142885, 1, 0, 0.620619,0.000131477) , 
5, 0.00902941, 1, 0, 0.615295,-0.00122737) , 
6, 0.0150853, 1, 0, 0.502409,-0.000528348)    );
  // itree = 578
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615012,-0.00772692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942155,0.0630181) , 
7, 2.58367e-05, 1, 0, 0.677839,-0.000112241) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.281848,-0.00503062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812337,-0.0454032) , 
1, 1.85417, 1, 0, 0.465121,-0.00232689) , 
6, 0.0115481, 1, 0, 0.585229,-0.00107642) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.489331,-0.0132469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497904,0.013501) , 
3, 3.6058, 1, 0, 0.495268,-0.00147742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62708,0.00851212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000594654,-0.00874628) , 
2, 0.237925, 1, 0, 0.448713,0.000388316) , 
3, 12.6173, 1, 0, 0.45554,0.000114731) , 
5, 0.00693285, 1, 0, 0.493104,-0.000230286)    );
  // itree = 579
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902787,-0.00936408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563852,0.0207779) , 
2, 0.0317027, 1, 0, 0.793679,0.000460084) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000856777,0.00786129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0205702,-0.0116614) , 
6, 0.0140677, 1, 0, 0.00651558,-0.000357609) , 
2, 0.0951974, 1, 0, 0.451743,0.000104886) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924385,-0.0128444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845012,-0.0622767) , 
3, 47.5475, 1, 0, 0.890989,-0.0103823) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.548864,0.0162883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.231936,0.00227542) , 
5, 0.0115741, 1, 0, 0.380376,0.00191889) , 
2, 0.0714493, 1, 0, 0.63283,-0.00416298) , 
6, 0.0197143, 1, 0, 0.49407,-0.000892673)    );
  // itree = 580
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977659,0.00799851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0017998,-0.0191662) , 
0, 0.00188101, 1, 0, 0.646263,-0.00065737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744897,0.0366938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366411,-6.82707e-06) , 
4, 0.00965409, 1, 0, 0.459375,0.000645126) , 
4, 0.00810872, 1, 0, 0.536454,0.000107928) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0874169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906696,-0.0160182) , 
2, 0.0228588, 1, 0, 0.947305,-0.00386785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00313567,-0.00073125) , 
0, 0.00234977, 1, 0, 0.387844,-0.00161126) , 
3, 75.5114, 1, 0, 0.499328,-0.00032156)    );
  // itree = 581
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567354,-0.00607904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6655,-0.0718884) , 
7, 3.17143e-05, 1, 0, 0.589739,-0.0017867) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.33495,0.00762434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695193,-0.00814477) , 
6, 0.0178888, 1, 0, 0.418887,3.40908e-05) , 
5, 0.00641512, 1, 0, 0.46847,-0.000494321) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644024,-0.0173341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607912,0.00424828) , 
3, 37.7329, 1, 0, 0.62337,-0.00138496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659799,-0.0398987) , 
1, 1.17089, 1, 0, 0.629495,-0.00369833) , 
6, 0.0208739, 1, 0, 0.496881,-0.00105962)    );
  // itree = 582
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905644,0.00269633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840896,0.0996517) , 
3, 83.88, 1, 0, 0.897178,0.000613644) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868073,-0.0429819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780927,-0.00653694) , 
2, 0.0306048, 1, 0, 0.830444,-0.0026583) , 
5, 0.00697168, 1, 0, 0.855485,-0.00143056) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.119881,-0.00461143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.86214e-05,-0.0074522) , 
0, 0.0117576, 1, 0, 0.0169911,-0.000315923) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677469,0.0169937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619515,-0.000742025) , 
6, 0.0229915, 1, 0, 0.657454,0.00244377) , 
7, 8.67632e-05, 1, 0, 0.118208,0.00012021) , 
2, 0.0714155, 1, 0, 0.495185,-0.000672714)    );
  // itree = 583
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930281,0.0198407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000120833,-0.00150047) , 
0, 0.00470075, 1, 0, 0.368525,0.000542734) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967986,-0.0118692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00207004,0.0070499) , 
0, 0.00234407, 1, 0, 0.436568,-0.000715409) , 
6, 0.0139204, 1, 0, 0.395892,3.67072e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853637,-0.00209331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.88888,0.0610422) , 
7, 0.00011317, 1, 0, 0.871076,0.00185123) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869732,-0.0276674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818644,-0.00169763) , 
4, 0.0112446, 1, 0, 0.851479,-0.00503491) , 
3, 23.2762, 1, 0, 0.856916,-0.0031243) , 
7, 8.67919e-05, 1, 0, 0.495403,-0.000645591)    );
  // itree = 584
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762233,-0.0134934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00147007,0.0164759) , 
2, 0.0950637, 1, 0, 0.407651,-0.000430093) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589238,0.0467514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575137,0.0191555) , 
3, 24.8513, 1, 0, 0.579872,0.00244976) , 
6, 0.0157373, 1, 0, 0.431838,-2.56506e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654969,-0.00502644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909062,-0.0165667) , 
4, 0.0104871, 1, 0, 0.727581,-0.00245441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.219252,-0.00145799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761139,0.017691) , 
6, 0.0236913, 1, 0, 0.375793,0.000804931) , 
4, 0.0115928, 1, 0, 0.623171,-0.00148704) , 
6, 0.0173962, 1, 0, 0.500839,-0.000552678)    );
  // itree = 585
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660106,-0.0052241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.276552,0.00775387) , 
4, 0.00926633, 1, 0, 0.485558,-5.22224e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611865,0.0154246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628238,-0.0487591) , 
6, 0.0226141, 1, 0, 0.620276,-0.00382646) , 
6, 0.0220847, 1, 0, 0.49309,-0.000263223) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613176,-0.000518901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654263,0.0415307) , 
6, 0.0238561, 1, 0, 0.62993,0.00207245) , 
6, 0.0231937, 1, 0, 0.501998,-0.000111172)    );
  // itree = 586
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878783,0.0155237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922449,-0.024227) , 
6, 0.0189133, 1, 0, 0.883422,0.000258448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938364,0.0854395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925625,0.00586111) , 
2, 0.020377, 1, 0, 0.931522,0.00219383) , 
6, 0.0208914, 1, 0, 0.890072,0.000526027) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709029,-0.0221839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933453,-0.00829445) , 
7, 7.74908e-05, 1, 0, 0.886637,-0.00584148) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00127438,-0.00941767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00100873,0.0335348) , 
2, 0.306096, 1, 0, 0.00116216,-0.000178601) , 
0, 0.00235034, 1, 0, 0.199212,-0.00144519) , 
2, 0.0476045, 1, 0, 0.497351,-0.000594516)    );
  // itree = 587
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.39758,-0.00362412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510675,-0.0298519) , 
6, 0.0151275, 1, 0, 0.405506,-0.000515634) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936974,0.0202834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132942) , 
0, 0.00469535, 1, 0, 0.598109,0.0013369) , 
6, 0.0159012, 1, 0, 0.467954,8.50145e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505109,0.000967181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907865,-0.0221267) , 
4, 0.0110258, 1, 0, 0.641861,-0.00380798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830384,-0.0040136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313989,0.0188703) , 
2, 0.0948312, 1, 0, 0.583176,0.000916515) , 
4, 0.0115751, 1, 0, 0.61804,-0.00189029) , 
6, 0.0208739, 1, 0, 0.494668,-0.000266575)    );
  // itree = 588
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999069,0.0292645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864777,-0.0258011) , 
0, 5.31641e-05, 1, 0, 0.970939,-0.0034395) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962219,0.0112698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633011,-0.0129026) , 
0, 0.00213733, 1, 0, 0.886674,-0.00011583) , 
0, 0.00111646, 1, 0, 0.93602,-0.0020622) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130993) , 
4, 0.00811807, 1, 0, 0,-0.000197419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000330596,0.0221209) , 
2, 0.380928, 1, 0, 7.10163e-05,-0.000110417) , 
0, 0.00470068, 1, 0, 0.489105,-0.00113022)    );
  // itree = 589
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668915,-0.0629467) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578655,0.0294853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461011,-0.00562339) , 
4, 0.00927733, 1, 0, 0.514143,0.000306057) , 
5, 0.00645586, 1, 0, 0.554144,-0.00129619) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574793,0.000825666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708371,0.0283161) , 
6, 0.0231944, 1, 0, 0.584237,0.000360232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000127858,-0.0146233) , 
2, 0.333232, 1, 0, 0.491066,7.0698e-05) , 
3, 12.6161, 1, 0, 0.500705,-0.00013818)    );
  // itree = 590
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82124,-0.0164612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403564,0.0224092) , 
5, 0.00603425, 1, 0, 0.58272,-0.000311405) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72456,-0.0313219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721035,-0.00212294) , 
4, 0.00826424, 1, 0, 0.722537,-0.00370674) , 
4, 0.00750761, 1, 0, 0.626394,-0.00137198) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622766,0.00658126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959009,0.0203896) , 
7, 0.000120502, 1, 0, 0.730509,0.00168321) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00417192,-0.0465972) , 
6, 0.0150799, 1, 0, 0.00148222,-0.000632906) , 
4, 0.0121488, 1, 0, 0.355602,0.00049213) , 
4, 0.00927716, 1, 0, 0.489091,-0.000426802)    );
  // itree = 591
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904305,0.0450709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488126,0.0371941) , 
2, 0.0226411, 1, 0, 0.839678,0.00115709) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00344472,-0.0105329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000118225,0.00308003) , 
4, 0.0104749, 1, 0, 0.00143121,-0.000411335) , 
2, 0.0476103, 1, 0, 0.348104,0.000237316) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603991,-0.0831347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524487,-0.0629651) , 
3, 37.7696, 1, 0, 0.561106,-0.00740462) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650024,0.00665433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593774,-0.0132055) , 
3, 25.1465, 1, 0, 0.61143,-0.00128261) , 
6, 0.0144191, 1, 0, 0.604673,-0.00210469) , 
6, 0.0127585, 1, 0, 0.500203,-0.00115107)    );
  // itree = 592
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.261375,-0.0121141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357473,0.000374498) , 
4, 0.00232268, 1, 0, 0.350767,-9.78361e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840267,-0.0157048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885246,0.00716076) , 
3, 34.7216, 1, 0, 0.865012,-0.00137906) , 
7, 6.3581e-05, 1, 0, 0.481361,-0.000423206) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60024,-0.0191913) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659051,0.0217797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556282,-0.0220494) , 
1, 1.10151, 1, 0, 0.607681,-0.00155555) , 
1, 1.06341, 1, 0, 0.606065,-0.00307033) , 
6, 0.0220341, 1, 0, 0.49664,-0.000747537)    );
  // itree = 593
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712362,0.00976802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0192991) , 
4, 0.00928217, 1, 0, 0.488523,0.00012821) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968265,-0.0186133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0015562,-0.00270282) , 
0, 0.00234977, 1, 0, 0.375888,-0.0012049) , 
3, 50.3893, 1, 0, 0.440395,-0.000441413) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700808,0.0001682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977398,0.0498605) , 
5, 0.0104854, 1, 0, 0.805629,0.00207056) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.275322,-0.0150958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690503,0.011903) , 
6, 0.0238011, 1, 0, 0.372763,-0.00118258) , 
5, 0.0115876, 1, 0, 0.631772,0.00076396) , 
6, 0.0185556, 1, 0, 0.495424,-9.48191e-05)    );
  // itree = 594
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.331878,0.0352093) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918032,-0.0289504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179889,0.00445044) , 
2, 0.023795, 1, 0, 0.445138,-7.03018e-05) , 
4, 0.00232777, 1, 0, 0.43886,5.27544e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991924,0.00171187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.886654,-0.0122876) , 
0, 0.000444717, 1, 0, 0.935642,-0.00317702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131376) , 
0, 0.00468527, 1, 0, 0.621301,-0.00220022) , 
6, 0.0174039, 1, 0, 0.50577,-0.000773525)    );
  // itree = 595
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.298824,0.0379096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475399,-0.00243404) , 
4, 0.00232644, 1, 0, 0.46638,-6.0719e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61495,0.0527254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640576,0.0499478) , 
6, 0.0204035, 1, 0, 0.627476,0.0020214) , 
6, 0.0198829, 1, 0, 0.47699,7.64044e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913102,-0.0131719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823095,-0.039342) , 
2, 0.0409786, 1, 0, 0.871731,-0.00474158) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.246224,0.0116915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361325,0.00563126) , 
3, 63.0755, 1, 0, 0.295959,0.00202245) , 
2, 0.0953673, 1, 0, 0.628701,-0.00188652) , 
6, 0.0208771, 1, 0, 0.503383,-0.000265091)    );
  // itree = 596
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949892,0.0618896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906274,-0.0496277) , 
2, 0.00906808, 1, 0, 0.929679,-0.0059791) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962184,-0.0963857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895594,0.0478006) , 
2, 0.00566755, 1, 0, 0.921181,-0.000566984) , 
3, 11.8832, 1, 0, 0.922673,-0.00151696) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.318581,-0.00578357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.341298,0.0225909) , 
3, 40.7538, 1, 0, 0.322327,-0.000389777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884751,0.00900382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000251556,0.00490053) , 
0, 0.00470348, 1, 0, 0.303471,0.000956102) , 
3, 50.3433, 1, 0, 0.313646,0.000229884) , 
2, 0.0238066, 1, 0, 0.506656,-0.000323718)    );
  // itree = 597
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587968,0.0263167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531281,0.0621473) , 
3, 36.2801, 1, 0, 0.557608,0.00214254) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.217849,-0.0121068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588618,0.0410876) , 
6, 0.0103387, 1, 0, 0.32042,4.4073e-05) , 
5, 0.00348206, 1, 0, 0.352867,0.000331143) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972938,-0.011233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937158,-0.0490007) , 
0, 0.00212442, 1, 0, 0.96958,-0.00389397) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00311407,-0.00525905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00223909,0.0321145) , 
4, 0.0104237, 1, 0, 0.00263036,5.16406e-06) , 
0, 0.00235054, 1, 0, 0.605318,-0.00242512) , 
6, 0.0127671, 1, 0, 0.502483,-0.00130236)    );
  // itree = 598
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961237,-0.0179479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000614255,-0.000738391) , 
0, 0.00235152, 1, 0, 0.195328,-0.000390928) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991902,0.00919585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744298,0.0272963) , 
2, 0.0237485, 1, 0, 0.889324,0.00187251) , 
7, 2.54255e-05, 1, 0, 0.430961,0.00037758) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838719,-0.0765975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958298,0.00700416) , 
8, 0.0290232, 1, 0, 0.91494,-0.00434444) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547245,-0.0118696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535138,0.00531441) , 
3, 25.0723, 1, 0, 0.538563,-0.000270758) , 
2, 0.0237979, 1, 0, 0.631956,-0.00128158) , 
6, 0.0173951, 1, 0, 0.50166,-0.00020602)    );
  // itree = 599
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.590387,-0.0114942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51859,0.00556493) , 
3, 25.2289, 1, 0, 0.542138,-0.00017022) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895555,0.00837587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981481,0.0826563) , 
7, 0.000136277, 1, 0, 0.911118,0.00226172) , 
7, 8.53042e-05, 1, 0, 0.638383,0.000464134) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000529507,-0.0145749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130967) , 
5, 0.0134382, 1, 0, 0.000248513,-0.00107198) , 
2, 0.285679, 1, 0, 0.504642,0.000142192)    );
  // itree = 600
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.298707,0.0567362) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.437429,-0.0132925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.85871e-05,-0.00730914) , 
2, 0.0952265, 1, 0, 0.13552,-0.000290166) , 
5, 0.00236087, 1, 0, 0.148831,-0.000179264) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821822,-0.00639897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911119,-0.0315156) , 
1, 2.0534, 1, 0, 0.83103,-0.00161372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673214,-0.0130871) , 
3, 124.144, 1, 0, 0.823363,-0.00192683) , 
7, 2.23526e-05, 1, 0, 0.502583,-0.00109576)    );
  // itree = 601
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983553,0.0176393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933012,-0.193791) , 
6, 0.0115305, 1, 0, 0.96914,-0.000298124) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882908,-0.0427436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858871,-0.0132193) , 
2, 0.00906808, 1, 0, 0.869388,-0.00398158) , 
4, 0.00690757, 1, 0, 0.918813,-0.00215649) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799068,0.0718129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721169,0.0040849) , 
2, 0.0389417, 1, 0, 0.755439,0.00151145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.837926,-0.00655713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000893311,-0.00122611) , 
0, 0.00235152, 1, 0, 0.134489,-0.000700995) , 
2, 0.0691775, 1, 0, 0.312761,-6.58098e-05) , 
2, 0.0238066, 1, 0, 0.505046,-0.00072913)    );
  // itree = 602
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852084,0.0131539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000539072,-0.0120833) , 
2, 0.0476132, 1, 0, 0.363559,7.98193e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639307,-0.00536433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606474,-0.0570101) , 
1, 1.78719, 1, 0, 0.636828,-0.00116378) , 
6, 0.0127584, 1, 0, 0.523516,-0.000648116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.174989,0.0301548) , 
3, 138.758, 1, 0, 0.504247,-0.000497257)    );
  // itree = 603
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891438,0.000408014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527794,0.0192871) , 
2, 0.0453404, 1, 0, 0.787222,0.000779956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0123279,-0.0124536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000145803,0.00618544) , 
0, 0.0211637, 1, 0, 0.00381899,-0.000809716) , 
2, 0.119026, 1, 0, 0.488624,0.000174046) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598954,-0.0212248) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899603,-0.0240283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408222,0.0118072) , 
2, 0.0712324, 1, 0, 0.6242,8.5071e-05) , 
6, 0.0229194, 1, 0, 0.615353,-0.00187505) , 
6, 0.0220335, 1, 0, 0.504124,-7.65636e-05)    );
  // itree = 604
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.315983,-0.0195087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.18451,0.000557117) , 
4, 0.00232333, 1, 0, 0.196253,-0.000130399) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.860595,0.00949536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954271,0.0320011) , 
7, 6.60766e-05, 1, 0, 0.876715,0.0017973) , 
7, 2.54738e-05, 1, 0, 0.428332,0.000527062) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91507,-0.0343966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934228,0.0832692) , 
1, 1.15235, 1, 0, 0.928442,0.000553465) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906378,-0.010356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00014637,-0.00554067) , 
0, 0.00467549, 1, 0, 0.520622,-0.00259905) , 
2, 0.0237994, 1, 0, 0.616258,-0.00185977) , 
6, 0.0173951, 1, 0, 0.496186,-0.000334749)    );
  // itree = 605
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.285269,0.0715693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932901,-0.0103711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.7971e-05,-0.00881771) , 
0, 0.00470068, 1, 0, 0.139391,-0.000221985) , 
5, 0.00236984, 1, 0, 0.152201,-9.27385e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.733057,-0.0367809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73451,-0.000851082) , 
3, 58.9026, 1, 0, 0.733619,-0.00926289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976197,-0.0066983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.694141,-0.0209236) , 
0, 0.00111855, 1, 0, 0.823523,-0.00297613) , 
1, 1.11676, 1, 0, 0.810108,-0.00391425) , 
7, 2.23528e-05, 1, 0, 0.503221,-0.00213167)    );
  // itree = 606
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845605,0.00956498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291089,-0.016466) , 
4, 0.00695155, 1, 0, 0.606098,-3.0484e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.742343,0.0576527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77139,0.0154654) , 
4, 0.00825524, 1, 0, 0.760823,0.00211191) , 
5, 0.00782468, 1, 0, 0.641047,0.00045344) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789637,-0.00977282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709375,-0.0470988) , 
3, 45.1542, 1, 0, 0.754157,-0.00485328) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0159484,-0.0147119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810499,0.0105044) , 
7, 8.68506e-05, 1, 0, 0.232489,0.000325082) , 
2, 0.0477062, 1, 0, 0.375157,-0.00109112) , 
5, 0.00912451, 1, 0, 0.500455,-0.000363261)    );
  // itree = 607
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919561,0.0160435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925561,0.0262562) , 
6, 0.0198759, 1, 0, 0.920309,0.000758941) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93026,-0.00620542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0017186,0.00218237) , 
0, 0.00235038, 1, 0, 0.284868,-0.000570353) , 
2, 0.0238052, 1, 0, 0.486822,-0.000147881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665236,0.00621036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62344,0.0418512) , 
1, 1.06907, 1, 0, 0.644562,0.00206307) , 
6, 0.0231934, 1, 0, 0.497409,5.13898e-07)    );
  // itree = 608
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923901,0.00560118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715158,0.0290153) , 
2, 0.0237732, 1, 0, 0.844151,0.00101957) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591724,-0.0115696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130961) , 
0, 0.00470348, 1, 0, 0.0808329,-0.00125664) , 
2, 0.0713763, 1, 0, 0.480606,-6.45187e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582935,-0.029019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639323,-0.00482681) , 
6, 0.0232395, 1, 0, 0.619122,-0.00566293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623378,0.0389844) , 
1, 1.11907, 1, 0, 0.620027,-0.00374734) , 
6, 0.0220342, 1, 0, 0.497049,-0.00049886)    );
  // itree = 609
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592281,0.00261417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739639,-0.0111765) , 
4, 0.00629006, 1, 0, 0.618326,-0.000456195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596978,-0.0642148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450195,-0.00859153) , 
3, 81.0057, 1, 0, 0.505533,-0.00563517) , 
3, 62.0777, 1, 0, 0.585744,-0.00195221) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616064,-0.00803609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924356,0.0285303) , 
6, 0.0173982, 1, 0, 0.789571,0.000926861) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76767,-0.0101633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000915232,0.00200822) , 
0, 0.00235174, 1, 0, 0.086627,-0.001069) , 
2, 0.0951831, 1, 0, 0.456292,-1.94167e-05) , 
4, 0.00695154, 1, 0, 0.494282,-0.000586632)    );
  // itree = 610
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.301735,-0.0323545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545601,-0.0103347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50741,0.00953935) , 
3, 46.2412, 1, 0, 0.528952,-0.000275612) , 
5, 0.00231852, 1, 0, 0.519648,-0.000420293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179013,-0.0119266) , 
3, 138.758, 1, 0, 0.500663,-0.000598318)    );
  // itree = 611
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.565677,0.00255635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687845,-0.0459198) , 
7, 3.16946e-05, 1, 0, 0.594561,-0.00150852) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976537,0.0124823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000557413,-0.00402521) , 
0, 0.00234264, 1, 0, 0.412779,0.00049862) , 
5, 0.00643238, 1, 0, 0.465705,-8.57598e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624919,-0.00523385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658793,0.0299571) , 
1, 1.10383, 1, 0, 0.643354,0.00137723) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686254,-0.0191484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568806,-0.00693718) , 
3, 70.0566, 1, 0, 0.621185,-0.00560424) , 
3, 37.7172, 1, 0, 0.630842,-0.00256288) , 
6, 0.0208745, 1, 0, 0.494876,-0.000523333)    );
  // itree = 612
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.3639,0.0176785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565522,-0.0307715) , 
6, 0.0106044, 1, 0, 0.436672,-0.00187597) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971481,0.040739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00069755,-0.00728666) , 
0, 0.00235152, 1, 0, 0.365034,0.000453764) , 
3, 12.5842, 1, 0, 0.376472,8.17881e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930451,0.00254986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498896,0.0357634) , 
2, 0.0237804, 1, 0, 0.639719,0.00161267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635459,-0.0195558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577798,-0.00479112) , 
3, 48.5049, 1, 0, 0.604849,-0.00254634) , 
3, 12.5737, 1, 0, 0.610147,-0.00191445) , 
6, 0.0139162, 1, 0, 0.500337,-0.000976363)    );
  // itree = 613
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.251898,-0.0196947) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553825,-0.00324235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537476,-0.0640132) , 
3, 56.9225, 1, 0, 0.552695,-0.000653437) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973958,0.0112973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0015051,-0.00583804) , 
0, 0.00235038, 1, 0, 0.439207,0.000348426) , 
3, 62.9263, 1, 0, 0.514924,-0.000319998) , 
5, 0.00225663, 1, 0, 0.50376,-0.00041724)    );
  // itree = 614
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939171,-0.0262822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878103,0.0573224) , 
8, 0.0264186, 1, 0, 0.924537,-0.000473714) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771636,-0.0176763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713029,0.00370585) , 
5, 0.00883865, 1, 0, 0.737248,-0.00231795) , 
2, 0.0272042, 1, 0, 0.857012,-0.00113863) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0868737,0.00650942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924299,0.0197385) , 
7, 8.72068e-05, 1, 0, 0.423507,0.00232039) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00851824,-0.00706852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130957) , 
0, 0.018803, 1, 0, 0.00233361,-0.000552002) , 
2, 0.153134, 1, 0, 0.124222,0.000279273) , 
2, 0.0714198, 1, 0, 0.508077,-0.000463463)    );
  // itree = 615
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.269587,-0.0237363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664624,0.00754222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.342692,-0.0058984) , 
4, 0.00811879, 1, 0, 0.487391,4.30271e-05) , 
5, 0.00213397, 1, 0, 0.476874,-0.000135687) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.725835,0.0255523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652782,-0.00684594) , 
6, 0.0217128, 1, 0, 0.670777,-0.000456676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55179,-0.0243847) , 
3, 88.3013, 1, 0, 0.64609,-0.00222614) , 
6, 0.0208781, 1, 0, 0.506245,-0.000498532)    );
  // itree = 616
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.381717,0.00145793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62278,-0.0274795) , 
6, 0.0143152, 1, 0, 0.396018,-0.00020181) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598221,0.00431727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609059,0.0354504) , 
1, 1.4403, 1, 0, 0.603145,0.00132051) , 
6, 0.0150318, 1, 0, 0.461998,0.000283126) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631944,-0.00713129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617173,0.0201961) , 
1, 1.09414, 1, 0, 0.624638,8.40523e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895957,-0.0409435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560749,-0.0140728) , 
2, 0.0238956, 1, 0, 0.646017,-0.00555816) , 
1, 1.16013, 1, 0, 0.633892,-0.00235818) , 
6, 0.0197199, 1, 0, 0.503618,-0.000356399)    );
  // itree = 617
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59909,-0.0157634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419326,0.00114199) , 
5, 0.00639689, 1, 0, 0.470297,-0.000190719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630129,-0.0183517) , 
6, 0.0209843, 1, 0, 0.479012,-0.000421621) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985635,0.0527643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62845,0.0246717) , 
4, 0.0115354, 1, 0, 0.805725,0.00420184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449293,-0.0110795) , 
5, 0.0118633, 1, 0, 0.646313,0.00124803) , 
6, 0.0220335, 1, 0, 0.49853,-0.000226835)    );
  // itree = 618
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706315,0.00705842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0942906,-0.0220433) , 
4, 0.0069639, 1, 0, 0.389104,-0.000132307) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947092,0.0210688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133665) , 
0, 0.00469535, 1, 0, 0.602884,0.00143654) , 
6, 0.0149109, 1, 0, 0.468964,0.000453752) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653392,-0.0219386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591952,0.00646105) , 
3, 49.3763, 1, 0, 0.625393,-0.00580855) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655004,-0.0143989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641988,0.0373116) , 
1, 1.07048, 1, 0, 0.647157,0.000352014) , 
6, 0.0227028, 1, 0, 0.636502,-0.00266405) , 
6, 0.0208744, 1, 0, 0.497991,-8.64375e-05)    );
  // itree = 619
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819745,0.0373106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00188726,-0.00733258) , 
2, 0.0476016, 1, 0, 0.316616,0.000247646) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90624,-0.0103448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131517) , 
0, 0.00705162, 1, 0, 0.46541,-0.00115057) , 
6, 0.0116072, 1, 0, 0.396961,-0.00050736) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912299,0.015209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686275,-0.0313621) , 
5, 0.0117339, 1, 0, 0.864013,0.000523693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.835454,-0.0573261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859394,-0.00851088) , 
3, 66.2995, 1, 0, 0.850952,-0.00848715) , 
3, 47.1906, 1, 0, 0.857997,-0.0036262) , 
7, 8.53041e-05, 1, 0, 0.498356,-0.00119328)    );
  // itree = 620
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651873,0.00972728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579566,-0.0146447) , 
3, 62.8596, 1, 0, 0.631157,-7.27086e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729941,-0.0432819) , 
4, 0.0088358, 1, 0, 0.638582,-0.000977453) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84999,0.0206339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381538,-0.00631166) , 
5, 0.0118578, 1, 0, 0.736655,0.0013471) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00383869,-0.0431137) , 
6, 0.0139208, 1, 0, 0.00151579,-0.000684001) , 
4, 0.0121489, 1, 0, 0.367883,0.000328226) , 
4, 0.00927724, 1, 0, 0.502879,-0.000322911)    );
  // itree = 621
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739379,-0.00150231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890266,0.0520506) , 
6, 0.0100654, 1, 0, 0.831227,0.000955909) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00569708,-0.00966238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.05728e-05,0.00187772) , 
0, 0.0235155, 1, 0, 0.00194149,-0.000412396) , 
2, 0.0714155, 1, 0, 0.42049,0.0002782) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669758,-0.00134101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583726,-0.0110672) , 
4, 0.0104343, 1, 0, 0.627981,-0.00124951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568301,-0.0320407) , 
1, 1.47223, 1, 0, 0.62362,-0.00154283) , 
6, 0.0162355, 1, 0, 0.506012,-0.000488492)    );
  // itree = 622
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624304,0.00133816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807164,-0.0257616) , 
7, 2.89866e-05, 1, 0, 0.653702,-0.000837536) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975584,0.025247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.81874e-05,-0.00762157) , 
0, 0.00235174, 1, 0, 0.263938,0.000368823) , 
4, 0.00579618, 1, 0, 0.393968,-3.36326e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894399,-0.0157159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788704,-0.0238094) , 
2, 0.058867, 1, 0, 0.87048,-0.00338361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562024,0.0121654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00582933,-0.00537042) , 
2, 0.153011, 1, 0, 0.162859,0.00021328) , 
2, 0.0951974, 1, 0, 0.613747,-0.00207862) , 
6, 0.0150773, 1, 0, 0.499114,-0.00101199)    );
  // itree = 623
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910161,0.0107557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936155,-0.0824044) , 
6, 0.0183324, 1, 0, 0.915722,-0.00148399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589568,-0.0235259) , 
8, 0.0423809, 1, 0, 0.883842,-0.00216013) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718358,0.0107423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.262484,-0.0188226) , 
4, 0.0115607, 1, 0, 0.569379,0.0012972) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.35098,-0.00450767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.91769e-05,-0.00630312) , 
0, 0.00470349, 1, 0, 0.0321263,-0.000381722) , 
2, 0.112279, 1, 0, 0.201778,0.000148442) , 
2, 0.0476132, 1, 0, 0.49937,-0.000858814)    );
  // itree = 624
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97087,-0.0179905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561058,-0.0167935) , 
2, 0.0226557, 1, 0, 0.878501,-0.00218773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00175668,0.00501918) , 
2, 0.0952265, 1, 0, 0.587768,-0.00140615) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972316,0.0777996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822707,-0.0203004) , 
4, 0.00859891, 1, 0, 0.875205,-0.000782154) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957615,0.0106123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00128121,-0.00273679) , 
0, 0.00235038, 1, 0, 0.34592,0.000636998) , 
2, 0.0237994, 1, 0, 0.461702,0.000326557) , 
4, 0.00695957, 1, 0, 0.499158,-0.00018826)    );
  // itree = 625
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916089,0.0153004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567804,0.0181345) , 
2, 0.0248093, 1, 0, 0.852631,0.000766912) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0128821,-0.00750994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130934) , 
4, 0.0092821, 1, 0, 0.00454008,-0.000243156) , 
2, 0.0476016, 1, 0, 0.372256,0.00019479) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561819,-0.0181439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558566,-0.050132) , 
6, 0.016333, 1, 0, 0.561143,-0.00382384) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670446,0.00628181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579456,-0.00635307) , 
4, 0.0104237, 1, 0, 0.624586,-0.00041138) , 
6, 0.0169021, 1, 0, 0.60644,-0.00138739) , 
6, 0.0139208, 1, 0, 0.498116,-0.000655541)    );
  // itree = 626
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992504,-0.0683366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997873,0.0127989) , 
8, 0.00720394, 1, 0, 0.997019,-0.000336797) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859894,-0.0171078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904422,-0.000442225) , 
3, 47.9513, 1, 0, 0.882527,-0.00573152) , 
2, 0.0473313, 1, 0, 0.968126,-0.00169817) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00178795,-0.00302636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00118871,-0.00961398) , 
4, 0.00547091, 1, 0, 0.00148062,-0.000595298) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00214733,0.0311145) , 
5, 0.0112453, 1, 0, 0.00125522,0.000303428) , 
4, 0.010438, 1, 0, 0.00134695,-6.23374e-05) , 
0, 0.00235038, 1, 0, 0.497835,-0.000902419)    );
  // itree = 627
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973132,-0.0207133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828678,0.0188555) , 
5, 0.0076779, 1, 0, 0.929669,-0.000285123) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921515,-0.0346252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890898,-0.0343393) , 
1, 1.16005, 1, 0, 0.906525,-0.00588613) , 
6, 0.0197226, 1, 0, 0.925872,-0.00120411) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00852013,-0.0115276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920392,0.0156373) , 
7, 2.53003e-05, 1, 0, 0.629197,0.00130295) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000469469,0.00496584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0326491,-0.00725631) , 
6, 0.0173944, 1, 0, 0.00950318,-0.000402511) , 
2, 0.137172, 1, 0, 0.303766,0.000407331) , 
2, 0.0238066, 1, 0, 0.49993,-0.000100792)    );
  // itree = 628
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.286579,-0.0194141) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979091,0.0144047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937218,-0.0229424) , 
0, 0.00212506, 1, 0, 0.976048,0.000640304) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00379138,-0.00925915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0010215,0.0161384) , 
2, 0.14284, 1, 0, 0.0018673,-0.000203563) , 
0, 0.00235174, 1, 0, 0.509228,0.000235929) , 
5, 0.00225663, 1, 0, 0.500569,0.00015952)    );
  // itree = 629
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959194,0.00290457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526897,-0.0809266) , 
5, 0.0112809, 1, 0, 0.91217,-0.00034556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802737,-0.0369376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659139,-0.00902885) , 
2, 0.0336638, 1, 0, 0.682878,-0.00372002) , 
2, 0.0271868, 1, 0, 0.815729,-0.00176487) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00195365,-0.0123769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00107691,0.0561888) , 
2, 0.307133, 1, 0, 0.00153664,-0.000292848) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57499,0.00150267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515209,0.0228518) , 
1, 1.13854, 1, 0, 0.546648,0.00266274) , 
7, 8.68508e-05, 1, 0, 0.0712323,8.50417e-05) , 
2, 0.0951974, 1, 0, 0.499763,-0.000979763)    );
  // itree = 630
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943228,0.00733191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878302,0.0700489) , 
4, 0.00696915, 1, 0, 0.903897,0.00168902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0904294,-0.00266245) , 
2, 0.0714024, 1, 0, 0.543349,0.000854496) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0837799,-0.00570379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887425,0.0174367) , 
7, 1.06929e-05, 1, 0, 0.38447,0.000219236) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618569,-0.00193261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557049,-0.0354641) , 
1, 1.54477, 1, 0, 0.613345,-0.000940943) , 
6, 0.0150773, 1, 0, 0.493321,-0.000332535) , 
3, 12.5889, 1, 0, 0.501127,-0.000147323)    );
  // itree = 631
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861481,0.012443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926657,0.0312733) , 
6, 0.0208788, 1, 0, 0.871298,0.0011472) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0564056,0.0073507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377996,-0.00819486) , 
6, 0.0208762, 1, 0, 0.113147,-0.00024871) , 
2, 0.0714198, 1, 0, 0.532519,0.000523442) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.477597,-0.0380946) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.437528,0.0110864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185945,-0.00766204) , 
3, 136.007, 1, 0, 0.363845,-0.000194719) , 
3, 84.5868, 1, 0, 0.38522,-0.00146307) , 
3, 75.5842, 1, 0, 0.495333,2.19422e-05)    );
  // itree = 632
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903875,-0.0151542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907513,-0.0655481) , 
6, 0.0208914, 1, 0, 0.904325,-0.00125227) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68268,-0.0345763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817147,0.00337095) , 
2, 0.0362723, 1, 0, 0.767989,-0.00536552) , 
2, 0.0317383, 1, 0, 0.880318,-0.00197656) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.316655,0.000797512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855723,0.0665383) , 
6, 0.0173931, 1, 0, 0.622768,0.00255802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0962048,-0.00807356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0621522,0.00804775) , 
5, 0.0112731, 1, 0, 0.0762893,-0.000348124) , 
2, 0.0907389, 1, 0, 0.201581,0.000318171) , 
2, 0.0476103, 1, 0, 0.500752,-0.00069329)    );
  // itree = 633
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.302035,0.00227081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567943,-0.023617) , 
6, 0.0113882, 1, 0, 0.336995,-0.000209907) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.54088,0.0567418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611535,0.100516) , 
6, 0.0134117, 1, 0, 0.570969,0.00188907) , 
6, 0.0125908, 1, 0, 0.368475,7.24934e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629265,-0.00678652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610014,0.00254504) , 
1, 1.21457, 1, 0, 0.618303,-0.000566618) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583018,0.0266798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552616,-0.0864147) , 
3, 35.6554, 1, 0, 0.566508,-0.00329885) , 
1, 1.55433, 1, 0, 0.609575,-0.001027) , 
6, 0.0139162, 1, 0, 0.496656,-0.00051205)    );
  // itree = 634
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580809,-0.00110646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911579,0.0158211) , 
7, 6.46207e-05, 1, 0, 0.691245,0.000679036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.124004,-0.0339077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130967) , 
0, 0.0282209, 1, 0, 0.0268445,-0.000934046) , 
5, 0.0108949, 1, 0, 0.486885,0.000182877) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78968,-0.000104894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43072,-0.0213626) , 
5, 0.0115361, 1, 0, 0.612888,-0.00583204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635706,0.0155864) , 
6, 0.0234743, 1, 0, 0.62207,-0.00277659) , 
6, 0.0220346, 1, 0, 0.50315,-0.000173188)    );
  // itree = 635
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945849,0.0158412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129486,-0.00838746) , 
2, 0.0238008, 1, 0, 0.456197,-0.000175745) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768648,-0.0237496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375698,-0.00332949) , 
5, 0.0112579, 1, 0, 0.634731,-0.00415961) , 
6, 0.0150782, 1, 0, 0.542946,-0.0021115) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.398975,-0.00459785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859562,0.0139695) , 
7, 8.68798e-05, 1, 0, 0.500976,0.000329968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184199,-0.0108277) , 
3, 135.154, 1, 0, 0.464428,3.87294e-05) , 
3, 37.8432, 1, 0, 0.499286,-0.000915861)    );
  // itree = 636
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607103,-0.0745834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507129,0.00676099) , 
5, 0.00661285, 1, 0, 0.534827,-0.0012495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49889,-0.0322149) , 
3, 10.8055, 1, 0, 0.529174,-0.00239459) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952101,0.0230164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131974) , 
0, 0.00470068, 1, 0, 0.546418,0.00102648) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532794,-0.0379844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45195,-0.00388193) , 
3, 47.5146, 1, 0, 0.467267,-0.00114143) , 
3, 36.6452, 1, 0, 0.493325,-0.000427709) , 
3, 12.6152, 1, 0, 0.499083,-0.000743617)    );
  // itree = 637
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.353563,0.00532394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.263047,-0.0167306) , 
3, 49.7894, 1, 0, 0.313266,-0.000377445) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710732,0.0430384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502673,0.00521917) , 
4, 0.00695332, 1, 0, 0.588091,0.000818204) , 
6, 0.011598, 1, 0, 0.415773,6.85226e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992825,-0.00327495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89509,-0.0209734) , 
0, 0.000221977, 1, 0, 0.940283,-0.00506353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000116129,-0.00464929) , 
0, 0.00468527, 1, 0, 0.611436,-0.00331467) , 
6, 0.0162368, 1, 0, 0.498984,-0.00137027)    );
  // itree = 638
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.359318,-0.00398491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8579,-0.0107986) , 
7, 5.26825e-05, 1, 0, 0.507822,-0.00062617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938975,0.0206472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131499) , 
0, 0.00470075, 1, 0, 0.438273,0.000699774) , 
3, 37.7664, 1, 0, 0.470204,9.10172e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639593,-0.0242939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599355,0.0223305) , 
3, 58.4401, 1, 0, 0.624176,-0.00617631) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96732,0.0352267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42327,-0.00127321) , 
2, 0.0711714, 1, 0, 0.668529,0.000966526) , 
6, 0.0231936, 1, 0, 0.640366,-0.00356893) , 
6, 0.0208744, 1, 0, 0.499326,-0.000535357)    );
  // itree = 639
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744369,-0.0149658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743887,-0.00279035) , 
3, 6.00923, 1, 0, 0.743927,-0.000721324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465894,-0.026441) , 
3, 126.144, 1, 0, 0.728848,-0.00112242) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000633589,-0.00674541) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000171538,0.0129556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00446851,0.0349405) , 
6, 0.0127885, 1, 0, 0.00227585,0.000781029) , 
5, 0.0112429, 1, 0, 0.0016049,0.000291205) , 
2, 0.166606, 1, 0, 0.489675,-0.000657515)    );
  // itree = 640
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6434,-0.0247028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753756,0.0023747) , 
5, 0.0074927, 1, 0, 0.696417,-0.00105185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541025,-0.0229489) , 
6, 0.0219718, 1, 0, 0.690105,-0.001397) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885144,-0.000627825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985936,0.0456555) , 
4, 0.0115759, 1, 0, 0.947662,0.00279233) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000175536,0.00953432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131067) , 
7, -0.000349337, 1, 0, 6.01066e-05,-8.65068e-05) , 
0, 0.00470348, 1, 0, 0.176448,0.000449365) , 
5, 0.0112453, 1, 0, 0.506265,-0.000736174)    );
  // itree = 641
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968938,-0.0456638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971627,-0.00658007) , 
3, 11.8832, 1, 0, 0.971163,-0.00123057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556282,-0.0838565) , 
5, 0.0112972, 1, 0, 0.928332,-0.00194453) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.147759,0.000348908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453247,-0.0214703) , 
6, 0.0165656, 1, 0, 0.172297,-0.000489681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522818,0.0121229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570851,-0.0054442) , 
6, 0.023359, 1, 0, 0.531134,0.000977913) , 
6, 0.0173976, 1, 0, 0.315797,9.72152e-05) , 
2, 0.0237994, 1, 0, 0.507168,-0.000540677)    );
  // itree = 642
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879966,0.0771855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93283,-0.00796043) , 
5, 0.00346347, 1, 0, 0.909751,0.00101109) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.92089e-05,-0.00350832) , 
4, 0.0081106, 1, 0, 4.38898e-05,-9.33361e-05) , 
0, 0.00470108, 1, 0, 0.151765,9.08603e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936125,-0.00891112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277092,-0.0243828) , 
4, 0.00989261, 1, 0, 0.845538,-0.00175377) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970091,0.0478228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628042,-0.00340081) , 
2, 0.0475729, 1, 0, 0.769515,0.000703873) , 
5, 0.010116, 1, 0, 0.820073,-0.000930538) , 
7, 2.23528e-05, 1, 0, 0.50381,-0.000447182)    );
  // itree = 643
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969764,0.0128106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800925,0.0371286) , 
4, 0.00803165, 1, 0, 0.918385,0.000680215) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916623,-0.0084016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00128401,-0.00150414) , 
0, 0.00235174, 1, 0, 0.247534,-0.000616477) , 
2, 0.0238023, 1, 0, 0.469261,-0.0001879) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942859,-0.00629725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892087,0.037262) , 
6, 0.0223656, 1, 0, 0.913746,0.0010642) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801267,-0.0321189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311252,-0.00669318) , 
2, 0.0906721, 1, 0, 0.471841,-0.00580597) , 
2, 0.0475987, 1, 0, 0.627301,-0.00338909) , 
6, 0.0208739, 1, 0, 0.496774,-0.000745203)    );
  // itree = 644
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.461035,0.0104677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359912,-0.0158314) , 
3, 50.3893, 1, 0, 0.418725,-0.000150172) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383739,-0.0229121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.341004,0.00117922) , 
3, 25.099, 1, 0, 0.354442,-0.00175081) , 
6, 0.016235, 1, 0, 0.401816,-0.000571208) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973609,0.00684226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924856,-0.019683) , 
4, 0.0114458, 1, 0, 0.962816,-0.00176012) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515789,0.0118127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822346,0.0336767) , 
7, 0.000109447, 1, 0, 0.708767,0.00368795) , 
0, 0.0019104, 1, 0, 0.846839,0.000727009) , 
7, 8.53043e-05, 1, 0, 0.498791,-0.000288313)    );
  // itree = 645
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998069,0.00554739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695765,-0.0487217) , 
0, 0.00173279, 1, 0, 0.965155,-0.000826956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688932,-0.0967236) , 
5, 0.0105791, 1, 0, 0.925559,-0.00174996) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00145331,-0.0194246) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560814,-0.00376568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321552,0.00756488) , 
1, 1.19104, 1, 0, 0.374745,0.000242963) , 
6, 0.0058208, 1, 0, 0.30952,1.39208e-05) , 
2, 0.0238052, 1, 0, 0.502872,-0.000539698)    );
  // itree = 646
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.458551,6.59024e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.35277,-0.0190639) , 
3, 75.6025, 1, 0, 0.435618,-0.000427628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779084,-0.0153404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918791,-0.0485246) , 
4, 0.00816298, 1, 0, 0.822935,-0.00409322) , 
7, 3.25263e-05, 1, 0, 0.626575,-0.00223485) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.54295,0.010586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94425,0.0370971) , 
7, 9.66224e-05, 1, 0, 0.75005,0.00186684) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96387,-0.00825232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000654512,-0.000980826) , 
0, 0.00235174, 1, 0, 0.238546,-0.000602469) , 
4, 0.0107148, 1, 0, 0.365698,1.13642e-05) , 
4, 0.00927569, 1, 0, 0.495871,-0.00110946)    );
  // itree = 647
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517116,0.00997153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369805,-0.0138409) , 
3, 75.5838, 1, 0, 0.481656,0.000183653) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597756,0.021201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57783,-0.0352941) , 
6, 0.0225622, 1, 0, 0.586718,-0.00569343) , 
6, 0.0220862, 1, 0, 0.488014,-0.000172053) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684697,0.00667085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627564,0.0386401) , 
6, 0.0238561, 1, 0, 0.660764,0.00245953) , 
6, 0.0231934, 1, 0, 0.498901,-6.2057e-06)    );
  // itree = 648
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638925,0.0176659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644091,-0.00318442) , 
3, 14.3973, 1, 0, 0.642048,0.000257135) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632333,-0.0378077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493196,0.00362664) , 
3, 80.9846, 1, 0, 0.58441,-0.00396824) , 
3, 37.7925, 1, 0, 0.612869,-0.00188195) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.371814,0.00551711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686423,-0.0100454) , 
6, 0.0220874, 1, 0, 0.398089,9.68863e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718998,0.0131548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756607,0.0355566) , 
6, 0.0238009, 1, 0, 0.736754,0.00343432) , 
6, 0.0231937, 1, 0, 0.428731,0.000398859) , 
4, 0.00812107, 1, 0, 0.501001,-0.0004963)    );
  // itree = 649
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570714,0.00916274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777374,-0.0207506) , 
6, 0.0127316, 1, 0, 0.68994,-0.00296807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0501544,-0.00228362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71351,0.0381371) , 
6, 0.0220382, 1, 0, 0.231885,0.000634957) , 
5, 0.0107757, 1, 0, 0.529193,-0.00170365) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.772084,0.0537009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000275059,-0.0136982) , 
2, 0.166557, 1, 0, 0.534989,0.00128367) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.28739,0.00257744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850831,-0.0167245) , 
7, 8.67919e-05, 1, 0, 0.401961,-0.000865946) , 
3, 70.7899, 1, 0, 0.480945,0.000410369) , 
3, 25.1948, 1, 0, 0.495998,-0.000249158)    );
  // itree = 650
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.423922,0.00137427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584539,-0.00748272) , 
6, 0.0170366, 1, 0, 0.454464,-0.000224623) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622645,-0.0163228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635128,-0.105458) , 
1, 1.22967, 1, 0, 0.628098,-0.00529513) , 
6, 0.0198762, 1, 0, 0.466522,-0.000576743) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605107,-0.00356065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629999,-0.0122078) , 
3, 11.7107, 1, 0, 0.6181,-0.00132793) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640615,0.0395403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66139,-0.00190044) , 
6, 0.0230295, 1, 0, 0.649157,0.00187343) , 
3, 24.6191, 1, 0, 0.639852,0.000914323) , 
6, 0.0208739, 1, 0, 0.496628,-0.000317758)    );
  // itree = 651
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903548,0.0266606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989875,0.0854795) , 
7, 6.49725e-05, 1, 0, 0.927366,0.00101147) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000944004,0.0123824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656988,-0.00502128) , 
7, 8.51529e-06, 1, 0, 0.269991,-0.000406879) , 
2, 0.0237994, 1, 0, 0.485441,5.79738e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.445921,-0.0225558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74194,0.00127135) , 
1, 1.11006, 1, 0, 0.583713,-0.00701517) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774003,-0.0180902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594781,0.0262604) , 
1, 1.068, 1, 0, 0.672186,-0.000431572) , 
4, 0.0115681, 1, 0, 0.630544,-0.00353035) , 
6, 0.0220339, 1, 0, 0.502607,-0.000366536)    );
  // itree = 652
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972992,-0.000411767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700072,-0.0276812) , 
4, 0.0103916, 1, 0, 0.934797,-0.000655108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868904,-0.225464) , 
2, 0.0204032, 1, 0, 0.928332,-0.00157293) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121318,-0.00616551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499536,0.0114282) , 
6, 0.0154621, 1, 0, 0.297347,0.000300846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583928,-0.00795981) , 
6, 0.0231928, 1, 0, 0.318568,8.15279e-05) , 
2, 0.0238066, 1, 0, 0.512319,-0.000444171)    );
  // itree = 653
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976028,-0.0152801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950293,0.00619227) , 
0, 0.00124723, 1, 0, 0.96868,-0.0010771) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543978,-0.0225038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878321,0.0136044) , 
4, 0.0111766, 1, 0, 0.705706,-0.00893864) , 
0, 0.00201502, 1, 0, 0.933623,-0.00212512) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132377) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000178871,0.0131163) , 
2, 0.357069, 1, 0, 5.12516e-05,-3.16283e-05) , 
4, 0.0081194, 1, 0, 3.63843e-05,-0.000142315) , 
0, 0.00470348, 1, 0, 0.497157,-0.00119813)    );
  // itree = 654
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.275915,-0.0207678) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706536,0.00256159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0192822) , 
4, 0.0104397, 1, 0, 0.488327,4.65142e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648073,-0.0224118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612556,0.00378235) , 
6, 0.0217065, 1, 0, 0.620991,-0.00105106) , 
6, 0.0208755, 1, 0, 0.512728,-0.000155366) , 
5, 0.00231625, 1, 0, 0.502653,-0.000284611)    );
  // itree = 655
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929914,0.0152697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945895,0.0792935) , 
6, 0.0150218, 1, 0, 0.934548,0.000648128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.131347,-0.000355602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43793,-0.00828636) , 
6, 0.015958, 1, 0, 0.221205,-0.000508561) , 
2, 0.0238052, 1, 0, 0.464947,-0.000113334) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626607,0.000470809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626476,0.0155574) , 
6, 0.0239045, 1, 0, 0.626552,0.00133691) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60255,0.00119968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655553,-0.01573) , 
4, 0.01044, 1, 0, 0.634635,-0.00316262) , 
1, 1.08669, 1, 0, 0.632627,-0.00204463) , 
6, 0.0197143, 1, 0, 0.505938,-0.00058546)    );
  // itree = 656
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933956,0.0190052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013419) , 
0, 0.00470108, 1, 0, 0.464607,0.000550463) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924589,-0.00909283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131327) , 
0, 0.00470348, 1, 0, 0.355181,-0.000783848) , 
3, 37.8463, 1, 0, 0.402837,-0.000202738) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925413,-0.0139924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591816,-0.0339407) , 
6, 0.0212702, 1, 0, 0.848104,-0.00512294) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956984,-0.0100394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749036,0.0386067) , 
0, 0.00166492, 1, 0, 0.840882,0.00120528) , 
4, 0.010933, 1, 0, 0.844972,-0.00237814) , 
7, 8.53039e-05, 1, 0, 0.500491,-0.000683217)    );
  // itree = 657
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.273423,-0.0254219) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538279,-0.00708829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58019,-0.0222012) , 
3, 9.5838, 1, 0, 0.547917,-0.00213761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.483738,-0.00240495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651454,0.0206554) , 
6, 0.0220335, 1, 0, 0.504644,0.000178703) , 
3, 12.5793, 1, 0, 0.511354,-0.000180441) , 
5, 0.00229078, 1, 0, 0.501115,-0.000349909)    );
  // itree = 658
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903443,-0.0138189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934113,0.0836836) , 
6, 0.0208934, 1, 0, 0.907621,-0.000563127) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569791,0.0352893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00467494,-0.00546072) , 
2, 0.133809, 1, 0, 0.192136,0.00112763) , 
2, 0.0476103, 1, 0, 0.537946,0.000310449) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.573595,-0.0144596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667139,-0.0338952) , 
7, 5.43339e-05, 1, 0, 0.58876,-0.00242581) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.336429,0.00914916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72746,-0.00744849) , 
6, 0.022037, 1, 0, 0.401065,-0.000136009) , 
4, 0.00812137, 1, 0, 0.469254,-0.000967881) , 
3, 37.6029, 1, 0, 0.499969,-0.000396279)    );
  // itree = 659
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473394,0.00327407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646024,-0.013508) , 
6, 0.0165507, 1, 0, 0.536427,-0.00121544) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443553,-0.00238519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585951,0.0160538) , 
6, 0.0209774, 1, 0, 0.460735,0.000104946) , 
3, 37.7326, 1, 0, 0.494597,-0.000485749) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.788144,-0.034603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562975,0.00376026) , 
5, 0.0119529, 1, 0, 0.675325,-0.00420512) , 
6, 0.0231934, 1, 0, 0.505722,-0.00071469)    );
  // itree = 660
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.369243,-0.00321455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.111365,-0.0448765) , 
6, 0.0139123, 1, 0, 0.315663,-0.00028492) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853241,-0.00497025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.88303,0.0166335) , 
1, 1.36664, 1, 0, 0.869761,0.000794587) , 
7, 5.18993e-05, 1, 0, 0.469352,1.45e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605343,-0.017858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665613,0.0094694) , 
6, 0.0228624, 1, 0, 0.631782,-0.00363698) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652147,0.0202316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544319,-0.0113345) , 
4, 0.0115652, 1, 0, 0.606079,0.000254678) , 
3, 37.7172, 1, 0, 0.617183,-0.00142658) , 
6, 0.0208745, 1, 0, 0.495414,-0.000239564)    );
  // itree = 661
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.400122,-0.00471083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864646,-0.0145742) , 
7, 6.45999e-05, 1, 0, 0.518857,-0.00138321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623826,-0.0205921) , 
6, 0.0220366, 1, 0, 0.530085,-0.00229117) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960443,0.00983994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131096) , 
0, 0.00470348, 1, 0, 0.57281,0.000648654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000151067,-0.0149815) , 
2, 0.333232, 1, 0, 0.479596,0.000339996) , 
3, 25.1712, 1, 0, 0.49537,-0.000482027)    );
  // itree = 662
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980449,0.0505466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00383812,-0.0072183) , 
0, 0.0018605, 1, 0, 0.627325,0.000783631) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.433744,-0.0114161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361267,0.00389872) , 
3, 37.7248, 1, 0, 0.391727,-0.000418807) , 
4, 0.0081194, 1, 0, 0.48829,7.40277e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918207,-0.000752291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458429,0.0349741) , 
2, 0.0715735, 1, 0, 0.675845,0.00281678) , 
6, 0.0231942, 1, 0, 0.499925,0.000244167)    );
  // itree = 663
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980445,0.0304278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0825987,-0.0118062) , 
0, 0.00205567, 1, 0, 0.681455,0.000956307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137443,-0.0121631) , 
4, 0.0115327, 1, 0, 0.525343,0.000423614) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303158,-0.00836853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000272324,0.0255803) , 
2, 0.166636, 1, 0, 0.135203,-7.09947e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841006,-0.0188616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801895,0.00337224) , 
3, 70.5841, 1, 0, 0.826749,-0.00218659) , 
7, 2.23527e-05, 1, 0, 0.482479,-0.00113339) , 
3, 25.1948, 1, 0, 0.496086,-0.000639135)    );
  // itree = 664
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916852,-0.00927948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902993,0.0759413) , 
2, 0.0206938, 1, 0, 0.914941,-0.0001496) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713789,-0.0236016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466195,0.0249834) , 
2, 0.078949, 1, 0, 0.676733,-0.00419487) , 
2, 0.0271781, 1, 0, 0.813423,-0.00187358) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.174911,-0.00952317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130937) , 
0, 0.0141091, 1, 0, 0.0488956,-0.000947138) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597173,0.00836194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130979) , 
0, 0.00469538, 1, 0, 0.0854561,0.000619865) , 
3, 37.7963, 1, 0, 0.0703244,-2.86877e-05) , 
2, 0.0952032, 1, 0, 0.49888,-0.00109267)    );
  // itree = 665
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918183,0.0221547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000246884,0.00651146) , 
0, 0.00463108, 1, 0, 0.17814,0.000293032) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866359,-0.00951635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.89363e-05,-0.00506263) , 
0, 0.00940136, 1, 0, 0.139462,-0.000134593) , 
6, 0.00695523, 1, 0, 0.153679,2.25945e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.788473,0.00235706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839677,-0.0297041) , 
1, 1.40496, 1, 0, 0.814289,-0.00369992) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80951,0.00381656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814856,-0.0104698) , 
3, 58.531, 1, 0, 0.812074,-0.000788972) , 
3, 24.8316, 1, 0, 0.812794,-0.00173533) , 
7, 2.23526e-05, 1, 0, 0.501627,-0.000905415)    );
  // itree = 666
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.305052,-0.00242547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578531,-0.0255055) , 
6, 0.0112016, 1, 0, 0.339012,-0.000317924) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.599206,0.00773919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587789,0.0477849) , 
6, 0.0147719, 1, 0, 0.594784,0.000792192) , 
6, 0.0123796, 1, 0, 0.419864,3.29936e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584179,-0.0395329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587762,-0.00947171) , 
1, 1.37237, 1, 0, 0.587038,-0.00327201) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792344,0.00473465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355468,-0.0115681) , 
5, 0.0116197, 1, 0, 0.62006,-0.000446501) , 
6, 0.0185602, 1, 0, 0.610177,-0.00129211) , 
6, 0.0162427, 1, 0, 0.502034,-0.000539138)    );
  // itree = 667
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885502,-0.0139723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93241,0.0246659) , 
5, 0.00994502, 1, 0, 0.895525,-0.000799049) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.38383,-0.0335055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293508,-0.00854808) , 
3, 50.3122, 1, 0, 0.338696,-0.00277638) , 
5, 0.0115948, 1, 0, 0.794444,-0.00115799) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.13305e-05,0.00330947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137081) , 
3, 75.7145, 1, 0, 5.57881e-05,-7.70862e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.102934,0.00522673) , 
7, 3.01085e-05, 1, 0, 0.0197925,0.000162185) , 
2, 0.119033, 1, 0, 0.498841,-0.00065422)    );
  // itree = 668
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000836168,0.110836) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913159,0.0213701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131772) , 
0, 0.00411135, 1, 0, 0.215385,1.85189e-05) , 
7, -0.00036026, 1, 0, 0.171621,0.000167242) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985374,0.0347355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846528,-0.0707888) , 
0, 0.000399449, 1, 0, 0.912028,-0.00815681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.749659,-0.00624367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83332,0.00502166) , 
1, 1.24514, 1, 0, 0.798275,-0.000391848) , 
6, 0.0129312, 1, 0, 0.81309,-0.00140314) , 
7, 2.62166e-05, 1, 0, 0.493639,-0.000621092)    );
  // itree = 669
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934694,0.03201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.86536e-05,-0.00669352) , 
0, 0.00469467, 1, 0, 0.315512,0.000446242) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60159,-0.00259535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57284,-0.0564558) , 
1, 1.80042, 1, 0, 0.596802,-0.000827402) , 
6, 0.011928, 1, 0, 0.467514,-0.000242006) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886656,-0.00298189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425445,0.0369133) , 
2, 0.0715615, 1, 0, 0.642056,0.00193822) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618289,-0.0371436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618482,-0.0178867) , 
1, 1.11044, 1, 0, 0.618439,-0.00872395) , 
1, 1.08923, 1, 0, 0.626747,-0.00497301) , 
6, 0.0208739, 1, 0, 0.495681,-0.00107887)    );
  // itree = 670
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687865,0.0229804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127765,-0.0230036) , 
5, 0.00769654, 1, 0, 0.41702,0.000231485) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971565,-0.015449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00407745,0.0017713) , 
0, 0.00233748, 1, 0, 0.614154,-0.00229414) , 
6, 0.0165654, 1, 0, 0.487237,-0.000668107) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656422,-0.00896297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587773,-0.0194187) , 
3, 48.5379, 1, 0, 0.622847,-0.00637218) , 
6, 0.0231932, 1, 0, 0.496187,-0.00104458)    );
  // itree = 671
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914038,0.0101085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95046,0.0423585) , 
6, 0.0199363, 1, 0, 0.917226,0.000579028) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.256465,-0.00141158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572109,-0.0111121) , 
6, 0.0209843, 1, 0, 0.275277,-0.000305757) , 
2, 0.0238066, 1, 0, 0.489699,-1.02238e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632154,-0.00773414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570129,-0.0245144) , 
3, 32.9149, 1, 0, 0.604559,-0.00556605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644921,0.0151044) , 
3, 62.8748, 1, 0, 0.617906,-0.00287093) , 
6, 0.0220335, 1, 0, 0.505126,-0.000354459)    );
  // itree = 672
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.471117,-0.00618347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666246,-0.0185709) , 
6, 0.0210331, 1, 0, 0.481051,-0.000789065) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614763,0.0317199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615713,0.0813864) , 
6, 0.0226674, 1, 0, 0.615218,0.00391546) , 
6, 0.0220871, 1, 0, 0.488887,-0.000514313) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645992,-0.0336629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630935,-0.00527887) , 
1, 1.06243, 1, 0, 0.636802,-0.00636492) , 
6, 0.0231934, 1, 0, 0.498556,-0.00089677)    );
  // itree = 673
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928698,0.0676083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441174,0.0210255) , 
2, 0.0226411, 1, 0, 0.846343,0.000910072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00273467,-0.0125285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130936) , 
0, 0.0282413, 1, 0, 0.0010946,-0.000431553) , 
2, 0.0476132, 1, 0, 0.35003,0.000122297) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996812,0.00909385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877282,-0.0113145) , 
0, 0.000222048, 1, 0, 0.932918,-0.00204258) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000176565,0.00843961) , 
2, 0.262006, 1, 0, 8.23982e-05,-8.84804e-05) , 
0, 0.00466873, 1, 0, 0.604785,-0.00135521) , 
6, 0.0127617, 1, 0, 0.501993,-0.00075904)    );
  // itree = 674
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287955,-0.0195991) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713097,0.0243603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0969438,-0.010804) , 
5, 0.00771276, 1, 0, 0.414533,0.000328914) , 
4, 0.00232766, 1, 0, 0.406176,8.23276e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.444569,-0.015024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907282,-0.0543782) , 
4, 0.00883051, 1, 0, 0.550566,-0.00422921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935728,-0.0131406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578698,0.000603697) , 
2, 0.0237939, 1, 0, 0.663051,-0.000571353) , 
4, 0.00927569, 1, 0, 0.626412,-0.0017628) , 
6, 0.0162368, 1, 0, 0.497237,-0.000680579)    );
  // itree = 675
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752194,0.06206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250516,-0.00455404) , 
4, 0.00928629, 1, 0, 0.550343,0.00107201) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.514575,-0.0146813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442957,0.000131544) , 
3, 36.5728, 1, 0, 0.467276,-0.000432027) , 
3, 12.5894, 1, 0, 0.480273,-0.000196689) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919056,-0.0143101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887852,0.0305608) , 
3, 40.5665, 1, 0, 0.905073,0.00011482) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812182,-0.0321958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.312479,-0.00984753) , 
2, 0.0908174, 1, 0, 0.469117,-0.00649202) , 
2, 0.047782, 1, 0, 0.622965,-0.00416048) , 
6, 0.020877, 1, 0, 0.505284,-0.000891445)    );
  // itree = 676
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.273568,-0.0232802) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942544,0.0260287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905234,-0.104206) , 
3, 35.6518, 1, 0, 0.923337,-0.00139105) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803016,0.040597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.213548,-0.0018942) , 
2, 0.0465059, 1, 0, 0.321238,0.000228381) , 
2, 0.0238066, 1, 0, 0.506576,-0.000270114) , 
5, 0.00232522, 1, 0, 0.496973,-0.000402312)    );
  // itree = 677
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60874,-0.0094665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746564,-0.0302958) , 
5, 0.00712576, 1, 0, 0.651053,-0.00185469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76895,0.0285803) , 
5, 0.00880253, 1, 0, 0.660293,-0.00142363) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685374,0.00627606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0306268,-0.00795204) , 
2, 0.118963, 1, 0, 0.382888,-8.17389e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16562,0.053671) , 
3, 125.983, 1, 0, 0.360644,0.000189787) , 
5, 0.00924297, 1, 0, 0.504339,-0.000583917)    );
  // itree = 678
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60091,-0.0121251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.471564,-0.0399494) , 
7, 4.49831e-05, 1, 0, 0.585886,-0.00149521) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743638,0.0187698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0148336) , 
4, 0.00943303, 1, 0, 0.285249,0.000529435) , 
4, 0.00695256, 1, 0, 0.398137,-0.000230811) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941346,-0.017506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.841799,0.0149441) , 
0, 0.00165791, 1, 0, 0.889274,-0.00224413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507595,-0.0218265) , 
5, 0.0119739, 1, 0, 0.837029,-0.00355858) , 
7, 8.53043e-05, 1, 0, 0.496803,-0.000978921)    );
  // itree = 679
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680985,0.0127808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211941,-0.0131499) , 
5, 0.00781347, 1, 0, 0.436854,-1.65593e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61907,0.0491524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64026,0.00917545) , 
6, 0.0186041, 1, 0, 0.635058,0.00130113) , 
6, 0.0178925, 1, 0, 0.472839,0.000234872) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622937,-0.0115595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585756,-0.0327257) , 
1, 1.13511, 1, 0, 0.615968,-0.00574523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686032,0.067408) , 
1, 1.16347, 1, 0, 0.629859,-0.00371291) , 
6, 0.0208748, 1, 0, 0.499685,-0.000440081)    );
  // itree = 680
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688015,-0.00556398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184205,0.0309644) , 
5, 0.0112437, 1, 0, 0.529311,-0.000289643) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523013,-0.0296817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528211,-0.00928098) , 
3, 39.7363, 1, 0, 0.52754,-0.00209032) , 
3, 35.9663, 1, 0, 0.528557,-0.00105613) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895558,0.00335313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947937,0.0327558) , 
5, 0.00902442, 1, 0, 0.920183,0.00182363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000121958,-0.00157954) , 
0, 0.00469953, 1, 0, 0.397647,0.000778431) , 
3, 75.5319, 1, 0, 0.495958,-0.000599284)    );
  // itree = 681
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993796,-0.0295073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998055,0.0394946) , 
7, 7.05338e-05, 1, 0, 0.995827,-0.000101234) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879091,-0.0297142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946916,-0.00365728) , 
0, 0.000964181, 1, 0, 0.936,-0.00341369) , 
0, 0.000111812, 1, 0, 0.964871,-0.00181517) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00422165,0.0128324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.42727e-05,-0.0109501) , 
5, 0.00968827, 1, 0, 0.00156815,7.97245e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00214924,-0.00658639) , 
6, 0.0173958, 1, 0, 0.00172,-6.27005e-05) , 
0, 0.00235054, 1, 0, 0.493074,-0.000956727)    );
  // itree = 682
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.457468,-0.00296684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.354676,0.0133601) , 
3, 50.3893, 1, 0, 0.414989,0.000132833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6287,0.0150864) , 
6, 0.0165653, 1, 0, 0.428459,0.000257362) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926415,-0.014515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433715,0.00668503) , 
2, 0.0475551, 1, 0, 0.635555,-0.000281158) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667224,-0.0233096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389526,-0.00816923) , 
5, 0.0107295, 1, 0, 0.508796,-0.00374206) , 
3, 88.3021, 1, 0, 0.611414,-0.000940277) , 
6, 0.0173962, 1, 0, 0.494318,-0.000173752)    );
  // itree = 683
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667488,-0.00749756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752906,-0.0182039) , 
7, 0.000105186, 1, 0, 0.672688,-0.00118535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757463,-0.0386748) , 
5, 0.0106501, 1, 0, 0.67805,-0.00168789) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981466,0.0334286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131075) , 
0, 0.00469775, 1, 0, 0.30796,0.00114525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145217) , 
2, 0.238033, 1, 0, 0.182119,0.000340028) , 
5, 0.0111903, 1, 0, 0.497897,-0.000951227)    );
  // itree = 684
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.274024,-0.0212606) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813067,0.0011803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0527389,-0.00977633) , 
2, 0.0952207, 1, 0, 0.493595,-0.000343436) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678344,0.00869707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645342,0.0153533) , 
3, 49.6594, 1, 0, 0.663362,0.00164702) , 
6, 0.0231942, 1, 0, 0.504644,-0.000213887) , 
5, 0.00227818, 1, 0, 0.495177,-0.000332485)    );
  // itree = 685
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561411,-0.00939182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73836,-0.0243778) , 
5, 0.00505142, 1, 0, 0.631271,-0.00260584) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.503225,0.00857475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500032,-0.0301733) , 
3, 20.3842, 1, 0, 0.502622,-0.000100957) , 
5, 0.00661853, 1, 0, 0.539023,-0.000809702) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976641,0.000153068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962623,0.0270705) , 
0, 0.00145355, 1, 0, 0.9724,0.00112545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.002988,-0.0141966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0010815,0.0241205) , 
2, 0.14277, 1, 0, 0.00168081,-0.000359935) , 
0, 0.00235054, 1, 0, 0.483848,0.000377872) , 
3, 25.1799, 1, 0, 0.500878,1.13285e-05)    );
  // itree = 686
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260073,-0.0167213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.31915,0.0049101) , 
4, 0.00232368, 1, 0, 0.314632,-7.2039e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843406,-0.00310875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901853,-0.0231121) , 
1, 1.55622, 1, 0, 0.853579,-0.0016614) , 
7, 5.1899e-05, 1, 0, 0.465957,-0.000518297) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633174,-0.0319707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670001,-0.0143128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617439,0.0138161) , 
3, 37.7183, 1, 0, 0.639453,-0.000766588) , 
6, 0.0217032, 1, 0, 0.637962,-0.00326206) , 
6, 0.0208739, 1, 0, 0.495729,-0.000993219)    );
  // itree = 687
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994682,-0.0106352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766582,-0.00921958) , 
2, 0.070997, 1, 0, 0.967486,-0.00180525) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00015137,-0.00847044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00346039,0.00577046) , 
6, 0.016238, 1, 0, 0.00119286,-3.92138e-05) , 
0, 0.00235174, 1, 0, 0.53793,-0.00102018) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962477,0.0385192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932699,-0.00164407) , 
3, 117.604, 1, 0, 0.955013,0.0012919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00243492,-0.0018939) , 
0, 0.00234977, 1, 0, 0.38948,0.00046859) , 
3, 75.6879, 1, 0, 0.500685,-0.000646652)    );
  // itree = 688
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964056,0.0212748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519895,-0.039301) , 
5, 0.0112809, 1, 0, 0.924422,0.000502449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916308,-0.0469706) , 
2, 0.0204032, 1, 0, 0.923643,0.000190522) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814218,-0.000768783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799015,-0.051278) , 
3, 44.3167, 1, 0, 0.807451,-0.00346763) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633314,0.00790921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.075558,-0.00673783) , 
2, 0.0896926, 1, 0, 0.204718,-0.000244029) , 
2, 0.0465059, 1, 0, 0.308253,-0.000797768) , 
2, 0.0238066, 1, 0, 0.501343,-0.000487675)    );
  // itree = 689
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99797,0.0585982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735532,0.0141247) , 
2, 0.0234869, 1, 0, 0.935936,0.00111849) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130931) , 
4, 0.0104412, 1, 0, 0,-0.000113168) , 
0, 0.00470304, 1, 0, 0.398008,0.000410596) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897621,-0.0455193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884081,-5.68346e-05) , 
4, 0.00929326, 1, 0, 0.889916,-0.00194031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811874,0.0210125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169353,-0.000521501) , 
2, 0.09181, 1, 0, 0.270885,0.00053148) , 
2, 0.0713981, 1, 0, 0.610769,-0.000825677) , 
6, 0.0150773, 1, 0, 0.500768,-0.000186505)    );
  // itree = 690
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995252,-0.0113441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997067,0.0730255) , 
7, 0.000119901, 1, 0, 0.995529,0.000275537) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865531,-0.0286091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950148,-0.0138795) , 
0, 0.000909771, 1, 0, 0.93985,-0.0047744) , 
0, 0.000335082, 1, 0, 0.967539,-0.00226309) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00420177,0.0259296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0151584) , 
5, 0.00968827, 1, 0, 0.00147513,0.000143711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0021608,-0.00952289) , 
6, 0.0173889, 1, 0, 0.00165814,-0.000119971) , 
0, 0.00235038, 1, 0, 0.502343,-0.0012309)    );
  // itree = 691
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666131,-0.00983383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521141,0.0438515) , 
3, 62.2217, 1, 0, 0.621423,-0.000336276) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96561,-0.0290858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946854,-0.00725311) , 
3, 71.2996, 1, 0, 0.961772,-0.00359078) , 
7, 3.27493e-05, 1, 0, 0.847324,-0.0024964) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594861,0.0807643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49523,0.052187) , 
2, 0.0802242, 1, 0, 0.544692,0.00423839) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.280084,0.00878908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00118471,-0.00741102) , 
2, 0.169637, 1, 0, 0.0708878,-4.21096e-05) , 
2, 0.0918899, 1, 0, 0.12215,0.000421009) , 
2, 0.0714198, 1, 0, 0.500889,-0.00110268)    );
  // itree = 692
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926178,0.0260284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117815,-0.00591761) , 
2, 0.0238066, 1, 0, 0.405687,-0.000110963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561222,0.0244378) , 
6, 0.0154626, 1, 0, 0.417476,-2.48553e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508245,-0.0231038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60884,-0.00895859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628831,0.0616869) , 
1, 1.4417, 1, 0, 0.610092,-0.00135623) , 
6, 0.0166278, 1, 0, 0.604051,-0.00186865) , 
6, 0.0162376, 1, 0, 0.496661,-0.000794517)    );
  // itree = 693
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538219,-0.00307875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711463,-0.0504357) , 
7, 3.16946e-05, 1, 0, 0.585731,-0.00119049) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946971,0.00858272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.00594e-05,-0.00834487) , 
0, 0.00470304, 1, 0, 0.321477,0.000318502) , 
5, 0.00671344, 1, 0, 0.411738,-0.000196921) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942796,-0.020852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984485,0.00981613) , 
5, 0.0101107, 1, 0, 0.97357,-0.000247443) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513253,0.0281257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688128,-0.0144635) , 
4, 0.0103583, 1, 0, 0.6272,-0.00676192) , 
2, 0.0714166, 1, 0, 0.843327,-0.00269702) , 
7, 8.87065e-05, 1, 0, 0.501589,-0.000717408)    );
  // itree = 694
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809732,-0.00774174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573464,0.018542) , 
5, 0.00619859, 1, 0, 0.653856,0.000590799) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0232512,-0.0161078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000160482,0.0165628) , 
0, 0.0305698, 1, 0, 0.00711942,-0.00041583) , 
4, 0.00928202, 1, 0, 0.4027,0.000199881) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825479,-0.00450869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877012,-0.0164626) , 
7, 0.000114546, 1, 0, 0.843957,-0.00347982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856229,0.0297758) , 
6, 0.0232665, 1, 0, 0.846522,-0.00213527) , 
7, 8.68798e-05, 1, 0, 0.496865,-0.000295565)    );
  // itree = 695
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499943,-0.00103576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640493,0.0183691) , 
6, 0.0209843, 1, 0, 0.507351,0.000108627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203399,-0.0152489) , 
3, 125.974, 1, 0, 0.485974,-6.24738e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608119,-0.021632) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669029,0.0200998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596329,-0.0110276) , 
3, 75.4635, 1, 0, 0.647095,0.000413868) , 
6, 0.0228086, 1, 0, 0.635093,-0.00187911) , 
6, 0.0220335, 1, 0, 0.50409,-0.000283173)    );
  // itree = 696
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950232,0.0715477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892904,-0.000201578) , 
2, 0.00680106, 1, 0, 0.919628,0.000412974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946442,0.087845) , 
6, 0.0208802, 1, 0, 0.922581,0.000841326) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934357,0.000753203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911943,-0.0305545) , 
0, 0.00212506, 1, 0, 0.931804,-0.00184843) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00394354,0.0109275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000551029,-0.0164987) , 
5, 0.0115713, 1, 0, 0.00189005,-8.0763e-05) , 
0, 0.00235174, 1, 0, 0.307964,-0.000662576) , 
2, 0.0238052, 1, 0, 0.498031,-0.000197503)    );
  // itree = 697
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.512737,0.0141102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53254,-0.008827) , 
3, 23.3762, 1, 0, 0.519574,0.000317728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596242,0.0241501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702509,0.0415761) , 
3, 23.373, 1, 0, 0.631868,0.00329639) , 
6, 0.0208739, 1, 0, 0.538999,0.000833002) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969489,-0.00762119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70942,-0.0166241) , 
0, 0.00199779, 1, 0, 0.928887,-0.00262267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130984) , 
3, 91.7033, 1, 0, 0,-0.000104657) , 
0, 0.00470348, 1, 0, 0.472143,-0.00138453) , 
3, 37.7596, 1, 0, 0.50224,-0.000386244)    );
  // itree = 698
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0836245,-0.024891) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554272,-0.00636954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497308,0.00202299) , 
3, 25.1774, 1, 0, 0.515408,-0.000173532) , 
6, 0.00298257, 1, 0, 0.476902,-0.000337933) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622273,-0.00683974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622424,0.0292732) , 
1, 1.09237, 1, 0, 0.622347,0.000303135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685439,-0.0282892) , 
1, 1.15602, 1, 0, 0.637728,-0.00212905) , 
6, 0.0208739, 1, 0, 0.504919,-0.00064995)    );
  // itree = 699
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.312788,-0.00117995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.237407,0.0106623) , 
6, 0.00917386, 1, 0, 0.273183,0.000185463) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793797,-0.000405686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799429,-0.0351531) , 
3, 5.39446, 1, 0, 0.796878,-0.00643579) , 
7, 3.52563e-05, 1, 0, 0.528067,-0.00303713) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662471,-0.0106387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311101,0.0110479) , 
5, 0.00871952, 1, 0, 0.475364,-0.000110371) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638216,0.00462259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639224,-0.0149934) , 
1, 1.06806, 1, 0, 0.638954,-0.00255202) , 
6, 0.0220339, 1, 0, 0.494563,-0.00039691) , 
3, 12.5861, 1, 0, 0.499898,-0.000817353)    );
  // itree = 700
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970309,-0.00432995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00238138,-0.0278032) , 
0, 0.00176723, 1, 0, 0.652505,-0.00120842) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630553,0.0137142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000463519,-0.0117359) , 
2, 0.142773, 1, 0, 0.323939,0.00035896) , 
5, 0.00871643, 1, 0, 0.480797,-0.000389311) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605445,-0.036247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627321,0.0095906) , 
6, 0.0232502, 1, 0, 0.616386,-0.006728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633914,0.0440325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633747,-0.0049199) , 
3, 70.0734, 1, 0, 0.633827,0.00116279) , 
3, 37.7183, 1, 0, 0.626251,-0.0022648) , 
6, 0.0220335, 1, 0, 0.498495,-0.000617516)    );
  // itree = 701
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891058,-0.00686411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974861,0.0174759) , 
7, 0.000106386, 1, 0, 0.902265,-0.000233987) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.432458,-0.0645697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.310103,-0.0160144) , 
2, 0.0272914, 1, 0, 0.350917,-0.00283818) , 
5, 0.0115876, 1, 0, 0.812165,-0.000659558) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.446786,0.0308394) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0202557,-0.00673749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.038303,0.0205589) , 
3, 100.929, 1, 0, 0.0240131,-0.000179303) , 
2, 0.114588, 1, 0, 0.065219,9.42857e-05) , 
2, 0.0952207, 1, 0, 0.491409,-0.00033584)    );
  // itree = 702
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267513,-0.0200265) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939375,0.0199775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131595) , 
0, 0.00470108, 1, 0, 0.391961,0.000461069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634905,-0.000699042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602758,-0.086054) , 
1, 1.54477, 1, 0, 0.632183,-0.000469445) , 
6, 0.0150773, 1, 0, 0.508686,8.92661e-06) , 
5, 0.00232658, 1, 0, 0.498239,-9.89042e-05)    );
  // itree = 703
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928189,0.0113726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148461,-0.00984344) , 
2, 0.0238008, 1, 0, 0.458553,-0.000490808) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630978,0.0460818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147975,-0.00667236) , 
4, 0.00694467, 1, 0, 0.322349,0.000599135) , 
3, 62.9263, 1, 0, 0.415962,-0.000149978) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995543,0.00543108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926678,-0.0196346) , 
0, 0.000110862, 1, 0, 0.959562,-0.00443361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00544784,0.00741441) , 
0, 0.00233811, 1, 0, 0.606089,-0.00259531) , 
6, 0.0162368, 1, 0, 0.497285,-0.00119593)    );
  // itree = 704
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927828,0.025181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428658,-0.0115159) , 
2, 0.0181129, 1, 0, 0.818723,-0.000547366) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903414,-0.00332208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913158,0.0544093) , 
3, 11.7636, 1, 0, 0.911474,0.00126086) , 
6, 0.0116198, 1, 0, 0.881311,0.000672824) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0381967,-0.00655066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39543,0.00551183) , 
6, 0.0167869, 1, 0, 0.152662,2.64621e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519076,-0.0220645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448042,-0.00112182) , 
1, 1.07281, 1, 0, 0.470821,-0.00234884) , 
6, 0.0220327, 1, 0, 0.19716,-0.000305747) , 
2, 0.0476132, 1, 0, 0.491545,0.000115325)    );
  // itree = 705
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.305873,-0.0151067) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52115,-0.00705606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.434803,0.00448161) , 
3, 25.1973, 1, 0, 0.461719,-8.31831e-05) , 
4, 0.00232777, 1, 0, 0.453633,-0.000224685) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925634,0.00434991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880789,-0.0357891) , 
3, 23.7839, 1, 0, 0.894058,-0.00465501) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244362,-0.00647964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314565,0.0248995) , 
6, 0.022365, 1, 0, 0.278389,0.00134662) , 
2, 0.0952653, 1, 0, 0.643906,-0.0022165) , 
6, 0.0197143, 1, 0, 0.498535,-0.000694731)    );
  // itree = 706
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260841,-0.0173869) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.270925,0.00108201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876218,0.0188551) , 
7, 4.18239e-05, 1, 0, 0.46541,0.000637276) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668833,-0.00197646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637415,-0.0271195) , 
1, 1.23363, 1, 0, 0.664877,-0.000979993) , 
6, 0.0197164, 1, 0, 0.512574,0.000254868) , 
5, 0.00224904, 1, 0, 0.501527,0.000111262)    );
  // itree = 707
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994579,-0.00570061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800993,-0.00946746) , 
2, 0.0711526, 1, 0, 0.969954,-0.00120191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940564,-0.0429269) , 
0, 0.00212442, 1, 0, 0.967888,-0.00200255) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0054152,-0.00703702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00341187,0.0106172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130986) , 
0, 0.0202809, 1, 0, 0.000928172,9.16575e-05) , 
2, 0.0953195, 1, 0, 0.00181075,-8.92674e-05) , 
0, 0.00235152, 1, 0, 0.501549,-0.00107898)    );
  // itree = 708
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.263042,-0.00425986) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805687,0.00029556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.830949,-0.0296711) , 
3, 5.39754, 1, 0, 0.819802,-0.0037011) , 
7, 3.52565e-05, 1, 0, 0.543949,-0.00194447) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508561,0.00432741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337981,-0.0239788) , 
3, 72.5212, 1, 0, 0.458326,-0.00177865) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530783,0.062053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489194,0.000201919) , 
3, 24.5965, 1, 0, 0.496565,0.000360032) , 
4, 0.00464588, 1, 0, 0.491142,5.67293e-05) , 
3, 12.5976, 1, 0, 0.499415,-0.000256785)    );
  // itree = 709
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584593,-0.00554598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772548,-0.0181225) , 
7, 2.12024e-05, 1, 0, 0.630546,-0.000929695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977535,0.0465629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133665) , 
0, 0.00235174, 1, 0, 0.292635,0.000465058) , 
5, 0.00543387, 1, 0, 0.389403,6.56378e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623281,3.38585e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64406,-0.0109543) , 
6, 0.0233914, 1, 0, 0.62647,-0.000472313) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625873,-0.0384122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554462,-0.000509465) , 
3, 49.9166, 1, 0, 0.596099,-0.00401561) , 
1, 1.40478, 1, 0, 0.617971,-0.00146393) , 
6, 0.0150842, 1, 0, 0.498601,-0.00066511)    );
  // itree = 710
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972832,0.00117044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00367799,-0.0256723) , 
0, 0.00198082, 1, 0, 0.641189,-0.0010313) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0234183,-0.00826568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72862,0.0134176) , 
6, 0.0187747, 1, 0, 0.313664,0.000584828) , 
4, 0.00928143, 1, 0, 0.484388,-0.000257588) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903227,0.0578585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453539,-0.0121077) , 
2, 0.0707201, 1, 0, 0.667884,-0.00352011) , 
6, 0.0231934, 1, 0, 0.495679,-0.000458342)    );
  // itree = 711
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967761,0.0261594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0244588,-0.0121115) , 
2, 0.0238066, 1, 0, 0.50163,-0.000414258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65951,-0.0463245) , 
4, 0.00524961, 1, 0, 0.529727,-0.00151264) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977523,0.00901575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00126425,-0.00612749) , 
0, 0.00235034, 1, 0, 0.521078,0.000534279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91548,-0.00864083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131267) , 
0, 0.00469537, 1, 0, 0.386974,-0.000875726) , 
3, 75.5857, 1, 0, 0.486608,0.000171847) , 
4, 0.00580484, 1, 0, 0.495824,-0.000188188)    );
  // itree = 712
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.514454,0.001091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329255,-0.0244676) , 
3, 74.5003, 1, 0, 0.470957,-0.00124556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851525,0.0162506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112114,-0.00455359) , 
2, 0.0714068, 1, 0, 0.485865,0.000251855) , 
4, 0.00464388, 1, 0, 0.483554,1.97482e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664907,0.00795863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655587,-0.0181945) , 
3, 57.5324, 1, 0, 0.66125,-0.00290692) , 
6, 0.0231931, 1, 0, 0.495058,-0.000169712)    );
  // itree = 713
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.257253,-0.0212522) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605456,-0.00350497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.733039,-0.0197084) , 
5, 0.00568765, 1, 0, 0.681883,-0.00136671) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769103,0.00971063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15774,-0.00473626) , 
2, 0.0714013, 1, 0, 0.388725,-6.78652e-05) , 
5, 0.00878371, 1, 0, 0.510476,-0.000607288) , 
5, 0.00228181, 1, 0, 0.499788,-0.000787016)    );
  // itree = 714
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.259166,-0.0198715) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614263,-0.0164731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744848,0.0277848) , 
5, 0.00574138, 1, 0, 0.64632,-0.00113135) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739379,0.0244676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403156,4.32281e-05) , 
5, 0.0085045, 1, 0, 0.474424,0.000332949) , 
5, 0.00656143, 1, 0, 0.512464,8.90188e-06) , 
5, 0.00226026, 1, 0, 0.501781,-0.000205567)    );
  // itree = 715
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60946,-0.00335008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522153,-0.0243418) , 
3, 62.9434, 1, 0, 0.585078,-0.000947552) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225295,0.011987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453814,-0.00459639) , 
6, 0.0162448, 1, 0, 0.30282,-2.39231e-05) , 
5, 0.00671344, 1, 0, 0.39754,-0.000333875) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874124,-0.0325504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823233,-0.0124152) , 
6, 0.0205268, 1, 0, 0.83117,-0.0053179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949236,0.00289683) , 
1, 1.25521, 1, 0, 0.8503,-0.00441487) , 
7, 8.85522e-05, 1, 0, 0.491704,-0.00118263)    );
  // itree = 716
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964835,0.0739309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923748,-0.0257381) , 
2, 0.00680106, 1, 0, 0.941995,-0.00330429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926943,-0.0401697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864244,0.0727663) , 
8, 0.0308283, 1, 0, 0.916175,-8.13825e-05) , 
3, 23.322, 1, 0, 0.924755,-0.00115232) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869889,0.0133419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882472,-0.0028212) , 
3, 72.4978, 1, 0, 0.873147,0.00186704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013096) , 
4, 0.00811021, 1, 0, 0,-0.000100951) , 
0, 0.00470068, 1, 0, 0.31417,0.000607158) , 
2, 0.0238052, 1, 0, 0.504931,5.74526e-05)    );
  // itree = 717
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976818,-0.00696441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00217366,-0.0193748) , 
0, 0.00194623, 1, 0, 0.654405,-0.00140543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766813,0.0134315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0545134,-0.00690404) , 
4, 0.0107011, 1, 0, 0.270705,0.000138341) , 
4, 0.00926817, 1, 0, 0.477756,-0.000694701) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912523,-0.0358554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87311,-0.0537293) , 
2, 0.0341152, 1, 0, 0.894954,-0.00950214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.393265,0.0223382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422566,0.000193384) , 
6, 0.0233588, 1, 0, 0.40739,0.00130272) , 
2, 0.0715278, 1, 0, 0.636841,-0.00378211) , 
6, 0.0220335, 1, 0, 0.496736,-0.00106306)    );
  // itree = 718
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.534338,0.0108393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.47348,-0.00441208) , 
3, 23.9711, 1, 0, 0.49295,-1.96627e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196822,0.0251323) , 
3, 125.852, 1, 0, 0.471463,9.32017e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650644,0.0162236) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628979,-0.0215428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61453,-0.0105172) , 
1, 1.11142, 1, 0, 0.621835,-0.00463772) , 
3, 12.6173, 1, 0, 0.625951,-0.00368262) , 
6, 0.0208745, 1, 0, 0.498807,-0.000575113)    );
  // itree = 719
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0883043,-0.0166626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0906707,0.0137418) , 
6, 0.00289799, 1, 0, 0.0901566,-8.57412e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996739,0.0769588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57786,0.0185937) , 
2, 0.0238086, 1, 0, 0.868301,0.00108067) , 
7, 1.14394e-05, 1, 0, 0.393318,0.000368688) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958788,-0.0621443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374631,0.00697271) , 
2, 0.0237456, 1, 0, 0.576311,-0.00279969) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679876,-0.0187301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630302,0.00151891) , 
1, 1.06645, 1, 0, 0.633946,-0.000179244) , 
6, 0.0164195, 1, 0, 0.624999,-0.000586036) , 
6, 0.0150877, 1, 0, 0.502887,-8.28307e-05)    );
  // itree = 720
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709752,-0.0123025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.265698,0.00230383) , 
5, 0.0050715, 1, 0, 0.424899,-0.000458856) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91749,-0.112831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852056,-0.00829996) , 
6, 0.0137097, 1, 0, 0.857373,-0.00261086) , 
7, 3.96367e-05, 1, 0, 0.655108,-0.00160439) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905964,0.0840191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531693,0.0535274) , 
2, 0.0713654, 1, 0, 0.724329,0.00315847) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133994) , 
6, 0.0139205, 1, 0, 0,-0.000171171) , 
4, 0.0122065, 1, 0, 0.131869,0.00043501) , 
4, 0.0115989, 1, 0, 0.499456,-0.000997711)    );
  // itree = 721
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.477754,0.025446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458058,-0.00813193) , 
3, 12.611, 1, 0, 0.464946,-0.000130709) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661313,-0.01281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649905,-0.0411136) , 
3, 30.6297, 1, 0, 0.659262,-0.00478237) , 
6, 0.0162354, 1, 0, 0.544704,-0.00204) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88541,-0.0811417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126335,0.00472751) , 
2, 0.0237921, 1, 0, 0.380159,-0.000535351) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608055,0.00288648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536991,0.0647688) , 
1, 1.42727, 1, 0, 0.59816,0.000868361) , 
6, 0.0162367, 1, 0, 0.475342,7.75342e-05) , 
3, 37.8437, 1, 0, 0.506911,-0.000886233)    );
  // itree = 722
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507854,-0.00341045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677776,0.0279014) , 
4, 0.00525025, 1, 0, 0.538551,9.45169e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769327,0.0564343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702857,-0.0263531) , 
3, 12.0353, 1, 0, 0.713621,-0.00284014) , 
4, 0.00580281, 1, 0, 0.616764,-0.00121655) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831214,0.0154551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949748,-0.0214238) , 
6, 0.0208914, 1, 0, 0.866893,-0.00189839) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0693463,-0.00701562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618739,0.0057017) , 
6, 0.0173977, 1, 0, 0.326654,0.000298164) , 
2, 0.0238059, 1, 0, 0.426923,-0.000109518) , 
4, 0.00812137, 1, 0, 0.500955,-0.000541228)    );
  // itree = 723
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253444,-0.0055681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965305,-0.0395743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676339,-0.0087976) , 
0, 0.00110668, 1, 0, 0.795466,-0.00718188) , 
7, 3.21561e-05, 1, 0, 0.536651,-0.00382542) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526958,-0.012332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4337,0.0063273) , 
4, 0.00463885, 1, 0, 0.449473,4.7844e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909358,-0.0394335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537405,-0.00274722) , 
2, 0.0237892, 1, 0, 0.617974,-0.00197163) , 
6, 0.0197143, 1, 0, 0.489821,-0.000435727) , 
3, 12.5991, 1, 0, 0.496956,-0.000952171)    );
  // itree = 724
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998559,0.0239052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715589,-0.00582769) , 
0, 0.00173279, 1, 0, 0.967124,0.000333277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659047,0.0726227) , 
5, 0.01073, 1, 0, 0.927168,0.000578378) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983701,0.00880095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884385,-0.0117996) , 
0, 0.000335083, 1, 0, 0.93045,-0.00253531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00180654,-0.00260101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00114303,0.0570055) , 
2, 0.318605, 1, 0, 0.0015631,0.000159867) , 
0, 0.00235152, 1, 0, 0.312091,-0.000741132) , 
2, 0.0238052, 1, 0, 0.503971,-0.000329496)    );
  // itree = 725
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672049,-0.0189873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.306824,0.00951098) , 
4, 0.00926377, 1, 0, 0.520138,-0.00109698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670977,-0.0247897) , 
6, 0.0220364, 1, 0, 0.537039,-0.00171931) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507249,0.0174769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614229,0.0691909) , 
6, 0.019721, 1, 0, 0.535131,0.0018708) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.439682,0.000798756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658606,-0.013568) , 
6, 0.0231937, 1, 0, 0.454183,-0.000214944) , 
3, 48.6608, 1, 0, 0.469729,0.000185623) , 
3, 37.8455, 1, 0, 0.499987,-0.000670721)    );
  // itree = 726
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.334398,0.0019129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476681,-0.0828868) , 
6, 0.0125145, 1, 0, 0.343657,-0.000120833) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.58804,0.036644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593994,0.0119816) , 
1, 1.61477, 1, 0, 0.591944,0.000917958) , 
6, 0.013143, 1, 0, 0.408133,0.000148923) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97198,-0.0300377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969604,-0.00922025) , 
4, 0.00854276, 1, 0, 0.96986,-0.00297188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00463261,-0.00086205) , 
0, 0.00233748, 1, 0, 0.617851,-0.00191118) , 
6, 0.0162354, 1, 0, 0.495923,-0.00071346)    );
  // itree = 727
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515616,0.00113634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655548,-0.0154751) , 
6, 0.0209843, 1, 0, 0.523194,-0.000173275) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627422,0.0309179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683698,0.00737407) , 
6, 0.0232547, 1, 0, 0.654423,0.00241275) , 
6, 0.0220335, 1, 0, 0.537714,0.000112862) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946951,-0.0374085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975913,-0.00530163) , 
4, 0.0065583, 1, 0, 0.967734,-0.00268871) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00328776,0.0341586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00204702,-0.00523702) , 
6, 0.00928602, 1, 0, 0.0025581,-5.89796e-05) , 
0, 0.00235174, 1, 0, 0.450734,-0.00128008) , 
3, 50.4587, 1, 0, 0.500262,-0.00048692)    );
  // itree = 728
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978427,0.00823971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00334124,-0.0200973) , 
0, 0.00192936, 1, 0, 0.662927,-0.00061921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.754853,0.0183562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0517741,-0.0124281) , 
4, 0.0107162, 1, 0, 0.265186,0.000154298) , 
4, 0.00928055, 1, 0, 0.477375,-0.000258357) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862334,-0.0430384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881247,-0.0114307) , 
6, 0.0231426, 1, 0, 0.872742,-0.00826914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292182,0.0132041) , 
2, 0.0952604, 1, 0, 0.60107,-0.00346248) , 
6, 0.0220369, 1, 0, 0.492517,-0.000650576)    );
  // itree = 729
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.452817,0.00745326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644318,-0.0155722) , 
6, 0.0179849, 1, 0, 0.488426,-0.000119109) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597211,0.00457838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665103,0.0331277) , 
1, 1.1456, 1, 0, 0.625537,0.00228501) , 
6, 0.0209826, 1, 0, 0.503815,0.00015072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640409,-0.0134372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673659,-0.000659544) , 
3, 34.9555, 1, 0, 0.660393,-0.00185622) , 
6, 0.0231932, 1, 0, 0.513932,2.1036e-05)    );
  // itree = 730
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889384,-0.00151765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551609,0.0156978) , 
2, 0.0362316, 1, 0, 0.797507,0.000434384) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.98221e-05,-0.00249581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0169109,-0.00908921) , 
6, 0.0131597, 1, 0, 0.00572788,-0.000270439) , 
2, 0.0952032, 1, 0, 0.460722,0.000134585) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923842,0.0877684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946915,-0.0201084) , 
2, 0.0113206, 1, 0, 0.935452,7.30774e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550963,-0.0056533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576264,-0.0195046) , 
1, 1.17065, 1, 0, 0.560263,-0.00277013) , 
2, 0.0237994, 1, 0, 0.642571,-0.00214639) , 
6, 0.0197202, 1, 0, 0.503404,-0.000400788)    );
  // itree = 731
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.302265,0.135844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65609,0.00496998) , 
5, 0.0025467, 1, 0, 0.589799,0.000456315) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750349,-0.0125905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29302,0.00571046) , 
5, 0.0103415, 1, 0, 0.491363,-0.000676572) , 
5, 0.00660016, 1, 0, 0.517775,-0.000372599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177189,0.0202517) , 
3, 138.759, 1, 0, 0.497705,-0.000259614)    );
  // itree = 732
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934959,-0.0230232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911309,0.00922542) , 
3, 11.3722, 1, 0, 0.915198,-0.0003483) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726484,0.0183977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63254,0.00166789) , 
5, 0.00928727, 1, 0, 0.669955,0.00104051) , 
2, 0.0226469, 1, 0, 0.789062,0.000366006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.163847,-0.00607828) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130976) , 
3, 75.7142, 1, 0, 0,-6.86565e-05) , 
0, 0.00705456, 1, 0, 0.0215304,-0.000586032) , 
2, 0.119004, 1, 0, 0.499397,6.70876e-06)    );
  // itree = 733
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948739,0.0192629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132902) , 
0, 0.00466134, 1, 0, 0.535811,0.000964537) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668239,0.0105866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447049,-0.0167006) , 
5, 0.00829684, 1, 0, 0.541003,-0.00135484) , 
3, 18.0191, 1, 0, 0.537201,0.000343577) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971417,-0.00801154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737578,-0.0253636) , 
0, 0.00200123, 1, 0, 0.936374,-0.0030643) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.40534e-05,0.00255248) , 
4, 0.0104386, 1, 0, 5.23015e-05,-5.86969e-05) , 
0, 0.00470075, 1, 0, 0.487501,-0.00162341) , 
3, 25.2289, 1, 0, 0.503236,-0.00100069)    );
  // itree = 734
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793879,0.00865848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000261,-0.0123121) , 
2, 0.0952265, 1, 0, 0.44286,0.000111454) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917509,-0.00999922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131041) , 
0, 0.0046898, 1, 0, 0.27451,-0.000793467) , 
3, 75.6882, 1, 0, 0.400728,-0.000115013) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990775,0.0278947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926628,-0.0217038) , 
4, 0.0106718, 1, 0, 0.962676,-0.00474932) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495658,-0.0158981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.820662,0.030715) , 
4, 0.0102222, 1, 0, 0.732795,0.00192466) , 
0, 0.00188487, 1, 0, 0.851116,-0.00151046) , 
7, 8.67921e-05, 1, 0, 0.496249,-0.000410969)    );
  // itree = 735
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.308928,-0.0128111) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931337,0.033723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.60359e-05,-0.00695892) , 
0, 0.00470349, 1, 0, 0.158314,0.000110613) , 
5, 0.00228181, 1, 0, 0.169378,1.88515e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792462,0.000248868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917435,-0.0101555) , 
7, 0.00012487, 1, 0, 0.812788,-0.000445666) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871187,0.0130803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906569,-0.211375) , 
7, 3.31402e-05, 1, 0, 0.889098,-0.00675741) , 
1, 1.88841, 1, 0, 0.823396,-0.00132303) , 
7, 2.53286e-05, 1, 0, 0.502287,-0.000664197)    );
  // itree = 736
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.26652,-0.0240436) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864295,-0.00653019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84633,0.0305399) , 
3, 24.8017, 1, 0, 0.852435,0.000645722) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499514,-0.00924694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0312926,0.000626716) , 
2, 0.112209, 1, 0, 0.125956,-0.00047861) , 
2, 0.0713981, 1, 0, 0.503321,0.000105417) , 
5, 0.00229078, 1, 0, 0.493003,-6.97084e-05)    );
  // itree = 737
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.385084,-0.000147828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575706,-0.0352219) , 
6, 0.0142459, 1, 0, 0.409748,-0.00045486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838772,0.0813405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.274798,0.0572867) , 
2, 0.047539, 1, 0, 0.582764,0.00275368) , 
6, 0.0157456, 1, 0, 0.433836,-8.14165e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.178803,-0.00615275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862212,-0.074853) , 
4, 0.00884025, 1, 0, 0.403894,-0.00552918) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684874,0.00460511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7207,-0.0162487) , 
6, 0.0236909, 1, 0, 0.689058,-0.000167336) , 
4, 0.0092849, 1, 0, 0.615852,-0.0015438) , 
6, 0.0174022, 1, 0, 0.499488,-0.000562038)    );
  // itree = 738
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972419,-0.0274906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739827,-0.0995786) , 
5, 0.010519, 1, 0, 0.941893,-0.00365585) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902205,0.0540709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904213,0.0818646) , 
6, 0.0174357, 1, 0, 0.90275,0.000882175) , 
3, 47.5319, 1, 0, 0.926881,-0.00191539) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.291087,-0.000741558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560575,-0.0159502) , 
7, 7.31265e-05, 1, 0, 0.334751,-0.00123259) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961106,0.0118961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00101907,-0.0102158) , 
0, 0.0023449, 1, 0, 0.287448,0.000280583) , 
4, 0.00928055, 1, 0, 0.30505,-0.000282484) , 
2, 0.0238052, 1, 0, 0.497553,-0.000787988)    );
  // itree = 739
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522516,-0.00777828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686693,-0.0803854) , 
4, 0.00524162, 1, 0, 0.551766,-0.00126783) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901538,0.0392248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334583,-0.00336762) , 
2, 0.0238008, 1, 0, 0.479012,-3.73e-05) , 
4, 0.00579437, 1, 0, 0.495202,-0.000311122) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671131,-0.00687394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626417,-0.0144683) , 
3, 48.5379, 1, 0, 0.649737,-0.00326962) , 
6, 0.0231934, 1, 0, 0.505149,-0.000501557)    );
  // itree = 740
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595521,-0.00387583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489951,-0.0217962) , 
3, 49.6578, 1, 0, 0.551828,-0.00105756) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97471,0.00973136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00040751,-0.00899144) , 
0, 0.00235174, 1, 0, 0.445883,0.000299501) , 
4, 0.00580162, 1, 0, 0.472712,-4.41447e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927195,-0.0136118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792981,-0.0307393) , 
2, 0.058867, 1, 0, 0.890618,-0.004675) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.255153,0.00572392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358627,0.036634) , 
3, 63.0755, 1, 0, 0.300866,0.00237354) , 
2, 0.0951974, 1, 0, 0.638314,-0.00165954) , 
6, 0.0208745, 1, 0, 0.501232,-0.000322347)    );
  // itree = 741
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680763,-0.0134782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158338,0.0109003) , 
5, 0.00769654, 1, 0, 0.422646,-0.000426542) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.717913,0.0533448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494034,0.0168696) , 
4, 0.00926497, 1, 0, 0.609467,0.00187653) , 
6, 0.0168967, 1, 0, 0.457937,8.51492e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94224,-0.0823358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871185,0.00795567) , 
2, 0.0170582, 1, 0, 0.885913,-0.000556962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122846,-0.0122043) , 
2, 0.119039, 1, 0, 0.650703,-0.00185647) , 
6, 0.0197143, 1, 0, 0.503731,-0.000434544)    );
  // itree = 742
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530862,-0.0103444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522071,2.43112e-05) , 
3, 16.0415, 1, 0, 0.524074,-0.000283172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388984,-0.0150311) , 
3, 112.329, 1, 0, 0.517322,-0.00042618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195612,0.0640546) , 
3, 138.759, 1, 0, 0.500076,-0.000259855)    );
  // itree = 743
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889686,0.00943036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864694,-0.0365886) , 
3, 46.8011, 1, 0, 0.879695,-0.000869681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904107,0.0343753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915331,-0.0521233) , 
1, 1.15952, 1, 0, 0.909333,-0.00489862) , 
6, 0.0197376, 1, 0, 0.885613,-0.0016741) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.201644,-0.00214241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920137,0.0153357) , 
7, 8.52942e-05, 1, 0, 0.493942,0.000919668) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00457713,-0.0116739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000290859,0.0435952) , 
0, 0.018805, 1, 0, 0.00150929,-0.000467512) , 
2, 0.155269, 1, 0, 0.204589,0.000104563) , 
2, 0.0475987, 1, 0, 0.50168,-0.000671364)    );
  // itree = 744
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.338962,-0.0118538) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880007,0.043834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0310942,-0.00344401) , 
2, 0.0475958, 1, 0, 0.416881,0.000290383) , 
4, 0.00232766, 1, 0, 0.412292,0.000154478) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643761,-0.0124648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644272,-0.0245586) , 
6, 0.0224211, 1, 0, 0.64388,-0.00397051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652882,0.0209316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548488,-0.00345854) , 
1, 1.13473, 1, 0, 0.575226,0.000230003) , 
3, 50.1882, 1, 0, 0.613739,-0.00212635) , 
6, 0.0162368, 1, 0, 0.496984,-0.000804425)    );
  // itree = 745
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874095,-0.0245546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330692,0.00280941) , 
2, 0.0396583, 1, 0, 0.687102,-0.000987374) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85387,-0.00830226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829977,-0.0271427) , 
1, 1.18112, 1, 0, 0.845128,-0.00390085) , 
6, 0.0197208, 1, 0, 0.727998,-0.00174135) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00603298,0.0572232) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00107738,0.00483359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000135812,-0.0100769) , 
4, 0.0104397, 1, 0, 0.000541286,-0.000126037) , 
2, 0.261793, 1, 0, 0.00217366,0.000376075) , 
2, 0.166595, 1, 0, 0.497665,-0.00106941)    );
  // itree = 746
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.337908,-0.0162383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417752,-0.00786604) , 
4, 0.00232777, 1, 0, 0.413195,-0.000530927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609829,-0.0219989) , 
6, 0.0165653, 1, 0, 0.426368,-0.000954176) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68011,-0.00708159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956139,0.0318542) , 
5, 0.0100832, 1, 0, 0.808742,0.00130601) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.11624,-0.0175299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72573,0.0363912) , 
6, 0.0236909, 1, 0, 0.277969,-0.000911015) , 
5, 0.0117285, 1, 0, 0.629892,0.000558956) , 
6, 0.0173962, 1, 0, 0.498046,-0.000421273)    );
  // itree = 747
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.521275,-0.00885418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545551,0.0307779) , 
3, 15.425, 1, 0, 0.534535,0.000171691) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933195,-0.0149132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131193) , 
0, 0.00469535, 1, 0, 0.532443,-0.00178827) , 
3, 35.9917, 1, 0, 0.533657,-0.000651146) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97569,0.0836442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964839,0.00067441) , 
3, 92.36, 1, 0, 0.969393,0.00116106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00262579,-0.00296558) , 
0, 0.00234768, 1, 0, 0.389996,0.000373122) , 
3, 75.5849, 1, 0, 0.497565,-0.000393817)    );
  // itree = 748
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941612,-0.040051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.322186,0.0126261) , 
2, 0.0236947, 1, 0, 0.554877,-0.00191795) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243776,-0.00723058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814319,0.0156132) , 
7, 3.05615e-05, 1, 0, 0.538079,0.000693153) , 
3, 7.19152, 1, 0, 0.54142,0.000173811) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.095199,0.075211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136092,-0.00770622) , 
6, 0.00464749, 1, 0, 0.126328,0.000230074) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815054,-0.0299674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793702,-0.00813899) , 
3, 59.2551, 1, 0, 0.801914,-0.00315896) , 
7, 2.23526e-05, 1, 0, 0.463615,-0.00146191) , 
3, 37.7559, 1, 0, 0.498304,-0.000732636)    );
  // itree = 749
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.278194,-0.0073339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512904,0.0417454) , 
6, 0.0102256, 1, 0, 0.323963,5.30357e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60496,-0.00534553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560251,-0.0457264) , 
1, 1.80021, 1, 0, 0.597301,-0.00107757) , 
6, 0.0119297, 1, 0, 0.47371,-0.000566361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671763,-0.033835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613264,0.0129477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631172,-0.0117212) , 
4, 0.011601, 1, 0, 0.621529,-0.000122417) , 
6, 0.0217038, 1, 0, 0.63328,-0.00304731) , 
6, 0.0208745, 1, 0, 0.50155,-0.000999207)    );
  // itree = 750
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498967,0.00185913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659198,0.0476316) , 
6, 0.0209836, 1, 0, 0.507952,0.000371565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145918,-0.0163028) , 
3, 138.437, 1, 0, 0.48616,0.000166618) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638453,0.00460026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566635,-0.0371211) , 
6, 0.0226114, 1, 0, 0.602452,-0.00819048) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685571,-0.00613924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663296,0.00980959) , 
6, 0.0236601, 1, 0, 0.673271,0.000392966) , 
6, 0.0231383, 1, 0, 0.641131,-0.00350249) , 
6, 0.0220339, 1, 0, 0.504232,-0.000261264)    );
  // itree = 751
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544477,0.00739653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.363447,-0.013074) , 
3, 74.4882, 1, 0, 0.50138,-8.54282e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700088,-0.00438588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711048,-0.0424571) , 
3, 37.083, 1, 0, 0.705496,-0.00283648) , 
4, 0.00541647, 1, 0, 0.608761,-0.00153269) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.148922,-0.00745169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735857,0.0204214) , 
6, 0.0173961, 1, 0, 0.462591,0.000827169) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.281454,-0.00356829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715398,-0.0132567) , 
6, 0.0208819, 1, 0, 0.383354,-0.000799835) , 
3, 50.4597, 1, 0, 0.425888,7.35379e-05) , 
4, 0.00812137, 1, 0, 0.498317,-0.00056263)    );
  // itree = 752
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.478923,-0.00236194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679097,0.00747068) , 
6, 0.0198792, 1, 0, 0.513146,6.68405e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209893,-0.0119531) , 
3, 126.146, 1, 0, 0.489673,-0.000100852) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622604,-0.0469218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624603,-0.00392912) , 
1, 1.06243, 1, 0, 0.623834,-0.00287036) , 
6, 0.0231935, 1, 0, 0.498456,-0.000282152)    );
  // itree = 753
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971025,0.076601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735338,0.034037) , 
2, 0.0248093, 1, 0, 0.936363,0.00117809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0105102,-0.00802454) , 
2, 0.0476045, 1, 0, 0.594852,0.000602839) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0194051,-0.0295724) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784521,0.0227165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465166,-0.00568263) , 
4, 0.00860913, 1, 0, 0.528802,-0.000204349) , 
4, 0.00695368, 1, 0, 0.455493,-0.000543824) , 
5, 0.00693285, 1, 0, 0.496006,-0.000210479)    );
  // itree = 754
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968011,0.011223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000875026,-0.00582984) , 
0, 0.00235152, 1, 0, 0.530507,0.000491277) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435581,-0.00713043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637263,-0.0267503) , 
6, 0.0209839, 1, 0, 0.446571,-0.000767727) , 
3, 37.8432, 1, 0, 0.484277,-0.000202155) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608535,0.0234074) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648715,0.0166098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604972,-0.0064958) , 
3, 60.9818, 1, 0, 0.63293,0.000920615) , 
1, 1.06339, 1, 0, 0.627382,0.00166319) , 
6, 0.0220342, 1, 0, 0.502171,3.10889e-05)    );
  // itree = 755
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667378,-0.00857429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221077,0.00559019) , 
5, 0.00816112, 1, 0, 0.44556,-0.000298025) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664979,0.0190373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613451,-0.00477063) , 
3, 63.0738, 1, 0, 0.648007,0.000893402) , 
6, 0.0188868, 1, 0, 0.480608,-9.17642e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606721,-0.044257) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656285,-0.00217523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587392,-0.0153756) , 
1, 1.10146, 1, 0, 0.623772,-0.00300511) , 
1, 1.06339, 1, 0, 0.62019,-0.00401868) , 
6, 0.0220342, 1, 0, 0.497377,-0.000563549)    );
  // itree = 756
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680646,-0.011862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640665,0.00426118) , 
3, 25.0877, 1, 0, 0.6541,-0.000232347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98838,0.030062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741215,-0.0252663) , 
2, 0.0478131, 1, 0, 0.861042,-0.00476901) , 
7, 0.000107108, 1, 0, 0.673547,-0.000658666) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996334,0.00602156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954871,0.0329038) , 
0, 0.000110862, 1, 0, 0.975036,0.0030249) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00202175,0.0422767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000592705,-0.0107031) , 
3, 37.8393, 1, 0, 0.00117317,-2.00866e-05) , 
0, 0.00235152, 1, 0, 0.175728,0.000525697) , 
5, 0.0112248, 1, 0, 0.496464,-0.000237367)    );
  // itree = 757
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985372,0.0148434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940193,-0.0139249) , 
0, 0.000553107, 1, 0, 0.97342,-0.000272326) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957588,0.0476106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9791,-0.00482914) , 
5, 0.0110699, 1, 0, 0.962838,0.00299165) , 
0, 0.00145202, 1, 0, 0.970216,0.000715926) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00325897,-0.00925382) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00155767,0.045431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00021795,-0.0113564) , 
4, 0.00809836, 1, 0, 0.000614047,0.000114668) , 
2, 0.142905, 1, 0, 0.00142176,-0.000221874) , 
0, 0.00235152, 1, 0, 0.502092,0.000262778)    );
  // itree = 758
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913302,-0.0223545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938402,8.00632e-05) , 
5, 0.00608927, 1, 0, 0.929227,-0.00119083) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985548,-0.0102773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918987,-0.0140918) , 
0, 0.000445283, 1, 0, 0.951416,-0.00456836) , 
5, 0.00983289, 1, 0, 0.935974,-0.00221798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013219) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130961) , 
3, 75.4813, 1, 0, 0,-6.01638e-05) , 
4, 0.00810893, 1, 0, 0,-0.000122173) , 
0, 0.00470348, 1, 0, 0.497723,-0.00123666)    );
  // itree = 759
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970421,-0.0113857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548795,0.0135435) , 
0, 0.00201403, 1, 0, 0.909998,-0.00106139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83326,-0.015087) , 
5, 0.0118828, 1, 0, 0.906177,-0.00147772) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130965) , 
2, 0.14287, 1, 0, 0,-0.000121959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000151675,0.0238731) , 
4, 0.018521, 1, 0, 3.89025e-05,-6.55661e-05) , 
0, 0.00705456, 1, 0, 0.502402,-0.000848462)    );
  // itree = 760
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.251122,0.000848711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479454,-0.0226976) , 
6, 0.00909339, 1, 0, 0.279334,-0.000212392) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891983,0.0282774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00291645,-0.00971952) , 
2, 0.0713981, 1, 0, 0.556862,0.000600081) , 
6, 0.0100508, 1, 0, 0.414952,0.000184634) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93003,-0.017879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44617,0.00707507) , 
2, 0.0475784, 1, 0, 0.634113,-0.000255085) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625514,-0.043541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536062,-0.00686015) , 
3, 37.23, 1, 0, 0.576071,-0.00520184) , 
1, 1.4049, 1, 0, 0.623291,-0.00117745) , 
6, 0.0162355, 1, 0, 0.50194,-0.000384081)    );
  // itree = 761
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993999,-0.0119088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748696,-0.0089119) , 
2, 0.070997, 1, 0, 0.966468,-0.00171774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00204702,-0.00578478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00104236,0.0287827) , 
4, 0.0104257, 1, 0, 0.00146985,-2.64139e-05) , 
0, 0.00235034, 1, 0, 0.518298,-0.000932243) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960867,-0.32416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849877,0.0774713) , 
4, 0.00572698, 1, 0, 0.887621,-0.000828312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9069,0.0145577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130995) , 
0, 0.00470348, 1, 0, 0.304712,0.000806503) , 
2, 0.023795, 1, 0, 0.446199,0.00040969) , 
3, 62.6691, 1, 0, 0.495325,-0.00050466)    );
  // itree = 762
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.362571,0.00392491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845832,-0.0129763) , 
7, 1.69262e-05, 1, 0, 0.578895,-0.000485006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602509,-0.0104993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526317,-0.0400177) , 
3, 43.7781, 1, 0, 0.568257,-0.00461972) , 
7, 4.01823e-05, 1, 0, 0.576834,-0.0012861) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723507,0.0492257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0074248,-0.00580288) , 
2, 0.0951916, 1, 0, 0.359076,0.00065962) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703783,0.00642269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720364,-0.0205063) , 
1, 1.16015, 1, 0, 0.711,-0.00156034) , 
6, 0.0197151, 1, 0, 0.464764,-7.06545e-06) , 
4, 0.0069622, 1, 0, 0.498211,-0.000388794)    );
  // itree = 763
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64145,-0.00687903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76748,-0.0508029) , 
5, 0.00826343, 1, 0, 0.651477,-0.00127848) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970228,0.00937037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000726373,-0.00655942) , 
0, 0.00235054, 1, 0, 0.328522,0.000294482) , 
5, 0.00867669, 1, 0, 0.481714,-0.000451644) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595945,-0.0171828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655657,0.0114173) , 
1, 1.06203, 1, 0, 0.636486,-0.000981245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619054,-0.0163823) , 
1, 1.1054, 1, 0, 0.630722,-0.00245631) , 
6, 0.0220359, 1, 0, 0.499466,-0.000690472)    );
  // itree = 764
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974916,-0.00714255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930972,-0.0204138) , 
4, 0.0109167, 1, 0, 0.970349,-0.00160828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930883,-0.0262172) , 
0, 0.00212506, 1, 0, 0.967558,-0.0021334) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00100743,-0.00872228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00092424,0.00142413) , 
4, 0.00928143, 1, 0, 0.00095581,-0.000190592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0037446,0.0130814) , 
3, 88.0165, 1, 0, 0.00165064,-1.25325e-05) , 
0, 0.00235152, 1, 0, 0.501392,-0.00110983)    );
  // itree = 765
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.542305,-0.00161762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519508,-0.043739) , 
3, 19.5373, 1, 0, 0.540164,-0.000522768) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4981,0.0316894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658859,0.0382878) , 
6, 0.0208745, 1, 0, 0.524669,0.00130167) , 
3, 21.5938, 1, 0, 0.531944,0.000445056) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899942,0.0707634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130993) , 
0, 0.00470348, 1, 0, 0.115628,0.000198959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895385,-0.0732937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.78745,-0.00332834) , 
6, 0.0137179, 1, 0, 0.806492,-0.00168615) , 
7, 2.23527e-05, 1, 0, 0.453611,-0.000723269) , 
3, 50.3897, 1, 0, 0.499049,-4.55673e-05)    );
  // itree = 766
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.293072,-0.0104984) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636017,0.024367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0624412,-0.0120654) , 
5, 0.00444949, 1, 0, 0.163388,1.23677e-05) , 
5, 0.00228181, 1, 0, 0.173527,-6.97199e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812979,-0.00286479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921269,-0.0456093) , 
1, 2.08275, 1, 0, 0.827194,-0.000989214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.370011,-0.0399289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947543,-0.00586189) , 
4, 0.0095051, 1, 0, 0.811169,-0.00340961) , 
5, 0.00922486, 1, 0, 0.819948,-0.00208364) , 
7, 2.53283e-05, 1, 0, 0.503529,-0.00109784)    );
  // itree = 767
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914437,-0.0138358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959027,0.0394295) , 
5, 0.0058699, 1, 0, 0.933509,-0.000241928) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886001,-0.0498684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943558,-0.00435135) , 
5, 0.00812328, 1, 0, 0.93677,-0.00251971) , 
6, 0.0151396, 1, 0, 0.935421,-0.00157786) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000674288,0.0902944) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130956) , 
4, 0.0081194, 1, 0, 0,-9.72095e-05) , 
7, -0.000347515, 1, 0, 0.000149049,5.44215e-05) , 
0, 0.00470108, 1, 0, 0.50255,-0.00082239)    );
  // itree = 768
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605901,0.00341845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729615,-0.0312605) , 
5, 0.00707606, 1, 0, 0.644974,-0.00116944) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530081,0.0141551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0352158) , 
4, 0.0115941, 1, 0, 0.348353,0.000281306) , 
5, 0.00874204, 1, 0, 0.484555,-0.000384845) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62125,-0.0138073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572867,-0.0271553) , 
3, 49.6935, 1, 0, 0.598823,-0.00727862) , 
6, 0.0231942, 1, 0, 0.491999,-0.000833954)    );
  // itree = 769
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939275,0.0190256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131676) , 
0, 0.00470068, 1, 0, 0.526852,0.000748896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927202,-0.0187829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131063) , 
0, 0.00470075, 1, 0, 0.427456,-0.0017962) , 
3, 37.7349, 1, 0, 0.471902,-0.000658141) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.693209,-0.0399478) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738015,0.0111819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517398,-0.00912112) , 
5, 0.0116001, 1, 0, 0.605784,-0.00104406) , 
6, 0.0217032, 1, 0, 0.624917,-0.0037536) , 
6, 0.0208739, 1, 0, 0.498925,-0.0012048)    );
  // itree = 770
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954083,-0.08687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903452,0.0149359) , 
2, 0.00581578, 1, 0, 0.925553,-0.00046608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885487,-0.081211) , 
2, 0.020377, 1, 0, 0.921676,-0.000960806) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88098,0.0124953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896612,-0.00460337) , 
4, 0.0111522, 1, 0, 0.884473,0.00132804) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131001) , 
6, 0.0162387, 1, 0, 0,-7.64624e-05) , 
0, 0.00470348, 1, 0, 0.315156,0.00042399) , 
2, 0.0238023, 1, 0, 0.504759,-8.90809e-06)    );
  // itree = 771
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684405,0.0034527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750054,0.0239686) , 
5, 0.0104501, 1, 0, 0.69242,0.000688314) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0483574,-0.0298848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.225768,0.0298315) , 
4, 0.0116146, 1, 0, 0.143207,-0.000526435) , 
5, 0.0115531, 1, 0, 0.533565,0.000336958) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498148,0.0309523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3397,-0.00687592) , 
3, 72.667, 1, 0, 0.369329,-0.000160782) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638671,0.00548413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561034,-0.0215517) , 
1, 1.12625, 1, 0, 0.605845,-0.00208202) , 
6, 0.0208755, 1, 0, 0.411049,-0.000499677) , 
3, 63.0755, 1, 0, 0.492398,5.5842e-05)    );
  // itree = 772
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6193,-0.00631877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793935,0.0135882) , 
6, 0.0154443, 1, 0, 0.697232,0.000415381) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850267,-0.0263912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131355) , 
0, 0.00705523, 1, 0, 0.0705171,-0.000912337) , 
5, 0.0112381, 1, 0, 0.493134,-1.70074e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687657,0.0535239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614548,0.0117699) , 
3, 49.6771, 1, 0, 0.653039,0.00247488) , 
6, 0.0231934, 1, 0, 0.503289,0.00014125)    );
  // itree = 773
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888674,0.0131577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840156,-0.0176633) , 
3, 48.3296, 1, 0, 0.869699,-0.000211868) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491893,-0.0104347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814717,-0.0254533) , 
6, 0.0208853, 1, 0, 0.58145,-0.00319769) , 
2, 0.058867, 1, 0, 0.822518,-0.000700594) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000498547,-0.0117137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00304542,0.0107758) , 
3, 25.3344, 1, 0, 0.00234172,-8.3619e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59369,0.0762543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522416,0.00563221) , 
1, 1.1212, 1, 0, 0.55785,0.00630109) , 
7, 8.94586e-05, 1, 0, 0.0687644,0.000679808) , 
2, 0.0951974, 1, 0, 0.50036,-0.000110603)    );
  // itree = 774
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520277,-0.00621647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522572,-0.0554792) , 
3, 45.5863, 1, 0, 0.520445,-0.000988456) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61842,-0.0214888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650742,-0.00249746) , 
6, 0.0232487, 1, 0, 0.634619,-0.00546243) , 
6, 0.0220339, 1, 0, 0.53393,-0.00151687) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.38112,-0.0158641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.733943,0.0216474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0120957,-0.00738943) , 
2, 0.142763, 1, 0, 0.456036,0.000467204) , 
4, 0.00463562, 1, 0, 0.445371,4.44691e-05) , 
3, 50.3897, 1, 0, 0.495991,-0.000847985)    );
  // itree = 775
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517539,-0.00648971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432496,-6.09984e-05) , 
3, 37.7559, 1, 0, 0.471122,-0.000233995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658563,-0.0145567) , 
6, 0.0209862, 1, 0, 0.480948,-0.000450122) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663619,0.00403015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6711,0.0455716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62574,0.00634682) , 
3, 70.0734, 1, 0, 0.64628,0.00277216) , 
3, 37.7172, 1, 0, 0.653594,0.00184841) , 
6, 0.0220359, 1, 0, 0.501153,-0.000181125)    );
  // itree = 776
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552523,0.00432243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534469,-0.0251811) , 
3, 20.0811, 1, 0, 0.545905,-0.000566143) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981032,0.0248652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000544303,-0.0067291) , 
0, 0.00235174, 1, 0, 0.539207,0.00110942) , 
3, 32.4381, 1, 0, 0.542737,0.000226298) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0873973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928511,-0.0158788) , 
2, 0.0228588, 1, 0, 0.958688,-0.0033275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00319981,-0.000400161) , 
0, 0.00234977, 1, 0, 0.391831,-0.0013656) , 
3, 75.6871, 1, 0, 0.505297,-0.000168657)    );
  // itree = 777
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975158,0.0432997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512626,-0.00882025) , 
4, 0.0103566, 1, 0, 0.931676,0.000437051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848608,-0.00672551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.19232e-05,-0.00417097) , 
0, 0.00470304, 1, 0, 0.267962,-0.000743318) , 
2, 0.0238052, 1, 0, 0.481344,-0.000363833) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669557,0.0276849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629808,-0.00398313) , 
3, 20.7949, 1, 0, 0.647125,0.000390607) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702858,0.0281556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579836,0.0632373) , 
1, 1.0911, 1, 0, 0.644969,0.00320687) , 
3, 48.5379, 1, 0, 0.64615,0.00166439) , 
6, 0.0220363, 1, 0, 0.500867,-0.000123569)    );
  // itree = 778
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244577,-0.00560562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810933,-0.0129932) , 
7, 3.17148e-05, 1, 0, 0.457078,-0.000921801) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.162132,0.00484907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798179,0.0310418) , 
7, 2.84233e-05, 1, 0, 0.377982,0.000549413) , 
3, 25.1712, 1, 0, 0.402107,0.000100689) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998283,0.0274926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917918,-0.00313038) , 
2, 0.0713226, 1, 0, 0.973752,0.000493817) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920728,-0.0262396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334378,0.0101766) , 
2, 0.0952247, 1, 0, 0.738977,-0.0050061) , 
0, 0.00094469, 1, 0, 0.843634,-0.00255437) , 
7, 8.68798e-05, 1, 0, 0.496305,-0.00046576)    );
  // itree = 779
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.268296,-0.0187622) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.456053,-0.0106367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38807,0.0207963) , 
3, 25.2317, 1, 0, 0.409301,0.000241494) , 
5, 0.00231262, 1, 0, 0.401366,9.20872e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852591,0.00153892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826181,-0.0311132) , 
3, 31.0298, 1, 0, 0.84442,-0.00515944) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959617,-0.0114577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738422,0.0194662) , 
0, 0.0016756, 1, 0, 0.837817,0.000141838) , 
3, 46.5504, 1, 0, 0.841392,-0.00272872) , 
7, 8.53043e-05, 1, 0, 0.498105,-0.000528063)    );
  // itree = 780
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961323,-0.00390412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978426,0.0332873) , 
5, 0.00544859, 1, 0, 0.97152,0.000807342) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00163467,0.0220148) , 
3, 63.0041, 1, 0, 0.00057863,-8.49163e-05) , 
0, 0.00235152, 1, 0, 0.419909,0.000300433) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625637,-0.00503541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60076,-0.0273691) , 
1, 1.40484, 1, 0, 0.620632,-0.00333774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594367,0.0138638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631637,-0.01063) , 
6, 0.0216484, 1, 0, 0.606358,-0.000152382) , 
3, 25.0951, 1, 0, 0.61079,-0.00114147) , 
6, 0.0162368, 1, 0, 0.501576,-0.000316471)    );
  // itree = 781
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920537,-0.0057673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666776,0.0172658) , 
2, 0.0226702, 1, 0, 0.810956,0.000593961) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0925951,-0.0125292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000448693,0.00913967) , 
2, 0.172404, 1, 0, 0.0203918,-0.000354084) , 
2, 0.0952265, 1, 0, 0.478928,0.000195793) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917021,0.0877608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91532,0.0808664) , 
6, 0.0222, 1, 0, 0.915962,0.0029711) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.393875,-0.00185698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345218,0.0225854) , 
4, 0.0115854, 1, 0, 0.372599,0.000667644) , 
2, 0.07147, 1, 0, 0.626008,0.00174191) , 
6, 0.0208745, 1, 0, 0.504535,0.000464979)    );
  // itree = 782
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974091,-0.00407551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924738,-0.0227107) , 
4, 0.0108818, 1, 0, 0.969205,-0.00113328) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.475255,-0.0203211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881853,0.0283131) , 
4, 0.0110825, 1, 0, 0.688554,-0.00763671) , 
0, 0.00201422, 1, 0, 0.930438,-0.00203164) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131001) , 
2, 0.119063, 1, 0, 0,-0.000112301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000177815,0.0254708) , 
4, 0.0197028, 1, 0, 3.60016e-05,-6.57971e-05) , 
0, 0.00470068, 1, 0, 0.490866,-0.00110287)    );
  // itree = 783
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.521258,-0.0120588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.427478,0.0306174) , 
3, 62.9564, 1, 0, 0.4938,-0.000394994) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976023,0.0671283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394806,0.0606654) , 
2, 0.0237078, 1, 0, 0.72242,0.00180702) , 
5, 0.00520387, 1, 0, 0.582576,0.000460072) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7034,-0.0216759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803486,-0.0250804) , 
6, 0.0161988, 1, 0, 0.737229,-0.0032636) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.542752,0.00481655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.074695) , 
4, 0.0127336, 1, 0, 0.387429,0.000105762) , 
5, 0.00878144, 1, 0, 0.463576,-0.000627703) , 
5, 0.00682953, 1, 0, 0.497185,-0.000320481)    );
  // itree = 784
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.539683,0.00398232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828273,-0.0244946) , 
7, 3.88888e-05, 1, 0, 0.667979,-0.00277041) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738208,-0.016638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622949,0.00404673) , 
4, 0.00463755, 1, 0, 0.645791,-0.000491607) , 
3, 25.0937, 1, 0, 0.653365,-0.00126946) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981418,0.0203327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965981,-0.00732864) , 
5, 0.0114344, 1, 0, 0.977298,0.00120161) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000499098,-0.0146926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00139284,0.0203338) , 
2, 0.142875, 1, 0, 0.00110911,-0.000435766) , 
0, 0.00235174, 1, 0, 0.373874,0.000189477) , 
5, 0.00910521, 1, 0, 0.504824,-0.000494079)    );
  // itree = 785
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663466,0.0103734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962329,0.0337821) , 
7, 4.78292e-05, 1, 0, 0.824841,0.00170739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00925532,-0.0148124) , 
2, 0.119004, 1, 0, 0.547599,0.000761871) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0330635,-0.0149328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85776,0.0177656) , 
7, 3.69613e-06, 1, 0, 0.351684,0.000138835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937279,-0.0182037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131823) , 
0, 0.00469953, 1, 0, 0.594626,-0.00280429) , 
6, 0.0139179, 1, 0, 0.481912,-0.00143882) , 
3, 25.1948, 1, 0, 0.502198,-0.000759196)    );
  // itree = 786
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799619,0.00137161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867637,0.0337622) , 
6, 0.0149134, 1, 0, 0.816842,0.000551692) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000229809,0.00339837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0331297,-0.00659746) , 
6, 0.0124259, 1, 0, 0.00907379,-0.000251351) , 
2, 0.0714198, 1, 0, 0.431877,0.000168979) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951231,-0.00875947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914447,-0.0129007) , 
5, 0.0117943, 1, 0, 0.946508,-0.00212746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131055) , 
0, 0.00467623, 1, 0, 0.633402,-0.00146793) , 
6, 0.0173969, 1, 0, 0.503757,-0.000414874)    );
  // itree = 787
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.38966,0.00284895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615843,-0.0763926) , 
6, 0.0123691, 1, 0, 0.465988,-0.00188802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.118741,-0.00469625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845344,0.0182846) , 
7, 1.61328e-05, 1, 0, 0.390241,0.000300713) , 
3, 12.6005, 1, 0, 0.402485,-5.3085e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618426,-0.013863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651554,-0.0214642) , 
6, 0.0205434, 1, 0, 0.623486,-0.00394548) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770731,0.0194954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491313,-0.00988626) , 
5, 0.0115876, 1, 0, 0.614523,-3.21728e-05) , 
6, 0.0212615, 1, 0, 0.620108,-0.00247073) , 
6, 0.0162355, 1, 0, 0.4922,-0.00104976)    );
  // itree = 788
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961032,0.0324861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000299812,-0.0114014) , 
0, 0.00235152, 1, 0, 0.182156,4.87902e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793043,-0.0231211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809895,0.00314387) , 
7, 6.4633e-05, 1, 0, 0.79926,-0.00151317) , 
7, 2.84233e-05, 1, 0, 0.406663,-0.000519461) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951254,-0.00607403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598308,-0.0259193) , 
4, 0.0116063, 1, 0, 0.891724,-0.00237313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610763,-0.0187522) , 
5, 0.0118901, 1, 0, 0.845836,-0.00346813) , 
7, 8.68795e-05, 1, 0, 0.501875,-0.00115873)    );
  // itree = 789
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.329922,-0.00486804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860463,-0.00968539) , 
7, 5.3264e-05, 1, 0, 0.48111,-0.000632689) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906869,0.0862475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362866,0.00121544) , 
2, 0.0713479, 1, 0, 0.632676,0.00159356) , 
6, 0.02098, 1, 0, 0.498227,-0.00038127) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651084,-0.00668911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582926,-0.0297398) , 
6, 0.0239113, 1, 0, 0.624765,-0.004926) , 
6, 0.0231934, 1, 0, 0.507034,-0.000697578)    );
  // itree = 790
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609357,-0.0100644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743362,0.0204185) , 
5, 0.00733602, 1, 0, 0.640761,-0.000283688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743661,-0.0415879) , 
5, 0.00855879, 1, 0, 0.649208,-0.000753999) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766867,0.00461081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791494,0.0770741) , 
5, 0.0104631, 1, 0, 0.771713,0.00132674) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.130646,-0.00902702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739116,0.0108402) , 
6, 0.0231934, 1, 0, 0.219631,-0.000191839) , 
5, 0.0108108, 1, 0, 0.375498,0.000236896) , 
5, 0.00898864, 1, 0, 0.501321,-0.000218613)    );
  // itree = 791
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998802,0.0463105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795725,0.0144466) , 
2, 0.0468524, 1, 0, 0.976221,0.00140566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00199385,-0.0180657) , 
0, 0.00198082, 1, 0, 0.636144,0.000532542) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73024,-0.00885011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621108,-0.0238245) , 
2, 0.0589672, 1, 0, 0.699596,-0.00182235) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.847175,0.0162597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000551729,0.00223176) , 
0, 0.00235054, 1, 0, 0.101127,0.000636212) , 
2, 0.0952499, 1, 0, 0.362158,-0.000436126) , 
4, 0.00927569, 1, 0, 0.498092,4.44642e-05)    );
  // itree = 792
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995295,-0.00931404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799996,-0.00833143) , 
2, 0.0711526, 1, 0, 0.970931,-0.00126758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908943,-0.0269254) , 
0, 0.00212442, 1, 0, 0.96635,-0.00202564) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00339266,-0.00566713) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.14542e-05,-0.00600548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00258489,0.0135807) , 
3, 75.5597, 1, 0, 0.000842219,0.000110713) , 
2, 0.142896, 1, 0, 0.0015824,-7.85985e-05) , 
0, 0.00235152, 1, 0, 0.493558,-0.00107148)    );
  // itree = 793
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966111,0.0272084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676685,0.065582) , 
2, 0.0226702, 1, 0, 0.917374,0.00113714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00353186,-0.011107) , 
2, 0.0476132, 1, 0, 0.594493,0.00043226) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894184,0.0108686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810226,-0.0653777) , 
3, 46.468, 1, 0, 0.859446,-0.00151767) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549862,0.00636642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00264028,-0.00770658) , 
2, 0.155262, 1, 0, 0.242876,1.95341e-05) , 
2, 0.0475958, 1, 0, 0.462385,-0.000527735) , 
5, 0.0067747, 1, 0, 0.498265,-0.000267004)    );
  // itree = 794
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95899,0.0806861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929743,0.0856156) , 
6, 0.0162643, 1, 0, 0.952116,0.000859812) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659593,-0.021637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827306,-0.0147687) , 
4, 0.00463627, 1, 0, 0.813229,-0.00208534) , 
2, 0.00679525, 1, 0, 0.850315,-0.00129891) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00165261,0.0203902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567854,-0.00763179) , 
7, 6.30997e-05, 1, 0, 0.0807891,-0.000271939) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.352769,0.0364111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441376,0.00239422) , 
6, 0.0232498, 1, 0, 0.396295,0.00166634) , 
6, 0.0220358, 1, 0, 0.122491,-1.57463e-05) , 
2, 0.0714024, 1, 0, 0.497256,-0.000676463)    );
  // itree = 795
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564324,0.0109596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410511,-0.0183957) , 
4, 0.00540749, 1, 0, 0.518778,-0.000333988) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982455,0.0716414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592892,0.0374871) , 
2, 0.0234869, 1, 0, 0.788531,0.00186382) , 
7, 3.62037e-05, 1, 0, 0.619449,0.000486232) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970209,-0.00613256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114726,-0.0262739) , 
0, 0.00208397, 1, 0, 0.731367,-0.00235499) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669522,0.0251812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0701027) , 
4, 0.0124435, 1, 0, 0.179743,0.000155339) , 
4, 0.0111937, 1, 0, 0.42408,-0.000956589) , 
4, 0.00810792, 1, 0, 0.499139,-0.00040227)    );
  // itree = 796
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.236457,-0.00734414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151366,0.0756003) , 
3, 62.8697, 1, 0, 0.207138,0.000391404) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491026,-0.0162801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0899619,-0.00792443) , 
6, 0.00890953, 1, 0, 0.135723,-0.000258466) , 
6, 0.00813452, 1, 0, 0.168009,3.53291e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811708,-0.0176676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843855,-0.034571) , 
3, 56.7495, 1, 0, 0.816917,-0.0043351) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732194,-0.00342229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875713,0.0334265) , 
7, 0.000113205, 1, 0, 0.768126,0.000653834) , 
3, 74.4859, 1, 0, 0.806149,-0.00323399) , 
7, 2.55039e-05, 1, 0, 0.495781,-0.00164392)    );
  // itree = 797
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636463,-0.000616546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518251,0.0683581) , 
3, 72.494, 1, 0, 0.610627,0.000164689) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000460449,-0.0137191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130947) , 
4, 0.0092783, 1, 0, 0.000143534,-0.000116299) , 
2, 0.0476016, 1, 0, 0.148055,-4.82196e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76745,-0.00472981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887397,-0.0240785) , 
5, 0.00750385, 1, 0, 0.828898,-0.00282603) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506153,-0.0111479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972818,0.0215664) , 
4, 0.0105538, 1, 0, 0.780374,0.000900437) , 
5, 0.0101035, 1, 0, 0.812947,-0.00160106) , 
7, 2.23526e-05, 1, 0, 0.496338,-0.000861625)    );
  // itree = 798
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248214,0.000235957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810355,0.0358588) , 
7, 3.20872e-05, 1, 0, 0.545094,0.00119907) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66803,-0.0153061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301665,0.00868501) , 
4, 0.0104252, 1, 0, 0.536872,-0.000628146) , 
3, 12.0165, 1, 0, 0.539024,-0.000149771) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994209,-0.0177416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849165,-0.0196631) , 
2, 0.023734, 1, 0, 0.918555,-0.00492355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000175741,0.0240735) , 
4, 0.0150506, 1, 0, 7.75217e-05,-1.46295e-05) , 
0, 0.00470348, 1, 0, 0.442377,-0.00237856) , 
3, 50.4604, 1, 0, 0.497597,-0.00110513)    );
  // itree = 799
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969297,-0.0126249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00071612,-0.00390576) , 
0, 0.00235152, 1, 0, 0.536639,-0.00175617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498437,0.00360332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645576,-0.00972542) , 
6, 0.0197191, 1, 0, 0.533881,-0.000310367) , 
3, 21.5961, 1, 0, 0.534871,-0.000829341) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997671,0.0154463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880137,0.0239439) , 
0, 0.000221977, 1, 0, 0.934899,0.00185103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131366) , 
0, 0.00469231, 1, 0, 0.389065,0.000697476) , 
3, 75.5842, 1, 0, 0.498069,-0.000443963)    );
  // itree = 800
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560913,-0.0690268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62289,0.0706085) , 
3, 5.91018, 1, 0, 0.591615,-0.008334) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6098,0.00324917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536786,-0.0217415) , 
3, 71.5324, 1, 0, 0.590748,-0.000757533) , 
3, 12.415, 1, 0, 0.590904,-0.00211904) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.431797,0.00370832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707879,-0.0109855) , 
6, 0.0208739, 1, 0, 0.491216,-0.000279756) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975972,0.0182817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0018673,-0.00200607) , 
0, 0.00234264, 1, 0, 0.423617,0.000752225) , 
3, 37.7944, 1, 0, 0.453104,0.00030208) , 
5, 0.00693285, 1, 0, 0.492901,-0.000397158)    );
  // itree = 801
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.41153,-0.00800118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17564,-0.00570262) , 
4, 0.00348006, 1, 0, 0.213012,-9.14448e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817935,-0.0100324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809709,-0.0362516) , 
3, 26.8835, 1, 0, 0.815751,-0.00406146) , 
7, 2.88483e-05, 1, 0, 0.526345,-0.00215525) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.316951,-0.0196913) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709461,0.00442966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0867155) , 
4, 0.0124278, 1, 0, 0.484879,2.39467e-05) , 
4, 0.00348383, 1, 0, 0.470075,-0.000171194) , 
3, 37.6403, 1, 0, 0.495795,-0.00107806)    );
  // itree = 802
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980306,0.0305123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00274434,-0.0112047) , 
0, 0.00195032, 1, 0, 0.675966,0.000623352) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.548615,-0.0110597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0668125,0.00537155) , 
2, 0.0714373, 1, 0, 0.206831,-0.000261029) , 
4, 0.00928055, 1, 0, 0.472048,0.00023894) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883269,-0.00353554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803109,-0.0237726) , 
2, 0.0679408, 1, 0, 0.857911,-0.0026019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131414,0.00286547) , 
2, 0.118946, 1, 0, 0.612242,-0.00148368) , 
6, 0.0208739, 1, 0, 0.496993,-6.75629e-05)    );
  // itree = 803
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.249324,-0.0248278) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695023,0.0100058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.25556e-05,-0.0131092) , 
4, 0.0104212, 1, 0, 0.485604,0.000303322) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919239,0.0494666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407216,-0.0156696) , 
2, 0.0713981, 1, 0, 0.657071,-0.00211642) , 
6, 0.0208739, 1, 0, 0.515355,-0.000116523) , 
5, 0.00228408, 1, 0, 0.50365,-0.000300279)    );
  // itree = 804
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.348621,-0.00967345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24358,0.00693823) , 
3, 62.8252, 1, 0, 0.314914,-0.000104637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932457,0.0788348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334275,0.0389611) , 
2, 0.0237994, 1, 0, 0.568699,0.000967856) , 
6, 0.0115978, 1, 0, 0.410272,0.000298344) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544592,-0.0372741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636737,-0.00786119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617927,0.00391375) , 
1, 1.27753, 1, 0, 0.63029,-0.000725477) , 
6, 0.0170109, 1, 0, 0.621034,-0.00124686) , 
6, 0.0162376, 1, 0, 0.497755,-0.000343036)    );
  // itree = 805
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663192,-0.0205025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397372,0.00700125) , 
4, 0.00810864, 1, 0, 0.518384,-0.000587166) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663345,-0.00132652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647169,-0.0246885) , 
3, 37.8205, 1, 0, 0.655815,-0.00397175) , 
6, 0.0220341, 1, 0, 0.534378,-0.000981052) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.234831,-0.00378916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.511821,0.0160763) , 
6, 0.0168043, 1, 0, 0.312602,0.000342389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.569725,0.0432688) , 
6, 0.02204, 1, 0, 0.34793,0.000806596) , 
3, 88.3003, 1, 0, 0.498566,-0.000637694)    );
  // itree = 806
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951141,0.000160786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988002,0.0872687) , 
8, 0.0154574, 1, 0, 0.961808,0.000311724) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93521,-0.22902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895195,-0.0191573) , 
2, 0.00637418, 1, 0, 0.900911,-0.00221132) , 
2, 0.00453404, 1, 0, 0.920394,-0.00140413) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78357,-0.00492253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648133,0.0203229) , 
2, 0.0367868, 1, 0, 0.683524,0.00128662) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.191163,-0.00503171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000155111,0.0243059) , 
0, 0.00705456, 1, 0, 0.0247329,-0.000227686) , 
2, 0.114521, 1, 0, 0.311759,0.000432075) , 
2, 0.0238066, 1, 0, 0.502322,-0.000142837)    );
  // itree = 807
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.266153,-0.0248855) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.30573,-0.0153193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597178,0.00913073) , 
6, 0.0115958, 1, 0, 0.436816,1.2248e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645958,-0.00473597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627773,-0.0250721) , 
1, 1.33189, 1, 0, 0.642655,-0.00175106) , 
6, 0.0173951, 1, 0, 0.511541,-0.00062788) , 
5, 0.00235576, 1, 0, 0.500511,-0.000845039)    );
  // itree = 808
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784961,0.0117498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.580577,-0.012803) , 
5, 0.00581186, 1, 0, 0.642221,-0.000999022) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.54526,0.0164609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000420595,-0.00893912) , 
2, 0.14286, 1, 0, 0.270252,0.000248192) , 
4, 0.0092821, 1, 0, 0.472769,-0.000430847) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853995,-0.0308144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872943,-0.00963159) , 
6, 0.0231426, 1, 0, 0.864127,-0.0059183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.312356,0.00182376) , 
2, 0.0952595, 1, 0, 0.622632,-0.00317786) , 
6, 0.0220335, 1, 0, 0.49092,-0.000763555)    );
  // itree = 809
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.5193,0.00825481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503915,-0.0199383) , 
3, 24.027, 1, 0, 0.511915,-0.000247127) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647319,0.038566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.661489,-0.0148103) , 
1, 1.08918, 1, 0, 0.656483,-0.00320883) , 
6, 0.0208739, 1, 0, 0.535595,-0.00073225) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954276,-2.80605e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979866,0.0361789) , 
5, 0.00983677, 1, 0, 0.962966,0.000954096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00287228,-0.0103533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000946501,0.0395771) , 
2, 0.214523, 1, 0, 0.00180257,-0.000211796) , 
0, 0.00235174, 1, 0, 0.450376,0.000332324) , 
3, 50.4575, 1, 0, 0.499209,-0.000277712)    );
  // itree = 810
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.341215,-0.00373697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573491,-0.0255819) , 
6, 0.0127814, 1, 0, 0.385707,-0.000583566) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640031,0.0268955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581323,-0.00323215) , 
3, 62.0821, 1, 0, 0.62175,0.000890365) , 
6, 0.0149109, 1, 0, 0.473363,-3.62152e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.890455,-0.0241882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907221,0.00807249) , 
6, 0.0231949, 1, 0, 0.896135,-0.00378261) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.546504,0.0147269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284412,-0.00321393) , 
5, 0.0115855, 1, 0, 0.387973,0.000599753) , 
2, 0.0713959, 1, 0, 0.63193,-0.00150412) , 
6, 0.0208745, 1, 0, 0.501302,-0.000294852)    );
  // itree = 811
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995506,0.0112173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947713,-0.0139433) , 
0, 0.000303484, 1, 0, 0.973181,-0.000984335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928774,-0.0174672) , 
0, 0.00212442, 1, 0, 0.969994,-0.00158457) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00438286,0.023903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138251) , 
5, 0.00979241, 1, 0, 0.00155254,0.000170597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00247913,-0.00901063) , 
6, 0.0173964, 1, 0, 0.00179392,-3.68864e-05) , 
0, 0.00235054, 1, 0, 0.502622,-0.000837467)    );
  // itree = 812
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977535,-0.000464518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918329,-0.0300592) , 
4, 0.0109423, 1, 0, 0.971896,-0.00106579) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.401963,-0.0301034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931391,-0.00488865) , 
7, 0.000119857, 1, 0, 0.698609,-0.00974416) , 
0, 0.00201502, 1, 0, 0.933556,-0.00228329) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131654) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130973) , 
3, 75.7555, 1, 0, 0,-5.21738e-05) , 
2, 0.119126, 1, 0, 0,-8.65013e-05) , 
0, 0.00470348, 1, 0, 0.503694,-0.00127176)    );
  // itree = 813
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744743,0.0415728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564126,-0.0214421) , 
3, 81.8709, 1, 0, 0.713463,0.000184243) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995437,-0.0136942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795633,-0.0342122) , 
0, 0.00202751, 1, 0, 0.972527,-0.00183737) , 
7, 3.27494e-05, 1, 0, 0.883395,-0.00114183) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164051,0.00190435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.11243,-0.00796076) , 
3, 113.17, 1, 0, 0.156757,-2.12809e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.433105,0.0458852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489071,0.00569519) , 
4, 0.0115936, 1, 0, 0.462105,0.00213177) , 
6, 0.0220362, 1, 0, 0.201029,0.000290884) , 
2, 0.0475987, 1, 0, 0.497083,-0.000330718)    );
  // itree = 814
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594389,-0.00513226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613173,-0.0884749) , 
5, 0.00593589, 1, 0, 0.596993,-0.000675629) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613271,-0.0905646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565073,-0.0113023) , 
3, 43.5188, 1, 0, 0.592211,-0.00408659) , 
7, 3.99485e-05, 1, 0, 0.596041,-0.00135471) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902394,0.0736324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34978,0.00822387) , 
2, 0.0236956, 1, 0, 0.488289,0.000913561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.410675,-0.000409405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689203,-0.00907128) , 
6, 0.0220339, 1, 0, 0.453369,-0.000281293) , 
3, 12.6202, 1, 0, 0.458851,-9.37339e-05) , 
5, 0.00693612, 1, 0, 0.498467,-0.000457859)    );
  // itree = 815
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577567,0.00496611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449396,-0.021121) , 
3, 75.2877, 1, 0, 0.551161,-0.000342096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.391313,-0.0362449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903135,0.0220376) , 
5, 0.00608972, 1, 0, 0.681071,-0.00366196) , 
7, 3.33002e-05, 1, 0, 0.58679,-0.00125261) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4846,0.0232272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510145,-0.0110408) , 
3, 10.6711, 1, 0, 0.498677,-0.000626807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.493806,0.00994183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205422,-0.0069396) , 
3, 126.223, 1, 0, 0.457632,0.000334756) , 
3, 24.8933, 1, 0, 0.46977,5.03886e-05) , 
5, 0.00684088, 1, 0, 0.503551,-0.00032576)    );
  // itree = 816
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999531,0.0581006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863232,-0.0137947) , 
0, 3.19407e-05, 1, 0, 0.986818,-1.47106e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853382,-0.0296913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899198,-0.00622564) , 
6, 0.0151728, 1, 0, 0.881252,-0.00458306) , 
0, 0.000671405, 1, 0, 0.934441,-0.00228132) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131301) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013102) , 
6, 0.0150796, 1, 0, 0,-4.80118e-05) , 
4, 0.00811807, 1, 0, 0,-7.93236e-05) , 
0, 0.00470348, 1, 0, 0.496614,-0.00124959)    );
  // itree = 817
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939726,-0.00544224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902752,0.0979002) , 
3, 49.335, 1, 0, 0.92627,0.000742547) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000156562,0.0317516) , 
4, 0.0185442, 1, 0, 4.42248e-05,-3.68339e-05) , 
0, 0.00470108, 1, 0, 0.153834,9.25736e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812258,-0.00398268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808933,-0.0164802) , 
3, 5.37701, 1, 0, 0.810337,-0.00341286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852257,-0.0223865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800549,-0.00306004) , 
6, 0.0158448, 1, 0, 0.818456,-0.00117685) , 
3, 12.5496, 1, 0, 0.817103,-0.00154941) , 
7, 2.23527e-05, 1, 0, 0.505882,-0.000778951)    );
  // itree = 818
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.307548,0.00149765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557678,-0.0262095) , 
6, 0.0114793, 1, 0, 0.387741,-0.000548613) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975736,0.0363777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.001542,-0.00126044) , 
0, 0.00234769, 1, 0, 0.417909,0.000934374) , 
6, 0.0150685, 1, 0, 0.397589,-6.45254e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789517,-0.00825442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91394,0.0420686) , 
7, 0.000118286, 1, 0, 0.836991,-0.000245668) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.855122,-0.0258378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832295,0.000274153) , 
3, 76.3958, 1, 0, 0.845823,-0.00407215) , 
3, 35.6511, 1, 0, 0.841933,-0.00238667) , 
7, 8.53043e-05, 1, 0, 0.49612,-0.000579448)    );
  // itree = 819
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888801,-0.0109722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946557,0.0330363) , 
6, 0.00705397, 1, 0, 0.939864,0.000627083) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700766,-0.0960896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814888,-0.00497531) , 
4, 0.00958977, 1, 0, 0.787686,-0.00249805) , 
5, 0.00906145, 1, 0, 0.891149,-0.000373325) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663616,-0.00486316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96102,0.0385515) , 
6, 0.0175183, 1, 0, 0.893902,0.00268825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00243106,-0.0119557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000528826,0.0181739) , 
2, 0.155365, 1, 0, 0.00101996,-0.000164797) , 
0, 0.00234888, 1, 0, 0.198905,0.000467507) , 
2, 0.0476045, 1, 0, 0.498613,0.000103467)    );
  // itree = 820
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267204,-0.0273607) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91896,-0.0244233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298089,0.00178794) , 
2, 0.0238023, 1, 0, 0.498359,-0.000397034) , 
5, 0.00222881, 1, 0, 0.488648,-0.000569252) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653737,0.00507518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634765,-0.0307844) , 
6, 0.0239113, 1, 0, 0.64639,-0.00399727) , 
6, 0.0231932, 1, 0, 0.498843,-0.000790793)    );
  // itree = 821
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.255463,-0.0239913) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.398302,-0.000259436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602647,0.0193447) , 
6, 0.0149095, 1, 0, 0.440889,0.000274533) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645644,-0.00427098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591905,-0.0158317) , 
1, 1.3319, 1, 0, 0.635277,-0.00105979) , 
6, 0.0173969, 1, 0, 0.512791,-0.000219017) , 
5, 0.00224485, 1, 0, 0.502157,-0.000473101)    );
  // itree = 822
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685346,-0.00937451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366008,0.0184965) , 
5, 0.00873295, 1, 0, 0.531658,-2.25976e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.280174,-0.0113008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852972,-0.0177612) , 
7, 6.30911e-05, 1, 0, 0.41571,-0.00127353) , 
3, 50.3545, 1, 0, 0.481182,-0.000567169) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951253,0.0983431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863628,0.0280524) , 
2, 0.0272642, 1, 0, 0.89743,0.00249317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.285148,0.000512764) , 
2, 0.0952595, 1, 0, 0.61502,0.00137626) , 
6, 0.0220335, 1, 0, 0.497675,-0.000327683)    );
  // itree = 823
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.516834,-0.0163507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461257,0.00300513) , 
4, 0.00464501, 1, 0, 0.46992,3.94925e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605754,0.00295877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630488,-0.0169174) , 
1, 1.16014, 1, 0, 0.613616,-0.00151136) , 
6, 0.020988, 1, 0, 0.486013,-0.000165756) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64451,-0.0130898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641054,0.0482417) , 
3, 36.9287, 1, 0, 0.642499,0.00139676) , 
6, 0.0231946, 1, 0, 0.496177,-6.42703e-05)    );
  // itree = 824
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267495,-0.0195851) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.541872,-0.00335162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589977,-0.0135473) , 
6, 0.0208781, 1, 0, 0.550369,-0.00120771) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662059,0.00646579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000190763,-0.0151703) , 
2, 0.261777, 1, 0, 0.511851,0.000184668) , 
3, 12.6147, 1, 0, 0.518014,-3.81157e-05) , 
5, 0.00231625, 1, 0, 0.50757,-0.000174821)    );
  // itree = 825
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973784,-0.00816931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955363,-0.0332231) , 
4, 0.0115855, 1, 0, 0.972646,-0.00142727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408267,-0.0143477) , 
0, 0.00223802, 1, 0, 0.939232,-0.00189176) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130987) , 
4, 0.0079577, 1, 0, 0,-8.51447e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000146227,0.0282261) , 
4, 0.0185564, 1, 0, 3.57199e-05,-3.99552e-05) , 
0, 0.00470108, 1, 0, 0.491251,-0.00100848)    );
  // itree = 826
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231973,0.013782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492562,-0.0206635) , 
6, 0.00852191, 1, 0, 0.326895,-0.000425897) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627647,0.126962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531339,0.0276945) , 
3, 25.1849, 1, 0, 0.562272,0.00131947) , 
6, 0.0119289, 1, 0, 0.375299,-6.69735e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904802,-0.0288782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947937,-0.0103412) , 
5, 0.00818133, 1, 0, 0.938498,-0.00392631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131043) , 
0, 0.00469953, 1, 0, 0.609299,-0.0025801) , 
6, 0.0139179, 1, 0, 0.500243,-0.00140885)    );
  // itree = 827
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940208,-0.0126389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902116,-0.0169011) , 
5, 0.0114648, 1, 0, 0.93828,-0.00228313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894468,0.0138821) , 
4, 0.0117229, 1, 0, 0.935643,-0.00199819) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130955) , 
0, 0.0217707, 1, 0, 0,-8.39584e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000160055,0.021104) , 
2, 0.380819, 1, 0, 3.71652e-05,-4.15316e-05) , 
0, 0.00470348, 1, 0, 0.503579,-0.0010946)    );
  // itree = 828
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519912,0.0368106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643101,-0.032062) , 
5, 0.00498925, 1, 0, 0.580165,-0.0057501) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625627,0.015307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565337,-0.0162885) , 
3, 47.8857, 1, 0, 0.596759,-0.00112275) , 
3, 12.415, 1, 0, 0.593789,-0.00195106) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853578,-0.0105914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220024,0.00486864) , 
2, 0.04759, 1, 0, 0.444976,-3.83173e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94298,0.0239708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465826,-0.0132585) , 
2, 0.0711714, 1, 0, 0.690812,-0.00259163) , 
6, 0.0231936, 1, 0, 0.465769,-0.000254277) , 
5, 0.00693817, 1, 0, 0.503037,-0.000748231)    );
  // itree = 829
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.370062,0.00652009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865688,0.0160645) , 
7, 5.4078e-05, 1, 0, 0.511618,0.000552191) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508413,-0.0169425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396967,0.00249907) , 
3, 60.5528, 1, 0, 0.41813,-0.000270303) , 
3, 50.3545, 1, 0, 0.472268,0.000205996) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614793,-0.00996289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.734758,0.0161652) , 
1, 1.13365, 1, 0, 0.657136,-0.000629701) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621957,-0.0256694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541416,0.0171906) , 
4, 0.0116465, 1, 0, 0.592358,-0.00475816) , 
3, 50.4938, 1, 0, 0.627486,-0.00251939) , 
6, 0.0208775, 1, 0, 0.499268,-0.000268088)    );
  // itree = 830
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.427337,-0.000195426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622538,-0.0113175) , 
6, 0.0179813, 1, 0, 0.439889,-0.000108954) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67584,0.057038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548284,-0.00655633) , 
3, 72.4758, 1, 0, 0.642038,0.00129005) , 
6, 0.018883, 1, 0, 0.46396,5.76367e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609549,-0.00725861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625807,0.0112331) , 
3, 36.4404, 1, 0, 0.619319,0.000776309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643828,-0.0310781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599097,-0.0127777) , 
1, 1.11044, 1, 0, 0.609163,-0.00564363) , 
1, 1.08923, 1, 0, 0.612804,-0.00334214) , 
6, 0.0208745, 1, 0, 0.490392,-0.000546104)    );
  // itree = 831
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912509,0.0117948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707704,-0.0178507) , 
2, 0.0305655, 1, 0, 0.85267,-0.000697358) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00114896,-0.00838425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544643,0.0132213) , 
7, 6.293e-05, 1, 0, 0.0802831,0.000236018) , 
2, 0.0714068, 1, 0, 0.490839,-0.000260111) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566518,-0.0139308) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864853,0.0313671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381959,-0.00605319) , 
2, 0.0953004, 1, 0, 0.662322,0.000134145) , 
6, 0.0228071, 1, 0, 0.631749,-0.0016097) , 
6, 0.0220335, 1, 0, 0.50805,-0.000424945)    );
  // itree = 832
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873513,0.0259016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910768,-0.0267123) , 
6, 0.0178386, 1, 0, 0.877995,0.000545305) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93524,0.0886106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904899,0.00374979) , 
2, 0.0272042, 1, 0, 0.924766,0.00176297) , 
6, 0.0197208, 1, 0, 0.886982,0.000779273) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891897,-0.012544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700171,0.00197563) , 
0, 0.00134335, 1, 0, 0.786859,-0.00198364) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000361108,0.0644907) , 
2, 0.392379, 1, 0, 8.24207e-05,2.46198e-05) , 
0, 0.00470304, 1, 0, 0.200334,-0.000486526) , 
2, 0.0476132, 1, 0, 0.500345,6.6527e-05)    );
  // itree = 833
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998496,0.0674675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634176,0.0217561) , 
2, 0.0234869, 1, 0, 0.925452,0.00116492) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000173314,0.0382154) , 
4, 0.0162122, 1, 0, 6.26568e-05,-5.52567e-06) , 
0, 0.00470304, 1, 0, 0.378488,0.000473114) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611136,-0.00431405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620736,0.0212382) , 
6, 0.0238987, 1, 0, 0.611664,-0.00035918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603151,-0.0331254) , 
1, 1.65577, 1, 0, 0.61104,-0.000761438) , 
6, 0.0139189, 1, 0, 0.501965,-0.000182391)    );
  // itree = 834
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689274,-0.0124984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64761,-0.00797525) , 
4, 0.00282248, 1, 0, 0.654829,-0.00092574) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985156,0.0818509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131584) , 
0, 0.00235054, 1, 0, 0.287644,0.000519844) , 
5, 0.005548, 1, 0, 0.396203,9.24545e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961643,-0.0189736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531627,0.00366472) , 
0, 0.00175113, 1, 0, 0.770728,-0.00191656) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.310218,0.013362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229891,-0.0078193) , 
3, 75.6879, 1, 0, 0.284477,0.000108674) , 
5, 0.0115632, 1, 0, 0.614712,-0.00126675) , 
6, 0.0150773, 1, 0, 0.499904,-0.000552609)    );
  // itree = 835
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.418566,-0.00721378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604009,-0.0188409) , 
6, 0.0168281, 1, 0, 0.431264,-0.000562359) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597641,-0.0119692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618059,0.026449) , 
1, 1.13557, 1, 0, 0.614468,0.000775869) , 
6, 0.0176697, 1, 0, 0.484947,-0.000170229) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631471,-0.0144145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627019,-0.0188615) , 
1, 1.06907, 1, 0, 0.629384,-0.0074287) , 
6, 0.0231932, 1, 0, 0.494265,-0.000638518)    );
  // itree = 836
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922719,-0.0378137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843971,0.0249585) , 
2, 0.0211182, 1, 0, 0.90696,-0.00128244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78012,0.00328156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737752,-0.0408815) , 
3, 46.468, 1, 0, 0.761831,-0.00475069) , 
2, 0.0317383, 1, 0, 0.881109,-0.00190022) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758189,0.0287306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618157,0.00699492) , 
5, 0.00930039, 1, 0, 0.666447,0.00184311) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816157,-0.00445005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000814247,0.00822093) , 
0, 0.00235174, 1, 0, 0.123947,-0.000229633) , 
2, 0.0692037, 1, 0, 0.194128,3.85091e-05) , 
2, 0.0476103, 1, 0, 0.491408,-0.000800447)    );
  // itree = 837
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974461,0.0652609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885631,0.0692837) , 
2, 0.0249372, 1, 0, 0.955871,0.0010038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677214,-0.0140163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960179,0.0880983) , 
6, 0.0220451, 1, 0, 0.762508,-0.000276946) , 
4, 0.00927716, 1, 0, 0.897145,0.000614824) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976175,0.0236042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669852,-0.00928566) , 
0, 0.000447783, 1, 0, 0.794307,-0.00263108) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.8954e-05,0.00409814) , 
4, 0.00811092, 1, 0, 4.17142e-05,-3.65211e-05) , 
0, 0.00470348, 1, 0, 0.203028,-0.000699599) , 
2, 0.0476132, 1, 0, 0.509735,-0.0001188)    );
  // itree = 838
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.467081,0.00867597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842353,-0.00607415) , 
7, 9.18346e-05, 1, 0, 0.538143,0.000145304) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454824,-0.00200562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663755,-0.0208731) , 
6, 0.0162457, 1, 0, 0.540911,-0.00226844) , 
3, 21.6249, 1, 0, 0.539261,-0.000829278) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938411,-0.0247664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000496201,0.00118946) , 
0, 0.00235174, 1, 0, 0.160894,-0.000441348) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830715,0.0453858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806308,0.00236272) , 
3, 59.0688, 1, 0, 0.815473,0.00126597) , 
7, 2.95691e-05, 1, 0, 0.467972,0.000359596) , 
3, 37.8445, 1, 0, 0.499972,-0.000174058)    );
  // itree = 839
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921003,-0.0265033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747251,0.0231974) , 
5, 0.00855156, 1, 0, 0.856189,-0.000758785) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936747,-0.0179773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915582,-0.106487) , 
2, 0.0307247, 1, 0, 0.926782,-0.00814959) , 
6, 0.0220368, 1, 0, 0.863763,-0.00155174) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0141239,-0.00786452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0184294,0.0090364) , 
3, 37.8118, 1, 0, 0.0166828,-3.40331e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583162,-0.000274289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800864,0.0209274) , 
7, 0.000124836, 1, 0, 0.667924,0.00198596) , 
7, 8.67632e-05, 1, 0, 0.121203,0.000290162) , 
2, 0.0714198, 1, 0, 0.500843,-0.000651524)    );
  // itree = 840
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.3125,0.00648363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524833,-0.0205898) , 
6, 0.0113662, 1, 0, 0.354655,-4.62277e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641787,0.0983337) , 
6, 0.0132629, 1, 0, 0.377038,0.000128583) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971033,-0.0105993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949305,-0.0269214) , 
0, 0.00212442, 1, 0, 0.9687,-0.00271571) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0048609,0.0252648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00323085,-0.0107514) , 
3, 50.5291, 1, 0, 0.0040789,-0.000100857) , 
0, 0.00234888, 1, 0, 0.59652,-0.00170682) , 
6, 0.0139269, 1, 0, 0.495961,-0.000865907)    );
  // itree = 841
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669604,-0.00875391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.354937,0.0116524) , 
4, 0.00810856, 1, 0, 0.501333,-9.3561e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195295,0.0514633) , 
3, 125.852, 1, 0, 0.47851,6.44698e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597199,-0.0114562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608136,0.0178786) , 
3, 37.26, 1, 0, 0.603394,0.000141565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624499,-0.0259474) , 
1, 1.15602, 1, 0, 0.608738,-0.00279036) , 
6, 0.0208745, 1, 0, 0.501662,-0.000443069)    );
  // itree = 842
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922304,0.0104204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92432,0.0838534) , 
6, 0.0198759, 1, 0, 0.922558,0.000516359) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.359952,-0.0105769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248059,-0.000108266) , 
4, 0.00927992, 1, 0, 0.291762,-0.000595746) , 
2, 0.0238066, 1, 0, 0.494458,-0.000238389) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653044,-0.00280815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673262,-0.0321866) , 
3, 49.2549, 1, 0, 0.662343,-0.0041811) , 
6, 0.0231934, 1, 0, 0.504864,-0.000482754)    );
  // itree = 843
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.37617,-0.0162744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850357,-0.0108407) , 
7, 5.24932e-05, 1, 0, 0.521245,-0.00129806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.295007,-0.0114929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872661,0.0291314) , 
7, 5.18736e-05, 1, 0, 0.456148,0.000233382) , 
3, 25.1802, 1, 0, 0.476907,-0.000254988) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87934,-0.023087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890384,-0.0421147) , 
1, 1.15604, 1, 0, 0.882277,-0.00783389) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.3347,-0.00487457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.240158,0.000664492) , 
1, 1.10409, 1, 0, 0.284089,-0.000579208) , 
2, 0.0952595, 1, 0, 0.624359,-0.00470592) , 
6, 0.0208739, 1, 0, 0.5033,-0.00105169)    );
  // itree = 844
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793698,-0.011828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345891,-0.0115192) , 
4, 0.0030034, 1, 0, 0.548416,-0.00118324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977166,0.0366523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.06499e-05,-0.00484879) , 
0, 0.00235152, 1, 0, 0.313565,0.000267507) , 
5, 0.00358448, 1, 0, 0.347808,5.59742e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761325,-0.00777176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754545,-0.0273732) , 
1, 1.54093, 1, 0, 0.759295,-0.00199892) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716041,0.0220588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0350633) , 
1, 1.1272, 1, 0, 0.313391,0.000181545) , 
5, 0.0112352, 1, 0, 0.60447,-0.00124183) , 
6, 0.0127585, 1, 0, 0.497797,-0.000702442)    );
  // itree = 845
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655933,-0.0273831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497869,0.00310916) , 
5, 0.00641286, 1, 0, 0.544459,-0.00104494) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517186,0.0101593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.289264,-0.00982609) , 
3, 96.5793, 1, 0, 0.476434,0.000289543) , 
3, 12.5976, 1, 0, 0.487068,8.09205e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632031,0.0218893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667682,0.0142299) , 
6, 0.0232502, 1, 0, 0.64985,0.00139056) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600605,-0.0510053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550006,-0.00998092) , 
3, 69.1886, 1, 0, 0.57302,-0.00712844) , 
3, 37.2443, 1, 0, 0.604435,-0.00364508) , 
6, 0.0220363, 1, 0, 0.501626,-0.000381228)    );
  // itree = 846
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.40635,-0.00766482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303561,0.0361882) , 
6, 0.015461, 1, 0, 0.380052,9.39624e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509857,-0.0176631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894682,-0.00234399) , 
4, 0.00882121, 1, 0, 0.844021,-0.00117421) , 
7, 7.40899e-05, 1, 0, 0.490837,-0.000208847) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659309,0.00386697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572111,-0.0186938) , 
3, 49.2372, 1, 0, 0.616082,-0.00360209) , 
6, 0.0231935, 1, 0, 0.498943,-0.00042847)    );
  // itree = 847
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900549,0.0237759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0967001,-0.0100202) , 
2, 0.0237979, 1, 0, 0.345287,-0.000261057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833379,-0.00622934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921566,-0.0241145) , 
1, 1.46544, 1, 0, 0.846095,-0.00190538) , 
7, 6.37458e-05, 1, 0, 0.47605,-0.000690396) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964046,-0.00899292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709675,0.0619977) , 
0, 0.00135587, 1, 0, 0.817357,0.00054242) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466174,-0.0261451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447327,-0.0127766) , 
3, 48.5379, 1, 0, 0.45722,-0.00862534) , 
5, 0.011798, 1, 0, 0.639944,-0.00397385) , 
6, 0.0220359, 1, 0, 0.49529,-0.00107584)    );
  // itree = 848
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470393,-0.0283356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446766,0.00707682) , 
3, 7.18908, 1, 0, 0.451335,-0.000473172) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658726,-0.0113897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616913,-0.0370578) , 
1, 1.42723, 1, 0, 0.652831,-0.00422884) , 
6, 0.0162355, 1, 0, 0.531525,-0.00196782) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.401187,0.00874696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604379,-0.0115842) , 
6, 0.0178373, 1, 0, 0.451234,-2.30781e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526936,-0.00223089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711649,0.0209642) , 
4, 0.011438, 1, 0, 0.637469,0.00138985) , 
6, 0.0220339, 1, 0, 0.473581,0.000146468) , 
3, 37.7349, 1, 0, 0.499643,-0.000804479)    );
  // itree = 849
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601703,-0.0718828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.511646,-0.0034798) , 
5, 0.00653431, 1, 0, 0.536587,-0.00176568) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243518,-0.0036093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834484,0.0411173) , 
7, 3.28493e-05, 1, 0, 0.534568,0.00112699) , 
3, 14.3884, 1, 0, 0.535205,0.000214408) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961592,-0.0236261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973301,0.0140073) , 
5, 0.0108347, 1, 0, 0.963856,-0.00284192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00163025,0.0242256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00167094,-0.00831955) , 
6, 0.0127614, 1, 0, 0.0016485,-0.000102549) , 
0, 0.00235174, 1, 0, 0.448494,-0.0013747) , 
3, 50.3567, 1, 0, 0.498024,-0.000466983)    );
  // itree = 850
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.693492,-0.00773639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775911,0.0186989) , 
5, 0.0104591, 1, 0, 0.70294,-0.000485586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62709,-0.0190893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901276,-0.0201) , 
7, 0.000104747, 1, 0, 0.666313,-0.00268506) , 
3, 37.6403, 1, 0, 0.683741,-0.00163853) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992518,0.0345909) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000513269,0.065863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000889493,-0.00531726) , 
7, -0.000356508, 1, 0, 0.000760802,8.54258e-05) , 
0, 0.00235152, 1, 0, 0.134436,0.000438495) , 
5, 0.011556, 1, 0, 0.497692,-0.000935044)    );
  // itree = 851
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527737,-0.0130055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573072,-0.00153039) , 
6, 0.00580649, 1, 0, 0.563662,-0.000463442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392392,-0.121707) , 
7, 3.06986e-05, 1, 0, 0.533586,-0.00179498) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.317859,-0.00530116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435155,0.0108554) , 
6, 0.0162337, 1, 0, 0.353048,7.79945e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958379,-0.0118647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779559,0.00263526) , 
0, 0.00167013, 1, 0, 0.860418,-0.0012606) , 
7, 8.53042e-05, 1, 0, 0.494319,-0.000294721) , 
4, 0.00579273, 1, 0, 0.502802,-0.000618833)    );
  // itree = 852
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692137,-0.00778497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.232096,0.036092) , 
5, 0.0110043, 1, 0, 0.542268,-0.000318653) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.514729,-0.0221621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631881,-0.0286026) , 
6, 0.0208781, 1, 0, 0.535143,-0.00268459) , 
3, 35.9262, 1, 0, 0.540459,-0.000919495) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.837088,0.0727108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0654093,-0.00520051) , 
2, 0.0475878, 1, 0, 0.353861,0.00012323) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853118,0.00682042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86717,0.0266997) , 
4, 0.0105271, 1, 0, 0.860938,0.0019551) , 
7, 8.53042e-05, 1, 0, 0.465588,0.000526854) , 
3, 50.31, 1, 0, 0.508902,-0.000309881)    );
  // itree = 853
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976611,-0.00710339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959432,-0.0150995) , 
4, 0.0108193, 1, 0, 0.974029,-0.00123978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42115,-0.0113169) , 
0, 0.00223802, 1, 0, 0.944041,-0.00152696) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130978) , 
2, 0.108756, 1, 0, 0,-8.1958e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00015921,0.0165447) , 
2, 0.380836, 1, 0, 3.62791e-05,-4.30348e-05) , 
0, 0.00470108, 1, 0, 0.500346,-0.000829494)    );
  // itree = 854
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.380598,0.0021377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60061,-0.032199) , 
6, 0.0142377, 1, 0, 0.407693,-0.000439014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84205,0.0815241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241777,0.0364767) , 
2, 0.0474011, 1, 0, 0.550054,0.00170478) , 
6, 0.0157371, 1, 0, 0.427724,-0.000137376) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906604,-0.0116275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84546,0.015582) , 
2, 0.0543752, 1, 0, 0.888557,-0.000649444) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809109,-0.0135032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00147145,0.000968732) , 
0, 0.00233436, 1, 0, 0.201759,-0.00288757) , 
2, 0.0952005, 1, 0, 0.621802,-0.00151874) , 
6, 0.0173962, 1, 0, 0.497596,-0.000634693)    );
  // itree = 855
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454852,0.0068181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649525,-0.015775) , 
6, 0.0165647, 1, 0, 0.523208,-0.00079753) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937938,0.0146431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130991) , 
0, 0.00469953, 1, 0, 0.442511,0.000578471) , 
3, 50.4587, 1, 0, 0.48914,-0.000216616) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642122,-0.0119497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622935,-0.0160881) , 
3, 37.2453, 1, 0, 0.631326,-0.00320938) , 
6, 0.0231932, 1, 0, 0.498489,-0.000413395)    );
  // itree = 856
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911914,0.0606704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615915,0.0208375) , 
2, 0.0249052, 1, 0, 0.864116,0.000690209) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944972,-0.0670955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868471,-0.00269122) , 
4, 0.00923976, 1, 0, 0.907659,-0.00258916) , 
6, 0.0139308, 1, 0, 0.887501,-0.00107103) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898971,0.00670789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895971,0.0222849) , 
0, 0.00133885, 1, 0, 0.897493,0.00349732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000599134,0.0200195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000895841,-0.0128185) , 
6, 0.0173953, 1, 0, 0.000678441,-0.000123151) , 
0, 0.00235054, 1, 0, 0.204777,0.0007008) , 
2, 0.0476016, 1, 0, 0.504808,-7.78534e-05)    );
  // itree = 857
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902119,0.0329155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0139255,-0.010358) , 
2, 0.0238066, 1, 0, 0.248433,-0.000121831) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859235,0.0233657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657884,-0.0101096) , 
4, 0.011322, 1, 0, 0.826116,0.00115524) , 
7, 3.20873e-05, 1, 0, 0.54299,0.000529338) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967252,-0.00505249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736991,-0.0183844) , 
0, 0.00200123, 1, 0, 0.93332,-0.00206073) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131151) , 
3, 91.9097, 1, 0, 0,-7.49407e-05) , 
0, 0.00470075, 1, 0, 0.460567,-0.00105487) , 
3, 37.8432, 1, 0, 0.497087,-0.000352934)    );
  // itree = 858
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862844,-0.0108057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86074,-0.0489609) , 
3, 55.1515, 1, 0, 0.862696,-0.00171132) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876284,0.0528444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772549,-0.00868414) , 
5, 0.00645035, 1, 0, 0.80345,0.000215831) , 
3, 60.9579, 1, 0, 0.84582,-0.00116238) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.480417,0.0366797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53174,0.000882927) , 
3, 48.313, 1, 0, 0.506462,0.0016699) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.348672,-0.00662683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.94351e-05,-0.000167358) , 
0, 0.00470349, 1, 0, 0.0299219,-0.000439674) , 
2, 0.112276, 1, 0, 0.124076,-2.28681e-05) , 
2, 0.0714155, 1, 0, 0.502287,-0.00062)    );
  // itree = 859
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.573632,0.00675374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852566,-0.0237049) , 
7, 4.38128e-05, 1, 0, 0.667925,-0.000974497) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642589,0.0383154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0258569,-0.00519026) , 
2, 0.0951947, 1, 0, 0.291308,0.000344835) , 
5, 0.00855649, 1, 0, 0.476725,-0.000304703) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630868,0.0208844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614761,-0.0206465) , 
3, 25.1455, 1, 0, 0.619437,-0.00260127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638193,-0.0218448) , 
1, 1.17072, 1, 0, 0.622595,-0.00422555) , 
6, 0.0208748, 1, 0, 0.502438,-0.000995843)    );
  // itree = 860
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505046,-0.00836243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332305,-0.0317979) , 
3, 74.2522, 1, 0, 0.463793,-0.0015095) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8974,-0.0260759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.189073,0.00495605) , 
2, 0.023795, 1, 0, 0.381992,-0.000140716) , 
4, 0.00464347, 1, 0, 0.397323,-0.000397251) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873219,-0.00834193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638002,-0.0280104) , 
5, 0.011006, 1, 0, 0.819208,-0.00306475) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936069,-0.00385245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928639,0.0157657) , 
0, 0.0021452, 1, 0, 0.93222,0.0005123) , 
7, 0.000130274, 1, 0, 0.847709,-0.00216263) , 
7, 8.53041e-05, 1, 0, 0.496615,-0.000786449)    );
  // itree = 861
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903999,0.069871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625392,-0.00467575) , 
2, 0.00563849, 1, 0, 0.777527,0.000213548) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00405474,-0.0115604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.11559e-05,4.60457e-05) , 
2, 0.137233, 1, 0, 0.00112255,-0.000153715) , 
2, 0.0238008, 1, 0, 0.14791,-8.42805e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.797362,-0.00833657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853784,-0.0156098) , 
7, 0.000109138, 1, 0, 0.807394,-0.00178767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937831,0.0221391) , 
7, 0.000136269, 1, 0, 0.817037,-0.00147382) , 
7, 2.23528e-05, 1, 0, 0.499087,-0.000813552)    );
  // itree = 862
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87288,-0.00916581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601793,-0.0133669) , 
2, 0.0589425, 1, 0, 0.829703,-0.00103015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000648407,-0.00586432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538505,0.0105977) , 
7, 8.67821e-05, 1, 0, 0.0733239,0.000264801) , 
2, 0.0952207, 1, 0, 0.527945,-0.000513529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.182721,-0.0208108) , 
3, 138.474, 1, 0, 0.507717,-0.000692098)    );
  // itree = 863
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510147,-0.00464067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63259,-0.0137338) , 
6, 0.0199322, 1, 0, 0.524905,-0.00097325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738939,0.0133443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000643331,-0.0121516) , 
2, 0.142661, 1, 0, 0.471108,0.000230939) , 
3, 25.2289, 1, 0, 0.488257,-0.000152934) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591717,-0.0506886) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.46812,-0.0156441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843361,0.0123738) , 
4, 0.0115681, 1, 0, 0.677254,-0.00084467) , 
5, 0.0113077, 1, 0, 0.657124,-0.00378663) , 
6, 0.0220335, 1, 0, 0.507742,-0.000572206)    );
  // itree = 864
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.129113,-0.00832614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798885,0.00774299) , 
7, 1.91517e-05, 1, 0, 0.382857,0.000134682) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903229,-0.0158619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849313,-0.000836432) , 
6, 0.0182008, 1, 0, 0.856959,-0.000880289) , 
7, 7.54041e-05, 1, 0, 0.492295,-9.96059e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90312,0.00911842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414697,0.00647476) , 
2, 0.0715779, 1, 0, 0.647836,0.00113509) , 
6, 0.0231932, 1, 0, 0.502267,-2.04479e-05)    );
  // itree = 865
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968228,0.0319014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132264) , 
0, 0.00235034, 1, 0, 0.22461,-3.21573e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96658,-0.0272688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701209,-0.00426571) , 
0, 0.00116291, 1, 0, 0.819625,-0.00272422) , 
7, 3.0561e-05, 1, 0, 0.527652,-0.00140323) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838747,0.0168079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.105992,-0.00517733) , 
2, 0.0714198, 1, 0, 0.476463,0.0001504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6275,0.0328769) , 
6, 0.0231934, 1, 0, 0.486859,0.000328031) , 
3, 25.2294, 1, 0, 0.499776,-0.000220153)    );
  // itree = 866
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979613,-0.0125206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462122,-0.0189447) , 
0, 0.00168763, 1, 0, 0.916189,-0.00209432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131513) , 
0, 0.00593969, 1, 0, 0.636274,-0.00149473) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.218747,-0.00290393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761147,0.058737) , 
6, 0.0209856, 1, 0, 0.27261,0.000383893) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941037,0.0186581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606286,-0.0112459) , 
2, 0.0476717, 1, 0, 0.732733,-0.00200285) , 
6, 0.0220346, 1, 0, 0.365681,-9.88834e-05) , 
4, 0.00928202, 1, 0, 0.49955,-0.000789441)    );
  // itree = 867
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.501503,0.00747656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447196,-0.00960474) , 
3, 25.1579, 1, 0, 0.464562,-0.000104583) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653905,0.01639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631097,0.030222) , 
6, 0.0208334, 1, 0, 0.638608,0.00182973) , 
6, 0.019885, 1, 0, 0.495356,0.000237657) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640889,-0.0130373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673887,-0.0123365) , 
1, 1.07123, 1, 0, 0.65479,-0.0028832) , 
6, 0.0231946, 1, 0, 0.505761,3.39922e-05)    );
  // itree = 868
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.465615,0.00510442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420913,-0.0287774) , 
3, 43.2368, 1, 0, 0.460158,-5.84132e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620741,-0.0262219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646076,-0.00934787) , 
6, 0.0181701, 1, 0, 0.639606,-0.0032931) , 
6, 0.0162354, 1, 0, 0.5363,-0.00143094) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889392,0.00726068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740474,0.0309998) , 
2, 0.023763, 1, 0, 0.826355,0.00104239) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532691,-0.0128966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.087387,0.00220483) , 
2, 0.0918129, 1, 0, 0.134936,-0.0002308) , 
2, 0.0714068, 1, 0, 0.444849,0.00033988) , 
3, 50.4604, 1, 0, 0.497218,-0.000674162)    );
  // itree = 869
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513082,-0.00885666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510123,0.0223718) , 
3, 28.8314, 1, 0, 0.511943,-0.000278616) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.773298,0.0455776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509364,0.0232215) , 
5, 0.0115006, 1, 0, 0.632712,0.00258226) , 
6, 0.0208739, 1, 0, 0.532259,0.000202637) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994238,0.0355473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85671,-0.0193037) , 
2, 0.0237175, 1, 0, 0.921643,-0.00309353) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000169226,0.024462) , 
4, 0.0150737, 1, 0, 7.71248e-05,5.27679e-06) , 
0, 0.00469953, 1, 0, 0.446834,-0.00149696) , 
3, 50.4575, 1, 0, 0.495629,-0.000526154)    );
  // itree = 870
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974386,-0.00639144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955763,-0.0194954) , 
0, 0.00172316, 1, 0, 0.972191,-0.000983769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89127,-0.0280468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976609,-0.00997122) , 
7, 0.000127236, 1, 0, 0.937138,-0.00871019) , 
0, 0.00201049, 1, 0, 0.968478,-0.00180232) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00291175,-0.010145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00284824,0.0495094) , 
6, 0.0162351, 1, 0, 0.000976202,0.000267851) , 
2, 0.14284, 1, 0, 0.00155203,-5.19929e-05) , 
0, 0.00235054, 1, 0, 0.503469,-0.000960562)    );
  // itree = 871
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511272,0.0251088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515956,-0.0142395) , 
3, 13.1883, 1, 0, 0.513411,-0.000427715) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629078,-0.0102824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644806,-0.0161087) , 
1, 1.11122, 1, 0, 0.636774,-0.00426281) , 
6, 0.0208828, 1, 0, 0.533434,-0.00105017) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.411184,0.000560201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.256537,-0.0311922) , 
6, 0.0173883, 1, 0, 0.381642,-0.000258823) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896695,0.0199376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64718,-0.00717885) , 
5, 0.0117726, 1, 0, 0.844398,0.00103567) , 
7, 8.67917e-05, 1, 0, 0.48221,2.25018e-05) , 
3, 25.1774, 1, 0, 0.498418,-0.000316901)    );
  // itree = 872
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919153,-0.0260337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831672,-0.000975783) , 
4, 0.00696034, 1, 0, 0.866734,-0.00106156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644528,-0.0163848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472283,-0.00445796) , 
2, 0.0803571, 1, 0, 0.556282,-0.00343533) , 
2, 0.0566174, 1, 0, 0.793925,-0.00161827) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00128446,-0.0104478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000766399,0.0223946) , 
2, 0.245893, 1, 0, 0.000933789,-1.00509e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125123,0.0135024) , 
6, 0.0208723, 1, 0, 0.0190902,0.000246078) , 
2, 0.11897, 1, 0, 0.493213,-0.00089472)    );
  // itree = 873
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.539504,-0.00436731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709266,0.0783288) , 
4, 0.00497511, 1, 0, 0.581834,0.000187134) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.540546,-0.0351782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.367748,0.00960896) , 
3, 91.0153, 1, 0, 0.476974,-0.00453044) , 
3, 50.3089, 1, 0, 0.540237,-0.00168429) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737648,0.0038529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0938703,-0.0107759) , 
4, 0.0111025, 1, 0, 0.476253,-1.58309e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69572,0.0032367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700513,0.0235389) , 
3, 46.6645, 1, 0, 0.697951,0.0017434) , 
6, 0.0231931, 1, 0, 0.492983,0.000116928) , 
4, 0.00580162, 1, 0, 0.503144,-0.000270402)    );
  // itree = 874
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966018,0.0233999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140654) , 
0, 0.002318, 1, 0, 0.441751,0.00025056) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0618395,0.0433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858351,-0.0284446) , 
7, 1.1266e-05, 1, 0, 0.282396,-0.000802977) , 
3, 75.5868, 1, 0, 0.40231,-1.01919e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965547,-0.0228961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914172,-9.80957e-05) , 
0, 0.00131427, 1, 0, 0.938986,-0.00219297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131246) , 
0, 0.00469537, 1, 0, 0.604118,-0.00145596) , 
6, 0.0150758, 1, 0, 0.499412,-0.000705839)    );
  // itree = 875
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623913,-0.0145603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338101,0.000998111) , 
4, 0.00580343, 1, 0, 0.423267,-0.000284621) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896128,0.0431512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0948973,0.00229098) , 
2, 0.0948168, 1, 0, 0.618037,0.00107401) , 
6, 0.0169053, 1, 0, 0.472236,5.69606e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910482,-0.020528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919165,0.0139399) , 
1, 1.09659, 1, 0, 0.915761,-6.26138e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.349276,-0.00455874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447716,-0.0166283) , 
3, 74.4875, 1, 0, 0.382723,-0.0023508) , 
2, 0.0715615, 1, 0, 0.632127,-0.00128017) , 
6, 0.0208782, 1, 0, 0.499728,-0.000172954)    );
  // itree = 876
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642179,-0.00652555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972808,0.0382922) , 
7, 4.18239e-05, 1, 0, 0.801205,0.000519487) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00147033,0.021675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0202104,-0.0144351) , 
6, 0.0140846, 1, 0, 0.00679103,-0.000397678) , 
2, 0.0952265, 1, 0, 0.461139,0.000126875) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655316,-0.00382719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67472,-0.013236) , 
3, 79.7925, 1, 0, 0.658072,-0.00112065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503321,0.0430216) , 
3, 111.731, 1, 0, 0.641789,-0.000747578) , 
6, 0.0197155, 1, 0, 0.504402,-8.25419e-05)    );
  // itree = 877
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.528626,-0.00564791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545385,0.028058) , 
3, 36.949, 1, 0, 0.531243,-0.000271738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479702,-0.0361184) , 
3, 45.6512, 1, 0, 0.52691,-0.000621115) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527575,0.00410018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544108,0.0870449) , 
3, 60.2076, 1, 0, 0.535629,0.00108326) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.365591,0.00175332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570003,-0.0108562) , 
6, 0.0208797, 1, 0, 0.402624,-0.000349088) , 
3, 70.9049, 1, 0, 0.448583,0.000145853) , 
3, 50.4597, 1, 0, 0.49392,-0.000298085)    );
  // itree = 878
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.397847,-0.00737575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583803,0.029794) , 
6, 0.0153357, 1, 0, 0.43656,0.000136513) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618264,-0.0021168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609549,-0.0260294) , 
1, 1.34079, 1, 0, 0.61647,-0.00172863) , 
6, 0.0178916, 1, 0, 0.470344,-0.000213727) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654181,0.00569285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651047,-0.0143895) , 
6, 0.0231979, 1, 0, 0.65301,-0.000651285) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603037,-0.0294924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605184,-0.0142252) , 
3, 59.2992, 1, 0, 0.604442,-0.00647841) , 
3, 37.7183, 1, 0, 0.625113,-0.00399832) , 
6, 0.0208739, 1, 0, 0.496704,-0.000858322)    );
  // itree = 879
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954814,0.0344655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946038,0.0803677) , 
6, 0.0151127, 1, 0, 0.952419,0.000422754) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926488,-0.0413445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909769,-0.0145585) , 
2, 0.0109609, 1, 0, 0.917248,-0.0021534) , 
2, 0.00453404, 1, 0, 0.928714,-0.0013135) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0157169,-0.0197925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000137548,0.0197068) , 
5, 0.0110817, 1, 0, 0.00669263,-0.000719336) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624997,0.00795991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00037834,-0.0106174) , 
2, 0.250493, 1, 0, 0.445295,0.000413233) , 
6, 0.0104364, 1, 0, 0.308058,5.88555e-05) , 
2, 0.0238052, 1, 0, 0.500105,-0.000365785)    );
  // itree = 880
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893527,0.044954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922009,-0.0124545) , 
6, 0.00748242, 1, 0, 0.907004,0.000684702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130946) , 
2, 0.119126, 1, 0, 0,-6.42013e-05) , 
0, 0.00470348, 1, 0, 0.148832,5.86879e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779798,0.00266393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825898,-0.0221483) , 
3, 12.0352, 1, 0, 0.816686,-0.00324306) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765426,0.0820677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777461,-0.00389399) , 
4, 0.0084674, 1, 0, 0.772854,0.00061973) , 
3, 84.2445, 1, 0, 0.809467,-0.00260686) , 
7, 2.23527e-05, 1, 0, 0.49691,-0.00134575)    );
  // itree = 881
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543441,-0.00926197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0984011,-0.00667945) , 
5, 0.00451022, 1, 0, 0.216329,-0.000113755) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830701,-0.00811355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833269,-0.0235923) , 
5, 0.0084494, 1, 0, 0.832152,-0.00401577) , 
7, 2.88486e-05, 1, 0, 0.538968,-0.00215808) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975683,0.0112265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833689,0.0124759) , 
0, 0.00177887, 1, 0, 0.943554,0.00130167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013101) , 
3, 91.9095, 1, 0, 0,-7.44028e-05) , 
0, 0.00468527, 1, 0, 0.477435,0.000621885) , 
3, 37.8469, 1, 0, 0.505211,-0.000632971)    );
  // itree = 882
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975405,0.0102189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0021854,-0.0284262) , 
0, 0.00176723, 1, 0, 0.650894,-0.000401038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532573,0.0115619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0415197) , 
4, 0.0115811, 1, 0, 0.351434,0.000463763) , 
5, 0.00872642, 1, 0, 0.487781,7.001e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605061,-0.0235422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607006,0.0122912) , 
1, 1.06242, 1, 0, 0.606251,-0.00301374) , 
6, 0.0231934, 1, 0, 0.495556,-0.00013236)    );
  // itree = 883
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.24473,-0.0255608) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.514297,0.000810759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352904,-0.01073) , 
3, 75.588, 1, 0, 0.474445,-0.000165167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680098,0.033432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652303,0.00327765) , 
6, 0.0217037, 1, 0, 0.658731,0.00114179) , 
6, 0.0208748, 1, 0, 0.505793,5.71522e-05) , 
5, 0.00225267, 1, 0, 0.494863,-8.03161e-05)    );
  // itree = 884
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634193,0.00318834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556439,-0.0177763) , 
3, 62.9888, 1, 0, 0.612042,-0.000250633) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74257,-0.0168533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715872,-0.00495502) , 
6, 0.0174005, 1, 0, 0.720224,-0.00148503) , 
6, 0.016235, 1, 0, 0.660252,-0.000800727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965284,0.0252893) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000988964,-0.0177559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00022115,0.0268004) , 
2, 0.190459, 1, 0, 0.00052943,-0.000141651) , 
0, 0.00235174, 1, 0, 0.12772,0.00019433) , 
4, 0.0115989, 1, 0, 0.50009,-0.000501457)    );
  // itree = 885
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901721,-0.0257737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948436,-0.000716081) , 
6, 0.0116851, 1, 0, 0.936109,-0.00121761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899047,-0.0289645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982962,0.0008555) , 
4, 0.0117525, 1, 0, 0.939886,-0.0061443) , 
5, 0.0114545, 1, 0, 0.936495,-0.00172072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130987) , 
3, 75.2939, 1, 0, 0,-5.10203e-05) , 
2, 0.119104, 1, 0, 0,-8.26576e-05) , 
0, 0.00470108, 1, 0, 0.506238,-0.00096814)    );
  // itree = 886
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923901,0.00989168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903503,-0.0282331) , 
6, 0.0208802, 1, 0, 0.921464,-0.000177172) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723127,-0.0222202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781677,-0.0174788) , 
4, 0.00698904, 1, 0, 0.768064,-0.0060473) , 
2, 0.0249052, 1, 0, 0.879179,-0.00179527) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706707,0.0374278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507326,-0.00475185) , 
2, 0.0783212, 1, 0, 0.65881,0.00201195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000798493,0.0152358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17576,-0.00292025) , 
6, 0.015077, 1, 0, 0.0729339,-6.93791e-05) , 
2, 0.0906692, 1, 0, 0.20137,0.00038689) , 
2, 0.0475958, 1, 0, 0.497694,-0.000567107)    );
  // itree = 887
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.497241,0.0170807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.480599,-0.00381445) , 
3, 11.9837, 1, 0, 0.483388,-2.93345e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158517,0.0236123) , 
3, 125.852, 1, 0, 0.457337,6.74162e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665417,-0.00234732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644633,-0.0164171) , 
3, 18.8262, 1, 0, 0.649939,-0.0036368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513735,0.0283593) , 
3, 98.7619, 1, 0, 0.630156,-0.00285437) , 
6, 0.0197151, 1, 0, 0.498587,-0.000629976)    );
  // itree = 888
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996487,-0.0916761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99714,0.0205304) , 
7, 7.05327e-05, 1, 0, 0.9968,-0.000293952) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887371,-0.0302479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954862,-0.0106612) , 
0, 0.000855052, 1, 0, 0.946215,-0.00386175) , 
0, 0.000111524, 1, 0, 0.970946,-0.00211743) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00506564,-0.00955186) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00225044,0.0109534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130972) , 
0, 0.0201915, 1, 0, 0.000619882,0.000101016) , 
2, 0.0953253, 1, 0, 0.00151891,-0.000101899) , 
0, 0.00234264, 1, 0, 0.497882,-0.00113389)    );
  // itree = 889
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983155,-0.0189268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967289,0.016045) , 
0, 0.000871982, 1, 0, 0.97628,-8.98559e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0019337,-0.00364109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0083832,-0.0287513) , 
6, 0.0139185, 1, 0, 0.00488899,-0.00277393) , 
0, 0.00203544, 1, 0, 0.652866,-0.000983488) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.133227,0.0128267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771227,-0.0108227) , 
6, 0.0220477, 1, 0, 0.306581,-0.000671638) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927618,0.0153447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000164333,0.0260833) , 
0, 0.00470108, 1, 0, 0.261281,0.000740542) , 
3, 25.1954, 1, 0, 0.273411,0.000362427) , 
4, 0.010425, 1, 0, 0.500301,-0.000442344)    );
  // itree = 890
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639102,-0.0294807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517112,0.00575826) , 
5, 0.00635043, 1, 0, 0.555719,-0.000557519) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976914,0.0140114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00135189,-0.0036994) , 
0, 0.00235174, 1, 0, 0.462949,0.000338805) , 
3, 12.547, 1, 0, 0.477186,0.000201251) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637793,0.00588865) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633044,-0.00194371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611522,-0.0193107) , 
3, 58.2132, 1, 0, 0.62205,-0.00240856) , 
3, 24.6891, 1, 0, 0.626556,-0.00155915) , 
6, 0.0208748, 1, 0, 0.503553,-0.000109494)    );
  // itree = 891
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.396069,-0.0084128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.318349,0.0349226) , 
3, 24.9216, 1, 0, 0.342183,0.000105869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601517,-0.00879983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608898,-0.0838811) , 
1, 1.78334, 1, 0, 0.602278,-0.00145119) , 
6, 0.012604, 1, 0, 0.482371,-0.000733363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580045,0.00323903) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670762,0.0252127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718022,0.0296292) , 
3, 48.7868, 1, 0, 0.692392,0.00244207) , 
4, 0.0115441, 1, 0, 0.6409,0.00150315) , 
6, 0.0220363, 1, 0, 0.501339,-0.000465752)    );
  // itree = 892
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.37023,-0.00439423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575394,-0.0220925) , 
6, 0.0139879, 1, 0, 0.395582,-0.000429448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945288,0.01463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013099) , 
0, 0.00467497, 1, 0, 0.603131,0.00106844) , 
6, 0.0154604, 1, 0, 0.483399,0.000204336) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626375,0.000862157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665496,-0.0183062) , 
3, 49.2372, 1, 0, 0.643635,-0.00326511) , 
6, 0.0231932, 1, 0, 0.493499,-1.43345e-05)    );
  // itree = 893
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648209,-0.0134619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442815,0.0128992) , 
4, 0.00811354, 1, 0, 0.52658,-6.45395e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511916,-0.0289311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653765,-0.0221452) , 
6, 0.0208744, 1, 0, 0.536129,-0.00279019) , 
3, 33.6366, 1, 0, 0.529327,-0.000848577) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961058,0.00300489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982452,0.0297374) , 
5, 0.0100597, 1, 0, 0.967344,0.00100931) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00394397,-0.0134264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00159995,0.00498415) , 
2, 0.214233, 1, 0, 0.00262528,-0.000503707) , 
0, 0.00234767, 1, 0, 0.451216,0.000199841) , 
3, 50.4575, 1, 0, 0.496055,-0.000401994)    );
  // itree = 894
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975835,0.0177506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000545486,-0.00776258) , 
0, 0.00235152, 1, 0, 0.518939,0.000561217) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89519,-0.0415582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.22568,-0.000987201) , 
2, 0.0237979, 1, 0, 0.414877,-0.00082837) , 
3, 50.3923, 1, 0, 0.474806,-2.81094e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93529,-0.0185644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63449,0.0397877) , 
0, 0.00145363, 1, 0, 0.765202,-0.000936115) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.714827,-0.00880166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330071,-0.0203188) , 
1, 1.08135, 1, 0, 0.519203,-0.00558892) , 
5, 0.0115181, 1, 0, 0.633974,-0.00341815) , 
6, 0.0208748, 1, 0, 0.50273,-0.00062286)    );
  // itree = 895
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872192,0.0242205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000650274,-0.0077487) , 
2, 0.118997, 1, 0, 0.627855,0.000550835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928355,-0.0147538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000158874,0.0301575) , 
0, 0.00470348, 1, 0, 0.188852,-0.000336218) , 
4, 0.00811712, 1, 0, 0.399891,9.02081e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931059,0.0306073) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811913,-0.00979564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87486,-0.0239627) , 
1, 1.15149, 1, 0, 0.838247,-0.00544086) , 
6, 0.0199977, 1, 0, 0.856994,-0.00411842) , 
7, 8.6792e-05, 1, 0, 0.497511,-0.000808593)    );
  // itree = 896
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97143,0.0837402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922833,0.0756852) , 
6, 0.0151626, 1, 0, 0.958299,0.000410416) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929772,-0.390711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900675,-0.021256) , 
2, 0.00636965, 1, 0, 0.904734,-0.00357768) , 
2, 0.00453404, 1, 0, 0.92186,-0.00230266) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798971,0.0259574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714572,-0.00160303) , 
5, 0.00885487, 1, 0, 0.75147,0.00109641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577956,-0.0189909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0769926,0.000621021) , 
2, 0.0897246, 1, 0, 0.130979,-0.000342461) , 
2, 0.0691775, 1, 0, 0.31385,8.16014e-05) , 
2, 0.0238066, 1, 0, 0.506324,-0.000673172)    );
  // itree = 897
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569682,-0.010059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.252824,0.00237025) , 
4, 0.00579627, 1, 0, 0.350769,-0.000117965) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730032,0.00734768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90238,-0.012635) , 
4, 0.00839897, 1, 0, 0.869163,-0.00148757) , 
7, 6.29301e-05, 1, 0, 0.485876,-0.000474918) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641409,0.0337204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582182,-0.019043) , 
4, 0.0115751, 1, 0, 0.616627,-0.000140205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617664,0.0625599) , 
6, 0.0238047, 1, 0, 0.616878,0.00085182) , 
6, 0.0220335, 1, 0, 0.501881,-0.000312827)    );
  // itree = 898
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533929,0.00204297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537686,-0.0204321) , 
3, 21.018, 1, 0, 0.534945,-0.000391938) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779094,0.0135247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00428545,-0.00878657) , 
2, 0.14284, 1, 0, 0.531715,0.000506568) , 
3, 29.4286, 1, 0, 0.533146,0.000108674) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911098,-0.0111117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013103) , 
0, 0.00470075, 1, 0, 0.246265,-0.00056921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802091,-0.0139734) , 
7, 8.67629e-05, 1, 0, 0.359194,-0.00135863) , 
3, 88.3003, 1, 0, 0.501748,-0.000156169)    );
  // itree = 899
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552587,0.0144039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372475,-0.0191898) , 
3, 86.9044, 1, 0, 0.523709,7.59562e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.382214,-0.0540246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906861,-0.0097299) , 
4, 0.0064129, 1, 0, 0.774975,-0.00348176) , 
7, 3.77684e-05, 1, 0, 0.616195,-0.00127677) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.733007,0.0120199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956625,0.0530839) , 
6, 0.0208788, 1, 0, 0.801609,0.00109061) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515412,-0.0110826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119117,0.0106276) , 
4, 0.0112146, 1, 0, 0.250094,-0.000579383) , 
2, 0.0475789, 1, 0, 0.423782,-5.34551e-05) , 
4, 0.00812296, 1, 0, 0.499802,-0.000536774)    );
  // itree = 900
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998069,0.0212026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0893637) , 
7, 9.88221e-05, 1, 0, 0.998641,0.000811398) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846883,-0.0260327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952928,-0.00427631) , 
0, 0.000855975, 1, 0, 0.939187,-0.00358523) , 
0, 0.000111645, 1, 0, 0.968181,-0.00144115) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00301524,0.00955809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00134466,-0.0113552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000879282,-0.00155771) , 
2, 0.142944, 1, 0, 0.00102057,-0.000221375) , 
4, 0.00810925, 1, 0, 0.00163006,-4.96899e-05) , 
0, 0.00235038, 1, 0, 0.500028,-0.000767188)    );
  // itree = 901
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977474,0.0157163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000236422,-0.02684) , 
0, 0.00176723, 1, 0, 0.661241,0.000229267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.126705,-0.0205676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490554,0.00177652) , 
4, 0.00927992, 1, 0, 0.389927,-0.000425881) , 
5, 0.00901902, 1, 0, 0.518301,-0.000115894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176488,-0.0166611) , 
3, 138.312, 1, 0, 0.49883,-0.00030236)    );
  // itree = 902
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97526,0.000312672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946848,-0.013058) , 
7, 0.000112841, 1, 0, 0.971334,-0.000555893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920382,-0.0299628) , 
0, 0.00212125, 1, 0, 0.967545,-0.00156153) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00354294,-0.00624708) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00306791,0.0333724) , 
6, 0.016238, 1, 0, 0.0010353,0.000238383) , 
2, 0.142927, 1, 0, 0.00179949,4.56454e-05) , 
0, 0.00235054, 1, 0, 0.505355,-0.000792365)    );
  // itree = 903
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.300834,0.000656662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.543057,0.0563834) , 
6, 0.0110653, 1, 0, 0.348034,0.000232715) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574293,0.0236735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573858,-0.069015) , 
1, 1.80203, 1, 0, 0.574162,-0.00121867) , 
6, 0.0129164, 1, 0, 0.392909,-5.53088e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622916,-0.00128649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627789,-0.0215447) , 
6, 0.0236425, 1, 0, 0.623415,-0.000917576) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577562,-0.0450342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506921,-0.0121784) , 
3, 49.9166, 1, 0, 0.548969,-0.00750167) , 
1, 1.46164, 1, 0, 0.607777,-0.00230058) , 
6, 0.0150758, 1, 0, 0.496119,-0.0011338)    );
  // itree = 904
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518151,-0.0114713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45479,0.000103453) , 
3, 25.1948, 1, 0, 0.475123,-0.000289984) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.590812,-0.00816157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630255,-0.020333) , 
1, 1.16523, 1, 0, 0.601524,-0.00323037) , 
6, 0.0209829, 1, 0, 0.489749,-0.000630222) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686397,0.0145186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704349,0.02287) , 
6, 0.023856, 1, 0, 0.693723,0.00195923) , 
6, 0.0231933, 1, 0, 0.502358,-0.000470153)    );
  // itree = 905
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928909,-0.0317945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.262309,0.00679745) , 
2, 0.0238008, 1, 0, 0.514973,-0.00276365) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509431,0.00848051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403028,-0.0132249) , 
3, 60.4826, 1, 0, 0.466867,-0.000165845) , 
3, 12.5768, 1, 0, 0.474629,-0.000584999) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66438,-0.00100459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637115,0.00780733) , 
3, 49.251, 1, 0, 0.651659,0.000578468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603692,-0.0302552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620803,-0.0101526) , 
1, 1.11046, 1, 0, 0.61698,-0.00529669) , 
1, 1.08918, 1, 0, 0.628711,-0.00330922) , 
6, 0.0208771, 1, 0, 0.50169,-0.00106344)    );
  // itree = 906
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.241827,0.0260485) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98402,0.00113744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709549,0.0581722) , 
2, 0.0237155, 1, 0, 0.830709,0.00169494) , 
7, 3.2087e-05, 1, 0, 0.538872,0.000913357) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60837,-0.00667255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882902,-0.0108992) , 
7, 9.49377e-05, 1, 0, 0.660528,-0.000906346) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927629,0.0153198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.81248e-05,0.00837938) , 
0, 0.00470108, 1, 0, 0.1264,0.000303896) , 
4, 0.0115941, 1, 0, 0.496452,-0.000534577) , 
3, 12.6161, 1, 0, 0.503326,-0.000299939)    );
  // itree = 907
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973142,0.031927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00391426,-0.00501021) , 
0, 0.00185141, 1, 0, 0.658287,0.000646049) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226642,-0.0130823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370919,0.00631148) , 
5, 0.00853313, 1, 0, 0.333458,-0.000227061) , 
4, 0.00812304, 1, 0, 0.479224,0.000164745) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662643,-0.0193539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583652,0.016805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61867,-0.0132211) , 
6, 0.0227936, 1, 0, 0.603184,-0.00105287) , 
6, 0.0213726, 1, 0, 0.611793,-0.00168028) , 
6, 0.0208755, 1, 0, 0.502977,-0.00016583)    );
  // itree = 908
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92059,-0.0161784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747657,-0.019201) , 
2, 0.0258963, 1, 0, 0.891325,-0.00116704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791038,0.0435258) , 
2, 0.0362723, 1, 0, 0.879813,-0.00089431) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.528175,0.0124024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833493,-0.0104486) , 
6, 0.0220326, 1, 0, 0.591065,0.000917359) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.335502,-0.00442374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130974) , 
0, 0.00470348, 1, 0, 0.0306748,-0.000330889) , 
2, 0.112279, 1, 0, 0.207991,6.40749e-05) , 
2, 0.0476132, 1, 0, 0.506683,-0.000362023)    );
  // itree = 909
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942807,-0.00938803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95912,0.0243558) , 
7, 0.000108121, 1, 0, 0.944413,-0.000622879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922407,-0.026501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90683,0.0132884) , 
0, 0.00201422, 1, 0, 0.914334,-0.00666808) , 
4, 0.0110986, 1, 0, 0.940231,-0.00146337) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130972) , 
2, 0.108917, 1, 0, 0,-7.20353e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00015738,0.0229604) , 
2, 0.380935, 1, 0, 3.66231e-05,-3.19528e-05) , 
0, 0.00470075, 1, 0, 0.497305,-0.000789027)    );
  // itree = 910
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978415,0.0710486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17131,-0.0112809) , 
2, 0.0238066, 1, 0, 0.62498,-0.000459941) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.540092,-0.0649941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476412,-0.013687) , 
3, 82.1917, 1, 0, 0.503713,-0.00562889) , 
3, 62.9869, 1, 0, 0.589647,-0.00196599) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595922,-0.00298655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849615,0.0224135) , 
5, 0.0104528, 1, 0, 0.640501,0.000201213) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927213,-0.0119368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.36798e-05,0.00272194) , 
0, 0.00470304, 1, 0, 0.172812,-0.000730588) , 
5, 0.0115531, 1, 0, 0.469036,-0.000140407) , 
4, 0.00695154, 1, 0, 0.50495,-0.000684013)    );
  // itree = 911
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811319,-0.00279973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964574,-0.0149429) , 
7, 9.05025e-05, 1, 0, 0.848084,-0.000742401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492583,-0.0217491) , 
2, 0.0770293, 1, 0, 0.822013,-0.00120763) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.116517,-0.00404055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013094) , 
0, 0.0117517, 1, 0, 0.0206951,-0.000142715) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.266167,0.0477299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349171,0.00731347) , 
6, 0.0228623, 1, 0, 0.30543,0.00209319) , 
6, 0.0208733, 1, 0, 0.070339,0.000247118) , 
2, 0.095209, 1, 0, 0.501188,-0.000586723)    );
  // itree = 912
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.414029,0.016554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66996,-0.0257927) , 
4, 0.00398086, 1, 0, 0.479683,-0.000931893) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973862,0.0132385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000598319,-0.00523861) , 
0, 0.00235174, 1, 0, 0.48279,0.000506101) , 
4, 0.00464475, 1, 0, 0.482299,0.000279002) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56975,-0.025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645898,-0.0141554) , 
6, 0.023158, 1, 0, 0.622332,-0.00493358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60051,0.0109697) , 
1, 1.11893, 1, 0, 0.617454,-0.0036071) , 
6, 0.0220335, 1, 0, 0.498701,-0.000192587)    );
  // itree = 913
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620201,-0.000549804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762464,-0.0242144) , 
4, 0.00772281, 1, 0, 0.632393,-0.000481636) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609225,0.0340434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0256018,-0.00800041) , 
2, 0.0713937, 1, 0, 0.207184,0.000211075) , 
4, 0.00811084, 1, 0, 0.413231,-0.000124597) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962976,-0.0198363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990632,0.0437656) , 
5, 0.0102533, 1, 0, 0.981978,0.000735961) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668912,-0.0230954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808287,-0.00339679) , 
1, 1.16308, 1, 0, 0.733112,-0.00544911) , 
0, 0.000942433, 1, 0, 0.840755,-0.00277385) , 
7, 8.85521e-05, 1, 0, 0.501592,-0.000672146)    );
  // itree = 914
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973219,0.0207826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00160706,-0.0299163) , 
0, 0.00176723, 1, 0, 0.588731,-2.0351e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972227,-0.0508146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646426,0.0108948) , 
0, 0.000986635, 1, 0, 0.77907,-0.00203381) , 
7, 5.30837e-05, 1, 0, 0.643546,-0.000600206) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677887,0.0175915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00395494,-0.00905681) , 
2, 0.142842, 1, 0, 0.406128,0.000587761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.40734,-0.0151806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.273337,0.00942542) , 
3, 82.1266, 1, 0, 0.315911,-0.000714356) , 
3, 62.929, 1, 0, 0.373208,0.000112618) , 
5, 0.00898341, 1, 0, 0.496529,-0.000212555)    );
  // itree = 915
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948467,0.0156869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946663,0.0544253) , 
6, 0.0162762, 1, 0, 0.947864,0.000878108) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.312238,-0.00731719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.331196,0.00299369) , 
3, 25.1956, 1, 0, 0.323481,-0.000261931) , 
2, 0.0238066, 1, 0, 0.534547,0.000123446) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505132,-0.0366122) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975256,0.0123904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00250895,-0.013265) , 
0, 0.00234734, 1, 0, 0.380566,-0.000329023) , 
3, 84.582, 1, 0, 0.40468,-0.00186544) , 
3, 75.5838, 1, 0, 0.502309,-0.000370261)    );
  // itree = 916
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909397,0.0143305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444517,-0.00974341) , 
2, 0.0270299, 1, 0, 0.772559,-0.000384372) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785362,0.0637782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896194,0.00808449) , 
6, 0.0170123, 1, 0, 0.882229,0.00105692) , 
6, 0.016239, 1, 0, 0.822703,0.00027462) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61562,-0.00698632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44413,-0.00758247) , 
0, 0.00179041, 1, 0, 0.522928,-0.00436419) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130976) , 
3, 75.5396, 1, 0, 0,-4.7096e-05) , 
0, 0.00470068, 1, 0, 0.0697581,-0.000622992) , 
2, 0.0952207, 1, 0, 0.503374,-0.000106062)    );
  // itree = 917
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.410314,-0.00129228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568724,-0.0204935) , 
6, 0.0160864, 1, 0, 0.422453,-0.000375814) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651146,0.0303522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.496598,-0.00919127) , 
3, 87.736, 1, 0, 0.622937,0.000732476) , 
6, 0.0168955, 1, 0, 0.472146,-0.000101107) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670221,-0.0238599) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64282,-0.0286349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626951,0.0074418) , 
5, 0.0113077, 1, 0, 0.631264,0.000201541) , 
6, 0.0217037, 1, 0, 0.64048,-0.00171791) , 
6, 0.0208739, 1, 0, 0.501775,-0.000385681)    );
  // itree = 918
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.32587,0.0164914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602211,0.1158) , 
6, 0.0107673, 1, 0, 0.435126,0.000828827) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.424517,-0.00806731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.256392,0.0176191) , 
3, 84.3513, 1, 0, 0.384426,-0.00016439) , 
3, 12.563, 1, 0, 0.392965,2.89272e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792254,-0.015917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428216,-0.0061864) , 
5, 0.0110464, 1, 0, 0.656479,-0.00299183) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591563,0.00495646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593551,-0.0163331) , 
6, 0.0234693, 1, 0, 0.591789,-0.000386702) , 
3, 37.6035, 1, 0, 0.62014,-0.00152839) , 
6, 0.0150758, 1, 0, 0.501598,-0.000729353)    );
  // itree = 919
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.428661,5.15874e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61667,-0.0163946) , 
6, 0.0168353, 1, 0, 0.442156,-0.000175633) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819864,0.0120057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132453,-0.00999694) , 
5, 0.0114485, 1, 0, 0.624015,0.000537329) , 
6, 0.0176771, 1, 0, 0.496098,3.58431e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.565109,-0.0160193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65209,-0.000620221) , 
1, 1.06237, 1, 0, 0.617851,-0.00148153) , 
6, 0.0231942, 1, 0, 0.504248,-6.57279e-05)    );
  // itree = 920
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.25083,-0.0193466) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82873,0.0161354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0490807,-0.0031993) , 
2, 0.095209, 1, 0, 0.497857,0.000411373) , 
5, 0.00218739, 1, 0, 0.487154,0.000288541) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656242,0.00567119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6062,-0.0239847) , 
3, 49.2372, 1, 0, 0.6328,-0.0035614) , 
6, 0.0231935, 1, 0, 0.496646,3.76338e-05)    );
  // itree = 921
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831289,0.0444849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000681148,-0.0115121) , 
2, 0.0475144, 1, 0, 0.333046,0.000136117) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674816,-0.0241488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499628,0.00279895) , 
4, 0.00809916, 1, 0, 0.573799,-0.000780455) , 
6, 0.0122034, 1, 0, 0.45384,-0.000323757) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633379,-0.019188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620991,0.00888375) , 
1, 1.07223, 1, 0, 0.624575,-0.000441288) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71864,0.0315785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548022,-0.0176689) , 
4, 0.0104164, 1, 0, 0.640869,-0.00451438) , 
1, 1.1603, 1, 0, 0.631484,-0.00216832) , 
6, 0.0197143, 1, 0, 0.49635,-0.000765169)    );
  // itree = 922
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971141,-0.000143476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00231026,-0.0232597) , 
0, 0.00176723, 1, 0, 0.663933,-0.000536324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522554,0.0114857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.92235e-05,-0.0335421) , 
4, 0.0116116, 1, 0, 0.336082,0.00031306) , 
5, 0.00899935, 1, 0, 0.493045,-9.35948e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917137,0.0288473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431608,-0.0113605) , 
2, 0.0711517, 1, 0, 0.653605,-0.00257213) , 
6, 0.0231935, 1, 0, 0.503257,-0.000251235)    );
  // itree = 923
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981904,0.0188663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846023,-0.0594229) , 
4, 0.00693089, 1, 0, 0.926404,-0.00100148) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0328986,-0.00496677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779502,0.011106) , 
7, 4.18238e-05, 1, 0, 0.217044,0.000220322) , 
2, 0.0238066, 1, 0, 0.458015,-0.000194727) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945449,-0.0348879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615772,-0.0117114) , 
2, 0.0239011, 1, 0, 0.693639,-0.0049253) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.529938,-0.013017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486772,0.030381) , 
3, 35.3069, 1, 0, 0.503567,0.000110676) , 
4, 0.0115966, 1, 0, 0.630865,-0.0032621) , 
6, 0.0197155, 1, 0, 0.499527,-0.00093138)    );
  // itree = 924
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99524,0.0100428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82707,-0.00815252) , 
2, 0.0681327, 1, 0, 0.976908,-0.000216796) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972885,-0.0184126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944521,-0.0284244) , 
0, 0.00122993, 1, 0, 0.962192,-0.00429059) , 
3, 35.9538, 1, 0, 0.968968,-0.00241474) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00847812,0.00968578) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00031275,0.0560396) , 
2, 0.357043, 1, 0, 9.11483e-05,3.96246e-05) , 
0, 0.0158259, 1, 0, 0.00178273,0.000180034) , 
0, 0.00235174, 1, 0, 0.511233,-0.00118673)    );
  // itree = 925
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842239,0.0142561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0535195,-0.00975864) , 
2, 0.0180897, 1, 0, 0.476744,-0.00029356) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000355987,0.100762) , 
7, -8.45973e-05, 1, 0, 0.000110304,6.18282e-05) , 
2, 0.0952207, 1, 0, 0.169093,-6.41691e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972482,-0.0222977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535535,-0.0166563) , 
2, 0.0475818, 1, 0, 0.820751,-0.00384317) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625837,-0.0583794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838671,0.00306333) , 
4, 0.00631874, 1, 0, 0.804743,-0.000507089) , 
3, 50.1894, 1, 0, 0.814357,-0.0025107) , 
7, 2.58352e-05, 1, 0, 0.499823,-0.00131814)    );
  // itree = 926
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.377171,-0.0322824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308358,0.00917538) , 
3, 12.5856, 1, 0, 0.318902,-7.20415e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912234,-0.0587892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845332,-0.00264253) , 
6, 0.0156738, 1, 0, 0.856013,-0.00129159) , 
7, 5.21796e-05, 1, 0, 0.471652,-0.000418872) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925665,0.0800191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894266,0.0912121) , 
3, 35.3927, 1, 0, 0.908531,0.00233954) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.375085,-0.00512229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379972,0.00839582) , 
6, 0.0228624, 1, 0, 0.37749,4.72715e-05) , 
2, 0.0713937, 1, 0, 0.624675,0.00111426) , 
6, 0.0208739, 1, 0, 0.498187,-0.000153018)    );
  // itree = 927
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944646,-0.00568186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7672,-0.013781) , 
4, 0.00810118, 1, 0, 0.869795,-0.000958896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619061,0.0192918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0539896,-0.00187613) , 
2, 0.0906779, 1, 0, 0.176937,0.000276241) , 
2, 0.0476045, 1, 0, 0.487497,-0.000277384) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641444,-0.000976953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619477,-0.0345755) , 
3, 58.2738, 1, 0, 0.63282,-0.00352502) , 
6, 0.0231933, 1, 0, 0.496765,-0.000484502)    );
  // itree = 928
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.546245,0.00621625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493632,-0.0172659) , 
3, 12.3324, 1, 0, 0.538057,-0.000347264) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.213155,-0.00837584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819377,0.0245633) , 
7, 2.91875e-05, 1, 0, 0.523311,0.000722714) , 
3, 14.388, 1, 0, 0.527873,0.000391706) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.416408,-0.00806547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.25387,0.0389044) , 
3, 91.1188, 1, 0, 0.35183,-5.88987e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944885,-0.0236736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777519,0.00471261) , 
0, 0.00180884, 1, 0, 0.858698,-0.0040648) , 
7, 8.68798e-05, 1, 0, 0.460032,-0.000914052) , 
3, 50.3557, 1, 0, 0.499261,-0.000159004)    );
  // itree = 929
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.246549,-0.0210147) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791571,0.00325619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00132063,-0.00858024) , 
2, 0.119033, 1, 0, 0.487438,3.13541e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669892,0.0162883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642988,-0.0150564) , 
1, 1.08923, 1, 0, 0.652608,-0.00188877) , 
6, 0.0208739, 1, 0, 0.517083,-0.000336429) , 
5, 0.00224904, 1, 0, 0.504868,-0.00048255)    );
  // itree = 930
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937753,-0.00613532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939332,-0.0427905) , 
6, 0.0208913, 1, 0, 0.937934,-0.00120412) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711964,0.0202511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0601262,-0.00446307) , 
2, 0.0918492, 1, 0, 0.319013,0.00046447) , 
2, 0.0238066, 1, 0, 0.530143,-0.000104729) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965071,-0.00971533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840042,-0.0161639) , 
0, 0.00155383, 1, 0, 0.922613,-0.00298729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131112) , 
0, 0.00470075, 1, 0, 0.427122,-0.00143106) , 
3, 62.9865, 1, 0, 0.496185,-0.000541914)    );
  // itree = 931
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998677,0.00523839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980658,-0.0288167) , 
8, 0.0389799, 1, 0, 0.99675,-0.0005219) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880188,-0.0178634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919343,0.0206914) , 
0, 0.00201321, 1, 0, 0.888196,-0.00527511) , 
2, 0.0474351, 1, 0, 0.970287,-0.00168064) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0033441,-0.0110287) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0014202,0.0268431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000219112,-0.0112033) , 
5, 0.0113991, 1, 0, 0.000677472,0.000111488) , 
2, 0.0951916, 1, 0, 0.00122202,-7.01509e-05) , 
0, 0.00235174, 1, 0, 0.501688,-0.000901874)    );
  // itree = 932
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968499,0.0102679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135281) , 
0, 0.00235152, 1, 0, 0.238434,-8.41219e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972726,-0.0105044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529072,-0.0163648) , 
2, 0.0475801, 1, 0, 0.819825,-0.00364386) , 
7, 3.05612e-05, 1, 0, 0.540938,-0.00193629) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526537,-0.00366125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50582,-0.0226669) , 
3, 56.1284, 1, 0, 0.524857,-0.000647063) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622643,0.0167535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000516201,-0.0150002) , 
2, 0.237921, 1, 0, 0.443826,0.000281753) , 
3, 59.3891, 1, 0, 0.483481,-0.000172791) , 
3, 25.1948, 1, 0, 0.50133,-0.000720628)    );
  // itree = 933
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993058,-0.0060625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984098,-0.0280448) , 
0, 0.0020096, 1, 0, 0.992238,-0.000809049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684997,-0.00907454) , 
2, 0.0948702, 1, 0, 0.966847,-0.00129222) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000785116,-0.00806311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000838029,0.0302764) , 
4, 0.0104457, 1, 0, 0.000815401,-2.97661e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00292048,0.0247378) , 
3, 88.3036, 1, 0, 0.00135524,0.000110411) , 
0, 0.00235174, 1, 0, 0.499081,-0.000612668)    );
  // itree = 934
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.410799,0.0128138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874259,0.0202107) , 
7, 6.4549e-05, 1, 0, 0.536329,0.000739635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640186,-0.0121698) , 
6, 0.0220335, 1, 0, 0.547529,0.000342168) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506345,0.00969501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000136737,-0.0136998) , 
2, 0.0712629, 1, 0, 0.134495,-5.34816e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824948,-0.0207399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794431,-0.000662291) , 
3, 70.083, 1, 0, 0.813938,-0.00282833) , 
7, 2.23526e-05, 1, 0, 0.476912,-0.00145192) , 
3, 25.2314, 1, 0, 0.498886,-0.000893634)    );
  // itree = 935
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879912,-0.0184493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659627,0.00887507) , 
2, 0.0431315, 1, 0, 0.823528,-0.000954574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431431,-0.0115397) , 
2, 0.0905878, 1, 0, 0.789346,-0.00125205) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00130533,-0.0142586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000915811,0.027982) , 
2, 0.300351, 1, 0, 0.00110408,-0.000192302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145135,0.0531215) , 
6, 0.020874, 1, 0, 0.0224007,0.000406608) , 
2, 0.119004, 1, 0, 0.495284,-0.00061609)    );
  // itree = 936
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502976,0.00245869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537894,-0.0332712) , 
7, 1.78145e-05, 1, 0, 0.510663,-0.00101168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975717,0.0220181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00083399,-0.00370981) , 
0, 0.00234767, 1, 0, 0.472892,0.000521731) , 
4, 0.00464578, 1, 0, 0.479182,0.000266393) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622114,-0.016522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608267,0.0202466) , 
3, 37.8602, 1, 0, 0.614069,-0.000497931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637578,-0.0215091) , 
1, 1.15556, 1, 0, 0.619959,-0.00244908) , 
6, 0.0208748, 1, 0, 0.504177,-0.000215738)    );
  // itree = 937
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999106,0.023431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973891,-0.0280849) , 
0, 0.00175219, 1, 0, 0.996067,-0.000225759) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810132,-0.0158729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906515,-0.00751766) , 
4, 0.00909705, 1, 0, 0.867074,-0.00394167) , 
2, 0.0237175, 1, 0, 0.937168,-0.00192246) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130943) , 
2, 0.142853, 1, 0, 0,-4.97802e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130999) , 
3, 88.188, 1, 0, 0,-6.41743e-05) , 
0, 0.00470108, 1, 0, 0.498192,-0.00105202)    );
  // itree = 938
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874986,0.0398739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613026,0.0254767) , 
4, 0.00347986, 1, 0, 0.685001,0.000316498) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00146826,-0.0136935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000133407,0.0277571) , 
4, 0.00812137, 1, 0, 0.000520798,-0.000137761) , 
2, 0.0476132, 1, 0, 0.187258,-1.38321e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823758,-0.000709441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840493,-0.0240791) , 
3, 20.5489, 1, 0, 0.832402,-0.00291551) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849938,0.00259276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63687,-0.0128064) , 
5, 0.0114237, 1, 0, 0.809897,-0.000657781) , 
3, 47.9516, 1, 0, 0.822789,-0.00195112) , 
7, 2.88482e-05, 1, 0, 0.503095,-0.000976597)    );
  // itree = 939
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655706,0.014838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60869,-0.0197043) , 
3, 24.7474, 1, 0, 0.624133,-0.000805518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710295,-0.0306385) , 
4, 0.00882178, 1, 0, 0.631311,-0.00119516) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970554,0.0143394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000924915,-0.00540878) , 
0, 0.00235152, 1, 0, 0.400194,0.000520118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169384,-0.0204658) , 
3, 125.854, 1, 0, 0.37704,0.000285007) , 
4, 0.00926497, 1, 0, 0.504793,-0.000458672)    );
  // itree = 940
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973239,-0.0451529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807701,0.0687593) , 
5, 0.00790168, 1, 0, 0.927697,-0.000806952) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92628,-0.0113266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944369,-0.0365322) , 
1, 1.15927, 1, 0, 0.935384,-0.00387386) , 
6, 0.0197403, 1, 0, 0.929003,-0.00132805) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.26148,-0.0011321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525555,-0.0156649) , 
6, 0.0208731, 1, 0, 0.313009,-0.00102814) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.271839,0.00276742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572335,0.0252086) , 
6, 0.022034, 1, 0, 0.315344,0.000472175) , 
3, 25.2314, 1, 0, 0.314649,2.58337e-05) , 
2, 0.0238066, 1, 0, 0.507893,-0.000400028)    );
  // itree = 941
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967118,-0.0162338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976645,0.0244987) , 
5, 0.0104175, 1, 0, 0.968596,-0.00131982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9544,-0.0201397) , 
4, 0.0115583, 1, 0, 0.96736,-0.00172054) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00371891,-0.00564711) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00227453,0.0254808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130966) , 
0, 0.0202592, 1, 0, 0.000662483,0.000130641) , 
2, 0.14284, 1, 0, 0.00157374,-3.42265e-06) , 
0, 0.00235174, 1, 0, 0.502287,-0.000893665)    );
  // itree = 942
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978372,0.0187703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0340333,-0.0191409) , 
0, 0.00171888, 1, 0, 0.662514,0.000145149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739763,-0.0126891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000111653,0.00679982) , 
0, 0.00940215, 1, 0, 0.0601202,-0.000342116) , 
5, 0.00901902, 1, 0, 0.403406,-6.44392e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897417,-0.0175719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897789,0.0338443) , 
3, 32.3492, 1, 0, 0.897637,0.000191361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72884,-0.024808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842001,0.000378013) , 
4, 0.0112431, 1, 0, 0.804609,-0.00404466) , 
6, 0.0216308, 1, 0, 0.851889,-0.00189176) , 
7, 8.67922e-05, 1, 0, 0.500391,-0.0004596)    );
  // itree = 943
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.269908,-0.0224131) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.531409,-0.00927592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560935,0.00823019) , 
3, 2.40039, 1, 0, 0.557906,0.000211464) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533409,-0.0263667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491292,-0.00449057) , 
3, 36.5943, 1, 0, 0.499212,-0.000657233) , 
3, 25.1953, 1, 0, 0.517423,-0.000387702) , 
5, 0.00231625, 1, 0, 0.5071,-0.000491941)    );
  // itree = 944
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.399435,0.00683017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844356,0.0176801) , 
7, 6.29298e-05, 1, 0, 0.523133,0.000534484) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505104,-0.016353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406829,0.00801542) , 
3, 59.403, 1, 0, 0.442364,-0.000118341) , 
3, 37.7921, 1, 0, 0.478606,0.000174593) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61206,0.00128529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573736,-0.0282669) , 
6, 0.0225647, 1, 0, 0.592572,-0.00489101) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655086,0.0193647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609288,-0.00920623) , 
3, 59.0005, 1, 0, 0.637088,-0.000227762) , 
6, 0.0231419, 1, 0, 0.616386,-0.00239639) , 
6, 0.0220364, 1, 0, 0.495486,-0.000140388)    );
  // itree = 945
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92241,-0.0129576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77107,-0.014812) , 
2, 0.028018, 1, 0, 0.877682,-0.00109909) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662551,-0.0285182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.505075,-0.00867936) , 
2, 0.0692444, 1, 0, 0.55428,-0.00582405) , 
2, 0.0588764, 1, 0, 0.823566,-0.00188973) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0014946,-0.00782211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000417293,0.0209376) , 
2, 0.230204, 1, 0, 0.000782034,-6.15784e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520917,0.00301937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568193,0.00952049) , 
6, 0.0224825, 1, 0, 0.544891,0.00133817) , 
7, 8.68506e-05, 1, 0, 0.0685446,0.000112745) , 
2, 0.0952032, 1, 0, 0.500005,-0.00103158)    );
  // itree = 946
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975722,0.0399242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495966,-0.0101144) , 
4, 0.009238, 1, 0, 0.923596,0.000406027) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949882,0.0827853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926711,0.0863166) , 
6, 0.021722, 1, 0, 0.937976,0.00221763) , 
6, 0.0197414, 1, 0, 0.925987,0.000707172) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.173872,-0.00380429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518694,0.0307071) , 
6, 0.0178921, 1, 0, 0.243118,1.36576e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.557114,-0.0142457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557878,0.00175164) , 
1, 1.09668, 1, 0, 0.557572,-0.00153753) , 
6, 0.0208737, 1, 0, 0.305308,-0.000293126) , 
2, 0.0238066, 1, 0, 0.4982,1.77419e-05)    );
  // itree = 947
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979735,-0.00222547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964657,-0.0265389) , 
6, 0.0151322, 1, 0, 0.973068,-0.00191243) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946432,0.0263164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970309,-0.0074605) , 
6, 0.0198999, 1, 0, 0.956756,0.000429339) , 
0, 0.00133974, 1, 0, 0.967688,-0.00114012) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00737729,0.00824486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000158373,0.0202515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131903) , 
6, 0.0057987, 1, 0, 4.4147e-05,-3.4296e-05) , 
0, 0.0158051, 1, 0, 0.00148888,0.000106209) , 
0, 0.00235174, 1, 0, 0.497761,-0.000533947)    );
  // itree = 948
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821041,-0.0160681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332348,-0.0020537) , 
5, 0.0077837, 1, 0, 0.628055,-0.000876297) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73644,-0.0334833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698261,-0.0231663) , 
3, 45.4799, 1, 0, 0.718911,-0.00741992) , 
7, 7.51332e-05, 1, 0, 0.638527,-0.00163052) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.331605,-0.0104555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.324176,0.0172552) , 
3, 12.6161, 1, 0, 0.325273,0.000390969) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777701,0.034042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756594,-0.0158534) , 
6, 0.0236917, 1, 0, 0.766302,-0.00255302) , 
6, 0.0231946, 1, 0, 0.373545,6.87406e-05) , 
4, 0.00927977, 1, 0, 0.505162,-0.000775282)    );
  // itree = 949
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244571,-0.00358615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467166,-0.0299566) , 
6, 0.00908414, 1, 0, 0.271112,-0.000279625) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972404,0.0209293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134753) , 
0, 0.00235152, 1, 0, 0.56155,0.000699815) , 
6, 0.0100507, 1, 0, 0.411141,0.000192593) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527164,-0.0290307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60921,0.00362222) , 
6, 0.0168452, 1, 0, 0.595416,-0.000558) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923535,-0.0264152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540833,-0.00750174) , 
2, 0.023981, 1, 0, 0.623103,-0.00256908) , 
6, 0.0204886, 1, 0, 0.608238,-0.00148932) , 
6, 0.0162354, 1, 0, 0.493955,-0.0005141)    );
  // itree = 950
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518969,-0.0231653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515795,-0.00639921) , 
3, 7.21071, 1, 0, 0.516312,-0.0006302) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649325,-0.000597647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608015,-0.0170931) , 
3, 28.8264, 1, 0, 0.632407,-0.00380826) , 
6, 0.0208781, 1, 0, 0.536154,-0.00117338) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.155733,-0.00418488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832592,0.0408939) , 
7, 1.14896e-05, 1, 0, 0.602343,0.000999733) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.289383,-0.00953018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72391,0.0125141) , 
6, 0.0231936, 1, 0, 0.338318,-0.000197711) , 
4, 0.00927977, 1, 0, 0.456767,0.000339493) , 
3, 50.4597, 1, 0, 0.502333,-0.000528857)    );
  // itree = 951
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946837,0.0221846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131333) , 
0, 0.00470304, 1, 0, 0.499209,0.000661194) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646933,-0.0146066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.230788,0.00622885) , 
5, 0.00834243, 1, 0, 0.431861,-0.000556566) , 
3, 25.1779, 1, 0, 0.453318,-0.000168582) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600708,-0.00573125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636914,0.011428) , 
3, 24.397, 1, 0, 0.626577,0.000722273) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909895,-0.0552664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489316,-0.0107201) , 
2, 0.0476465, 1, 0, 0.662314,-0.00632609) , 
1, 1.18132, 1, 0, 0.638993,-0.0017264) , 
6, 0.0197143, 1, 0, 0.497483,-0.000539129)    );
  // itree = 952
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.403953,-0.000418051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837099,-0.0168527) , 
7, 6.49061e-05, 1, 0, 0.520305,-0.00121851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.482548,-0.0166254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459688,0.00718152) , 
4, 0.00464578, 1, 0, 0.463117,0.000111789) , 
3, 25.1948, 1, 0, 0.481128,-0.000307169) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603112,-0.000872339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616733,-0.0265165) , 
6, 0.0225609, 1, 0, 0.60981,-0.00570576) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614811,0.00265298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677242,0.0552475) , 
1, 1.07489, 1, 0, 0.637738,0.00119601) , 
6, 0.0231399, 1, 0, 0.625741,-0.00176866) , 
6, 0.0220339, 1, 0, 0.498499,-0.000482725)    );
  // itree = 953
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267884,0.0222282) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.179262,-0.0104756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0003204,0.0398803) , 
2, 0.357099, 1, 0, 0.135138,-3.20753e-05) , 
4, 0.00232195, 1, 0, 0.147864,1.76719e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978906,-0.0130347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583642,-0.0139885) , 
2, 0.0476045, 1, 0, 0.851496,-0.00178668) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629096,0.0280525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607989,-0.00157505) , 
3, 58.1884, 1, 0, 0.620755,0.00116646) , 
5, 0.0113053, 1, 0, 0.810887,-0.00126694) , 
7, 2.23527e-05, 1, 0, 0.493194,-0.000651407)    );
  // itree = 954
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950656,0.0439097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911164,-0.0140596) , 
2, 0.0135847, 1, 0, 0.938762,0.000240247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928835,-0.0520365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871504,0.0621469) , 
3, 66.7722, 1, 0, 0.894932,-0.00467592) , 
3, 47.5315, 1, 0, 0.92176,-0.00166682) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820508,0.0451191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668384,-0.000196376) , 
4, 0.00926387, 1, 0, 0.743211,0.00127251) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798545,-0.00643379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00100827,0.00642882) , 
0, 0.00235174, 1, 0, 0.130487,-0.000410669) , 
2, 0.0691354, 1, 0, 0.307059,7.43822e-05) , 
2, 0.0237994, 1, 0, 0.499854,-0.000471731)    );
  // itree = 955
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.35561,-0.00583635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584208,-0.0108944) , 
6, 0.0115285, 1, 0, 0.385685,-0.000275628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.890783,0.030805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0986587,-0.00299066) , 
2, 0.0951974, 1, 0, 0.638539,0.00104156) , 
6, 0.0127585, 1, 0, 0.535069,0.000502557) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895239,-0.0472972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145981,0.0144286) , 
2, 0.0238023, 1, 0, 0.364837,0.000116368) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918207,0.0852711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525219,-0.013535) , 
2, 0.0237376, 1, 0, 0.60079,-0.00191092) , 
6, 0.0174054, 1, 0, 0.448769,-0.000604766) , 
3, 50.3893, 1, 0, 0.498266,3.03357e-05)    );
  // itree = 956
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691444,-0.00896992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.14278,0.0390686) , 
5, 0.00757517, 1, 0, 0.414435,-9.79043e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601015,-0.0205776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609179,-0.00608414) , 
6, 0.0175136, 1, 0, 0.607992,-0.00155659) , 
6, 0.0165654, 1, 0, 0.484716,-0.000627553) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677127,-0.00319495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609695,-0.0367496) , 
3, 48.5518, 1, 0, 0.644831,-0.00636374) , 
6, 0.0231932, 1, 0, 0.494406,-0.000974716)    );
  // itree = 957
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886139,-0.0133612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741398,0.0456429) , 
2, 0.0466919, 1, 0, 0.873474,-0.00079128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625358,-0.0348017) , 
2, 0.0577102, 1, 0, 0.851716,-0.00156566) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80479,0.0302724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851463,-0.00190058) , 
3, 69.8254, 1, 0, 0.823,0.00396375) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000671698,-0.00784398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000696444,0.0208456) , 
2, 0.316293, 1, 0, 0.000682305,-6.77773e-05) , 
0, 0.00235174, 1, 0, 0.126553,0.000549319) , 
2, 0.0714024, 1, 0, 0.503094,-0.000548886)    );
  // itree = 958
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966673,-0.0455832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843325,-0.0268043) , 
2, 0.020377, 1, 0, 0.935461,-0.00259692) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.174484,0.0123419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0007151,-0.0126068) , 
5, 0.00924802, 1, 0, 0.0623158,9.34806e-05) , 
2, 0.0475653, 1, 0, 0.607433,-0.00158617) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517293,-0.00102534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845556,0.0186562) , 
6, 0.0220363, 1, 0, 0.581259,0.000354319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0154112) , 
2, 0.261811, 1, 0, 0.42582,7.29429e-06) , 
4, 0.00811879, 1, 0, 0.498053,-0.000626476)    );
  // itree = 959
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620484,-0.0407769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598133,-0.00643969) , 
3, 12.5918, 1, 0, 0.601994,-0.00103704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816294,0.0358178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0752319,-0.00499695) , 
2, 0.0475987, 1, 0, 0.303342,8.5095e-05) , 
5, 0.00683485, 1, 0, 0.409089,-0.000312229) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867155,-0.00255207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827601,-0.0303027) , 
3, 30.8883, 1, 0, 0.849833,-0.00356445) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.890648,-0.0150763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848593,0.0367795) , 
6, 0.0210939, 1, 0, 0.865797,-0.000172989) , 
3, 58.9899, 1, 0, 0.855416,-0.00237833) , 
7, 8.68799e-05, 1, 0, 0.505109,-0.000756718)    );
  // itree = 960
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830825,0.0167128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00349963,-0.0170231) , 
2, 0.094994, 1, 0, 0.501934,0.000199531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668062,0.00486647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660317,0.0638724) , 
3, 26.9706, 1, 0, 0.665951,0.001316) , 
6, 0.0197142, 1, 0, 0.539705,0.00045664) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.521546,-0.00391353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491504,-0.0523213) , 
3, 55.2076, 1, 0, 0.516561,-0.00163179) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608301,0.0154649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000354313,-0.0140438) , 
2, 0.261825, 1, 0, 0.439432,0.000316622) , 
3, 59.3329, 1, 0, 0.467039,-0.000380781) , 
3, 37.7559, 1, 0, 0.499913,-1.93472e-06)    );
  // itree = 961
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0365885,-0.0121121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859525,0.0213126) , 
7, 5.04565e-06, 1, 0, 0.374637,0.000124191) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584269,-0.026444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619567,-0.00398715) , 
6, 0.0168844, 1, 0, 0.60928,-0.00125708) , 
6, 0.0143609, 1, 0, 0.484643,-0.000523379) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724192,-0.0396931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.574898,0.00202108) , 
5, 0.0118853, 1, 0, 0.638495,-0.00649155) , 
6, 0.0231937, 1, 0, 0.494343,-0.00089967)    );
  // itree = 962
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694971,-0.00981071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253991,0.0280016) , 
5, 0.0107432, 1, 0, 0.542204,-0.000242435) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972929,0.0201987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000968229,-0.00896535) , 
0, 0.0023325, 1, 0, 0.53532,0.000739981) , 
3, 46.2512, 1, 0, 0.53985,9.3501e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513006,-0.02312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.221346,0.00582627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836438,-0.0110922) , 
7, 8.8883e-05, 1, 0, 0.328813,-0.000348046) , 
3, 96.7341, 1, 0, 0.361801,-0.00154857) , 
3, 88.3006, 1, 0, 0.505968,-0.000218981)    );
  // itree = 963
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623217,-0.0109492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868101,-0.0144478) , 
7, 6.62151e-05, 1, 0, 0.706595,-0.00165492) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992168,0.0371276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000775873,-0.00991805) , 
0, 0.00235152, 1, 0, 0.207258,0.000367997) , 
5, 0.0111624, 1, 0, 0.549536,-0.00101864) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.431065,0.00850235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868172,0.0355634) , 
7, 8.87061e-05, 1, 0, 0.520482,0.000865033) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.344073,-0.0210347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416178,1.26204e-05) , 
4, 0.004633, 1, 0, 0.406113,-0.000441472) , 
3, 70.2847, 1, 0, 0.462173,0.000198927) , 
3, 37.8455, 1, 0, 0.501138,-0.000344136)    );
  // itree = 964
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600775,0.00593474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714812,-0.0121566) , 
4, 0.00629196, 1, 0, 0.621877,-0.000267504) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554798,-0.0318651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398459,0.000980153) , 
3, 90.463, 1, 0, 0.483551,-0.00354831) , 
3, 62.0739, 1, 0, 0.579308,-0.00127717) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634256,-0.000143986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83839,0.0310925) , 
6, 0.0185522, 1, 0, 0.713644,0.00073195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721457,-0.0170905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0934538,0.027365) , 
4, 0.0117351, 1, 0, 0.200493,-0.000434287) , 
4, 0.0111035, 1, 0, 0.46063,0.000156925) , 
4, 0.0069622, 1, 0, 0.49641,-0.00027544)    );
  // itree = 965
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995869,-0.038111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995265,0.0376983) , 
5, 0.00816708, 1, 0, 0.995668,-0.000240595) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481855,-0.0144472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903979,-0.00690091) , 
7, 4.12289e-05, 1, 0, 0.859209,-0.00232241) , 
2, 0.023734, 1, 0, 0.932294,-0.00120742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132338) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000158706,0.0219726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130992) , 
6, 0.00696288, 1, 0, 5.02263e-05,-4.45485e-06) , 
2, 0.119097, 1, 0, 3.74517e-05,-5.15929e-05) , 
0, 0.00469953, 1, 0, 0.504409,-0.000676919)    );
  // itree = 966
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871805,0.00392453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787794,-0.0251025) , 
3, 60.9534, 1, 0, 0.847359,-0.000698546) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938022,-0.0172422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844253,-0.0308667) , 
3, 47.2045, 1, 0, 0.898124,-0.00437065) , 
6, 0.0197163, 1, 0, 0.858824,-0.00152787) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968352,-0.00362735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749188,0.0147205) , 
2, 0.0918444, 1, 0, 0.840966,0.0017775) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000568116,-0.0112883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000529921,0.00984761) , 
2, 0.193978, 1, 0, 0.000541115,-8.52666e-05) , 
0, 0.00235174, 1, 0, 0.120684,0.000181025) , 
2, 0.0714198, 1, 0, 0.500534,-0.000698379)    );
  // itree = 967
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926466,0.0319777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943648,-0.0156558) , 
6, 0.0189036, 1, 0, 0.928654,0.000238699) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925204,-0.00753172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000940081,0.00873327) , 
0, 0.00235152, 1, 0, 0.267973,-0.000431665) , 
2, 0.0238066, 1, 0, 0.483473,-0.000213006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923345,0.0335972) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508382,-0.0174925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515511,-0.0119139) , 
6, 0.0232498, 1, 0, 0.51225,-0.007415) , 
2, 0.0477351, 1, 0, 0.658979,-0.00431383) , 
6, 0.0220339, 1, 0, 0.504082,-0.000694556)    );
  // itree = 968
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679081,0.00333367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94359,0.0678415) , 
7, 5.40303e-05, 1, 0, 0.714034,0.000334327) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139215) , 
3, 50.3597, 1, 0, 0,-0.000173962) , 
4, 0.00812099, 1, 0, 0.41481,0.000121323) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973886,-0.0173241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00427026,0.00301269) , 
0, 0.00233775, 1, 0, 0.609675,-0.00191346) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635176,-0.00251726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621948,0.0430946) , 
3, 49.6771, 1, 0, 0.628954,0.00123666) , 
6, 0.0228073, 1, 0, 0.613377,-0.00130857) , 
6, 0.0162376, 1, 0, 0.498738,-0.000483046)    );
  // itree = 969
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.468015,-0.0106717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514612,0.00757755) , 
3, 3.0021, 1, 0, 0.511593,0.000166156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481452,-0.0203584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.325818,0.00182597) , 
3, 82.1874, 1, 0, 0.38049,-0.000744822) , 
3, 62.9886, 1, 0, 0.468724,-0.000131726) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627049,0.0170331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621376,-0.0157667) , 
4, 0.011599, 1, 0, 0.624326,-0.000681672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634807,-0.0129285) , 
1, 1.15601, 1, 0, 0.626932,-0.00170298) , 
6, 0.0208745, 1, 0, 0.496188,-0.000404489)    );
  // itree = 970
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.375903,0.00123183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590236,-0.0165197) , 
6, 0.0140824, 1, 0, 0.431151,-0.000363366) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0886679,0.000485742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60756,0.0556596) , 
1, 1.34985, 1, 0, 0.288879,0.000548089) , 
6, 0.0173976, 1, 0, 0.405086,-0.00019638) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875785,0.0260506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877943,-0.011749) , 
3, 59.4163, 1, 0, 0.876531,0.000105168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776597,-0.0201397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851008,-0.00905286) , 
4, 0.0113528, 1, 0, 0.822758,-0.00451221) , 
6, 0.0216322, 1, 0, 0.850047,-0.00216895) , 
7, 8.67922e-05, 1, 0, 0.500016,-0.000617217)    );
  // itree = 971
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992664,-0.0154761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832628,0.0123287) , 
2, 0.0702785, 1, 0, 0.973436,-0.000750424) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.494618,-0.0189723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892607,0.000879779) , 
4, 0.0111471, 1, 0, 0.685844,-0.00549786) , 
0, 0.00201502, 1, 0, 0.933006,-0.00141783) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130993) , 
3, 75.6002, 1, 0, 0,-5.27508e-05) , 
2, 0.095209, 1, 0, 0,-8.92942e-05) , 
0, 0.00470348, 1, 0, 0.497496,-0.000797695)    );
  // itree = 972
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920265,-0.055797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.786426,0.000243549) , 
2, 0.0220192, 1, 0, 0.870045,-0.00161868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658033,-0.0404684) , 
2, 0.057809, 1, 0, 0.853028,-0.00246055) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945114,0.0685805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735117,0.00489563) , 
0, 0.000551759, 1, 0, 0.835078,0.00339953) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000565716,-0.010816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00112594,0.0516597) , 
2, 0.31631, 1, 0, 0.000794614,4.48728e-05) , 
0, 0.00235174, 1, 0, 0.122031,0.000532365) , 
2, 0.0714198, 1, 0, 0.500238,-0.00101612)    );
  // itree = 973
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861158,0.0482987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00593151,-0.00961004) , 
2, 0.0238066, 1, 0, 0.213781,-1.78889e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0725374,0.0357426) , 
3, 100.62, 1, 0, 0.190499,0.000111166) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996662,0.0118176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791318,-0.0179144) , 
0, 0.000176102, 1, 0, 0.971664,-0.000931493) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674674,-0.0118544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.716164,-0.0356109) , 
1, 1.6912, 1, 0, 0.680443,-0.0047258) , 
0, 0.00123274, 1, 0, 0.816591,-0.00295193) , 
7, 2.91574e-05, 1, 0, 0.507896,-0.00144166)    );
  // itree = 974
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995959,0.00932237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93935,-0.012905) , 
0, 0.000319698, 1, 0, 0.967983,-0.00144143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386195,-0.012624) , 
0, 0.00223802, 1, 0, 0.934704,-0.0019) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130973) , 
2, 0.143243, 1, 0, 0,-8.67728e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000315369,0.0404129) , 
4, 0.0185259, 1, 0, 7.52748e-05,-9.27828e-06) , 
0, 0.00470075, 1, 0, 0.503421,-0.00102753)    );
  // itree = 975
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.44402,0.0114799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66414,-0.0103317) , 
6, 0.015913, 1, 0, 0.511971,-0.00039117) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.27962,-0.00218826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844547,0.0127104) , 
7, 5.18734e-05, 1, 0, 0.432597,0.00024142) , 
3, 37.7326, 1, 0, 0.468401,-4.39274e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645513,-0.0130295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615882,0.0274704) , 
1, 1.11047, 1, 0, 0.633835,-0.00082246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687247,-0.0202351) , 
1, 1.17034, 1, 0, 0.642838,-0.00226978) , 
6, 0.020878, 1, 0, 0.498672,-0.00043019)    );
  // itree = 976
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998166,-0.00467171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630388,-0.0241709) , 
0, 0.00182211, 1, 0, 0.961234,-0.000427074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575034,-0.0355465) , 
5, 0.0112697, 1, 0, 0.922158,-0.00083821) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.418754,-0.000529133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622128,0.0378702) , 
6, 0.0208633, 1, 0, 0.45989,0.000660967) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952992,-0.0269995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000663156,-0.00323982) , 
0, 0.00235174, 1, 0, 0.0968757,-0.000637897) , 
4, 0.0115974, 1, 0, 0.308512,0.000119337) , 
2, 0.0238008, 1, 0, 0.497554,-0.000175648)    );
  // itree = 977
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912467,-0.0250301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149927,0.00191881) , 
2, 0.0238052, 1, 0, 0.421802,-0.000321803) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634737,0.0352047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602039,0.00800117) , 
1, 1.20533, 1, 0, 0.609243,0.00103715) , 
6, 0.0167878, 1, 0, 0.479542,9.68156e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579438,-0.0219839) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683083,-0.00166592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639752,0.0192319) , 
3, 35.3938, 1, 0, 0.65644,0.000987176) , 
6, 0.0229189, 1, 0, 0.62794,-0.00287467) , 
6, 0.0220339, 1, 0, 0.49715,-0.000255769)    );
  // itree = 978
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.337074,-0.00264179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538785,-0.0369471) , 
6, 0.0123405, 1, 0, 0.365035,-0.000383899) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78798,0.0101106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0637356,-0.0248818) , 
5, 0.010905, 1, 0, 0.608233,0.000452041) , 
6, 0.0136399, 1, 0, 0.483745,2.4141e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629095,0.0124992) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926158,0.00254993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44132,-0.0159698) , 
2, 0.0476543, 1, 0, 0.601633,-0.00477355) , 
1, 1.06806, 1, 0, 0.608907,-0.00314825) , 
6, 0.0220335, 1, 0, 0.499032,-0.00036332)    );
  // itree = 979
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.314472,0.00369672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533993,-0.0194363) , 
6, 0.0113882, 1, 0, 0.344844,-0.000126109) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.548195,0.0710021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656908,0.130386) , 
6, 0.0134117, 1, 0, 0.592408,0.00166006) , 
6, 0.0125908, 1, 0, 0.377759,0.000111377) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988571,-0.0112299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758863,-0.0120552) , 
2, 0.0711267, 1, 0, 0.936739,-0.00252388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131128) , 
0, 0.00469953, 1, 0, 0.606526,-0.001666) , 
6, 0.0139162, 1, 0, 0.500134,-0.000839401)    );
  // itree = 980
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.40449,0.0311679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127366,-0.00528175) , 
4, 0.00348672, 1, 0, 0.169414,3.85066e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789053,-0.00124166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919065,-0.0207318) , 
1, 2.08399, 1, 0, 0.805653,-0.000661603) , 
7, 2.53097e-05, 1, 0, 0.405633,-0.000221426) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981953,0.0350892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97289,-0.0318418) , 
3, 21.604, 1, 0, 0.975667,-0.00484688) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93398,0.0113542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.304487,-0.00781084) , 
2, 0.112226, 1, 0, 0.737904,-0.000672255) , 
2, 0.047637, 1, 0, 0.848821,-0.00261972) , 
7, 8.53043e-05, 1, 0, 0.504192,-0.000754771)    );
  // itree = 981
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.423428,-0.00860662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626268,0.0129422) , 
6, 0.0169861, 1, 0, 0.47388,-0.000198024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600321,-0.0160044) , 
6, 0.0209843, 1, 0, 0.480983,-0.000464513) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917783,0.093101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838359,0.0387892) , 
2, 0.0273541, 1, 0, 0.869473,0.00189179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.299572,0.00278588) , 
2, 0.0953004, 1, 0, 0.613883,0.00121148) , 
6, 0.0220335, 1, 0, 0.497184,-0.000260209)    );
  // itree = 982
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.450336,-0.00979053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444539,0.0206252) , 
3, 17.9957, 1, 0, 0.446518,-2.2954e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.405347,-0.0265656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277305,0.00741166) , 
3, 82.1874, 1, 0, 0.321383,-0.00110331) , 
3, 62.9865, 1, 0, 0.4055,-0.000377081) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982766,-0.00236468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92132,-0.0189142) , 
4, 0.0106718, 1, 0, 0.954943,-0.00435575) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.728686,0.0117748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665574,-0.0102208) , 
5, 0.011127, 1, 0, 0.697945,-0.000333471) , 
0, 0.00188487, 1, 0, 0.828313,-0.00237386) , 
7, 8.68798e-05, 1, 0, 0.497014,-0.000809268)    );
  // itree = 983
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925498,-0.00716485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802771,-0.0587608) , 
2, 0.0192697, 1, 0, 0.911855,-0.000954496) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829529,0.0148637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.17952e-05,-0.00507808) , 
0, 0.00470304, 1, 0, 0.178152,0.0004024) , 
2, 0.0238066, 1, 0, 0.418428,-4.19633e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981723,-0.00119333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935635,-0.0265059) , 
4, 0.0106973, 1, 0, 0.957213,-0.00556665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707761,-0.00997475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812305,0.0200261) , 
4, 0.0105469, 1, 0, 0.764935,0.000732079) , 
0, 0.00174034, 1, 0, 0.852695,-0.00214282) , 
7, 8.87066e-05, 1, 0, 0.508751,-0.000478919)    );
  // itree = 984
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71594,-0.00950554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89673,0.019971) , 
6, 0.00994566, 1, 0, 0.855527,0.000558779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00733533,0.00374264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609822,-0.00768487) , 
7, 7.54059e-05, 1, 0, 0.100843,-0.00037104) , 
2, 0.0714198, 1, 0, 0.491568,0.000110358) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898863,0.016971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395047,-0.0152132) , 
2, 0.0715572, 1, 0, 0.621161,-0.00372905) , 
6, 0.0231937, 1, 0, 0.500112,-0.000142777)    );
  // itree = 985
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610469,-0.00124453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485534,0.0319202) , 
3, 62.9869, 1, 0, 0.574095,0.00026901) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621649,0.00792173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586543,-0.0354069) , 
3, 45.4242, 1, 0, 0.606365,-0.00492955) , 
7, 3.9953e-05, 1, 0, 0.580381,-0.000743665) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561553,0.0101863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811414,0.0270917) , 
6, 0.0150564, 1, 0, 0.712695,0.00126577) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813411,-0.00816343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.318562,0.00222427) , 
2, 0.0237979, 1, 0, 0.408295,-9.32737e-05) , 
4, 0.00862019, 1, 0, 0.46745,0.000170836) , 
4, 0.00696322, 1, 0, 0.501197,-0.000102438)    );
  // itree = 986
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443187,0.0131364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636369,-0.0124287) , 
6, 0.0159592, 1, 0, 0.492879,-0.000957962) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.425078,-0.00503765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58883,0.0276257) , 
6, 0.017839, 1, 0, 0.4455,-8.81302e-05) , 
3, 12.5889, 1, 0, 0.453158,-0.000228736) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629975,0.025682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613782,-0.0114059) , 
3, 50.29, 1, 0, 0.622572,-0.000282243) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913243,-0.0324083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545738,-0.0129648) , 
2, 0.023787, 1, 0, 0.635506,-0.0037741) , 
1, 1.12867, 1, 0, 0.629887,-0.00225717) , 
6, 0.0197155, 1, 0, 0.494897,-0.000707797)    );
  // itree = 987
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.339792,-0.0141381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384414,0.0115456) , 
4, 0.00232766, 1, 0, 0.381433,5.30773e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.548888,-0.0220059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617107,-0.00488728) , 
6, 0.0168844, 1, 0, 0.596835,-0.00119718) , 
6, 0.0143583, 1, 0, 0.48395,-0.000541958) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676566,-0.00184764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61881,-0.0233865) , 
3, 49.6594, 1, 0, 0.649193,-0.00486604) , 
6, 0.0231934, 1, 0, 0.494562,-0.000819653)    );
  // itree = 988
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83144,-0.00570493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914607,0.0410059) , 
6, 0.0162467, 1, 0, 0.866816,0.000492359) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86341,-0.0298109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70507,0.0218023) , 
3, 88.0355, 1, 0, 0.82226,-0.00286012) , 
3, 36.247, 1, 0, 0.843238,-0.00128172) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.759996,0.00268192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934484,0.0452917) , 
4, 0.0109815, 1, 0, 0.827452,0.0025253) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000881426,-0.0070414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00101404,0.0252134) , 
2, 0.31631, 1, 0, 0.000937133,4.40649e-06) , 
0, 0.00235174, 1, 0, 0.126204,0.000386474) , 
2, 0.0714068, 1, 0, 0.500863,-0.000485177)    );
  // itree = 989
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.44399,0.00339875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437955,0.0351842) , 
3, 64.7833, 1, 0, 0.443482,0.000201843) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.379012,-0.0196018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.23363,0.00363097) , 
3, 93.5944, 1, 0, 0.283581,-0.000625969) , 
3, 75.5838, 1, 0, 0.404949,2.35756e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732484,-0.00571492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343874,0.0159073) , 
4, 0.0115988, 1, 0, 0.62673,-0.000509358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554436,-0.0765709) , 
1, 1.54503, 1, 0, 0.620271,-0.000969795) , 
6, 0.0150758, 1, 0, 0.508044,-0.000463104)    );
  // itree = 990
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.250729,-0.0189129) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00783858,0.0552239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198805,-0.0127703) , 
6, 0.00463698, 1, 0, 0.157221,-1.30025e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978401,-0.00312412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565954,-0.00913742) , 
2, 0.0476045, 1, 0, 0.817305,-0.00112962) , 
7, 2.55037e-05, 1, 0, 0.504396,-0.000600294) , 
5, 0.00227818, 1, 0, 0.493231,-0.000839919)    );
  // itree = 991
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.445303,0.00474653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411124,-0.0217757) , 
3, 46.8533, 1, 0, 0.435633,-0.000382265) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.837477,-0.0153741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949106,0.0489377) , 
7, 0.000134043, 1, 0, 0.861683,-0.00266493) , 
7, 8.85522e-05, 1, 0, 0.524031,-0.000855881) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0879966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940693,0.0513463) , 
0, 0.000111812, 1, 0, 0.968926,0.00206625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00367501,-0.00173846) , 
0, 0.00235038, 1, 0, 0.395675,0.000791845) , 
3, 75.686, 1, 0, 0.49243,-0.000450212)    );
  // itree = 992
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613165,-0.0493841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527098,0.00571197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472317,-0.0130321) , 
3, 7.79349, 1, 0, 0.504365,-0.000877652) , 
5, 0.00662034, 1, 0, 0.534987,-0.00300852) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661827,-0.0093803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837046,-0.0126093) , 
7, 0.000106001, 1, 0, 0.676367,-0.00100886) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963652,0.00685017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.5747e-05,-0.00314297) , 
0, 0.00470348, 1, 0, 0.201426,0.000226539) , 
5, 0.0109759, 1, 0, 0.488787,-0.000520934) , 
3, 12.5904, 1, 0, 0.496298,-0.000925332)    );
  // itree = 993
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.368497,0.00756228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866427,-0.00711484) , 
7, 5.28742e-05, 1, 0, 0.514496,-0.000379648) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646111,-0.00502869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657298,-0.020154) , 
3, 33.5969, 1, 0, 0.649458,-0.00335798) , 
6, 0.0208748, 1, 0, 0.537017,-0.00087664) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994983,0.0139916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900027,0.0233979) , 
2, 0.0682983, 1, 0, 0.976374,0.00127584) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00304073,-0.0114434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00127017,0.0177977) , 
2, 0.21429, 1, 0, 0.00207608,-0.000225027) , 
0, 0.00234977, 1, 0, 0.459726,0.000479964) , 
3, 50.3893, 1, 0, 0.504273,-0.000301919)    );
  // itree = 994
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969537,0.0292038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131522) , 
0, 0.00235054, 1, 0, 0.45684,0.000340697) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575652,-0.024997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.232,0.0124697) , 
4, 0.00579618, 1, 0, 0.322024,-0.000828027) , 
3, 62.9522, 1, 0, 0.413735,-3.29869e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929206,-0.0154485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885712,0.00755205) , 
2, 0.0101929, 1, 0, 0.894894,-7.60524e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892907,-0.0107086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00178356,-0.0016822) , 
0, 0.00233811, 1, 0, 0.302868,-0.00217483) , 
2, 0.0713937, 1, 0, 0.627084,-0.00102546) , 
6, 0.0162355, 1, 0, 0.502746,-0.000447054)    );
  // itree = 995
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.212927,0.00971057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210461,-0.0130418) , 
3, 14.391, 1, 0, 0.211864,-0.000198082) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862547,0.0384888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799984,0.00223753) , 
5, 0.00955784, 1, 0, 0.838402,0.00139932) , 
7, 2.88486e-05, 1, 0, 0.533597,0.000622197) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597404,-0.0182609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400258,0.00461151) , 
4, 0.0069639, 1, 0, 0.462643,-0.000353943) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903219,0.0815973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.482042,-0.0127306) , 
2, 0.0468289, 1, 0, 0.608308,-0.0024172) , 
6, 0.0220338, 1, 0, 0.480999,-0.000613936) , 
3, 25.1948, 1, 0, 0.497287,-0.000231131)    );
  // itree = 996
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608744,-0.00977181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720825,0.0282121) , 
4, 0.00808104, 1, 0, 0.62679,-0.000287168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92098,-0.0207867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519279,-0.00496681) , 
2, 0.0476982, 1, 0, 0.70312,-0.00298799) , 
4, 0.0089315, 1, 0, 0.643899,-0.000892551) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0154573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130978) , 
2, 0.166677, 1, 0, 0,-0.000344757) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739662,-0.00325778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748939,0.0117621) , 
3, 36.9277, 1, 0, 0.744937,0.00075712) , 
6, 0.0208745, 1, 0, 0.269173,5.33912e-05) , 
4, 0.0104212, 1, 0, 0.493714,-0.000513431)    );
  // itree = 997
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.242517,-0.00396832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816225,-0.0181477) , 
7, 3.21559e-05, 1, 0, 0.535903,-0.00124197) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533379,0.00969703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449086,-0.0127902) , 
3, 88.3896, 1, 0, 0.513316,0.00019284) , 
3, 33.0282, 1, 0, 0.52293,-0.000417894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179661,-0.0151601) , 
3, 138.757, 1, 0, 0.502887,-0.000590012)    );
  // itree = 998
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598717,-0.000311316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49042,-0.0222057) , 
7, 4.5187e-05, 1, 0, 0.585703,-0.000656512) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.747589,0.0125132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124291,-0.0122721) , 
4, 0.00862189, 1, 0, 0.291233,3.74966e-05) , 
4, 0.00696399, 1, 0, 0.405759,-0.00023242) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98338,-0.00525724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906616,-0.0180503) , 
4, 0.0106598, 1, 0, 0.949476,-0.00558247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823213,0.0472196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529717,-0.00460872) , 
5, 0.011758, 1, 0, 0.744571,0.00230216) , 
0, 0.00188487, 1, 0, 0.851949,-0.00182968) , 
7, 8.67921e-05, 1, 0, 0.501194,-0.000574055)    );
  // itree = 999
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969942,-0.00934513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915989,-0.0204407) , 
0, 0.00212125, 1, 0, 0.96624,-0.00178891) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00147465,0.00666044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000771897,-0.00775067) , 
3, 43.161, 1, 0, 0.00123954,-2.86133e-06) , 
0, 0.00234888, 1, 0, 0.537194,-0.000994818) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0873268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941848,0.0247172) , 
0, 0.000111645, 1, 0, 0.969709,0.0014082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00277512,-0.00642666) , 
0, 0.00234977, 1, 0, 0.405556,0.000409539) , 
3, 75.5319, 1, 0, 0.504816,-0.000649401)    );
   return;
};
 
// Clean up
inline void ReadBDTG20::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDTG20::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
         if (IsNormalised()) {
            // normalise variables
            std::vector<double> iV;
            iV.reserve(inputValues.size());
            int ivar = 0;
            for (std::vector<double>::const_iterator varIt = inputValues.begin();
                 varIt != inputValues.end(); varIt++, ivar++) {
               iV.push_back(NormVariable( *varIt, fVmin[ivar], fVmax[ivar] ));
            }
            retval = GetMvaValue__( iV );
         }
         else {
            retval = GetMvaValue__( inputValues );
         }
      }

      return retval;
   }
