// Class: ReadBDTG
// Automatically generated by MethodBase::MakeClass
//

/* configuration options =====================================================

#GEN -*-*-*-*-*-*-*-*-*-*-*- general info -*-*-*-*-*-*-*-*-*-*-*-

Method         : BDT::BDTG
TMVA Release   : 4.2.1         [262657]
ROOT Release   : 6.10/04       [395780]
Creator        : wfawcett
Date           : Wed Mar 14 20:50:38 2018
Host           : Linux lcgapp-slc6-x86-64-3.cern.ch 2.6.32-642.4.2.el6.x86_64 #1 SMP Wed Aug 24 09:19:54 CEST 2016 x86_64 x86_64 x86_64 GNU/Linux
Dir            : /atlas/users/wfawcett/fcc/testTMVA/tmvatutorial
Training events: 66730
Analysis type  : [Classification]


#OPT -*-*-*-*-*-*-*-*-*-*-*-*- options -*-*-*-*-*-*-*-*-*-*-*-*-

# Set by User:
V: "False" [Verbose output (short form of "VerbosityLevel" below - overrides the latter one)]
H: "False" [Print method-specific help message]
NTrees: "1000" [Number of trees in the forest]
MaxDepth: "3" [Max depth of the decision tree allowed]
MinNodeSize: "2.5%" [Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%)]
nCuts: "20" [Number of grid points in variable range used in finding optimal cut in node splitting]
BoostType: "Grad" [Boosting type for the trees in the forest (note: AdaCost is still experimental)]
UseBaggedBoost: "True" [Use only a random subsample of all events for growing the trees in each boost iteration.]
Shrinkage: "1.000000e-01" [Learning rate for GradBoost algorithm]
BaggedSampleFraction: "5.000000e-01" [Relative size of bagged event sample to original size of the data sample (used whenever bagging is used (i.e. UseBaggedBoost, Bagging,)]
# Default:
VerbosityLevel: "Default" [Verbosity level]
VarTransform: "None" [List of variable transformations performed before training, e.g., "D_Background,P_Signal,G,N_AllClasses" for: "Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed)"]
CreateMVAPdfs: "False" [Create PDFs for classifier outputs (signal and background)]
IgnoreNegWeightsInTraining: "False" [Events with negative weights are ignored in the training (but are included for testing and performance evaluation)]
AdaBoostR2Loss: "quadratic" [Type of Loss function in AdaBoostR2]
AdaBoostBeta: "5.000000e-01" [Learning rate  for AdaBoost algorithm]
UseRandomisedTrees: "False" [Determine at each node splitting the cut variable only as the best out of a random subset of variables (like in RandomForests)]
UseNvars: "3" [Size of the subset of variables used with RandomisedTree option]
UsePoissonNvars: "True" [Interpret "UseNvars" not as fixed number but as mean of a Poisson distribution in each split with RandomisedTree option]
UseYesNoLeaf: "True" [Use Sig or Bkg categories, or the purity=S/(S+B) as classification of the leaf node -> Real-AdaBoost]
NegWeightTreatment: "pray" [How to treat events with negative weights in the BDT training (particular the boosting) : IgnoreInTraining;  Boost With inverse boostweight; Pair events with negative and positive weights in training sample and *annihilate* them (experimental!)]
Css: "1.000000e+00" [AdaCost: cost of true signal selected signal]
Cts_sb: "1.000000e+00" [AdaCost: cost of true signal selected bkg]
Ctb_ss: "1.000000e+00" [AdaCost: cost of true bkg    selected signal]
Cbb: "1.000000e+00" [AdaCost: cost of true bkg    selected bkg ]
NodePurityLimit: "5.000000e-01" [In boosting/pruning, nodes with purity > NodePurityLimit are signal; background otherwise.]
SeparationType: "giniindex" [Separation criterion for node splitting]
RegressionLossFunctionBDTG: "huber" [Loss function for BDTG regression.]
HuberQuantile: "7.000000e-01" [In the Huber loss function this is the quantile that separates the core from the tails in the residuals distribution.]
DoBoostMonitor: "False" [Create control plot with ROC integral vs tree number]
UseFisherCuts: "False" [Use multivariate splits using the Fisher criterion]
MinLinCorrForFisher: "8.000000e-01" [The minimum linear correlation between two variables demanded for use in Fisher criterion in node splitting]
UseExclusiveVars: "False" [Variables already used in fisher criterion are not anymore analysed individually for node splitting]
DoPreselection: "False" [and and apply automatic pre-selection for 100% efficient signal (bkg) cuts prior to training]
SigToBkgFraction: "1.000000e+00" [Sig to Bkg ratio used in Training (similar to NodePurityLimit, which cannot be used in real adaboost]
PruneMethod: "nopruning" [Note: for BDTs use small trees (e.g.MaxDepth=3) and NoPruning:  Pruning: Method used for pruning (removal) of statistically insignificant branches ]
PruneStrength: "0.000000e+00" [Pruning strength]
PruningValFraction: "5.000000e-01" [Fraction of events to use for optimizing automatic pruning.]
SkipNormalization: "False" [Skip normalization at initialization, to keep expectation value of BDT output according to the fraction of events]
nEventsMin: "0" [deprecated: Use MinNodeSize (in % of training events) instead]
UseBaggedGrad: "False" [deprecated: Use *UseBaggedBoost* instead:  Use only a random subsample of all events for growing the trees in each iteration.]
GradBaggingFraction: "5.000000e-01" [deprecated: Use *BaggedSampleFraction* instead: Defines the fraction of events to be used in each iteration, e.g. when UseBaggedGrad=kTRUE. ]
UseNTrainEvents: "0" [deprecated: Use *BaggedSampleFraction* instead: Number of randomly picked training events used in randomised (and bagged) trees]
NNodesMax: "0" [deprecated: Use MaxDepth instead to limit the tree size]
##


#VAR -*-*-*-*-*-*-*-*-*-*-*-* variables *-*-*-*-*-*-*-*-*-*-*-*-

NVar 9
abs(tracks10.kappa_123-tracks10.kappa_013)   abs_tracks10.kappa_123_M_tracks10.kappa_013_ abs(tracks10.kappa_123-tracks10.kappa_013)   |deltaKappa|                                 units                                            'F'    [4.65661287308e-10,0.0980714336038]
tracks10.pT                   tracks10.pT                   tracks10.pT                   pT                            units                             'F'    [1.04470670223,6186.80615234]
abs(tracks10.zresiduum)       abs_tracks10.zresiduum_       abs(tracks10.zresiduum)       |zresiduum|                   units                             'F'    [0,0.499908447266]
abs(tracks10.beamlineIntersect) abs_tracks10.beamlineIntersect_ abs(tracks10.beamlineIntersect) |beamlineIntersect|             units                               'F'    [0,264.962493896]
abs(tracks10.hit1phi-tracks10.hit2phi)   abs_tracks10.hit1phi_M_tracks10.hit2phi_ abs(tracks10.hit1phi-tracks10.hit2phi)   |dPhi12|                                 units                                        'F'    [1.40070915222e-06,0.0121754407883]
abs(tracks10.hit2phi-tracks10.hit3phi)   abs_tracks10.hit2phi_M_tracks10.hit3phi_ abs(tracks10.hit2phi-tracks10.hit3phi)   |dPhi23|                                 units                                        'F'    [5.96046447754e-07,0.02399122715]
abs(tracks10.hit1phi-tracks10.hit3phi)   abs_tracks10.hit1phi_M_tracks10.hit3phi_ abs(tracks10.hit1phi-tracks10.hit3phi)   |dPhi13|                                 units                                        'F'    [1.90734863281e-06,0.0121760368347]
tracks10.z_phi12*tracks10.z_phi23   tracks10.z_phi12_T_tracks10.z_phi23 tracks10.z_phi12*tracks10.z_phi23   z phi12*23                          units                                   'F'    [-0.000292071985314,3.7063662603e-05]
abs(tracks10.zresiduum/tracks10.eta)   abs_tracks10.zresiduum_D_tracks10.eta_ abs(tracks10.zresiduum/tracks10.eta)   |zresiduum/eta|                        units                                      'F'    [0,5222.71386719]
NSpec 0


============================================================================ */

#include <vector>
#include <cmath>
#include <string>
#include <iostream>

#define NN new BDTGNode
   
#ifndef BDTGNode__def
#define BDTGNode__def
   
class BDTGNode {
   
public:
   
   // constructor of an essentially "empty" node floating in space
   BDTGNode ( BDTGNode* left,BDTGNode* right,
                          int selector, double cutValue, bool cutType, 
                          int nodeType, double purity, double response ) :
   fLeft         ( left         ),
   fRight        ( right        ),
   fSelector     ( selector     ),
   fCutValue     ( cutValue     ),
   fCutType      ( cutType      ),
   fNodeType     ( nodeType     ),
   fPurity       ( purity       ),
   fResponse     ( response     ){
   }

   virtual ~BDTGNode();

   // test event if it descends the tree at this node to the right
   virtual bool GoesRight( const std::vector<double>& inputValues ) const;
   BDTGNode* GetRight( void )  {return fRight; };

   // test event if it descends the tree at this node to the left 
   virtual bool GoesLeft ( const std::vector<double>& inputValues ) const;
   BDTGNode* GetLeft( void ) { return fLeft; };   

   // return  S/(S+B) (purity) at this node (from  training)

   double GetPurity( void ) const { return fPurity; } 
   // return the node type
   int    GetNodeType( void ) const { return fNodeType; }
   double GetResponse(void) const {return fResponse;}

private:

   BDTGNode*   fLeft;     // pointer to the left daughter node
   BDTGNode*   fRight;    // pointer to the right daughter node
   int                     fSelector; // index of variable used in node selection (decision tree)   
   double                  fCutValue; // cut value applied on this node to discriminate bkg against sig
   bool                    fCutType;  // true: if event variable > cutValue ==> signal , false otherwise
   int                     fNodeType; // Type of node: -1 == Bkg-leaf, 1 == Signal-leaf, 0 = internal 
   double                  fPurity;   // Purity of node from training
   double                  fResponse; // Regression response value of node
}; 
   
//_______________________________________________________________________
   BDTGNode::~BDTGNode()
{
   if (fLeft  != NULL) delete fLeft;
   if (fRight != NULL) delete fRight;
}; 
   
//_______________________________________________________________________
bool BDTGNode::GoesRight( const std::vector<double>& inputValues ) const
{
   // test event if it descends the tree at this node to the right
   bool result;
     result = (inputValues[fSelector] > fCutValue );
   if (fCutType == true) return result; //the cuts are selecting Signal ;
   else return !result;
}
   
//_______________________________________________________________________
bool BDTGNode::GoesLeft( const std::vector<double>& inputValues ) const
{
   // test event if it descends the tree at this node to the left
   if (!this->GoesRight(inputValues)) return true;
   else return false;
}
   
#endif
   
#ifndef IClassifierReader__def
#define IClassifierReader__def

class IClassifierReader {

 public:

   // constructor
   IClassifierReader() : fStatusIsClean( true ) {}
   virtual ~IClassifierReader() {}

   // return classifier response
   virtual double GetMvaValue( const std::vector<double>& inputValues ) const = 0;

   // returns classifier status
   bool IsStatusClean() const { return fStatusIsClean; }

 protected:

   bool fStatusIsClean;
};

#endif

class ReadBDTG : public IClassifierReader {

 public:

   // constructor
   ReadBDTG( std::vector<std::string>& theInputVars ) 
      : IClassifierReader(),
        fClassName( "ReadBDTG" ),
        fNvars( 9 ),
        fIsNormalised( false )
   {      
      // the training input variables
      const char* inputVars[] = { "abs(tracks10.kappa_123-tracks10.kappa_013)", "tracks10.pT", "abs(tracks10.zresiduum)", "abs(tracks10.beamlineIntersect)", "abs(tracks10.hit1phi-tracks10.hit2phi)", "abs(tracks10.hit2phi-tracks10.hit3phi)", "abs(tracks10.hit1phi-tracks10.hit3phi)", "tracks10.z_phi12*tracks10.z_phi23", "abs(tracks10.zresiduum/tracks10.eta)" };

      // sanity checks
      if (theInputVars.size() <= 0) {
         std::cout << "Problem in class \"" << fClassName << "\": empty input vector" << std::endl;
         fStatusIsClean = false;
      }

      if (theInputVars.size() != fNvars) {
         std::cout << "Problem in class \"" << fClassName << "\": mismatch in number of input values: "
                   << theInputVars.size() << " != " << fNvars << std::endl;
         fStatusIsClean = false;
      }

      // validate input variables
      for (size_t ivar = 0; ivar < theInputVars.size(); ivar++) {
         if (theInputVars[ivar] != inputVars[ivar]) {
            std::cout << "Problem in class \"" << fClassName << "\": mismatch in input variable names" << std::endl
                      << " for variable [" << ivar << "]: " << theInputVars[ivar].c_str() << " != " << inputVars[ivar] << std::endl;
            fStatusIsClean = false;
         }
      }

      // initialize min and max vectors (for normalisation)
      fVmin[0] = 0;
      fVmax[0] = 0;
      fVmin[1] = 0;
      fVmax[1] = 0;
      fVmin[2] = 0;
      fVmax[2] = 0;
      fVmin[3] = 0;
      fVmax[3] = 0;
      fVmin[4] = 0;
      fVmax[4] = 0;
      fVmin[5] = 0;
      fVmax[5] = 0;
      fVmin[6] = 0;
      fVmax[6] = 0;
      fVmin[7] = 0;
      fVmax[7] = 0;
      fVmin[8] = 0;
      fVmax[8] = 0;

      // initialize input variable types
      fType[0] = 'F';
      fType[1] = 'F';
      fType[2] = 'F';
      fType[3] = 'F';
      fType[4] = 'F';
      fType[5] = 'F';
      fType[6] = 'F';
      fType[7] = 'F';
      fType[8] = 'F';

      // initialize constants
      Initialize();

   }

   // destructor
   virtual ~ReadBDTG() {
      Clear(); // method-specific
   }

   // the classifier response
   // "inputValues" is a vector of input values in the same order as the 
   // variables given to the constructor
   double GetMvaValue( const std::vector<double>& inputValues ) const;

 private:

   // method-specific destructor
   void Clear();

   // common member variables
   const char* fClassName;

   const size_t fNvars;
   size_t GetNvar()           const { return fNvars; }
   char   GetType( int ivar ) const { return fType[ivar]; }

   // normalisation of input variables
   const bool fIsNormalised;
   bool IsNormalised() const { return fIsNormalised; }
   double fVmin[9];
   double fVmax[9];
   double NormVariable( double x, double xmin, double xmax ) const {
      // normalise to output range: [-1, 1]
      return 2*(x - xmin)/(xmax - xmin) - 1.0;
   }

   // type of input variable: 'F' or 'I'
   char   fType[9];

   // initialize internal variables
   void Initialize();
   double GetMvaValue__( const std::vector<double>& inputValues ) const;

   // private members (method specific)
   std::vector<BDTGNode*> fForest;       // i.e. root nodes of decision trees
   std::vector<double>                fBoostWeights; // the weights applied in the individual boosts
};

double ReadBDTG::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTGNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTGNode*)current->GetRight();
         else current=(BDTGNode*)current->GetLeft();
      }
      myMVA += current->GetResponse();
   }
   return 2.0/(1.0+exp(-2.0*myMVA))-1.0;
};

void ReadBDTG::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999695,0.173413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98944,0.160584) , 
2, 0.0111607, 1, 0, 0.997582,0.497582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643568,0.0165825) , 
2, 0.0235276, 1, 0, 0.965477,0.465477) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00017698,-0.0261778) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0261831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0261831) , 
5, 0.00558405, 1, 0, 0,-0.5) , 
0, 0.0313431, 1, 0, 3.66231e-05,-0.499963) , 
0, 0.00466573, 1, 0, 0.506979,0.00697946)    );
  // itree = 1
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999228,0.147733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984161,0.131571) , 
0, 0.00212808, 1, 0, 0.998309,0.413735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700476,0.0245462) , 
2, 0.0231309, 1, 0, 0.972027,0.393969) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000167346,-0.0255102) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0255152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0255152) , 
0, 0.0568193, 1, 0, 0,-0.486911) , 
0, 0.0314127, 1, 0, 3.67302e-05,-0.486875) , 
0, 0.00467007, 1, 0, 0.510716,-0.0240837)    );
  // itree = 2
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.135306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973527,0.107983) , 
0, 0.000105578, 1, 0, 0.987166,0.342356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671734,0.0101233) , 
0, 0.00221718, 1, 0, 0.970797,0.328797) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0248974) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0248971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0248971) , 
2, 0.309567, 1, 0, 0,-0.474174) , 
0, 0.0313643, 1, 0, 0,-0.474175) , 
0, 0.00466029, 1, 0, 0.497226,-0.0629063)    );
  // itree = 3
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99661,0.119206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.127627) , 
7, 3.35337e-05, 1, 0, 0.99684,0.291859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659645,0.0114453) , 
2, 0.0235276, 1, 0, 0.9688,0.275467) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0243238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0243237) , 
0, 0.0446705, 1, 0, 0,-0.461778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00035142,-0.0243125) , 
6, 0.00927144, 1, 0, 7.11169e-05,-0.461707) , 
0, 0.00466573, 1, 0, 0.498367,-0.0825187)    );
  // itree = 4
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98966,0.103264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983937,0.103666) , 
5, 0.0047134, 1, 0, 0.987726,0.245428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642442,0.0025467) , 
0, 0.00222351, 1, 0, 0.96979,0.233787) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00017698,-0.0237848) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0237903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0237905) , 
6, 0.00811378, 1, 0, 0,-0.449712) , 
0, 0.0313691, 1, 0, 3.61312e-05,-0.449677) , 
0, 0.00467007, 1, 0, 0.501725,-0.096096)    );
  // itree = 5
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998662,0.108457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994979,0.109644) , 
0, 0.00200209, 1, 0, 0.998307,0.211087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622663,0.00201044) , 
2, 0.0237746, 1, 0, 0.964563,0.193687) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0232936) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0232932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0232934) , 
6, 0.00811778, 1, 0, 0,-0.437968) , 
0, 0.0314377, 1, 0, 0,-0.437969) , 
0, 0.00467007, 1, 0, 0.498595,-0.111458)    );
  // itree = 6
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984025,0.0859028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986658,0.0973709) , 
5, 0.00523216, 1, 0, 0.984534,0.17379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688345,0.00375641) , 
0, 0.00221718, 1, 0, 0.968324,0.165793) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0228458) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0228289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.022829) , 
6, 0.00811746, 1, 0, 0,-0.426535) , 
0, 0.0312695, 1, 0, 0,-0.426609) , 
0, 0.00465687, 1, 0, 0.497409,-0.122304)    );
  // itree = 7
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997922,0.0997621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.10856) , 
6, 0.011599, 1, 0, 0.998066,0.153119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658413,0.00140187) , 
2, 0.02308, 1, 0, 0.96705,0.140133) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0223942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0223943) , 
0, 0.0446216, 1, 0, 0,-0.415405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0223945) , 
6, 0.00927667, 1, 0, 0,-0.415406) , 
0, 0.00466029, 1, 0, 0.505416,-0.125061)    );
  // itree = 8
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999217,0.0986315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995579,0.10065) , 
0, 0.0021416, 1, 0, 0.999014,0.129633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643077,0.000277817) , 
2, 0.0235276, 1, 0, 0.964993,0.117457) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0219868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0219868) , 
0, 0.0402813, 1, 0, 0,-0.404572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.021987) , 
6, 0.00927127, 1, 0, 0,-0.404573) , 
0, 0.00466573, 1, 0, 0.486006,-0.141659)    );
  // itree = 9
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999102,0.0994523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963777,0.0524966) , 
0, 0.000105329, 1, 0, 0.982083,0.10524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6624,-0.00564641) , 
0, 0.00221204, 1, 0, 0.965576,0.0976477) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0216041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0216041) , 
0, 0.0447672, 1, 0, 0,-0.394025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0216043) , 
6, 0.00927781, 1, 0, 0,-0.394026) , 
0, 0.00466573, 1, 0, 0.497368,-0.140765)    );
  // itree = 10
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98935,0.0760021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984543,0.0801599) , 
7, 2.46844e-05, 1, 0, 0.988037,0.0948981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.661965,-0.00396225) , 
0, 0.00221886, 1, 0, 0.969673,0.0878578) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0212441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0212441) , 
0, 0.0446818, 1, 0, 0,-0.383756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0212443) , 
6, 0.00927053, 1, 0, 0,-0.383758) , 
0, 0.00466573, 1, 0, 0.507032,-0.137155)    );
  // itree = 11
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998384,0.0918419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653496,-0.00900993) , 
2, 0.0222677, 1, 0, 0.973506,0.0698657) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977408,0.0690073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974836,0.084215) , 
0, 0.00205442, 1, 0, 0.976074,0.140106) , 
5, 0.00573098, 1, 0, 0.97377,0.0771052) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.020905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.020905) , 
0, 0.0401845, 1, 0, 0,-0.373759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0209052) , 
6, 0.00927772, 1, 0, 0,-0.37376) , 
0, 0.00466029, 1, 0, 0.497457,-0.143433)    );
  // itree = 12
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997634,0.088765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0992394) , 
6, 0.0115984, 1, 0, 0.9978,0.0700093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692386,-0.000582949) , 
2, 0.0237746, 1, 0, 0.971013,0.063518) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0205871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0205851) , 
5, 0.0039992, 1, 0, 0,-0.364041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000319381,-0.0205727) , 
6, 0.00927656, 1, 0, 7.09828e-05,-0.363967) , 
0, 0.00466298, 1, 0, 0.498914,-0.144337)    );
  // itree = 13
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988671,0.0638458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985946,0.0717767) , 
5, 0.0046548, 1, 0, 0.987708,0.0590294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69207,-0.00633168) , 
0, 0.00221543, 1, 0, 0.971614,0.0535028) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0202848) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0202828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.020283) , 
6, 0.00811746, 1, 0, 0,-0.354551) , 
0, 0.031297, 1, 0, 0,-0.354562) , 
0, 0.00466029, 1, 0, 0.500579,-0.144326)    );
  // itree = 14
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997375,0.0847619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0970868) , 
7, 3.35338e-05, 1, 0, 0.997557,0.0518802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628476,-0.0104916) , 
2, 0.0235276, 1, 0, 0.962221,0.0392933) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0199969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0199969) , 
5, 0.00391736, 1, 0, 0,-0.345321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0199972) , 
6, 0.00927806, 1, 0, 0,-0.345323) , 
0, 0.00467007, 1, 0, 0.494288,-0.147748)    );
  // itree = 15
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997885,0.0848009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64669,-0.0114884) , 
2, 0.0229143, 1, 0, 0.972071,0.0329612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986861,0.086319) , 
7, 3.35197e-05, 1, 0, 0.973332,0.0396916) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0197262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0197262) , 
5, 0.0039933, 1, 0, 0,-0.336336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0197265) , 
6, 0.00927645, 1, 0, 0,-0.336338) , 
0, 0.00466298, 1, 0, 0.504841,-0.141302)    );
  // itree = 16
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99737,0.0816815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0940147) , 
4, 0.00579306, 1, 0, 0.997553,0.036772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681883,-0.0069023) , 
2, 0.0229143, 1, 0, 0.967856,0.0289784) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000171538,-0.0194622) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0194696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0194697) , 
6, 0.0075344, 1, 0, 0,-0.32759) , 
0, 0.0313096, 1, 0, 3.61832e-05,-0.327553) , 
0, 0.00466015, 1, 0, 0.503346,-0.142141)    );
  // itree = 17
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989077,0.0472622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98645,0.0638084) , 
6, 0.00927858, 1, 0, 0.988129,0.0331552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638185,-0.0130413) , 
0, 0.00221886, 1, 0, 0.969783,0.0262743) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.019228) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.019226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0192261) , 
6, 0.00753385, 1, 0, 0,-0.319071) , 
0, 0.0313297, 1, 0, 0,-0.319083) , 
0, 0.00466573, 1, 0, 0.504644,-0.13937)    );
  // itree = 18
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997137,0.0778759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0934807) , 
5, 0.00580555, 1, 0, 0.997336,0.0283524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677709,-0.00743501) , 
2, 0.0237746, 1, 0, 0.970295,0.0217687) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0189965) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0189946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0189947) , 
6, 0.00811797, 1, 0, 0,-0.310775) , 
0, 0.031297, 1, 0, 0,-0.310787) , 
0, 0.00466029, 1, 0, 0.503395,-0.138255)    );
  // itree = 19
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963009,0.0149291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211643,-0.0185389) , 
2, 0.00679398, 1, 0, 0.782614,-0.0470235) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990317,0.0516131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922633,0.0554459) , 
2, 0.0226702, 1, 0, 0.983759,0.0352237) , 
7, 1.00908e-05, 1, 0, 0.916713,0.00780865) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00185625,-0.0215399) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0187745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0187747) , 
6, 0.00753833, 1, 0, 0,-0.302697) , 
0, 0.0328121, 1, 0, 0.000458464,-0.313887) , 
2, 0.0476103, 1, 0, 0.503628,-0.137225)    );
  // itree = 20
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983642,0.0352642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425874,-0.0176242) , 
2, 0.00226466, 1, 0, 0.718947,-0.0673521) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991998,0.0537193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880633,0.0349868) , 
2, 0.0223796, 1, 0, 0.981352,0.0295427) , 
7, 7.4365e-06, 1, 0, 0.917162,0.0058402) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00224069,-0.0215043) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0185606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0185651) , 
0, 0.0546781, 1, 0, 0,-0.294784) , 
0, 0.0280288, 1, 0, 0.000490186,-0.305276) , 
2, 0.0475725, 1, 0, 0.498699,-0.136185)    );
  // itree = 21
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97691,0.0240441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.373507,-0.0177525) , 
2, 0.00447664, 1, 0, 0.777514,-0.0479456) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989056,0.0407693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899483,0.0342946) , 
2, 0.0219436, 1, 0, 0.979041,0.0254298) , 
7, 9.69472e-06, 1, 0, 0.916316,0.00259185) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00329028,-0.0211757) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0183615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0183656) , 
0, 0.0546781, 1, 0, 0,-0.287127) , 
0, 0.0280288, 1, 0, 0.0007177,-0.297332) , 
2, 0.0476074, 1, 0, 0.499872,-0.133823)    );
  // itree = 22
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998687,0.0814416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0906946) , 
4, 0.00579332, 1, 0, 0.998776,0.0194054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69625,-0.00945438) , 
2, 0.02308, 1, 0, 0.972089,0.012473) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0183578) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0181203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0181754) , 
0, 0.0400723, 1, 0, 0,-0.279083) , 
2, 0.119056, 1, 0, 0,-0.280627) , 
0, 0.00465677, 1, 0, 0.504084,-0.128638)    );
  // itree = 23
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975371,0.0174681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260257,-0.0180236) , 
2, 0.00451733, 1, 0, 0.745919,-0.0580893) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992134,0.0430422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873773,0.0271971) , 
2, 0.0224668, 1, 0, 0.980676,0.021161) , 
7, 8.02375e-06, 1, 0, 0.918943,0.000320998) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0028194,-0.0207475) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.017993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.017994) , 
2, 0.176937, 1, 0, 0,-0.272437) , 
0, 0.032673, 1, 0, 0.000696546,-0.284014) , 
2, 0.0476074, 1, 0, 0.506527,-0.127383)    );
  // itree = 24
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982032,0.0229096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425368,-0.0169177) , 
2, 0.00226466, 1, 0, 0.714288,-0.0651914) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991972,0.0394878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906146,0.0364169) , 
2, 0.0223832, 1, 0, 0.983797,0.0202437) , 
7, 7.43659e-06, 1, 0, 0.917001,-0.00093081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00308571,-0.0207429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0178127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0178204) , 
0, 0.0547291, 1, 0, 0,-0.265273) , 
0, 0.0280591, 1, 0, 0.000676221,-0.275784) , 
2, 0.0476074, 1, 0, 0.497993,-0.126613)    );
  // itree = 25
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999349,0.0838427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989142,0.0227117) , 
2, 0.0095738, 1, 0, 0.996816,0.0122624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682782,-0.0130832) , 
2, 0.0224609, 1, 0, 0.965791,0.00285675) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0178942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0175707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0176551) , 
0, 0.0402403, 1, 0, 0,-0.257471) , 
2, 0.119254, 1, 0, 0,-0.259271) , 
0, 0.00466573, 1, 0, 0.498973,-0.123844)    );
  // itree = 26
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998426,0.0763502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0894287) , 
5, 0.00580584, 1, 0, 0.998533,0.0120866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665803,-0.0108137) , 
2, 0.0235276, 1, 0, 0.969035,0.00444919) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0177545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0174139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0174968) , 
0, 0.0402281, 1, 0, 0,-0.250787) , 
2, 0.118975, 1, 0, 0,-0.252777) , 
0, 0.00466573, 1, 0, 0.496911,-0.120874)    );
  // itree = 27
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0879841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994663,0.0468868) , 
2, 0.00869606, 1, 0, 0.998534,0.010124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696041,-0.00843569) , 
2, 0.0229078, 1, 0, 0.971114,0.00437703) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.017602) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0001564,-0.0172559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0173453) , 
0, 0.0402281, 1, 0, 4.53021e-05,-0.244167) , 
2, 0.119019, 1, 0, 3.47557e-05,-0.246243) , 
0, 0.00466573, 1, 0, 0.494712,-0.118575)    );
  // itree = 28
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963495,-0.000846666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.18266,-0.0174203) , 
2, 0.00452932, 1, 0, 0.691559,-0.0698201) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990675,0.0261776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868904,0.028928) , 
2, 0.0246215, 1, 0, 0.982103,0.0138114) , 
7, 7.43662e-06, 1, 0, 0.910161,-0.00689668) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00426523,-0.0202979) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0171933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.017199) , 
0, 0.0547608, 1, 0, 0,-0.238749) , 
0, 0.0280548, 1, 0, 0.000907991,-0.249523) , 
2, 0.04759, 1, 0, 0.495683,-0.117497)    );
  // itree = 29
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97153,0.00249184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34013,-0.0175947) , 
2, 0.00451951, 1, 0, 0.783608,-0.0465736) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989321,0.0172519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889918,0.0308543) , 
2, 0.0241699, 1, 0, 0.981265,0.0124316) , 
7, 9.16484e-06, 1, 0, 0.923156,-0.00491517) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00300368,-0.0192804) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0170576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0170615) , 
2, 0.17695, 1, 0, 0,-0.232633) , 
0, 0.0326922, 1, 0, 0.0007215,-0.241251) , 
2, 0.04759, 1, 0, 0.503997,-0.112307)    );
  // itree = 30
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99974,0.0850095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971913,-0.0421154) , 
0, 0.00212808, 1, 0, 0.998043,0.00746508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.694321,-0.00945516) , 
2, 0.0230655, 1, 0, 0.970025,0.00127334) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.017238) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0168285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0169282) , 
0, 0.0402627, 1, 0, 0,-0.22532) , 
2, 0.119072, 1, 0, 0,-0.22762) , 
0, 0.00467007, 1, 0, 0.498787,-0.109923)    );
  // itree = 31
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0946575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972822,-0.00638832) , 
0, 0.000105658, 1, 0, 0.986803,0.00596892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667812,-0.01556) , 
0, 0.00221886, 1, 0, 0.96947,0.000415163) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0171119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0167048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0168004) , 
0, 0.040275, 1, 0, 0,-0.219486) , 
2, 0.119013, 1, 0, 0,-0.221821) , 
0, 0.00467007, 1, 0, 0.495635,-0.108204)    );
  // itree = 32
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98603,-0.00401283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987916,0.0425762) , 
5, 0.00494549, 1, 0, 0.986546,0.00450014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629604,-0.0160098) , 
0, 0.00221543, 1, 0, 0.96617,-0.00205863) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.017029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00016716,-0.0165803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0166779) , 
0, 0.0401944, 1, 0, 4.66489e-05,-0.213829) , 
2, 0.119019, 1, 0, 3.59329e-05,-0.216424) , 
0, 0.00466298, 1, 0, 0.499838,-0.105528)    );
  // itree = 33
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983553,0.0087344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425201,-0.0166889) , 
2, 0.00226157, 1, 0, 0.714515,-0.0580947) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990166,0.00875436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896002,0.0272404) , 
2, 0.0224668, 1, 0, 0.981112,0.0091393) , 
7, 7.43666e-06, 1, 0, 0.915577,-0.00738823) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00361855,-0.0186785) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0165537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0165606) , 
2, 0.176937, 1, 0, 0,-0.209378) , 
0, 0.0327351, 1, 0, 0.000873262,-0.217528) , 
2, 0.0476074, 1, 0, 0.500402,-0.102768)    );
  // itree = 34
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971607,0.000658631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261793,-0.0167386) , 
2, 0.00452932, 1, 0, 0.731485,-0.0519894) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99522,0.0301387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89173,0.0238638) , 
2, 0.0223832, 1, 0, 0.985057,0.0105691) , 
7, 8.02367e-06, 1, 0, 0.916969,-0.00622878) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00222903,-0.0185714) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0164407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0164476) , 
2, 0.176884, 1, 0, 0,-0.20394) , 
0, 0.0327047, 1, 0, 0.000541703,-0.212329) , 
2, 0.04759, 1, 0, 0.504531,-0.0989842)    );
  // itree = 35
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999693,0.0832528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99291,0.011247) , 
2, 0.0109863, 1, 0, 0.998295,0.00551524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703205,-0.00973956) , 
2, 0.0231309, 1, 0, 0.972239,-0.000191099) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0166864) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000160226,-0.016231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0163387) , 
0, 0.0401284, 1, 0, 4.6548e-05,-0.197291) , 
2, 0.119026, 1, 0, 3.57284e-05,-0.199768) , 
0, 0.00465917, 1, 0, 0.502118,-0.0966987)    );
  // itree = 36
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980611,0.00244548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418199,-0.0163129) , 
2, 0.00226466, 1, 0, 0.710394,-0.0547938) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990035,0.00702124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859818,0.0177884) , 
2, 0.024138, 1, 0, 0.979943,0.00634017) , 
7, 7.43662e-06, 1, 0, 0.912781,-0.00889222) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00324061,-0.0185579) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0162229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0162321) , 
0, 0.0546245, 1, 0, 0,-0.193349) , 
0, 0.0279961, 1, 0, 0.000682348,-0.201305) , 
2, 0.04759, 1, 0, 0.498789,-0.0962265)    );
  // itree = 37
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999549,0.0845884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973053,-0.008312) , 
0, 0.000105487, 1, 0, 0.986735,0.00300717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670464,-0.0155659) , 
0, 0.00221543, 1, 0, 0.970425,-0.00188533) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0165636) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000167718,-0.0160296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0161339) , 
0, 0.0401201, 1, 0, 4.48436e-05,-0.187177) , 
2, 0.119072, 1, 0, 3.48522e-05,-0.190009) , 
0, 0.004655, 1, 0, 0.496663,-0.0937306)    );
  // itree = 38
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932,-0.00855008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24596,-0.0162031) , 
4, 0.00289952, 1, 0, 0.758748,-0.0422853) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98866,0.00401254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904786,0.0282376) , 
2, 0.0247134, 1, 0, 0.982327,0.00672191) , 
7, 9.16489e-06, 1, 0, 0.916374,-0.00773461) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00317608,-0.0188107) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0160264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.016035) , 
0, 0.0548132, 1, 0, 0,-0.183439) , 
0, 0.0280682, 1, 0, 0.000682519,-0.192696) , 
2, 0.0476074, 1, 0, 0.498627,-0.0921156)    );
  // itree = 39
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874223,-0.0127601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992917,0.033862) , 
7, 1.09532e-05, 1, 0, 0.952713,-0.00158152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406304,-0.0122221) , 
2, 0.027117, 1, 0, 0.915059,-0.0081047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00266198,-0.0179918) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0159371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0159447) , 
2, 0.176937, 1, 0, 0,-0.178818) , 
0, 0.0327127, 1, 0, 0.000615877,-0.186289) , 
2, 0.0476074, 1, 0, 0.505071,-0.0879931)    );
  // itree = 40
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977625,0.00269968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204238,-0.0159684) , 
2, 0.00452932, 1, 0, 0.713265,-0.0475982) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987193,0.00139261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898691,0.0240842) , 
2, 0.0246215, 1, 0, 0.980685,0.00537227) , 
7, 7.43662e-06, 1, 0, 0.916082,-0.00742423) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.001239,-0.0185732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0158419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0158527) , 
0, 0.0580924, 1, 0, 0,-0.173997) , 
0, 0.0280548, 1, 0, 0.000269333,-0.183261) , 
2, 0.04759, 1, 0, 0.503655,-0.0866104)    );
  // itree = 41
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998678,0.0631533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0885607) , 
7, 3.35338e-05, 1, 0, 0.998766,0.00456513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671854,-0.012559) , 
2, 0.0225656, 1, 0, 0.966233,-0.00369065) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0164331) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000166421,-0.0156373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0157677) , 
0, 0.0402164, 1, 0, 4.43159e-05,-0.168005) , 
2, 0.0953071, 1, 0, 3.55345e-05,-0.171634) , 
0, 0.00466573, 1, 0, 0.497633,-0.0851423)    );
  // itree = 42
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963151,-0.00552099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.290177,-0.0160011) , 
2, 0.00452932, 1, 0, 0.73875,-0.0428641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992282,-0.00300233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891471,0.0174763) , 
2, 0.0226702, 1, 0, 0.983055,0.00408383) , 
7, 8.56918e-06, 1, 0, 0.914189,-0.00915002) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00302496,-0.0178319) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0156747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0156836) , 
2, 0.177141, 1, 0, 0,-0.165119) , 
0, 0.02815, 1, 0, 0.000646579,-0.172327) , 
2, 0.0476103, 1, 0, 0.499591,-0.0832054)    );
  // itree = 43
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.725117,-0.0145268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988154,0.0137938) , 
7, 3.46264e-06, 1, 0, 0.959056,-0.00155143) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765504,-0.0137696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428762,-0.0114002) , 
2, 0.0180926, 1, 0, 0.598966,-0.0606546) , 
4, 0.00578796, 1, 0, 0.912777,-0.00914735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0026329,-0.0180092) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0155977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0156057) , 
2, 0.177373, 1, 0, 0,-0.16098) , 
0, 0.0327331, 1, 0, 0.000608568,-0.169607) , 
2, 0.0476074, 1, 0, 0.500042,-0.0817515)    );
  // itree = 44
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973533,-0.000347876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.271238,-0.015926) , 
2, 0.00451733, 1, 0, 0.745637,-0.0393235) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979128,-0.00223334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9977,0.0914126) , 
7, 3.29166e-05, 1, 0, 0.981435,0.00376361) , 
7, 8.02375e-06, 1, 0, 0.920113,-0.00744166) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00538405,-0.0184216) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0155258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0155142) , 
7, -1.88634e-05, 1, 0, 0,-0.156612) , 
0, 0.0280761, 1, 0, 0.00111686,-0.166036) , 
2, 0.0476074, 1, 0, 0.504226,-0.0792128)    );
  // itree = 45
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965671,-0.00388143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.216711,-0.0157596) , 
2, 0.00452932, 1, 0, 0.720395,-0.0421162) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99479,0.0146809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901145,0.0193884) , 
2, 0.0226702, 1, 0, 0.9861,0.00638263) , 
7, 7.43653e-06, 1, 0, 0.920907,-0.00551694) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00197108,-0.0181125) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0154409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0154513) , 
0, 0.0547738, 1, 0, 0,-0.152554) , 
0, 0.0280288, 1, 0, 0.000415532,-0.161062) , 
2, 0.0476103, 1, 0, 0.501611,-0.0763698)    );
  // itree = 46
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974682,-0.000725078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284626,-0.0160513) , 
2, 0.00452932, 1, 0, 0.749401,-0.0369663) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991168,-0.0010839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905576,0.0141395) , 
2, 0.0217983, 1, 0, 0.982387,0.00329865) , 
7, 8.56918e-06, 1, 0, 0.916304,-0.00812189) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00229701,-0.0172389) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0153748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0153821) , 
2, 0.177024, 1, 0, 0,-0.148789) , 
0, 0.0326922, 1, 0, 0.000534021,-0.155187) , 
2, 0.0476074, 1, 0, 0.500828,-0.074844)    );
  // itree = 47
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972274,-0.00199889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254589,-0.0153028) , 
2, 0.00452932, 1, 0, 0.742943,-0.0359684) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992241,0.0108821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895621,0.0157904) , 
2, 0.0246175, 1, 0, 0.985308,0.0048882) , 
7, 8.02375e-06, 1, 0, 0.920311,-0.0060687) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00292905,-0.0171847) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0153054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0153127) , 
2, 0.177024, 1, 0, 0,-0.144929) , 
0, 0.0328165, 1, 0, 0.000687016,-0.151096) , 
2, 0.0476074, 1, 0, 0.502655,-0.071934)    );
  // itree = 48
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998962,0.065855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984691,-0.0584026) , 
2, 0.0180432, 1, 0, 0.998056,0.00307336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663596,-0.0107146) , 
2, 0.0237746, 1, 0, 0.970159,-0.00281999) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0160693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000331323,-0.0150901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0152454) , 
0, 0.0400837, 1, 0, 9.25199e-05,-0.139168) , 
2, 0.119072, 1, 0, 7.12514e-05,-0.143752) , 
0, 0.0046499, 1, 0, 0.499696,-0.0711678)    );
  // itree = 49
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980728,0.000674075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431342,-0.0149903) , 
2, 0.00225975, 1, 0, 0.724273,-0.0374471) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998472,0.0721861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81454,-0.0145853) , 
0, 0.0021421, 1, 0, 0.980925,0.00169622) , 
7, 7.43666e-06, 1, 0, 0.918287,-0.00785695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00269969,-0.0169604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0151725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0151811) , 
2, 0.17708, 1, 0, 0,-0.137483) , 
0, 0.0327822, 1, 0, 0.000650026,-0.143588) , 
2, 0.0476103, 1, 0, 0.503933,-0.0691457)    );
  // itree = 50
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968307,-0.00397056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.271075,-0.0164928) , 
2, 0.00452314, 1, 0, 0.742254,-0.0366145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994629,0.0170174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90375,0.0169455) , 
2, 0.0246175, 1, 0, 0.987992,0.00544819) , 
7, 8.56923e-06, 1, 0, 0.918214,-0.00649566) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0027947,-0.0170196) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0151072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.015116) , 
0, 0.054745, 1, 0, 0,-0.133785) , 
0, 0.0280665, 1, 0, 0.000599337,-0.139442) , 
2, 0.0476103, 1, 0, 0.498405,-0.0673187)    );
  // itree = 51
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999692,0.0795177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991631,-0.040074) , 
8, 0.00992552, 1, 0, 0.998039,0.0020912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657798,-0.0123782) , 
2, 0.0235276, 1, 0, 0.967436,-0.00507962) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0159339) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0149287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0150572) , 
0, 0.040275, 1, 0, 0,-0.128395) , 
2, 0.0952643, 1, 0, 0,-0.132418) , 
0, 0.00467007, 1, 0, 0.492306,-0.0676185)    );
  // itree = 52
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937704,-0.0148775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99034,0.0267405) , 
7, 2.40083e-05, 1, 0, 0.952442,-0.00516834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442741,-0.0103544) , 
2, 0.0271759, 1, 0, 0.918749,-0.00898114) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00488804,-0.0170154) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0149968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0149865) , 
7, -1.79295e-05, 1, 0, 0,-0.126876) , 
0, 0.0280499, 1, 0, 0.00101627,-0.133408) , 
2, 0.0476074, 1, 0, 0.499129,-0.0658734)    );
  // itree = 53
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9671,-0.00516168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24313,-0.0154087) , 
2, 0.00452932, 1, 0, 0.728326,-0.0343545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991305,0.00434124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906653,0.0174627) , 
2, 0.0244257, 1, 0, 0.985289,0.00390139) , 
7, 8.02354e-06, 1, 0, 0.916395,-0.00635524) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00341594,-0.0174214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0149308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0149407) , 
0, 0.054745, 1, 0, 0,-0.123586) , 
0, 0.0280288, 1, 0, 0.000722228,-0.131501) , 
2, 0.0476103, 1, 0, 0.499278,-0.063363)    );
  // itree = 54
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999698,0.0786378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989643,-0.070024) , 
2, 0.0111607, 1, 0, 0.997608,0.00131602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681977,-0.0106308) , 
2, 0.0235276, 1, 0, 0.970876,-0.004031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0155427) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0147666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0148887) , 
0, 0.0401717, 1, 0, 0,-0.118545) , 
2, 0.119026, 1, 0, 0,-0.121995) , 
0, 0.00466015, 1, 0, 0.49925,-0.0613347)    );
  // itree = 55
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0874784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997729,0.0195104) , 
7, 8.82351e-06, 1, 0, 0.998299,0.00165535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662333,-0.0119603) , 
2, 0.0231309, 1, 0, 0.967539,-0.00508686) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0156183) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0147165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014836) , 
0, 0.0402378, 1, 0, 0,-0.115437) , 
2, 0.119418, 1, 0, 0,-0.119572) , 
0, 0.00466029, 1, 0, 0.499064,-0.0605199)    );
  // itree = 56
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976287,-0.00509151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397076,-0.0156798) , 
2, 0.00452932, 1, 0, 0.793542,-0.0249603) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994724,0.00335168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909341,0.0161016) , 
2, 0.0223796, 1, 0, 0.98609,0.00410282) , 
7, 1.00908e-05, 1, 0, 0.923033,-0.00541486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00495776,-0.016429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0147749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0147854) , 
2, 0.177002, 1, 0, 0,-0.114367) , 
0, 0.0326541, 1, 0, 0.00112177,-0.119834) , 
2, 0.0476074, 1, 0, 0.497701,-0.0582033)    );
  // itree = 57
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836645,-0.0128008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987182,0.00106976) , 
7, 8.0238e-06, 1, 0, 0.949343,-0.00422498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401438,-0.0110276) , 
2, 0.027104, 1, 0, 0.9115,-0.00835674) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00351421,-0.0167197) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0147258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014736) , 
2, 0.177124, 1, 0, 0,-0.111406) , 
0, 0.0327577, 1, 0, 0.000799401,-0.117922) , 
2, 0.04759, 1, 0, 0.500613,-0.0577901)    );
  // itree = 58
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975128,-0.0059053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420771,-0.0151095) , 
2, 0.00226157, 1, 0, 0.709661,-0.0338471) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992106,-0.0102341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913454,0.0176721) , 
2, 0.0223796, 1, 0, 0.984616,0.00262976) , 
7, 7.43662e-06, 1, 0, 0.918288,-0.00616956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00325617,-0.016777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0146752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014685) , 
0, 0.054614, 1, 0, 0,-0.108335) , 
0, 0.0279953, 1, 0, 0.000673367,-0.114742) , 
2, 0.04759, 1, 0, 0.499551,-0.0557149)    );
  // itree = 59
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969053,-0.00612918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190396,-0.0164726) , 
2, 0.00451951, 1, 0, 0.698144,-0.036039) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997569,0.0537783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816102,-0.0125059) , 
0, 0.0021421, 1, 0, 0.980462,9.96528e-05) , 
7, 7.43659e-06, 1, 0, 0.91085,-0.00881124) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00220111,-0.0166031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0146331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014642) , 
2, 0.176971, 1, 0, 0,-0.105728) , 
0, 0.0327351, 1, 0, 0.000535105,-0.112406) , 
2, 0.04759, 1, 0, 0.501507,-0.0553949)    );
  // itree = 60
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966709,-0.00586087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.189102,-0.015502) , 
2, 0.00452932, 1, 0, 0.693516,-0.0333665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983148,-0.00548554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996453,0.0758072) , 
7, 3.14214e-05, 1, 0, 0.985238,0.00222703) , 
7, 7.43662e-06, 1, 0, 0.911977,-0.0067116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00323597,-0.0161706) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145973) , 
2, 0.176937, 1, 0, 0,-0.103) , 
0, 0.0327827, 1, 0, 0.000779083,-0.108539) , 
2, 0.0476074, 1, 0, 0.505151,-0.0521748)    );
  // itree = 61
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999665,0.0752205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992711,-0.0356137) , 
2, 0.00902158, 1, 0, 0.997794,0.000981733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652394,-0.0117196) , 
2, 0.0237746, 1, 0, 0.967768,-0.00514242) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0154942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145537) , 
0, 0.0401098, 1, 0, 0,-0.0984221) , 
2, 0.119254, 1, 0, 0,-0.102771) , 
0, 0.00465317, 1, 0, 0.494203,-0.0529156)    );
  // itree = 62
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999688,0.0745638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993137,-0.0277363) , 
2, 0.0109863, 1, 0, 0.998282,0.0011211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682539,-0.0108972) , 
2, 0.0231309, 1, 0, 0.969046,-0.00465122) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0153805) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145117) , 
0, 0.0402627, 1, 0, 0,-0.0958594) , 
2, 0.119072, 1, 0, 0,-0.0998381) , 
0, 0.00467007, 1, 0, 0.501647,-0.0505626)    );
  // itree = 63
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998959,0.0445358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982808,-0.0795867) , 
0, 0.00213683, 1, 0, 0.998037,0.00060427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686173,-0.00814773) , 
2, 0.02274, 1, 0, 0.96846,-0.00348561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0152843) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144711) , 
0, 0.0401944, 1, 0, 0,-0.0932718) , 
2, 0.119019, 1, 0, 0,-0.0969923) , 
0, 0.00466298, 1, 0, 0.50734,-0.0480076)    );
  // itree = 64
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968953,-0.00829622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24137,-0.0157279) , 
2, 0.00452932, 1, 0, 0.730815,-0.0279823) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981346,-0.0046585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.102314) , 
7, 3.4299e-05, 1, 0, 0.982879,0.00091946) , 
7, 8.02365e-06, 1, 0, 0.914951,-0.00686917) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00269684,-0.0161802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014432) , 
2, 0.176937, 1, 0, 0,-0.0926744) , 
0, 0.0327274, 1, 0, 0.000633464,-0.0981241) , 
2, 0.0476074, 1, 0, 0.496821,-0.0486013)    );
  // itree = 65
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999219,0.0547875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980373,-0.070529) , 
0, 0.00212808, 1, 0, 0.998047,0.000624623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676728,-0.00863143) , 
2, 0.0235276, 1, 0, 0.970125,-0.00338414) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0155013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000164603,-0.0142627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143926) , 
0, 0.0402164, 1, 0, 4.49775e-05,-0.0884822) , 
2, 0.0952643, 1, 0, 3.59415e-05,-0.092937) , 
0, 0.00466573, 1, 0, 0.501523,-0.0466426)    );
  // itree = 66
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998969,0.0434629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984857,-0.063546) , 
2, 0.0178571, 1, 0, 0.998069,0.000519916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649338,-0.00964872) , 
2, 0.0235276, 1, 0, 0.967421,-0.004362) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0154099) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143557) , 
0, 0.0402429, 1, 0, 0,-0.0862535) , 
2, 0.0952207, 1, 0, 0,-0.0905234) , 
0, 0.00466015, 1, 0, 0.50239,-0.045779)    );
  // itree = 67
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983521,-0.00509375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42311,-0.0149132) , 
2, 0.00225866, 1, 0, 0.712435,-0.0264289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981896,-0.0121742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993981,0.0613364) , 
7, 2.71888e-05, 1, 0, 0.985249,0.00200947) , 
7, 7.43666e-06, 1, 0, 0.918001,-0.00500054) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00321525,-0.0157197) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143213) , 
2, 0.177024, 1, 0, 0,-0.0856152) , 
0, 0.0326171, 1, 0, 0.000767375,-0.0903803) , 
2, 0.0476074, 1, 0, 0.503816,-0.0435546)    );
  // itree = 68
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879165,-0.0185148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990387,0.00514799) , 
7, 1.09531e-05, 1, 0, 0.952754,-0.00447781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38167,-0.0104147) , 
2, 0.0271759, 1, 0, 0.910951,-0.00808929) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00289465,-0.0159195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142865) , 
2, 0.177002, 1, 0, 0,-0.0834112) , 
0, 0.0328076, 1, 0, 0.000684415,-0.0889298) , 
2, 0.0476074, 1, 0, 0.497009,-0.0448513)    );
  // itree = 69
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957485,-0.0115978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.344684,-0.016924) , 
2, 0.0158526, 1, 0, 0.886586,-0.0125178) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997624,0.0259183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965323,0.0415012) , 
2, 0.0226702, 1, 0, 0.991617,0.0118284) , 
7, 2.22501e-05, 1, 0, 0.920931,-0.00455669) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00414695,-0.0156666) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014237) , 
7, -1.7392e-05, 1, 0, 0,-0.0810078) , 
0, 0.0280682, 1, 0, 0.000866925,-0.0852334) , 
2, 0.0476103, 1, 0, 0.500181,-0.0414505)    );
  // itree = 70
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999413,0.0556669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989649,-0.06861) , 
0, 0.00180188, 1, 0, 0.997797,4.20372e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68467,-0.00852957) , 
2, 0.0231309, 1, 0, 0.969492,-0.00382437) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0151475) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000169036,-0.0140933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142199) , 
0, 0.0401717, 1, 0, 4.72192e-05,-0.0774893) , 
2, 0.118931, 1, 0, 3.60706e-05,-0.0814639) , 
0, 0.00466015, 1, 0, 0.502356,-0.0412353)    );
  // itree = 71
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975529,-0.00753072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351406,-0.0160821) , 
2, 0.00452932, 1, 0, 0.778799,-0.0197257) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990867,-0.0138841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940864,0.021125) , 
2, 0.0219727, 1, 0, 0.985505,0.00181007) , 
7, 9.69467e-06, 1, 0, 0.921306,-0.00487861) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00272827,-0.0156325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141887) , 
2, 0.177046, 1, 0, 0,-0.0770815) , 
0, 0.0326922, 1, 0, 0.000614308,-0.0815357) , 
2, 0.0476103, 1, 0, 0.50738,-0.0393422)    );
  // itree = 72
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973778,-0.0117298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773887,-0.0103451) , 
4, 0.00570315, 1, 0, 0.951762,-0.00431606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465168,-0.00978236) , 
2, 0.0268598, 1, 0, 0.919726,-0.00684643) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00327189,-0.0158107) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141553) , 
2, 0.176993, 1, 0, 0,-0.0748958) , 
0, 0.0280548, 1, 0, 0.000687364,-0.0798718) , 
2, 0.04759, 1, 0, 0.50378,-0.0398969)    );
  // itree = 73
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810811,-0.0134034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988958,-0.00233897) , 
7, 8.0238e-06, 1, 0, 0.944155,-0.00411702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.402456,-0.0100011) , 
2, 0.0271388, 1, 0, 0.905074,-0.00692779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00289542,-0.0157498) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141252) , 
2, 0.177098, 1, 0, 0,-0.0729731) , 
0, 0.0279644, 1, 0, 0.000597258,-0.0776749) , 
2, 0.0476103, 1, 0, 0.493127,-0.0391498)    );
  // itree = 74
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998927,0.0359857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985494,-0.0524586) , 
0, 0.00200209, 1, 0, 0.997586,6.37544e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644105,-0.00963185) , 
2, 0.0237746, 1, 0, 0.967333,-0.00444761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0150418) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014099) , 
0, 0.0402281, 1, 0, 0,-0.0696534) , 
2, 0.119026, 1, 0, 0,-0.0731944) , 
0, 0.00466573, 1, 0, 0.495232,-0.0379991)    );
  // itree = 75
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958947,-0.0167064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818931,0.0144298) , 
2, 0.0219872, 1, 0, 0.951847,-0.00351759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440265,-0.00909596) , 
2, 0.0271759, 1, 0, 0.918189,-0.00584335) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0028509,-0.0152562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140684) , 
2, 0.176967, 1, 0, 0,-0.0691907) , 
0, 0.0279911, 1, 0, 0.000625142,-0.0732055) , 
2, 0.0475813, 1, 0, 0.508497,-0.0359205)    );
  // itree = 76
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99832,0.0141943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.088772) , 
7, 3.00036e-05, 1, 0, 0.998543,0.00104518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642701,-0.0101126) , 
2, 0.0237746, 1, 0, 0.968433,-0.00377059) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0149053) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000159378,-0.0139304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140438) , 
0, 0.0401395, 1, 0, 4.60781e-05,-0.0661022) , 
2, 0.119161, 1, 0, 3.57115e-05,-0.0696427) , 
0, 0.00465687, 1, 0, 0.499802,-0.0356477)    );
  // itree = 77
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975098,-0.00487666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204796,-0.0151904) , 
2, 0.00452932, 1, 0, 0.723385,-0.0202746) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998687,0.0616383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892703,-0.0101643) , 
0, 0.00201145, 1, 0, 0.983185,-0.000110541) , 
7, 7.43666e-06, 1, 0, 0.91809,-0.00516285) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00405894,-0.0152007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140178) , 
2, 0.176937, 1, 0, 0,-0.0658349) , 
0, 0.0327226, 1, 0, 0.000969222,-0.0698894) , 
2, 0.0476074, 1, 0, 0.497059,-0.0348774)    );
  // itree = 78
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.087273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992778,-0.0416526) , 
2, 0.00902158, 1, 0, 0.998041,0.000313005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667301,-0.00830432) , 
2, 0.0237746, 1, 0, 0.969765,-0.00326559) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0148486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139918) , 
0, 0.0401944, 1, 0, 0,-0.0626512) , 
2, 0.119026, 1, 0, 0,-0.0660373) , 
0, 0.00466298, 1, 0, 0.493618,-0.034086)    );
  // itree = 79
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956879,-0.00911934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.230587,-0.0157826) , 
2, 0.00679398, 1, 0, 0.783202,-0.0157585) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992985,-0.00841583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91978,0.0149048) , 
2, 0.0224668, 1, 0, 0.985513,0.00200016) , 
7, 1.00908e-05, 1, 0, 0.919023,-0.00383624) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00287814,-0.0154798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139654) , 
2, 0.176884, 1, 0, 0,-0.0623355) , 
0, 0.0280665, 1, 0, 0.000579174,-0.0668567) , 
2, 0.04759, 1, 0, 0.489156,-0.0333322)    );
  // itree = 80
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959432,-0.00917204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195508,-0.0144675) , 
2, 0.00452314, 1, 0, 0.69756,-0.0204062) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98072,-0.00941631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99583,0.0685051) , 
7, 3.00096e-05, 1, 0, 0.983719,0.00104793) , 
7, 7.43659e-06, 1, 0, 0.912524,-0.00428976) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0034235,-0.0152084) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139406) , 
2, 0.177054, 1, 0, 0,-0.0606881) , 
0, 0.0280548, 1, 0, 0.000748129,-0.0648919) , 
2, 0.0476103, 1, 0, 0.497696,-0.0318618)    );
  // itree = 81
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998536,0.00788037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0881036) , 
7, 2.82391e-05, 1, 0, 0.998775,0.000730882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685952,-0.00775781) , 
2, 0.02308, 1, 0, 0.970371,-0.00246821) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0148024) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139195) , 
0, 0.0401944, 1, 0, 0,-0.0579438) , 
2, 0.119021, 1, 0, 0,-0.0612113) , 
0, 0.00466298, 1, 0, 0.502527,-0.03079)    );
  // itree = 82
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978572,0.00358058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782303,-0.0100246) , 
4, 0.00571427, 1, 0, 0.957252,-0.00116899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433197,-0.00968894) , 
2, 0.0271388, 1, 0, 0.920136,-0.00369898) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00366952,-0.0151409) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138949) , 
2, 0.176993, 1, 0, 0,-0.0575666) , 
0, 0.0280926, 1, 0, 0.000757154,-0.0614946) , 
2, 0.04759, 1, 0, 0.500233,-0.0300957)    );
  // itree = 83
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956712,-0.014093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877446,0.0173919) , 
2, 0.0206938, 1, 0, 0.951806,-0.00228172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465462,-0.00900151) , 
2, 0.0271759, 1, 0, 0.922252,-0.00425847) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00375568,-0.0147604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013875) , 
2, 0.176884, 1, 0, 0,-0.0562291) , 
0, 0.032673, 1, 0, 0.000895841,-0.0598228) , 
2, 0.04759, 1, 0, 0.500083,-0.0297183)    );
  // itree = 84
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999484,0.0545603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988911,-0.0378814) , 
2, 0.0178571, 1, 0, 0.998795,0.000794381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642272,-0.00884719) , 
2, 0.0235276, 1, 0, 0.96647,-0.00296362) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014642) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138532) , 
0, 0.0402627, 1, 0, 0,-0.0535215) , 
2, 0.119021, 1, 0, 0,-0.0565528) , 
0, 0.00467007, 1, 0, 0.501423,-0.0287497)    );
  // itree = 85
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957538,-0.014527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983221,0.0286719) , 
5, 0.00486149, 1, 0, 0.965198,-0.000812446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330435,-0.012374) , 
5, 0.00600166, 1, 0, 0.91753,-0.00391996) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00242373,-0.0148476) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138327) , 
2, 0.177046, 1, 0, 0,-0.0533248) , 
0, 0.0327577, 1, 0, 0.000571276,-0.0569159) , 
2, 0.0476074, 1, 0, 0.501061,-0.0279899)    );
  // itree = 86
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979222,-0.00496162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352555,-0.015638) , 
2, 0.00447591, 1, 0, 0.778217,-0.0138159) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991325,-0.0251869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923736,0.0128076) , 
2, 0.0217983, 1, 0, 0.983931,2.41883e-05) , 
7, 9.69477e-06, 1, 0, 0.919135,-0.00433516) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00230706,-0.0146663) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138125) , 
2, 0.17688, 1, 0, 0,-0.0519609) , 
0, 0.0327822, 1, 0, 0.00052472,-0.0551327) , 
2, 0.0476103, 1, 0, 0.496857,-0.0276864)    );
  // itree = 87
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998588,0.008391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612955,-0.012827) , 
2, 0.0211472, 1, 0, 0.969222,-0.00426854) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984541,0.00684858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958619,0.0339956) , 
0, 0.00205442, 1, 0, 0.971289,0.012333) , 
5, 0.00555688, 1, 0, 0.969526,-0.00182478) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0148369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000165871,-0.0136746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137926) , 
0, 0.0401944, 1, 0, 4.72933e-05,-0.0493329) , 
2, 0.119019, 1, 0, 3.66231e-05,-0.0528481) , 
0, 0.00466298, 1, 0, 0.50632,-0.0262029)    );
  // itree = 88
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96032,-0.0138667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376226,-0.0144885) , 
2, 0.0158526, 1, 0, 0.888007,-0.00847911) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991631,0.00199231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957429,0.0319681) , 
2, 0.0244311, 1, 0, 0.986445,0.00630333) , 
7, 2.25436e-05, 1, 0, 0.919782,-0.00370746) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00305747,-0.0149765) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137718) , 
2, 0.176937, 1, 0, 0,-0.049165) , 
0, 0.0279961, 1, 0, 0.000641558,-0.0533967) , 
2, 0.0476074, 1, 0, 0.502443,-0.026269)    );
  // itree = 89
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999184,0.0375268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987569,-0.0792722) , 
0, 0.00200209, 1, 0, 0.998038,-1.54337e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647689,-0.00771763) , 
2, 0.0237746, 1, 0, 0.966528,-0.00314065) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0148144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000161255,-0.0136361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013755) , 
0, 0.0401834, 1, 0, 4.68374e-05,-0.0467148) , 
2, 0.118975, 1, 0, 3.59329e-05,-0.0504416) , 
0, 0.00466015, 1, 0, 0.499397,-0.0260024)    );
  // itree = 90
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9995,0.0578583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812934,-0.00425824) , 
2, 0.0237746, 1, 0, 0.987157,5.84751e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630691,-0.0167688) , 
0, 0.00221718, 1, 0, 0.967562,-0.0029258) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0147587) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013737) , 
0, 0.0402281, 1, 0, 0,-0.0456179) , 
2, 0.119107, 1, 0, 0,-0.0487599) , 
0, 0.00466573, 1, 0, 0.502448,-0.0249586)    );
  // itree = 91
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962665,-0.0140783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332475,-0.0151011) , 
2, 0.0157878, 1, 0, 0.88913,-0.00757306) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994848,0.0147358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950633,0.0278155) , 
2, 0.0241699, 1, 0, 0.988139,0.0072051) , 
7, 2.22501e-05, 1, 0, 0.92227,-0.00262656) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00454948,-0.0143286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013718) , 
2, 0.176884, 1, 0, 0,-0.0454227) , 
0, 0.0280338, 1, 0, 0.00093244,-0.0481793) , 
2, 0.04759, 1, 0, 0.500598,-0.0234748)    );
  // itree = 92
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986589,-0.0112324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989942,0.0347309) , 
0, 0.00190181, 1, 0, 0.986984,-0.000899594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64881,-0.0103631) , 
0, 0.00221886, 1, 0, 0.968256,-0.00246087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014612) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000161948,-0.0135856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137025) , 
0, 0.0402438, 1, 0, 4.61204e-05,-0.043217) , 
2, 0.119072, 1, 0, 3.53014e-05,-0.0460273) , 
0, 0.00466298, 1, 0, 0.495561,-0.0237304)    );
  // itree = 93
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990688,-0.0132755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891196,-0.0215804) , 
0, 0.00133132, 1, 0, 0.971324,-0.00554382) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974927,0.00249385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9816,0.0541157) , 
3, 84.7861, 1, 0, 0.976073,0.00404173) , 
7, 1.75684e-05, 1, 0, 0.973671,-0.000806247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0146206) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000160055,-0.0135699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136847) , 
0, 0.0401956, 1, 0, 4.35976e-05,-0.0420839) , 
2, 0.0953747, 1, 0, 3.49006e-05,-0.044821) , 
0, 0.00466015, 1, 0, 0.496018,-0.0223993)    );
  // itree = 94
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933183,-0.0148491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996679,0.0446912) , 
7, 2.43833e-05, 1, 0, 0.950131,-0.0020083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429879,-0.00924758) , 
2, 0.0271388, 1, 0, 0.91593,-0.00377601) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00257936,-0.0145226) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136702) , 
2, 0.177024, 1, 0, 0,-0.042078) , 
0, 0.0326666, 1, 0, 0.000602785,-0.0449611) , 
2, 0.0476074, 1, 0, 0.501342,-0.0224304)    );
  // itree = 95
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0873163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990459,-0.108783) , 
2, 0.0109863, 1, 0, 0.99806,-0.000295283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675909,-0.00650707) , 
2, 0.0231309, 1, 0, 0.969703,-0.00245465) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000169989,-0.0135367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136543) , 
0, 0.040206, 1, 0, 4.67067e-05,-0.0400088) , 
2, 0.119019, 1, 0, 3.58816e-05,-0.0421741) , 
0, 0.00466298, 1, 0, 0.502868,-0.0215771)    );
  // itree = 96
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955983,-0.00959842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874819,0.0200709) , 
2, 0.0219378, 1, 0, 0.951861,-0.000897109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463418,-0.0104692) , 
2, 0.0271388, 1, 0, 0.922707,-0.00284867) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00324837,-0.0145601) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136378) , 
2, 0.176937, 1, 0, 0,-0.0398128) , 
0, 0.0281337, 1, 0, 0.000663968,-0.0433256) , 
2, 0.0476074, 1, 0, 0.493223,-0.0217027)    );
  // itree = 97
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97505,-0.00536084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253386,-0.0134623) , 
2, 0.00452932, 1, 0, 0.738315,-0.011002) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992506,-0.000996186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920978,0.0155701) , 
2, 0.0223832, 1, 0, 0.985341,0.00245417) , 
7, 8.56916e-06, 1, 0, 0.914484,-0.0014056) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00175222,-0.0145941) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136247) , 
2, 0.17695, 1, 0, 0,-0.0388889) , 
0, 0.0326541, 1, 0, 0.000417416,-0.0421111) , 
2, 0.0476103, 1, 0, 0.499908,-0.0198676)    );
  // itree = 98
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97906,-0.00519292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433651,-0.014494) , 
2, 0.00226157, 1, 0, 0.722194,-0.0128067) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999031,0.0624997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881639,-0.0107027) , 
0, 0.00203233, 1, 0, 0.982984,-0.00035902) , 
7, 7.4365e-06, 1, 0, 0.918669,-0.00342883) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00327147,-0.0145166) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136083) , 
2, 0.176945, 1, 0, 0,-0.0377525) , 
0, 0.0279627, 1, 0, 0.000693359,-0.0409886) , 
2, 0.0476103, 1, 0, 0.492245,-0.0208763)    );
  // itree = 99
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998741,0.00607926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802136,-0.00455845) , 
2, 0.0237746, 1, 0, 0.985442,-0.000920581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667828,-0.0133627) , 
0, 0.00221886, 1, 0, 0.969451,-0.00267249) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144432) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135962) , 
0, 0.0402616, 1, 0, 0,-0.0359809) , 
2, 0.119072, 1, 0, 0,-0.0386608) , 
0, 0.00466298, 1, 0, 0.498376,-0.0201599)    );
  // itree = 100
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997894,-0.047466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0884188) , 
5, 0.00435974, 1, 0, 0.998774,0.000513615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669431,-0.00642018) , 
2, 0.0237746, 1, 0, 0.97104,-0.00158369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144017) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135818) , 
0, 0.035773, 1, 0, 0,-0.0349707) , 
2, 0.0951945, 1, 0, 0,-0.0371288) , 
0, 0.00466573, 1, 0, 0.493856,-0.0190511)    );
  // itree = 101
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985837,-0.0117915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840421,-0.0249082) , 
0, 0.00151007, 1, 0, 0.966448,-0.00649294) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999408,0.0583196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85716,0.0098874) , 
2, 0.0229078, 1, 0, 0.975409,0.00437871) , 
5, 0.00436555, 1, 0, 0.970518,-0.00155575) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144913) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000166238,-0.0134503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135695) , 
0, 0.0401845, 1, 0, 4.60077e-05,-0.0341461) , 
2, 0.119107, 1, 0, 3.53096e-05,-0.0367468) , 
0, 0.00466029, 1, 0, 0.496992,-0.0187264)    );
  // itree = 102
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0873377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980443,-0.0364813) , 
0, 0.00212808, 1, 0, 0.998801,0.00059378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683589,-0.00408217) , 
2, 0.0237746, 1, 0, 0.973727,-0.000614849) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145346) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000169416,-0.0134368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135567) , 
0, 0.040275, 1, 0, 4.69542e-05,-0.0332759) , 
2, 0.119072, 1, 0, 3.6393e-05,-0.0358495) , 
0, 0.00467007, 1, 0, 0.508795,-0.0174392)    );
  // itree = 103
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970055,-0.00905764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513495,-0.0186554) , 
2, 0.0112933, 1, 0, 0.882936,-0.00717903) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994693,-0.00226783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960138,0.0302656) , 
2, 0.0239142, 1, 0, 0.989171,0.00546899) , 
7, 2.22502e-05, 1, 0, 0.918065,-0.00299671) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00372089,-0.0142728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135431) , 
2, 0.176945, 1, 0, 0,-0.0331136) , 
0, 0.0280123, 1, 0, 0.000780082,-0.0361251) , 
2, 0.0476103, 1, 0, 0.495503,-0.0182578)    );
  // itree = 104
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958472,-0.0132604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394416,-0.011952) , 
2, 0.0158526, 1, 0, 0.890192,-0.00489609) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994248,0.0135182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947579,0.0184999) , 
2, 0.0244257, 1, 0, 0.986859,0.0052705) , 
7, 2.35772e-05, 1, 0, 0.919719,-0.00179068) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00254935,-0.0141991) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135324) , 
2, 0.177024, 1, 0, 0,-0.0323523) , 
0, 0.0326152, 1, 0, 0.000590237,-0.03481) , 
2, 0.0476074, 1, 0, 0.494034,-0.0170832)    );
  // itree = 105
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999226,0.0193905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979399,-0.0444397) , 
0, 0.00213683, 1, 0, 0.998057,-0.00039108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668036,-0.00847365) , 
2, 0.0229078, 1, 0, 0.967004,-0.00330682) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145491) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135204) , 
0, 0.0402164, 1, 0, 0,-0.0307767) , 
2, 0.1191, 1, 0, 0,-0.0334119) , 
0, 0.00466573, 1, 0, 0.497511,-0.0179232)    );
  // itree = 106
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96079,-0.010724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587429,-0.0138481) , 
5, 0.00550696, 1, 0, 0.915296,-0.0043378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960368,0.0217203) , 
6, 0.0115969, 1, 0, 0.918899,-0.00329995) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00157651,-0.0141651) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135091) , 
2, 0.176993, 1, 0, 0,-0.030675) , 
0, 0.0326656, 1, 0, 0.000377581,-0.0331191) , 
2, 0.04759, 1, 0, 0.498873,-0.0169358)    );
  // itree = 107
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952057,-0.0163613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870229,0.0172824) , 
2, 0.0219378, 1, 0, 0.947935,-0.00194778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418909,-0.00762169) , 
2, 0.0272042, 1, 0, 0.913052,-0.00307262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00310191,-0.0141084) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134968) , 
2, 0.177011, 1, 0, 0,-0.0298152) , 
0, 0.0280926, 1, 0, 0.000658382,-0.0328474) , 
2, 0.0476103, 1, 0, 0.502288,-0.0164774)    );
  // itree = 108
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0879376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992897,-0.0404417) , 
2, 0.00878906, 1, 0, 0.998035,-0.00027872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.693899,-0.00603753) , 
2, 0.02308, 1, 0, 0.970719,-0.00203254) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143983) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013487) , 
0, 0.0404344, 1, 0, 0,-0.0283986) , 
2, 0.11925, 1, 0, 0,-0.0309949) , 
0, 0.00467007, 1, 0, 0.496561,-0.0161795)    );
  // itree = 109
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998949,0.016445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.088872) , 
6, 0.0115975, 1, 0, 0.999022,0.000603133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673969,-0.00519342) , 
2, 0.0237746, 1, 0, 0.970154,-0.000919681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143084) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134765) , 
0, 0.040275, 1, 0, 0,-0.0276347) , 
2, 0.119026, 1, 0, 0,-0.0297934) , 
0, 0.00467007, 1, 0, 0.498435,-0.014959)    );
  // itree = 110
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998342,-0.0334953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541158,-0.00878934) , 
2, 0.0229078, 1, 0, 0.965378,-0.00313413) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975431,0.0219816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995544,0.0926109) , 
3, 56.8335, 1, 0, 0.983071,0.0133619) , 
5, 0.00560452, 1, 0, 0.967706,-0.000963894) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142027) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000158206,-0.0133411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134663) , 
0, 0.0403094, 1, 0, 4.61487e-05,-0.0268708) , 
2, 0.119056, 1, 0, 3.58474e-05,-0.0287498) , 
0, 0.00467007, 1, 0, 0.499891,-0.0143969)    );
  // itree = 111
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961889,-0.0170333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86745,0.00932929) , 
2, 0.0204613, 1, 0, 0.956013,-0.00177751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440439,-0.00573941) , 
2, 0.0269601, 1, 0, 0.920259,-0.00271506) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00206796,-0.0143017) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134565) , 
2, 0.176993, 1, 0, 0,-0.0269025) , 
0, 0.0326854, 1, 0, 0.00048994,-0.0302195) , 
2, 0.0476103, 1, 0, 0.497073,-0.0153699)    );
  // itree = 112
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997921,-0.0480098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0884986) , 
5, 0.00436343, 1, 0, 0.998778,0.000270007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68028,-0.00590892) , 
2, 0.0237746, 1, 0, 0.972014,-0.00145797) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134466) , 
0, 0.0402627, 1, 0, 0,-0.0255664) , 
2, 0.118975, 1, 0, 0,-0.0278775) , 
0, 0.00467007, 1, 0, 0.499281,-0.0143069)    );
  // itree = 113
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98535,-0.00569915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992235,0.0435883) , 
0, 0.00190187, 1, 0, 0.986181,1.02891e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644553,-0.0123946) , 
0, 0.00221886, 1, 0, 0.969277,-0.00137131) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144076) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134372) , 
0, 0.040275, 1, 0, 0,-0.0249378) , 
2, 0.119013, 1, 0, 0,-0.0274301) , 
0, 0.00467007, 1, 0, 0.510117,-0.0137157)    );
  // itree = 114
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95928,-0.0114323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.262592,-0.0151897) , 
2, 0.018078, 1, 0, 0.885128,-0.00516604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99582,0.015442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964597,0.0280238) , 
2, 0.0244257, 1, 0, 0.990858,0.00592739) , 
7, 2.33792e-05, 1, 0, 0.916798,-0.00184314) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00255591,-0.0140581) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134273) , 
2, 0.176884, 1, 0, 0,-0.0247863) , 
0, 0.0280548, 1, 0, 0.000531732,-0.027259) , 
2, 0.04759, 1, 0, 0.499747,-0.0134115)    );
  // itree = 115
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958605,-0.0104851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860093,0.00932602) , 
2, 0.0206938, 1, 0, 0.95271,-0.000897865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443275,-0.00754409) , 
2, 0.0272042, 1, 0, 0.92015,-0.00196831) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00293778,-0.0140277) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134183) , 
2, 0.176945, 1, 0, 0,-0.0241385) , 
0, 0.0280123, 1, 0, 0.000611192,-0.0270298) , 
2, 0.0476103, 1, 0, 0.50166,-0.013374)    );
  // itree = 116
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956779,-0.0194605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858053,0.0131449) , 
2, 0.0215425, 1, 0, 0.951911,-0.0018219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.482726,-0.00823636) , 
2, 0.0266462, 1, 0, 0.920571,-0.00284396) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00289156,-0.0138871) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134106) , 
2, 0.176937, 1, 0, 0,-0.0235954) , 
0, 0.0326531, 1, 0, 0.000691219,-0.0263462) , 
2, 0.0476103, 1, 0, 0.50433,-0.0134786)    );
  // itree = 117
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99919,0.0278287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985969,-0.0666755) , 
0, 0.00200209, 1, 0, 0.997822,-0.000486664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652998,-0.00511747) , 
2, 0.0237746, 1, 0, 0.968346,-0.00192504) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134011) , 
0, 0.0402627, 1, 0, 0,-0.0223524) , 
2, 0.09518, 1, 0, 0,-0.0246819) , 
0, 0.00467007, 1, 0, 0.497873,-0.0129815)    );
  // itree = 118
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952766,-0.0181828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813117,0.00823666) , 
2, 0.0219378, 1, 0, 0.945602,-0.00220381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417222,-0.0117017) , 
2, 0.0271759, 1, 0, 0.909799,-0.00387419) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00443692,-0.013454) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013393) , 
2, 0.17695, 1, 0, 0,-0.0223035) , 
0, 0.0280288, 1, 0, 0.000946026,-0.0250461) , 
2, 0.04759, 1, 0, 0.498308,-0.0134599)    );
  // itree = 119
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963444,-0.00795085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385699,-0.0143322) , 
2, 0.0158106, 1, 0, 0.896308,-0.00387691) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991031,3.88783e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959099,0.0302422) , 
2, 0.0244257, 1, 0, 0.986174,0.00462748) , 
7, 2.31142e-05, 1, 0, 0.923986,-0.00125757) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0044561,-0.0131559) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013386) , 
2, 0.177024, 1, 0, 0,-0.0218096) , 
0, 0.0327351, 1, 0, 0.00100633,-0.02396) , 
2, 0.0476074, 1, 0, 0.505731,-0.0115453)    );
  // itree = 120
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948591,-0.0095237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988069,0.06778) , 
6, 0.0115996, 1, 0, 0.951572,-0.00108103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423937,-0.00962066) , 
2, 0.0271388, 1, 0, 0.914727,-0.00239449) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00332082,-0.0135313) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133772) , 
2, 0.177037, 1, 0, 0,-0.0211666) , 
0, 0.0280422, 1, 0, 0.000715189,-0.0236179) , 
2, 0.04759, 1, 0, 0.497878,-0.0120737)    );
  // itree = 121
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958318,-0.00344114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258316,-0.0163856) , 
2, 0.0045166, 1, 0, 0.731773,-0.00749337) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977987,-0.0201695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987354,0.0112946) , 
5, 0.00438084, 1, 0, 0.983315,-0.000444237) , 
7, 8.0238e-06, 1, 0, 0.917118,-0.0022993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00336771,-0.0134211) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133697) , 
2, 0.176884, 1, 0, 0,-0.0206257) , 
0, 0.0280548, 1, 0, 0.000715011,-0.0228886) , 
2, 0.04759, 1, 0, 0.49647,-0.0117502)    );
  // itree = 122
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983261,0.00475493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953802,-0.0276143) , 
2, 0.00860305, 1, 0, 0.980029,-0.00017518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569946,-0.0202997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979365,0.0110699) , 
7, 2.33754e-05, 1, 0, 0.781633,-0.00917474) , 
2, 0.0113233, 1, 0, 0.921442,-0.00283278) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00266874,-0.0134874) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133633) , 
2, 0.176937, 1, 0, 0,-0.0201581) , 
0, 0.0327047, 1, 0, 0.000655685,-0.0223273) , 
2, 0.0476074, 1, 0, 0.506484,-0.0116181)    );
  // itree = 123
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999485,0.0251716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996055,0.0696529) , 
2, 0.0181827, 1, 0, 0.999089,0.00188436) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996068,-0.0370848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518108,-0.00708598) , 
2, 0.0229143, 1, 0, 0.939732,-0.0046081) , 
0, 0.000221718, 1, 0, 0.968673,-0.00144254) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142068) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000160567,-0.0132048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013356) , 
0, 0.0402164, 1, 0, 4.6548e-05,-0.0190709) , 
2, 0.119, 1, 0, 3.58218e-05,-0.0210171) , 
0, 0.00466573, 1, 0, 0.500805,-0.0108974)    );
  // itree = 124
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962088,-0.00416083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843183,0.0130771) , 
2, 0.021839, 1, 0, 0.955953,0.000136633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443197,-0.00811342) , 
2, 0.0270996, 1, 0, 0.923212,-0.000913561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00265766,-0.0133445) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133491) , 
2, 0.176993, 1, 0, 0,-0.019116) , 
0, 0.0327822, 1, 0, 0.00064204,-0.0212296) , 
2, 0.04759, 1, 0, 0.502282,-0.0101829)    );
  // itree = 125
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998724,0.0108141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671668,-0.00404762) , 
2, 0.02274, 1, 0, 0.972523,-0.00063547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974133,0.0401972) , 
3, 111.555, 1, 0, 0.972619,0.000217398) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133422) , 
0, 0.0402164, 1, 0, 0,-0.0181881) , 
2, 0.118975, 1, 0, 0,-0.0202138) , 
0, 0.00466573, 1, 0, 0.502095,-0.00966663)    );
  // itree = 126
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971684,-0.0143447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972311,0.00852956) , 
5, 0.0042254, 1, 0, 0.971969,-0.000573077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987355,0.050959) , 
5, 0.00589926, 1, 0, 0.972777,0.000214279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144461) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000177188,-0.0131661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133356) , 
0, 0.040241, 1, 0, 4.80169e-05,-0.0176972) , 
2, 0.119161, 1, 0, 3.67482e-05,-0.0203924) , 
0, 0.00465687, 1, 0, 0.510062,-0.00958797)    );
  // itree = 127
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914099,-0.0104644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995899,0.0280119) , 
7, 1.62784e-05, 1, 0, 0.952113,-8.3094e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648543,-0.0159447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622654,-0.00369194) , 
3, 45.4337, 1, 0, 0.635501,-0.0105002) , 
4, 0.00579761, 1, 0, 0.91406,-0.00133511) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00284674,-0.013246) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133293) , 
2, 0.176923, 1, 0, 0,-0.0176599) , 
0, 0.0327226, 1, 0, 0.000663843,-0.0196259) , 
2, 0.0476103, 1, 0, 0.505698,-0.00951257)    );
  // itree = 128
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966774,-0.00745667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653134,-0.0100005) , 
2, 0.0158183, 1, 0, 0.911162,-0.00247362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984149,0.0486632) , 
6, 0.0115974, 1, 0, 0.916955,-0.00134576) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00309068,-0.0133235) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133222) , 
2, 0.155484, 1, 0, 0,-0.0171482) , 
0, 0.0280548, 1, 0, 0.000636139,-0.019219) , 
2, 0.0476103, 1, 0, 0.497503,-0.00952737)    );
  // itree = 129
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949896,-0.00783505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972627,0.025544) , 
4, 0.00469879, 1, 0, 0.956657,8.07887e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763431,-0.00992884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42229,-0.00992087) , 
2, 0.0203541, 1, 0, 0.609834,-0.0115132) , 
4, 0.00579908, 1, 0, 0.913103,-0.00137519) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00218628,-0.013869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133163) , 
2, 0.155414, 1, 0, 0,-0.0166991) , 
0, 0.0280256, 1, 0, 0.000444813,-0.019353) , 
2, 0.0476103, 1, 0, 0.493528,-0.00964009)    );
  // itree = 130
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0877995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995904,-0.0333105) , 
8, 0.0078337, 1, 0, 0.998559,0.000357324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635387,-0.00604595) , 
2, 0.0237746, 1, 0, 0.966695,-0.0012113) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144427) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000159547,-0.0131446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133109) , 
0, 0.0402659, 1, 0, 4.59937e-05,-0.0159063) , 
2, 0.119065, 1, 0, 3.52848e-05,-0.0178907) , 
0, 0.00466573, 1, 0, 0.49949,-0.00927278)    );
  // itree = 131
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959482,-0.00448932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334978,-0.0117025) , 
2, 0.0158526, 1, 0, 0.885097,-0.00232427) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993887,-0.0113366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960943,0.0279306) , 
2, 0.0244257, 1, 0, 0.988955,0.00301836) , 
7, 2.22501e-05, 1, 0, 0.91887,-0.0005869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00229586,-0.013454) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133046) , 
2, 0.155619, 1, 0, 0,-0.0158408) , 
0, 0.0280095, 1, 0, 0.000484726,-0.0178928) , 
2, 0.04759, 1, 0, 0.495961,-0.00855612)    );
  // itree = 132
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999745,0.0675554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816719,-0.0029656) , 
2, 0.0229143, 1, 0, 0.986731,0.000413231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62387,-0.019098) , 
0, 0.00221886, 1, 0, 0.967058,-0.00168025) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142596) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000164423,-0.0131213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132996) , 
0, 0.0403107, 1, 0, 4.51122e-05,-0.0151087) , 
2, 0.119013, 1, 0, 3.46597e-05,-0.0170895) , 
0, 0.00466298, 1, 0, 0.489929,-0.00928315)    );
  // itree = 133
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999553,0.0738747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968652,-0.0176191) , 
0, 0.000211155, 1, 0, 0.984934,-0.00176272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645913,-0.0121303) , 
0, 0.00221718, 1, 0, 0.967407,-0.00271798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141374) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132941) , 
0, 0.0402164, 1, 0, 0,-0.0147585) , 
2, 0.119072, 1, 0, 0,-0.0165393) , 
0, 0.00466573, 1, 0, 0.498304,-0.00942004)    );
  // itree = 134
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954823,-0.00767259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443356,-0.0100699) , 
2, 0.0203541, 1, 0, 0.899113,-0.00252751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986673,0.0185283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928297,0.0304279) , 
2, 0.0181456, 1, 0, 0.965776,0.00718386) , 
6, 0.0110177, 1, 0, 0.908903,-0.00110133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00282234,-0.0128023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132889) , 
2, 0.17688, 1, 0, 0,-0.0146936) , 
0, 0.0327351, 1, 0, 0.000673701,-0.0165191) , 
2, 0.0476103, 1, 0, 0.493514,-0.00815283)    );
  // itree = 135
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887021,-0.0155756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992561,0.0107695) , 
7, 1.09531e-05, 1, 0, 0.957531,-0.000470566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445317,-0.0100485) , 
2, 0.0272042, 1, 0, 0.922728,-0.00163119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00212865,-0.0131705) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132837) , 
2, 0.177002, 1, 0, 0,-0.0143206) , 
0, 0.0327577, 1, 0, 0.000502255,-0.0159763) , 
2, 0.0476103, 1, 0, 0.506962,-0.0080984)    );
  // itree = 136
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999476,0.0467519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989338,-0.12644) , 
2, 0.0173921, 1, 0, 0.998781,0.000155345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7104,-0.00438) , 
2, 0.0229078, 1, 0, 0.973119,-0.000762487) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141524) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000483091,-0.0127543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132786) , 
0, 0.0402438, 1, 0, 0.000140064,-0.0135027) , 
2, 0.119072, 1, 0, 0.000106899,-0.0151456) , 
0, 0.00466298, 1, 0, 0.501879,-0.00772836)    );
  // itree = 137
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953475,-0.00875831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990351,0.0400359) , 
6, 0.0115984, 1, 0, 0.956058,-0.000806899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458771,-0.007676) , 
2, 0.0268555, 1, 0, 0.921926,-0.001562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00268591,-0.0131396) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132733) , 
2, 0.177011, 1, 0, 0,-0.0135408) , 
0, 0.0280548, 1, 0, 0.000572579,-0.0155925) , 
2, 0.0476103, 1, 0, 0.504532,-0.00791811)    );
  // itree = 138
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989622,-0.00330122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.776148,-0.0312997) , 
0, 0.00149012, 1, 0, 0.965389,-0.00461446) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999474,0.0571156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827362,0.0102388) , 
2, 0.0235276, 1, 0, 0.975144,0.00302866) , 
7, 1.75728e-05, 1, 0, 0.970191,-0.00085223) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140056) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000168093,-0.0130635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132689) , 
0, 0.0402627, 1, 0, 4.56038e-05,-0.0129093) , 
2, 0.119019, 1, 0, 3.51121e-05,-0.014345) , 
0, 0.00467007, 1, 0, 0.496436,-0.00744116)    );
  // itree = 139
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99948,0.0381567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985932,-0.0238793) , 
2, 0.0175781, 1, 0, 0.998549,0.000166994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674762,-0.00497226) , 
2, 0.0231309, 1, 0, 0.9696,-0.000822835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014311) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132643) , 
0, 0.0402627, 1, 0, 0,-0.0126069) , 
2, 0.119298, 1, 0, 0,-0.0145722) , 
0, 0.00467007, 1, 0, 0.508224,-0.00736536)    );
  // itree = 140
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999482,0.0492258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644309,-0.0065006) , 
2, 0.0237746, 1, 0, 0.971166,-0.000781686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97684,0.056059) , 
3, 112.434, 1, 0, 0.971496,0.000121346) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140992) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132597) , 
0, 0.0402281, 1, 0, 0,-0.012276) , 
2, 0.119053, 1, 0, 0,-0.013794) , 
0, 0.00466573, 1, 0, 0.498075,-0.00665976)    );
  // itree = 141
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996595,-0.111337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611606,-0.00610762) , 
2, 0.0237746, 1, 0, 0.970462,-0.00324167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98146,0.0256381) , 
5, 0.00581129, 1, 0, 0.97139,-0.00231881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142981) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132553) , 
0, 0.0403006, 1, 0, 0,-0.0119786) , 
2, 0.119026, 1, 0, 0,-0.0137993) , 
0, 0.00467007, 1, 0, 0.498624,-0.00790626)    );
  // itree = 142
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958648,-0.0146214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881096,0.0170272) , 
2, 0.0219378, 1, 0, 0.954838,-0.000862969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442693,-0.00911096) , 
2, 0.0271759, 1, 0, 0.921626,-0.00195993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00148434,-0.0132668) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132512) , 
2, 0.177002, 1, 0, 0,-0.0118844) , 
0, 0.0327143, 1, 0, 0.00034768,-0.0135983) , 
2, 0.0476074, 1, 0, 0.506732,-0.0072012)    );
  // itree = 143
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997605,-0.0476045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583284,-0.010458) , 
2, 0.0229143, 1, 0, 0.966495,-0.00321437) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985247,0.00613269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931448,0.0272073) , 
0, 0.0015532, 1, 0, 0.967842,0.0053082) , 
3, 74.9589, 1, 0, 0.966764,-0.00151146) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143414) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132469) , 
0, 0.0401845, 1, 0, 0,-0.0113705) , 
2, 0.119, 1, 0, 0,-0.0131261) , 
0, 0.00466029, 1, 0, 0.499896,-0.00712037)    );
  // itree = 144
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994747,-0.00153753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924739,-0.0233419) , 
0, 0.000435595, 1, 0, 0.960784,-0.00452934) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973159,0.00313544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975828,0.0322614) , 
6, 0.0117659, 1, 0, 0.973452,0.0017802) , 
5, 0.00413779, 1, 0, 0.967177,-0.00134531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139706) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132428) , 
0, 0.0402366, 1, 0, 0,-0.0110837) , 
2, 0.118975, 1, 0, 0,-0.0123926) , 
0, 0.00466015, 1, 0, 0.488582,-0.0068119)    );
  // itree = 145
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952679,-0.0172172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719966,0.0150933) , 
2, 0.0240885, 1, 0, 0.939238,-0.000938306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0974838,-0.0118968) , 
2, 0.0316722, 1, 0, 0.837292,-0.00239822) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000504108,-0.0140026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013239) , 
2, 0.230113, 1, 0, 0,-0.0110945) , 
0, 0.0327081, 1, 0, 0.000128732,-0.0133969) , 
2, 0.09518, 1, 0, 0.500121,-0.00682797)    );
  // itree = 146
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987885,0.00898742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964383,-0.0247715) , 
6, 0.0115933, 1, 0, 0.986648,0.000619513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699005,-0.00821439) , 
0, 0.00221204, 1, 0, 0.971386,-0.00010643) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143534) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013235) , 
0, 0.0401845, 1, 0, 0,-0.0104928) , 
2, 0.119026, 1, 0, 0,-0.0123695) , 
0, 0.00466029, 1, 0, 0.512181,-0.00590358)    );
  // itree = 147
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970658,-0.00911828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474039,-0.0080527) , 
2, 0.0170027, 1, 0, 0.872816,-0.00187688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951322,0.0375252) , 
6, 0.0115969, 1, 0, 0.878976,-0.00108034) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00166724,-0.0130503) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132314) , 
2, 0.1938, 1, 0, 0,-0.0104775) , 
0, 0.0326893, 1, 0, 0.000396567,-0.012229) , 
2, 0.0714155, 1, 0, 0.498559,-0.00590759)    );
  // itree = 148
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972463,-0.0132153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69714,0.00780626) , 
2, 0.0226466, 1, 0, 0.953271,-0.000294507) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660124,-0.00631174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595423,-0.00991204) , 
3, 50.1705, 1, 0, 0.629589,-0.00650096) , 
4, 0.00581216, 1, 0, 0.917503,-0.000980348) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00235098,-0.0130157) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132273) , 
2, 0.177011, 1, 0, 0,-0.0101397) , 
0, 0.0279961, 1, 0, 0.000495143,-0.0119898) , 
2, 0.0476103, 1, 0, 0.500375,-0.00598834)    );
  // itree = 149
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950558,-0.0156121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725984,0.0134616) , 
2, 0.0240885, 1, 0, 0.938487,-0.00098208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0970804,-0.0121967) , 
2, 0.0316569, 1, 0, 0.841203,-0.00246594) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141965) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132241) , 
2, 0.230174, 1, 0, 0,-0.00997707) , 
0, 0.0373557, 1, 0, 0,-0.0121423) , 
2, 0.0952207, 1, 0, 0.502834,-0.00635818)    );
  // itree = 150
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960904,-0.00442648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819358,0.00995298) , 
2, 0.0232515, 1, 0, 0.95306,0.000178193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181902,-0.0109971) , 
2, 0.0305525, 1, 0, 0.88517,-0.00119983) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00133868,-0.0132368) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132207) , 
2, 0.193843, 1, 0, 0,-0.00967459) , 
0, 0.0327081, 1, 0, 0.000321083,-0.0115986) , 
2, 0.0714155, 1, 0, 0.502663,-0.00569509)    );
  // itree = 151
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999389,0.029614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998796,0.0553151) , 
2, 0.0109863, 1, 0, 0.999269,0.000995913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645179,-0.00576305) , 
2, 0.0231309, 1, 0, 0.965216,-0.000403061) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142367) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132172) , 
0, 0.0402627, 1, 0, 0,-0.00919503) , 
2, 0.118971, 1, 0, 0,-0.0109428) , 
0, 0.00467007, 1, 0, 0.49831,-0.00550146)    );
  // itree = 152
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970095,0.00791279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308336,-0.0212716) , 
2, 0.00452932, 1, 0, 0.756349,-0.00490445) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983492,-0.00019426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0948019) , 
7, 3.30794e-05, 1, 0, 0.985616,0.00108784) , 
7, 9.16489e-06, 1, 0, 0.916763,-0.000711757) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00209506,-0.0129228) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132136) , 
2, 0.177011, 1, 0, 0,-0.00912302) , 
0, 0.0280095, 1, 0, 0.000448677,-0.010733) , 
2, 0.0476103, 1, 0, 0.497177,-0.00530053)    );
  // itree = 153
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953384,-0.00101814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982181,0.0256688) , 
5, 0.00450184, 1, 0, 0.962127,0.000723126) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703865,-0.0149955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695426,0.00741598) , 
4, 0.00581385, 1, 0, 0.699327,-0.004078) , 
5, 0.00555505, 1, 0, 0.913048,-0.000173505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00252531,-0.012733) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132105) , 
2, 0.176971, 1, 0, 0,-0.00889879) , 
0, 0.0280288, 1, 0, 0.000526292,-0.0107427) , 
2, 0.04759, 1, 0, 0.496575,-0.00499724)    );
  // itree = 154
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993069,0.0318213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892596,-0.0247125) , 
5, 0.00525409, 1, 0, 0.978582,8.0519e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900171,-0.035959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896583,-0.00500684) , 
5, 0.00451306, 1, 0, 0.897817,-0.00509706) , 
2, 0.00902158, 1, 0, 0.954985,-0.00148349) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625349,-0.0112514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133713) , 
0, 0.00467007, 1, 0, 0.0538298,-0.0105508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0879301,-0.00624145) , 
3, 113.578, 1, 0, 0.0584529,-0.00972447) , 
2, 0.0238037, 1, 0, 0.49848,-0.00567971)    );
  // itree = 155
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985323,0.0107481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921494,-0.00615789) , 
2, 0.00675583, 1, 0, 0.96264,-0.000116273) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577593,-0.0129021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659033,0.00532814) , 
3, 74.5969, 1, 0, 0.607088,-0.00707103) , 
2, 0.0203541, 1, 0, 0.915922,-0.00103009) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00301783,-0.0124878) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132046) , 
2, 0.177032, 1, 0, 0,-0.00845487) , 
0, 0.0280548, 1, 0, 0.000632213,-0.0101952) , 
2, 0.0476103, 1, 0, 0.494439,-0.00525054)    );
  // itree = 156
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916706,-0.00891498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863816,0.0346255) , 
3, 111.354, 1, 0, 0.913415,-0.000715023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.477745,-0.01856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443275,-0.0064563) , 
3, 37.3335, 1, 0, 0.456574,-0.00775393) , 
4, 0.00578466, 1, 0, 0.841258,-0.0018268) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000327008,-0.0138541) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013202) , 
2, 0.230141, 1, 0, 0,-0.00832174) , 
0, 0.0373675, 1, 0, 8.32635e-05,-0.0102294) , 
2, 0.0952207, 1, 0, 0.495503,-0.00528061)    );
  // itree = 157
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984098,-0.00459482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991908,0.0492687) , 
0, 0.0018933, 1, 0, 0.985002,0.000338791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667976,-0.0078417) , 
0, 0.00220886, 1, 0, 0.966067,-0.000311134) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139557) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013199) , 
0, 0.0403222, 1, 0, 0,-0.00789647) , 
2, 0.119298, 1, 0, 0,-0.00928525) , 
0, 0.00467007, 1, 0, 0.505326,-0.00459111)    );
  // itree = 158
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962521,0.0127111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809949,-0.0343743) , 
6, 0.00622532, 1, 0, 0.936005,-0.00319285) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957749,0.00282875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654732,0.0110714) , 
2, 0.0226157, 1, 0, 0.915702,0.00129243) , 
5, 0.00336262, 1, 0, 0.921912,-7.95197e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00285766,-0.0122376) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131959) , 
2, 0.176937, 1, 0, 0,-0.0078257) , 
0, 0.0279961, 1, 0, 0.000597258,-0.00935541) , 
2, 0.0476074, 1, 0, 0.498774,-0.00433971)    );
  // itree = 159
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998218,-0.00314811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608438,-0.00444237) , 
2, 0.0237746, 1, 0, 0.967833,-0.000812758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964024,0.0351913) , 
3, 112.436, 1, 0, 0.967622,-0.000142577) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139303) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131935) , 
0, 0.040316, 1, 0, 0,-0.0074843) , 
2, 0.119205, 1, 0, 0,-0.00874088) , 
0, 0.00467007, 1, 0, 0.496313,-0.00433063)    );
  // itree = 160
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954141,-0.0146644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751405,0.00711104) , 
2, 0.0240885, 1, 0, 0.943342,-0.000879739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.101277,-0.0109054) , 
2, 0.0316874, 1, 0, 0.848736,-0.00192756) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000162824,-0.0137977) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131909) , 
2, 0.230174, 1, 0, 0,-0.00749756) , 
0, 0.0374462, 1, 0, 4.33342e-05,-0.00921186) , 
2, 0.0952148, 1, 0, 0.508294,-0.00484956)    );
  // itree = 161
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985919,-0.00298847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990957,0.0387182) , 
0, 0.00179485, 1, 0, 0.986699,0.000592294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685539,-0.0105162) , 
0, 0.00221718, 1, 0, 0.971424,4.26834e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143409) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131883) , 
0, 0.0401275, 1, 0, 0,-0.0070985) , 
2, 0.118975, 1, 0, 0,-0.00870935) , 
0, 0.00465677, 1, 0, 0.509606,-0.00411806)    );
  // itree = 162
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986259,0.0301587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919937,-0.0060795) , 
4, 0.00514511, 1, 0, 0.978253,0.00075867) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60247,-0.0269469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982011,0.044558) , 
6, 0.0116038, 1, 0, 0.788449,-0.00457924) , 
5, 0.00559417, 1, 0, 0.953167,5.31738e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642604,-0.00890908) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.89373e-05,-0.01309) , 
2, 0.137267, 1, 0, 3.72387e-05,-0.00761122) , 
0, 0.00466298, 1, 0, 0.0571374,-0.00864268) , 
2, 0.0238052, 1, 0, 0.497566,-0.00436837)    );
  // itree = 163
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967512,-0.00302698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983319,0.0243688) , 
5, 0.00560507, 1, 0, 0.969527,0.000218417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974205,0.048142) , 
3, 111.557, 1, 0, 0.969809,0.000816242) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140213) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000165507,-0.012822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131833) , 
0, 0.0402164, 1, 0, 4.50851e-05,-0.00670066) , 
2, 0.119026, 1, 0, 3.48522e-05,-0.00817498) , 
0, 0.00466573, 1, 0, 0.494945,-0.00358644)    );
  // itree = 164
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985389,-0.000470182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980573,0.0165473) , 
0, 0.00179484, 1, 0, 0.984639,0.000552149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662609,-0.0123997) , 
0, 0.00221718, 1, 0, 0.967797,-0.000350786) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138856) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131809) , 
0, 0.0402527, 1, 0, 0,-0.00656265) , 
2, 0.119026, 1, 0, 0,-0.00789454) , 
0, 0.00466298, 1, 0, 0.498225,-0.00401099)    );
  // itree = 165
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969247,0.00895947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414931,-0.0102906) , 
2, 0.00904846, 1, 0, 0.787817,-0.00147876) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998409,0.0220555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907541,0.0166468) , 
2, 0.0219727, 1, 0, 0.979274,0.00298776) , 
7, 2.21509e-05, 1, 0, 0.846789,-0.000103005) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000500757,-0.0137244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131787) , 
2, 0.230204, 1, 0, 0,-0.00657432) , 
0, 0.0326531, 1, 0, 0.000129433,-0.0085978) , 
2, 0.09518, 1, 0, 0.505472,-0.00352754)    );
  // itree = 166
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965461,-0.00985939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410115,-0.0116445) , 
2, 0.0203421, 1, 0, 0.888443,-0.0019177) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952047,0.0142234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473884,0.0203659) , 
2, 0.0237223, 1, 0, 0.858895,0.00306168) , 
3, 62.9923, 1, 0, 0.879889,-0.000476164) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00113988,-0.0129689) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131764) , 
2, 0.193903, 1, 0, 0,-0.00638184) , 
0, 0.032673, 1, 0, 0.000278069,-0.00800775) , 
2, 0.0714155, 1, 0, 0.497044,-0.00375424)    );
  // itree = 167
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0874345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993455,-0.0412027) , 
0, 0.00174115, 1, 0, 0.998778,0.000456187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646315,-0.00464404) , 
2, 0.0235276, 1, 0, 0.966687,-0.000367731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141024) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131741) , 
0, 0.040275, 1, 0, 0,-0.00607194) , 
2, 0.119107, 1, 0, 0,-0.00736063) , 
0, 0.00467007, 1, 0, 0.499299,-0.00374876)    );
  // itree = 168
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984328,-0.00342582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990719,0.0381624) , 
0, 0.00200601, 1, 0, 0.984811,1.38908e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6589,-0.0102265) , 
0, 0.00221718, 1, 0, 0.966877,-0.000681242) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141755) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000319381,-0.0123918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013172) , 
0, 0.0402823, 1, 0, 9.33512e-05,-0.00581308) , 
2, 0.119026, 1, 0, 7.19148e-05,-0.00721851) , 
0, 0.00466573, 1, 0, 0.502285,-0.00382268)    );
  // itree = 169
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998219,0.00341792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649323,-0.00451481) , 
2, 0.0235276, 1, 0, 0.971777,-0.000449762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976317,0.0288337) , 
5, 0.00588661, 1, 0, 0.972032,-7.96436e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137771) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131699) , 
0, 0.0403006, 1, 0, 0,-0.0057625) , 
2, 0.119107, 1, 0, 0,-0.00678832) , 
0, 0.00467007, 1, 0, 0.501785,-0.00328815)    );
  // itree = 170
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963298,-0.00986186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589485,-0.00810842) , 
2, 0.0203378, 1, 0, 0.921678,-0.00125207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967754,0.0341955) , 
6, 0.0115974, 1, 0, 0.925583,-0.000623448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0020571,-0.012048) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131679) , 
2, 0.176937, 1, 0, 0,-0.00573724) , 
0, 0.0326922, 1, 0, 0.000505366,-0.00685708) , 
2, 0.0476103, 1, 0, 0.510305,-0.0034218)    );
  // itree = 171
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961346,-0.00323089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747483,0.0181748) , 
2, 0.0240885, 1, 0, 0.949604,0.000529288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0982003,-0.0102367) , 
2, 0.0316722, 1, 0, 0.843878,-0.000619368) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000704235,-0.0134698) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013166) , 
2, 0.23008, 1, 0, 0,-0.00562313) , 
0, 0.0327811, 1, 0, 0.000174216,-0.00748972) , 
2, 0.09518, 1, 0, 0.50641,-0.0033674)    );
  // itree = 172
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999417,0.036428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990423,-0.0295546) , 
0, 0.00183643, 1, 0, 0.998029,-0.000152567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677981,-0.00426863) , 
2, 0.0235276, 1, 0, 0.96928,-0.000768618) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141238) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131639) , 
0, 0.0403006, 1, 0, 0,-0.00533361) , 
2, 0.119212, 1, 0, 0,-0.00658007) , 
0, 0.00467007, 1, 0, 0.496079,-0.00360576)    );
  // itree = 173
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986899,-0.00858281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986242,0.0250367) , 
0, 0.00179335, 1, 0, 0.986797,-4.62648e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670777,-0.0127173) , 
0, 0.00221543, 1, 0, 0.970079,-0.000710881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139618) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000164065,-0.0127043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131621) , 
0, 0.0401845, 1, 0, 4.67793e-05,-0.00514367) , 
2, 0.119026, 1, 0, 3.60016e-05,-0.0062371) , 
0, 0.00466029, 1, 0, 0.501538,-0.0033801)    );
  // itree = 174
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983584,-0.0191692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917574,0.024501) , 
2, 0.0180432, 1, 0, 0.979538,-0.00045362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726869,-0.00946105) , 
4, 0.00579772, 1, 0, 0.957172,-0.000704501) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602958,-0.00742908) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.79334e-05,-0.0129041) , 
2, 0.137181, 1, 0, 7.40536e-05,-0.00558369) , 
0, 0.00466015, 1, 0, 0.0580927,-0.00645282) , 
2, 0.023795, 1, 0, 0.499574,-0.00363018)    );
  // itree = 175
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796475,-0.00981221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974362,0.0120359) , 
7, 2.13905e-05, 1, 0, 0.854519,-0.000493791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646089,0.0252415) , 
3, 126.174, 1, 0, 0.844891,-5.07255e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00035183,-0.0137123) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131585) , 
2, 0.230265, 1, 0, 0,-0.00506166) , 
0, 0.0326302, 1, 0, 8.70906e-05,-0.00670549) , 
2, 0.0952207, 1, 0, 0.50498,-0.0027283)    );
  // itree = 176
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92053,-0.00875876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858503,0.0294941) , 
3, 112.437, 1, 0, 0.916918,-0.000610349) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.48511,-0.0250375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429259,-0.00642927) , 
3, 37.8128, 1, 0, 0.451279,-0.00751319) , 
4, 0.00579858, 1, 0, 0.843882,-0.00169307) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000842717,-0.0132634) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131568) , 
2, 0.23008, 1, 0, 0,-0.00493082) , 
0, 0.0327226, 1, 0, 0.000208652,-0.00641777) , 
2, 0.0952207, 1, 0, 0.497482,-0.00363296)    );
  // itree = 177
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968371,-0.0120059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963434,0.00897464) , 
6, 0.0104403, 1, 0, 0.967298,-0.000688227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973544,0.0379636) , 
3, 111.555, 1, 0, 0.967662,-0.000136844) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139615) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000321426,-0.0121605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013155) , 
0, 0.0402527, 1, 0, 9.48203e-05,-0.00456494) , 
2, 0.119026, 1, 0, 7.27307e-05,-0.005847) , 
0, 0.00466298, 1, 0, 0.506332,-0.00285935)    );
  // itree = 178
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999692,0.0391613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998805,0.0516903) , 
2, 0.0109863, 1, 0, 0.999511,0.0009658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676682,-0.00408417) , 
2, 0.0231309, 1, 0, 0.970193,0.000260269) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131534) , 
0, 0.0402403, 1, 0, 0,-0.00455158) , 
2, 0.119254, 1, 0, 0,-0.00565625) , 
0, 0.00466573, 1, 0, 0.502971,-0.00258899)    );
  // itree = 179
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972431,-0.0183304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925683,0.0230461) , 
2, 0.0119019, 1, 0, 0.965444,-0.000328482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840862,-0.053071) , 
2, 0.0192697, 1, 0, 0.958338,-0.00112224) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.151323,-0.0141075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131937) , 
0, 0.0279284, 1, 0, 0.0408769,-0.00858011) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.733387,0.00484925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134) , 
0, 0.00466298, 1, 0, 0.0687986,-0.00406145) , 
3, 37.8682, 1, 0, 0.0581147,-0.00579046) , 
2, 0.0238052, 1, 0, 0.499383,-0.00350221)    );
  // itree = 180
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976889,0.0332001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955486,-0.0122274) , 
4, 0.00287215, 1, 0, 0.960775,-0.000143728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.387085,-0.0121468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504309,0.00251766) , 
3, 75.7181, 1, 0, 0.424237,-0.00456365) , 
2, 0.0181303, 1, 0, 0.836377,-0.00116849) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131503) , 
2, 0.230265, 1, 0, 0,-0.00443902) , 
0, 0.0327226, 1, 0, 0,-0.00581307) , 
2, 0.0952207, 1, 0, 0.500329,-0.00303464)    );
  // itree = 181
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997707,-0.037119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630342,-0.00567008) , 
2, 0.0231309, 1, 0, 0.968564,-0.00155733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966851,0.033251) , 
4, 0.00588635, 1, 0, 0.968472,-0.00104837) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141012) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000169226,-0.0125719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131487) , 
0, 0.0400373, 1, 0, 4.75471e-05,-0.00416533) , 
2, 0.119019, 1, 0, 3.66945e-05,-0.00543093) , 
0, 0.00465917, 1, 0, 0.506686,-0.00313814)    );
  // itree = 182
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968792,-0.00422774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987495,0.0527172) , 
5, 0.00581121, 1, 0, 0.970262,-2.37765e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978296,0.0543132) , 
3, 99.1583, 1, 0, 0.971005,0.000744913) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131472) , 
0, 0.0402659, 1, 0, 0,-0.00409337) , 
2, 0.119072, 1, 0, 0,-0.00538597) , 
0, 0.00466573, 1, 0, 0.493624,-0.00226925)    );
  // itree = 183
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985826,0.00562215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992242,0.0354856) , 
0, 0.00190184, 1, 0, 0.986604,0.00110924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633336,-0.00912687) , 
0, 0.00221886, 1, 0, 0.967336,0.000548231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138618) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000507505,-0.0113262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131458) , 
0, 0.0401729, 1, 0, 0.000140981,-0.003855) , 
2, 0.119026, 1, 0, 0.000108204,-0.00485308) , 
0, 0.00466029, 1, 0, 0.501777,-0.0020516)    );
  // itree = 184
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964368,0.00994736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.134173,-0.0171935) , 
2, 0.00452677, 1, 0, 0.558873,-0.00305509) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992285,0.01776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780919,0.0159859) , 
2, 0.0220925, 1, 0, 0.967146,0.00208046) , 
7, 7.95539e-06, 1, 0, 0.837344,0.000447711) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000363285,-0.0137707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131444) , 
2, 0.230021, 1, 0, 0,-0.00399767) , 
0, 0.0327772, 1, 0, 8.59722e-05,-0.00570038) , 
2, 0.09518, 1, 0, 0.499358,-0.00203416)    );
  // itree = 185
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945814,-0.0066565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.113052,-0.00770693) , 
2, 0.0271476, 1, 0, 0.833432,-0.00107118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926758,0.0297218) , 
6, 0.0115975, 1, 0, 0.8408,-0.00057373) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00085129,-0.0129635) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131431) , 
2, 0.210955, 1, 0, 0,-0.00389529) , 
0, 0.0327577, 1, 0, 0.000206591,-0.00520852) , 
2, 0.0952207, 1, 0, 0.493898,-0.00248645)    );
  // itree = 186
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959593,-0.0154427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792597,0.00816373) , 
2, 0.0226266, 1, 0, 0.948016,-0.000357031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0865977,-0.0103398) , 
2, 0.0316874, 1, 0, 0.838884,-0.00101828) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131417) , 
2, 0.230204, 1, 0, 0,-0.00379277) , 
0, 0.0328345, 1, 0, 0,-0.0052142) , 
2, 0.0952207, 1, 0, 0.493544,-0.00274559)    );
  // itree = 187
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952065,-0.018078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.776586,0.0193981) , 
2, 0.0240885, 1, 0, 0.942927,-0.000340238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0962404,-0.00848494) , 
2, 0.0316722, 1, 0, 0.841074,-0.00101866) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142894) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131404) , 
2, 0.229991, 1, 0, 0,-0.00369593) , 
0, 0.0327226, 1, 0, 0,-0.00533167) , 
2, 0.0951625, 1, 0, 0.494971,-0.00279347)    );
  // itree = 188
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979691,0.0291345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946706,-0.00694169) , 
4, 0.00400678, 1, 0, 0.963168,0.000348313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814996,-0.0367064) , 
2, 0.0191709, 1, 0, 0.954764,-0.000240955) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662982,-0.00809016) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.5785e-05,-0.0127789) , 
2, 0.137181, 1, 0, 7.31191e-05,-0.00376823) , 
0, 0.00467007, 1, 0, 0.0588101,-0.00465396) , 
2, 0.023795, 1, 0, 0.494975,-0.00250564)    );
  // itree = 189
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976844,0.00476362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935445,-0.0537488) , 
4, 0.00454908, 1, 0, 0.96231,-0.000982858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84147,-0.0364543) , 
2, 0.0192697, 1, 0, 0.955573,-0.00145501) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642418,-0.00888095) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131366) , 
2, 0.137255, 1, 0, 0,-0.00380546) , 
0, 0.00467008, 1, 0, 0.0541116,-0.0048533) , 
2, 0.0238052, 1, 0, 0.493788,-0.00319583)    );
  // itree = 190
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986849,0.0272067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946989,-0.0228739) , 
4, 0.00400496, 1, 0, 0.969233,-7.27591e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935379,0.0500542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855119,-0.00380934) , 
5, 0.00488433, 1, 0, 0.889446,0.00193184) , 
2, 0.0124686, 1, 0, 0.954595,0.000295007) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.272343,-0.0131197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468286,-0.000438797) , 
3, 50.1479, 1, 0, 0.36657,-0.00837029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131359) , 
2, 0.137232, 1, 0, 0,-0.00361031) , 
0, 0.0140102, 1, 0, 0.0559792,-0.00433721) , 
2, 0.0238052, 1, 0, 0.496725,-0.00206524)    );
  // itree = 191
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969412,0.00151279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932699,-0.0186083) , 
4, 0.00526803, 1, 0, 0.9662,-0.000542876) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983802,-0.00363644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984089,0.0630611) , 
0, 0.00211283, 1, 0, 0.983947,0.00461297) , 
5, 0.00558986, 1, 0, 0.968641,0.000166403) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136608) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000168093,-0.0123953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131355) , 
0, 0.0403094, 1, 0, 4.76976e-05,-0.00319751) , 
2, 0.119212, 1, 0, 3.61659e-05,-0.0040186) , 
0, 0.00467007, 1, 0, 0.504565,-0.00183871)    );
  // itree = 192
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954793,-0.0217512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754503,0.0143049) , 
2, 0.022583, 1, 0, 0.941085,-0.000864933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.092284,-0.0111328) , 
2, 0.0317281, 1, 0, 0.839429,-0.0015188) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000541564,-0.0130956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131345) , 
2, 0.230347, 1, 0, 0,-0.00324422) , 
0, 0.0326922, 1, 0, 0.000126782,-0.00439) , 
2, 0.0952207, 1, 0, 0.498339,-0.00268565)    );
  // itree = 193
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.087014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990658,0.0503096) , 
2, 0.0138811, 1, 0, 0.998226,0.00159092) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997564,0.00148434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446229,-0.00786371) , 
2, 0.0237746, 1, 0, 0.9348,-0.00182655) , 
0, 0.000221719, 1, 0, 0.966091,-0.000140555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131333) , 
0, 0.0401455, 1, 0, 0,-0.00308608) , 
2, 0.1191, 1, 0, 0,-0.00415486) , 
0, 0.00465917, 1, 0, 0.499325,-0.00208006)    );
  // itree = 194
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982777,0.0232323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774605,-0.0230908) , 
2, 0.00675456, 1, 0, 0.896116,-0.00203482) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925804,0.0160046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470893,-0.00921573) , 
4, 0.00579682, 1, 0, 0.845491,0.000930999) , 
3, 50.3964, 1, 0, 0.875921,-0.000851689) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000814467,-0.0126119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131323) , 
2, 0.19383, 1, 0, 0,-0.00307537) , 
0, 0.0326893, 1, 0, 0.000196563,-0.00412922) , 
2, 0.0714111, 1, 0, 0.494448,-0.00227941)    );
  // itree = 195
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989328,0.0115546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975334,-0.0358457) , 
6, 0.0115978, 1, 0, 0.988531,0.000451375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668397,-0.0130114) , 
0, 0.00221718, 1, 0, 0.970612,-0.000229905) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137616) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131311) , 
0, 0.0401956, 1, 0, 0,-0.00291981) , 
2, 0.119305, 1, 0, 0,-0.00367308) , 
0, 0.00466015, 1, 0, 0.497098,-0.00190966)    );
  // itree = 196
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956871,-0.00205614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171818,-0.0098367) , 
2, 0.0271454, 1, 0, 0.850461,-0.000754738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668222,0.0306962) , 
3, 126.173, 1, 0, 0.841871,-0.000390437) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139084) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131302) , 
2, 0.230141, 1, 0, 0,-0.00292395) , 
0, 0.0326541, 1, 0, 0,-0.00417334) , 
2, 0.0952207, 1, 0, 0.502728,-0.00191436)    );
  // itree = 197
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976053,-0.00699575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984778,0.0453159) , 
5, 0.00416269, 1, 0, 0.979162,0.00080177) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0152797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131362) , 
2, 0.26214, 1, 0, 0,-0.00412867) , 
0, 0.00401695, 1, 0, 0.650987,-0.000850714) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.307108,-0.0409234) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.298734,-0.0188037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.243559,-0.00342703) , 
5, 0.00563525, 1, 0, 0.265153,-0.00288414) , 
3, 12.3068, 1, 0, 0.271071,-0.00416194) , 
4, 0.00521798, 1, 0, 0.498047,-0.00218369)    );
  // itree = 198
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967029,0.0113522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810241,-0.0150118) , 
2, 0.0169155, 1, 0, 0.954063,3.51264e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940937,-0.0399536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916191,0.0121846) , 
3, 100.753, 1, 0, 0.930917,-0.00293871) , 
3, 74.2379, 1, 0, 0.949653,-0.000531557) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646871,-0.0092637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131271) , 
2, 0.137224, 1, 0, 0,-0.00350328) , 
0, 0.00466298, 1, 0, 0.0574284,-0.00434746) , 
2, 0.0238037, 1, 0, 0.501487,-0.00244829)    );
  // itree = 199
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869027,0.0074134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89354,-0.037766) , 
6, 0.00986778, 1, 0, 0.875753,-0.00233347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789172,-0.00370549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915237,0.04866) , 
6, 0.0104385, 1, 0, 0.81642,0.00116644) , 
3, 37.798, 1, 0, 0.844371,-0.000482304) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000541564,-0.0130814) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131273) , 
2, 0.211007, 1, 0, 0,-0.00270181) , 
0, 0.0327081, 1, 0, 0.00012339,-0.00386932) , 
2, 0.0952148, 1, 0, 0.493888,-0.0018884)    );
  // itree = 200
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976045,0.0135797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58121,-0.0146353) , 
2, 0.00678072, 1, 0, 0.825579,-0.00125293) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991955,0.0220099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926545,0.0371829) , 
2, 0.0237834, 1, 0, 0.980688,0.00402674) , 
7, 2.25437e-05, 1, 0, 0.872712,0.000351431) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00131101,-0.0117357) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131266) , 
3, 37.1233, 1, 0, 0,-0.00263748) , 
0, 0.0327274, 1, 0, 0.000319975,-0.00359562) , 
2, 0.0714111, 1, 0, 0.495393,-0.00135571)    );
  // itree = 201
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.54097,-0.0452854) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56595,-0.00388491) , 
3, 4.57384, 1, 0, 0.561209,-0.00178854) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.268557,-0.0112756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607127,-0.0237333) , 
6, 0.00464786, 1, 0, 0.517278,-0.00470807) , 
3, 23.9975, 1, 0, 0.536262,-0.00344644) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974199,0.0112502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979437,0.0524122) , 
6, 0.0110314, 1, 0, 0.975217,0.00284489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132768) , 
0, 0.00467007, 1, 0, 0.420225,-0.00063224) , 
3, 62.9951, 1, 0, 0.497865,-0.00251521)    );
  // itree = 202
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95749,0.0114991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752419,-0.0139928) , 
4, 0.00515229, 1, 0, 0.918655,-0.000211509) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.539447,-0.0434757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447254,0.00723826) , 
3, 49.4367, 1, 0, 0.493697,-0.00407123) , 
5, 0.00572945, 1, 0, 0.843105,-0.000897705) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000343408,-0.0134988) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131247) , 
3, 62.8606, 1, 0, 0,-0.00249133) , 
0, 0.0327827, 1, 0, 8.52666e-05,-0.00369911) , 
2, 0.0952207, 1, 0, 0.501575,-0.00203263)    );
  // itree = 203
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989616,-0.000129308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869515,-0.00970549) , 
0, 0.00133132, 1, 0, 0.965819,-0.000581708) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0897329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84853,0.0138404) , 
2, 0.02274, 1, 0, 0.976068,0.00280707) , 
7, 1.75684e-05, 1, 0, 0.970867,0.00108731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013866) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131236) , 
0, 0.0401717, 1, 0, 0,-0.00236135) , 
2, 0.119212, 1, 0, 0,-0.00316205) , 
0, 0.00466015, 1, 0, 0.4973,-0.000985432)    );
  // itree = 204
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998964,0.0552538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948709,-0.0145361) , 
0, 0.000221719, 1, 0, 0.973713,-0.00094441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969435,0.0156476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981067,0.0534617) , 
5, 0.00441752, 1, 0, 0.975465,0.00426098) , 
3, 86.7656, 1, 0, 0.973952,-0.000235889) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136871) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131228) , 
0, 0.0401834, 1, 0, 0,-0.00230347) , 
2, 0.119021, 1, 0, 0,-0.0029994) , 
0, 0.00466015, 1, 0, 0.501756,-0.00157571)    );
  // itree = 205
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99802,-0.00227761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940953,0.0317177) , 
2, 0.0224704, 1, 0, 0.993811,0.00116076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137901) , 
0, 0.004655, 1, 0, 0.833839,-3.59148e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00017076,-0.0135585) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131222) , 
3, 62.5086, 1, 0, 0,-0.00230414) , 
0, 0.0327827, 1, 0, 4.2431e-05,-0.00339598) , 
2, 0.0952207, 1, 0, 0.495538,-0.00139921)    );
  // itree = 206
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982009,0.0326075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.108863,-0.0125555) , 
2, 0.00453259, 1, 0, 0.557556,-0.00180676) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991593,0.00141455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646231,0.0217398) , 
2, 0.0268991, 1, 0, 0.970596,0.000989754) , 
7, 7.43666e-06, 1, 0, 0.850018,0.000173369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000165507,-0.0135616) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131214) , 
3, 62.8546, 1, 0, 0,-0.00224043) , 
0, 0.037423, 1, 0, 4.22051e-05,-0.00327248) , 
2, 0.0952148, 1, 0, 0.503565,-0.00123117)    );
  // itree = 207
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923208,-0.00625275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977965,0.0235646) , 
6, 0.00638933, 1, 0, 0.95966,0.000302063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82873,-0.010832) , 
2, 0.0191709, 1, 0, 0.952421,0.000103188) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642884,-0.00975398) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131197) , 
2, 0.137161, 1, 0, 0,-0.00250459) , 
0, 0.00465687, 1, 0, 0.0581158,-0.00357797) , 
2, 0.0237863, 1, 0, 0.501736,-0.00175193)    );
  // itree = 208
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991654,0.0470211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966712,-0.00264205) , 
5, 0.00316683, 1, 0, 0.976477,0.000300121) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852325,-0.0263947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980625,0.0749524) , 
6, 0.011014, 1, 0, 0.878883,-0.00294936) , 
2, 0.00902158, 1, 0, 0.94823,-0.000640383) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656772,-0.00658665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.92573e-05,-0.0128068) , 
2, 0.137355, 1, 0, 3.67392e-05,-0.00243336) , 
0, 0.00466573, 1, 0, 0.0586858,-0.00305999) , 
2, 0.023795, 1, 0, 0.493627,-0.00187692)    );
  // itree = 209
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987841,0.00293364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970335,-0.0715286) , 
6, 0.0115933, 1, 0, 0.986872,-0.000439209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640983,-0.012446) , 
0, 0.00221543, 1, 0, 0.968078,-0.000940403) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140148) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013119) , 
0, 0.0401398, 1, 0, 0,-0.00201892) , 
2, 0.119065, 1, 0, 0,-0.00291895) , 
0, 0.00465677, 1, 0, 0.505378,-0.00188606)    );
  // itree = 210
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9549,-0.0128377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72102,0.0203768) , 
2, 0.0240885, 1, 0, 0.942009,-0.000113182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0968858,-0.00845529) , 
2, 0.0316722, 1, 0, 0.843574,-0.000682346) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000161255,-0.0133966) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131184) , 
3, 62.8763, 1, 0, 0,-0.00201976) , 
0, 0.0374741, 1, 0, 4.2611e-05,-0.00287246) , 
2, 0.0952207, 1, 0, 0.500332,-0.00157353)    );
  // itree = 211
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986787,0.00644684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595209,-0.0178825) , 
2, 0.00898089, 1, 0, 0.902689,-0.00143395) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823473,-0.0317948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.776017,0.0150428) , 
3, 12.3079, 1, 0, 0.782974,0.00136395) , 
5, 0.0044461, 1, 0, 0.847434,-0.00014256) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000171343,-0.0135748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131176) , 
2, 0.23008, 1, 0, 0,-0.00196937) , 
0, 0.0326893, 1, 0, 4.1473e-05,-0.00308917) , 
2, 0.0952207, 1, 0, 0.498602,-0.00135554)    );
  // itree = 212
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954528,-0.0150214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714702,0.016742) , 
2, 0.0240885, 1, 0, 0.941089,-0.000234286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0946841,-0.00796915) , 
2, 0.0316696, 1, 0, 0.837103,-0.000632689) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138645) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131171) , 
3, 62.5333, 1, 0, 0,-0.00191543) , 
0, 0.0327226, 1, 0, 0,-0.0029731) , 
2, 0.09518, 1, 0, 0.502002,-0.00156958)    );
  // itree = 213
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993442,0.046906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832181,-0.0346746) , 
2, 0.00415039, 1, 0, 0.962128,-0.00223692) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967681,-0.0190898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904147,0.015191) , 
2, 0.0124047, 1, 0, 0.951817,0.000103142) , 
5, 0.00306392, 1, 0, 0.954533,-0.000513206) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644486,-0.00718789) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.79334e-05,-0.0124096) , 
2, 0.137216, 1, 0, 7.26781e-05,-0.00216397) , 
0, 0.00466029, 1, 0, 0.0577976,-0.00281455) , 
2, 0.023795, 1, 0, 0.493905,-0.00169534)    );
  // itree = 214
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985516,0.000981844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831752,-0.0272026) , 
0, 0.00200116, 1, 0, 0.9668,-0.00137611) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985787,0.0090986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933444,0.0568082) , 
0, 0.00177374, 1, 0, 0.974026,0.0038282) , 
3, 61.974, 1, 0, 0.968843,9.53782e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138055) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131155) , 
0, 0.040275, 1, 0, 0,-0.00176214) , 
2, 0.0955113, 1, 0, 0,-0.00264667) , 
0, 0.00467007, 1, 0, 0.499048,-0.00123425)    );
  // itree = 215
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826304,-0.0118612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968711,0.0373466) , 
7, 2.79841e-05, 1, 0, 0.842807,-0.000606355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135871) , 
2, 0.19036, 1, 0, 0.658309,-0.00127979) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84152,-0.0110528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798526,-0.0474547) , 
3, 47.5815, 1, 0, 0.820204,-0.0125653) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131148) , 
2, 0.166565, 1, 0, 0,-0.00203992) , 
0, 0.0139809, 1, 0, 0.136527,-0.00379192) , 
4, 0.0057976, 1, 0, 0.496154,-0.00206049)    );
  // itree = 216
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931076,-0.0270428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829992,0.00375797) , 
5, 0.0044408, 1, 0, 0.885474,-0.000982149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000180586,-0.0133437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131143) , 
0, 0.0327577, 1, 0, 4.4018e-05,-0.00262822) , 
2, 0.0714111, 1, 0, 0.518615,-0.00166416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20602,0.0175932) , 
3, 138.585, 1, 0, 0.502948,-0.00141859)    );
  // itree = 217
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95627,-0.00792306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177059,-0.00955041) , 
2, 0.0271606, 1, 0, 0.855217,-0.00101635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655831,0.0319885) , 
3, 126.173, 1, 0, 0.846301,-0.000619542) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131144) , 
3, 74.8876, 1, 0, 0,-0.00169586) , 
0, 0.032673, 1, 0, 0,-0.00265021) , 
2, 0.09518, 1, 0, 0.49912,-0.00145259)    );
  // itree = 218
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978241,0.00883919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931548,-0.0524785) , 
2, 0.0090332, 1, 0, 0.971108,-0.000900444) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.847773,0.0162818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179111,-0.00581922) , 
2, 0.0301078, 1, 0, 0.629104,0.00132468) , 
2, 0.0135905, 1, 0, 0.879112,-0.000301907) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000662427,-0.0122194) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131144) , 
3, 74.9062, 1, 0, 0,-0.00166279) , 
0, 0.032673, 1, 0, 0.000158748,-0.00251674) , 
2, 0.0713828, 1, 0, 0.498584,-0.00126078)    );
  // itree = 219
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989826,0.010364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849793,-0.0136952) , 
0, 0.00130678, 1, 0, 0.960629,-0.000537251) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999495,0.0586154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810324,0.010232) , 
2, 0.0237746, 1, 0, 0.973066,0.00210866) , 
5, 0.00412631, 1, 0, 0.966939,0.000805182) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137788) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131128) , 
0, 0.0403094, 1, 0, 0,-0.00156043) , 
2, 0.119212, 1, 0, 0,-0.00234514) , 
0, 0.00467007, 1, 0, 0.496162,-0.000728625)    );
  // itree = 220
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995589,-0.0107151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598256,-0.0228121) , 
2, 0.00445266, 1, 0, 0.870192,-0.00216996) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817008,0.00262627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941605,0.0262748) , 
6, 0.0115974, 1, 0, 0.831038,0.000665247) , 
5, 0.00343202, 1, 0, 0.84362,-0.000245855) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013765) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131126) , 
3, 75.4233, 1, 0, 0,-0.00156222) , 
0, 0.0327274, 1, 0, 0,-0.00234838) , 
2, 0.0952207, 1, 0, 0.494829,-0.00111513)    );
  // itree = 221
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908399,-0.0832977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844538,-0.00249282) , 
3, 6.00804, 1, 0, 0.849585,-0.000680914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640106,0.0346859) , 
3, 126.173, 1, 0, 0.8403,-0.000379228) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000349382,-0.0129012) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131122) , 
3, 75.4233, 1, 0, 0,-0.00152774) , 
0, 0.0327577, 1, 0, 8.70654e-05,-0.00238946) , 
2, 0.0952207, 1, 0, 0.504722,-0.00118211)    );
  // itree = 222
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558169,-0.0502822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53791,-0.00446302) , 
3, 4.46572, 1, 0, 0.539962,-0.00106686) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.478348,-0.0735617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.482628,-0.0114717) , 
3, 50.9828, 1, 0, 0.481894,-0.00385882) , 
3, 46.8629, 1, 0, 0.522155,-0.00192304) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95464,-0.00921286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98426,0.0436431) , 
6, 0.00754737, 1, 0, 0.973876,0.00221222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000119919,-0.0124508) , 
0, 0.00466298, 1, 0, 0.401378,-0.000189729) , 
3, 75.7058, 1, 0, 0.492858,-0.0015026)    );
  // itree = 223
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814796,0.00309842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917224,-0.0338813) , 
6, 0.00944198, 1, 0, 0.829916,-0.000673057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976732,0.0247753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727284,0.0235413) , 
2, 0.0224275, 1, 0, 0.907529,0.00284649) , 
6, 0.0104378, 1, 0, 0.846011,5.68011e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000173714,-0.0131582) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131112) , 
3, 75.4233, 1, 0, 0,-0.00145242) , 
0, 0.0327822, 1, 0, 4.15302e-05,-0.0021959) , 
2, 0.0952148, 1, 0, 0.49692,-0.000872782)    );
  // itree = 224
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964417,0.0236038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.755239,-0.0176762) , 
2, 0.011277, 1, 0, 0.937358,5.48378e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00340331,-0.0113797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00185625,-0.0106485) , 
5, 0.00450026, 1, 0, 0.00233361,-0.00173847) , 
2, 0.023795, 1, 0, 0.405612,-0.000965011) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763025,-0.0078301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945251,0.0131211) , 
7, 3.48921e-05, 1, 0, 0.800685,-0.0008991) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905126,-0.0165015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884138,-0.0573946) , 
4, 0.00501757, 1, 0, 0.895812,-0.0106933) , 
1, 1.19426, 1, 0, 0.837922,-0.00473301) , 
7, 2.18117e-05, 1, 0, 0.499445,-0.00178286)    );
  // itree = 225
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955056,0.0283274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92314,-0.0132771) , 
3, 61.8655, 1, 0, 0.945819,0.000715206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158388,-0.012295) , 
2, 0.0305786, 1, 0, 0.875107,0.000239232) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000486734,-0.0125502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013111) , 
3, 75.4233, 1, 0, 0,-0.00139444) , 
0, 0.0327226, 1, 0, 0.000120174,-0.00230715) , 
2, 0.0713588, 1, 0, 0.499014,-0.000855275)    );
  // itree = 226
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971635,-0.00342201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955509,0.0309874) , 
3, 99.944, 1, 0, 0.970302,0.000206673) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.08022e-05,-0.012601) , 
2, 0.119019, 1, 0, 3.90437e-05,-0.00171241) , 
0, 0.00467007, 1, 0, 0.481802,-0.000759532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587149,-0.0292906) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61922,-0.0198317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651617,0.00767956) , 
6, 0.0114088, 1, 0, 0.641604,-0.000220285) , 
3, 23.5609, 1, 0, 0.624951,-0.00345494) , 
6, 0.0110168, 1, 0, 0.499444,-0.00109173)    );
  // itree = 227
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937869,0.0141891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137508) , 
2, 0.0475435, 1, 0, 0.558451,-0.000589849) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47421,-0.0141972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638961,-0.0130557) , 
6, 0.0104373, 1, 0, 0.503569,-0.00194607) , 
3, 19.7497, 1, 0, 0.517385,-0.00160464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2093,0.0197221) , 
3, 138.263, 1, 0, 0.501899,-0.00137978)    );
  // itree = 228
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677442,-0.00392237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.111053,-0.0146449) , 
4, 0.00521852, 1, 0, 0.477291,-0.00102205) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574344,-0.0443753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639148,0.0156688) , 
6, 0.011282, 1, 0, 0.608893,-0.00557184) , 
6, 0.0110444, 1, 0, 0.484802,-0.00128172) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639531,0.00837959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738792,0.0441551) , 
1, 1.06907, 1, 0, 0.685314,0.00246006) , 
6, 0.0115964, 1, 0, 0.49741,-0.00104644)    );
  // itree = 229
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995578,0.0506631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610743,-0.0280895) , 
2, 0.00447882, 1, 0, 0.879541,-0.0020891) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963505,-0.00306507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696191,0.0153705) , 
2, 0.00905355, 1, 0, 0.822722,0.0013482) , 
5, 0.00340253, 1, 0, 0.840582,0.000267744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000342238,-0.0127293) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131089) , 
3, 75.4788, 1, 0, 0,-0.0012619) , 
0, 0.0327143, 1, 0, 8.40065e-05,-0.00202495) , 
2, 0.0952207, 1, 0, 0.495552,-0.000673422)    );
  // itree = 230
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966726,0.00922181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953359,-0.0316915) , 
3, 91.0006, 1, 0, 0.965848,0.000442854) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958368,0.0235474) , 
3, 112.434, 1, 0, 0.96541,0.000705299) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000165325,-0.0111358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131078) , 
0, 0.040206, 1, 0, 4.64046e-05,-0.00115032) , 
2, 0.119298, 1, 0, 3.57878e-05,-0.00189982) , 
0, 0.00466298, 1, 0, 0.499377,-0.000552317)    );
  // itree = 231
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84256,-0.000447895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833526,-0.0672729) , 
6, 0.00868988, 1, 0, 0.840864,-0.00155484) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932737,-0.0130567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987479,0.0434106) , 
5, 0.00506428, 1, 0, 0.977483,0.00192018) , 
7, 2.32512e-05, 1, 0, 0.881287,-0.000526637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000497449,-0.0124231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131088) , 
3, 75.0434, 1, 0, 0,-0.00120946) , 
0, 0.0326013, 1, 0, 0.000119475,-0.00199084) , 
2, 0.0714111, 1, 0, 0.499748,-0.00116063)    );
  // itree = 232
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99949,-0.0436213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0946939) , 
2, 0.017334, 1, 0, 0.999555,0.00062801) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91832,-0.0177434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9476,-7.44442e-05) , 
0, 0.00106611, 1, 0, 0.942399,-0.00135286) , 
0, 0.000221205, 1, 0, 0.970815,-0.000368035) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000165507,-0.0110375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013107) , 
0, 0.0401834, 1, 0, 4.66344e-05,-0.00109111) , 
2, 0.119019, 1, 0, 3.58304e-05,-0.00173392) , 
0, 0.00466015, 1, 0, 0.503154,-0.00102604)    );
  // itree = 233
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944034,0.0290544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908456,-0.0446131) , 
6, 0.00866958, 1, 0, 0.939636,0.000624271) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00900527,-0.00828259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131242) , 
0, 0.0373271, 1, 0, 0.00195152,-0.00160634) , 
2, 0.0238052, 1, 0, 0.396489,-0.000667793) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841485,-0.0404597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876369,0.00304688) , 
3, 13.4627, 1, 0, 0.86499,-0.0021954) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954539,-0.0645523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.733697,-0.0126907) , 
0, 0.00157803, 1, 0, 0.82935,-0.008007) , 
3, 47.0635, 1, 0, 0.848355,-0.004908) , 
7, 2.13905e-05, 1, 0, 0.496061,-0.00160215)    );
  // itree = 234
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967535,-0.00921232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985398,0.0490001) , 
5, 0.00581161, 1, 0, 0.968962,-0.000379865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969775,0.0349421) , 
3, 112.436, 1, 0, 0.96901,9.28122e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136405) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000162297,-0.0109752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131062) , 
0, 0.0402182, 1, 0, 4.68229e-05,-0.00103233) , 
2, 0.119013, 1, 0, 3.58645e-05,-0.00176797) , 
0, 0.00466298, 1, 0, 0.503884,-0.000800397)    );
  // itree = 235
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989682,0.00428949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837168,-0.0267847) , 
0, 0.00130678, 1, 0, 0.959874,-0.00158189) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985225,-0.0204381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961852,0.0248139) , 
0, 0.00163847, 1, 0, 0.974129,0.00112285) , 
5, 0.00407875, 1, 0, 0.967242,-0.000183997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137475) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131058) , 
0, 0.0402281, 1, 0, 0,-0.00105326) , 
2, 0.119212, 1, 0, 0,-0.0017533) , 
0, 0.00466573, 1, 0, 0.498131,-0.000945108)    );
  // itree = 236
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568792,0.0030136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508206,-0.0127699) , 
3, 22.4947, 1, 0, 0.526199,-0.000994975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348787,-0.0402737) , 
3, 118.088, 1, 0, 0.5191,-0.00126254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204325,0.0181688) , 
3, 137.793, 1, 0, 0.50285,-0.00108432)    );
  // itree = 237
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947846,0.0332624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134233) , 
2, 0.0475202, 1, 0, 0.569101,0.000226095) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.442399,-0.0168116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666653,-0.0256652) , 
6, 0.00870149, 1, 0, 0.520193,-0.00264789) , 
3, 21.5491, 1, 0, 0.537106,-0.00165403) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984804,0.0138585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940567,0.051237) , 
0, 0.00154621, 1, 0, 0.970397,0.00413249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134898) , 
0, 0.00467008, 1, 0, 0.401026,0.000713384) , 
3, 75.4178, 1, 0, 0.503794,-0.00107449)    );
  // itree = 238
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622006,-0.0167902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5028,-0.0400153) , 
7, 9.41285e-06, 1, 0, 0.605658,-0.00294395) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973262,0.00802172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.90009e-05,-0.0126753) , 
0, 0.00467007, 1, 0, 0.437092,-0.000435223) , 
5, 0.00324484, 1, 0, 0.483139,-0.00112053) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638718,-0.0362959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639024,-0.0122163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585976,0.0127366) , 
3, 57.5359, 1, 0, 0.609764,-0.000548925) , 
3, 24.4195, 1, 0, 0.617768,-0.0036667) , 
6, 0.0110166, 1, 0, 0.500031,-0.00144)    );
  // itree = 239
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.599649,-0.00850052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695925,-0.0374949) , 
4, 0.00359762, 1, 0, 0.614395,-0.00111455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985306,0.0250312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.11296,0.0186703) , 
2, 0.0237834, 1, 0, 0.730564,0.00151403) , 
4, 0.00397656, 1, 0, 0.657817,-0.000132028) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737104,-0.079092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737609,0.00742448) , 
4, 0.00536183, 1, 0, 0.737362,-0.00490049) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.142848,-0.0145087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.228451,-0.00323806) , 
5, 0.00571265, 1, 0, 0.199671,-0.000948386) , 
4, 0.00555126, 1, 0, 0.27289,-0.00148656) , 
4, 0.00521917, 1, 0, 0.500603,-0.000685251)    );
  // itree = 240
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260925,-0.00926257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303983,-0.029106) , 
6, 0.00469129, 1, 0, 0.28159,-0.0017388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913634,0.0254405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692291,-0.0174927) , 
4, 0.00472314, 1, 0, 0.880063,0.00110306) , 
7, 1.08167e-05, 1, 0, 0.462205,-0.000881148) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651905,-0.0482345) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661631,-0.000886824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470934,-0.0401508) , 
3, 108.757, 1, 0, 0.634818,-0.0013593) , 
3, 12.6301, 1, 0, 0.637421,-0.00243816) , 
6, 0.00985775, 1, 0, 0.504383,-0.00125595)    );
  // itree = 241
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95669,-0.00378013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79363,0.0253174) , 
2, 0.0231585, 1, 0, 0.947817,0.000417022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16567,-0.00948124) , 
2, 0.0305001, 1, 0, 0.877555,-1.09086e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000315369,-0.0129213) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131049) , 
3, 74.9795, 1, 0, 0,-0.000943006) , 
0, 0.0327577, 1, 0, 8.08069e-05,-0.00184122) , 
2, 0.071385, 1, 0, 0.502311,-0.000793625)    );
  // itree = 242
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.390828,-0.0106571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601433,-0.019858) , 
6, 0.00764445, 1, 0, 0.4193,-0.00109832) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620088,0.0594495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647012,0.0104075) , 
6, 0.00871725, 1, 0, 0.641997,0.00157542) , 
6, 0.00844891, 1, 0, 0.460279,-0.000606329) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66492,-0.0227568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622471,-0.00357565) , 
6, 0.0105226, 1, 0, 0.630989,-0.00133071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610429,-0.103786) , 
1, 1.23376, 1, 0, 0.628595,-0.00240623) , 
6, 0.00985775, 1, 0, 0.501804,-0.00105039)    );
  // itree = 243
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85413,0.00650976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845835,-0.0208787) , 
3, 46.2475, 1, 0, 0.851313,-0.000676223) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.417415,-0.0110581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976307,0.119383) , 
7, 9.69455e-06, 1, 0, 0.771869,0.00283345) , 
3, 88.3208, 1, 0, 0.840052,-0.000178717) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000506368,-0.012067) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013104) , 
3, 74.8876, 1, 0, 0,-0.000895319) , 
0, 0.0327962, 1, 0, 0.00012541,-0.00154607) , 
2, 0.0951771, 1, 0, 0.494846,-0.000740692)    );
  // itree = 244
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678032,0.0130851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41632,-0.00615379) , 
5, 0.00313325, 1, 0, 0.493429,-0.000260643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857111,0.0295324) , 
7, 2.2721e-05, 1, 0, 0.568227,0.000409386) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.285732,-0.00804257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850645,-0.0370759) , 
7, 8.43138e-06, 1, 0, 0.570138,-0.00307597) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638656,0.00511253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.242564,-0.0154168) , 
4, 0.00520808, 1, 0, 0.459666,-0.000648628) , 
3, 36.3152, 1, 0, 0.494319,-0.00141004) , 
3, 12.5037, 1, 0, 0.505643,-0.00113128)    );
  // itree = 245
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.531894,-0.00677501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494324,-0.0196831) , 
3, 32.9875, 1, 0, 0.516397,-0.00124635) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.285872,-0.00658996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849858,0.035814) , 
7, 1.86653e-05, 1, 0, 0.406688,4.95155e-05) , 
3, 62.9923, 1, 0, 0.481604,-0.000835388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61509,0.00610282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684586,-0.0774834) , 
1, 1.0735, 1, 0, 0.64131,-0.00379935) , 
6, 0.0115965, 1, 0, 0.492274,-0.00103341)    );
  // itree = 246
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966522,0.0101419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609753,0.0135739) , 
2, 0.020122, 1, 0, 0.933918,0.000799057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000164244,-0.0129217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131026) , 
0, 0.051346, 1, 0, 7.40536e-05,-0.00160488) , 
2, 0.0475435, 1, 0, 0.545792,-0.000200072) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792577,0.0154437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000174116,-0.0119057) , 
2, 0.023795, 1, 0, 0.131042,-0.000734408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622872,-0.0347214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816443,-0.00766409) , 
5, 0.00327797, 1, 0, 0.784224,-0.00280103) , 
7, 6.85953e-06, 1, 0, 0.433217,-0.00169047) , 
3, 50.4722, 1, 0, 0.496177,-0.000856932)    );
  // itree = 247
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970434,-0.00300102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824987,-0.0324563) , 
2, 0.0172061, 1, 0, 0.959106,-0.000484577) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.277194,0.00511304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423977,0.0483673) , 
3, 74.7375, 1, 0, 0.323272,0.00399907) , 
2, 0.0226629, 1, 0, 0.845707,0.000315069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00017193,-0.0131718) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013103) , 
3, 75.4688, 1, 0, 0,-0.000816346) , 
0, 0.0327226, 1, 0, 4.16565e-05,-0.00159037) , 
2, 0.0952148, 1, 0, 0.497987,-0.000468406)    );
  // itree = 248
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976073,0.0145722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929806,-0.0715988) , 
2, 0.00967843, 1, 0, 0.97036,-0.000692297) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0899174,-0.00789243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789437,0.0236537) , 
6, 0.00811977, 1, 0, 0.537346,0.00310454) , 
2, 0.0135803, 1, 0, 0.836293,0.000483249) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00017193,-0.0129853) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131027) , 
3, 74.2409, 1, 0, 0,-0.000797431) , 
0, 0.0326883, 1, 0, 4.15875e-05,-0.00144047) , 
2, 0.09518, 1, 0, 0.492169,-0.000308375)    );
  // itree = 249
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987798,0.0134571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983049,-0.0973022) , 
4, 0.00579531, 1, 0, 0.987534,0.000316604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704523,0.0157353) , 
0, 0.00221718, 1, 0, 0.972597,0.00063488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137211) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000164783,-0.0100664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131019) , 
0, 0.0402403, 1, 0, 4.59656e-05,-0.000714079) , 
2, 0.119053, 1, 0, 3.52106e-05,-0.00131229) , 
0, 0.00466573, 1, 0, 0.497989,-0.000315336)    );
  // itree = 250
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945633,-0.00184936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93455,0.0161971) , 
3, 61.0119, 1, 0, 0.942395,0.000397326) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131014) , 
2, 0.119611, 1, 0, 0,-0.00125799) , 
0, 0.00934014, 1, 0, 0.49052,-0.000396393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622866,-0.00897404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678344,-0.056227) , 
1, 1.0735, 1, 0, 0.643646,-0.00396515) , 
6, 0.0115963, 1, 0, 0.50086,-0.000637378)    );
  // itree = 251
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999668,0.0309986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99908,0.0656397) , 
2, 0.00902158, 1, 0, 0.999512,0.000876022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666571,0.0108018) , 
2, 0.0237746, 1, 0, 0.970794,0.00145269) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134738) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000166421,-0.00991355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131014) , 
0, 0.0401944, 1, 0, 4.67357e-05,-0.00067712) , 
2, 0.119019, 1, 0, 3.60275e-05,-0.00111427) , 
0, 0.00466298, 1, 0, 0.502457,0.000214276)    );
  // itree = 252
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502618,-0.0086932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21274,0.0218483) , 
3, 126.174, 1, 0, 0.482215,-0.000525225) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613615,-0.0152058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573594,-0.0462572) , 
1, 1.11691, 1, 0, 0.593971,-0.00701721) , 
6, 0.011043, 1, 0, 0.488739,-0.000904255) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992931,0.0610304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.328493,0.0196253) , 
2, 0.0233634, 1, 0, 0.653857,0.00244849) , 
6, 0.0115963, 1, 0, 0.499628,-0.00068315)    );
  // itree = 253
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96422,0.0137602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940092,-0.0323237) , 
3, 87.6854, 1, 0, 0.961344,0.000120041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809558,-0.0312668) , 
2, 0.0191709, 1, 0, 0.952128,-0.000224715) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634578,-0.0104836) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.9338e-05,-0.0121765) , 
2, 0.137224, 1, 0, 3.68651e-05,-0.00105073) , 
0, 0.00467007, 1, 0, 0.0551411,-0.00193893) , 
2, 0.0238037, 1, 0, 0.495953,-0.0010965)    );
  // itree = 254
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.139647,-0.0113785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879003,0.0160097) , 
7, 3.14634e-06, 1, 0, 0.474277,-0.000134956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0684596,-0.010213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851245,-0.0277108) , 
7, 2.53667e-06, 1, 0, 0.35622,-0.00167273) , 
3, 24.9933, 1, 0, 0.391461,-0.0012137) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999562,0.0513351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813202,0.0208824) , 
2, 0.0225656, 1, 0, 0.973272,0.0024321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000299386,-0.011609) , 
0, 0.00465201, 1, 0, 0.620723,0.000936438) , 
6, 0.00753927, 1, 0, 0.500563,-0.000190482)    );
  // itree = 255
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488943,-0.0158545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626365,0.00555536) , 
6, 0.0104932, 1, 0, 0.504409,-0.00108989) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667397,-0.00966339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719548,-0.0539942) , 
1, 1.07128, 1, 0, 0.688756,-0.00407982) , 
6, 0.0115967, 1, 0, 0.516409,-0.00128451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204385,0.0158396) , 
3, 138.79, 1, 0, 0.501288,-0.0011091)    );
  // itree = 256
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559769,-0.0155845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702831,0.0184716) , 
5, 0.00257325, 1, 0, 0.598147,-0.000703761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639106,-0.00388219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599259,-0.0438556) , 
3, 37.2643, 1, 0, 0.618656,-0.00709557) , 
7, 9.28846e-06, 1, 0, 0.60229,-0.00199491) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975399,0.0241589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966956,-0.00171886) , 
6, 0.00954991, 1, 0, 0.971221,0.000639822) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131005) , 
2, 0.142822, 1, 0, 0,-0.00119408) , 
0, 0.00466029, 1, 0, 0.462096,-0.00032153) , 
5, 0.00337964, 1, 0, 0.499172,-0.000764074)    );
  // itree = 257
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986952,-0.00242666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598015,0.0220037) , 
2, 0.00904483, 1, 0, 0.834218,0.00108546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135428) , 
2, 0.190441, 1, 0, 0.654904,0.000431459) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615001,-0.0432289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940307,0.0163411) , 
7, 3.4881e-05, 1, 0, 0.777021,-0.00490825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131001) , 
2, 0.191197, 1, 0, 0,-0.000779818) , 
0, 0.0186803, 1, 0, 0.137096,-0.00150823) , 
4, 0.00579567, 1, 0, 0.497456,-0.000158335)    );
  // itree = 258
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963527,0.00403128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712084,0.0241126) , 
2, 0.0124047, 1, 0, 0.937412,0.000366312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00860898,-0.0071643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013111) , 
0, 0.0372826, 1, 0, 0.0018934,-0.000964902) , 
2, 0.0238052, 1, 0, 0.399054,-0.000399755) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822729,-0.0143958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815818,-0.0495919) , 
3, 88.2111, 1, 0, 0.821661,-0.00443927) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880869,0.0140898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956848,0.0491476) , 
7, 3.4934e-05, 1, 0, 0.914372,0.0030931) , 
7, 3.25858e-05, 1, 0, 0.846019,-0.00246027) , 
7, 2.13905e-05, 1, 0, 0.500944,-0.00086947)    );
  // itree = 259
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929615,-0.0190265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978543,0.0350293) , 
6, 0.00523304, 1, 0, 0.968064,0.000280379) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825024,-0.023239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.237736,0.0030261) , 
2, 0.0273757, 1, 0, 0.524012,-0.00219816) , 
2, 0.0169881, 1, 0, 0.871315,-0.000259639) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000332787,-0.0126466) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131016) , 
3, 75.4289, 1, 0, 0,-0.000636623) , 
0, 0.0327822, 1, 0, 7.84502e-05,-0.0013326) , 
2, 0.0713828, 1, 0, 0.493034,-0.000725506)    );
  // itree = 260
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535221,-0.00570495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500228,-0.0173775) , 
3, 50.6939, 1, 0, 0.530028,-0.000669344) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59941,-0.0389969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670235,-0.000821153) , 
4, 0.00576878, 1, 0, 0.64018,-0.00444838) , 
6, 0.0110177, 1, 0, 0.543459,-0.00113014) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961377,0.00265889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98077,0.04402) , 
5, 0.00441739, 1, 0, 0.970896,0.00231849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.13417e-05,-0.0123299) , 
0, 0.00466015, 1, 0, 0.422695,0.000406027) , 
3, 62.6324, 1, 0, 0.502965,-0.000615045)    );
  // itree = 261
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999497,0.0335308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818032,0.00836903) , 
2, 0.0237746, 1, 0, 0.98755,0.000858718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673966,-0.0169706) , 
0, 0.00221204, 1, 0, 0.969856,0.000270023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136386) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000163708,-0.009218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130995) , 
0, 0.0402164, 1, 0, 4.66633e-05,-0.000534341) , 
2, 0.119021, 1, 0, 3.56439e-05,-0.00106191) , 
0, 0.00466573, 1, 0, 0.500792,-0.000374182)    );
  // itree = 262
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969926,-0.00633407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756542,0.0510294) , 
2, 0.0111762, 1, 0, 0.948326,0.000146899) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00160945,-0.0101828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013102) , 
0, 0.0420316, 1, 0, 0.000423353,-0.00101431) , 
2, 0.0238052, 1, 0, 0.417467,-0.000503421) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638747,-0.049534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627349,-0.00683342) , 
3, 12.4592, 1, 0, 0.629126,-0.00166526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649561,-0.127973) , 
1, 1.38593, 1, 0, 0.630646,-0.00219889) , 
6, 0.00869771, 1, 0, 0.493128,-0.00110517)    );
  // itree = 263
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93974,0.0037989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907333,0.0306217) , 
3, 111.553, 1, 0, 0.937894,0.00060864) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013099) , 
2, 0.119021, 1, 0, 0,-0.000827049) , 
0, 0.00931353, 1, 0, 0.481605,-8.98286e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993359,0.0245481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98273,0.0487648) , 
2, 0.010158, 1, 0, 0.988738,0.000929138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.281139,-0.0220232) , 
2, 0.0237892, 1, 0, 0.639141,-0.00262198) , 
6, 0.0110172, 1, 0, 0.50046,-0.000392901)    );
  // itree = 264
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64499,-0.00945355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472913,-0.010759) , 
3, 87.4691, 1, 0, 0.621158,-0.000857412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.402138,-0.0895614) , 
7, 9.83603e-06, 1, 0, 0.589871,-0.00247867) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963276,-0.0271603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604486,0.0093886) , 
2, 0.0135978, 1, 0, 0.827929,0.000251087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130989) , 
0, 0.0560568, 1, 0, 0,-0.00141507) , 
2, 0.0952148, 1, 0, 0.472857,-0.000463472) , 
5, 0.00331245, 1, 0, 0.502578,-0.000975322)    );
  // itree = 265
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973072,0.00538912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586089,0.0164815) , 
2, 0.00904846, 1, 0, 0.829499,0.000876886) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000348574,-0.0117572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130986) , 
0, 0.0373904, 1, 0, 9.19832e-05,-0.00096191) , 
2, 0.0952207, 1, 0, 0.476855,9.50755e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640237,-0.016625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659799,0.0154578) , 
3, 46.3633, 1, 0, 0.649938,-0.000363533) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691607,-0.0140972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619234,-0.0469958) , 
3, 48.8211, 1, 0, 0.656591,-0.00514484) , 
1, 1.08186, 1, 0, 0.653538,-0.00295061) , 
6, 0.0110166, 1, 0, 0.497752,-0.000265141)    );
  // itree = 266
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684488,0.00228493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584807,-0.0207299) , 
3, 50.4741, 1, 0, 0.645914,-0.000869265) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.759809,-0.122716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806125,0.0290896) , 
5, 0.0042329, 1, 0, 0.78861,-0.00401241) , 
5, 0.00406909, 1, 0, 0.668223,-0.00136066) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.400953,-1.57631e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359929,-0.0247839) , 
3, 70.0291, 1, 0, 0.391722,-0.000569725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227805,0.0235274) , 
3, 113.13, 1, 0, 0.371854,-0.000312025) , 
5, 0.00449901, 1, 0, 0.502952,-0.00077589)    );
  // itree = 267
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972352,0.0369384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544727,0.0351386) , 
2, 0.0169736, 1, 0, 0.910908,0.00150493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133219) , 
2, 0.0714111, 1, 0, 0.55005,0.000504588) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.409916,0.00335108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650315,-0.0484607) , 
6, 0.00754976, 1, 0, 0.525078,-0.00310324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.437994,-0.00188171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620695,-0.024024) , 
6, 0.0110166, 1, 0, 0.460807,-0.000584878) , 
3, 36.656, 1, 0, 0.472704,-0.00105104) , 
3, 25.2402, 1, 0, 0.496278,-0.000576903)    );
  // itree = 268
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999252,0.00997395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767962,0.00858025) , 
2, 0.0235276, 1, 0, 0.983298,0.000532411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391031,-0.011897) , 
0, 0.00221903, 1, 0, 0.934446,-2.11918e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013099) , 
3, 75.4233, 1, 0, 0,-0.000496062) , 
2, 0.119205, 1, 0, 0,-0.000919528) , 
0, 0.00932596, 1, 0, 0.501339,-0.000437563)    );
  // itree = 269
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962778,0.0203687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151793,-0.0193028) , 
2, 0.00450498, 1, 0, 0.584683,-0.00134744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993675,0.00208147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748292,0.0148556) , 
2, 0.0224522, 1, 0, 0.965798,0.000883242) , 
7, 7.95555e-06, 1, 0, 0.849824,0.000204439) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000349382,-0.0121575) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013099) , 
3, 75.4289, 1, 0, 0,-0.000495699) , 
0, 0.0326152, 1, 0, 8.54116e-05,-0.00103018) , 
2, 0.0952148, 1, 0, 0.503501,-0.000298748)    );
  // itree = 270
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971457,-0.0112535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960302,0.0270295) , 
3, 34.627, 1, 0, 0.965535,0.000229314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845446,-0.0376629) , 
2, 0.0192697, 1, 0, 0.959151,-0.000103765) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635365,-0.00653068) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013098) , 
2, 0.137255, 1, 0, 0,-0.000788618) , 
0, 0.00466015, 1, 0, 0.0560203,-0.00127193) , 
2, 0.0238052, 1, 0, 0.500997,-0.000696367)    );
  // itree = 271
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.534855,0.000867808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.40248,-0.00794339) , 
3, 73.2208, 1, 0, 0.505975,-0.000258588) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735652,-0.0365654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699048,-0.04621) , 
3, 45.8443, 1, 0, 0.721132,-0.00513472) , 
5, 0.00244856, 1, 0, 0.60244,-0.00244478) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97038,0.0293319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131239) , 
0, 0.00467008, 1, 0, 0.275216,0.00015646) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684247,-0.00757571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527527,-0.0258363) , 
3, 98.0689, 1, 0, 0.661739,-0.00161632) , 
6, 0.00869846, 1, 0, 0.452755,-0.000657819) , 
5, 0.00342783, 1, 0, 0.494233,-0.00115299)    );
  // itree = 272
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.423049,-0.0107692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850625,0.0146113) , 
7, 1.88343e-05, 1, 0, 0.525833,-0.000104049) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.217573,-0.00514595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845379,-0.0325543) , 
7, 1.96642e-05, 1, 0, 0.3319,-0.0020073) , 
3, 87.3615, 1, 0, 0.488959,-0.000465926) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635051,-0.0624853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634621,0.0216391) , 
3, 35.9746, 1, 0, 0.634792,-0.00288615) , 
6, 0.0115963, 1, 0, 0.498876,-0.000630506)    );
  // itree = 273
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946355,0.0357882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000670702,-0.011219) , 
2, 0.0237726, 1, 0, 0.452006,1.31295e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.432504,-0.0396398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315694,-0.00658287) , 
3, 59.7835, 1, 0, 0.337533,-0.00116134) , 
3, 49.7034, 1, 0, 0.401845,-0.000501514) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992269,0.0352607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994902,-0.328737) , 
1, 1.19425, 1, 0, 0.993405,-0.00131919) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.407001,-0.0176697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475499,-0.0142967) , 
6, 0.011102, 1, 0, 0.444754,-0.00966344) , 
2, 0.0235276, 1, 0, 0.832289,-0.00376955) , 
7, 2.18117e-05, 1, 0, 0.496184,-0.00121776)    );
  // itree = 274
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990407,0.0195977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869402,-0.00923796) , 
0, 0.00154843, 1, 0, 0.971771,0.000230431) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130974) , 
2, 0.119019, 1, 0, 0,-0.000620397) , 
0, 0.00466573, 1, 0, 0.400634,-0.000269625) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838444,0.000792389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916,-0.020248) , 
7, 3.40792e-05, 1, 0, 0.851378,-0.000630602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844838,-0.0497442) , 
3, 89.4607, 1, 0, 0.850341,-0.00178451) , 
7, 2.13905e-05, 1, 0, 0.500059,-0.000604547)    );
  // itree = 275
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999695,0.0442197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994249,-0.0438025) , 
8, 0.00992552, 1, 0, 0.998554,-3.98164e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680233,0.0103622) , 
2, 0.0237746, 1, 0, 0.97154,0.000516081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000175536,-0.00737291) , 
6, 0.00869352, 1, 0, 4.71305e-05,-0.000373115) , 
2, 0.119305, 1, 0, 3.60965e-05,-0.00087859) , 
0, 0.00467007, 1, 0, 0.50585,-0.000152455)    );
  // itree = 276
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.402413,-0.00917592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605887,-0.0348514) , 
6, 0.00771998, 1, 0, 0.417012,-0.000669261) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977406,0.0175446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131556) , 
0, 0.00464146, 1, 0, 0.41029,0.000152417) , 
6, 0.00810621, 1, 0, 0.415235,-0.000451998) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953997,-0.0216209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.693987,0.0187616) , 
0, 0.00169345, 1, 0, 0.803904,0.000485904) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906513,-0.0234684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878163,-0.0362887) , 
3, 48.8875, 1, 0, 0.894613,-0.00871525) , 
1, 1.2041, 1, 0, 0.835047,-0.00267317) , 
7, 2.2045e-05, 1, 0, 0.506359,-0.000934125)    );
  // itree = 277
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973501,-0.00682661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986337,0.119315) , 
5, 0.00436601, 1, 0, 0.974869,-1.98683e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013097) , 
2, 0.119065, 1, 0, 0,-0.000629348) , 
0, 0.0046603, 1, 0, 0.398392,-0.000380277) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83755,-0.020432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885437,0.0215841) , 
7, 3.10948e-05, 1, 0, 0.853708,-0.000888644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835819,-0.0506993) , 
3, 94.0821, 1, 0, 0.851249,-0.00286942) , 
7, 2.13905e-05, 1, 0, 0.500243,-0.000940108)    );
  // itree = 278
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938716,0.0257647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132633) , 
2, 0.0475725, 1, 0, 0.527353,6.84738e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505541,-0.0918038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.40841,-0.0121673) , 
3, 36.394, 1, 0, 0.426044,-0.00178734) , 
3, 25.0563, 1, 0, 0.457304,-0.0012147) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.3147,-0.0103091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772267,0.0429447) , 
1, 1.21288, 1, 0, 0.536795,0.000310071) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981029,0.0320125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.307363,0.0187797) , 
2, 0.0235349, 1, 0, 0.675189,0.00232925) , 
4, 0.00524805, 1, 0, 0.625381,0.00160255) , 
6, 0.00985765, 1, 0, 0.498092,-0.000531021)    );
  // itree = 279
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.423041,-0.000632983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838862,-0.0369461) , 
7, 5.51195e-06, 1, 0, 0.669592,-0.00233419) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.463293,0.0131141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155204,-0.0215079) , 
4, 0.00521796, 1, 0, 0.313305,-0.000106503) , 
5, 0.0043821, 1, 0, 0.481948,-0.00116094) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704121,-0.0263643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573606,-0.0686347) , 
4, 0.00574233, 1, 0, 0.647456,-0.0109037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644724,0.0164277) , 
6, 0.0117359, 1, 0, 0.646355,-0.00574963) , 
6, 0.0110166, 1, 0, 0.501581,-0.00170893)    );
  // itree = 280
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530775,0.00044613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712624,-0.0445403) , 
7, 7.04546e-06, 1, 0, 0.593057,-0.00133809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976129,0.0180788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131482) , 
0, 0.00467007, 1, 0, 0.315367,-0.000113927) , 
5, 0.00334798, 1, 0, 0.407837,-0.00052157) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923107,-0.0737767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976345,-0.0326548) , 
5, 0.00520519, 1, 0, 0.956598,-0.00784115) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.720178,-0.00350921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803929,0.0330585) , 
7, 3.13605e-05, 1, 0, 0.750143,0.00100224) , 
0, 0.00166443, 1, 0, 0.840282,-0.00285881) , 
7, 2.20873e-05, 1, 0, 0.500166,-0.00102058)    );
  // itree = 281
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869046,0.0174724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0999415,-0.00852673) , 
4, 0.00234105, 1, 0, 0.511278,0.00022175) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765748,-0.0608254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614112,-0.0095045) , 
3, 51.2638, 1, 0, 0.705607,-0.00470608) , 
5, 0.00244964, 1, 0, 0.600841,-0.00204941) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862227,0.0165845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.33441,-0.017625) , 
4, 0.00523777, 1, 0, 0.768636,0.000477041) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842814,-0.0846731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0548478,-0.00310323) , 
2, 0.023811, 1, 0, 0.220994,-0.00119188) , 
5, 0.00538747, 1, 0, 0.457697,-0.000470536) , 
5, 0.00342916, 1, 0, 0.496722,-0.000900984)    );
  // itree = 282
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94799,0.0355429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00136383,-0.0124341) , 
2, 0.0237601, 1, 0, 0.460043,-0.000237767) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964891,0.0248624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816949,0.0458179) , 
0, 0.00156518, 1, 0, 0.887841,0.00288436) , 
7, 2.22499e-05, 1, 0, 0.545509,0.000385972) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646612,-0.0171392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.310093,0.00302162) , 
5, 0.00448149, 1, 0, 0.461519,-0.000705923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680295,-0.0394747) , 
6, 0.0115965, 1, 0, 0.475778,-0.00099032) , 
3, 25.2402, 1, 0, 0.497063,-0.000570219)    );
  // itree = 283
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987055,0.0129684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760574,-0.0102961) , 
0, 0.00199389, 1, 0, 0.970624,0.000134414) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0874738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918573,0.0277145) , 
2, 0.0182844, 1, 0, 0.967951,0.00469268) , 
7, 3.1769e-05, 1, 0, 0.970289,0.000706326) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136113) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000164244,-0.00683432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130965) , 
0, 0.040206, 1, 0, 4.6548e-05,-0.000309379) , 
2, 0.118975, 1, 0, 3.56607e-05,-0.000781889) , 
0, 0.00466298, 1, 0, 0.49923,-1.6204e-05)    );
  // itree = 284
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970505,0.0258249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975634,-0.086423) , 
6, 0.00870454, 1, 0, 0.972312,-0.000603535) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864696,0.0335069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147258,-0.00642356) , 
2, 0.0291167, 1, 0, 0.557289,0.00139837) , 
2, 0.0135738, 1, 0, 0.847582,-1.88964e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130969) , 
3, 62.8746, 1, 0, 0,-0.000349538) , 
0, 0.0373557, 1, 0, 0,-0.000963654) , 
2, 0.0952207, 1, 0, 0.505103,-0.000390505)    );
  // itree = 285
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.5239,-0.00346554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356349,-0.0127371) , 
3, 74.9714, 1, 0, 0.482341,-0.000443515) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633926,0.0248943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563352,0.00543497) , 
3, 73.1578, 1, 0, 0.614594,0.0015902) , 
6, 0.0104924, 1, 0, 0.497016,-0.000217851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645188,-0.0491437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646829,0.0193743) , 
3, 35.9746, 1, 0, 0.646155,-0.00288314) , 
6, 0.0115964, 1, 0, 0.506883,-0.000394189)    );
  // itree = 286
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66456,-0.00573143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744936,0.0335784) , 
4, 0.00551685, 1, 0, 0.670063,-0.00017576) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0264334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131035) , 
2, 0.19029, 1, 0, 0,-0.00101093) , 
4, 0.0057968, 1, 0, 0.482546,-0.000409483) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67901,-0.0581512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627585,-0.00665852) , 
6, 0.0117898, 1, 0, 0.64655,-0.00290072) , 
6, 0.0115965, 1, 0, 0.493589,-0.000577235)    );
  // itree = 287
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.31417,-0.0225925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575971,0.0109407) , 
6, 0.00503043, 1, 0, 0.4319,-0.000442944) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650174,-0.00402082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648559,-0.0659813) , 
1, 1.40501, 1, 0, 0.649719,-0.00164854) , 
6, 0.00754132, 1, 0, 0.535965,-0.00101892) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987124,0.00978328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881973,0.0353297) , 
0, 0.00191266, 1, 0, 0.967117,0.00180703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134142) , 
0, 0.00467007, 1, 0, 0.425966,0.000361047) , 
3, 62.8555, 1, 0, 0.499945,-0.000567049)    );
  // itree = 288
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674603,0.00207407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112335,-0.0188851) , 
4, 0.00521726, 1, 0, 0.4742,-0.000259371) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608764,-0.0298937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63922,-0.0282135) , 
1, 1.11454, 1, 0, 0.624255,-0.00386278) , 
6, 0.0110438, 1, 0, 0.482549,-0.00045987) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637916,0.00616241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.694795,0.0378601) , 
1, 1.06907, 1, 0, 0.663634,0.00229652) , 
6, 0.0115963, 1, 0, 0.49447,-0.000278421)    );
  // itree = 289
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924339,0.0132577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000113162,-0.0122015) , 
2, 0.09518, 1, 0, 0.682384,0.00029969) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941447,-0.0227811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131099) , 
0, 0.00466298, 1, 0, 0.113841,-0.00117262) , 
4, 0.00521951, 1, 0, 0.485984,-0.000208909) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62125,-0.042407) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63007,-0.0409597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635491,0.0207943) , 
5, 0.00571474, 1, 0, 0.633792,-0.000652725) , 
3, 24.4251, 1, 0, 0.630165,-0.00599385) , 
6, 0.0110168, 1, 0, 0.503411,-0.000908135)    );
  // itree = 290
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967649,0.00746839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498614,0.0220448) , 
2, 0.0169736, 1, 0, 0.880172,0.000985451) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135239) , 
7, -1.0209e-05, 1, 0, 0,-0.000829771) , 
2, 0.0713588, 1, 0, 0.535587,0.000274797) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.370429,-0.0130987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.306553,-0.000817826) , 
4, 0.0023199, 1, 0, 0.317322,-0.00055173) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.786053,-0.0264294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904672,-0.0726098) , 
1, 1.19425, 1, 0, 0.829347,-0.00583288) , 
7, 2.18117e-05, 1, 0, 0.427375,-0.00168684) , 
3, 62.9951, 1, 0, 0.50057,-0.000359976)    );
  // itree = 291
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960974,-0.00458203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565382,0.0340866) , 
2, 0.0226702, 1, 0, 0.924938,0.000769182) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000176772,-0.0134464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130958) , 
0, 0.0326276, 1, 0, 4.63047e-05,-0.00104491) , 
2, 0.0476103, 1, 0, 0.53023,-5.00283e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.405002,0.00778404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0901189,-0.0114119) , 
4, 0.0040965, 1, 0, 0.208122,-1.26369e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816613,-0.0466202) , 
7, 2.18045e-05, 1, 0, 0.323088,-0.00216254) , 
3, 100.79, 1, 0, 0.502395,-0.000294917)    );
  // itree = 292
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.440003,-0.0212799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.360893,-0.00285946) , 
3, 54.0723, 1, 0, 0.412131,-0.00075152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152615,0.0215644) , 
3, 126.173, 1, 0, 0.392532,-0.000548736) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992084,-0.220674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994588,0.0502305) , 
8, 0.00833765, 1, 0, 0.994123,0.000464876) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.333514,0.00552743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637115,0.0216272) , 
7, 3.05849e-05, 1, 0, 0.4665,0.00430687) , 
2, 0.0236511, 1, 0, 0.84282,0.00156662) , 
7, 2.18809e-05, 1, 0, 0.48783,-0.000101049)    );
  // itree = 293
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956786,0.0478345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000510371,-0.0121048) , 
2, 0.0238037, 1, 0, 0.496606,6.63913e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.451295,-0.142643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724353,-0.0131274) , 
4, 0.0046248, 1, 0, 0.652435,-0.00387299) , 
6, 0.0086986, 1, 0, 0.552806,-0.00135435) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967613,0.00602198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.34218e-05,-0.011864) , 
0, 0.00467007, 1, 0, 0.435694,-2.45636e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971279,0.0169554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317743,0.0277475) , 
2, 0.0237819, 1, 0, 0.614128,0.00285959) , 
6, 0.011017, 1, 0, 0.457903,0.000334421) , 
3, 37.7108, 1, 0, 0.499419,-0.000404339)    );
  // itree = 294
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.48209,-0.0170076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629253,0.0184574) , 
6, 0.0104921, 1, 0, 0.498946,-0.000610688) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677379,-0.0103853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672945,-0.0498423) , 
3, 39.3527, 1, 0, 0.675048,-0.00365264) , 
6, 0.0115965, 1, 0, 0.510082,-0.00080304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226967,0.0340067) , 
3, 137.791, 1, 0, 0.496186,-0.000592797)    );
  // itree = 295
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84472,0.0130332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132696) , 
2, 0.0714111, 1, 0, 0.443266,-2.99583e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.3458,-0.0194033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257438,-0.00571274) , 
3, 83.9479, 1, 0, 0.275151,-0.000906862) , 
3, 75.0045, 1, 0, 0.400635,-0.000252326) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930345,-0.0214366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867275,-0.0546178) , 
6, 0.00999181, 1, 0, 0.905563,-0.00916518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790548,-0.00898081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939043,0.0352931) , 
7, 3.48256e-05, 1, 0, 0.81937,-0.000524052) , 
6, 0.0103654, 1, 0, 0.850297,-0.0036246) , 
7, 2.13905e-05, 1, 0, 0.503389,-0.00102294)    );
  // itree = 296
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631788,-0.0128922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743926,-0.0784325) , 
4, 0.00441717, 1, 0, 0.640373,-0.00134198) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966392,0.0292339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131711) , 
0, 0.00467007, 1, 0, 0.324726,0.000580645) , 
4, 0.00463838, 1, 0, 0.490049,-0.000426354) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641744,-0.0808025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616827,0.0110409) , 
3, 35.9746, 1, 0, 0.626756,-0.00632602) , 
6, 0.0115965, 1, 0, 0.49912,-0.000817792)    );
  // itree = 297
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.399233,-0.0113275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636316,0.013223) , 
6, 0.00807181, 1, 0, 0.45767,-0.000192758) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654423,0.0442288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608644,-0.0196488) , 
3, 24.9182, 1, 0, 0.622376,-0.00192398) , 
6, 0.00996821, 1, 0, 0.478054,-0.000407018) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98664,0.0472999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965584,-0.0615478) , 
3, 45.7827, 1, 0, 0.977437,-0.00107907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.275826,-0.0244638) , 
2, 0.023747, 1, 0, 0.626244,-0.00472542) , 
6, 0.0110177, 1, 0, 0.496185,-0.000935365)    );
  // itree = 298
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.126121,-0.00895451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861458,-0.027515) , 
7, 4.06495e-06, 1, 0, 0.397866,-0.00104083) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.46993,-0.00504279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678493,0.0265546) , 
5, 0.00414815, 1, 0, 0.628282,0.000993808) , 
6, 0.00797971, 1, 0, 0.456712,-0.000521204) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72507,0.0474536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627061,-0.00311045) , 
6, 0.0116998, 1, 0, 0.659406,0.000588018) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607111,-0.0136788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603423,-0.0508681) , 
6, 0.0111094, 1, 0, 0.606464,-0.00377201) , 
1, 1.10771, 1, 0, 0.624192,-0.00231201) , 
6, 0.00985765, 1, 0, 0.497298,-0.000955176)    );
  // itree = 299
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.460484,-0.00264674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428807,-0.0723827) , 
3, 25.2396, 1, 0, 0.450266,-0.00150529) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975667,0.0109979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131497) , 
0, 0.00466298, 1, 0, 0.360626,1.86154e-05) , 
3, 37.8571, 1, 0, 0.400218,-0.000654466) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.749732,0.0015424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696143,-0.0248492) , 
3, 44.8603, 1, 0, 0.724496,-0.000821369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999097,0.0851361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576611,0.0219909) , 
2, 0.0234259, 1, 0, 0.886191,0.00264259) , 
5, 0.00494287, 1, 0, 0.847944,0.00182324) , 
7, 2.13905e-05, 1, 0, 0.501505,-9.3948e-05)    );
  // itree = 300
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564031,-0.00719622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747311,0.023026) , 
4, 0.00309205, 1, 0, 0.632982,-1.3344e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959702,-0.0142927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131064) , 
0, 0.00466029, 1, 0, 0.208889,-0.000563397) , 
4, 0.00405872, 1, 0, 0.414437,-0.000296799) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628604,-0.0157841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997473,0.0619626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584517,0.0166874) , 
2, 0.0236511, 1, 0, 0.892544,0.00259213) , 
5, 0.00483084, 1, 0, 0.858,0.00186993) , 
7, 2.2045e-05, 1, 0, 0.507903,0.000159766)    );
  // itree = 301
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635302,0.00459752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753475,0.0760701) , 
4, 0.00386495, 1, 0, 0.645559,0.000377627) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844991,-0.0432533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00127824,-0.0100834) , 
2, 0.0238037, 1, 0, 0.185054,-0.000635044) , 
4, 0.00405941, 1, 0, 0.40703,-0.000146908) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851131,0.0150196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80921,-0.013006) , 
5, 0.00540138, 1, 0, 0.831855,5.88067e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994679,-0.0800493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527864,-0.0310563) , 
2, 0.0234259, 1, 0, 0.823595,-0.00678758) , 
3, 48.792, 1, 0, 0.82815,-0.00301194) , 
7, 2.13905e-05, 1, 0, 0.503363,-0.000802296)    );
  // itree = 302
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968176,0.0103497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949054,0.0325165) , 
3, 96.8958, 1, 0, 0.966556,0.000986955) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013095) , 
2, 0.119205, 1, 0, 0,-0.000391088) , 
0, 0.00467007, 1, 0, 0.394002,0.00017065) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949908,-0.0147467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473786,-0.0432658) , 
5, 0.00571496, 1, 0, 0.871237,-0.00431089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746658,0.0197793) , 
4, 0.00581766, 1, 0, 0.842393,-0.00272666) , 
7, 2.13905e-05, 1, 0, 0.494101,-0.000476145)    );
  // itree = 303
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81973,0.0109079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411291,-0.0203415) , 
4, 0.00349058, 1, 0, 0.635646,-0.000352518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709236,-0.041902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681125,-0.0332951) , 
3, 37.8503, 1, 0, 0.69452,-0.00456094) , 
7, 1.71091e-05, 1, 0, 0.644458,-0.000982421) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770995,-0.00924112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772127,0.0305171) , 
5, 0.00468076, 1, 0, 0.771908,0.00141538) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.259048,-0.0497701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.215985,-0.00171074) , 
3, 12.5393, 1, 0, 0.221887,-0.000548985) , 
5, 0.00541883, 1, 0, 0.377405,6.4366e-06) , 
5, 0.00450547, 1, 0, 0.498953,-0.000443636)    );
  // itree = 304
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602321,-0.0143091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70901,0.00764017) , 
4, 0.00378323, 1, 0, 0.628581,-0.00058643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.745615,-0.0979502) , 
4, 0.00441358, 1, 0, 0.637596,-0.0011215) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939385,0.00692639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467464,0.0349404) , 
2, 0.023763, 1, 0, 0.81861,0.00144467) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000173314,-0.0118877) , 
6, 0.0069568, 1, 0, 6.12305e-05,-0.00056003) , 
2, 0.0713239, 1, 0, 0.371105,0.000348691) , 
4, 0.00463629, 1, 0, 0.500318,-0.00036416)    );
  // itree = 305
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.890694,-0.0205214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000562714,-0.00435776) , 
2, 0.04759, 1, 0, 0.43438,-0.000773619) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670955,0.0102263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634162,0.0432433) , 
3, 24.5264, 1, 0, 0.645722,0.00121379) , 
6, 0.00891801, 1, 0, 0.460022,-0.00053249) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638986,-0.0583041) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660776,0.0160364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589551,-0.0277807) , 
3, 48.6826, 1, 0, 0.62148,-0.00117843) , 
3, 12.6351, 1, 0, 0.624113,-0.00267697) , 
6, 0.00985775, 1, 0, 0.500437,-0.00106067)    );
  // itree = 306
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.113087,-0.00967129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744801,0.0153745) , 
7, 7.42883e-07, 1, 0, 0.541104,0.000269075) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663377,-0.0375536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321908,-0.00412241) , 
4, 0.00334159, 1, 0, 0.358907,-0.000429651) , 
4, 0.00289951, 1, 0, 0.407635,-0.000242779) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845254,-0.055603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853078,-0.0100485) , 
3, 12.8166, 1, 0, 0.850683,-0.0031993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840133,0.0100362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855521,-0.0408) , 
3, 90.0149, 1, 0, 0.845117,-0.000405875) , 
3, 44.7641, 1, 0, 0.84801,-0.00185763) , 
7, 2.18809e-05, 1, 0, 0.502432,-0.000590398)    );
  // itree = 307
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96744,0.0392924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848386,-0.0580998) , 
2, 0.0191709, 1, 0, 0.961244,0.000220345) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841222,0.0512242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.162018,0.0078634) , 
2, 0.0305699, 1, 0, 0.381081,0.00523252) , 
2, 0.0237223, 1, 0, 0.881823,0.00090649) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000674288,-0.0109324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130961) , 
3, 75.0268, 1, 0, 0,-0.00023089) , 
0, 0.0327081, 1, 0, 0.00015997,-0.000607003) , 
2, 0.0714155, 1, 0, 0.502689,0.000255655)    );
  // itree = 308
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.354891,-0.0136448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608793,0.0220514) , 
6, 0.00675198, 1, 0, 0.449904,-0.000123643) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615062,-0.149289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632458,-0.0218256) , 
1, 1.22255, 1, 0, 0.628207,-0.00357503) , 
6, 0.00944618, 1, 0, 0.472172,-0.000554686) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650623,0.0530638) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664184,-0.00738677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592025,0.00665833) , 
3, 35.2925, 1, 0, 0.612937,0.0001938) , 
3, 12.1761, 1, 0, 0.618416,0.000523645) , 
6, 0.0104397, 1, 0, 0.498572,-0.00036003)    );
  // itree = 309
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973913,0.0622707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657547,-0.0117994) , 
2, 0.0122768, 1, 0, 0.946407,0.000684777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0041619,-0.00664471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130989) , 
0, 0.0419921, 1, 0, 0.00109763,-0.000474906) , 
2, 0.0238052, 1, 0, 0.420661,3.98047e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647706,-0.110384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6438,0.000340162) , 
6, 0.00903009, 1, 0, 0.644214,-0.000856649) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.2537,0.00341094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826945,-0.05481) , 
7, 2.19616e-05, 1, 0, 0.587124,-0.00574506) , 
3, 63.1006, 1, 0, 0.62482,-0.00251728) , 
6, 0.00869846, 1, 0, 0.493656,-0.000874456)    );
  // itree = 310
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.797055,0.0228628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142776,-0.0232715) , 
4, 0.00290683, 1, 0, 0.523226,0.000109991) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930664,-0.066007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791147,-0.0209959) , 
6, 0.00671879, 1, 0, 0.812714,-0.00310561) , 
7, 9.44314e-06, 1, 0, 0.655394,-0.00135812) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675989,0.00534321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946941,0.0461895) , 
6, 0.0115964, 1, 0, 0.718979,0.00103562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0321407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130949) , 
2, 0.19024, 1, 0, 0,-0.00077694) , 
5, 0.00632121, 1, 0, 0.375088,0.000168665) , 
5, 0.00449901, 1, 0, 0.500703,-0.000515539)    );
  // itree = 311
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958108,0.0362559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0146988) , 
2, 0.0237906, 1, 0, 0.522925,5.51916e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840778,0.000613724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782377,-0.0436721) , 
3, 25.1969, 1, 0, 0.801574,-0.00391692) , 
7, 9.64962e-06, 1, 0, 0.643655,-0.0016658) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978137,0.00883422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666536,0.0230308) , 
0, 0.00221904, 1, 0, 0.939378,0.00145081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130948) , 
2, 0.142944, 1, 0, 0,-0.000454284) , 
0, 0.00934014, 1, 0, 0.37131,0.000298747) , 
5, 0.00450643, 1, 0, 0.495922,-0.000600137)    );
  // itree = 312
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999168,0.0270044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648312,0.0117422) , 
2, 0.0231309, 1, 0, 0.973279,0.000957003) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130942) , 
2, 0.142875, 1, 0, 0,-0.000478235) , 
0, 0.00465917, 1, 0, 0.523135,0.000293203) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951834,0.0263861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132617) , 
0, 0.0046701, 1, 0, 0.249125,0.000256433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845196,-0.034494) , 
7, 2.18116e-05, 1, 0, 0.368109,-0.00144206) , 
3, 87.9869, 1, 0, 0.495285,-1.85349e-05)    );
  // itree = 313
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.541534,0.00208889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521974,-0.0511486) , 
3, 25.1365, 1, 0, 0.535518,-0.000611563) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974674,0.0138845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132161) , 
0, 0.00466015, 1, 0, 0.407317,0.000149395) , 
3, 37.7076, 1, 0, 0.463754,-0.000185591) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680742,-0.0401414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576019,-0.0398654) , 
3, 59.8682, 1, 0, 0.640947,-0.00636961) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644548,-0.0293424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600078,0.00116446) , 
3, 25.2139, 1, 0, 0.613016,-0.0014688) , 
6, 0.0105228, 1, 0, 0.621331,-0.00292772) , 
6, 0.00985775, 1, 0, 0.50308,-0.000869946)    );
  // itree = 314
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.514308,0.00872056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461406,-0.0155613) , 
3, 50.2771, 1, 0, 0.501164,-4.895e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67399,-0.0459553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634644,-0.00530651) , 
6, 0.0104102, 1, 0, 0.644446,-0.00162066) , 
6, 0.00985716, 1, 0, 0.535343,-0.000423875) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932765,0.0200872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419212,0.0605419) , 
2, 0.0222633, 1, 0, 0.790991,0.00222985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000284676,-0.00961292) , 
2, 0.09518, 1, 0, 0.393667,0.000774889) , 
3, 75.4197, 1, 0, 0.500893,-0.000132387)    );
  // itree = 315
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971352,0.0584052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013107) , 
0, 0.00466015, 1, 0, 0.322,0.000275782) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610814,-0.00964354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545892,-0.0549332) , 
1, 1.85608, 1, 0, 0.603995,-0.00101936) , 
6, 0.00610229, 1, 0, 0.4569,-0.000343783) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985946,0.0361601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229295,0.0119164) , 
2, 0.0238023, 1, 0, 0.654564,0.00157715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494227,-0.0269248) , 
3, 111.859, 1, 0, 0.63742,0.00118121) , 
6, 0.00985716, 1, 0, 0.500579,2.52114e-05)    );
  // itree = 316
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667938,0.00435483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646609,-0.0371097) , 
3, 29.461, 1, 0, 0.658227,-0.00125251) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.325253,-0.0118185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633837,0.0246583) , 
4, 0.00200023, 1, 0, 0.558041,0.000310577) , 
3, 61.8659, 1, 0, 0.628834,-0.000793924) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752143,0.027304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742528,0.0209228) , 
3, 37.2763, 1, 0, 0.74717,0.001941) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738607,-0.0224365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248377,-0.000972137) , 
4, 0.00533842, 1, 0, 0.321266,-0.000435922) , 
4, 0.00499646, 1, 0, 0.370802,-0.000159469) , 
4, 0.00463754, 1, 0, 0.497817,-0.000471777)    );
  // itree = 317
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502242,-0.00104326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666946,-0.0212861) , 
5, 0.002462, 1, 0, 0.542855,-0.000429917) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.727903,-0.0252749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72472,-0.0802527) , 
5, 0.00314578, 1, 0, 0.726514,-0.00500657) , 
5, 0.00287225, 1, 0, 0.586401,-0.00151505) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971452,0.00153187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973313,0.0327289) , 
6, 0.0111256, 1, 0, 0.971836,0.00074545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130944) , 
2, 0.119254, 1, 0, 0,-0.000542839) , 
0, 0.00466573, 1, 0, 0.466514,7.55829e-05) , 
5, 0.00335148, 1, 0, 0.497903,-0.000340877)    );
  // itree = 318
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.342023,-0.0101518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869164,0.017503) , 
7, 1.58213e-05, 1, 0, 0.475727,3.90088e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571589,-0.0209588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63098,0.0143994) , 
6, 0.0112814, 1, 0, 0.60288,-0.00169038) , 
6, 0.0110431, 1, 0, 0.483171,-6.2241e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662552,-0.0131834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599776,-0.0431338) , 
3, 56.8323, 1, 0, 0.636724,-0.00452745) , 
6, 0.0115965, 1, 0, 0.493396,-0.000359556)    );
  // itree = 319
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533747,0.00186838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489205,-0.0121404) , 
3, 24.0298, 1, 0, 0.504444,-0.000529697) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648401,0.00804191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674793,-0.0539026) , 
3, 43.2719, 1, 0, 0.659927,-0.00314375) , 
6, 0.0115965, 1, 0, 0.51456,-0.000699764) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0671848,-0.00449838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788145,0.0455787) , 
7, 6.55641e-06, 1, 0, 0.335014,0.000918078) , 
3, 100.938, 1, 0, 0.491525,-0.000492206)    );
  // itree = 320
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752113,-0.00745213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970294,0.0446909) , 
7, 4.16622e-06, 1, 0, 0.864651,0.000255007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881351,-0.045682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0920655,-0.0243026) , 
4, 0.00335106, 1, 0, 0.346753,-0.00288407) , 
4, 0.0029111, 1, 0, 0.597278,-0.00136559) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737522,-0.0157033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352042,-0.000425148) , 
5, 0.00438514, 1, 0, 0.439887,-0.000198388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.590065,0.00131456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744881,0.0470115) , 
1, 1.06242, 1, 0, 0.677997,0.0013586) , 
6, 0.0115965, 1, 0, 0.46087,-6.11846e-05) , 
5, 0.00342783, 1, 0, 0.498633,-0.0004223)    );
  // itree = 321
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64695,0.00377735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601954,-0.0334253) , 
7, 2.32403e-05, 1, 0, 0.644536,-0.000292782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742887,-0.0371486) , 
4, 0.00496919, 1, 0, 0.652282,-0.000863627) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889338,0.0152701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450014,0.0441902) , 
2, 0.0237834, 1, 0, 0.751675,0.00221443) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136547) , 
6, 0.00695518, 1, 0, 0,-0.000590149) , 
2, 0.0714111, 1, 0, 0.276723,0.000442335) , 
4, 0.00521759, 1, 0, 0.501779,-0.00034027)    );
  // itree = 322
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52118,-0.0024363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596496,-0.0338284) , 
7, 6.15444e-06, 1, 0, 0.543497,-0.000931048) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.367254,-0.00754741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138451,0.0136222) , 
3, 113.555, 1, 0, 0.341805,-0.000172221) , 
4, 0.00289998, 1, 0, 0.396074,-0.0003764) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527245,-0.0402036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903067,-0.0278048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899555,0.0311713) , 
3, 73.1578, 1, 0, 0.902202,-0.00197214) , 
5, 0.00473444, 1, 0, 0.85736,-0.00391503) , 
7, 2.13904e-05, 1, 0, 0.49752,-0.00115462)    );
  // itree = 323
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.480518,0.00513396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4206,-0.0237712) , 
3, 30.0406, 1, 0, 0.452228,-0.000568011) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963706,0.0138024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131344) , 
0, 0.00467008, 1, 0, 0.302081,0.000133385) , 
3, 63.0863, 1, 0, 0.402143,-0.000334043) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961768,0.0461042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827008,-0.00799666) , 
6, 0.0100158, 1, 0, 0.856717,-0.000490412) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821377,-0.0378613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811765,-0.011796) , 
3, 68.5167, 1, 0, 0.815262,-0.0065538) , 
3, 48.7764, 1, 0, 0.838024,-0.00322452) , 
7, 2.18118e-05, 1, 0, 0.498515,-0.000973116)    );
  // itree = 324
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973239,0.0312325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131588) , 
0, 0.00465317, 1, 0, 0.508742,0.000551456) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912189,0.0349419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0373989,-0.0177928) , 
2, 0.0237572, 1, 0, 0.300401,-0.00161936) , 
3, 100.788, 1, 0, 0.481861,0.000271369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564642,-0.0375892) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701026,0.0286784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664855,0.00037751) , 
3, 35.3125, 1, 0, 0.679586,0.00112189) , 
4, 0.00573516, 1, 0, 0.633481,-0.00305745) , 
6, 0.0110169, 1, 0, 0.500076,-0.00012855)    );
  // itree = 325
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950176,-0.00114948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954821,-0.0456333) , 
5, 0.00228592, 1, 0, 0.951424,-0.00171717) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999698,0.0602634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699827,0.00995073) , 
2, 0.0235276, 1, 0, 0.970096,0.00123022) , 
5, 0.00266276, 1, 0, 0.966681,0.000691096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136114) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130945) , 
3, 75.0081, 1, 0, 0,-0.000160904) , 
2, 0.119065, 1, 0, 0,-0.000444526) , 
0, 0.00466574, 1, 0, 0.499591,0.000142376)    );
  // itree = 326
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.445063,-0.00200172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451182,-0.030165) , 
3, 24.0253, 1, 0, 0.447935,-0.000670695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96192,0.0178109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131223) , 
0, 0.00466015, 1, 0, 0.331017,0.00026884) , 
3, 50.469, 1, 0, 0.397542,-0.000265744) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644272,-0.0365048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892533,0.00200505) , 
4, 0.00483801, 1, 0, 0.854135,-0.000693584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854264,-0.0451263) , 
3, 88.1982, 1, 0, 0.854157,-0.00195724) , 
7, 2.18809e-05, 1, 0, 0.495206,-0.000627531)    );
  // itree = 327
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96751,0.0411557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00114421,-0.00673094) , 
2, 0.0237354, 1, 0, 0.579476,0.000372802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723484,-0.0183456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.237485,-0.00500712) , 
4, 0.0038937, 1, 0, 0.298872,-0.000284484) , 
4, 0.00347911, 1, 0, 0.405711,-3.4225e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910199,-0.0444837) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886282,0.0525572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810186,-0.00921648) , 
6, 0.0108496, 1, 0, 0.838903,-0.000139469) , 
6, 0.010033, 1, 0, 0.853495,-0.00149787) , 
7, 2.18809e-05, 1, 0, 0.502688,-0.000351209)    );
  // itree = 328
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.297144,-0.00525663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149202,-0.0135157) , 
3, 86.7292, 1, 0, 0.265727,-0.000431511) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.467895,-0.0373709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567796,0.0117838) , 
6, 0.00552588, 1, 0, 0.506535,-0.00341602) , 
6, 0.00497262, 1, 0, 0.312283,-0.00100852) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938221,0.00319508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940983,0.0771251) , 
3, 112.438, 1, 0, 0.938391,0.000525516) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130941) , 
2, 0.237962, 1, 0, 0,-0.000630333) , 
0, 0.00933147, 1, 0, 0.607499,0.000117945) , 
6, 0.00580099, 1, 0, 0.498729,-0.000297092)    );
  // itree = 329
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969939,0.0127221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926138,-0.00944563) , 
4, 0.00524978, 1, 0, 0.966699,0.00049628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.06996e-05,-0.00857768) , 
2, 0.119072, 1, 0, 3.8983e-05,-0.000356633) , 
0, 0.00467007, 1, 0, 0.482089,6.86947e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631238,0.0121465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632537,-0.0179144) , 
1, 1.08194, 1, 0, 0.631739,9.0959e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613319,-0.0473123) , 
1, 1.10993, 1, 0, 0.626511,-0.00409201) , 
6, 0.0110168, 1, 0, 0.499901,-0.000444454)    );
  // itree = 330
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.285196,-0.00381189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531283,-0.0353411) , 
6, 0.00546505, 1, 0, 0.33396,-0.000474029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836765,0.0237472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137576) , 
2, 0.09518, 1, 0, 0.483845,0.00032992) , 
6, 0.00637534, 1, 0, 0.403198,-0.000102655) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992293,0.0666911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992726,-0.107943) , 
5, 0.0051895, 1, 0, 0.992559,-0.00111498) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491836,-0.00841474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407256,-0.0238696) , 
1, 1.11218, 1, 0, 0.44544,-0.00823878) , 
2, 0.0237746, 1, 0, 0.832936,-0.00319336) , 
7, 2.18807e-05, 1, 0, 0.495849,-0.000769008)    );
  // itree = 331
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.395354,-0.00607998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876315,0.031637) , 
7, 1.57735e-05, 1, 0, 0.524628,0.000259673) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.496267,-0.0290859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408011,-0.008092) , 
3, 60.6074, 1, 0, 0.425462,-0.00126222) , 
3, 50.3938, 1, 0, 0.482595,-0.000385392) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.693872,-0.0104716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601607,0.0318216) , 
3, 48.7764, 1, 0, 0.648382,-0.000194112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556882,-0.0593839) , 
1, 1.11917, 1, 0, 0.627961,-0.00203637) , 
6, 0.0110169, 1, 0, 0.500261,-0.000586028)    );
  // itree = 332
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96487,0.000562675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588654,0.0274949) , 
2, 0.0181173, 1, 0, 0.911413,0.000667035) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000471171,-0.00553413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000895841,-0.00972381) , 
6, 0.00883601, 1, 0, 0.000567199,-0.000397146) , 
2, 0.0476074, 1, 0, 0.493206,0.000178426) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645019,-0.047143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691231,-0.014363) , 
3, 35.9893, 1, 0, 0.67238,-0.00409505) , 
6, 0.0115964, 1, 0, 0.504649,-9.45039e-05)    );
  // itree = 333
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.682155,-0.0196043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605909,0.00491516) , 
3, 37.4884, 1, 0, 0.642648,-0.000322441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730353,-0.030599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782706,0.0281163) , 
5, 0.00434158, 1, 0, 0.751546,-0.00221255) , 
5, 0.00407603, 1, 0, 0.660653,-0.000634948) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0901719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853985,0.0185639) , 
2, 0.02308, 1, 0, 0.974634,0.00214494) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130938) , 
2, 0.142718, 1, 0, 0,-0.000473059) , 
0, 0.00467007, 1, 0, 0.36461,0.000506335) , 
5, 0.00450547, 1, 0, 0.49696,-3.89299e-06)    );
  // itree = 334
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.29594,-0.015482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571593,0.0228717) , 
6, 0.00502564, 1, 0, 0.430056,0.000113702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.178281,-0.0133194) , 
3, 112.74, 1, 0, 0.405881,-7.45978e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679332,0.00808377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57093,-0.132986) , 
4, 0.00529984, 1, 0, 0.636539,-0.00423854) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628182,-0.0391465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620083,-0.0010996) , 
6, 0.00850645, 1, 0, 0.620803,-0.000654409) , 
3, 12.201, 1, 0, 0.623247,-0.00121101) , 
6, 0.00811799, 1, 0, 0.4966,-0.000548891)    );
  // itree = 335
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650198,-0.0343091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.354531,-0.000696551) , 
5, 0.0033803, 1, 0, 0.460502,-0.00069443) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817214,-0.00415738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89917,-0.0761318) , 
1, 1.20196, 1, 0, 0.846084,-0.0031359) , 
7, 2.21509e-05, 1, 0, 0.543509,-0.00122002) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810769,-0.00152825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321669,-0.0294972) , 
4, 0.00401833, 1, 0, 0.607546,-0.00108064) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499782,0.021247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171945,-0.015976) , 
4, 0.00579568, 1, 0, 0.353033,0.000387253) , 
5, 0.00448023, 1, 0, 0.460767,-0.000234095) , 
3, 37.798, 1, 0, 0.497685,-0.000673998)    );
  // itree = 336
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999434,0.0274611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670099,0.00646662) , 
2, 0.0229078, 1, 0, 0.974633,0.000672832) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130934) , 
2, 0.143032, 1, 0, 0,-0.000459306) , 
0, 0.00464946, 1, 0, 0.531359,0.000157922) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962685,0.0299929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781792,-0.0324753) , 
8, 0.010954, 1, 0, 0.896178,-0.00390407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00232163,0.00727779) , 
2, 0.0475144, 1, 0, 0.355487,-0.00132062) , 
3, 88.3229, 1, 0, 0.498542,-0.000117964)    );
  // itree = 337
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646852,-0.0190057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393336,0.00897391) , 
4, 0.00463913, 1, 0, 0.527244,-0.000189105) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523286,-0.0478301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513429,-0.00658376) , 
3, 50.9214, 1, 0, 0.515538,-0.00259899) , 
3, 48.0605, 1, 0, 0.525165,-0.000616966) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.321876,0.00118046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553936,-0.033359) , 
6, 0.00891793, 1, 0, 0.350462,-0.000222121) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969399,0.0518398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295753,0.0190796) , 
2, 0.0238095, 1, 0, 0.589855,0.00161469) , 
6, 0.00985716, 1, 0, 0.410451,0.000238163) , 
3, 63.0893, 1, 0, 0.486885,-0.000331608)    );
  // itree = 338
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972956,0.0308749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.805394,0.0225723) , 
2, 0.00905863, 1, 0, 0.921337,0.00091786) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000162648,-0.012618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130933) , 
0, 0.0512338, 1, 0, 7.24857e-05,-0.000641415) , 
2, 0.0475813, 1, 0, 0.535646,0.000265062) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.387784,-0.0085446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559564,-0.0240621) , 
6, 0.00944125, 1, 0, 0.410802,-0.00110529) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626583,0.000243207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590282,0.0803152) , 
3, 91.1945, 1, 0, 0.611956,0.00168163) , 
6, 0.0104369, 1, 0, 0.44839,-0.000584523) , 
3, 50.397, 1, 0, 0.497854,-0.000102906)    );
  // itree = 339
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.406009,-0.00658199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576665,-0.0225627) , 
6, 0.0080455, 1, 0, 0.418181,-0.000379298) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67925,-0.0003117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610842,0.0131609) , 
3, 23.8616, 1, 0, 0.631437,0.00054129) , 
6, 0.00844846, 1, 0, 0.458084,-0.000207044) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751873,-0.00890821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691407,-0.0621129) , 
3, 65.6455, 1, 0, 0.733929,-0.00350683) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664547,0.0237645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449549,-0.00637448) , 
1, 1.06565, 1, 0, 0.499034,0.000106711) , 
5, 0.0056257, 1, 0, 0.612303,-0.00163578) , 
6, 0.00985716, 1, 0, 0.495815,-0.0005566)    );
  // itree = 340
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.39883,-0.00481884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582838,-0.0376752) , 
6, 0.0080455, 1, 0, 0.411759,-0.000453053) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657086,0.00363556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613271,0.0328558) , 
3, 25.0186, 1, 0, 0.627174,0.000936843) , 
6, 0.00844867, 1, 0, 0.451894,-0.000194093) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649129,-0.0653994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640007,0.00106828) , 
3, 12.6163, 1, 0, 0.641464,-0.000640956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645472,-0.0302716) , 
1, 1.23376, 1, 0, 0.641907,-0.00133097) , 
6, 0.00985716, 1, 0, 0.496642,-0.000461825)    );
  // itree = 341
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.266739,-0.012488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954437,0.0145882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131063) , 
0, 0.00467008, 1, 0, 0.171733,-7.46611e-05) , 
4, 0.00116064, 1, 0, 0.180254,-0.000185408) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941453,-0.0130547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300413,-0.0401539) , 
6, 0.00622662, 1, 0, 0.662456,-0.00597473) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.860674,-0.000734327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821721,-0.0383576) , 
3, 60.558, 1, 0, 0.848005,-0.00125777) , 
5, 0.00323309, 1, 0, 0.817513,-0.00203294) , 
7, 6.85978e-06, 1, 0, 0.5036,-0.00112285)    );
  // itree = 342
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970276,0.0717075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761774,0.00251838) , 
5, 0.00187103, 1, 0, 0.839086,0.00036452) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.11505e-05,-0.00774394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137476) , 
3, 62.4848, 1, 0, 4.34718e-05,-0.000222947) , 
2, 0.0238052, 1, 0, 0.17415,-0.000101044) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852836,-0.000319369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81178,-0.0286027) , 
3, 25.1969, 1, 0, 0.825392,-0.00301028) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790492,-0.0542964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811315,0.0102749) , 
3, 12.4482, 1, 0, 0.808031,-0.000194278) , 
5, 0.00470936, 1, 0, 0.817846,-0.0017863) , 
7, 6.69818e-06, 1, 0, 0.49651,-0.000945013)    );
  // itree = 343
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9343,0.0337002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926758,-0.0155309) , 
3, 21.472, 1, 0, 0.933253,0.000582848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00014129,-0.0111178) , 
2, 0.0476074, 1, 0, 0.556314,0.000161984) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99865,0.0308063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929875,-0.0212424) , 
0, 0.000221544, 1, 0, 0.963917,-0.00249292) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130936) , 
2, 0.142814, 1, 0, 0,-0.00031204) , 
0, 0.00466298, 1, 0, 0.487425,-0.00141485) , 
3, 25.0565, 1, 0, 0.508669,-0.000928581)    );
  // itree = 344
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95531,0.0506955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0906859,-0.00584487) , 
2, 0.0181071, 1, 0, 0.781319,0.000409017) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130934) , 
0, 0.0421343, 1, 0, 0,-0.000326928) , 
2, 0.09518, 1, 0, 0.404513,5.40943e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934427,0.0259262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895151,-0.0295235) , 
3, 33.6063, 1, 0, 0.911397,-0.0060692) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769498,0.0258293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911569,-0.0186342) , 
7, 3.20336e-05, 1, 0, 0.832466,-0.000245756) , 
6, 0.010297, 1, 0, 0.856007,-0.00198259) , 
7, 2.18809e-05, 1, 0, 0.500455,-0.000378699)    );
  // itree = 345
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652679,-0.00561354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748374,-0.0602961) , 
4, 0.00441717, 1, 0, 0.660247,-0.00071745) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763243,0.0148088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0578261,-0.011977) , 
4, 0.00535616, 1, 0, 0.277071,1.67246e-05) , 
4, 0.00463836, 1, 0, 0.48263,-0.000377132) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976175,0.0265239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962999,0.0184057) , 
2, 0.010158, 1, 0, 0.970208,0.000530252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.318514,0.0113374) , 
2, 0.0237543, 1, 0, 0.66072,0.00139582) , 
6, 0.0110166, 1, 0, 0.503557,-0.000168801)    );
  // itree = 346
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598372,-0.0140372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.399912,-0.0312965) , 
7, 1.04393e-05, 1, 0, 0.575969,-0.00151761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973391,0.0280832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131754) , 
0, 0.00467007, 1, 0, 0.312792,0.000189043) , 
5, 0.00336032, 1, 0, 0.403375,-0.000398368) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596687,-0.0197875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948421,0.0435255) , 
5, 0.00483165, 1, 0, 0.776611,-0.000135318) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867162,-0.0408334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844514,-0.00143361) , 
3, 73.1578, 1, 0, 0.861441,-0.00465644) , 
5, 0.00508697, 1, 0, 0.836299,-0.00331642) , 
7, 2.1881e-05, 1, 0, 0.498883,-0.00104213)    );
  // itree = 347
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963936,-0.0115291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909968,-0.0337771) , 
3, 97.6181, 1, 0, 0.959451,-0.000605116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646052,-0.0250044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582761,-0.00131392) , 
5, 0.00555632, 1, 0, 0.613796,-0.00810871) , 
2, 0.0204032, 1, 0, 0.913229,-0.00160852) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00234969,0.0236761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137302) , 
7, -7.30928e-06, 1, 0, 0,-0.000592573) , 
2, 0.220101, 1, 0, 0.000884661,-4.35365e-05) , 
2, 0.0476103, 1, 0, 0.492858,-0.000887441)    );
  // itree = 348
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969149,0.0176928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533721,-0.0212792) , 
2, 0.00335285, 1, 0, 0.840568,-0.000975906) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997321,0.0762932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986287,0.0515784) , 
2, 0.0101493, 1, 0, 0.994039,0.000843716) , 
7, 8.0238e-06, 1, 0, 0.954559,0.00037562) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.477451,-0.0124189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621592,-0.0110498) , 
3, 56.9525, 1, 0, 0.547704,-0.00653305) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000933018,-0.00811852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000776206,0.0125012) , 
5, 0.00571638, 1, 0, 0.000840409,-0.000103323) , 
2, 0.0464652, 1, 0, 0.0574633,-0.000769064) , 
2, 0.023795, 1, 0, 0.500461,-0.000203803)    );
  // itree = 349
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981194,0.0150315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935589,-0.0553206) , 
4, 0.00450014, 1, 0, 0.9646,-0.000646748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833078,-0.0521183) , 
2, 0.0191709, 1, 0, 0.957675,-0.00113733) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822445,0.0669674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.175469,-0.000781718) , 
2, 0.0302473, 1, 0, 0.395271,0.00381132) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00100659,-0.0094915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130939) , 
0, 0.0327577, 1, 0, 0.000240192,-0.000404137) , 
2, 0.0691441, 1, 0, 0.0594239,0.000227425) , 
2, 0.0238037, 1, 0, 0.503297,-0.00044697)    );
  // itree = 350
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.398472,-0.0103576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641821,0.0290263) , 
6, 0.00806685, 1, 0, 0.45767,-3.32345e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595842,0.00930405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608551,-0.0296325) , 
1, 1.21591, 1, 0, 0.599947,-0.00144083) , 
6, 0.00996745, 1, 0, 0.47634,-0.000217941) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980152,0.0617699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969437,0.0374289) , 
2, 0.0101536, 1, 0, 0.975534,0.000750316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303532,0.0195306) , 
2, 0.0237819, 1, 0, 0.655244,0.00182447) , 
6, 0.0110169, 1, 0, 0.497144,1.95668e-05)    );
  // itree = 351
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979283,-0.0117977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.580191,0.00882261) , 
2, 0.00453259, 1, 0, 0.776975,0.000215149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130933) , 
0, 0.0420492, 1, 0, 0,-0.000374845) , 
2, 0.0952207, 1, 0, 0.399323,-7.16196e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863913,-0.0190389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806772,-0.0644233) , 
6, 0.0109802, 1, 0, 0.853175,-0.00441274) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857364,0.0314808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773158,-0.000943471) , 
3, 34.1209, 1, 0, 0.802748,0.000666599) , 
6, 0.011366, 1, 0, 0.836632,-0.00274641) , 
7, 2.18117e-05, 1, 0, 0.493628,-0.00064843)    );
  // itree = 352
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.449915,-7.43967e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815968,-0.0209669) , 
7, 8.27492e-06, 1, 0, 0.617961,-0.00071687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743337,-0.088451) , 
4, 0.0044179, 1, 0, 0.627364,-0.00122304) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92202,0.011021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.35556,0.044185) , 
2, 0.027181, 1, 0, 0.813036,0.0016251) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138493) , 
6, 0.00695518, 1, 0, 0,-0.000497798) , 
2, 0.0713719, 1, 0, 0.372728,0.000475419) , 
4, 0.00463895, 1, 0, 0.499033,-0.000367056)    );
  // itree = 353
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413685,-0.00306347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.175731,-0.013069) , 
3, 112.742, 1, 0, 0.390355,-0.000213487) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.221259,0.00495983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589255,-0.0288114) , 
1, 1.40655, 1, 0, 0.403965,-0.000976968) , 
6, 0.00753477, 1, 0, 0.394919,-0.000469524) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983831,0.0243927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992084,-0.0672651) , 
3, 44.7414, 1, 0, 0.987462,-0.00111148) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.409438,-0.0174396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465497,-0.0118926) , 
5, 0.00562941, 1, 0, 0.437966,-0.00791889) , 
2, 0.0236845, 1, 0, 0.834235,-0.00300973) , 
7, 2.13904e-05, 1, 0, 0.494249,-0.00104387)    );
  // itree = 354
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.268858,0.00047741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39226,-0.025326) , 
6, 0.00497022, 1, 0, 0.32955,-0.000482287) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873537,0.0293911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915582,0.0761461) , 
7, 2.45835e-05, 1, 0, 0.881251,0.00140074) , 
7, 1.33644e-05, 1, 0, 0.48245,3.9579e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629779,0.0514508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637544,0.00226973) , 
3, 11.4333, 1, 0, 0.635529,0.000837563) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625032,-0.0522886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577421,0.00533185) , 
3, 76.946, 1, 0, 0.600152,-0.00350609) , 
3, 47.8918, 1, 0, 0.618802,-0.00121619) , 
6, 0.0104373, 1, 0, 0.50809,-0.000196565)    );
  // itree = 355
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64201,0.0168323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.33185,-0.0111121) , 
4, 0.00347951, 1, 0, 0.450057,-1.50322e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626639,-0.0251827) , 
6, 0.00938726, 1, 0, 0.460679,-0.000199881) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988651,-0.167214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958328,0.0488192) , 
2, 0.0101493, 1, 0, 0.975016,-9.33847e-07) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.294721,0.0207932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187246,0.00802155) , 
1, 1.12859, 1, 0, 0.239257,0.00194505) , 
2, 0.023795, 1, 0, 0.633141,0.000903279) , 
6, 0.00985775, 1, 0, 0.502258,6.60809e-05)    );
  // itree = 356
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.252499,-0.0141346) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526031,-0.00595309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65495,-0.0120888) , 
6, 0.0110172, 1, 0, 0.541502,-0.000474269) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.288838,-0.00060121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840019,0.0296738) , 
7, 2.18116e-05, 1, 0, 0.407108,0.00051934) , 
3, 75.7058, 1, 0, 0.50884,-0.000232786) , 
4, 0.00116115, 1, 0, 0.497249,-0.000307017)    );
  // itree = 357
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969648,0.0119805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59768,0.020074) , 
2, 0.020122, 1, 0, 0.932551,0.000707727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013093) , 
0, 0.0512249, 1, 0, 0,-0.000734768) , 
2, 0.0476103, 1, 0, 0.538777,9.86262e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502061,-0.022096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50422,7.2115e-05) , 
3, 55.742, 1, 0, 0.503042,-0.00397275) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490343,0.0104085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335581,-0.0202602) , 
3, 99.451, 1, 0, 0.42978,-0.000363371) , 
3, 60.5985, 1, 0, 0.444127,-0.00107023) , 
3, 50.3964, 1, 0, 0.498293,-0.000401321)    );
  // itree = 358
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702519,0.00887111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.044524,-0.0148343) , 
5, 0.00540546, 1, 0, 0.483802,6.93691e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664244,-0.0305937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628087,-0.0032258) , 
1, 1.11452, 1, 0, 0.645442,-0.00178707) , 
6, 0.0110444, 1, 0, 0.493113,-3.75698e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981953,0.0599004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.312286,-0.0324145) , 
2, 0.023505, 1, 0, 0.633247,-0.00486074) , 
6, 0.0115964, 1, 0, 0.50247,-0.000359631)    );
  // itree = 359
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975501,0.0176218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674092,0.0308433) , 
2, 0.015831, 1, 0, 0.930027,0.000770891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000134599,-0.0118755) , 
2, 0.0476074, 1, 0, 0.545368,0.000177963) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576464,-0.0240151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.287304,0.00781819) , 
5, 0.00337831, 1, 0, 0.381581,-0.000411804) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865001,-0.0253771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777399,0.0271799) , 
5, 0.00575088, 1, 0, 0.839,-0.00206094) , 
7, 2.1881e-05, 1, 0, 0.48181,-0.000773161) , 
3, 25.2003, 1, 0, 0.501541,-0.000477889)    );
  // itree = 360
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98708,0.0681604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964681,-0.0363142) , 
4, 0.00349212, 1, 0, 0.975459,-0.000397608) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927331,-0.0737922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891606,-0.0339676) , 
2, 0.0111258, 1, 0, 0.899875,-0.00579374) , 
2, 0.00902158, 1, 0, 0.953537,-0.00196265) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790176,0.041513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188426,0.0164922) , 
2, 0.0302713, 1, 0, 0.403431,0.00504096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00145253,-0.00845141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130937) , 
0, 0.0326922, 1, 0, 0.000369473,-0.000422319) , 
2, 0.0691252, 1, 0, 0.0591848,0.000374891) , 
2, 0.0237943, 1, 0, 0.506791,-0.000795003)    );
  // itree = 361
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96826,0.00152152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744363,0.039016) , 
2, 0.011277, 1, 0, 0.938179,0.000349233) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00759544,-0.00907492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130978) , 
0, 0.0373609, 1, 0, 0.00164563,-0.000329185) , 
2, 0.0238037, 1, 0, 0.394605,-4.45281e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.521524,-0.0263271) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882985,-0.0445155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898906,0.00497616) , 
3, 11.7721, 1, 0, 0.896311,-0.000383422) , 
5, 0.00473444, 1, 0, 0.846525,-0.00165109) , 
7, 2.13905e-05, 1, 0, 0.493151,-0.000394857)    );
  // itree = 362
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633112,-0.0136542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.323113,0.00582881) , 
4, 0.00347911, 1, 0, 0.439781,-0.000205641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622407,-0.0153985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594232,0.0167927) , 
6, 0.0111752, 1, 0, 0.617132,-0.000997237) , 
6, 0.00938748, 1, 0, 0.482838,-0.000397824) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.682902,0.00565141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670838,0.0303975) , 
6, 0.0119, 1, 0, 0.677188,0.00132205) , 
6, 0.0115963, 1, 0, 0.494973,-0.000290441)    );
  // itree = 363
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718521,0.00358939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684802,-0.0139129) , 
3, 24.9991, 1, 0, 0.697648,-0.000578051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560679,-0.004087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712827,-0.0305133) , 
6, 0.00920018, 1, 0, 0.607838,-0.00282312) , 
3, 87.5021, 1, 0, 0.684823,-0.000898635) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926068,-0.00697844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947397,0.0464137) , 
3, 48.7984, 1, 0, 0.93596,0.00145545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130931) , 
2, 0.166626, 1, 0, 0,-0.000240997) , 
0, 0.00933147, 1, 0, 0.191536,0.000106166) , 
5, 0.00557097, 1, 0, 0.501711,-0.000525645)    );
  // itree = 364
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949223,0.0369102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596834,-0.0091241) , 
5, 0.00567054, 1, 0, 0.892951,0.00080441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130927) , 
0, 0.04192, 1, 0, 0,-0.000462964) , 
2, 0.0713719, 1, 0, 0.541805,0.000306025) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85041,-0.0212065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946186,0.0311755) , 
6, 0.0098617, 1, 0, 0.883226,-0.00196061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00174997,0.0028942) , 
2, 0.0475144, 1, 0, 0.396246,-0.000790835) , 
3, 75.1589, 1, 0, 0.505347,3.12982e-05)    );
  // itree = 365
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.463026,-0.0100402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641093,-0.0236055) , 
6, 0.00999287, 1, 0, 0.475261,-0.000658782) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607692,0.0468711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589907,0.00491333) , 
1, 1.15532, 1, 0, 0.601015,0.00172744) , 
6, 0.0104923, 1, 0, 0.489653,-0.00038569) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697863,0.00887198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65103,-0.0545857) , 
3, 58.8271, 1, 0, 0.678871,-0.0027296) , 
6, 0.0115966, 1, 0, 0.501765,-0.000535731)    );
  // itree = 366
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603539,0.0149219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388398,-0.00919604) , 
4, 0.0028995, 1, 0, 0.44388,-0.000160468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.612527,0.00177993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636435,-0.0354449) , 
1, 1.19166, 1, 0, 0.625191,-0.0017476) , 
6, 0.00938198, 1, 0, 0.486535,-0.000533848) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710972,0.0169863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613168,0.0375855) , 
6, 0.0119553, 1, 0, 0.67146,0.00162176) , 
6, 0.0115963, 1, 0, 0.498403,-0.000395506)    );
  // itree = 367
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959982,-0.0091225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802547,-0.0560484) , 
2, 0.0169155, 1, 0, 0.948176,-0.000905763) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.397279,0.0145364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000337258,-0.00718255) , 
2, 0.0464652, 1, 0, 0.0298523,0.000100379) , 
2, 0.023795, 1, 0, 0.484316,-0.000397545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657426,-0.0453403) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616591,-0.00737442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599711,0.0189952) , 
3, 35.3272, 1, 0, 0.606539,0.000716202) , 
5, 0.0057528, 1, 0, 0.62385,-0.00194702) , 
6, 0.0110166, 1, 0, 0.501248,-0.000585567)    );
  // itree = 368
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554231,-0.00204307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518126,-0.0261476) , 
3, 31.0192, 1, 0, 0.541847,-0.000568589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.30828,-0.0048074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861608,0.0255259) , 
7, 1.8791e-05, 1, 0, 0.426213,0.000295904) , 
3, 50.1085, 1, 0, 0.490893,-0.000187654) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608055,-0.0502986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653341,-0.0246782) , 
1, 1.06022, 1, 0, 0.636584,-0.00361306) , 
6, 0.0115963, 1, 0, 0.500875,-0.000422342)    );
  // itree = 369
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.604082,-0.000330566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679129,-0.0165571) , 
4, 0.00357618, 1, 0, 0.62852,-0.000415567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.755037,-0.0268893) , 
4, 0.00441785, 1, 0, 0.637889,-0.000651584) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928728,0.0491614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566054,0.0187893) , 
2, 0.0203683, 1, 0, 0.813975,0.00146603) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139292) , 
6, 0.00695748, 1, 0, 0,-0.000401375) , 
2, 0.0714111, 1, 0, 0.375651,0.000460437) , 
4, 0.00463913, 1, 0, 0.505215,-8.89801e-05)    );
  // itree = 370
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.461865,0.0133184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.319715,-0.00893277) , 
3, 50.2819, 1, 0, 0.400477,-7.56433e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616393,-0.0135711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618123,-0.041566) , 
1, 1.47075, 1, 0, 0.616676,-0.00168736) , 
6, 0.00773259, 1, 0, 0.492241,-0.000759727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617486,-0.010599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696305,-0.0806321) , 
1, 1.0735, 1, 0, 0.64822,-0.00657445) , 
6, 0.0115965, 1, 0, 0.502522,-0.00114299)    );
  // itree = 371
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.374597,-0.00543843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577375,-0.0204491) , 
6, 0.00695685, 1, 0, 0.412866,-0.000414005) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77737,0.0249092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136809) , 
2, 0.09518, 1, 0, 0.387466,0.000332115) , 
6, 0.00811658, 1, 0, 0.4062,-0.000218193) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805914,-0.0256061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941615,0.0341525) , 
5, 0.00521557, 1, 0, 0.876296,-0.000750193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647579,-0.0278923) , 
5, 0.00590361, 1, 0, 0.834866,-0.00232545) , 
7, 2.18809e-05, 1, 0, 0.49892,-0.000673989)    );
  // itree = 372
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789511,-0.011289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298103,0.00448658) , 
5, 0.0031739, 1, 0, 0.550802,-0.000420939) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829127,-0.0499198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774595,0.0164375) , 
3, 47.7038, 1, 0, 0.806553,-0.00304693) , 
7, 1.32163e-05, 1, 0, 0.62967,-0.00123074) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969557,0.0213572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131421) , 
0, 0.00466573, 1, 0, 0.315491,0.000431218) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.740518,-0.0190249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717076,-0.0182553) , 
6, 0.0119277, 1, 0, 0.730161,-0.00215095) , 
6, 0.0115965, 1, 0, 0.361506,0.000144683) , 
4, 0.00463836, 1, 0, 0.491522,-0.000522173)    );
  // itree = 373
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513869,-0.0168479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458253,0.0309003) , 
3, 46.8629, 1, 0, 0.4975,-0.000281758) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67114,-0.0274043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63927,-0.00616306) , 
6, 0.0101921, 1, 0, 0.643794,-0.001498) , 
6, 0.00985868, 1, 0, 0.532064,-0.000569114) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929356,0.0418721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97354,-0.00518812) , 
4, 0.00500556, 1, 0, 0.944251,0.0016926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132188) , 
0, 0.00934014, 1, 0, 0.39264,0.000507199) , 
3, 75.7058, 1, 0, 0.497795,-0.000304567)    );
  // itree = 374
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695436,-0.00915126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.569101,-0.0225553) , 
6, 0.00826447, 1, 0, 0.672532,-0.000729305) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976309,0.00982846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.33197e-05,-0.0110573) , 
0, 0.00467007, 1, 0, 0.335269,0.00012912) , 
5, 0.00448023, 1, 0, 0.493485,-0.000273581) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618352,-0.0542253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712362,-0.0093914) , 
1, 1.06243, 1, 0, 0.673751,-0.00457022) , 
6, 0.0115964, 1, 0, 0.504915,-0.000546017)    );
  // itree = 375
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999732,0.0452974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992062,-0.0285539) , 
0, 0.00202007, 1, 0, 0.999027,0.000230191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679754,0.00807236) , 
2, 0.0231309, 1, 0, 0.969937,0.000616649) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136873) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130932) , 
3, 62.8746, 1, 0, 0,-7.35344e-05) , 
2, 0.118975, 1, 0, 0,-0.000304168) , 
0, 0.00466573, 1, 0, 0.503031,0.000173389)    );
  // itree = 376
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726084,-0.0093788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.36407,0.000611758) , 
5, 0.00149485, 1, 0, 0.427875,-0.000182572) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.487904,0.000918637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94006,0.0899591) , 
1, 1.86612, 1, 0, 0.765221,0.000946544) , 
7, 5.36417e-06, 1, 0, 0.584087,0.00034028) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737394,-0.0249535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673213,0.00925534) , 
3, 61.859, 1, 0, 0.717615,-0.00136617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.316977,0.00442723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177807,-0.0340164) , 
3, 112.745, 1, 0, 0.298306,-0.00012311) , 
4, 0.00513585, 1, 0, 0.467696,-0.000625275) , 
4, 0.00347911, 1, 0, 0.502157,-0.000339393)    );
  // itree = 377
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.469299,-0.00557805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46727,-0.0362712) , 
3, 24.9877, 1, 0, 0.468688,-0.000758343) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966646,0.0161085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131288) , 
0, 0.00466298, 1, 0, 0.352202,0.000204605) , 
3, 37.4813, 1, 0, 0.403271,-0.000217565) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993394,-0.0434964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972864,0.00430529) , 
4, 0.00553226, 1, 0, 0.985957,-0.00156589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.38843,-0.0191388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521056,-0.00486113) , 
3, 70.725, 1, 0, 0.441306,-0.00806343) , 
2, 0.0236511, 1, 0, 0.831142,-0.0034128) , 
7, 2.13904e-05, 1, 0, 0.500797,-0.000945864)    );
  // itree = 378
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921533,0.017517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836884,-0.0146472) , 
3, 99.4261, 1, 0, 0.913561,0.000365818) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000889961,-0.00903662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000403507,0.00448814) , 
5, 0.00560132, 1, 0, 0.000600422,-0.000273787) , 
2, 0.0476103, 1, 0, 0.490691,6.95625e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611712,0.0139404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665285,-0.0440699) , 
1, 1.0735, 1, 0, 0.632221,-0.00133412) , 
6, 0.0115963, 1, 0, 0.500438,-2.71039e-05)    );
  // itree = 379
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873389,-0.0090399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000337163,-0.00239752) , 
2, 0.04759, 1, 0, 0.377382,-0.000263496) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870094,-0.0323737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.820112,0.02705) , 
5, 0.00521592, 1, 0, 0.850908,-0.00208308) , 
7, 1.87642e-05, 1, 0, 0.487733,-0.000687532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650086,-0.0544039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639425,-0.0113395) , 
3, 35.3125, 1, 0, 0.643828,-0.00585859) , 
6, 0.0115965, 1, 0, 0.498061,-0.00102967)    );
  // itree = 380
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.494902,0.00115581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724738,-0.0407422) , 
5, 0.00241675, 1, 0, 0.594994,-0.00161128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.223186,-0.0106297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450243,0.0118111) , 
6, 0.00810091, 1, 0, 0.299998,-9.04676e-07) , 
5, 0.00338301, 1, 0, 0.400004,-0.000546832) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989048,0.0805262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976237,0.0180166) , 
5, 0.00528639, 1, 0, 0.981887,0.00130076) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807903,0.000114568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739697,-0.0268023) , 
3, 37.8235, 1, 0, 0.769162,-0.00541682) , 
0, 0.00169345, 1, 0, 0.863042,-0.00245221) , 
7, 2.18117e-05, 1, 0, 0.499118,-0.000954681)    );
  // itree = 381
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965632,0.0180998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957787,-0.0166895) , 
5, 0.00522797, 1, 0, 0.96401,-0.000154618) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963515,0.0112167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977861,0.0385071) , 
5, 0.00441739, 1, 0, 0.970096,0.00150427) , 
3, 49.5842, 1, 0, 0.966395,0.000495403) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136706) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130925) , 
4, 0.00521706, 1, 0, 0,-7.03484e-05) , 
2, 0.119072, 1, 0, 0,-0.000378268) , 
0, 0.00466298, 1, 0, 0.501328,7.49585e-05)    );
  // itree = 382
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867908,0.00373228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414215,-0.00711563) , 
4, 0.00401437, 1, 0, 0.698388,-4.87332e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678786,-0.0684402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627866,-0.0121345) , 
3, 36.6545, 1, 0, 0.638333,-0.00309229) , 
3, 25.2345, 1, 0, 0.658319,-0.00207939) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970351,0.00850454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972732,0.0405072) , 
5, 0.00576513, 1, 0, 0.970889,0.00140636) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130928) , 
2, 0.142822, 1, 0, 0,-0.000237475) , 
0, 0.00466298, 1, 0, 0.370708,0.000390181) , 
5, 0.00457149, 1, 0, 0.503184,-0.000747325)    );
  // itree = 383
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611979,-0.0040618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583771,-0.0225008) , 
7, 1.03851e-05, 1, 0, 0.608912,-0.00052484) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287367,0.0121888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.365585,-0.0297613) , 
6, 0.00869722, 1, 0, 0.304778,4.33145e-05) , 
5, 0.0033825, 1, 0, 0.406871,-0.000147406) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954806,-0.0419276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752556,-0.00681681) , 
0, 0.001541, 1, 0, 0.8424,-0.00558546) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454486,-0.00774956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984907,0.0455656) , 
4, 0.00553366, 1, 0, 0.844594,0.0014481) , 
5, 0.00542436, 1, 0, 0.843442,-0.00224541) , 
7, 2.18117e-05, 1, 0, 0.502326,-0.000606127)    );
  // itree = 384
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558713,-0.120399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514246,0.00912452) , 
3, 4.79122, 1, 0, 0.517276,0.000124896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227692,-0.0105542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432176,-0.0256452) , 
6, 0.00892023, 1, 0, 0.279643,-0.00168066) , 
3, 100.556, 1, 0, 0.484782,-0.000121996) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646801,-0.0306282) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975926,-0.0747573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300741,0.00891006) , 
2, 0.0237819, 1, 0, 0.624946,-0.000227141) , 
3, 23.9966, 1, 0, 0.630859,-0.00278304) , 
6, 0.0110168, 1, 0, 0.502555,-0.000445752)    );
  // itree = 385
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.563637,0.00709909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679289,-0.0155465) , 
5, 0.00244423, 1, 0, 0.607351,-0.000366256) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620506,-0.0443405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507656,-0.0275544) , 
3, 41.0493, 1, 0, 0.566928,-0.00512194) , 
7, 9.52372e-06, 1, 0, 0.598243,-0.00143782) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974857,0.0118191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915276,0.0614357) , 
2, 0.011277, 1, 0, 0.956155,0.000763521) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00207684,0.00881481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486563,-0.0114128) , 
7, 2.13867e-05, 1, 0, 0.0729478,-0.000759043) , 
2, 0.0237863, 1, 0, 0.459914,-9.19511e-05) , 
5, 0.00342783, 1, 0, 0.498413,-0.000466534)    );
  // itree = 386
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606533,0.000423041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588306,-0.0280806) , 
7, 9.82696e-06, 1, 0, 0.603086,-0.000571068) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972464,0.0330641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131943) , 
0, 0.00466298, 1, 0, 0.290243,0.000241472) , 
5, 0.00342916, 1, 0, 0.399496,-4.22874e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946804,-0.0287179) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865993,0.0141244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798977,-0.0158695) , 
5, 0.00565172, 1, 0, 0.83977,-0.000328182) , 
6, 0.00966814, 1, 0, 0.853111,-0.00109414) , 
7, 2.13905e-05, 1, 0, 0.501822,-0.000279563)    );
  // itree = 387
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527269,-0.00683923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466335,-0.169872) , 
3, 68.4848, 1, 0, 0.523384,-0.000577546) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967566,0.0326029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131832) , 
0, 0.00466029, 1, 0, 0.395198,0.000704104) , 
3, 75.7036, 1, 0, 0.492571,-0.000269463) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632563,0.00387131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678557,-0.0640755) , 
1, 1.0735, 1, 0, 0.651521,-0.00353277) , 
6, 0.0115965, 1, 0, 0.502619,-0.000475755)    );
  // itree = 388
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.525796,0.0569289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597152,-0.12315) , 
3, 3.07882, 1, 0, 0.555186,-0.00262768) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922221,0.0190392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000235682,-0.0115075) , 
2, 0.0476103, 1, 0, 0.51915,0.000142253) , 
3, 5.39029, 1, 0, 0.521742,-5.69778e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.209661,-0.00191964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504534,-0.135144) , 
6, 0.00928169, 1, 0, 0.299922,-0.00349118) , 
3, 113.125, 1, 0, 0.50073,-0.00038229)    );
  // itree = 389
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941257,0.026249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00854655,-0.00605107) , 
2, 0.023795, 1, 0, 0.458413,0.000158388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634187,0.00427749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615692,-0.112697) , 
4, 0.00521564, 1, 0, 0.624632,-0.00244751) , 
6, 0.00996735, 1, 0, 0.479266,-0.000168535) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63401,-0.0124747) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982388,0.0816836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308223,0.0558815) , 
2, 0.0237892, 1, 0, 0.67029,0.00240413) , 
1, 1.06793, 1, 0, 0.659948,0.00121601) , 
6, 0.0110168, 1, 0, 0.500657,-4.61966e-06)    );
  // itree = 390
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93175,0.0231239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135054) , 
2, 0.0476074, 1, 0, 0.546045,0.00025973) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938174,-0.028236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0496695,0.00468492) , 
2, 0.023795, 1, 0, 0.447296,-0.00077322) , 
3, 37.7076, 1, 0, 0.49092,-0.000316895) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626343,-0.019633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699631,-0.059892) , 
1, 1.07351, 1, 0, 0.654577,-0.00595088) , 
6, 0.0115963, 1, 0, 0.501847,-0.000693057)    );
  // itree = 391
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841924,0.0406898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781435,-0.0124576) , 
3, 86.6125, 1, 0, 0.834466,0.000120244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965841,-0.0261105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132971) , 
0, 0.00701949, 1, 0, 0.506088,-0.00169532) , 
4, 0.00349273, 1, 0, 0.659763,-0.00084567) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.264631,0.017841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700849,-0.0132119) , 
6, 0.0104386, 1, 0, 0.398225,-0.000226559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221924,0.0623789) , 
3, 113.13, 1, 0, 0.375067,2.16287e-05) , 
5, 0.00450123, 1, 0, 0.502797,-0.000367487)    );
  // itree = 392
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643094,-0.00107396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84345,0.0281425) , 
6, 0.00844982, 1, 0, 0.698517,0.000372873) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0265399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013093) , 
2, 0.190354, 1, 0, 0,-0.000456238) , 
5, 0.0053407, 1, 0, 0.469595,0.000101152) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700339,-0.00344214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688655,-0.109718) , 
3, 50.409, 1, 0, 0.695321,-0.00810145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.36219,-0.0316694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747565,0.0822203) , 
4, 0.00575338, 1, 0, 0.576609,8.06802e-05) , 
5, 0.0056277, 1, 0, 0.621185,-0.00299171) , 
6, 0.0104375, 1, 0, 0.496739,-0.000452651)    );
  // itree = 393
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495799,0.00455816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260224,-0.0180887) , 
3, 100.942, 1, 0, 0.464107,-7.9373e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636607,0.080607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562072,0.0468333) , 
6, 0.0107422, 1, 0, 0.599266,0.00195176) , 
6, 0.0104917, 1, 0, 0.471885,3.75191e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989713,0.0685765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991463,0.0827095) , 
2, 0.0101536, 1, 0, 0.990492,0.000673089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.281231,-0.0216083) , 
2, 0.0237819, 1, 0, 0.630321,-0.00232004) , 
6, 0.0110169, 1, 0, 0.491057,-0.00024776)    );
  // itree = 394
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634372,-0.0156328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410977,0.00269513) , 
5, 0.00311373, 1, 0, 0.473515,-0.000190374) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605861,-0.0882223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629301,-0.00856386) , 
3, 12.6113, 1, 0, 0.625726,-0.00198582) , 
6, 0.00994054, 1, 0, 0.501406,-0.00051937) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652789,-0.0448086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66519,-0.0120757) , 
3, 35.3125, 1, 0, 0.660143,-0.0059825) , 
6, 0.0115965, 1, 0, 0.511786,-0.000876607)    );
  // itree = 395
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696523,-0.00248832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641616,-0.0260813) , 
3, 23.6118, 1, 0, 0.665492,-0.00114878) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608824,-0.00651199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.469221,0.0101111) , 
3, 90.3085, 1, 0, 0.545875,6.10832e-05) , 
3, 61.9763, 1, 0, 0.629644,-0.000786196) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981799,0.064254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.25057,0.0353331) , 
2, 0.0237281, 1, 0, 0.735215,0.00158173) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753922,-0.0174131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0297065,0.00359352) , 
4, 0.00602481, 1, 0, 0.160468,-0.000380836) , 
4, 0.00571699, 1, 0, 0.374661,0.000350563) , 
4, 0.00463913, 1, 0, 0.500719,-0.000211426)    );
  // itree = 396
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92339,0.0157373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000444157,-0.0120174) , 
2, 0.023795, 1, 0, 0.386879,-1.3778e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.599295,-0.0248502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641958,0.0190217) , 
6, 0.00878566, 1, 0, 0.615788,-0.000901332) , 
6, 0.00704145, 1, 0, 0.472693,-0.000346505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650571,-0.078728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812973,-0.0330167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443435,0.0161531) , 
5, 0.00574299, 1, 0, 0.642752,-0.00143622) , 
3, 12.6301, 1, 0, 0.643955,-0.00294603) , 
6, 0.00985765, 1, 0, 0.514659,-0.000983497)    );
  // itree = 397
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.529035,0.00110912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455449,-0.0214306) , 
3, 69.2359, 1, 0, 0.514034,-0.000140481) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.332601,-0.025736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198831,0.0174101) , 
3, 133.179, 1, 0, 0.256259,-0.00148025) , 
3, 111.854, 1, 0, 0.487576,-0.000277993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651359,0.0382167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651312,0.0202128) , 
3, 33.3157, 1, 0, 0.65133,0.00177057) , 
6, 0.0115965, 1, 0, 0.498179,-0.000145353)    );
  // itree = 398
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987893,0.0534405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880478,-0.0338656) , 
5, 0.00525882, 1, 0, 0.972711,-0.000413265) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940577,-0.0325595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877087,-0.0109001) , 
2, 0.0125209, 1, 0, 0.899732,-0.00279427) , 
2, 0.00902158, 1, 0, 0.951915,-0.00109175) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.312815,0.0157764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301913,0.00477572) , 
5, 0.00549388, 1, 0, 0.306262,0.00189106) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000170182,-0.0121289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130926) , 
0, 0.0326922, 1, 0, 4.2005e-05,-0.000385356) , 
2, 0.0918143, 1, 0, 0.0576921,4.32098e-05) , 
2, 0.0238037, 1, 0, 0.499013,-0.00051692)    );
  // itree = 399
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65219,0.000995145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730564,-0.058638) , 
5, 0.00413882, 1, 0, 0.658769,-0.000392459) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970586,0.0193976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131493) , 
0, 0.00467007, 1, 0, 0.325664,0.000338718) , 
5, 0.00434818, 1, 0, 0.480901,-2.03135e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64947,-0.0295477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607853,-0.0101384) , 
1, 1.1006, 1, 0, 0.622663,-0.00341094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637592,0.0231857) , 
6, 0.0117359, 1, 0, 0.628727,-0.00150365) , 
6, 0.0110169, 1, 0, 0.499316,-0.000189093)    );
  // itree = 400
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997609,0.0272071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950138,0.0353562) , 
0, 0.00043508, 1, 0, 0.974771,0.000854542) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130924) , 
2, 0.143093, 1, 0, 0,-0.000147349) , 
0, 0.00466029, 1, 0, 0.42853,0.000293104) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605398,-0.0399242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617861,-0.00196461) , 
3, 12.2344, 1, 0, 0.615872,-0.000711996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629795,-0.135197) , 
1, 1.38591, 1, 0, 0.616963,-0.0011881) , 
6, 0.0086986, 1, 0, 0.49742,-0.000248413)    );
  // itree = 401
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519864,-0.00187476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719922,-0.018918) , 
5, 0.00239951, 1, 0, 0.608558,-0.000782499) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.469814,0.00104668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.294075,-0.013963) , 
3, 100.554, 1, 0, 0.443964,-0.000117755) , 
5, 0.00336032, 1, 0, 0.489637,-0.000302215) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665646,0.0447109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647955,0.0196742) , 
3, 34.0978, 1, 0, 0.654955,0.00162713) , 
6, 0.0115965, 1, 0, 0.500213,-0.000178792)    );
  // itree = 402
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0871794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946471,-0.0210816) , 
0, 0.000305787, 1, 0, 0.973556,-0.00208252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000161601,-0.00120794) , 
0, 0.00321793, 1, 0, 0.584362,-0.00125638) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900188,0.0130609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000719246,-0.00884331) , 
2, 0.0475609, 1, 0, 0.446844,9.11255e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67376,0.00506092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708841,-0.034133) , 
1, 1.07128, 1, 0, 0.68893,-0.00152379) , 
6, 0.0115964, 1, 0, 0.467409,-4.60599e-05) , 
5, 0.0033803, 1, 0, 0.498789,-0.000370803)    );
  // itree = 403
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466308,-0.00245844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659995,-0.04366) , 
6, 0.00999136, 1, 0, 0.479641,-0.000219276) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628895,0.0341042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648911,0.0036531) , 
1, 1.15042, 1, 0, 0.636801,0.00110166) , 
6, 0.0104909, 1, 0, 0.497393,-7.00724e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975638,0.0484579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316731,-0.0224846) , 
2, 0.0234564, 1, 0, 0.637466,-0.00234712) , 
6, 0.0115963, 1, 0, 0.506969,-0.000225743)    );
  // itree = 404
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580286,-0.0166422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763847,0.0407636) , 
5, 0.00305953, 1, 0, 0.6109,-0.000588497) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9709,0.0241366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131719) , 
0, 0.00466298, 1, 0, 0.304192,0.000177731) , 
5, 0.0033825, 1, 0, 0.40829,-8.23309e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852738,0.0551345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845198,-0.0123875) , 
3, 9.30941, 1, 0, 0.846252,-0.000782254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8418,-0.0406065) , 
3, 97.5459, 1, 0, 0.8457,-0.00229712) , 
7, 2.18118e-05, 1, 0, 0.503182,-0.000562809)    );
  // itree = 405
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.551558,-0.0189316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680614,0.0455355) , 
5, 0.00256716, 1, 0, 0.590402,-0.00057157) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603957,-0.070415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552672,-0.0228879) , 
3, 37.2643, 1, 0, 0.577277,-0.00715086) , 
7, 9.44096e-06, 1, 0, 0.587822,-0.00186506) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984096,0.0362158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000105329,-0.0176161) , 
0, 0.00401695, 1, 0, 0.57528,0.000363022) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.239962,-0.0253953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352431,-0.00717221) , 
5, 0.00531023, 1, 0, 0.335245,-0.00097516) , 
4, 0.00521796, 1, 0, 0.464263,-0.000255892) , 
5, 0.00337831, 1, 0, 0.497765,-0.000692207)    );
  // itree = 406
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.451459,0.0217678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387835,-0.0132084) , 
3, 43.0786, 1, 0, 0.423221,-0.000113836) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989603,0.00926903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461259,0.0226873) , 
2, 0.0237819, 1, 0, 0.860743,0.00125504) , 
7, 2.13905e-05, 1, 0, 0.522337,0.000196269) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.210445,-0.00696412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489457,-0.0309615) , 
6, 0.00928464, 1, 0, 0.296014,-0.00137566) , 
3, 113.123, 1, 0, 0.500868,4.71539e-05)    );
  // itree = 407
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98454,-0.00958452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771288,-0.0231523) , 
0, 0.00132839, 1, 0, 0.902683,-0.00121482) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130923) , 
2, 0.16688, 1, 0, 0,-0.000135443) , 
0, 0.0139775, 1, 0, 0.530263,-0.000769501) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.354765,-0.0117647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.263464,0.0151473) , 
4, 0.00233821, 1, 0, 0.27871,-8.32931e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855137,0.0590493) , 
7, 2.18116e-05, 1, 0, 0.399265,0.000479039) , 
3, 75.708, 1, 0, 0.498546,-0.000467203)    );
  // itree = 408
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.256995,-0.0142789) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566873,0.0114936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558768,-0.0271375) , 
3, 21.5527, 1, 0, 0.563682,-0.000671062) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702957,0.0194843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141845) , 
2, 0.19036, 1, 0, 0.47421,0.000262637) , 
3, 37.713, 1, 0, 0.513817,-0.000150693) , 
5, 0.00112798, 1, 0, 0.502409,-0.000254588)    );
  // itree = 409
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.728485,0.00622523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152767,-0.00618559) , 
5, 0.00438247, 1, 0, 0.471153,-2.04133e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879398,-0.069391) , 
7, 2.2721e-05, 1, 0, 0.552952,-0.00152363) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958836,-0.00513907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822998,-0.0366019) , 
2, 0.0170027, 1, 0, 0.945938,-0.000574708) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683687,0.00947001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131494) , 
0, 0.00467007, 1, 0, 0.061713,0.000242706) , 
2, 0.0238052, 1, 0, 0.489006,-0.000152301) , 
3, 12.5, 1, 0, 0.498726,-0.000360751)    );
  // itree = 410
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.375248,0.00313592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613389,-0.0165188) , 
6, 0.00757289, 1, 0, 0.448361,-0.000258765) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652403,0.0417143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665148,0.0862682) , 
1, 1.22705, 1, 0, 0.658422,0.00194199) , 
6, 0.0099383, 1, 0, 0.462171,-0.000114084) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694295,0.0337388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636982,0.00262064) , 
3, 35.9799, 1, 0, 0.659663,0.000985648) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617793,-0.0158527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544394,-0.0919472) , 
3, 63.034, 1, 0, 0.593813,-0.00564908) , 
1, 1.11142, 1, 0, 0.625874,-0.00241877) , 
6, 0.0104373, 1, 0, 0.491045,-0.000520586)    );
  // itree = 411
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.256492,-0.0047744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460135,-0.0315232) , 
6, 0.00473423, 1, 0, 0.291364,-0.00078689) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779107,0.0201048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136254,-0.0163685) , 
5, 0.0056184, 1, 0, 0.61035,0.000438632) , 
6, 0.00552229, 1, 0, 0.494197,-7.62021e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685214,0.034705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633271,-0.0798012) , 
3, 58.8402, 1, 0, 0.665058,-0.00293056) , 
6, 0.0115965, 1, 0, 0.50557,-0.000202187)    );
  // itree = 412
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630595,-0.00346315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728453,-0.0322501) , 
4, 0.00419638, 1, 0, 0.646559,-0.000596187) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778386,0.0345571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137503) , 
2, 0.0714111, 1, 0, 0.327424,0.000396415) , 
4, 0.00463838, 1, 0, 0.493854,-0.000121231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978629,0.058002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314344,-0.0276325) , 
2, 0.0233834, 1, 0, 0.634436,-0.00420632) , 
6, 0.0115963, 1, 0, 0.503247,-0.000394173)    );
  // itree = 413
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.452434,-0.00948215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481947,0.00381096) , 
6, 0.00288433, 1, 0, 0.473217,-0.000117816) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757314,-0.00101501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7124,-0.0195653) , 
3, 25.1997, 1, 0, 0.728322,-0.00140031) , 
7, 5.33165e-06, 1, 0, 0.593015,-0.000720083) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598673,0.0195659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144489) , 
2, 0.19036, 1, 0, 0.377533,0.000155009) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675786,-0.0226168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660088,0.00200796) , 
6, 0.0103003, 1, 0, 0.663213,-0.000786609) , 
6, 0.00985765, 1, 0, 0.466842,-0.000139359) , 
5, 0.00336032, 1, 0, 0.500775,-0.000295536)    );
  // itree = 414
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.471143,-0.00511702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445282,-0.0442871) , 
3, 25.0559, 1, 0, 0.463017,-0.000948651) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.590319,0.0101988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142567) , 
2, 0.19036, 1, 0, 0.355641,-6.62159e-06) , 
3, 37.5826, 1, 0, 0.402443,-0.000417225) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995873,0.0866132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562762,0.0318137) , 
2, 0.0234491, 1, 0, 0.896373,0.00195651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659233,-0.0147385) , 
4, 0.00591589, 1, 0, 0.856605,0.00123412) , 
7, 2.18118e-05, 1, 0, 0.500711,-5.99197e-05)    );
  // itree = 415
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552857,-0.00749609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905855,0.0313478) , 
7, 8.59496e-06, 1, 0, 0.691034,0.000112222) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943895,-0.0104846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130989) , 
0, 0.00466575, 1, 0, 0.122535,-0.000363934) , 
4, 0.00405689, 1, 0, 0.428452,-0.000107708) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.384233,-0.0750146) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685646,-0.0121059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667302,0.0170617) , 
3, 61.1219, 1, 0, 0.679584,-0.000636925) , 
5, 0.00450446, 1, 0, 0.63445,-0.00186138) , 
6, 0.00869874, 1, 0, 0.501982,-0.000733676)    );
  // itree = 416
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.540286,-0.00876774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515557,-0.0635844) , 
3, 45.6626, 1, 0, 0.538371,-0.000635347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972211,0.0395237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142917) , 
0, 0.00464414, 1, 0, 0.511778,0.000667066) , 
3, 50.4703, 1, 0, 0.530198,-0.000235079) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951035,0.00990859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131571) , 
0, 0.00467008, 1, 0, 0.246488,5.19097e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871711,-0.0646906) , 
7, 2.18116e-05, 1, 0, 0.362887,-0.00299342) , 
3, 88.3233, 1, 0, 0.500292,-0.000728112)    );
  // itree = 417
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520671,-0.00937897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391643,0.00801106) , 
3, 62.6324, 1, 0, 0.478368,-0.000148625) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629738,-0.0358553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623636,-0.00157705) , 
6, 0.0113309, 1, 0, 0.626784,-0.0027618) , 
6, 0.0110417, 1, 0, 0.486589,-0.000293382) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67061,0.0362408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680045,0.0935888) , 
6, 0.0119002, 1, 0, 0.675001,0.00252326) , 
6, 0.0115964, 1, 0, 0.498549,-0.000114592)    );
  // itree = 418
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972066,0.00683142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.00315e-05,-0.0218633) , 
0, 0.00396961, 1, 0, 0.656017,-0.000271542) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0133543,-0.0142181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762033,0.0229677) , 
6, 0.010492, 1, 0, 0.2022,0.000246609) , 
4, 0.0052183, 1, 0, 0.487753,-7.94244e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653586,0.00506829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642882,-0.0309554) , 
1, 1.0735, 1, 0, 0.649351,-0.00162722) , 
6, 0.0115965, 1, 0, 0.498338,-0.000180812)    );
  // itree = 419
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.503831,0.0102207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381942,-0.00695207) , 
3, 75.7223, 1, 0, 0.479304,-4.4482e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900505,-0.025352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685245,-0.0248318) , 
6, 0.0055416, 1, 0, 0.740287,-0.00220222) , 
7, 5.86492e-06, 1, 0, 0.587376,-0.000937991) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94646,0.0240122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000179939,-0.0117859) , 
2, 0.095087, 1, 0, 0.751743,0.000641752) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0381834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130924) , 
2, 0.190732, 1, 0, 0,-0.00052627) , 
5, 0.00620862, 1, 0, 0.477843,0.000216178) , 
5, 0.00334289, 1, 0, 0.506595,-8.67918e-05)    );
  // itree = 420
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990309,0.0145951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849376,0.0188464) , 
0, 0.0015532, 1, 0, 0.967508,0.000632734) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130923) , 
2, 0.119026, 1, 0, 0,-0.000148886) , 
0, 0.00467007, 1, 0, 0.398673,0.00017319) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765667,0.00476375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910672,-0.0173218) , 
7, 3.41826e-05, 1, 0, 0.804802,-0.000609729) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926758,-0.00806504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898801,-0.0833567) , 
4, 0.00500901, 1, 0, 0.916017,-0.006687) , 
1, 1.20785, 1, 0, 0.841875,-0.0026356) , 
7, 2.18117e-05, 1, 0, 0.495814,-0.000442441)    );
  // itree = 421
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650043,-0.0131694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282835,0.0161463) , 
5, 0.0026515, 1, 0, 0.384052,-5.73629e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628379,-0.019127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602557,0.0383818) , 
6, 0.0103169, 1, 0, 0.623334,-0.000911743) , 
6, 0.00734472, 1, 0, 0.484887,-0.000417405) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638679,-0.0156939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622433,-0.0581299) , 
3, 45.3104, 1, 0, 0.633687,-0.00592297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613367,0.0137135) , 
3, 73.1772, 1, 0, 0.628153,-0.00405307) , 
6, 0.0110166, 1, 0, 0.502382,-0.000861358)    );
  // itree = 422
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.482437,-0.0164921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.373514,0.0114285) , 
3, 37.7076, 1, 0, 0.422019,-9.05281e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630839,0.0117888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6227,0.0510243) , 
6, 0.00996219, 1, 0, 0.628664,0.000624531) , 
6, 0.00844773, 1, 0, 0.474496,9.10594e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633271,-0.0277245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613604,0.0132381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601827,-0.0344547) , 
1, 1.15598, 1, 0, 0.610507,-8.90083e-05) , 
3, 24.4195, 1, 0, 0.616973,-0.0021533) , 
6, 0.0104369, 1, 0, 0.500214,-0.000314056)    );
  // itree = 423
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.200139,-0.00803585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6787,0.0269765) , 
7, 1.04564e-06, 1, 0, 0.509417,-4.38051e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.682216,-0.0248663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748139,-0.0156032) , 
5, 0.00287612, 1, 0, 0.735123,-0.00172919) , 
5, 0.0023637, 1, 0, 0.662536,-0.00117449) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0906542,-0.0110062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877848,-0.0240835) , 
7, 2.22501e-05, 1, 0, 0.398365,-0.00150246) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801174,0.0440834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000475467,-0.00738671) , 
2, 0.071385, 1, 0, 0.354793,0.000450159) , 
3, 25.1497, 1, 0, 0.367225,-0.000106968) , 
5, 0.00450817, 1, 0, 0.500485,-0.000588688)    );
  // itree = 424
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959083,0.0155432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535228,0.0404329) , 
2, 0.0226466, 1, 0, 0.925367,0.000916726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000138561,0.00585166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000165689,-0.0120085) , 
6, 0.00637319, 1, 0, 0.000150915,-0.00032977) , 
2, 0.0476103, 1, 0, 0.547691,0.000407903) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.400612,-0.0123679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309973,0.00786568) , 
3, 60.5722, 1, 0, 0.327788,-5.83888e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730564,-0.0315878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857513,0.0106599) , 
5, 0.00508985, 1, 0, 0.820741,-0.00141769) , 
7, 2.18808e-05, 1, 0, 0.432777,-0.000347891) , 
3, 50.3938, 1, 0, 0.497071,7.49744e-05)    );
  // itree = 425
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.236343,-0.00397829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223795,-0.030402) , 
3, 28.8375, 1, 0, 0.233592,-0.000347598) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832171,0.00387999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872949,0.0387666) , 
3, 21.6232, 1, 0, 0.848002,0.000659717) , 
7, 7.23812e-06, 1, 0, 0.552173,0.00017471) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964231,-0.00757404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707626,-0.0257546) , 
2, 0.0158183, 1, 0, 0.90102,-0.00193492) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00396654,0.0359429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133088) , 
2, 0.198486, 1, 0, 0.00143436,0.000210041) , 
2, 0.04759, 1, 0, 0.457642,-0.000877735) , 
3, 37.8518, 1, 0, 0.499122,-0.000415929)    );
  // itree = 426
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470769,0.0130231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372041,-0.0107335) , 
3, 42.0508, 1, 0, 0.423,-3.22602e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148419,-0.0116514) , 
3, 126.173, 1, 0, 0.403309,-0.000105169) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979456,-0.0712426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71314,0.0122437) , 
0, 0.001653, 1, 0, 0.829938,-0.00116709) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895838,0.00671906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832419,-0.0357645) , 
1, 1.07969, 1, 0, 0.851348,-0.00433971) , 
5, 0.00529576, 1, 0, 0.841432,-0.00287035) , 
7, 2.18117e-05, 1, 0, 0.499897,-0.000714779)    );
  // itree = 427
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997371,0.0328337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889383,0.0444258) , 
0, 0.000870165, 1, 0, 0.96762,0.000804057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130922) , 
2, 0.190592, 1, 0, 0,-0.00010843) , 
0, 0.00467007, 1, 0, 0.322446,0.000195644) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665271,-0.00668483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840764,-0.0202404) , 
4, 0.0049698, 1, 0, 0.710612,-0.0008465) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852983,0.0393244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013567) , 
4, 0.00610269, 1, 0, 0.253017,0.000350933) , 
4, 0.00579858, 1, 0, 0.596471,-0.000547815) , 
6, 0.00580049, 1, 0, 0.498913,-0.000283129)    );
  // itree = 428
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964958,0.0498238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81542,-0.00735621) , 
2, 0.0170027, 1, 0, 0.953848,0.000354828) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.328188,-0.00521343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131165) , 
0, 0.00934014, 1, 0, 0.0269817,-0.00030114) , 
2, 0.0238052, 1, 0, 0.485411,2.3303e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638337,-0.0262942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66845,0.0194024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609303,-0.0396773) , 
3, 78.2115, 1, 0, 0.648017,3.47133e-05) , 
3, 23.9966, 1, 0, 0.645312,-0.00185232) , 
6, 0.0110168, 1, 0, 0.504654,-0.000202416)    );
  // itree = 429
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583185,-0.0121805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774373,0.00968344) , 
7, 1.39849e-05, 1, 0, 0.628988,-0.000324393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703867,-0.0458161) , 
4, 0.00441717, 1, 0, 0.635115,-0.000837854) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983039,-0.0255222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9713,0.0281568) , 
4, 0.00483742, 1, 0, 0.972929,0.00106606) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130922) , 
2, 0.166789, 1, 0, 0,-0.000161637) , 
0, 0.00466573, 1, 0, 0.373424,0.000309571) , 
4, 0.00463836, 1, 0, 0.502236,-0.000255228)    );
  // itree = 430
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962465,-0.0191661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131365) , 
0, 0.00466298, 1, 0, 0.338755,-0.000616977) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992693,0.0606904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.275356,0.0175439) , 
2, 0.0237202, 1, 0, 0.861641,0.000980453) , 
7, 1.56852e-05, 1, 0, 0.474108,-0.00020347) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977771,-0.0048346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983364,0.0337795) , 
1, 1.08182, 1, 0, 0.98097,0.000215164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279401,-0.0250183) , 
2, 0.0237892, 1, 0, 0.624113,-0.00381062) , 
6, 0.0110168, 1, 0, 0.492273,-0.000640285)    );
  // itree = 431
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886276,-0.00451033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994546,0.0335421) , 
7, 7.9265e-06, 1, 0, 0.94903,0.000214432) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00464642,-0.00906701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130969) , 
0, 0.0419418, 1, 0, 0.00124933,-0.000339527) , 
2, 0.0238052, 1, 0, 0.424619,-9.20756e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625396,-0.00340016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64137,0.0333819) , 
1, 1.08317, 1, 0, 0.633535,0.000443849) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643716,-0.0228578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601902,-0.0347406) , 
6, 0.0103038, 1, 0, 0.629352,-0.00183795) , 
1, 1.1345, 1, 0, 0.630657,-0.00112595) , 
6, 0.00869874, 1, 0, 0.498344,-0.000462015)    );
  // itree = 432
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283832,-0.0111665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550496,0.0327891) , 
6, 0.00530047, 1, 0, 0.369838,-4.22971e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.393908,0.00142352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561685,-0.0382133) , 
1, 1.55484, 1, 0, 0.444359,-0.000684491) , 
6, 0.00695584, 1, 0, 0.399316,-0.000296333) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834054,-0.0675469) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830456,0.0117544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906735,-0.0376818) , 
1, 1.24304, 1, 0, 0.848894,-0.000879847) , 
3, 12.6317, 1, 0, 0.846515,-0.00214723) , 
7, 2.13904e-05, 1, 0, 0.498625,-0.000707357)    );
  // itree = 433
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940126,0.0277509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000716558,-0.00813058) , 
2, 0.0238052, 1, 0, 0.409918,0.000107015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.493292,-0.0354868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665852,-0.00304304) , 
5, 0.00442669, 1, 0, 0.628399,-0.00116703) , 
6, 0.00828442, 1, 0, 0.48848,-0.000351109) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989507,0.00149606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297734,-0.0460402) , 
2, 0.0236613, 1, 0, 0.627034,-0.00846866) , 
6, 0.0115964, 1, 0, 0.497998,-0.000908736)    );
  // itree = 434
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549699,-0.0234482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741746,0.00945533) , 
5, 0.00288708, 1, 0, 0.636003,-0.000707568) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.742065,-0.0668432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71749,-0.0125809) , 
5, 0.00422452, 1, 0, 0.727833,-0.00457373) , 
5, 0.00404218, 1, 0, 0.651496,-0.00135982) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93052,0.0194212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493964,0.014852) , 
2, 0.0237223, 1, 0, 0.82411,0.000918811) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00123176,-0.010041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130924) , 
0, 0.0607648, 1, 0, 0.000395808,-0.000318241) , 
2, 0.0714111, 1, 0, 0.37716,0.000247584) , 
5, 0.00446845, 1, 0, 0.498198,-0.000461611)    );
  // itree = 435
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935792,0.0412104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000335007,-0.0105123) , 
2, 0.0238037, 1, 0, 0.385039,7.11711e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582017,-0.0337088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329684,0.00399298) , 
6, 0.00841203, 1, 0, 0.418367,-0.000648231) , 
6, 0.00752983, 1, 0, 0.395777,-0.000160624) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816869,0.0197242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.805346,-0.0185686) , 
5, 0.00565172, 1, 0, 0.811801,-0.000380526) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908827,-0.0323323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873799,-0.0371157) , 
3, 43.0219, 1, 0, 0.892436,-0.00962675) , 
1, 1.24304, 1, 0, 0.830875,-0.00256767) , 
7, 2.13905e-05, 1, 0, 0.495276,-0.00071107)    );
  // itree = 436
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841615,-0.0128806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866377,0.00830334) , 
7, 1.77505e-05, 1, 0, 0.845799,-0.000598586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130922) , 
2, 0.142997, 1, 0, 0,-0.000100624) , 
0, 0.0233149, 1, 0, 0.398643,-0.000335324) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907976,-0.0285031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572147,0.01145) , 
5, 0.00577676, 1, 0, 0.857867,-0.00228287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801399,0.0226642) , 
6, 0.0117581, 1, 0, 0.84845,-0.00160217) , 
7, 2.13905e-05, 1, 0, 0.502076,-0.000626634)    );
  // itree = 437
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.414381,-0.00681787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617571,-0.0260019) , 
6, 0.0082827, 1, 0, 0.427856,-0.000297409) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987647,0.0786897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132563) , 
0, 0.00462485, 1, 0, 0.267213,0.000338519) , 
6, 0.00869722, 1, 0, 0.399729,-0.000186063) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978447,-0.115363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969385,-0.0146516) , 
6, 0.0105016, 1, 0, 0.973291,-0.00452758) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736647,-0.0109834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752842,0.00983364) , 
4, 0.0052082, 1, 0, 0.746128,6.20478e-05) , 
0, 0.00172585, 1, 0, 0.844543,-0.00192635) , 
7, 2.13905e-05, 1, 0, 0.499939,-0.000578126)    );
  // itree = 438
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448406,-0.0199737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64882,0.0215587) , 
6, 0.00839434, 1, 0, 0.510956,-0.000152659) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.218366,-0.00453943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48434,-0.0354882) , 
6, 0.00892045, 1, 0, 0.278383,-0.00206274) , 
3, 100.938, 1, 0, 0.479663,-0.000409662) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647493,0.0167786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676174,-0.0141923) , 
1, 1.08185, 1, 0, 0.65868,-5.3246e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611438,-0.07147) , 
1, 1.10971, 1, 0, 0.644743,-0.00275172) , 
6, 0.0110169, 1, 0, 0.499793,-0.000695255)    );
  // itree = 439
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505624,-0.0403369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398669,0.00639735) , 
3, 37.7108, 1, 0, 0.446621,-0.000556556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581847,-0.0311696) , 
6, 0.00938714, 1, 0, 0.455353,-0.00109716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62601,0.0759533) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974154,0.0317156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250824,0.0136769) , 
2, 0.0237049, 1, 0, 0.63069,0.000836406) , 
3, 12.6163, 1, 0, 0.629946,0.00114172) , 
6, 0.00985784, 1, 0, 0.497753,-0.000553445)    );
  // itree = 440
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488386,0.00613013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894206,0.0324994) , 
7, 2.34421e-05, 1, 0, 0.562748,0.000384349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562638,-0.0187595) , 
3, 21.5973, 1, 0, 0.562734,0.000176899) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985761,-0.0130461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852772,-0.0200282) , 
0, 0.00199697, 1, 0, 0.967213,-0.00209605) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130922) , 
2, 0.143468, 1, 0, 0,-0.00016654) , 
0, 0.00466298, 1, 0, 0.478734,-0.00112158) , 
3, 25.1969, 1, 0, 0.504268,-0.000726874)    );
  // itree = 441
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658036,-0.0294313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657854,-0.0441811) , 
3, 31.9425, 1, 0, 0.658014,-0.00208112) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968514,0.014541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0166332) , 
0, 0.00388474, 1, 0, 0.592984,6.00838e-05) , 
3, 37.2785, 1, 0, 0.624051,-0.00096283) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925098,0.0272939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476824,0.0213177) , 
2, 0.0237223, 1, 0, 0.807565,0.000942037) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130921) , 
4, 0.00715148, 1, 0, 0,-0.000390133) , 
2, 0.0713365, 1, 0, 0.37775,0.000233008) , 
4, 0.00463913, 1, 0, 0.501432,-0.000367495)    );
  // itree = 442
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770423,-0.00758946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912753,-0.0257758) , 
6, 0.00487927, 1, 0, 0.819823,-0.00168364) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443466,-0.0119788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775544,0.0402923) , 
4, 0.00386313, 1, 0, 0.489744,-7.02685e-05) , 
5, 0.00302529, 1, 0, 0.619241,-0.000703227) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711313,0.0115363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839003,0.0258999) , 
6, 0.0104121, 1, 0, 0.739365,0.000634674) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780448,-0.0255939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0821378,0.00228011) , 
4, 0.00592026, 1, 0, 0.189004,-0.000306761) , 
4, 0.00560609, 1, 0, 0.430577,0.000106468) , 
4, 0.00405872, 1, 0, 0.502945,-0.000204115)    );
  // itree = 443
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95844,0.0279759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131159) , 
0, 0.00467008, 1, 0, 0.199506,8.36149e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0755333,-0.0123982) , 
3, 100.942, 1, 0, 0.178842,-3.56604e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981027,-0.0345169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982528,0.0129297) , 
5, 0.00437699, 1, 0, 0.981797,-0.000909903) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.19097,-0.0208949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171054,-0.0192308) , 
3, 49.7252, 1, 0, 0.181437,-0.00449923) , 
0, 0.00221482, 1, 0, 0.813733,-0.00166361) , 
7, 6.85981e-06, 1, 0, 0.494198,-0.000844277)    );
  // itree = 444
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966824,0.00269977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981913,0.0563461) , 
5, 0.00555621, 1, 0, 0.967833,0.000308006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130921) , 
2, 0.119107, 1, 0, 0,-0.000219806) , 
0, 0.00466573, 1, 0, 0.498484,5.2044e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687559,0.0280783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.661519,0.0461925) , 
3, 34.1209, 1, 0, 0.671723,0.00196467) , 
6, 0.0115965, 1, 0, 0.509847,0.000177505)    );
  // itree = 445
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553317,0.00552458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71321,-0.0250799) , 
5, 0.00246228, 1, 0, 0.605331,-0.0013392) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789456,0.0156636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135351) , 
2, 0.0952148, 1, 0, 0.401392,0.000100913) , 
5, 0.00304159, 1, 0, 0.456056,-0.000285098) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608405,-0.0329468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605966,-0.0290318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655175,0.0209926) , 
6, 0.0113774, 1, 0, 0.624994,-0.00105479) , 
6, 0.0100791, 1, 0, 0.623291,-0.00177791) , 
6, 0.00985784, 1, 0, 0.497007,-0.00065064)    );
  // itree = 446
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990443,0.000729036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901853,0.0691397) , 
0, 0.000653397, 1, 0, 0.957773,0.000856589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013092) , 
2, 0.142944, 1, 0, 0,-8.12034e-05) , 
0, 0.00467008, 1, 0, 0.182543,9.75315e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998111,-0.0189804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959233,-0.0380381) , 
0, 0.00178844, 1, 0, 0.989656,-0.00171046) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12553,-0.00858707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628365,-0.0178582) , 
7, 2.99099e-05, 1, 0, 0.255873,-0.00495724) , 
2, 0.0237202, 1, 0, 0.820032,-0.00246099) , 
7, 7.02627e-06, 1, 0, 0.50318,-0.00118933)    );
  // itree = 447
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.201171,-0.0159523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813769,0.0117068) , 
7, 6.4575e-06, 1, 0, 0.443799,8.87176e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.101869,-0.00520258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.745248,-0.00916769) , 
7, 6.84711e-06, 1, 0, 0.279854,-0.000362518) , 
3, 74.4937, 1, 0, 0.402343,-8.50385e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996602,0.0843699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991352,0.0525789) , 
8, 0.0125116, 1, 0, 0.995739,0.000483216) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.414517,0.0408453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510511,0.00343435) , 
6, 0.0110635, 1, 0, 0.465826,0.00268787) , 
2, 0.0237254, 1, 0, 0.846834,0.00110272) , 
7, 2.13905e-05, 1, 0, 0.50315,0.000184335)    );
  // itree = 448
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966245,0.0400916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00104292,-0.0124566) , 
2, 0.0237521, 1, 0, 0.48973,1.75747e-09) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86298,0.0675232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795742,0.00509245) , 
3, 12.0108, 1, 0, 0.828516,0.00135097) , 
7, 2.21847e-05, 1, 0, 0.561863,0.000287643) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.224286,0.0310833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852846,-0.0243909) , 
7, 7.10723e-06, 1, 0, 0.562927,-0.00150241) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.422502,0.0113576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653405,-0.0336103) , 
6, 0.0110169, 1, 0, 0.450654,-0.000102957) , 
3, 47.998, 1, 0, 0.487653,-0.000564136) , 
3, 25.1997, 1, 0, 0.510379,-0.000303287)    );
  // itree = 449
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983608,0.025555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980666,-0.0253573) , 
3, 50.1085, 1, 0, 0.982594,-0.000279053) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544409,-0.0163767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861323,-0.00949414) , 
5, 0.00337792, 1, 0, 0.826806,-0.00195005) , 
2, 0.00680106, 1, 0, 0.914513,-0.00100929) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0028194,0.0218457) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013092) , 
0, 0.0419695, 1, 0, 0,-0.000243815) , 
2, 0.155414, 1, 0, 0.000691925,-1.52121e-05) , 
2, 0.0476103, 1, 0, 0.503602,-0.00056229)    );
  // itree = 450
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648082,0.0502122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526026,-0.0180417) , 
3, 50.4741, 1, 0, 0.599778,-0.00114902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.358334,0.0134177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666165,-0.00818539) , 
6, 0.00938732, 1, 0, 0.451904,-4.37989e-05) , 
5, 0.00331741, 1, 0, 0.492304,-0.000345751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708066,0.0352733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654037,-0.0253409) , 
6, 0.0118726, 1, 0, 0.680162,-0.00228636) , 
6, 0.0115964, 1, 0, 0.504339,-0.000470076)    );
  // itree = 451
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600392,-0.0142391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570527,-0.035043) , 
7, 9.40393e-06, 1, 0, 0.595935,-0.00122192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.368676,0.00223998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680378,-0.0111218) , 
6, 0.00944304, 1, 0, 0.441899,-0.000188451) , 
5, 0.00328578, 1, 0, 0.485383,-0.000480201) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628848,0.0376706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628187,-0.0401746) , 
3, 48.8312, 1, 0, 0.628553,-0.000597657) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.486262,-0.0530393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727767,-0.00439774) , 
6, 0.011847, 1, 0, 0.616673,-0.00453786) , 
4, 0.00582462, 1, 0, 0.622574,-0.00258075) , 
6, 0.0110168, 1, 0, 0.502231,-0.000738158)    );
  // itree = 452
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973828,0.0247467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970933,-0.0140908) , 
3, 99.9417, 1, 0, 0.973599,0.000500044) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013092) , 
2, 0.119298, 1, 0, 0,-0.000134747) , 
0, 0.00467007, 1, 0, 0.467597,0.000170128) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722503,-0.00584019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701523,-0.0621042) , 
3, 52.1504, 1, 0, 0.714121,-0.00330295) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617704,-0.0107167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567925,0.0128617) , 
3, 23.9417, 1, 0, 0.581078,0.000320706) , 
5, 0.00563421, 1, 0, 0.633531,-0.00110795) , 
6, 0.0104369, 1, 0, 0.496846,-5.51574e-05)    );
  // itree = 453
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971863,0.0338364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0016659,-0.00887529) , 
2, 0.0238052, 1, 0, 0.594673,0.000147498) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.477911,-0.0199527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.380215,0.00191834) , 
5, 0.00438084, 1, 0, 0.415303,-0.000221106) , 
4, 0.00347864, 1, 0, 0.473851,-0.00010079) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657906,-0.0129893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621849,0.0142931) , 
6, 0.0117214, 1, 0, 0.636414,4.36257e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570003,-0.0381025) , 
1, 1.10987, 1, 0, 0.616224,-0.00215073) , 
6, 0.0110168, 1, 0, 0.490966,-0.00034721)    );
  // itree = 454
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490014,-0.00761335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738419,-0.0184581) , 
7, 5.81999e-06, 1, 0, 0.587683,-0.000741339) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617112,0.0169079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144141,-0.0129856) , 
4, 0.00521828, 1, 0, 0.434435,7.87392e-05) , 
5, 0.00328105, 1, 0, 0.477564,-0.000152057) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642425,-0.0506677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682902,-0.0464578) , 
3, 36.5857, 1, 0, 0.664924,-0.00708754) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559867,0.0348279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727156,0.00135968) , 
6, 0.0119018, 1, 0, 0.63585,0.000893766) , 
4, 0.00582462, 1, 0, 0.650272,-0.00306542) , 
6, 0.0110169, 1, 0, 0.498119,-0.000498794)    );
  // itree = 455
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807076,-0.012977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.75616e-05,-0.00467415) , 
2, 0.0476103, 1, 0, 0.319133,-0.000337284) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638555,0.0296692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459535,-0.0101002) , 
3, 87.5042, 1, 0, 0.607829,0.000358069) , 
6, 0.00596472, 1, 0, 0.477093,4.31792e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635882,-0.0193078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603883,-0.00217829) , 
1, 1.0828, 1, 0, 0.615095,-0.00137385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572995,-0.142026) , 
1, 1.17823, 1, 0, 0.609119,-0.00224216) , 
6, 0.0104373, 1, 0, 0.501602,-0.000381059)    );
  // itree = 456
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96884,0.0198057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131071) , 
0, 0.00467008, 1, 0, 0.312686,0.000148418) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.590575,-0.0214822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308043,0.0135309) , 
6, 0.00852772, 1, 0, 0.488136,-0.000561151) , 
6, 0.00579699, 1, 0, 0.405421,-0.000226625) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883837,-0.0216374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926246,-0.0674973) , 
7, 2.49234e-05, 1, 0, 0.90312,-0.00878954) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813642,-0.0129612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818,0.0220394) , 
3, 24.4195, 1, 0, 0.816728,0.000245886) , 
6, 0.0105047, 1, 0, 0.85248,-0.0034933) , 
7, 2.13904e-05, 1, 0, 0.505452,-0.00095756)    );
  // itree = 457
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683446,-0.00844768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575415,-0.0362758) , 
6, 0.00811863, 1, 0, 0.662411,-0.000606597) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98689,0.056136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131583) , 
0, 0.00466029, 1, 0, 0.0951977,4.85629e-08) , 
5, 0.00442996, 1, 0, 0.40333,-0.000329504) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991267,0.0657901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566101,-0.0409176) , 
4, 0.00491112, 1, 0, 0.757815,-0.00559238) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883019,-0.0132171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871102,0.0276813) , 
3, 73.1655, 1, 0, 0.880006,-0.000990579) , 
5, 0.00506377, 1, 0, 0.846605,-0.0022485) , 
7, 2.2045e-05, 1, 0, 0.497099,-0.000735443)    );
  // itree = 458
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.419703,-0.0114699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659897,0.0424996) , 
6, 0.00848913, 1, 0, 0.450058,-0.000134131) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637466,0.0243512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611768,-0.0246138) , 
3, 24.8681, 1, 0, 0.619465,-0.00207941) , 
6, 0.00938334, 1, 0, 0.490745,-0.000601339) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667848,-0.0574411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634942,-0.031129) , 
3, 45.4501, 1, 0, 0.650853,-0.0107731) , 
6, 0.0115964, 1, 0, 0.501192,-0.00126504)    );
  // itree = 459
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.318675,-0.000990196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579936,-0.0533603) , 
6, 0.00607963, 1, 0, 0.336267,-0.000207752) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972345,0.0150701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133393) , 
0, 0.00466573, 1, 0, 0.48044,0.000131092) , 
6, 0.00638323, 1, 0, 0.403925,-4.87371e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881967,-0.0287511) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836171,0.0200957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774443,-0.0232849) , 
6, 0.0118715, 1, 0, 0.825605,0.00014389) , 
6, 0.0100433, 1, 0, 0.837612,-0.00140415) , 
7, 2.19617e-05, 1, 0, 0.498322,-0.000343757)    );
  // itree = 460
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966077,-0.00529545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978721,0.0225706) , 
5, 0.00290588, 1, 0, 0.974167,0.000281647) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013092) , 
2, 0.119205, 1, 0, 0,-0.000111394) , 
0, 0.00466298, 1, 0, 0.402934,5.11755e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99566,0.0650986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642861,-0.0420846) , 
4, 0.00492734, 1, 0, 0.803003,-0.00794062) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.557399,-0.0232549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959171,0.00470527) , 
4, 0.00518497, 1, 0, 0.883323,-0.00101737) , 
5, 0.00508697, 1, 0, 0.861117,-0.00293145) , 
7, 2.21509e-05, 1, 0, 0.498951,-0.000573862)    );
  // itree = 461
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660841,-0.00906847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782388,-0.0534095) , 
4, 0.00441717, 1, 0, 0.670169,-0.000741836) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959218,0.0458579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131056) , 
0, 0.00467007, 1, 0, 0.212064,0.00029733) , 
4, 0.00463834, 1, 0, 0.471951,-0.000292198) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638581,0.0391806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668982,0.000125363) , 
3, 12.009, 1, 0, 0.661914,0.000519822) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623432,-0.0574583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590632,0.0188634) , 
3, 91.8623, 1, 0, 0.60741,-0.00542256) , 
3, 63.0066, 1, 0, 0.642829,-0.00156101) , 
6, 0.0104369, 1, 0, 0.502406,-0.00051834)    );
  // itree = 462
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977123,0.048497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.805773,0.0415776) , 
2, 0.00902158, 1, 0, 0.944214,0.000508842) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00279784,-0.00287551) , 
5, 0.0033803, 1, 0, 0.00216649,-0.000235365) , 
2, 0.0238037, 1, 0, 0.402146,8.06144e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879589,0.00297782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865,-0.0715515) , 
4, 0.00517399, 1, 0, 0.872488,-0.00518339) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0872127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516948,0.0156674) , 
2, 0.0237892, 1, 0, 0.809924,0.00154099) , 
6, 0.011366, 1, 0, 0.852389,-0.00302318) , 
7, 2.18116e-05, 1, 0, 0.497511,-0.000576792)    );
  // itree = 463
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965924,0.00759458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131081) , 
0, 0.00465473, 1, 0, 0.181509,-3.5745e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829864,-0.0130824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82516,-0.0221909) , 
3, 44.9921, 1, 0, 0.828845,-0.00166332) , 
7, 5.71741e-06, 1, 0, 0.535108,-0.000924785) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.556988,0.00234966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141802) , 
2, 0.19036, 1, 0, 0.326251,-0.000162894) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997405,0.0866759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597635,0.023913) , 
2, 0.0233757, 1, 0, 0.847541,0.00185528) , 
7, 2.18116e-05, 1, 0, 0.442088,0.00028557) , 
3, 62.9951, 1, 0, 0.505186,-0.000535439)    );
  // itree = 464
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490271,-0.00114897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.26151,-0.0169511) , 
3, 100.556, 1, 0, 0.460769,-0.000175578) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970227,-0.0203471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197439,0.0230862) , 
2, 0.023795, 1, 0, 0.619716,0.000606492) , 
6, 0.00993807, 1, 0, 0.489752,-3.2971e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544656,-0.0423141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696524,0.0223197) , 
4, 0.00586452, 1, 0, 0.63887,-0.00183805) , 
6, 0.0115965, 1, 0, 0.499796,-0.000154554)    );
  // itree = 465
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.469378,-0.0140611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649301,0.0154634) , 
6, 0.00839636, 1, 0, 0.524764,-0.000139245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.693372,0.00996818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654964,-0.0316683) , 
1, 1.08182, 1, 0, 0.671609,-0.00252274) , 
6, 0.0110177, 1, 0, 0.541299,-0.000407636) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.391142,-0.0102887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.290825,0.00676682) , 
4, 0.00231813, 1, 0, 0.307832,-7.02218e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994796,0.0878366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54216,0.0351661) , 
2, 0.0236845, 1, 0, 0.822639,0.0020318) , 
7, 2.18116e-05, 1, 0, 0.416952,0.000375329) , 
3, 63.0863, 1, 0, 0.499671,-0.00014552)    );
  // itree = 466
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621256,-0.0157675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183839,0.00595958) , 
5, 0.00328778, 1, 0, 0.347977,-0.000161116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898004,-0.024097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719949,0.025844) , 
5, 0.00521663, 1, 0, 0.85974,-0.00167094) , 
7, 1.56396e-05, 1, 0, 0.48229,-0.000557371) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0872254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963924,-0.0675591) , 
1, 1.09574, 1, 0, 0.984611,-0.00129681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30875,-0.029674) , 
2, 0.0237819, 1, 0, 0.654058,-0.00471897) , 
6, 0.0110168, 1, 0, 0.502429,-0.00104532)    );
  // itree = 467
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.228891,0.00383356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.480313,-0.0140175) , 
6, 0.00436056, 1, 0, 0.285456,-0.000143715) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97009,0.0546414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00247187,-0.00583067) , 
2, 0.0237863, 1, 0, 0.564555,0.00022932) , 
6, 0.00538638, 1, 0, 0.42309,4.02423e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624417,-0.0205155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62758,-0.0866256) , 
6, 0.0101166, 1, 0, 0.624941,-0.00233788) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652587,-0.0143744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627846,0.0336145) , 
1, 1.08389, 1, 0, 0.634955,0.000369289) , 
6, 0.0103546, 1, 0, 0.630244,-0.000904235) , 
6, 0.0086986, 1, 0, 0.497493,-0.000298984)    );
  // itree = 468
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72112,0.010843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168778,-0.00916365) , 
5, 0.0043622, 1, 0, 0.467993,-3.459e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839281,-0.0560593) , 
7, 2.28283e-05, 1, 0, 0.544493,-0.00213172) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974598,-0.0023426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896834,-0.0308239) , 
2, 0.00902158, 1, 0, 0.951475,-0.000752444) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.420031,0.0210928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000185421,-0.0122156) , 
2, 0.0691267, 1, 0, 0.0632285,0.000122597) , 
2, 0.023795, 1, 0, 0.493085,-0.000300869) , 
3, 12.6173, 1, 0, 0.501052,-0.000584613)    );
  // itree = 469
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.292801,-0.0100093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867971,0.0298842) , 
7, 1.14965e-05, 1, 0, 0.457871,5.3339e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657606,-0.0358285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608787,0.00565468) , 
6, 0.0103676, 1, 0, 0.627821,-0.000883137) , 
6, 0.0099673, 1, 0, 0.479494,-6.58126e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638187,-0.050275) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608062,-0.0106946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597373,0.0141811) , 
3, 35.3356, 1, 0, 0.601569,-0.000218579) , 
5, 0.00571674, 1, 0, 0.612494,-0.00344126) , 
6, 0.0110168, 1, 0, 0.495773,-0.000478962)    );
  // itree = 470
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897065,-0.00907433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917989,-0.0510611) , 
7, 1.92166e-05, 1, 0, 0.899249,-0.000791604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130919) , 
2, 0.119649, 1, 0, 0,-9.6079e-05) , 
0, 0.0139889, 1, 0, 0.400927,-0.000406176) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885755,0.0531469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876319,-0.0186156) , 
6, 0.0116189, 1, 0, 0.883785,0.000314951) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80105,0.0112351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873102,-0.0414208) , 
1, 1.10138, 1, 0, 0.852604,-0.00616039) , 
3, 48.7764, 1, 0, 0.8701,-0.00252704) , 
7, 2.13905e-05, 1, 0, 0.504599,-0.000874821)    );
  // itree = 471
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287921,-0.0108422) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.612434,0.0463377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110672,-0.00920234) , 
4, 0.0016924, 1, 0, 0.146141,-3.4757e-05) , 
4, 0.00116083, 1, 0, 0.15907,-8.63412e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862951,-0.0163087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.693541,-0.0295923) , 
4, 0.00498188, 1, 0, 0.82942,-0.00206947) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76739,0.0464532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750793,-0.0195762) , 
6, 0.011707, 1, 0, 0.761168,0.000370535) , 
6, 0.0107682, 1, 0, 0.813844,-0.00151261) , 
7, 5.71741e-06, 1, 0, 0.50362,-0.000836863)    );
  // itree = 472
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616978,-0.0057391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381126,-0.0320622) , 
7, 1.40652e-05, 1, 0, 0.59632,-0.000509441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741482,0.0291816) , 
4, 0.00386495, 1, 0, 0.608461,-0.000394344) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472834,-0.00250547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840381,0.0351564) , 
5, 0.00483303, 1, 0, 0.605143,0.000502625) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.835243,-0.0638385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0682628,-0.00250718) , 
2, 0.023783, 1, 0, 0.226659,-0.00040387) , 
5, 0.00563702, 1, 0, 0.433022,9.03847e-05) , 
4, 0.00405874, 1, 0, 0.502378,-0.000101241)    );
  // itree = 473
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523052,0.00431885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75382,-0.0250653) , 
5, 0.00271576, 1, 0, 0.594415,-0.0005063) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980534,0.0424883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132341) , 
0, 0.00465687, 1, 0, 0.305918,0.0001434) , 
5, 0.00335415, 1, 0, 0.401537,-7.19348e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92696,-0.0279581) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832341,0.0098593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825828,-0.0223448) , 
3, 90.8461, 1, 0, 0.831281,0.000285528) , 
6, 0.0100407, 1, 0, 0.850947,-0.00181585) , 
7, 2.19616e-05, 1, 0, 0.497209,-0.000443187)    );
  // itree = 474
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.444527,0.010052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875227,-0.0291819) , 
7, 1.88997e-05, 1, 0, 0.544653,-0.000426081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853397,0.0297351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000555801,-0.00833764) , 
2, 0.071385, 1, 0, 0.446274,0.00035366) , 
3, 37.798, 1, 0, 0.490137,6.01001e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653955,-0.0418603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605286,0.00148221) , 
6, 0.0117898, 1, 0, 0.623259,-0.00278254) , 
6, 0.0115965, 1, 0, 0.499253,-0.000184947)    );
  // itree = 475
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554018,0.00857889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366526,-0.0107447) , 
3, 74.9815, 1, 0, 0.509889,-0.000145688) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661837,-0.00958375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881423,-0.0247551) , 
1, 2.19914, 1, 0, 0.709148,-0.00187205) , 
7, 6.00595e-06, 1, 0, 0.597087,-0.000901167) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948083,0.0356356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538414,0.0162332) , 
2, 0.0203683, 1, 0, 0.85958,0.000796199) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00127341,-0.00961438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130922) , 
0, 0.0513157, 1, 0, 0.000361975,-0.00030524) , 
2, 0.0714111, 1, 0, 0.465585,0.000291134) , 
5, 0.00337831, 1, 0, 0.500824,-2.83726e-05)    );
  // itree = 476
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878586,0.033009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0683419,-0.0120841) , 
5, 0.00284789, 1, 0, 0.53799,0.00035446) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677715,-0.0270033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30427,0.00637316) , 
4, 0.00334169, 1, 0, 0.344851,-0.000128534) , 
4, 0.00289998, 1, 0, 0.39749,3.10391e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0869253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904328,-0.0357091) , 
2, 0.0183033, 1, 0, 0.972079,-0.00310965) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507231,-0.0263381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811734,0.0151307) , 
4, 0.00483801, 1, 0, 0.743599,7.9629e-05) , 
0, 0.00169345, 1, 0, 0.841684,-0.0012895) , 
7, 2.13905e-05, 1, 0, 0.498193,-0.000289943)    );
  // itree = 477
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930209,0.0301369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000228618,-0.0127327) , 
2, 0.0238052, 1, 0, 0.387053,6.98936e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.480513,-0.0315663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409835,0.00804224) , 
3, 37.8518, 1, 0, 0.441769,-0.000677777) , 
6, 0.00753814, 1, 0, 0.405393,-0.000180705) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566408,-0.00243041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949896,0.027528) , 
5, 0.00483157, 1, 0, 0.755157,0.000743057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889326,-0.0029219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868338,-0.0434003) , 
1, 1.10985, 1, 0, 0.877113,-0.00464656) , 
5, 0.00508697, 1, 0, 0.840403,-0.00302421) , 
7, 2.19616e-05, 1, 0, 0.499981,-0.000798994)    );
  // itree = 478
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792404,-0.00872345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975853,0.0360126) , 
6, 0.0105125, 1, 0, 0.813772,-0.000137434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0254302) , 
5, 0.00589955, 1, 0, 0.660943,-0.000334942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962629,0.021449) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130919) , 
2, 0.190441, 1, 0, 0,-0.000108254) , 
0, 0.00466576, 1, 0, 0.135135,0.000182735) , 
4, 0.0057976, 1, 0, 0.501443,-0.000177908)    );
  // itree = 479
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943457,0.028953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140638) , 
2, 0.0238037, 1, 0, 0.375059,4.27232e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970768,-0.0309545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0666589,0.00853507) , 
2, 0.023795, 1, 0, 0.599058,-0.000764813) , 
6, 0.00682179, 1, 0, 0.486324,-0.000358397) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619651,-0.0382123) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68498,0.0304897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608904,-0.0216098) , 
1, 1.10479, 1, 0, 0.649978,-0.000968837) , 
1, 1.06332, 1, 0, 0.643013,-0.00277967) , 
6, 0.011017, 1, 0, 0.505391,-0.00065304)    );
  // itree = 480
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678976,0.0220481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.178471,-0.00813463) , 
4, 0.00289853, 1, 0, 0.359944,0.000117099) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970513,-0.0279985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.068042,0.000856959) , 
2, 0.023795, 1, 0, 0.604288,-0.000618105) , 
6, 0.00682024, 1, 0, 0.477332,-0.000236108) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982504,0.018794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987652,0.0180387) , 
4, 0.00583301, 1, 0, 0.98487,0.00029942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.271916,-0.0229201) , 
2, 0.0237819, 1, 0, 0.627919,-0.0032368) , 
6, 0.0110166, 1, 0, 0.495492,-0.000597971)    );
  // itree = 481
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.437664,-0.00334168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627393,0.021165) , 
6, 0.00899136, 1, 0, 0.460245,-1.79162e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695783,0.0359488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688134,0.0452102) , 
1, 1.22705, 1, 0, 0.692006,0.0013369) , 
6, 0.00993821, 1, 0, 0.475125,6.9071e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679091,-0.00678231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634682,-0.066066) , 
3, 50.4495, 1, 0, 0.659912,-0.00318064) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.386919,-0.0122029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751439,0.0287174) , 
4, 0.00577018, 1, 0, 0.567391,-4.43517e-05) , 
5, 0.00558145, 1, 0, 0.599833,-0.00114408) , 
6, 0.0104373, 1, 0, 0.49816,-0.000155007)    );
  // itree = 482
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952644,0.0297387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131178) , 
0, 0.00465202, 1, 0, 0.196009,4.06692e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0883607,-0.0107418) , 
3, 87.9865, 1, 0, 0.172536,-6.80277e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83835,-0.0475473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.785643,-0.00728111) , 
3, 12.0457, 1, 0, 0.793934,-0.00120787) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86954,-0.0238469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93758,-0.0448039) , 
7, 1.40117e-05, 1, 0, 0.880404,-0.00371732) , 
1, 1.5482, 1, 0, 0.821335,-0.00200309) , 
7, 6.55999e-06, 1, 0, 0.500695,-0.00104677)    );
  // itree = 483
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722577,0.0161508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140521,-0.0107096) , 
5, 0.00441463, 1, 0, 0.469474,-3.67532e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890643,-0.0461652) , 
7, 2.22499e-05, 1, 0, 0.553727,-0.00139679) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530621,-0.00432157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747674,-0.0150174) , 
7, 9.84627e-06, 1, 0, 0.605516,-0.000550889) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83484,0.0157933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.5291e-05,-0.0116204) , 
2, 0.0713392, 1, 0, 0.414669,0.00026585) , 
4, 0.00405856, 1, 0, 0.486896,-4.32479e-05) , 
3, 12.6232, 1, 0, 0.497374,-0.00025548)    );
  // itree = 484
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.328701,0.00121139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603578,-0.0181438) , 
6, 0.00615456, 1, 0, 0.461177,-0.000367818) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976341,0.0815374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202126,0.035097) , 
2, 0.0237398, 1, 0, 0.617686,0.00141399) , 
6, 0.00993925, 1, 0, 0.489858,-4.12949e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642837,0.0121153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711659,-0.0301277) , 
1, 1.07128, 1, 0, 0.671034,-0.00229587) , 
6, 0.0115964, 1, 0, 0.501297,-0.000183641)    );
  // itree = 485
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929706,0.0284059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.87034e-05,-0.0116338) , 
2, 0.0476103, 1, 0, 0.54208,0.00022916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670358,0.0669783) , 
6, 0.0115965, 1, 0, 0.550057,0.000440815) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818497,0.0254611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132061) , 
2, 0.0237863, 1, 0, 0.141525,-3.70772e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784279,-0.0108894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906069,-0.0202534) , 
1, 1.86286, 1, 0, 0.799687,-0.00136381) , 
7, 6.5599e-06, 1, 0, 0.459738,-0.000678537) , 
3, 37.8007, 1, 0, 0.499902,-0.000180774)    );
  // itree = 486
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99779,0.0353901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884594,0.013696) , 
0, 0.000652625, 1, 0, 0.960162,0.000236529) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130919) , 
2, 0.119026, 1, 0, 0,-7.11876e-05) , 
0, 0.00467007, 1, 0, 0.152338,-2.23658e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820599,-0.0181294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823011,0.00338782) , 
3, 52.3302, 1, 0, 0.821354,-0.00101071) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676821,0.021432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773657,-0.024454) , 
4, 0.00461338, 1, 0, 0.72734,-0.00278319) , 
3, 99.9417, 1, 0, 0.811874,-0.00118944) , 
7, 5.71741e-06, 1, 0, 0.494994,-0.00062871)    );
  // itree = 487
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532929,-0.0482532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545932,0.0137661) , 
3, 4.56348, 1, 0, 0.544573,1.66382e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.487957,-0.0294716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512984,-0.00286378) , 
3, 51.4469, 1, 0, 0.506688,-0.0025154) , 
3, 47.8842, 1, 0, 0.53738,-0.000464139) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584936,0.0123706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0135854,-0.0136509) , 
4, 0.00463762, 1, 0, 0.316338,7.73383e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0894676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542119,0.0362482) , 
2, 0.0236918, 1, 0, 0.826214,0.00175175) , 
7, 2.18807e-05, 1, 0, 0.425342,0.000435305) , 
3, 62.8488, 1, 0, 0.500055,-0.000164499)    );
  // itree = 488
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668612,-0.00953127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.249752,0.0154263) , 
5, 0.00400313, 1, 0, 0.451978,-0.000117369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605977,-0.0173113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614335,0.00868951) , 
6, 0.0111761, 1, 0, 0.607469,-0.0011154) , 
6, 0.00938916, 1, 0, 0.489185,-0.000356181) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992991,0.0301799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.319215,-0.0231877) , 
2, 0.0233634, 1, 0, 0.647864,-0.00501792) , 
6, 0.0115966, 1, 0, 0.499831,-0.000668958)    );
  // itree = 489
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964542,0.0785809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677418,-0.0049444) , 
5, 0.00186509, 1, 0, 0.797438,0.000170994) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130958) , 
0, 0.0513271, 1, 0, 0,-0.000113518) , 
2, 0.0238037, 1, 0, 0.155812,-5.79269e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.727054,0.0166831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831194,-0.0176643) , 
4, 0.00356415, 1, 0, 0.808048,-0.00138724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906883,-0.0214971) , 
1, 2.17679, 1, 0, 0.81405,-0.00155967) , 
7, 5.71731e-06, 1, 0, 0.502038,-0.000847826)    );
  // itree = 490
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828801,0.0143128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142265) , 
2, 0.0238052, 1, 0, 0.17521,-4.75111e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.698562,-0.0228006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836333,-0.00518249) , 
5, 0.00321948, 1, 0, 0.794382,-0.000670163) , 
7, 6.42582e-06, 1, 0, 0.405955,-0.000279553) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935103,0.0429088) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81125,-0.0158311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867106,-0.047971) , 
1, 1.19453, 1, 0, 0.825886,-0.00414895) , 
6, 0.00994753, 1, 0, 0.84831,-0.00314913) , 
7, 2.13905e-05, 1, 0, 0.50579,-0.000927187)    );
  // itree = 491
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971716,0.0062368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748852,-0.0224903) , 
2, 0.011277, 1, 0, 0.941052,-0.000532286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00447245,0.00998894) , 
6, 0.00463622, 1, 0, 0.00257769,1.53966e-05) , 
2, 0.023795, 1, 0, 0.40943,-0.000222038) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818811,0.0159692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915611,-0.0294097) , 
1, 1.20784, 1, 0, 0.852473,-0.000915225) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960184,-0.0660934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7282,-0.0044801) , 
0, 0.00164365, 1, 0, 0.82884,-0.00535293) , 
3, 60.9711, 1, 0, 0.844542,-0.00240449) , 
7, 2.18118e-05, 1, 0, 0.504267,-0.000697724)    );
  // itree = 492
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.476233,0.0127291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346965,-0.00956406) , 
3, 50.003, 1, 0, 0.420749,-2.45347e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633104,-0.0036681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608051,-0.0239054) , 
1, 1.39443, 1, 0, 0.628291,-0.000800655) , 
6, 0.00828167, 1, 0, 0.495646,-0.00030462) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634576,0.0368731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685531,0.0122942) , 
3, 34.781, 1, 0, 0.664157,0.0018528) , 
6, 0.0115963, 1, 0, 0.506875,-0.000160864)    );
  // itree = 493
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671743,-0.0145737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791696,0.0574082) , 
5, 0.00492218, 1, 0, 0.68093,-0.000744151) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781243,-0.00887959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770101,-0.0752473) , 
3, 60.9711, 1, 0, 0.777545,-0.00604201) , 
5, 0.00516836, 1, 0, 0.694123,-0.00146756) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974643,0.00060143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919,0.0523133) , 
0, 0.00177523, 1, 0, 0.944907,0.00213139) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130919) , 
2, 0.166636, 1, 0, 0,-0.000103074) , 
0, 0.00933147, 1, 0, 0.160117,0.000275563) , 
5, 0.00571265, 1, 0, 0.509215,-0.000863978)    );
  // itree = 494
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576644,-0.00442033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824771,-0.0167796) , 
7, 1.41803e-05, 1, 0, 0.644461,-0.000576046) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971599,0.0225935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0146051) , 
0, 0.00467007, 1, 0, 0.272991,0.00025906) , 
4, 0.00463834, 1, 0, 0.47622,-0.000197822) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690422,0.0196273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672091,-0.0156834) , 
6, 0.0116835, 1, 0, 0.678411,-0.00129191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612011,-0.0453907) , 
1, 1.10986, 1, 0, 0.65814,-0.00479491) , 
6, 0.0110169, 1, 0, 0.497722,-0.000741164)    );
  // itree = 495
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991949,0.0683669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966342,0.00576761) , 
5, 0.00387125, 1, 0, 0.981976,0.000126325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85389,-0.00164572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967794,-0.0427252) , 
6, 0.00870402, 1, 0, 0.920436,-0.00268429) , 
2, 0.00563849, 1, 0, 0.955363,-0.00108913) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559403,0.0175321) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00262049,-0.00501071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130931) , 
0, 0.0280422, 1, 0, 0.000569691,-0.000158173) , 
2, 0.0464652, 1, 0, 0.0587301,0.000225841) , 
2, 0.023795, 1, 0, 0.500593,-0.000422182)    );
  // itree = 496
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969833,0.0199907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973035,0.0628792) , 
5, 0.00501805, 1, 0, 0.970682,0.00092211) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130918) , 
2, 0.214308, 1, 0, 0,-0.000248952) , 
0, 0.00465473, 1, 0, 0.552833,0.000418003) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.548823,-0.012816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.242971,0.0136135) , 
5, 0.0033786, 1, 0, 0.333742,-0.000282117) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99446,-0.0128894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563541,-0.0182877) , 
2, 0.0236918, 1, 0, 0.850155,-0.00304921) , 
7, 2.18117e-05, 1, 0, 0.441798,-0.000861109) , 
3, 49.986, 1, 0, 0.503748,-0.000147449)    );
  // itree = 497
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448457,6.40051e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611784,-0.00612263) , 
6, 0.00945694, 1, 0, 0.478933,-9.39223e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630108,0.0339871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648119,0.0025075) , 
6, 0.0112952, 1, 0, 0.639711,0.00149865) , 
6, 0.0110324, 1, 0, 0.488146,-2.66525e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657945,-0.0287979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651492,-0.0131772) , 
3, 32.4713, 1, 0, 0.654037,-0.00462285) , 
6, 0.0115964, 1, 0, 0.499089,-0.000307424)    );
  // itree = 498
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.266905,-0.0118739) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953717,0.0266752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013117) , 
0, 0.00466298, 1, 0, 0.178654,7.2582e-05) , 
4, 0.00116115, 1, 0, 0.186866,3.58782e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840586,-0.0169671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917948,0.0192267) , 
4, 0.00498026, 1, 0, 0.859147,-0.000429811) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.400378,-0.0358804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0953898) , 
5, 0.00584708, 1, 0, 0.661824,-0.00240738) , 
4, 0.00568888, 1, 0, 0.82614,-0.000760608) , 
7, 7.10747e-06, 1, 0, 0.506763,-0.000378821)    );
  // itree = 499
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0332921,-0.0113134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843948,0.0363566) , 
7, 9.60121e-07, 1, 0, 0.371603,0.000121864) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.588485,-0.0204655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313267,0.00432557) , 
6, 0.00844522, 1, 0, 0.442739,-0.000446783) , 
6, 0.00695539, 1, 0, 0.400117,-0.000106073) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851678,-0.0312747) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903405,-0.0271236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851205,-0.0081654) , 
3, 21.856, 1, 0, 0.85862,-0.00112253) , 
3, 11.2091, 1, 0, 0.857617,-0.00234436) , 
7, 2.13905e-05, 1, 0, 0.502561,-0.000607273)    );
  // itree = 500
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666227,-0.0305744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552471,0.00282792) , 
3, 37.798, 1, 0, 0.606133,-0.00075667) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472998,-0.0346972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435811,0.014568) , 
3, 12.5265, 1, 0, 0.44163,0.000172203) , 
5, 0.00324351, 1, 0, 0.487013,-8.40552e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947232,0.0408675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977513,-0.00672883) , 
6, 0.0115183, 1, 0, 0.96473,0.000255629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292258,0.030586) , 
2, 0.0237528, 1, 0, 0.631276,0.00146039) , 
6, 0.0110166, 1, 0, 0.504755,0.000105885)    );
  // itree = 501
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470488,0.0128803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433142,-0.0222825) , 
3, 33.0476, 1, 0, 0.455012,-0.000346319) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993646,-0.00737564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.380769,-0.0154635) , 
2, 0.0236511, 1, 0, 0.840377,-0.00260718) , 
7, 2.21509e-05, 1, 0, 0.538169,-0.000834183) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545509,0.0363794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014274) , 
2, 0.19036, 1, 0, 0.305638,5.36463e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0882691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570641,0.0428912) , 
2, 0.0234564, 1, 0, 0.840448,0.00261786) , 
7, 2.19616e-05, 1, 0, 0.415447,0.000580136) , 
3, 63.0911, 1, 0, 0.497143,-0.000361376)    );
  // itree = 502
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509955,-0.00962318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72735,-0.0212396) , 
5, 0.00239614, 1, 0, 0.604773,-0.00102959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230756,-0.0107079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484955,0.0120539) , 
6, 0.00811462, 1, 0, 0.313335,3.49564e-05) , 
5, 0.00335415, 1, 0, 0.411802,-0.000324719) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889613,-0.0276613) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96135,-0.0402419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723751,0.0047317) , 
0, 0.00166443, 1, 0, 0.825885,-0.00212437) , 
6, 0.0100404, 1, 0, 0.838746,-0.0037133) , 
7, 2.19618e-05, 1, 0, 0.504798,-0.00106281)    );
  // itree = 503
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98683,-0.0107333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973301,-0.044655) , 
4, 0.00579264, 1, 0, 0.986114,-0.000712758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61669,-0.0165891) , 
0, 0.00221886, 1, 0, 0.965349,-0.0012145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133394) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000337258,0.202835) , 
6, 0.00869352, 1, 0, 9.11759e-05,7.63131e-05) , 
2, 0.118975, 1, 0, 7.0916e-05,-8.94367e-05) , 
0, 0.00466573, 1, 0, 0.496703,-0.00066828)    );
  // itree = 504
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954623,0.0208282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000417486,-0.012003) , 
2, 0.0237863, 1, 0, 0.467007,-2.16937e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842784,0.0433634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851458,0.0196535) , 
3, 13.0943, 1, 0, 0.84683,0.00131741) , 
7, 2.22501e-05, 1, 0, 0.54512,0.000253702) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564368,-0.0132857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282664,0.0155336) , 
5, 0.00336556, 1, 0, 0.373121,-0.000210716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985616,0.07361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75116,-0.019343) , 
0, 0.001541, 1, 0, 0.853714,-0.00196622) , 
7, 2.2045e-05, 1, 0, 0.473582,-0.00057768) , 
3, 24.9905, 1, 0, 0.495386,-0.000324287)    );
  // itree = 505
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.312084,-0.026143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606033,0.0486132) , 
6, 0.0050261, 1, 0, 0.45674,-2.45843e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672165,-0.0121237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686222,-0.046606) , 
1, 1.404, 1, 0, 0.674613,-0.00180568) , 
6, 0.00811903, 1, 0, 0.545195,-0.0007477) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553523,0.00362174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881374,0.0537856) , 
7, 2.25034e-05, 1, 0, 0.627266,0.000709144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.58519,-0.0543372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00123432,0.000686119) , 
2, 0.0475551, 1, 0, 0.118924,-0.000544251) , 
4, 0.00580471, 1, 0, 0.44381,0.000256804) , 
3, 50.3938, 1, 0, 0.50113,-0.00031111)    );
  // itree = 506
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554512,-0.0985483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523669,-0.000498871) , 
3, 4.20926, 1, 0, 0.525635,-0.000124579) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.20901,-0.00569006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861642,-0.0255783) , 
7, 1.8724e-05, 1, 0, 0.329037,-0.000857743) , 
3, 88.3233, 1, 0, 0.489763,-0.000258356) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625118,-0.000184066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690049,-0.0215049) , 
1, 1.0735, 1, 0, 0.650398,-0.00154787) , 
6, 0.0115963, 1, 0, 0.50011,-0.00034142)    );
  // itree = 507
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963677,0.0370251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131199) , 
0, 0.00465918, 1, 0, 0.222656,3.74307e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828855,-0.0107821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915519,-0.0366804) , 
1, 1.84501, 1, 0, 0.840448,-0.00141152) , 
7, 7.30611e-06, 1, 0, 0.539379,-0.0007054) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.382083,0.0249412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261117,-0.00869857) , 
3, 82.3222, 1, 0, 0.305096,-7.50603e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.855176,0.00721655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854542,0.151265) , 
4, 0.00536442, 1, 0, 0.854844,0.00209265) , 
7, 2.20447e-05, 1, 0, 0.415902,0.000361858) , 
3, 63.0911, 1, 0, 0.498814,-0.000354776)    );
  // itree = 508
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902008,0.00426844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.25276,-0.0133309) , 
5, 0.00219169, 1, 0, 0.591682,-0.000235987) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000307955,0.119378) , 
3, 75.4436, 1, 0, 9.61518e-05,6.03532e-05) , 
2, 0.071385, 1, 0, 0.153271,-1.6376e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859632,-0.00405807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477386,-0.01626) , 
5, 0.00590324, 1, 0, 0.811309,-0.00062794) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888339,-0.0480016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892721,-0.00409043) , 
3, 42.0842, 1, 0, 0.890285,-0.00629864) , 
1, 1.89377, 1, 0, 0.82353,-0.0015054) , 
7, 5.71731e-06, 1, 0, 0.497973,-0.000782156)    );
  // itree = 509
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980397,0.00547296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698358,-0.0155485) , 
2, 0.0112915, 1, 0, 0.90882,-0.000715561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00122901,0.0517573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131998) , 
2, 0.220139, 1, 0, 0.000488312,9.39708e-05) , 
2, 0.0476103, 1, 0, 0.477933,-0.000331542) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660851,0.0381858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643684,-0.00963399) , 
3, 22.0607, 1, 0, 0.650986,0.000253675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614063,-0.0568956) , 
3, 57.896, 1, 0, 0.636535,-0.00211608) , 
6, 0.0110166, 1, 0, 0.496889,-0.000544823)    );
  // itree = 510
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971589,0.0580389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131283) , 
0, 0.00464428, 1, 0, 0.459468,0.000416206) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.402322,-0.0136721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309518,0.00270886) , 
3, 60.4591, 1, 0, 0.328096,-0.000205732) , 
3, 50.2798, 1, 0, 0.401383,0.000141224) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996056,0.0390331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987274,-0.0230574) , 
1, 1.24394, 1, 0, 0.993979,-0.000723998) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.402064,-0.0151424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542414,-0.0125465) , 
3, 61.1473, 1, 0, 0.466231,-0.0049629) , 
2, 0.0237746, 1, 0, 0.84729,-0.00190221) , 
7, 2.2045e-05, 1, 0, 0.494859,-0.000287144)    );
  // itree = 511
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976572,0.044449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951466,-0.0216411) , 
3, 82.9948, 1, 0, 0.973357,-2.50641e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850121,-0.0335185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892631,-0.0203262) , 
4, 0.00468049, 1, 0, 0.876835,-0.00278416) , 
2, 0.011277, 1, 0, 0.952454,-0.000622559) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833883,0.0741677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.18742,-0.00195916) , 
2, 0.0302386, 1, 0, 0.413299,0.00240442) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000856128,-0.0114711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130923) , 
0, 0.0328076, 1, 0, 0.000201183,-0.000283803) , 
2, 0.0691267, 1, 0, 0.0603066,0.000107331) , 
2, 0.023795, 1, 0, 0.50281,-0.000254694)    );
  // itree = 512
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980626,0.0286403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0164059) , 
0, 0.00369702, 1, 0, 0.705593,0.000378554) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.020676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130919) , 
2, 0.190426, 1, 0, 0,-0.000335777) , 
5, 0.0053407, 1, 0, 0.471582,0.000141645) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638817,-0.00318576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628648,0.0207431) , 
1, 1.08284, 1, 0, 0.633593,0.000273712) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620735,0.00904651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553258,-0.059715) , 
3, 48.5403, 1, 0, 0.590292,-0.0039401) , 
1, 1.13372, 1, 0, 0.61717,-0.00132444) , 
6, 0.0104369, 1, 0, 0.498025,-0.000124636)    );
  // itree = 513
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977302,0.0321652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906021,-0.0147543) , 
2, 0.0120443, 1, 0, 0.967525,0.000127623) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840103,0.0690574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478723,0.000541308) , 
2, 0.026474, 1, 0, 0.677504,0.00175785) , 
2, 0.018078, 1, 0, 0.922036,0.000383322) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000163176,0.0252303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000705059,-0.00770982) , 
6, 0.00529453, 1, 0, 0.000385234,6.53625e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000686581,-0.0110291) , 
6, 0.00926717, 1, 0, 0.000451254,-0.000266309) , 
2, 0.04759, 1, 0, 0.50205,8.72714e-05)    );
  // itree = 514
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999454,-0.0772702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995013,0.078772) , 
2, 0.0138811, 1, 0, 0.998656,7.39523e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891213,-0.0370416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940667,-0.0112981) , 
0, 0.000857689, 1, 0, 0.93548,-0.0022131) , 
0, 0.000221887, 1, 0, 0.966746,-0.00108122) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132033) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000171538,0.102733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013092) , 
0, 0.0401845, 1, 0, 4.70129e-05,3.0233e-05) , 
2, 0.119065, 1, 0, 3.61832e-05,-7.09516e-05) , 
0, 0.00466029, 1, 0, 0.502762,-0.000596328)    );
  // itree = 515
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968356,0.00501516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552319,0.0138506) , 
2, 0.0226157, 1, 0, 0.933275,0.000336651) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000327008,-0.0128837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013092) , 
0, 0.041906, 1, 0, 0.000114801,-0.000445741) , 
2, 0.0476074, 1, 0, 0.549799,1.51316e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.386074,-0.0126508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338298,0.00118746) , 
4, 0.00233531, 1, 0, 0.34558,-0.000301676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585938,-0.0188396) , 
6, 0.0104374, 1, 0, 0.390751,-0.000761438) , 
3, 75.708, 1, 0, 0.509257,-0.000182815)    );
  // itree = 516
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522356,-0.00640759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390551,-0.0152325) , 
3, 49.5905, 1, 0, 0.466906,-0.00085549) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.371746,0.0486902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386165,-0.00285209) , 
4, 0.00289951, 1, 0, 0.383187,3.89929e-05) , 
5, 0.00225228, 1, 0, 0.397383,-0.000112678) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930138,-0.0280093) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849755,0.0201094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804799,-0.0151977) , 
5, 0.00568076, 1, 0, 0.83046,-0.000352728) , 
6, 0.0100158, 1, 0, 0.850108,-0.00148639) , 
7, 2.18118e-05, 1, 0, 0.493883,-0.000405488)    );
  // itree = 517
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.451258,-0.00200535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467929,-0.026987) , 
3, 30.5264, 1, 0, 0.454088,-0.000522854) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973111,0.00895463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132111) , 
0, 0.00465677, 1, 0, 0.354234,9.16526e-05) , 
3, 37.7108, 1, 0, 0.398511,-0.000180832) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900121,-0.0310126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90415,-0.0287978) , 
3, 53.7661, 1, 0, 0.901602,-0.00492487) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783532,0.00948338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792392,-0.0142021) , 
6, 0.0116987, 1, 0, 0.786341,5.85119e-08) , 
6, 0.0105047, 1, 0, 0.833941,-0.00203385) , 
7, 2.13905e-05, 1, 0, 0.497311,-0.000601283)    );
  // itree = 518
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703595,-0.00272521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641918,-0.0190647) , 
3, 25.1997, 1, 0, 0.662866,-0.00121085) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972858,0.00974629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.45556e-05,-0.0112312) , 
0, 0.00467007, 1, 0, 0.32159,4.83322e-05) , 
5, 0.00435088, 1, 0, 0.481016,-0.00053989) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689174,0.013713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660689,-0.00304829) , 
3, 36.5857, 1, 0, 0.671932,0.000246705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597307,-0.0503525) , 
1, 1.10987, 1, 0, 0.649695,-0.00437188) , 
6, 0.0110166, 1, 0, 0.500884,-0.000991241)    );
  // itree = 519
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971084,0.026477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132048) , 
0, 0.00464428, 1, 0, 0.448626,0.000277284) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.525668,-0.0141281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.236306,-0.00313052) , 
5, 0.0033786, 1, 0, 0.327063,-0.000536172) , 
3, 49.9734, 1, 0, 0.394822,-8.27543e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.08729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957644,-0.0298412) , 
0, 0.00212153, 1, 0, 0.992291,-0.000470276) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.512986,0.000373941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384261,-0.014399) , 
1, 1.12949, 1, 0, 0.448894,-0.00459241) , 
2, 0.0237819, 1, 0, 0.841517,-0.00161403) , 
7, 2.13905e-05, 1, 0, 0.494798,-0.000425475)    );
  // itree = 520
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.536649,-0.00996905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510095,-0.0456455) , 
3, 45.6656, 1, 0, 0.53453,-0.000560897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687495,-0.0312482) , 
6, 0.0115967, 1, 0, 0.543535,-0.000867116) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999315,0.0211476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.776958,0.0290758) , 
2, 0.0224609, 1, 0, 0.966698,0.00120824) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130921) , 
2, 0.214024, 1, 0, 0,-0.000250402) , 
0, 0.00465677, 1, 0, 0.433298,0.000403399) , 
3, 50.4741, 1, 0, 0.49551,-0.000313618)    );
  // itree = 521
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413117,-0.00507424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595868,-0.0164812) , 
6, 0.0082842, 1, 0, 0.425484,-0.000230893) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978707,0.0744108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132228) , 
0, 0.00463176, 1, 0, 0.302213,0.000160528) , 
6, 0.00869808, 1, 0, 0.403224,-0.000160211) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774496,-0.0285844) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846112,0.0463469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868063,-0.0203801) , 
4, 0.00531924, 1, 0, 0.858709,-0.000929888) , 
7, 2.32647e-05, 1, 0, 0.848877,-0.00168445) , 
7, 2.18118e-05, 1, 0, 0.501215,-0.000495363)    );
  // itree = 522
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683835,-0.00986532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60674,-0.0203312) , 
3, 86.9062, 1, 0, 0.673298,-0.000529121) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867245,-0.00303524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787001,-0.0481236) , 
3, 52.1295, 1, 0, 0.834933,-0.00537012) , 
7, 2.59345e-05, 1, 0, 0.69186,-0.00108507) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0214619) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739121,0.0813184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141793) , 
2, 0.0714177, 1, 0, 0.274003,0.000580102) , 
4, 0.00521854, 1, 0, 0.185744,0.000177602) , 
5, 0.00556888, 1, 0, 0.498002,-0.000601429)    );
  // itree = 523
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472374,0.0191469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467797,-0.00418714) , 
3, 6.60859, 1, 0, 0.470178,4.02379e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874376,0.0853512) , 
7, 2.28282e-05, 1, 0, 0.550412,0.000606546) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554639,-0.00900779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0509173,-0.00353739) , 
5, 0.00225476, 1, 0, 0.16468,-9.93058e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.804463,-0.011627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898429,-0.0313821) , 
1, 1.86287, 1, 0, 0.816934,-0.00113718) , 
7, 6.56004e-06, 1, 0, 0.490399,-0.000617594) , 
3, 12.6173, 1, 0, 0.499707,-0.000427729)    );
  // itree = 524
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.797714,0.0127909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013844) , 
2, 0.0238052, 1, 0, 0.146053,-8.43309e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901031,-0.00899052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794092,-0.0182362) , 
4, 0.00358047, 1, 0, 0.866902,-0.000883434) , 
7, 4.69394e-06, 1, 0, 0.39903,-0.00036477) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974811,0.00863762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699685,0.0371701) , 
2, 0.0233765, 1, 0, 0.930901,0.00102274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00112289,-0.0112018) , 
2, 0.0712716, 1, 0, 0.628402,0.000501804) , 
6, 0.00811799, 1, 0, 0.495453,-4.79726e-07)    );
  // itree = 525
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974158,-0.0138931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865542,-0.0353158) , 
2, 0.0113351, 1, 0, 0.952269,-0.00146947) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0187598,-0.00548804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209422,0.0101474) , 
6, 0.0104917, 1, 0, 0.0394711,-1.77921e-06) , 
2, 0.0238052, 1, 0, 0.491585,-0.000728734) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645502,-0.0259934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663037,-0.0408098) , 
1, 1.0735, 1, 0, 0.652558,-0.00699872) , 
6, 0.0115963, 1, 0, 0.502488,-0.00115341)    );
  // itree = 526
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.733502,-0.0135823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.54662e-05,-0.000493739) , 
2, 0.04759, 1, 0, 0.196938,-0.000182545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812846,0.0239538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76152,-0.00269631) , 
3, 74.5507, 1, 0, 0.802802,0.000375561) , 
7, 7.73499e-06, 1, 0, 0.405551,9.62309e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905709,-0.0129755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819649,-0.0608918) , 
4, 0.00532295, 1, 0, 0.88489,-0.00402281) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836149,0.0253318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781776,-0.018364) , 
4, 0.00585413, 1, 0, 0.810378,4.19317e-06) , 
6, 0.0111149, 1, 0, 0.854207,-0.00236454) , 
7, 2.20449e-05, 1, 0, 0.499576,-0.000487933)    );
  // itree = 527
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.461612,-5.43121e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461174,-0.037831) , 
3, 25.2365, 1, 0, 0.46148,-0.00100975) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76671,0.0133785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142025) , 
2, 0.09518, 1, 0, 0.366625,4.19659e-05) , 
3, 37.8545, 1, 0, 0.408498,-0.0004223) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834781,-0.0657624) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843129,-0.029999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849038,0.00571606) , 
4, 0.00539032, 1, 0, 0.845995,-0.00241811) , 
3, 12.6113, 1, 0, 0.844257,-0.00341223) , 
7, 2.19617e-05, 1, 0, 0.502976,-0.00107056)    );
  // itree = 528
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657735,-0.0146205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792115,-0.0453871) , 
5, 0.00403553, 1, 0, 0.669335,-0.00115359) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.317104,0.0109029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163035,-0.0185958) , 
3, 100.565, 1, 0, 0.291231,-3.41851e-05) , 
5, 0.00423691, 1, 0, 0.468899,-0.000560185) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991437,0.0737464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947406,-0.0844249) , 
1, 1.15591, 1, 0, 0.979066,-0.000718761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.187115,-0.0243614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300125,-0.0196592) , 
6, 0.0114328, 1, 0, 0.237658,-0.00459633) , 
2, 0.0236584, 1, 0, 0.612928,-0.00263366) , 
6, 0.0104373, 1, 0, 0.495043,-0.000936566)    );
  // itree = 529
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517213,-0.00301554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752486,-0.0171378) , 
7, 7.1346e-06, 1, 0, 0.602579,-0.000685625) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979279,0.0349765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131688) , 
0, 0.00467007, 1, 0, 0.273738,0.000137083) , 
5, 0.00342916, 1, 0, 0.38777,-0.000148208) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838395,-0.0737732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839217,-0.00252056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861414,-0.0260774) , 
3, 93.4954, 1, 0, 0.842922,-0.000841047) , 
3, 12.2301, 1, 0, 0.842205,-0.00217291) , 
7, 2.13905e-05, 1, 0, 0.488298,-0.000596102)    );
  // itree = 530
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.496193,0.0114937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.305657,-0.0159085) , 
3, 87.9865, 1, 0, 0.461859,-5.42155e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656074,-0.000633189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546504,0.126127) , 
3, 62.1542, 1, 0, 0.618893,0.000891166) , 
6, 0.00996716, 1, 0, 0.481714,6.53139e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.612548,0.0561478) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981658,-0.00375706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300442,-0.0214333) , 
2, 0.0237819, 1, 0, 0.631727,-0.00212269) , 
6, 0.0113507, 1, 0, 0.626804,-0.00116601) , 
6, 0.0110166, 1, 0, 0.499293,-8.3873e-05)    );
  // itree = 531
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982778,0.0218559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660829,0.0346815) , 
2, 0.0156682, 1, 0, 0.936521,0.000515526) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971523,-0.0157951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804758,-0.0216661) , 
2, 0.00903902, 1, 0, 0.907873,-0.00183153) , 
3, 25.053, 1, 0, 0.917299,-0.00105929) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00499612,0.00702322) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130919) , 
2, 0.176937, 1, 0, 0,-1.96328e-05) , 
0, 0.0280422, 1, 0, 0.0010573,0.000143324) , 
2, 0.0476074, 1, 0, 0.498579,-0.000509698)    );
  // itree = 532
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570444,0.022775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442786,-0.0110522) , 
3, 50.0092, 1, 0, 0.517138,-0.000177759) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957471,-0.0348005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814182,-0.0158585) , 
6, 0.00671893, 1, 0, 0.835498,-0.00191579) , 
7, 9.44314e-06, 1, 0, 0.658734,-0.00095078) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.171691,0.00703996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707997,-0.00873162) , 
6, 0.00985775, 1, 0, 0.391633,-0.000257417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.214541,0.0539635) , 
3, 112.746, 1, 0, 0.368724,-5.42856e-05) , 
5, 0.00450123, 1, 0, 0.497398,-0.000452051)    );
  // itree = 533
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.541733,0.00265052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525507,-0.017253) , 
3, 26.8387, 1, 0, 0.533404,-0.000567956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.284002,0.00281141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869317,0.0482769) , 
7, 1.85845e-05, 1, 0, 0.410996,0.000315832) , 
3, 62.6353, 1, 0, 0.493659,-0.000281) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618887,0.0546676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647698,0.0174089) , 
3, 34.7662, 1, 0, 0.636218,0.00181627) , 
6, 0.0115963, 1, 0, 0.503427,-0.000137298)    );
  // itree = 534
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948229,-0.0153734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131132) , 
0, 0.00466574, 1, 0, 0.166456,-0.000205385) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.302116,-0.0124513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874591,0.0280044) , 
1, 1.36533, 1, 0, 0.80322,0.00049216) , 
7, 6.42573e-06, 1, 0, 0.398452,4.8755e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829467,-0.0212273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81331,0.00134542) , 
3, 12.2092, 1, 0, 0.815705,-0.000594052) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95448,0.0621657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848837,-0.0251748) , 
6, 0.00962964, 1, 0, 0.899528,-0.00509712) , 
1, 1.24304, 1, 0, 0.835277,-0.00164546) , 
7, 2.13905e-05, 1, 0, 0.496773,-0.000332584)    );
  // itree = 535
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.49233,0.0269031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445436,-0.00716268) , 
3, 7.20134, 1, 0, 0.470707,3.10116e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855176,-0.065883) , 
7, 2.2721e-05, 1, 0, 0.546847,-0.00141789) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627452,-0.00134223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779772,-0.0184825) , 
7, 2.37549e-05, 1, 0, 0.642649,-0.000358193) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962877,0.0428612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135959) , 
0, 0.00466029, 1, 0, 0.272222,0.000427204) , 
4, 0.00521886, 1, 0, 0.489453,-3.33799e-05) , 
3, 12.6014, 1, 0, 0.498584,-0.000253626)    );
  // itree = 536
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.460049,-0.0094941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658487,-0.0201046) , 
6, 0.00998989, 1, 0, 0.473316,-0.000510105) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587018,0.0388767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564306,-0.00833882) , 
6, 0.0113333, 1, 0, 0.58135,0.0004855) , 
6, 0.0104917, 1, 0, 0.486265,-0.000390771) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6711,-0.0334587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689083,0.00703181) , 
3, 36.0335, 1, 0, 0.681551,-0.00329493) , 
6, 0.0115963, 1, 0, 0.498713,-0.00057588)    );
  // itree = 537
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80683,0.0154902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132623) , 
2, 0.071385, 1, 0, 0.392671,8.54255e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608248,-0.024605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334995,0.0197959) , 
6, 0.00840768, 1, 0, 0.428508,-0.000290173) , 
6, 0.00752259, 1, 0, 0.404331,-3.67861e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866243,0.00988665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826603,-0.0187954) , 
6, 0.0110618, 1, 0, 0.850512,-0.000725076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797237,-0.0200407) , 
3, 94.0821, 1, 0, 0.84267,-0.00150284) , 
7, 2.13905e-05, 1, 0, 0.504001,-0.000370136)    );
  // itree = 538
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953566,-0.0249934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220592,0.00178226) , 
2, 0.0238052, 1, 0, 0.52784,-0.000515013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969884,0.024325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131423) , 
0, 0.00466298, 1, 0, 0.424004,0.000340907) , 
3, 50.2798, 1, 0, 0.482801,-0.000143757) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623636,-0.0266625) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583905,-0.0208591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645303,0.0341318) , 
3, 54.6118, 1, 0, 0.616009,-0.000575841) , 
3, 23.1665, 1, 0, 0.618031,-0.00246269) , 
6, 0.0110168, 1, 0, 0.49891,-0.000419998)    );
  // itree = 539
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975912,-0.0105427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926568,-0.0260483) , 
3, 97.4356, 1, 0, 0.972222,-0.000528225) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943182,-0.0335451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891882,-0.0174482) , 
2, 0.0125209, 1, 0, 0.91043,-0.00403295) , 
2, 0.00902158, 1, 0, 0.954787,-0.00151711) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562649,0.0119166) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00309127,-0.00976111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013093) , 
0, 0.0327137, 1, 0, 0.000725707,-0.000280962) , 
2, 0.0464739, 1, 0, 0.0585882,-1.80449e-05) , 
2, 0.0238037, 1, 0, 0.502384,-0.000760379)    );
  // itree = 540
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710303,-0.00246195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154375,-0.0265423) , 
6, 0.0062886, 1, 0, 0.582908,-0.00076797) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624927,0.0119995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142908,-0.0565363) , 
4, 0.00521798, 1, 0, 0.436354,-3.67338e-05) , 
5, 0.00326034, 1, 0, 0.477496,-0.000242014) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674819,-0.0201733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605784,-0.0162214) , 
3, 32.8929, 1, 0, 0.631111,-0.00385954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664228,0.020733) , 
6, 0.0117363, 1, 0, 0.643983,-0.00187894) , 
6, 0.0110166, 1, 0, 0.497296,-0.000436683)    );
  // itree = 541
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952262,0.0211427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00247687,-0.00870257) , 
2, 0.0236439, 1, 0, 0.476189,1.44807e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986793,0.000588958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797049,0.0444786) , 
0, 0.0013385, 1, 0, 0.882721,0.00103142) , 
7, 2.34421e-05, 1, 0, 0.5523,0.000204873) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.168113,-0.00534388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821291,-0.0179039) , 
7, 5.71741e-06, 1, 0, 0.529504,-0.00136946) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820085,0.0350068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000127967,-0.00872979) , 
2, 0.0950288, 1, 0, 0.410312,0.000223205) , 
3, 70.8994, 1, 0, 0.482365,-0.000739584) , 
3, 25.2345, 1, 0, 0.504108,-0.000445957)    );
  // itree = 542
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694355,-0.0104348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564581,0.0162309) , 
6, 0.00634717, 1, 0, 0.643847,-0.000205082) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718364,-0.0282376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752754,-0.00268199) , 
5, 0.00410222, 1, 0, 0.739295,-0.00262408) , 
5, 0.00385686, 1, 0, 0.66726,-0.00079844) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935166,0.030598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131822) , 
0, 0.00933147, 1, 0, 0.290391,0.000291264) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.725452,0.00637227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644021,-0.0467289) , 
1, 1.10994, 1, 0, 0.702454,-0.00119488) , 
6, 0.0110168, 1, 0, 0.374761,-1.30252e-05) , 
5, 0.00450026, 1, 0, 0.504748,-0.000362066)    );
  // itree = 543
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.542914,0.0047048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708977,-0.0205979) , 
7, 7.19338e-06, 1, 0, 0.59695,-0.00107876) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905802,0.0100351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0009024,-0.00871499) , 
2, 0.04759, 1, 0, 0.450912,5.30263e-05) , 
5, 0.00328997, 1, 0, 0.489462,-0.000245732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675376,-0.00911338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629666,-0.0381044) , 
3, 52.1612, 1, 0, 0.655384,-0.00205638) , 
6, 0.0115964, 1, 0, 0.500528,-0.000366499)    );
  // itree = 544
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510252,-0.0101212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719082,0.0277585) , 
4, 0.00259868, 1, 0, 0.630373,0.00018086) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715803,-0.0317346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68556,0.00850756) , 
3, 47.8899, 1, 0, 0.703066,-0.00262135) , 
4, 0.00419716, 1, 0, 0.642711,-0.000294763) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0916898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870392,0.0255992) , 
2, 0.0229078, 1, 0, 0.974777,0.00133977) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130922) , 
2, 0.166626, 1, 0, 0,-8.92133e-05) , 
0, 0.00466015, 1, 0, 0.377959,0.00046486) , 
4, 0.00463913, 1, 0, 0.507717,9.25605e-05)    );
  // itree = 545
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491883,-0.00286369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504526,-0.0193271) , 
3, 24.9872, 1, 0, 0.495656,-0.000522406) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.204785,-0.0103853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494791,0.0147697) , 
6, 0.0045575, 1, 0, 0.37281,0.000114424) , 
3, 37.4813, 1, 0, 0.426098,-0.00016182) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978708,0.0601406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198624,-0.0096223) , 
2, 0.023795, 1, 0, 0.627303,-0.000538434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63038,-0.0759897) , 
1, 1.38591, 1, 0, 0.627534,-0.00101471) , 
6, 0.00869846, 1, 0, 0.498643,-0.000468976)    );
  // itree = 546
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658774,-0.0133956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.310981,0.00754679) , 
5, 0.00434692, 1, 0, 0.472468,-0.00031276) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641539,-0.0153866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598159,-0.0586222) , 
3, 44.4234, 1, 0, 0.619984,-0.00466425) , 
6, 0.0110439, 1, 0, 0.48071,-0.000555886) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632159,0.026986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622351,0.059006) , 
6, 0.0119002, 1, 0, 0.627661,0.00123516) , 
6, 0.0115964, 1, 0, 0.490229,-0.000439863)    );
  // itree = 547
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619343,0.00972131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546705,-0.024732) , 
7, 9.85263e-06, 1, 0, 0.608462,-0.000437322) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972454,0.0190699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131466) , 
0, 0.00466573, 1, 0, 0.306108,0.000138004) , 
5, 0.00336165, 1, 0, 0.407461,-5.48522e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821752,-0.0275974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877809,-0.0570668) , 
1, 1.13901, 1, 0, 0.854691,-0.00486353) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712934,-0.0250008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887329,0.00413941) , 
5, 0.00496212, 1, 0, 0.85116,-0.00096201) , 
3, 25.2091, 1, 0, 0.85227,-0.00218803) , 
7, 2.1881e-05, 1, 0, 0.503437,-0.000515125)    );
  // itree = 548
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986457,0.0181451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955771,-0.00373517) , 
5, 0.0042078, 1, 0, 0.975184,0.000129835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901235,-0.0401094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865476,-0.0128729) , 
2, 0.0136515, 1, 0, 0.875338,-0.00444851) , 
2, 0.011277, 1, 0, 0.95322,-0.00087729) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.321181,0.0164071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461659,-0.000729393) , 
3, 75.8598, 1, 0, 0.369545,0.00195409) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000793029,-0.0133955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130923) , 
0, 0.0327274, 1, 0, 0.00019775,-0.000315219) , 
2, 0.0691267, 1, 0, 0.0565141,3.07944e-05) , 
2, 0.023795, 1, 0, 0.497025,-0.000415307)    );
  // itree = 549
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648774,-0.00465212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77755,-0.0220384) , 
5, 0.0037554, 1, 0, 0.679927,-0.000650341) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849905,0.023685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00043126,-0.0131784) , 
2, 0.04759, 1, 0, 0.320611,7.4172e-05) , 
5, 0.0043821, 1, 0, 0.491256,-0.000269911) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980327,0.0101027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98605,0.0784413) , 
8, 0.0115045, 1, 0, 0.983361,0.000264562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283242,-0.0283191) , 
2, 0.0237819, 1, 0, 0.638196,-0.00389521) , 
6, 0.0110169, 1, 0, 0.509612,-0.000722798)    );
  // itree = 550
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963868,0.00479469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614884,0.0384771) , 
2, 0.0181173, 1, 0, 0.914515,0.000470409) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000123761,0.0108424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00187391,-0.00711456) , 
6, 0.00717335, 1, 0, 0.000753011,-0.00013606) , 
2, 0.0476103, 1, 0, 0.488502,0.000187662) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639531,-0.0323031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6744,0.0706391) , 
1, 1.06242, 1, 0, 0.660622,-0.00255959) , 
6, 0.0115963, 1, 0, 0.499725,8.52069e-06)    );
  // itree = 551
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.277252,-0.00798432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506024,0.0441082) , 
6, 0.00516312, 1, 0, 0.336704,1.99814e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85153,-0.0132752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131081) , 
0, 0.0233149, 1, 0, 0.47405,-0.000658503) , 
6, 0.00637897, 1, 0, 0.400306,-0.000294209) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918739,-0.0197477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528614,-0.0384469) , 
6, 0.0106437, 1, 0, 0.83946,-0.00404522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980869,-0.00308988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568721,0.029674) , 
2, 0.0236918, 1, 0, 0.844963,0.00125535) , 
4, 0.00543886, 1, 0, 0.841838,-0.00175482) , 
7, 2.13905e-05, 1, 0, 0.501367,-0.000628526)    );
  // itree = 552
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.191002,-0.00482813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863886,-0.00940582) , 
7, 6.03803e-06, 1, 0, 0.417965,-0.000278453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664761,0.0304386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441685,-0.00563639) , 
3, 99.9494, 1, 0, 0.633094,0.000396323) , 
6, 0.00844823, 1, 0, 0.47183,-0.0001095) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637263,-0.0215493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624941,-0.00728535) , 
1, 1.06695, 1, 0, 0.627159,-0.00099391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578384,-0.0414147) , 
3, 85.3359, 1, 0, 0.617579,-0.00218093) , 
6, 0.0104373, 1, 0, 0.498068,-0.000482399)    );
  // itree = 553
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421967,-0.00222663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834428,-0.0166882) , 
7, 6.04831e-06, 1, 0, 0.629684,-0.000798726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969177,0.036782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131268) , 
0, 0.00466298, 1, 0, 0.202227,0.000141965) , 
4, 0.00405739, 1, 0, 0.406137,-0.000306774) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830887,0.014166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796194,-0.0040963) , 
6, 0.0117024, 1, 0, 0.81621,0.000315879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889074,-0.0192465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856429,-0.0381977) , 
3, 67.1142, 1, 0, 0.879724,-0.00595713) , 
1, 1.15097, 1, 0, 0.849531,-0.00297511) , 
7, 2.20448e-05, 1, 0, 0.500718,-0.00087596)    );
  // itree = 554
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914567,0.0395385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135721) , 
2, 0.0238052, 1, 0, 0.329961,3.8502e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.516336,-0.0256564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579756,0.00747409) , 
6, 0.00655356, 1, 0, 0.568505,-0.000497955) , 
6, 0.00618559, 1, 0, 0.405488,-0.000131351) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644731,-0.00506277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625528,0.0204046) , 
1, 1.0822, 1, 0, 0.631295,0.000455822) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624642,-0.0190476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692178,-0.113152) , 
6, 0.0102021, 1, 0, 0.631907,-0.00283155) , 
1, 1.20222, 1, 0, 0.631643,-0.00141185) , 
6, 0.00811887, 1, 0, 0.500311,-0.000668239)    );
  // itree = 555
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267605,-0.0115545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529593,0.0286817) , 
6, 0.00496457, 1, 0, 0.365972,-2.29893e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593738,-0.0209303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.323769,0.00924991) , 
6, 0.00843698, 1, 0, 0.452167,-0.000918444) , 
6, 0.00694883, 1, 0, 0.399734,-0.000373733) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809799,0.0120372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863608,-0.0281874) , 
1, 1.12971, 1, 0, 0.843311,-0.0016917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859215,-0.0293034) , 
3, 97.5525, 1, 0, 0.845197,-0.00241965) , 
7, 2.13905e-05, 1, 0, 0.500768,-0.00083776)    );
  // itree = 556
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.29949,-0.0107778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.412193,-0.000348007) , 
4, 0.00116044, 1, 0, 0.404642,-4.9084e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.368566,0.00294304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607679,-0.0277072) , 
1, 1.47552, 1, 0, 0.400318,-0.000550227) , 
6, 0.00810091, 1, 0, 0.403536,-0.000177331) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862683,-0.0133665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851659,0.0255034) , 
3, 44.7396, 1, 0, 0.85976,-0.000823389) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.806794,-0.021856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871193,-0.0353162) , 
1, 1.18066, 1, 0, 0.834133,-0.00723862) , 
3, 67.1027, 1, 0, 0.852346,-0.0026794) , 
7, 2.18118e-05, 1, 0, 0.500284,-0.000716691)    );
  // itree = 557
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.377024,0.014425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255011,-0.00759225) , 
3, 50.2798, 1, 0, 0.322303,-3.23459e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861243,-0.00244844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931193,-0.0252479) , 
1, 1.56369, 1, 0, 0.871232,-0.000721158) , 
7, 1.33478e-05, 1, 0, 0.469336,-0.000216848) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616954,0.00410325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577452,-0.0294003) , 
6, 0.0119589, 1, 0, 0.610234,-0.000928592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621167,-0.116255) , 
1, 1.1783, 1, 0, 0.611824,-0.00232098) , 
6, 0.0104369, 1, 0, 0.494911,-0.000594506)    );
  // itree = 558
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.246535,-0.00532147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.469868,-0.0147406) , 
6, 0.0044976, 1, 0, 0.27205,-0.000144482) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580461,-0.00723812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493183,0.0546129) , 
3, 24.5, 1, 0, 0.521745,0.000297155) , 
6, 0.00497215, 1, 0, 0.365735,2.12187e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662687,0.000925311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625378,-0.0219672) , 
1, 1.55345, 1, 0, 0.656337,-0.000280747) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.612909,0.0134922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525864,-0.0225178) , 
1, 1.18024, 1, 0, 0.551544,-0.00168291) , 
3, 63.0066, 1, 0, 0.620959,-0.000754122) , 
6, 0.00695968, 1, 0, 0.500975,-0.000389625)    );
  // itree = 559
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558134,0.0650047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519397,-0.00257475) , 
3, 5.40997, 1, 0, 0.52218,-3.63555e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66586,0.0476928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695195,0.022144) , 
3, 37.8729, 1, 0, 0.680746,0.00146687) , 
6, 0.0115963, 1, 0, 0.532457,6.107e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.404277,-0.0482509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205473,0.0231321) , 
3, 135.202, 1, 0, 0.284165,-0.00179298) , 
3, 113.557, 1, 0, 0.508494,-0.000117869)    );
  // itree = 560
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970362,0.0192017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976421,-0.0152601) , 
5, 0.00514667, 1, 0, 0.971032,0.00032897) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013092) , 
2, 0.119065, 1, 0, 0,-0.000131671) , 
0, 0.00466573, 1, 0, 0.477839,9.50075e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666798,0.00550006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625313,-0.021072) , 
3, 61.0092, 1, 0, 0.651414,-0.000849127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571755,-0.0377364) , 
1, 1.11925, 1, 0, 0.63446,-0.00351635) , 
6, 0.0110166, 1, 0, 0.496328,-0.000331318)    );
  // itree = 561
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93809,0.0457294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132053) , 
2, 0.0237717, 1, 0, 0.443838,0.000131881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.369485,-0.0141909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.287474,-0.00165176) , 
3, 60.4546, 1, 0, 0.303692,-0.000362983) , 
3, 50.2793, 1, 0, 0.382961,-8.30807e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780454,0.0014821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769505,-0.025803) , 
3, 25.2004, 1, 0, 0.773074,-0.00236116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821175,0.00408748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139883) , 
2, 0.0712128, 1, 0, 0.368566,-0.000162451) , 
5, 0.00560191, 1, 0, 0.619769,-0.00152787) , 
6, 0.00753827, 1, 0, 0.494725,-0.000764963)    );
  // itree = 562
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998665,0.0770603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969999,-0.013873) , 
0, 0.000211059, 1, 0, 0.985047,-0.000580441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389342,-0.0162469) , 
0, 0.00221611, 1, 0, 0.931526,-0.00101617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130918) , 
4, 0.00521859, 1, 0, 0,-1.0009e-05) , 
2, 0.119026, 1, 0, 0,-9.71934e-05) , 
0, 0.00934014, 1, 0, 0.493995,-0.000584531)    );
  // itree = 563
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971758,0.0241923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136273) , 
0, 0.00462009, 1, 0, 0.540703,0.000239197) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.512065,-0.0133041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42165,0.00139312) , 
3, 59.4854, 1, 0, 0.453751,-0.000304446) , 
3, 37.855, 1, 0, 0.492463,-6.24062e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993093,0.0334581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303896,-0.0280368) , 
2, 0.023674, 1, 0, 0.636584,-0.00409923) , 
6, 0.0115965, 1, 0, 0.502347,-0.000339247)    );
  // itree = 564
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966192,-0.0091024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131174) , 
0, 0.00464415, 1, 0, 0.313687,-0.000219338) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575033,0.0259987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377241,-0.00410403) , 
6, 0.00822264, 1, 0, 0.486438,0.000154013) , 
6, 0.0057948, 1, 0, 0.405258,-2.14346e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95416,-0.0249783) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84855,-0.0423304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832168,0.0106653) , 
3, 11.3672, 1, 0, 0.83452,-0.000442927) , 
6, 0.0097458, 1, 0, 0.849664,-0.00167724) , 
7, 2.18118e-05, 1, 0, 0.500183,-0.000375114)    );
  // itree = 565
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644966,-0.0180698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719635,0.018656) , 
5, 0.00304453, 1, 0, 0.678058,-0.000427583) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634443,0.018877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555514,-0.0258214) , 
3, 37.2946, 1, 0, 0.590731,-0.00306468) , 
6, 0.00811096, 1, 0, 0.656508,-0.00107836) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996651,-0.0161199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692692,0.0196311) , 
2, 0.0237819, 1, 0, 0.937874,0.00059915) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130921) , 
2, 0.14277, 1, 0, 0,-0.000111538) , 
0, 0.00933147, 1, 0, 0.366179,0.000165939) , 
5, 0.00457149, 1, 0, 0.499924,-0.000407269)    );
  // itree = 566
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.331779,0.0205221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566222,-0.0151427) , 
6, 0.00625673, 1, 0, 0.391558,-2.3832e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571971,0.0410864) , 
6, 0.00772962, 1, 0, 0.404257,5.49467e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731254,-0.00794043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587975,0.0116316) , 
4, 0.0052614, 1, 0, 0.668646,0.000170045) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960184,-0.0223692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00015804,0.00314656) , 
0, 0.00465135, 1, 0, 0.606292,-0.0019821) , 
3, 24.2937, 1, 0, 0.624229,-0.001363) , 
6, 0.00811799, 1, 0, 0.495254,-0.00053162)    );
  // itree = 567
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84334,-0.0151388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388363,0.0284567) , 
5, 0.0029025, 1, 0, 0.594309,-0.000572743) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703455,-0.0291845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710629,-0.0132196) , 
4, 0.00379632, 1, 0, 0.709082,-0.00248367) , 
4, 0.00353329, 1, 0, 0.638443,-0.00130756) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.529373,0.0652799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316215,0.0898688) , 
5, 0.00544287, 1, 0, 0.412197,0.00131993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.497198,0.0193033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.23941,-0.0141478) , 
5, 0.00563525, 1, 0, 0.363404,-5.44536e-05) , 
3, 12.58, 1, 0, 0.370426,0.000143347) , 
4, 0.00463772, 1, 0, 0.502336,-0.000570742)    );
  // itree = 568
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45828,-0.00752953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455096,0.0765437) , 
3, 25.1398, 1, 0, 0.457303,0.000187313) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153843,-0.00512478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787959,-0.015934) , 
7, 7.42014e-06, 1, 0, 0.359979,-0.000639146) , 
3, 37.7103, 1, 0, 0.403066,-0.000273256) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926901,-0.0256139) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871588,-0.00498094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634483,-0.0185079) , 
4, 0.00589946, 1, 0, 0.822219,-0.000833836) , 
6, 0.00976018, 1, 0, 0.834935,-0.00203438) , 
7, 2.1881e-05, 1, 0, 0.497435,-0.000658085)    );
  // itree = 569
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987391,0.00289667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92541,0.0612595) , 
0, 0.00110943, 1, 0, 0.969115,0.000551065) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130917) , 
2, 0.142822, 1, 0, 0,-8.73585e-05) , 
0, 0.00466573, 1, 0, 0.403147,0.000178223) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789446,0.0215391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422998,-0.0216515) , 
5, 0.00571474, 1, 0, 0.613557,-0.000192038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641902,-0.0166923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531716,-0.0217008) , 
3, 87.4573, 1, 0, 0.624042,-0.0018797) , 
1, 1.29228, 1, 0, 0.617487,-0.000824649) , 
6, 0.00811938, 1, 0, 0.493248,-0.000243345)    );
  // itree = 570
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591726,0.0031371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.776966,-0.0229857) , 
7, 1.32031e-05, 1, 0, 0.621248,-0.000332713) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962471,0.0308387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131002) , 
0, 0.00467008, 1, 0, 0.176639,0.000167645) , 
4, 0.00405941, 1, 0, 0.394497,-7.75295e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874226,-0.100283) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863158,0.00699765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840368,-0.0196029) , 
3, 43.8263, 1, 0, 0.849941,-0.0014992) , 
3, 11.3875, 1, 0, 0.853441,-0.00242924) , 
7, 2.13905e-05, 1, 0, 0.495624,-0.00059572)    );
  // itree = 571
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.404748,-0.00305154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621922,-0.0125204) , 
6, 0.0080679, 1, 0, 0.459483,-0.000174657) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673492,0.0876453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599261,0.0100426) , 
6, 0.010218, 1, 0, 0.616601,0.000849027) , 
6, 0.00996716, 1, 0, 0.479603,-4.35679e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645996,0.0200365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651359,-0.00580286) , 
1, 1.08805, 1, 0, 0.647595,0.000713081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596081,-0.044004) , 
1, 1.10972, 1, 0, 0.632586,-0.00252403) , 
6, 0.0110166, 1, 0, 0.497931,-0.000340733)    );
  // itree = 572
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56929,-0.101681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533297,0.00670456) , 
3, 3.60845, 1, 0, 0.543213,-0.000686559) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.436304,-0.00286759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613301,0.0505803) , 
6, 0.0094415, 1, 0, 0.458568,9.99436e-06) , 
3, 12.6208, 1, 0, 0.471696,-9.80392e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710884,-0.046501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610429,-0.00480704) , 
3, 73.1731, 1, 0, 0.683491,-0.003997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.754541,0.043007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395019,-0.00957387) , 
1, 1.06691, 1, 0, 0.521173,0.000291148) , 
4, 0.00580407, 1, 0, 0.613915,-0.00215892) , 
6, 0.0104373, 1, 0, 0.49745,-0.000471239)    );
  // itree = 573
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.463364,-0.00700329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.457428,0.0567701) , 
3, 25.1419, 1, 0, 0.461581,0.0001322) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60809,-0.00840013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161926,0.0104697) , 
4, 0.00464002, 1, 0, 0.350227,-0.00022638) , 
3, 37.7109, 1, 0, 0.398552,-7.07629e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828856,-0.0102702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788271,0.022691) , 
3, 37.8422, 1, 0, 0.805822,0.000141245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938947,-0.00537521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881499,-0.0418055) , 
6, 0.00999639, 1, 0, 0.912821,-0.00342559) , 
1, 1.20609, 1, 0, 0.841586,-0.00105097) , 
7, 2.18808e-05, 1, 0, 0.493263,-0.000280309)    );
  // itree = 574
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97236,0.00588201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677273,0.0254251) , 
2, 0.0242898, 1, 0, 0.956353,0.000410784) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000156725,0.0102555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00212962,-0.0102888) , 
6, 0.00695338, 1, 0, 0.00108194,-0.000488223) , 
2, 0.0475885, 1, 0, 0.66721,0.000138672) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952225,-0.0173305) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013092) , 
2, 0.190808, 1, 0, 0,-6.28942e-05) , 
0, 0.00467007, 1, 0, 0.139346,-0.000522149) , 
4, 0.0057976, 1, 0, 0.502268,-6.78154e-05)    );
  // itree = 575
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94818,0.0162648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131195) , 
0, 0.00467007, 1, 0, 0.32802,0.000127826) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568484,-0.0128127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626248,0.0188302) , 
6, 0.00822582, 1, 0, 0.579119,-0.00042626) , 
6, 0.00621523, 1, 0, 0.421623,-7.87219e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663522,0.00733972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649927,0.0997742) , 
6, 0.0119611, 1, 0, 0.656859,0.00102975) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659892,-0.0324794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638939,-0.0118931) , 
1, 1.11314, 1, 0, 0.641661,-0.00149261) , 
1, 1.08063, 1, 0, 0.643863,-0.0011271) , 
6, 0.00869891, 1, 0, 0.499938,-0.000448161)    );
  // itree = 576
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929159,0.024568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140539) , 
2, 0.0476074, 1, 0, 0.554471,0.000204984) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53109,-0.024679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512504,-0.00704483) , 
3, 35.849, 1, 0, 0.514665,-0.000870154) , 
3, 32.9861, 1, 0, 0.537656,-0.000249197) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820342,0.0392126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.26875,0.00234335) , 
4, 0.00577354, 1, 0, 0.663873,0.000573037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139863) , 
2, 0.19036, 1, 0, 0.42222,0.000249479) , 
3, 62.9923, 1, 0, 0.499105,-8.26607e-05)    );
  // itree = 577
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585858,0.027581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869642,-0.0201576) , 
7, 9.85643e-06, 1, 0, 0.687881,-0.000568652) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973518,0.0249979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131586) , 
0, 0.00466298, 1, 0, 0.261239,0.000152373) , 
5, 0.00414643, 1, 0, 0.468834,-0.000198462) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984466,0.0270683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311482,0.0273808) , 
2, 0.0237528, 1, 0, 0.648116,0.00116412) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640663,-0.0233072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584624,-0.0279374) , 
6, 0.0108593, 1, 0, 0.629254,-0.00402852) , 
1, 1.12861, 1, 0, 0.637457,-0.00177029) , 
6, 0.00985924, 1, 0, 0.509218,-0.000574902)    );
  // itree = 578
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.458173,-0.00948678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514743,0.0213384) , 
6, 0.00754001, 1, 0, 0.478406,-1.43546e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887319,0.0885133) , 
7, 2.34421e-05, 1, 0, 0.555912,0.000577123) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933999,0.0193989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00331918,-0.00802066) , 
2, 0.0238052, 1, 0, 0.396571,6.45698e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85334,-0.0200449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825846,0.00731923) , 
4, 0.0053482, 1, 0, 0.838455,-0.000665636) , 
7, 2.2045e-05, 1, 0, 0.492501,-9.39534e-05) , 
3, 12.6044, 1, 0, 0.502414,1.09534e-05)    );
  // itree = 579
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490629,-0.00465446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739722,-0.0329537) , 
7, 6.00497e-06, 1, 0, 0.585376,-0.00210549) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77517,0.0232836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138369,-0.020454) , 
5, 0.00515684, 1, 0, 0.44221,4.28999e-05) , 
5, 0.00328238, 1, 0, 0.483092,-0.000570587) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616473,-0.0420354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645908,0.00972034) , 
1, 1.06023, 1, 0, 0.637643,-0.00155992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578612,-0.0499767) , 
1, 1.10994, 1, 0, 0.621053,-0.00317386) , 
6, 0.0110166, 1, 0, 0.500285,-0.000895007)    );
  // itree = 580
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.392586,-0.00840508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585254,-0.0204096) , 
6, 0.00759692, 1, 0, 0.418085,-0.000379383) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838666,0.0360144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130916,-0.00919414) , 
5, 0.00541974, 1, 0, 0.638922,0.000543755) , 
6, 0.0083956, 1, 0, 0.485715,-9.66777e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667986,-0.0244198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597971,-0.02227) , 
3, 36.6143, 1, 0, 0.626704,-0.00290725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664941,0.0428631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634322,0.00698121) , 
3, 46.3832, 1, 0, 0.649379,0.00103585) , 
4, 0.00582462, 1, 0, 0.637893,-0.000961492) , 
6, 0.0110174, 1, 0, 0.504217,-0.000201825)    );
  // itree = 581
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991212,0.00691222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93562,0.0277113) , 
0, 0.000871193, 1, 0, 0.970955,0.000300276) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130917) , 
2, 0.14277, 1, 0, 0,-7.9779e-05) , 
0, 0.00466574, 1, 0, 0.381187,6.94265e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.255857,-0.000705734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9185,-0.028417) , 
5, 0.00392188, 1, 0, 0.651705,-0.00223352) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632912,0.00438542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453989,-0.0253765) , 
3, 98.0689, 1, 0, 0.603695,-0.000373528) , 
5, 0.00457458, 1, 0, 0.619015,-0.00096705) , 
6, 0.00753945, 1, 0, 0.494981,-0.000426501)    );
  // itree = 582
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976993,-0.0063745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951769,-0.0240612) , 
3, 97.4333, 1, 0, 0.975109,-0.000220776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925715,-0.0485073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879807,0.00804413) , 
2, 0.0125209, 1, 0, 0.896215,-0.00520258) , 
2, 0.00902158, 1, 0, 0.952284,-0.00166206) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.103562,-0.00910672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130983) , 
0, 0.0233149, 1, 0, 0.0166627,-0.000258117) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.203768,0.00416617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346879,0.0379599) , 
3, 60.9977, 1, 0, 0.26032,0.00133893) , 
6, 0.0104368, 1, 0, 0.0579118,1.22494e-05) , 
2, 0.0238037, 1, 0, 0.497735,-0.00081112)    );
  // itree = 583
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.48558,-0.00935136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704079,-0.0341735) , 
6, 0.00993824, 1, 0, 0.499388,-0.000346497) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593627,0.0499527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645091,0.00518532) , 
3, 14.4406, 1, 0, 0.63397,0.000699989) , 
6, 0.0104374, 1, 0, 0.523348,-0.000160189) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526343,0.024881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.105658,-0.00795029) , 
4, 0.00407845, 1, 0, 0.244926,0.000107141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525629,-0.0278889) , 
6, 0.00928169, 1, 0, 0.327177,-0.00181616) , 
3, 100.94, 1, 0, 0.497159,-0.00038126)    );
  // itree = 584
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989813,0.00995798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670261,-0.0196748) , 
2, 0.00679398, 1, 0, 0.939339,-0.00146145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000148242,-0.000810962) , 
2, 0.04759, 1, 0, 0.578955,-0.000904386) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821377,-0.000683983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954323,0.0327592) , 
6, 0.0104385, 1, 0, 0.86151,0.000413341) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00125373,-0.0115064) , 
6, 0.00811394, 1, 0, 0.00037471,-0.000200958) , 
2, 0.071385, 1, 0, 0.467483,0.000132258) , 
4, 0.00347972, 1, 0, 0.501035,-0.000179761)    );
  // itree = 585
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.327583,0.0189768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56969,-0.025826) , 
6, 0.00625878, 1, 0, 0.388373,-0.000238289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973343,0.0255333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000113589,-0.0134398) , 
0, 0.00465135, 1, 0, 0.604791,0.000437762) , 
6, 0.00773207, 1, 0, 0.47993,4.77187e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650559,0.00892716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739143,-0.039366) , 
1, 1.07128, 1, 0, 0.685909,-0.00179065) , 
6, 0.0115964, 1, 0, 0.49292,-6.82164e-05)    );
  // itree = 586
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965925,0.0141579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803051,0.0544708) , 
2, 0.0180432, 1, 0, 0.956284,0.000278752) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.339741,-0.00630618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131606) , 
0, 0.00932059, 1, 0, 0.0279118,-0.0002207) , 
2, 0.023795, 1, 0, 0.481832,2.35032e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577663,-0.0364686) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658121,-0.0120019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657276,0.0091845) , 
3, 23.972, 1, 0, 0.657511,-0.000173583) , 
6, 0.0112965, 1, 0, 0.639479,-0.00150313) , 
6, 0.0110169, 1, 0, 0.500684,-0.000159053)    );
  // itree = 587
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650102,-0.00290016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718624,-0.035959) , 
5, 0.00417224, 1, 0, 0.655935,-0.000555161) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973966,0.029904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131425) , 
0, 0.00466298, 1, 0, 0.322429,0.000258888) , 
5, 0.00438084, 1, 0, 0.483245,-0.000133645) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.599462,-0.0413397) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657285,0.00957685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586601,-0.00581441) , 
6, 0.0118831, 1, 0, 0.630594,-1.90544e-05) , 
6, 0.0112957, 1, 0, 0.623847,-0.00196804) , 
6, 0.0110168, 1, 0, 0.50058,-0.000359802)    );
  // itree = 588
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986024,-0.0241625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986767,0.039227) , 
5, 0.00262741, 1, 0, 0.986604,3.89598e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243051,-0.0220276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.805348,-0.0155366) , 
5, 0.00477627, 1, 0, 0.617991,-0.00434356) , 
0, 0.00177602, 1, 0, 0.885405,-0.00116422) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130917) , 
4, 0.00465057, 1, 0, 0,-7.4102e-06) , 
2, 0.119107, 1, 0, 0,-6.17285e-05) , 
0, 0.0186629, 1, 0, 0.501038,-0.000685613)    );
  // itree = 589
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651991,-0.0117947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74908,-0.0216426) , 
4, 0.00496817, 1, 0, 0.659462,-0.000773465) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723939,0.0441257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000136613,-0.0112053) , 
2, 0.0476074, 1, 0, 0.198604,0.000200975) , 
4, 0.00521728, 1, 0, 0.487976,-0.000410873) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646649,0.00230445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6624,-0.0520593) , 
1, 1.0735, 1, 0, 0.653043,-0.00350076) , 
6, 0.0115965, 1, 0, 0.49886,-0.000614616)    );
  // itree = 590
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768715,-0.0180104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546548,0.00634217) , 
5, 0.00326522, 1, 0, 0.624391,-0.000219617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697967,-0.0115442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935279,-0.020454) , 
1, 1.23386, 1, 0, 0.803106,-0.00211745) , 
7, 2.37676e-05, 1, 0, 0.641954,-0.000406117) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0184097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130965) , 
0, 0.0704039, 1, 0, 0,-0.00022608) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764913,0.00241238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729198,0.0647904) , 
1, 1.1187, 1, 0, 0.748799,0.000854043) , 
6, 0.0104373, 1, 0, 0.279456,0.000177028) , 
4, 0.005218, 1, 0, 0.497402,-0.000173579)    );
  // itree = 591
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962726,0.0590185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000742414,-0.0123862) , 
2, 0.0238037, 1, 0, 0.454418,9.37237e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.285191,0.00627386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428149,-0.0113033) , 
6, 0.00636416, 1, 0, 0.351843,-0.000216428) , 
3, 37.8571, 1, 0, 0.396937,-8.00779e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996371,-0.0131937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98806,-0.147953) , 
2, 0.0167411, 1, 0, 0.994828,-0.00168052) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.322558,-0.0157791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650586,-0.0349939) , 
7, 3.05449e-05, 1, 0, 0.460418,-0.00921146) , 
2, 0.0234491, 1, 0, 0.833434,-0.0039549) , 
7, 2.18118e-05, 1, 0, 0.491758,-0.000921804)    );
  // itree = 592
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.329551,-0.011682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587454,0.0259583) , 
6, 0.0063127, 1, 0, 0.408124,-4.53722e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634785,-0.0134697) , 
6, 0.00828404, 1, 0, 0.422513,-0.000106119) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629605,0.0099868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625681,-0.0184746) , 
4, 0.00521782, 1, 0, 0.627498,-0.000630021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654637,-0.0792438) , 
1, 1.38593, 1, 0, 0.629604,-0.000853669) , 
6, 0.0086986, 1, 0, 0.496771,-0.000374171)    );
  // itree = 593
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985797,-0.00232822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961914,-0.0214849) , 
3, 99.1583, 1, 0, 0.983592,-0.000498149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484158,-0.0190421) , 
0, 0.00220495, 1, 0, 0.942939,-0.00126315) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131794) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130917) , 
4, 0.00521212, 1, 0, 0,-7.43306e-06) , 
2, 0.119212, 1, 0, 0,-7.79592e-05) , 
0, 0.00934014, 1, 0, 0.499267,-0.000705496)    );
  // itree = 594
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71202,-0.0172282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.4631e-05,0.00547892) , 
2, 0.0476103, 1, 0, 0.184956,-0.000114134) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851854,0.0258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708679,-0.00335267) , 
4, 0.00418693, 1, 0, 0.805735,0.000278058) , 
7, 7.28003e-06, 1, 0, 0.400767,2.221e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87203,0.088777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838791,-0.00974426) , 
3, 12.6075, 1, 0, 0.845034,-0.000368203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.841191,-0.0355319) , 
3, 88.1982, 1, 0, 0.844407,-0.0013118) , 
7, 2.18118e-05, 1, 0, 0.495183,-0.000261699)    );
  // itree = 595
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951725,-0.0728863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936719,-0.0320488) , 
3, 5.35692, 1, 0, 0.938951,-0.00277565) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987947,0.0162704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522089,-0.0127498) , 
0, 0.00218947, 1, 0, 0.941193,-0.000357077) , 
3, 37.4808, 1, 0, 0.940113,-0.00152193) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131472) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130918) , 
4, 0.00405938, 1, 0, 0,-7.09941e-06) , 
2, 0.119161, 1, 0, 0,-6.47208e-05) , 
0, 0.00934014, 1, 0, 0.493218,-0.000829228)    );
  // itree = 596
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520389,-0.00318592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450217,-0.0297104) , 
3, 70.0162, 1, 0, 0.506357,-0.000260793) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170783,-0.00149282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390941,0.1367) , 
6, 0.00787537, 1, 0, 0.254036,0.000574844) , 
3, 113.123, 1, 0, 0.480758,-0.000176016) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553151,-0.0327042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680636,-0.00896584) , 
4, 0.0057336, 1, 0, 0.630113,-0.00447683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605874,0.00351462) , 
3, 60.9878, 1, 0, 0.62136,-0.00280174) , 
6, 0.0110168, 1, 0, 0.498271,-0.000503063)    );
  // itree = 597
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.612603,-0.00517528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731914,-0.0201141) , 
4, 0.00367065, 1, 0, 0.631071,-0.000618139) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966185,0.0461627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131108) , 
0, 0.00466574, 1, 0, 0.183074,0.000119955) , 
4, 0.00406007, 1, 0, 0.402678,-0.000241851) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988017,0.0648622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94957,-0.0605241) , 
4, 0.00524299, 1, 0, 0.968889,-0.00543895) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753221,-0.00970219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709707,0.00990899) , 
3, 37.8161, 1, 0, 0.728392,-0.000370155) , 
0, 0.0018626, 1, 0, 0.850133,-0.00293602) , 
7, 2.13905e-05, 1, 0, 0.503876,-0.000851176)    );
  // itree = 598
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584282,0.0502475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613442,-0.0178176) , 
3, 2.50923, 1, 0, 0.597667,-0.000510794) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530723,0.000445221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671,0.0585323) , 
6, 0.0115967, 1, 0, 0.53933,0.000132563) , 
3, 4.79092, 1, 0, 0.545108,6.88413e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662587,-0.00894732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662857,-0.0503822) , 
6, 0.0104238, 1, 0, 0.662616,-0.00122254) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947078,0.029136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131588) , 
0, 0.0093203, 1, 0, 0.171805,0.000386666) , 
5, 0.00558959, 1, 0, 0.453821,-0.00053797) , 
3, 50.2793, 1, 0, 0.505969,-0.00019133)    );
  // itree = 599
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962797,-0.0037737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966747,0.0413949) , 
3, 44.7584, 1, 0, 0.964383,0.000130262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130917) , 
2, 0.119026, 1, 0, 0,-4.76071e-05) , 
0, 0.00466574, 1, 0, 0.15418,-1.91704e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857287,-0.00308409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840706,-0.0261417) , 
3, 25.2003, 1, 0, 0.846295,-0.00198712) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903598,0.0421057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428675,-0.0020594) , 
5, 0.00594137, 1, 0, 0.714369,0.000775233) , 
5, 0.00535073, 1, 0, 0.812903,-0.00128793) , 
7, 5.71726e-06, 1, 0, 0.496658,-0.000678813)    );
  // itree = 600
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999086,0.0784453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965916,-0.0178995) , 
0, 0.000210488, 1, 0, 0.983265,-0.00063831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.434603,-0.0112673) , 
0, 0.00221011, 1, 0, 0.937737,-0.000998093) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013351) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130918) , 
4, 0.00405777, 1, 0, 0,-6.66749e-06) , 
2, 0.119026, 1, 0, 0,-8.57063e-05) , 
0, 0.00934014, 1, 0, 0.498678,-0.000570903)    );
  // itree = 601
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.512227,-0.00700221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720621,-0.025071) , 
4, 0.00234702, 1, 0, 0.575073,-0.000711694) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743642,0.0313818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219287,-0.00823762) , 
4, 0.00554894, 1, 0, 0.522494,0.000255005) , 
4, 0.00289899, 1, 0, 0.533987,4.36996e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.471971,-0.00463976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0907934,-0.00907571) , 
4, 0.00407553, 1, 0, 0.22369,-0.000108747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812054,-0.0368253) , 
7, 2.18045e-05, 1, 0, 0.338304,-0.00323557) , 
3, 100.938, 1, 0, 0.508545,-0.000382656)    );
  // itree = 602
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.445367,-0.0197136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.323222,0.00557431) , 
3, 37.8518, 1, 0, 0.376068,-0.000127081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651231,-0.0357954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882527,-0.0100745) , 
5, 0.00445747, 1, 0, 0.851248,-0.00150189) , 
7, 1.85601e-05, 1, 0, 0.48797,-0.000450842) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653052,-0.0219881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718113,-0.0533634) , 
1, 1.07128, 1, 0, 0.68102,-0.00747151) , 
6, 0.0115965, 1, 0, 0.500346,-0.000900891)    );
  // itree = 603
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648399,-0.00932374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771827,-0.0162769) , 
4, 0.00471819, 1, 0, 0.666056,-0.000554962) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968318,0.0320351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131032) , 
0, 0.00466573, 1, 0, 0.115833,9.74606e-05) , 
4, 0.00521726, 1, 0, 0.480307,-0.000334712) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654379,-0.0441024) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.401613,-0.0497095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806464,0.004841) , 
4, 0.00582462, 1, 0, 0.633716,-0.0018357) , 
5, 0.00571778, 1, 0, 0.640115,-0.00340386) , 
6, 0.0110166, 1, 0, 0.499766,-0.000708424)    );
  // itree = 604
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.409876,0.0276449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268431,-0.0104922) , 
3, 50.0025, 1, 0, 0.345561,-5.75516e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915605,-0.0245193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840291,-0.000694541) , 
6, 0.00879696, 1, 0, 0.860648,-0.000677921) , 
7, 1.56396e-05, 1, 0, 0.481546,-0.000221331) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649647,0.0217759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664422,-0.0101991) , 
6, 0.0117054, 1, 0, 0.657906,-0.000817693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589858,-0.0504338) , 
1, 1.11898, 1, 0, 0.642855,-0.0033135) , 
6, 0.0110168, 1, 0, 0.500995,-0.000594158)    );
  // itree = 605
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972079,-0.00252273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977977,0.127516) , 
6, 0.00449264, 1, 0, 0.973753,0.00028027) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130917) , 
2, 0.119026, 1, 0, 0,-3.46671e-05) , 
0, 0.00466574, 1, 0, 0.176902,2.25476e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849708,-0.0425702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823287,-0.0217547) , 
3, 6.9796, 1, 0, 0.826487,-0.00202919) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707258,-0.00720498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831377,0.0256672) , 
7, 1.98142e-05, 1, 0, 0.774664,0.000623061) , 
3, 73.1578, 1, 0, 0.814983,-0.00144041) , 
7, 6.85981e-06, 1, 0, 0.494993,-0.000706755)    );
  // itree = 606
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.325871,0.0065363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581994,-0.0199414) , 
6, 0.00618026, 1, 0, 0.406319,-0.000288074) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968124,0.02793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131679) , 
0, 0.00465202, 1, 0, 0.365123,0.000425699) , 
6, 0.00811048, 1, 0, 0.395778,-0.000105443) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824941,-0.0547926) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851731,-0.00212489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833067,-0.0243165) , 
3, 67.7723, 1, 0, 0.845454,-0.00117478) , 
3, 11.7771, 1, 0, 0.842284,-0.00202279) , 
7, 2.13904e-05, 1, 0, 0.495344,-0.000532991)    );
  // itree = 607
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971479,0.0233679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783681,0.0144294) , 
2, 0.00902158, 1, 0, 0.935165,0.000250454) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00538937,-0.0102858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.12516e-05,-0.000862524) , 
2, 0.137155, 1, 0, 0.0013843,-0.000147057) , 
2, 0.0238037, 1, 0, 0.396132,2.09871e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962052,-0.0447336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967341,-0.0180212) , 
5, 0.00506965, 1, 0, 0.965693,-0.00263045) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615986,-0.0115038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813272,0.0153764) , 
5, 0.00496322, 1, 0, 0.761068,0.000445749) , 
0, 0.00172585, 1, 0, 0.850335,-0.000896235) , 
7, 2.13905e-05, 1, 0, 0.497015,-0.000182736)    );
  // itree = 608
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571897,-0.0153786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248569,0.0217719) , 
4, 0.0028995, 1, 0, 0.348038,-0.000166802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845005,-0.0195112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851283,-0.00134317) , 
5, 0.00457104, 1, 0, 0.848814,-0.000870715) , 
7, 1.56396e-05, 1, 0, 0.481399,-0.000354259) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972603,0.0887257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980803,0.00419297) , 
6, 0.0115183, 1, 0, 0.977424,0.000303173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29927,0.0174966) , 
2, 0.0236657, 1, 0, 0.645064,0.000963655) , 
6, 0.0110169, 1, 0, 0.500915,-0.000197104)    );
  // itree = 609
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960061,-0.0216794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.830555,0.0753056) , 
2, 0.0180664, 1, 0, 0.947094,-0.000597826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442977,-0.0151633) , 
2, 0.027104, 1, 0, 0.913352,-0.000873593) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000516201,-0.00999012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130918) , 
0, 0.0373507, 1, 0, 0.000158484,-0.000129839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00173766,0.0302983) , 
3, 75.6044, 1, 0, 0.000605815,1.73935e-05) , 
2, 0.0476074, 1, 0, 0.49974,-0.000469841)    );
  // itree = 610
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533483,0.00377936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409207,-0.0108984) , 
3, 50.4741, 1, 0, 0.47912,-0.000161754) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649206,-0.000198047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630304,0.114931) , 
1, 1.11458, 1, 0, 0.639372,0.00173903) , 
6, 0.0110431, 1, 0, 0.488074,-5.55491e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640588,0.0156591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.693209,-0.0240295) , 
1, 1.07128, 1, 0, 0.662591,-0.00115947) , 
6, 0.0115965, 1, 0, 0.499413,-0.000127277)    );
  // itree = 611
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965742,0.0273687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845729,-0.0114785) , 
2, 0.0168137, 1, 0, 0.951077,3.91289e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437354,0.0166043) , 
2, 0.0272042, 1, 0, 0.916487,0.000191194) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00174649,-0.0116617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130928) , 
3, 75.7117, 1, 0, 0,-8.39217e-06) , 
0, 0.0280123, 1, 0, 0.000381695,-0.000238018) , 
2, 0.0476103, 1, 0, 0.502075,-2.96574e-06)    );
  // itree = 612
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681377,-0.010941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.67793e-05,0.0105744) , 
2, 0.04759, 1, 0, 0.170004,-0.000109015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842453,0.0288506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746894,-0.00218424) , 
4, 0.00406013, 1, 0, 0.809865,0.000319128) , 
7, 6.4258e-06, 1, 0, 0.402953,4.68555e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99828,0.0476262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984403,-0.063469) , 
2, 0.016917, 1, 0, 0.995772,-0.000194507) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.346647,-0.00595614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64499,-0.0196408) , 
7, 3.11016e-05, 1, 0, 0.473863,-0.00465995) , 
2, 0.0237799, 1, 0, 0.85158,-0.00142821) , 
7, 2.13905e-05, 1, 0, 0.503973,-0.000285294)    );
  // itree = 613
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996787,0.00933131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966861,-0.0211015) , 
0, 0.000211155, 1, 0, 0.982383,-0.000731901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651652,-0.0183198) , 
0, 0.00221718, 1, 0, 0.964024,-0.00141092) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133166) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000177606,0.176263) , 
6, 0.00869312, 1, 0, 4.55211e-05,3.89267e-05) , 
2, 0.119254, 1, 0, 3.52271e-05,-5.15003e-05) , 
0, 0.00465917, 1, 0, 0.491492,-0.000744553)    );
  // itree = 614
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999157,0.0183238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535829,0.0102314) , 
2, 0.0235276, 1, 0, 0.972448,0.000427592) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.03606e-05,0.0867258) , 
2, 0.118975, 1, 0, 3.83577e-05,-0.000111023) , 
0, 0.00466298, 1, 0, 0.47662,0.000152954) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672081,0.0276012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606689,-0.00541557) , 
1, 1.10062, 1, 0, 0.647341,0.000464071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636382,-0.0303831) , 
3, 60.9671, 1, 0, 0.643517,-0.00102221) , 
6, 0.0110179, 1, 0, 0.496345,1.40596e-05)    );
  // itree = 615
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.416714,0.00715816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625111,-0.0110378) , 
6, 0.00849353, 1, 0, 0.468863,-4.68587e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.58565,0.0107986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64407,0.0884524) , 
1, 1.17015, 1, 0, 0.614541,0.00131683) , 
6, 0.0104918, 1, 0, 0.477392,3.29863e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615554,0.00451541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679195,0.00564312) , 
1, 1.06239, 1, 0, 0.647101,0.000376759) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617018,0.000998514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671832,-0.0291363) , 
6, 0.0113498, 1, 0, 0.646538,-0.00447761) , 
1, 1.08186, 1, 0, 0.646783,-0.00236171) , 
6, 0.0110169, 1, 0, 0.497854,-0.000256285)    );
  // itree = 616
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956798,-0.0165574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0254015,0.000932395) , 
2, 0.0238052, 1, 0, 0.475555,-0.000353918) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621708,0.00745097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608136,0.103184) , 
1, 1.11691, 1, 0, 0.615158,0.00159044) , 
6, 0.0110431, 1, 0, 0.483284,-0.000246269) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681402,0.013245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641393,-0.0305795) , 
3, 58.8664, 1, 0, 0.665464,-0.00233032) , 
6, 0.0115964, 1, 0, 0.494777,-0.000377736)    );
  // itree = 617
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.46959,0.00135958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458191,-0.0341024) , 
3, 30.3046, 1, 0, 0.467584,-0.000413324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970137,0.00879692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131664) , 
0, 0.00466029, 1, 0, 0.347677,0.000104986) , 
3, 37.4424, 1, 0, 0.398859,-0.000116254) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84583,-0.0423086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849834,0.0279121) , 
3, 9.32217, 1, 0, 0.848946,-0.000984305) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821291,-0.0332762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.841182,-0.0104733) , 
3, 68.5337, 1, 0, 0.833702,-0.0051144) , 
3, 48.7984, 1, 0, 0.842221,-0.00280629) , 
7, 2.13905e-05, 1, 0, 0.500582,-0.000733438)    );
  // itree = 618
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243681,-0.0094511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836344,0.0308746) , 
7, 8.01009e-06, 1, 0, 0.469223,8.80897e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847253,-0.0412539) , 
7, 2.21847e-05, 1, 0, 0.550492,-0.00172268) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621817,0.000228921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.734192,-0.0159311) , 
4, 0.00422264, 1, 0, 0.655392,-0.000413311) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.740471,0.0512091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203216,-0.00229113) , 
4, 0.00554852, 1, 0, 0.272569,0.000148117) , 
4, 0.00521619, 1, 0, 0.496934,-0.000180925) , 
3, 12.6022, 1, 0, 0.505415,-0.000425073)    );
  // itree = 619
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94784,-0.0145145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00035101,0.0359512) , 
2, 0.047497, 1, 0, 0.605119,-0.000632696) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815459,0.0183062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000378476,-0.0108886) , 
2, 0.0476074, 1, 0, 0.290405,3.90728e-05) , 
5, 0.00342783, 1, 0, 0.401899,-0.000198916) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880902,0.00457739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819813,-0.026143) , 
3, 43.0194, 1, 0, 0.850563,-0.00373145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822658,-0.0215324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828503,0.0366256) , 
3, 23.5609, 1, 0, 0.826891,6.63665e-06) , 
4, 0.00551013, 1, 0, 0.840876,-0.00220184) , 
7, 2.13905e-05, 1, 0, 0.500812,-0.000650224)    );
  // itree = 620
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695316,-0.0140283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739634,0.0268612) , 
5, 0.00489632, 1, 0, 0.703297,-0.00039976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644305,-0.0386419) , 
6, 0.0110034, 1, 0, 0.699747,-0.00076613) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986264,0.0244355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972364,0.0695185) , 
0, 0.00103043, 1, 0, 0.9788,0.00207858) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013092) , 
2, 0.166473, 1, 0, 0,-6.65755e-05) , 
0, 0.00467007, 1, 0, 0.152795,0.000268293) , 
5, 0.00571265, 1, 0, 0.50817,-0.000403811)    );
  // itree = 621
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533539,-0.0185205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633823,-0.0192417) , 
6, 0.0115969, 1, 0, 0.539969,-0.000747215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502003,-0.0335828) , 
3, 45.6628, 1, 0, 0.536948,-0.00101814) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964744,0.0331199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131347) , 
0, 0.00466298, 1, 0, 0.424423,0.000388573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684613,-0.023802) , 
6, 0.0115963, 1, 0, 0.441387,0.000210038) , 
3, 50.4741, 1, 0, 0.495712,-0.000488159)    );
  // itree = 622
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985552,-0.0130461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983605,0.0454853) , 
0, 0.00179621, 1, 0, 0.985246,-0.000316294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667747,-0.014906) , 
0, 0.00221886, 1, 0, 0.9685,-0.000783485) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132772) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000175536,0.162037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130918) , 
0, 0.0401729, 1, 0, 4.77733e-05,3.94873e-05) , 
2, 0.119065, 1, 0, 3.66855e-05,-3.06199e-05) , 
0, 0.00466029, 1, 0, 0.506852,-0.000424608)    );
  // itree = 623
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571437,-0.0397264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560817,0.000423366) , 
3, 4.08929, 1, 0, 0.562811,-0.000245273) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.698429,-0.0231938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309483,-0.00704649) , 
4, 0.00519214, 1, 0, 0.551391,-0.00223697) , 
3, 21.4714, 1, 0, 0.558165,-0.00105553) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.494406,0.029822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370943,-0.00874167) , 
3, 80.5314, 1, 0, 0.447488,6.55473e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673964,-0.0163872) , 
6, 0.0115968, 1, 0, 0.461908,-4.50956e-05) , 
3, 37.5795, 1, 0, 0.504205,-0.000489094)    );
  // itree = 624
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937088,0.0330203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.31407,-0.0131009) , 
5, 0.00219741, 1, 0, 0.656884,-0.000124187) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000152597,0.0574412) , 
3, 75.7672, 1, 0, 4.68083e-05,1.8444e-05) , 
2, 0.0476103, 1, 0, 0.153637,-1.49078e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87504,-0.00346791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814772,-0.0205842) , 
3, 24.9854, 1, 0, 0.834742,-0.0016938) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787827,0.00313501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731075,-0.0186223) , 
3, 97.5426, 1, 0, 0.780374,-8.23221e-05) , 
6, 0.0097119, 1, 0, 0.813047,-0.00105074) , 
7, 5.71741e-06, 1, 0, 0.4962,-0.000553024)    );
  // itree = 625
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.138223,-0.00609294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859552,-0.0158861) , 
7, 4.37701e-06, 1, 0, 0.408903,-0.000417886) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977797,0.0789415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132042) , 
0, 0.00465202, 1, 0, 0.413474,0.000436604) , 
6, 0.00811658, 1, 0, 0.4101,-0.000194133) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0871052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54113,0.00894097) , 
2, 0.0234637, 1, 0, 0.830033,0.000678357) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825302,-0.0247504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94251,0.0283174) , 
1, 1.25178, 1, 0, 0.854351,-0.00303941) , 
1, 1.11078, 1, 0, 0.846364,-0.00181846) , 
7, 2.20906e-05, 1, 0, 0.503399,-0.000541512)    );
  // itree = 626
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608416,-0.00418768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600091,-0.0234685) , 
7, 9.33367e-06, 1, 0, 0.607144,-0.000582038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893739,0.0176513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000374577,-0.0126448) , 
2, 0.0476074, 1, 0, 0.436251,4.6192e-05) , 
5, 0.00328578, 1, 0, 0.483944,-0.000129133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605016,-0.0602087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621157,-0.0208032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648616,0.0219466) , 
1, 1.08269, 1, 0, 0.632893,-0.00106963) , 
6, 0.0112957, 1, 0, 0.626991,-0.00210116) , 
6, 0.011017, 1, 0, 0.501465,-0.000370674)    );
  // itree = 627
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253374,-0.00544091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488494,-0.0181312) , 
6, 0.00469543, 1, 0, 0.312826,-0.000335992) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91008,0.0395808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000543518,-0.0112356) , 
2, 0.0475813, 1, 0, 0.491007,0.000168336) , 
6, 0.00579973, 1, 0, 0.407796,-6.71869e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840493,-0.0160796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792578,0.0225436) , 
6, 0.0115374, 1, 0, 0.81978,-0.000768856) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917399,-0.0257241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89179,-0.0344671) , 
3, 53.7685, 1, 0, 0.907409,-0.00567211) , 
1, 1.19425, 1, 0, 0.854365,-0.00270404) , 
7, 2.18118e-05, 1, 0, 0.504062,-0.000635609)    );
  // itree = 628
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977719,0.00553007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935229,-0.0196949) , 
2, 0.0113118, 1, 0, 0.971987,-0.000304024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835558,-0.0351215) , 
2, 0.0170027, 1, 0, 0.959055,-0.000951025) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838957,0.0724329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15107,0.00725815) , 
2, 0.0303933, 1, 0, 0.377794,0.00215061) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00101678,-0.00800055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130919) , 
0, 0.0327577, 1, 0, 0.000237478,-0.000138699) , 
2, 0.0692575, 1, 0, 0.0573435,0.000207562) , 
2, 0.0238052, 1, 0, 0.498668,-0.000359485)    );
  // itree = 629
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705812,0.01093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109164,-0.0154108) , 
4, 0.00347891, 1, 0, 0.389675,6.89501e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448037,-0.0374906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38525,0.00884383) , 
3, 37.4781, 1, 0, 0.41279,-0.000546367) , 
6, 0.00753814, 1, 0, 0.397301,-0.000175645) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984669,0.0462755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953206,-0.0294325) , 
4, 0.00528141, 1, 0, 0.969757,-0.00289673) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724339,-0.0136119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750537,0.0461305) , 
4, 0.00553441, 1, 0, 0.736422,-9.8821e-05) , 
0, 0.0018626, 1, 0, 0.855239,-0.00152355) , 
7, 2.13905e-05, 1, 0, 0.499302,-0.000475877)    );
  // itree = 630
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932439,0.00824965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.54613e-05,-0.0130259) , 
2, 0.0476103, 1, 0, 0.536895,4.54775e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.280272,-0.00670282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849447,-0.0372338) , 
7, 1.85845e-05, 1, 0, 0.405008,-0.000835037) , 
3, 62.9923, 1, 0, 0.492764,-0.000249154) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98547,-0.0117425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.341114,0.0324377) , 
2, 0.023654, 1, 0, 0.655822,0.00117486) , 
6, 0.0115964, 1, 0, 0.503309,-0.00015706)    );
  // itree = 631
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508777,-0.00116745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680372,0.0881844) , 
6, 0.00993942, 1, 0, 0.519786,8.20588e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.477791,-0.014638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38563,-0.00664723) , 
3, 60.6857, 1, 0, 0.404193,-0.000572591) , 
3, 50.469, 1, 0, 0.470082,-0.000199435) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983197,0.0390444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.278135,0.024536) , 
2, 0.0236613, 1, 0, 0.678652,0.00102918) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530375,-0.00744227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532412,0.0336857) , 
3, 63.053, 1, 0, 0.531106,-0.000217514) , 
4, 0.00582462, 1, 0, 0.62082,0.000540529) , 
6, 0.0104373, 1, 0, 0.496837,-6.8096e-05)    );
  // itree = 632
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965809,-0.0165236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978582,0.0192227) , 
5, 0.00258644, 1, 0, 0.975659,0.00012649) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000178447,-0.0185775) , 
4, 0.00297729, 1, 0, 8.98168e-05,-0.00114905) , 
0, 0.00401695, 1, 0, 0.656603,-0.000290671) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971726,0.0219569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137097) , 
0, 0.00467007, 1, 0, 0.292441,0.000295401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163045,-0.0310112) , 
3, 113.563, 1, 0, 0.274977,0.000113145) , 
4, 0.00521726, 1, 0, 0.500951,-0.000125969)    );
  // itree = 633
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658635,-0.00758416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691884,-0.0424758) , 
7, 1.68994e-05, 1, 0, 0.661305,-0.000467019) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973627,0.0110242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131481) , 
0, 0.00466573, 1, 0, 0.328993,9.2688e-05) , 
5, 0.00430217, 1, 0, 0.480404,-0.00016233) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662199,0.00884926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636803,-0.00561506) , 
1, 1.08009, 1, 0, 0.649961,-2.82692e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604837,-0.0343538) , 
1, 1.119, 1, 0, 0.640589,-0.00203865) , 
6, 0.0110168, 1, 0, 0.499951,-0.000391292)    );
  // itree = 634
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.471947,-0.00734478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718181,0.0707321) , 
4, 0.00248476, 1, 0, 0.581614,0.000159451) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737532,-0.0214835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21905,0.00497288) , 
4, 0.00389448, 1, 0, 0.281043,-0.000253896) , 
4, 0.0034797, 1, 0, 0.39547,-9.65353e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868948,-0.00766797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911774,-0.0330754) , 
7, 2.49215e-05, 1, 0, 0.888382,-0.0053216) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993447,0.0137092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483747,-0.0186547) , 
2, 0.0237892, 1, 0, 0.824673,-0.00152868) , 
6, 0.0105041, 1, 0, 0.851397,-0.00311969) , 
7, 2.13905e-05, 1, 0, 0.497179,-0.000770945)    );
  // itree = 635
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499441,0.00111741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321653,-0.0118541) , 
3, 75.1589, 1, 0, 0.45554,-0.000114489) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605637,-0.0077436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643176,-0.0218557) , 
1, 1.22421, 1, 0, 0.611994,-0.00158882) , 
6, 0.00993994, 1, 0, 0.483315,-0.00037623) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669631,-0.0447817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618619,-0.025024) , 
3, 35.9977, 1, 0, 0.640137,-0.00614543) , 
6, 0.0115964, 1, 0, 0.493453,-0.000749179)    );
  // itree = 636
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.512095,-0.0105881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618414,-0.0109319) , 
6, 0.0110453, 1, 0, 0.517907,-0.000449586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964975,0.0181281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014019) , 
0, 0.00467008, 1, 0, 0.409253,0.000117843) , 
3, 63.0887, 1, 0, 0.483061,-0.000267609) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694467,-0.0208955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643828,-0.0269732) , 
3, 57.9297, 1, 0, 0.674133,-0.00224834) , 
6, 0.0115964, 1, 0, 0.495138,-0.000392806)    );
  // itree = 637
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533983,-0.0217327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472453,0.00151659) , 
3, 12.5265, 1, 0, 0.482191,-5.37517e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630275,-0.0282728) , 
6, 0.0110438, 1, 0, 0.490129,-0.000293989) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592676,0.021982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680535,0.0183339) , 
1, 1.06022, 1, 0, 0.646524,0.00118342) , 
6, 0.0115963, 1, 0, 0.500502,-0.000195991)    );
  // itree = 638
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654789,-0.0056937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757966,-0.016622) , 
4, 0.00496817, 1, 0, 0.662712,-0.000442303) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721736,0.0630419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000137611,-0.0110593) , 
2, 0.0476074, 1, 0, 0.19728,0.000140274) , 
4, 0.00521726, 1, 0, 0.490129,-0.000226282) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670917,-0.0412373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647416,0.0162164) , 
3, 35.9893, 1, 0, 0.65688,-0.00430472) , 
6, 0.0115963, 1, 0, 0.500717,-0.000485263)    );
  // itree = 639
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550634,-0.0182191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528996,0.0103713) , 
3, 35.8679, 1, 0, 0.541965,-0.00044233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484513,-0.0714529) , 
3, 68.4905, 1, 0, 0.538271,-0.000637712) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.270825,0.0359119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292569,-0.0102147) , 
6, 0.00809375, 1, 0, 0.27678,-2.97245e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847185,0.0442291) , 
7, 2.18116e-05, 1, 0, 0.392148,0.000249908) , 
3, 75.7036, 1, 0, 0.502334,-0.00041941)    );
  // itree = 640
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675158,-0.0114652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.228797,0.0112457) , 
4, 0.00405739, 1, 0, 0.450915,-0.000211815) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623865,0.00727363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620252,-0.0191272) , 
1, 1.20199, 1, 0, 0.622122,-0.000988471) , 
6, 0.0093885, 1, 0, 0.491377,-0.000395366) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649335,-0.013759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623881,-0.0316007) , 
3, 59.9436, 1, 0, 0.63922,-0.00347843) , 
6, 0.0115965, 1, 0, 0.501307,-0.000602432)    );
  // itree = 641
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.450617,0.00116691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597902,-0.0124567) , 
6, 0.00946025, 1, 0, 0.47846,-0.000146955) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623121,0.087355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667906,0.00369051) , 
6, 0.0113024, 1, 0, 0.645645,0.00126745) , 
6, 0.0110373, 1, 0, 0.487489,-7.05761e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636115,-0.0222045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699667,-0.0125331) , 
1, 1.06243, 1, 0, 0.674356,-0.00211691) , 
6, 0.0115963, 1, 0, 0.499406,-0.00020108)    );
  // itree = 642
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.388664,0.0141411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627267,-0.0117181) , 
6, 0.00759262, 1, 0, 0.462068,-7.69287e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566022,-0.00609355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631964,0.0915909) , 
1, 1.18465, 1, 0, 0.6076,0.000558321) , 
6, 0.00996745, 1, 0, 0.480913,5.33072e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633593,-0.0363076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655272,0.0107461) , 
4, 0.0058323, 1, 0, 0.64626,-0.000542801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584641,-0.0422046) , 
1, 1.11893, 1, 0, 0.632711,-0.00219144) , 
6, 0.0110169, 1, 0, 0.498534,-0.000249667)    );
  // itree = 643
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498848,0.00903456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.405796,-0.00766516) , 
3, 37.4431, 1, 0, 0.447945,-9.05181e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624642,0.053249) , 
6, 0.00938717, 1, 0, 0.458541,-4.90711e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700797,-0.0490204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560426,-0.0230334) , 
3, 50.4887, 1, 0, 0.6338,-0.00371447) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636367,-0.00549213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610483,0.0303608) , 
3, 50.4047, 1, 0, 0.624895,0.000178835) , 
6, 0.0104102, 1, 0, 0.627118,-0.000793264) , 
6, 0.00985795, 1, 0, 0.499348,-0.000229216)    );
  // itree = 644
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.573734,-0.0162315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880588,-0.0329844) , 
7, 1.62784e-05, 1, 0, 0.685118,-0.00112826) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886324,0.0807755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131084) , 
0, 0.0139561, 1, 0, 0.146899,0.000404875) , 
4, 0.00579687, 1, 0, 0.539454,-0.000713331) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.423875,-0.00919649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311708,0.0162003) , 
5, 0.00224182, 1, 0, 0.32881,7.18228e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9981,0.0868689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517643,0.0228306) , 
2, 0.0237746, 1, 0, 0.823464,0.00103853) , 
7, 2.18808e-05, 1, 0, 0.437164,0.000283579) , 
3, 50.3964, 1, 0, 0.494953,-0.000279627)    );
  // itree = 645
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949542,-0.00567989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987575,0.378813) , 
6, 0.0043925, 1, 0, 0.961368,0.000314564) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130918) , 
2, 0.142831, 1, 0, 0,-3.79098e-05) , 
0, 0.0046603, 1, 0, 0.174202,2.59594e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.808878,-0.00685491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917629,-0.0214487) , 
1, 1.86287, 1, 0, 0.824361,-0.000752389) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765803,0.0051166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768312,-0.0248719) , 
4, 0.00485172, 1, 0, 0.766965,-0.00308519) , 
3, 86.9799, 1, 0, 0.815861,-0.00109787) , 
7, 6.56004e-06, 1, 0, 0.499415,-0.000543633)    );
  // itree = 646
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658066,-0.019185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74757,0.0276779) , 
5, 0.00321731, 1, 0, 0.69788,-0.000389467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38483,-0.0326205) , 
6, 0.00868784, 1, 0, 0.659311,-0.000639442) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.190212,0.00910587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732624,0.0872286) , 
6, 0.00985775, 1, 0, 0.408967,0.00088485) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.399084,-0.004834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254358,0.024857) , 
3, 96.0562, 1, 0, 0.367762,-2.66338e-05) , 
3, 12.5447, 1, 0, 0.37395,0.000110254) , 
5, 0.00450421, 1, 0, 0.502009,-0.000226182)    );
  // itree = 647
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.548379,-0.00759193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509188,0.0402745) , 
3, 33.5911, 1, 0, 0.536933,-1.47927e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655633,0.0588581) , 
6, 0.0115967, 1, 0, 0.54446,0.000109529) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527055,-0.0122481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.399185,0.00647696) , 
5, 0.00328105, 1, 0, 0.429949,-0.000180499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628444,-0.0241978) , 
6, 0.0115964, 1, 0, 0.442949,-0.000369638) , 
3, 50.3938, 1, 0, 0.500481,-9.8065e-05)    );
  // itree = 648
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.215133,0.018262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013104) , 
5, 0.00219568, 1, 0, 0.0267447,-2.85568e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.855527,0.0143006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802388,-0.0148226) , 
3, 25.1969, 1, 0, 0.82012,-0.000756676) , 
7, 9.41189e-07, 1, 0, 0.48363,-0.000436962) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986563,-0.00985401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.312897,-0.0149902) , 
2, 0.0238182, 1, 0, 0.646902,-0.00212652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604136,-0.0375105) , 
1, 1.1097, 1, 0, 0.634453,-0.00383698) , 
6, 0.0110168, 1, 0, 0.501995,-0.000850958)    );
  // itree = 649
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953002,0.059228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000410006,-0.0122998) , 
2, 0.0237906, 1, 0, 0.469465,0.000101474) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969242,-0.0111964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131076) , 
0, 0.00467007, 1, 0, 0.35027,-0.00041004) , 
3, 37.7109, 1, 0, 0.401979,-0.000188134) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939213,-0.0366984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965144,-0.0177911) , 
3, 21.8473, 1, 0, 0.958212,-0.00508262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989068,-0.0207522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.331613,0.0168624) , 
2, 0.0236845, 1, 0, 0.775706,-4.73437e-05) , 
0, 0.00169345, 1, 0, 0.856547,-0.00227772) , 
7, 2.13905e-05, 1, 0, 0.504558,-0.000659674)    );
  // itree = 650
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594184,-0.0132279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261927,0.00289597) , 
5, 0.00331807, 1, 0, 0.381081,-0.000170099) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770033,0.00495294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905896,-0.0225129) , 
1, 1.20421, 1, 0, 0.848759,-0.000926663) , 
7, 1.8681e-05, 1, 0, 0.491624,-0.000348924) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642447,-0.00603969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641638,-0.0222007) , 
1, 1.0735, 1, 0, 0.642134,-0.00263916) , 
6, 0.0115964, 1, 0, 0.50138,-0.000497377)    );
  // itree = 651
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47962,-0.000691555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681112,-0.0207506) , 
4, 0.00234567, 1, 0, 0.540115,-0.000485144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413916,0.0143414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315035,-0.0117144) , 
3, 37.4889, 1, 0, 0.358274,-8.49932e-05) , 
4, 0.00289791, 1, 0, 0.406752,-0.000191672) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974684,-0.0128297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983064,-0.0531876) , 
1, 1.19291, 1, 0, 0.978268,-0.00318408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760617,0.0414838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773909,-0.00581471) , 
5, 0.00535533, 1, 0, 0.76759,3.75326e-05) , 
0, 0.00169345, 1, 0, 0.861143,-0.00139305) , 
7, 2.18809e-05, 1, 0, 0.504812,-0.000450935)    );
  // itree = 652
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977131,-0.00737109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87841,-0.0139512) , 
2, 0.0102772, 1, 0, 0.950413,-0.000603311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395041,-0.0166961) , 
2, 0.0270647, 1, 0, 0.911361,-0.000968454) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00346539,0.0101086) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000178659,-0.00895591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130918) , 
0, 0.0373883, 1, 0, 4.97453e-05,-9.98914e-05) , 
2, 0.155477, 1, 0, 0.000869536,-4.04983e-06) , 
2, 0.0476074, 1, 0, 0.497067,-0.000529629)    );
  // itree = 653
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63285,-0.0125094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65479,0.00380162) , 
6, 0.00754219, 1, 0, 0.641429,-0.000334233) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711882,-0.00551196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922733,-0.0167799) , 
1, 1.23316, 1, 0, 0.806787,-0.00212172) , 
7, 2.38045e-05, 1, 0, 0.657773,-0.000510911) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0207888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131125) , 
2, 0.214373, 1, 0, 0,-0.000214669) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954173,0.0268059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467642,-0.0016687) , 
4, 0.00588247, 1, 0, 0.762011,0.000670551) , 
6, 0.010438, 1, 0, 0.287245,0.00011902) , 
4, 0.00521941, 1, 0, 0.510752,-0.000260963)    );
  // itree = 654
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805355,0.0207654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.70343e-05,-0.00989141) , 
2, 0.0952207, 1, 0, 0.426964,8.86319e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.188773,-0.00984547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595307,-0.0552715) , 
1, 1.38874, 1, 0, 0.267731,-0.000657473) , 
6, 0.00867949, 1, 0, 0.398056,-4.68203e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831276,0.0298693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.78728,-0.0174317) , 
3, 44.7553, 1, 0, 0.810572,-0.000858682) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562043,-0.0354875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944349,-0.0231902) , 
5, 0.00523914, 1, 0, 0.858961,-0.0045846) , 
4, 0.00509516, 1, 0, 0.842996,-0.00335533) , 
7, 2.13905e-05, 1, 0, 0.497162,-0.000783762)    );
  // itree = 655
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454017,-0.00474462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600713,-0.0123685) , 
6, 0.00998635, 1, 0, 0.472822,-0.000201208) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654423,0.0176207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612782,0.0770222) , 
1, 1.11732, 1, 0, 0.634185,0.000811509) , 
6, 0.0110383, 1, 0, 0.482095,-0.000143009) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694285,0.000981795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625427,-0.0275167) , 
3, 59.9305, 1, 0, 0.667282,-0.00207047) , 
6, 0.0115963, 1, 0, 0.493993,-0.00026685)    );
  // itree = 656
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.400903,-0.00191228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583441,-0.0266136) , 
6, 0.00772648, 1, 0, 0.414037,-0.000150335) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97337,0.0276064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131825) , 
0, 0.00465202, 1, 0, 0.395148,0.000183155) , 
6, 0.00811378, 1, 0, 0.408963,-6.07621e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809697,0.0384901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928445,-0.0211207) , 
1, 1.20389, 1, 0, 0.870907,-0.000722971) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.453103,-0.0454518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986447,-0.00382394) , 
4, 0.00573451, 1, 0, 0.796427,-0.00480426) , 
5, 0.00563865, 1, 0, 0.843671,-0.00221541) , 
7, 2.20855e-05, 1, 0, 0.502198,-0.000522884)    );
  // itree = 657
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998657,0.0386101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972553,-0.0206892) , 
0, 0.000211159, 1, 0, 0.986078,-0.0007955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664705,-0.0127231) , 
0, 0.00221718, 1, 0, 0.96902,-0.00117659) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131601) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000172323,0.119448) , 
6, 0.0086962, 1, 0, 4.63332e-05,3.84064e-05) , 
2, 0.119212, 1, 0, 3.5627e-05,-1.76521e-05) , 
0, 0.00465687, 1, 0, 0.502362,-0.000618451)    );
  // itree = 658
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570201,0.00177677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550562,-0.0218572) , 
3, 25.6305, 1, 0, 0.565811,-0.000335295) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875822,0.0147724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139206) , 
2, 0.0713414, 1, 0, 0.507376,7.4744e-05) , 
3, 33.6436, 1, 0, 0.535806,-0.000124747) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303606,-0.0109941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136069,0.0112609) , 
3, 130.38, 1, 0, 0.241251,-0.000188802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853471,-0.016571) , 
7, 2.18116e-05, 1, 0, 0.35847,-0.00064763) , 
3, 88.3229, 1, 0, 0.503201,-0.000220885)    );
  // itree = 659
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.392045,-0.000623187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583754,0.0499166) , 
6, 0.0076444, 1, 0, 0.417858,6.06084e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606401,-0.0313506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614044,0.0202468) , 
6, 0.00878425, 1, 0, 0.612145,-0.000494916) , 
6, 0.00844884, 1, 0, 0.454836,-4.51211e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641601,-0.0093279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572434,-0.0196613) , 
1, 1.23617, 1, 0, 0.63311,-0.00111071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637263,-0.0302881) , 
6, 0.0119554, 1, 0, 0.633563,-0.00153128) , 
6, 0.00985765, 1, 0, 0.497859,-0.000402865)    );
  // itree = 660
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558133,-0.0222467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536123,0.0157834) , 
3, 25.8411, 1, 0, 0.549537,-0.000302265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533689,-0.06989) , 
3, 45.2296, 1, 0, 0.548319,-0.00043064) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.39858,0.0459577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288743,-0.00630492) , 
3, 80.3571, 1, 0, 0.344434,7.23176e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998109,0.089032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59154,0.0482931) , 
2, 0.0234491, 1, 0, 0.85766,0.00154807) , 
7, 2.18808e-05, 1, 0, 0.454636,0.000389198) , 
3, 50, 1, 0, 0.507416,-7.26905e-05)    );
  // itree = 661
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.386073,0.0025177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601015,-0.021406) , 
6, 0.00764309, 1, 0, 0.413603,-0.000146283) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976451,0.074533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.10282,-0.00656571) , 
2, 0.0237202, 1, 0, 0.646216,0.000199215) , 
6, 0.00844841, 1, 0, 0.470216,-6.21961e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646116,0.0881342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648741,0.00589419) , 
3, 11.3368, 1, 0, 0.648004,0.000717449) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649094,-0.0487688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605203,0.00331991) , 
3, 76.4916, 1, 0, 0.625594,-0.00395674) , 
3, 47.583, 1, 0, 0.6376,-0.00145261) , 
6, 0.0104374, 1, 0, 0.499694,-0.000307066)    );
  // itree = 662
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.215799,-0.0114378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875993,0.0180483) , 
7, 6.85447e-06, 1, 0, 0.434532,-6.80323e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.237511,-0.00139371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665373,-0.0476278) , 
1, 1.38786, 1, 0, 0.314326,-0.000505689) , 
6, 0.00868415, 1, 0, 0.412456,-9.84232e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830625,0.0145815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915185,-0.0237657) , 
7, 3.34574e-05, 1, 0, 0.849177,-0.000440817) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80674,-0.0101403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879125,-0.0357959) , 
1, 1.19242, 1, 0, 0.833872,-0.0038121) , 
3, 47.0521, 1, 0, 0.842176,-0.00198289) , 
7, 2.18809e-05, 1, 0, 0.505625,-0.000506997)    );
  // itree = 663
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.459707,-0.00580231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442789,0.0452995) , 
3, 26.0121, 1, 0, 0.452438,0.000143456) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517929,-0.00963411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255826,-0.001503) , 
5, 0.00337441, 1, 0, 0.336225,-0.000173016) , 
3, 49.6607, 1, 0, 0.401306,4.21216e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.835377,-0.0143136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824729,0.0347832) , 
3, 50.409, 1, 0, 0.83067,-4.16457e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876654,-0.0378077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924012,-0.00555607) , 
1, 1.24869, 1, 0, 0.904495,-0.00395975) , 
1, 1.20784, 1, 0, 0.855878,-0.00137953) , 
7, 2.18118e-05, 1, 0, 0.500005,-0.000296235)    );
  // itree = 664
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.254904,-0.0102515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.10873,0.068563) , 
6, 0.00463886, 1, 0, 0.187399,4.76619e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716747,0.00652862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879019,-0.0211183) , 
1, 1.56101, 1, 0, 0.801229,-0.00096405) , 
7, 7.28118e-06, 1, 0, 0.405577,-0.000311938) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994344,0.0690776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988009,-0.0468832) , 
2, 0.00902158, 1, 0, 0.991269,-0.000923174) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.353785,-0.0116006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625805,-0.0229739) , 
7, 3.05792e-05, 1, 0, 0.476101,-0.00619531) , 
2, 0.0236845, 1, 0, 0.849264,-0.00237643) , 
7, 2.18117e-05, 1, 0, 0.501498,-0.000758262)    );
  // itree = 665
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504978,0.00282646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724449,-0.0266492) , 
5, 0.00239377, 1, 0, 0.601513,-0.000943424) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.293531,-0.00811841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385871,0.0128769) , 
6, 0.00867999, 1, 0, 0.314744,-6.38324e-05) , 
5, 0.00335148, 1, 0, 0.411348,-0.000360141) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979944,0.0046662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462205,-0.010206) , 
5, 0.00517107, 1, 0, 0.822411,-0.000397075) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689087,-0.023924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970055,-0.0147801) , 
5, 0.00554715, 1, 0, 0.862393,-0.00301916) , 
4, 0.00524102, 1, 0, 0.845548,-0.00191443) , 
7, 2.19618e-05, 1, 0, 0.504949,-0.0006952)    );
  // itree = 666
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.727351,-0.0131741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.29767e-05,0.0168924) , 
2, 0.0476103, 1, 0, 0.202626,-0.000230014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833573,-0.00723113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.776958,0.0341616) , 
3, 24.8536, 1, 0, 0.795612,0.000275654) , 
7, 7.74058e-06, 1, 0, 0.409555,-5.35558e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964727,-0.00753552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515243,-0.0374573) , 
5, 0.00561277, 1, 0, 0.876036,-0.00174814) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964282,0.0624066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613052,0.00114871) , 
4, 0.00593626, 1, 0, 0.774968,0.000759967) , 
4, 0.00574299, 1, 0, 0.846231,-0.00100848) , 
7, 2.2045e-05, 1, 0, 0.502034,-0.000255791)    );
  // itree = 667
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.199457,-0.0121013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186418,0.0012577) , 
3, 20.9669, 1, 0, 0.191337,-3.3303e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813584,-0.0161699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891085,-0.0305499) , 
1, 2.1064, 1, 0, 0.820614,-0.0016568) , 
7, 5.71736e-06, 1, 0, 0.544857,-0.000945364) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.890399,0.0418684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00478961,-0.00945676) , 
2, 0.0237805, 1, 0, 0.301869,-4.42562e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.087467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571263,0.0370509) , 
2, 0.0236991, 1, 0, 0.841354,0.00102492) , 
7, 2.18116e-05, 1, 0, 0.412642,0.000175279) , 
3, 62.8488, 1, 0, 0.499826,-0.000563687)    );
  // itree = 668
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.185261,-0.0068387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131177,0.29815) , 
3, 66.8165, 1, 0, 0.176995,6.98336e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0805752,-0.0102743) , 
3, 87.6982, 1, 0, 0.155656,-2.63921e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854939,0.0683368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819288,-0.00491619) , 
3, 4.76134, 1, 0, 0.825946,7.76817e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825539,-0.0182774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739876,0.00422888) , 
6, 0.010768, 1, 0, 0.804974,-0.00138849) , 
3, 24.9888, 1, 0, 0.811707,-0.000917785) , 
7, 5.71741e-06, 1, 0, 0.498299,-0.000491949)    );
  // itree = 669
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975438,-0.00685784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894123,-0.0147584) , 
2, 0.00895182, 1, 0, 0.950141,-0.00046413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443532,-0.0140623) , 
2, 0.0268598, 1, 0, 0.915328,-0.000747573) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000176152,0.00571507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139293) , 
3, 42.8276, 1, 0, 0.00011295,-7.73192e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00173272,0.0212829) , 
3, 74.9795, 1, 0, 0.000620475,9.49671e-05) , 
2, 0.0476103, 1, 0, 0.504278,-0.000368954)    );
  // itree = 670
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.453922,-0.00441874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.28713,0.0308103) , 
3, 75.0028, 1, 0, 0.412814,-3.85465e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226932,0.00505164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643565,-0.024141) , 
1, 1.40594, 1, 0, 0.379424,-0.000804572) , 
6, 0.00811195, 1, 0, 0.404461,-0.000204167) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794705,0.000594315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900072,0.0488394) , 
1, 1.18644, 1, 0, 0.840914,0.000433869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.841414,0.0456663) , 
3, 90.8429, 1, 0, 0.840987,0.00072066) , 
7, 2.13905e-05, 1, 0, 0.503082,4.7717e-06)    );
  // itree = 671
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.484103,-0.00569813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617817,-0.0220757) , 
7, 5.7774e-06, 1, 0, 0.524775,-0.000629521) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979945,0.0123521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131339) , 
0, 0.00467007, 1, 0, 0.349003,8.40015e-05) , 
4, 0.00289998, 1, 0, 0.397328,-0.00011217) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830324,0.00524878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8099,-0.020225) , 
6, 0.0118725, 1, 0, 0.827036,-0.000200131) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991019,0.0806656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816994,-0.0200261) , 
0, 0.000912721, 1, 0, 0.900672,-0.00353535) , 
1, 1.24313, 1, 0, 0.844379,-0.000985652) , 
7, 2.13905e-05, 1, 0, 0.498083,-0.000309033)    );
  // itree = 672
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524276,-0.0161399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730141,0.0145398) , 
5, 0.00256163, 1, 0, 0.602228,-0.000336923) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897189,0.0269156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0031376,-0.00821944) , 
2, 0.023795, 1, 0, 0.303721,4.51996e-05) , 
5, 0.00336165, 1, 0, 0.402237,-8.09119e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775899,0.00291279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834785,-0.0292947) , 
5, 0.0056956, 1, 0, 0.805285,-0.00129209) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88128,-0.0179958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932835,-0.0344526) , 
7, 2.48828e-05, 1, 0, 0.907409,-0.00626025) , 
1, 1.19309, 1, 0, 0.845296,-0.00323853) , 
7, 2.1881e-05, 1, 0, 0.496791,-0.00075479)    );
  // itree = 673
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993784,0.0074957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947021,0.113459) , 
0, 0.000638641, 1, 0, 0.976494,0.000668567) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130919) , 
2, 0.142875, 1, 0, 0,-3.95701e-05) , 
0, 0.00467009, 1, 0, 0.175912,8.79982e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84756,-0.00936868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896374,-0.0312931) , 
4, 0.00528533, 1, 0, 0.854931,-0.0010481) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974879,0.00250486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2731,0.0304946) , 
2, 0.0237819, 1, 0, 0.607032,0.001246) , 
4, 0.00577142, 1, 0, 0.817563,-0.000702285) , 
7, 6.55993e-06, 1, 0, 0.503719,-0.000315742)    );
  // itree = 674
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990977,0.0474535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951674,-0.00868677) , 
5, 0.00409172, 1, 0, 0.976009,5.041e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925262,0.0571769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888423,-0.0329641) , 
3, 24.8263, 1, 0, 0.899082,-0.00421106) , 
2, 0.00902158, 1, 0, 0.953628,-0.00118944) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669658,0.00443868) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130921) , 
2, 0.137181, 1, 0, 0,-2.6205e-05) , 
0, 0.00466298, 1, 0, 0.059399,0.000121151) , 
2, 0.023795, 1, 0, 0.500796,-0.000525767)    );
  // itree = 675
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466779,0.009344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443514,-0.00411708) , 
3, 4.81161, 1, 0, 0.451907,-3.1444e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866933,-0.0305425) , 
7, 2.2721e-05, 1, 0, 0.533713,-0.00108914) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448706,-0.0028296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604859,-0.00977694) , 
6, 0.00993807, 1, 0, 0.460026,-0.000120587) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640573,-0.00562979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614093,0.0399608) , 
3, 48.6222, 1, 0, 0.626484,0.000760781) , 
6, 0.0104369, 1, 0, 0.490868,4.27154e-05) , 
3, 12.6232, 1, 0, 0.497562,-0.000134119)    );
  // itree = 676
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959707,0.00363263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00185299,-0.011461) , 
2, 0.0238037, 1, 0, 0.459753,-4.57908e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869761,0.0891347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846872,0.0025226) , 
3, 11.928, 1, 0, 0.857864,0.00109369) , 
7, 2.2721e-05, 1, 0, 0.537322,0.000176229) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659071,-0.0351464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.47474,0.0466491) , 
4, 0.00403015, 1, 0, 0.548301,-0.0021066) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.365136,-0.00278054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815582,-0.0122156) , 
7, 2.19616e-05, 1, 0, 0.46296,-0.000363574) , 
3, 36.3896, 1, 0, 0.478522,-0.000681406) , 
3, 25.053, 1, 0, 0.496711,-0.0004161)    );
  // itree = 677
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530067,-0.046762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.505828,-0.00162451) , 
3, 5.40279, 1, 0, 0.507699,-0.000136967) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982327,0.0438552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.273319,0.0193835) , 
2, 0.0237892, 1, 0, 0.653546,0.000814295) , 
6, 0.0110166, 1, 0, 0.525361,-2.17712e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226677,0.00129607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477075,-0.0519649) , 
6, 0.00928163, 1, 0, 0.302152,-0.00208712) , 
3, 113.388, 1, 0, 0.50501,-0.000210081)    );
  // itree = 678
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935291,0.0139993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000400202,-0.012303) , 
2, 0.0238037, 1, 0, 0.396103,-7.29068e-07) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597333,-0.0158629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357951,-0.0025193) , 
6, 0.00850069, 1, 0, 0.403358,-0.0003796) , 
6, 0.00811362, 1, 0, 0.397968,-9.81321e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870607,-0.0272937) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870974,-0.0162456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812443,0.0103755) , 
5, 0.00575888, 1, 0, 0.854499,-0.00110018) , 
3, 12.6113, 1, 0, 0.857117,-0.00194547) , 
7, 2.20906e-05, 1, 0, 0.493838,-0.000483854)    );
  // itree = 679
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.274241,-0.0109268) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963432,0.0235657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131033) , 
0, 0.00467007, 1, 0, 0.139327,1.14332e-05) , 
4, 0.00116083, 1, 0, 0.15242,-3.20522e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0874004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468267,-0.0260214) , 
2, 0.0238019, 1, 0, 0.787974,-0.00293215) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824294,-0.0123245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948825,0.186861) , 
7, 2.94954e-05, 1, 0, 0.831881,-0.000511164) , 
1, 1.11547, 1, 0, 0.825334,-0.000872175) , 
7, 5.71731e-06, 1, 0, 0.501797,-0.000468244)    );
  // itree = 680
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.257037,-0.00801626) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.191902,-0.00463194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131363) , 
6, 0.00637772, 1, 0, 0.136856,-2.7069e-05) , 
4, 0.00116083, 1, 0, 0.148305,-5.00753e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846039,-0.0218816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8756,-0.0313064) , 
7, 2.49586e-05, 1, 0, 0.853658,-0.00245474) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.329943,0.000420984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861268,0.0543989) , 
6, 0.0117013, 1, 0, 0.604685,0.000644183) , 
5, 0.00577551, 1, 0, 0.817592,-0.00200583) , 
7, 5.71741e-06, 1, 0, 0.493804,-0.00105968)    );
  // itree = 681
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.409202,-0.0138379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64365,0.0141804) , 
6, 0.00804666, 1, 0, 0.455252,-0.000214218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607902,-0.0163489) , 
6, 0.0093871, 1, 0, 0.464465,-0.000308805) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651603,0.0813999) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64445,0.0612099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616676,0.00664931) , 
6, 0.010521, 1, 0, 0.62475,0.000494952) , 
3, 12.6505, 1, 0, 0.628889,0.000692415) , 
6, 0.00985765, 1, 0, 0.504645,-6.41395e-05)    );
  // itree = 682
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.375668,-0.00653821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61055,0.0176795) , 
6, 0.00715357, 1, 0, 0.448489,1.95446e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659721,0.00526235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593125,-0.0106355) , 
3, 50.4887, 1, 0, 0.630277,-0.000500341) , 
6, 0.0093885, 1, 0, 0.490805,-0.000101472) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68498,0.0125413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645808,0.067687) , 
3, 47.0916, 1, 0, 0.666125,0.000851285) , 
6, 0.0115965, 1, 0, 0.502051,-4.03558e-05)    );
  // itree = 683
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.276341,-0.00635534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502514,0.0617617) , 
6, 0.00500842, 1, 0, 0.333152,4.37812e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.531913,-0.0248404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577152,0.00116545) , 
6, 0.00646163, 1, 0, 0.57099,-0.000279997) , 
6, 0.0061857, 1, 0, 0.409374,-5.99828e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657118,-0.0142828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658572,-0.0371751) , 
3, 43.2413, 1, 0, 0.657285,-0.00125949) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642637,0.0365409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520474,-0.0108585) , 
3, 91.3347, 1, 0, 0.59564,3.30143e-05) , 
3, 50.4792, 1, 0, 0.630456,-0.000696965) , 
6, 0.00811903, 1, 0, 0.50295,-0.000329595)    );
  // itree = 684
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892802,-0.0209485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873459,-0.00192506) , 
3, 37.1844, 1, 0, 0.88296,-0.000613619) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130922) , 
2, 0.119107, 1, 0, 0,-4.07727e-05) , 
0, 0.0186803, 1, 0, 0.407175,-0.00030494) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996312,-0.0113752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984283,-0.0795125) , 
2, 0.0169155, 1, 0, 0.994025,-0.00210477) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.385618,-0.0195797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55558,-0.0169352) , 
3, 63.1828, 1, 0, 0.458179,-0.00807002) , 
2, 0.0236845, 1, 0, 0.845968,-0.00375301) , 
7, 2.18809e-05, 1, 0, 0.500634,-0.00103935)    );
  // itree = 685
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448241,-0.00787335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414437,0.0238848) , 
6, 0.00810885, 1, 0, 0.440112,-2.34098e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.376789,-0.0149099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218469,0.000512328) , 
3, 93.7413, 1, 0, 0.271819,-0.000511556) , 
3, 75.7064, 1, 0, 0.396845,-0.00014891) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997355,-0.0552955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859913,-0.0213073) , 
2, 0.0211102, 1, 0, 0.96547,-0.00385496) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987054,0.00600408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296324,-0.010417) , 
2, 0.0236845, 1, 0, 0.723057,-0.000744584) , 
0, 0.0018626, 1, 0, 0.843315,-0.0022876) , 
7, 2.13905e-05, 1, 0, 0.49754,-0.00063126)    );
  // itree = 686
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481892,-0.00833697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385793,0.0163238) , 
3, 37.5821, 1, 0, 0.428492,1.08852e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67724,-0.0121471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604072,0.0511725) , 
6, 0.00949923, 1, 0, 0.652124,-0.000408445) , 
6, 0.00891797, 1, 0, 0.45545,-3.96629e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.197312,-0.00555285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918862,0.00754776) , 
4, 0.00500861, 1, 0, 0.49167,2.51109e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986729,0.0623488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.33249,0.0215159) , 
2, 0.0237819, 1, 0, 0.707298,0.000942074) , 
4, 0.0052557, 1, 0, 0.622901,0.000583175) , 
6, 0.00985765, 1, 0, 0.496508,0.000113053)    );
  // itree = 687
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977762,0.00452416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978113,0.0913178) , 
2, 0.00914074, 1, 0, 0.977791,0.000109597) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677408,-0.0211577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816276,-0.0107604) , 
5, 0.0045097, 1, 0, 0.779649,-0.00309742) , 
2, 0.0112988, 1, 0, 0.920455,-0.000818408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00167751,0.0115097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013092) , 
0, 0.0467404, 1, 0, 0,-0.000170524) , 
2, 0.219901, 1, 0, 0.00065401,-7.45536e-07) , 
2, 0.0476074, 1, 0, 0.504937,-0.000449031)    );
  // itree = 688
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592516,-0.0167018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438106,0.00296792) , 
5, 0.00328575, 1, 0, 0.482542,-0.000176676) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576941,-0.0564818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626629,-0.000904816) , 
6, 0.0112817, 1, 0, 0.603975,-0.00336641) , 
6, 0.0110438, 1, 0, 0.4898,-0.000367326) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66543,0.0160759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621415,0.152332) , 
6, 0.0119553, 1, 0, 0.648065,0.00172229) , 
6, 0.0115963, 1, 0, 0.500353,-0.000227999)    );
  // itree = 689
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645491,0.0174348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0578255,-0.0156525) , 
4, 0.00347912, 1, 0, 0.323477,3.81215e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883451,-0.0270016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834091,0.00562606) , 
6, 0.00879762, 1, 0, 0.855784,-0.00093761) , 
7, 1.33478e-05, 1, 0, 0.471705,-0.000233583) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629391,-0.0016269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640091,-0.0094839) , 
6, 0.0116798, 1, 0, 0.632536,-0.000538707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628383,-0.00694437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589106,-0.0561283) , 
1, 1.1115, 1, 0, 0.609799,-0.0037137) , 
3, 48.7937, 1, 0, 0.622257,-0.00197408) , 
6, 0.0104373, 1, 0, 0.499071,-0.00054996)    );
  // itree = 690
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611668,-0.00224924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506134,-0.0113188) , 
3, 87, 1, 0, 0.598239,-0.000288406) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625172,-0.0252148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589185,-0.0105067) , 
3, 36.6012, 1, 0, 0.606694,-0.00162899) , 
7, 9.37262e-06, 1, 0, 0.5999,-0.000551739) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983128,0.0458646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7603,-0.0115244) , 
0, 0.00221204, 1, 0, 0.967059,0.000427519) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130923) , 
2, 0.142822, 1, 0, 0,-8.76484e-05) , 
0, 0.00466298, 1, 0, 0.464744,0.000159928) , 
5, 0.00337573, 1, 0, 0.50075,-2.96626e-05)    );
  // itree = 691
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247643,-0.0027927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48414,-0.0193464) , 
6, 0.00454588, 1, 0, 0.276304,-0.000153996) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.749242,0.0371034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293829,-0.00781377) , 
4, 0.00347333, 1, 0, 0.53447,0.000163988) , 
6, 0.0050261, 1, 0, 0.386638,-1.80966e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629591,0.0223661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633579,-0.0155904) , 
6, 0.00876891, 1, 0, 0.632818,-0.000879275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559744,-0.0304873) , 
1, 1.54488, 1, 0, 0.626462,-0.00111371) , 
6, 0.00753827, 1, 0, 0.500298,-0.000537338)    );
  // itree = 692
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.534455,-0.0320415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539829,0.00694) , 
3, 4.29137, 1, 0, 0.539248,3.06919e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685435,-0.0179638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374681,-0.00120326) , 
5, 0.00449685, 1, 0, 0.515602,-0.00106942) , 
3, 45.0603, 1, 0, 0.533923,-0.000238462) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.372819,0.0188809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156335,-0.00998321) , 
3, 120.768, 1, 0, 0.317329,1.60541e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0873254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586473,0.0184752) , 
2, 0.0233634, 1, 0, 0.844229,0.000902232) , 
7, 2.19616e-05, 1, 0, 0.427964,0.000202128) , 
3, 63.0863, 1, 0, 0.4989,-9.28326e-05)    );
  // itree = 693
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.725772,-0.0503642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71802,-0.0181877) , 
3, 3.59955, 1, 0, 0.718774,-0.00132816) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681827,0.00580184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597005,-0.0195746) , 
3, 91.7914, 1, 0, 0.660345,-0.000407778) , 
3, 37.7954, 1, 0, 0.68793,-0.000842298) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968182,0.0750068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983563,0.0125718) , 
4, 0.00587688, 1, 0, 0.97626,0.00154006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130922) , 
2, 0.166728, 1, 0, 0,-4.65836e-05) , 
0, 0.00467007, 1, 0, 0.150368,0.000197798) , 
5, 0.00571638, 1, 0, 0.50258,-0.000483676)    );
  // itree = 694
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538214,0.0176047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417467,-0.00841959) , 
3, 50.2798, 1, 0, 0.486272,-4.45119e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602639,0.0159994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599142,-0.0145305) , 
1, 1.11687, 1, 0, 0.601015,-0.00131089) , 
6, 0.0110438, 1, 0, 0.493096,-0.000119826) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690413,-0.0421351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608164,-0.00202503) , 
3, 47.9664, 1, 0, 0.648939,-0.00568388) , 
6, 0.0115963, 1, 0, 0.503249,-0.000482333)    );
  // itree = 695
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992872,0.020548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943591,0.0222136) , 
0, 0.000887544, 1, 0, 0.972847,0.000369784) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013092) , 
2, 0.119021, 1, 0, 0,-4.18378e-05) , 
0, 0.00466573, 1, 0, 0.405118,0.000129572) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873387,-0.0187575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911921,0.0304021) , 
7, 3.10217e-05, 1, 0, 0.884803,-0.00143659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599538,-0.0287353) , 
5, 0.00595273, 1, 0, 0.841047,-0.0026511) , 
7, 2.2045e-05, 1, 0, 0.498479,-0.000465956)    );
  // itree = 696
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984469,-0.0131533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972504,0.0153228) , 
5, 0.00315052, 1, 0, 0.976802,-9.47172e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986858,-0.0586338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.820264,-0.00344598) , 
4, 0.00553905, 1, 0, 0.876277,-0.00165748) , 
4, 0.00520808, 1, 0, 0.955692,-0.000422895) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.551154,0.035709) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000695296,0.00281625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00102485,-0.00923778) , 
6, 0.00927144, 1, 0, 0.000769531,-8.36094e-05) , 
2, 0.0464739, 1, 0, 0.0597721,0.000215904) , 
2, 0.0238037, 1, 0, 0.503902,-0.000100765)    );
  // itree = 697
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959585,0.0403446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00115518,-0.00928052) , 
2, 0.0238037, 1, 0, 0.479451,4.17488e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875407,0.0291127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811362,0.0856351) , 
5, 0.00551746, 1, 0, 0.848188,0.00103768) , 
7, 2.22501e-05, 1, 0, 0.560455,0.000260533) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.786205,0.025819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138915) , 
2, 0.0238052, 1, 0, 0.14297,-6.21109e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81595,-0.0182091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773327,-0.00207499) , 
3, 70.8033, 1, 0, 0.800654,-0.00146891) , 
7, 5.71741e-06, 1, 0, 0.481496,-0.000786223) , 
3, 25.2026, 1, 0, 0.505686,-0.000465545)    );
  // itree = 698
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.612818,-0.00798038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.341474,0.00292897) , 
5, 0.00290629, 1, 0, 0.419064,-3.34323e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972413,0.149618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131299) , 
0, 0.00463176, 1, 0, 0.266087,0.000304747) , 
6, 0.00869695, 1, 0, 0.39246,2.53803e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991689,0.0514518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404403,-0.00576473) , 
2, 0.0237202, 1, 0, 0.85215,1.67283e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.808972,-0.0205977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891196,-0.0277452) , 
1, 1.18638, 1, 0, 0.842242,-0.00350851) , 
3, 68.1355, 1, 0, 0.849402,-0.00096101) , 
7, 2.13903e-05, 1, 0, 0.494276,-0.000194408)    );
  // itree = 699
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700662,-0.0341673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.373176,0.0177447) , 
5, 0.00432637, 1, 0, 0.537502,-0.000486583) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607118,-0.0264566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692532,-0.0355141) , 
6, 0.0114614, 1, 0, 0.658469,-0.00292927) , 
6, 0.0110174, 1, 0, 0.551653,-0.000772338) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973594,0.0239318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722195,0.0432059) , 
2, 0.0101493, 1, 0, 0.868965,0.000594141) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000171148,0.0253171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00116636,-0.00478498) , 
6, 0.00579185, 1, 0, 0.000675421,-8.97202e-05) , 
2, 0.071385, 1, 0, 0.453656,0.000267045) , 
3, 50.3989, 1, 0, 0.509077,-0.000320764)    );
  // itree = 700
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.191639,0.0081416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0865328,-0.0112801) , 
3, 87.0052, 1, 0, 0.167955,-4.86038e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793385,0.0110089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952521,0.135046) , 
1, 2.13159, 1, 0, 0.808384,0.000298827) , 
7, 6.44298e-06, 1, 0, 0.402932,7.88702e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931675,0.0668452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893951,-0.0200866) , 
3, 33.5654, 1, 0, 0.909665,-0.00243381) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801763,-0.00902545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.805908,0.0136775) , 
3, 48.7764, 1, 0, 0.803629,-1.70253e-05) , 
6, 0.0105041, 1, 0, 0.847257,-0.00101139) , 
7, 2.13905e-05, 1, 0, 0.503664,-0.000168301)    );
  // itree = 701
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963093,-0.0166576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798573,-0.0292295) , 
2, 0.0169155, 1, 0, 0.948909,-0.000925755) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.449625,0.00940247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00063822,-0.00524588) , 
2, 0.0464739, 1, 0, 0.038063,-6.10082e-06) , 
2, 0.0238037, 1, 0, 0.48524,-0.000457602) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664469,0.0269633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632776,-0.0392702) , 
6, 0.0119553, 1, 0, 0.652032,-0.00278239) , 
6, 0.0115965, 1, 0, 0.496196,-0.000610319)    );
  // itree = 702
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966172,-0.00723925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952853,-0.0368826) , 
4, 0.00435801, 1, 0, 0.964398,-0.000806069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013092) , 
2, 0.119021, 1, 0, 0,-5.44174e-05) , 
0, 0.00466573, 1, 0, 0.404951,-0.000370037) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807334,-0.019001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941876,0.0255285) , 
5, 0.00521566, 1, 0, 0.876331,-0.000987944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669544,-0.0254634) , 
5, 0.00590361, 1, 0, 0.840016,-0.00214691) , 
7, 2.18118e-05, 1, 0, 0.500209,-0.000759086)    );
  // itree = 703
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.26338,-0.00648562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474244,0.222527) , 
6, 0.00489434, 1, 0, 0.286678,7.77091e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592652,0.00838375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.511349,-0.0170101) , 
1, 1.86271, 1, 0, 0.559491,-0.000376571) , 
6, 0.00541314, 1, 0, 0.403702,-0.000117157) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995099,-0.0357207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614124,-0.0185708) , 
2, 0.0237783, 1, 0, 0.930422,-0.00307345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131852) , 
0, 0.00926708, 1, 0, 0.617739,-0.00207044) , 
6, 0.00811919, 1, 0, 0.494082,-0.000941954)    );
  // itree = 704
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559461,0.0598301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523866,-0.0319896) , 
3, 3.08348, 1, 0, 0.543606,-0.00191896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629768,-0.0296537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520732,0.0127293) , 
5, 0.00324811, 1, 0, 0.550641,-0.000223519) , 
3, 5.39933, 1, 0, 0.549567,-0.000482504) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.380181,0.00219183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599922,-0.012284) , 
6, 0.00891834, 1, 0, 0.406349,-0.000107745) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695087,0.0637438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598628,0.00540846) , 
3, 81.0065, 1, 0, 0.655551,0.000962727) , 
6, 0.0098584, 1, 0, 0.466178,0.000149256) , 
3, 37.7954, 1, 0, 0.503078,-0.000130301)    );
  // itree = 705
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673982,-0.00498932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.232754,0.0177518) , 
5, 0.00406157, 1, 0, 0.448444,1.75835e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614026,0.0278567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62776,-0.0177831) , 
1, 1.20919, 1, 0, 0.621999,-0.000628732) , 
6, 0.00944267, 1, 0, 0.480589,-0.000115017) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986968,0.0698981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982984,-0.076508) , 
3, 46.2112, 1, 0, 0.98524,-0.00142863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288571,-0.0243635) , 
2, 0.0237983, 1, 0, 0.643627,-0.00325008) , 
6, 0.0110166, 1, 0, 0.500441,-0.00049677)    );
  // itree = 706
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.282467,-0.00193752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462004,-0.0124297) , 
6, 0.00524525, 1, 0, 0.307657,-8.49459e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64693,0.0630723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443613,-0.00337815) , 
3, 62.5048, 1, 0, 0.579303,0.000257402) , 
6, 0.00579844, 1, 0, 0.408823,4.25515e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62144,0.00464076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606644,-0.0263805) , 
6, 0.0118558, 1, 0, 0.619903,-0.000124469) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550727,-0.03721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657476,-0.0102051) , 
1, 1.44256, 1, 0, 0.616988,-0.00206159) , 
1, 1.4048, 1, 0, 0.619402,-0.000457287) , 
6, 0.00811887, 1, 0, 0.497173,-0.00016716)    );
  // itree = 707
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593707,-0.00771749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850762,-0.0162776) , 
7, 1.48207e-05, 1, 0, 0.657018,-0.000502092) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.756202,0.0516826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0569689,-0.00543259) , 
4, 0.00535376, 1, 0, 0.273537,0.000214587) , 
4, 0.00463582, 1, 0, 0.480792,-0.000172747) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624149,-0.0289082) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64831,-0.0272635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653003,0.0102064) , 
3, 22.7853, 1, 0, 0.651717,-0.00121389) , 
6, 0.0112984, 1, 0, 0.645922,-0.00292643) , 
6, 0.0110169, 1, 0, 0.5005,-0.000501399)    );
  // itree = 708
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.612625,-0.0169069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703103,0.00947793) , 
6, 0.00633425, 1, 0, 0.652677,-0.000212968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670178,-0.0256745) , 
7, 1.81274e-05, 1, 0, 0.654537,-0.000549898) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.398893,-0.00100057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.344694,-0.0139122) , 
3, 96.2849, 1, 0, 0.395234,-0.00011591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.236969,0.0477185) , 
3, 112.339, 1, 0, 0.37552,3.6832e-05) , 
5, 0.00450089, 1, 0, 0.50107,-0.000227179)    );
  // itree = 709
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707367,-0.00485823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293842,-0.0299814) , 
6, 0.00771046, 1, 0, 0.618724,-0.000485489) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421152,0.0234069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.217618,-0.0382144) , 
3, 113.393, 1, 0, 0.396797,9.28885e-05) , 
4, 0.00405872, 1, 0, 0.487013,-0.000142229) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.699788,-0.0202314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691784,-0.0493556) , 
1, 1.07129, 1, 0, 0.696484,-0.00246774) , 
6, 0.0115963, 1, 0, 0.500174,-0.000288344)    );
  // itree = 710
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977953,0.021556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964777,-0.0191379) , 
3, 87.6896, 1, 0, 0.976509,-6.67756e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909061,-0.0315147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882662,0.00840263) , 
3, 49.5943, 1, 0, 0.897222,-0.00207597) , 
2, 0.00906808, 1, 0, 0.954207,-0.00063193) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.288291,0.00117761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459633,0.0258962) , 
3, 63.1732, 1, 0, 0.35873,0.00083649) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000806617,-0.00772177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013092) , 
0, 0.0327226, 1, 0, 0.000198584,-0.000120943) , 
2, 0.0692575, 1, 0, 0.0543817,2.37492e-05) , 
2, 0.0238052, 1, 0, 0.496915,-0.000298713)    );
  // itree = 711
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953478,0.0313941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013388) , 
2, 0.023795, 1, 0, 0.500977,2.56359e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949658,-0.02485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741798,-0.0230062) , 
6, 0.00659004, 1, 0, 0.78371,-0.00339345) , 
7, 9.01082e-06, 1, 0, 0.605964,-0.00124397) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721748,-0.00747172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741725,0.0278389) , 
4, 0.00470408, 1, 0, 0.734871,0.000353364) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.477542,-0.0332719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131048) , 
0, 0.0233504, 1, 0, 0.0468967,-0.000366809) , 
4, 0.00599103, 1, 0, 0.431274,3.55573e-05) , 
4, 0.00405691, 1, 0, 0.500841,-0.000473993)    );
  // itree = 712
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652709,-0.0126023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784319,-0.0164038) , 
5, 0.00419302, 1, 0, 0.664361,-0.000511033) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762965,0.034212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136145) , 
2, 0.0950405, 1, 0, 0.352655,0.000208585) , 
5, 0.0044038, 1, 0, 0.495593,-0.000121406) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680576,-0.0219259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613289,0.00806999) , 
3, 56.8025, 1, 0, 0.65271,-0.0019602) , 
6, 0.0115964, 1, 0, 0.50567,-0.000239348)    );
  // itree = 713
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627882,-0.0264417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52258,0.0222084) , 
4, 0.00289942, 1, 0, 0.548896,-1.46853e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667645,-0.0159151) , 
6, 0.0110169, 1, 0, 0.56255,-0.000199381) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925211,0.0158831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00349544,-0.00958621) , 
2, 0.023795, 1, 0, 0.364392,1.08131e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997147,0.0923355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524799,0.0221182) , 
2, 0.0234259, 1, 0, 0.836321,0.000880264) , 
7, 2.18117e-05, 1, 0, 0.467034,0.000199914) , 
3, 37.4429, 1, 0, 0.508452,2.67689e-05)    );
  // itree = 714
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.276199,-0.01923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553825,0.0258264) , 
6, 0.00502396, 1, 0, 0.411293,3.99465e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.30243,0.00901768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632035,-0.0234465) , 
1, 1.40562, 1, 0, 0.417013,-0.000702005) , 
6, 0.00811378, 1, 0, 0.412773,-0.000178666) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995379,-0.0369236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984161,-0.0698075) , 
2, 0.0168283, 1, 0, 0.993256,-0.0019662) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.431744,-0.0144378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561339,-0.0195092) , 
3, 63.1828, 1, 0, 0.490045,-0.00546582) , 
2, 0.0236511, 1, 0, 0.85377,-0.00293626) , 
7, 2.20905e-05, 1, 0, 0.506635,-0.000765592)    );
  // itree = 715
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.489789,0.00771763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634481,-0.0179593) , 
6, 0.00996741, 1, 0, 0.508323,-0.00013502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.177675,0.0358646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389788,0.126732) , 
6, 0.00787784, 1, 0, 0.251844,0.00110667) , 
3, 113.562, 1, 0, 0.483322,-1.39845e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650375,0.000648141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672185,-0.0147482) , 
1, 1.08183, 1, 0, 0.659366,-0.000620463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64037,-0.0598714) , 
1, 1.1097, 1, 0, 0.653876,-0.00250648) , 
6, 0.0110168, 1, 0, 0.503509,-0.000309002)    );
  // itree = 716
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98779,-0.00644059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842999,-0.0157138) , 
0, 0.00154843, 1, 0, 0.963277,-0.000632809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013092) , 
2, 0.119019, 1, 0, 0,-6.30816e-05) , 
0, 0.00467007, 1, 0, 0.398862,-0.000298987) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852856,0.0415906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87232,-0.0116199) , 
3, 31.9581, 1, 0, 0.85766,0.000269165) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790528,-0.0204602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888448,-0.0608481) , 
7, 3.05608e-05, 1, 0, 0.829034,-0.00592484) , 
3, 44.7371, 1, 0, 0.844069,-0.00267155) , 
7, 2.1881e-05, 1, 0, 0.49384,-0.000805138)    );
  // itree = 717
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995427,0.0151243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918905,0.113637) , 
0, 0.000648705, 1, 0, 0.969665,0.000427832) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013092) , 
2, 0.1191, 1, 0, 0,-5.36564e-05) , 
0, 0.00467007, 1, 0, 0.15116,2.14022e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839003,-0.0165691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613002,0.0259992) , 
4, 0.00570517, 1, 0, 0.799643,-0.000730797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938123,-0.0277165) , 
1, 2.17686, 1, 0, 0.807874,-0.0010059) , 
7, 5.71731e-06, 1, 0, 0.494084,-0.000515035)    );
  // itree = 718
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.257161,-0.00940258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462721,0.100396) , 
6, 0.00469349, 1, 0, 0.308211,7.61145e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.551029,-0.016043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.399053,0.000977258) , 
6, 0.00792385, 1, 0, 0.473103,-0.000332326) , 
6, 0.0057981, 1, 0, 0.395693,-0.00014058) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598306,0.00930571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958043,0.0757598) , 
4, 0.00474529, 1, 0, 0.792443,0.000629835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878023,-0.0240658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879689,-0.0213929) , 
6, 0.0103844, 1, 0, 0.879413,-0.00383604) , 
4, 0.00502099, 1, 0, 0.855343,-0.00260003) , 
7, 2.13905e-05, 1, 0, 0.496313,-0.000678966)    );
  // itree = 719
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.351707,-0.0050666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787615,-0.018556) , 
7, 4.37126e-06, 1, 0, 0.576269,-0.000623741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729516,0.00894372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119061,-0.0101248) , 
4, 0.00430831, 1, 0, 0.284831,-1.41696e-05) , 
4, 0.0034797, 1, 0, 0.396915,-0.000248606) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994177,0.0432942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992652,0.0578723) , 
2, 0.0112083, 1, 0, 0.993585,0.000283534) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413778,-0.0187934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51866,-0.00614606) , 
5, 0.00565938, 1, 0, 0.462362,-0.0054014) , 
2, 0.0235349, 1, 0, 0.842787,-0.00133025) , 
7, 2.13904e-05, 1, 0, 0.497498,-0.000492611)    );
  // itree = 720
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711671,-0.0177156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.03826e-05,0.0293044) , 
2, 0.04759, 1, 0, 0.182788,-9.41431e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81525,0.0182866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712871,-0.00859165) , 
3, 83.4785, 1, 0, 0.799211,0.000193638) , 
7, 7.28003e-06, 1, 0, 0.400299,7.40304e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823293,0.00228502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86098,-0.0228938) , 
5, 0.00518355, 1, 0, 0.846368,-0.00188742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.773108,-0.00910139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857391,0.0498946) , 
5, 0.00535625, 1, 0, 0.816907,0.00041213) , 
3, 75.6004, 1, 0, 0.839269,-0.00133327) , 
7, 2.18118e-05, 1, 0, 0.494901,-0.000281526)    );
  // itree = 721
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454963,-0.0033543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.457745,-0.0175864) , 
3, 45.6452, 1, 0, 0.455171,-0.000129203) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820582,-0.00742133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847241,0.0266437) , 
3, 9.64598, 1, 0, 0.841248,0.000443484) , 
7, 2.13905e-05, 1, 0, 0.546062,5.61988e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.252594,-0.00956341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419569,0.00391714) , 
6, 0.00578255, 1, 0, 0.341186,-9.58204e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80449,0.0101798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897139,-0.0399482) , 
1, 1.19268, 1, 0, 0.838569,-0.00260123) , 
7, 2.18808e-05, 1, 0, 0.4456,-0.000621774) , 
3, 50.469, 1, 0, 0.502583,-0.000265915)    );
  // itree = 722
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.409267,-0.00343082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688358,-0.0210764) , 
4, 0.00193372, 1, 0, 0.551009,-0.000829186) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.305191,0.015681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441456,-0.00692393) , 
6, 0.0081087, 1, 0, 0.344346,-2.10789e-05) , 
4, 0.00289998, 1, 0, 0.399714,-0.000237585) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99118,-0.0462536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995831,0.0162351) , 
3, 11.2046, 1, 0, 0.995091,-0.000342061) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.315429,-0.0132916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649173,-0.0190093) , 
7, 3.03569e-05, 1, 0, 0.454591,-0.00525343) , 
2, 0.0234491, 1, 0, 0.843916,-0.00171575) , 
7, 2.13905e-05, 1, 0, 0.49997,-0.000571203)    );
  // itree = 723
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893841,0.0398045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134211) , 
2, 0.0476103, 1, 0, 0.463093,0.000147717) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.395615,-0.0167701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309583,-0.0052164) , 
3, 60.6887, 1, 0, 0.326512,-0.000320185) , 
3, 50.472, 1, 0, 0.402789,-5.88736e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874699,-0.0405704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.858865,-0.00188361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837622,-0.0236072) , 
3, 48.6061, 1, 0, 0.847803,-0.00200156) , 
3, 12.6113, 1, 0, 0.852096,-0.00264196) , 
7, 2.18117e-05, 1, 0, 0.500496,-0.000620596)    );
  // itree = 724
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949283,-0.0129397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000268203,0.00166985) , 
2, 0.0476103, 1, 0, 0.625478,-0.000462164) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769134,-0.029135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743535,0.0243084) , 
5, 0.0043356, 1, 0, 0.758769,-0.00241411) , 
5, 0.00407033, 1, 0, 0.646772,-0.000774004) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645963,-0.0196384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00103575,-0.0042631) , 
2, 0.0475435, 1, 0, 0.12875,-0.000415622) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975506,0.0222039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132402) , 
0, 0.00467007, 1, 0, 0.461936,0.000384974) , 
4, 0.00463754, 1, 0, 0.373899,0.000173434) , 
5, 0.00449901, 1, 0, 0.496474,-0.000252156)    );
  // itree = 725
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.837063,0.00544598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131781) , 
2, 0.0237943, 1, 0, 0.210788,-3.23384e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841141,-0.012485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801598,-0.0204889) , 
3, 44.6442, 1, 0, 0.832003,-0.00132654) , 
7, 7.10747e-06, 1, 0, 0.534699,-0.000707155) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569242,0.0121324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139637) , 
2, 0.19036, 1, 0, 0.316722,5.1036e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997421,0.0797898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556698,0.0303364) , 
2, 0.0234564, 1, 0, 0.834286,0.000934399) , 
7, 2.18116e-05, 1, 0, 0.426184,0.000237862) , 
3, 62.5048, 1, 0, 0.498675,-0.000393434)    );
  // itree = 726
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986908,-0.000601643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890354,0.0497256) , 
0, 0.000650821, 1, 0, 0.952815,0.000485393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130919) , 
2, 0.14277, 1, 0, 0,-3.70293e-05) , 
0, 0.0046603, 1, 0, 0.179943,6.16324e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968864,0.0988224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902182,-0.0206061) , 
4, 0.00291075, 1, 0, 0.935516,-0.00365505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829421,0.00748181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810901,-0.0112574) , 
3, 50.3938, 1, 0, 0.821906,-0.000240232) , 
6, 0.00630992, 1, 0, 0.833877,-0.000600064) , 
7, 7.10742e-06, 1, 0, 0.502803,-0.00026506)    );
  // itree = 727
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942788,0.0259477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000659138,-0.0108647) , 
2, 0.023795, 1, 0, 0.407165,7.74283e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6359,-0.037996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619999,-0.00961989) , 
3, 12.6292, 1, 0, 0.622519,-0.000901165) , 
6, 0.00828404, 1, 0, 0.4848,-0.000275353) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989081,-0.00109311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345048,-0.0294825) , 
2, 0.0231701, 1, 0, 0.659163,-0.00422802) , 
6, 0.0115964, 1, 0, 0.496045,-0.000530263)    );
  // itree = 728
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569808,0.0134641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411054,0.0706895) , 
3, 74.325, 1, 0, 0.535163,0.000292601) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.717393,-0.0190631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.259217,0.00289814) , 
4, 0.00378287, 1, 0, 0.361397,-0.000118821) , 
4, 0.00289901, 1, 0, 0.408443,-7.43159e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973675,0.00923295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983604,0.0819659) , 
5, 0.00570137, 1, 0, 0.976651,0.000697736) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817676,-0.0141408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.734531,-0.0155562) , 
6, 0.0103257, 1, 0, 0.758829,-0.0017916) , 
0, 0.00164365, 1, 0, 0.852936,-0.000716115) , 
7, 2.20874e-05, 1, 0, 0.503792,-0.000159452)    );
  // itree = 729
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639979,-0.0188467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295853,0.00307656) , 
4, 0.00290103, 1, 0, 0.398411,-0.000118745) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96551,-0.0188133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132059) , 
0, 0.00463176, 1, 0, 0.392328,-0.000798031) , 
6, 0.00811275, 1, 0, 0.396845,-0.000293637) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807393,-0.00806527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839713,0.0432336) , 
3, 48.7764, 1, 0, 0.822194,-0.000106482) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859352,-0.0169726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865055,-0.0245194) , 
3, 37.8161, 1, 0, 0.862395,-0.00377766) , 
1, 1.11085, 1, 0, 0.849167,-0.00256963) , 
7, 2.20855e-05, 1, 0, 0.492694,-0.000775933)    );
  // itree = 730
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.487339,-0.0052016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657696,-0.0238785) , 
4, 0.00234817, 1, 0, 0.539783,-0.00067871) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710746,-0.0161645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250877,0.0070751) , 
4, 0.00378416, 1, 0, 0.356109,-3.50594e-05) , 
4, 0.00290025, 1, 0, 0.406347,-0.000211109) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881869,0.0524979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843838,-0.0110901) , 
3, 18.61, 1, 0, 0.85375,-0.000501063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821309,-0.0277927) , 
3, 97.5532, 1, 0, 0.84987,-0.00120128) , 
7, 2.18118e-05, 1, 0, 0.503935,-0.000428975)    );
  // itree = 731
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.41993,0.024631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255415,-0.0135007) , 
3, 75.1616, 1, 0, 0.378629,-2.92975e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.46783,-0.0320947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.365829,-0.00237539) , 
3, 37.4781, 1, 0, 0.409424,-0.000665346) , 
6, 0.00753696, 1, 0, 0.388724,-0.000237791) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902929,-0.0155878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846872,-0.0541734) , 
6, 0.0102035, 1, 0, 0.887022,-0.00572403) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993334,0.0689138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450149,-0.0130439) , 
2, 0.0234564, 1, 0, 0.79886,-0.00101166) , 
6, 0.0105041, 1, 0, 0.834837,-0.00293468) , 
7, 2.13905e-05, 1, 0, 0.487422,-0.000834451)    );
  // itree = 732
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975626,-0.0137102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719426,-0.0138888) , 
2, 0.0113233, 1, 0, 0.913444,-0.000895411) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00131231,0.0757061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131941) , 
2, 0.198507, 1, 0, 0.000463023,0.000170746) , 
2, 0.04759, 1, 0, 0.482842,-0.000392565) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6153,-0.0191101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671653,-0.0306205) , 
6, 0.0116808, 1, 0, 0.64032,-0.00390983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619832,0.00269643) , 
3, 68.1594, 1, 0, 0.634195,-0.00269535) , 
6, 0.0110168, 1, 0, 0.501195,-0.000671793)    );
  // itree = 733
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.417839,0.00242138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764959,-0.0155421) , 
7, 4.44731e-06, 1, 0, 0.600296,-0.000537721) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978463,0.0176099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133226) , 
0, 0.00465917, 1, 0, 0.289316,4.83818e-05) , 
5, 0.00337573, 1, 0, 0.392498,-0.000146086) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863424,-0.0156348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854008,-0.0577143) , 
3, 53.7586, 1, 0, 0.861761,-0.00394611) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874958,-0.00328087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860906,0.0394296) , 
3, 95.7679, 1, 0, 0.867981,0.000583137) , 
3, 70.5687, 1, 0, 0.863383,-0.00276527) , 
7, 2.18117e-05, 1, 0, 0.491983,-0.000699444)    );
  // itree = 734
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.54154,-0.00511202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840927,-0.0161541) , 
7, 9.58967e-06, 1, 0, 0.667066,-0.000684379) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793213,0.0263247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0966462,-0.00796857) , 
5, 0.00526561, 1, 0, 0.321579,0.000170553) , 
5, 0.00437849, 1, 0, 0.486359,-0.000237206) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.682447,0.0348758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603638,-0.0202903) , 
6, 0.0119107, 1, 0, 0.653448,-0.00050972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557273,-0.0383923) , 
1, 1.10994, 1, 0, 0.626022,-0.00170561) , 
6, 0.0110169, 1, 0, 0.503052,-0.000412714)    );
  // itree = 735
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.484607,0.0137983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670267,-0.0241095) , 
4, 0.00234692, 1, 0, 0.540512,-0.000714837) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.847471,0.0200329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000424746,-0.0114166) , 
2, 0.04759, 1, 0, 0.360508,5.87442e-05) , 
4, 0.0028995, 1, 0, 0.408867,-0.000149081) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920044,-0.00903284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691241,-0.0458774) , 
6, 0.0110911, 1, 0, 0.872105,-0.0021653) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748595,0.00605082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759676,0.0863884) , 
3, 47.0698, 1, 0, 0.753939,0.0013697) , 
5, 0.00574963, 1, 0, 0.837329,-0.00112496) , 
7, 2.18118e-05, 1, 0, 0.503221,-0.000363986)    );
  // itree = 736
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506066,-0.00277997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656298,-0.00990801) , 
6, 0.00994094, 1, 0, 0.515783,-0.000112306) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981699,0.023025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.214505,0.0288885) , 
2, 0.0237543, 1, 0, 0.641479,0.000756142) , 
6, 0.010438, 1, 0, 0.537415,3.71537e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.405657,-0.0137169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288328,0.00141259) , 
4, 0.0023199, 1, 0, 0.307175,-0.000230581) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809833,0.00077435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866955,-0.0256611) , 
1, 1.19425, 1, 0, 0.831226,-0.00346184) , 
7, 2.18116e-05, 1, 0, 0.416243,-0.000903082) , 
3, 62.5024, 1, 0, 0.495753,-0.000286121)    );
  // itree = 737
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.483747,0.00171918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.716366,-0.0163128) , 
5, 0.00223607, 1, 0, 0.601591,-0.000688613) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.345364,0.0216942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.271362,-0.0062994) , 
3, 37.7076, 1, 0, 0.303306,9.75148e-06) , 
5, 0.00335348, 1, 0, 0.401026,-0.000219038) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977687,-0.0108448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954283,-0.0423939) , 
4, 0.00528454, 1, 0, 0.964543,-0.00564682) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991043,-0.0219692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.307512,0.0109629) , 
2, 0.0233757, 1, 0, 0.740151,-0.000176621) , 
0, 0.00158922, 1, 0, 0.83797,-0.00256123) , 
7, 2.20874e-05, 1, 0, 0.493277,-0.00071354)    );
  // itree = 738
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891413,-0.0105242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000336558,-0.00573484) , 
2, 0.0476103, 1, 0, 0.445739,-0.000248001) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650393,0.0884685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62765,0.0352066) , 
1, 1.25058, 1, 0, 0.639275,0.000714172) , 
6, 0.00944126, 1, 0, 0.469943,-0.000127667) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640038,0.0145364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637443,-0.00549526) , 
1, 1.08178, 1, 0, 0.6382,-4.16464e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644243,-0.0319263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540399,-0.00394971) , 
3, 88.8357, 1, 0, 0.587354,-0.00276515) , 
3, 60.9711, 1, 0, 0.619931,-0.00102017) , 
6, 0.0104369, 1, 0, 0.497225,-0.000290006)    );
  // itree = 739
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999107,0.0697307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964288,-0.0205156) , 
0, 0.00021116, 1, 0, 0.982613,-0.00111023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686753,-0.0185992) , 
0, 0.00221718, 1, 0, 0.967054,-0.00180437) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013092) , 
2, 0.143093, 1, 0, 0,-6.03741e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000317028,0.0979549) , 
3, 88.202, 1, 0, 7.30481e-05,1.79582e-05) , 
0, 0.00466573, 1, 0, 0.504207,-0.000932109)    );
  // itree = 740
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4837,-0.017856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710087,0.000343787) , 
4, 0.0024854, 1, 0, 0.642579,-0.000219881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882951,-0.0136846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645992,-0.00185164) , 
7, 2.60811e-05, 1, 0, 0.764197,-0.00135792) , 
7, 2.43959e-05, 1, 0, 0.652968,-0.000317095) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.304214,-0.0261497) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971376,0.0385473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132555) , 
0, 0.00467007, 1, 0, 0.270756,0.000334459) , 
3, 12.6092, 1, 0, 0.275487,0.00013781) , 
4, 0.00521886, 1, 0, 0.497524,-0.000129769)    );
  // itree = 741
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739702,0.0259638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0185816) , 
5, 0.00528726, 1, 0, 0.532122,8.86736e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.525793,-0.0138528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368276,-0.0036406) , 
5, 0.00312003, 1, 0, 0.407669,-0.000453009) , 
3, 50.469, 1, 0, 0.47788,-0.000147417) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640541,-0.0615621) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.565568,0.0039862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638986,-0.0236509) , 
6, 0.0111139, 1, 0, 0.619529,-0.00125588) , 
6, 0.0106859, 1, 0, 0.622834,-0.00254674) , 
6, 0.0104369, 1, 0, 0.503999,-0.000579758)    );
  // itree = 742
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.50213,0.0165863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463072,-0.00890981) , 
3, 6.60461, 1, 0, 0.482325,-3.24993e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842541,-0.0319944) , 
7, 2.22499e-05, 1, 0, 0.561136,-0.001704) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681566,-0.00781832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678068,-0.0234079) , 
6, 0.010425, 1, 0, 0.681168,-0.000518253) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963272,0.0398119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131695) , 
0, 0.00932596, 1, 0, 0.177606,0.000144953) , 
5, 0.00563012, 1, 0, 0.497574,-0.000276454) , 
3, 12.6044, 1, 0, 0.507413,-0.000497434)    );
  // itree = 743
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.273655,-0.00455833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456907,-0.0207896) , 
6, 0.00494576, 1, 0, 0.310823,-0.000278788) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602207,0.000956738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602154,0.0461928) , 
6, 0.0100173, 1, 0, 0.602196,0.000177294) , 
6, 0.00577126, 1, 0, 0.482721,-9.71779e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620562,-0.0206277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658806,0.00883494) , 
3, 16.2645, 1, 0, 0.648654,-0.000854785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59725,-0.0479621) , 
3, 85.3486, 1, 0, 0.63779,-0.00276418) , 
6, 0.0110166, 1, 0, 0.501482,-0.000342967)    );
  // itree = 744
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.459081,-0.00578388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633534,-0.018337) , 
6, 0.00999136, 1, 0, 0.471628,-0.000282016) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584546,0.000116251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614902,0.0705557) , 
1, 1.17015, 1, 0, 0.59997,0.000744551) , 
6, 0.0104916, 1, 0, 0.479288,-0.000220747) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68628,-0.0233323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595927,-0.0102414) , 
4, 0.0058619, 1, 0, 0.648414,-0.00342778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630008,-0.000498485) , 
3, 54.6188, 1, 0, 0.640908,-0.00204466) , 
6, 0.0110166, 1, 0, 0.49862,-0.000438913)    );
  // itree = 745
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.399992,-0.00642957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704265,-0.0142789) , 
4, 0.00198841, 1, 0, 0.473783,-0.000360708) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.444519,-0.0113774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334974,0.0158857) , 
3, 37.8545, 1, 0, 0.382829,-1.64748e-05) , 
4, 0.00232029, 1, 0, 0.399538,-7.97144e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920236,-0.00633965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865078,-0.0286274) , 
4, 0.00498395, 1, 0, 0.897947,-0.00293039) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975331,-0.0093337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689671,0.00419263) , 
0, 0.0018626, 1, 0, 0.810528,-0.000153406) , 
6, 0.0103654, 1, 0, 0.842417,-0.00116643) , 
7, 2.13905e-05, 1, 0, 0.499178,-0.000324206)    );
  // itree = 746
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505336,-0.00948072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727792,-0.0175097) , 
5, 0.00241392, 1, 0, 0.604708,-0.000909267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.348276,-0.00533977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.244692,0.0201184) , 
3, 50, 1, 0, 0.300588,-9.84836e-06) , 
5, 0.00337964, 1, 0, 0.404557,-0.000317329) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995045,0.0036573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985551,-0.0343814) , 
3, 67.0989, 1, 0, 0.99262,-0.000699641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.399307,-0.00514736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500792,-0.0154713) , 
4, 0.00557235, 1, 0, 0.452341,-0.00357221) , 
2, 0.0237819, 1, 0, 0.838566,-0.00151872) , 
7, 2.18118e-05, 1, 0, 0.498046,-0.000576119)    );
  // itree = 747
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.336645,-0.0132044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518788,0.00506703) , 
6, 0.00578663, 1, 0, 0.435429,-0.000109302) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997455,0.0620352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424156,0.0393878) , 
2, 0.0237819, 1, 0, 0.845418,0.00111861) , 
7, 2.21848e-05, 1, 0, 0.521835,0.000149483) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.426228,-0.0112839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804762,-0.020016) , 
7, 1.47816e-05, 1, 0, 0.587077,-0.0031431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124146,-0.000492446) , 
5, 0.00560132, 1, 0, 0.337794,-0.00145676) , 
3, 100.788, 1, 0, 0.497696,-6.11946e-05)    );
  // itree = 748
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650061,-0.0138026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531693,-0.0150219) , 
3, 49.984, 1, 0, 0.603281,-0.000907543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.329394,0.00364782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114788,-0.0119885) , 
3, 112.504, 1, 0, 0.302617,-5.26324e-05) , 
5, 0.00337964, 1, 0, 0.404499,-0.000342324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744462,0.0414489) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879335,-0.013155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922663,-0.0214936) , 
1, 1.20949, 1, 0, 0.887096,-0.00227392) , 
4, 0.00498313, 1, 0, 0.856679,-0.00165403) , 
7, 2.20874e-05, 1, 0, 0.499619,-0.000618254)    );
  // itree = 749
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.58248,-0.00485336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46199,-0.0139968) , 
3, 48.8924, 1, 0, 0.532347,-0.000379998) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863347,0.0375918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000420301,-0.0102654) , 
2, 0.04759, 1, 0, 0.365263,0.000101884) , 
4, 0.00289952, 1, 0, 0.409791,-2.65359e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817269,-0.00421796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817961,0.033592) , 
3, 33.5754, 1, 0, 0.817671,0.000504227) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616801,-0.036292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912018,-0.0154431) , 
7, 2.85759e-05, 1, 0, 0.852546,-0.00363209) , 
4, 0.00522426, 1, 0, 0.839156,-0.00204403) , 
7, 2.20448e-05, 1, 0, 0.502751,-0.000463336)    );
  // itree = 750
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601527,0.00088429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743592,-0.0183072) , 
4, 0.00367004, 1, 0, 0.623329,-0.000310697) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.734252,0.0300703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134016) , 
2, 0.0475813, 1, 0, 0.20632,2.05607e-05) , 
4, 0.00405874, 1, 0, 0.405453,-0.000137623) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873885,0.0576651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867453,-0.0110263) , 
3, 10.6583, 1, 0, 0.869135,0.00013679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852254,-0.0263504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814735,-0.0132452) , 
4, 0.00556466, 1, 0, 0.836645,-0.0052684) , 
3, 44.7188, 1, 0, 0.853524,-0.0024603) , 
7, 2.21849e-05, 1, 0, 0.497771,-0.000616178)    );
  // itree = 751
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988451,-0.00607223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91885,0.0741633) , 
0, 0.000653397, 1, 0, 0.964873,0.000383374) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130918) , 
2, 0.142822, 1, 0, 0,-3.47177e-05) , 
0, 0.00467008, 1, 0, 0.152279,3.12665e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836767,-0.00937082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84449,0.223979) , 
3, 20.1128, 1, 0, 0.838118,0.000113381) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764852,-0.0121256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855162,-0.0252971) , 
7, 1.91535e-05, 1, 0, 0.810589,-0.00223667) , 
3, 24.8559, 1, 0, 0.819508,-0.00147524) , 
7, 5.71741e-06, 1, 0, 0.500827,-0.000755707)    );
  // itree = 752
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986954,0.0359697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96785,-0.0148718) , 
3, 43.4669, 1, 0, 0.978787,-0.000240707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792498,-0.0277202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.778831,0.00046089) , 
3, 37.1951, 1, 0, 0.784256,-0.00439543) , 
2, 0.011277, 1, 0, 0.92223,-0.00144864) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000144752,0.0256293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000884272,-0.0118955) , 
6, 0.00621237, 1, 0, 0.000359507,-6.06744e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00155783,0.01157) , 
6, 0.00869722, 1, 0, 0.000678421,4.21561e-05) , 
2, 0.0476103, 1, 0, 0.499641,-0.000765015)    );
  // itree = 753
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.425151,-0.00318631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629739,0.0260656) , 
4, 0.00202081, 1, 0, 0.504697,9.45409e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673258,-0.0202017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708887,-0.00518296) , 
4, 0.00312487, 1, 0, 0.701295,-0.000683621) , 
4, 0.00265169, 1, 0, 0.630011,-0.000401469) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931525,0.02971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653616,0.0766007) , 
2, 0.0225975, 1, 0, 0.867965,0.000873554) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00119545,-0.00818882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.14526e-05,0.0166389) , 
2, 0.198364, 1, 0, 0.00047647,-0.000107748) , 
2, 0.0476074, 1, 0, 0.371869,0.000312371) , 
4, 0.00463895, 1, 0, 0.499853,-4.15429e-05)    );
  // itree = 754
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473863,-0.00373459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876105,0.0230104) , 
7, 2.33105e-05, 1, 0, 0.547945,9.92725e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.483713,-0.00846045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675845,-0.023476) , 
6, 0.00870085, 1, 0, 0.551093,-0.00138074) , 
3, 21.5444, 1, 0, 0.549204,-0.00049267) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940241,0.0148243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.325747,0.046522) , 
2, 0.0270938, 1, 0, 0.862574,0.000435965) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00179863,-0.0113581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130922) , 
0, 0.0512892, 1, 0, 0.000670834,-0.000263804) , 
2, 0.0713828, 1, 0, 0.463566,0.000112015) , 
3, 37.7108, 1, 0, 0.501575,-0.000156368)    );
  // itree = 755
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561455,-0.0101181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725381,-0.0179952) , 
7, 6.10852e-06, 1, 0, 0.614165,-0.000651716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981073,0.0400724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131462) , 
0, 0.00467007, 1, 0, 0.398161,0.000164368) , 
5, 0.00304336, 1, 0, 0.456395,-5.56469e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711015,-0.0209535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63609,0.00957115) , 
6, 0.0104102, 1, 0, 0.654981,-0.000218054) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634311,-0.0372617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527085,-0.0174713) , 
3, 91.8245, 1, 0, 0.579237,-0.00447838) , 
3, 63.0066, 1, 0, 0.62848,-0.00170864) , 
6, 0.00985716, 1, 0, 0.498753,-0.000462522)    );
  // itree = 756
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.563769,0.010746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30819,-0.00905595) , 
4, 0.0028995, 1, 0, 0.380341,-9.66279e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859189,-0.0108499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871308,-0.0213555) , 
3, 89.4287, 1, 0, 0.86097,-0.00127442) , 
7, 1.8566e-05, 1, 0, 0.496497,-0.000381269) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676819,-0.0365498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606185,-0.0443469) , 
3, 59.9305, 1, 0, 0.64947,-0.008885) , 
6, 0.0115965, 1, 0, 0.506568,-0.000941161)    );
  // itree = 757
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644013,-0.0177065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.469565,0.00942252) , 
4, 0.00405691, 1, 0, 0.543751,-0.000130556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.418313,-0.0119439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82752,-0.0298859) , 
7, 2.25095e-05, 1, 0, 0.505259,-0.00258621) , 
3, 47.8872, 1, 0, 0.536606,-0.000586349) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977255,-0.00367967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962358,0.0549152) , 
4, 0.00482773, 1, 0, 0.971644,0.000700791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0152343) , 
0, 0.00467007, 1, 0, 0.414982,0.000199199) , 
3, 62.8507, 1, 0, 0.495769,-0.000322589)    );
  // itree = 758
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989554,0.0279191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808057,-0.0074355) , 
0, 0.00199697, 1, 0, 0.972151,0.000142865) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.90808e-05,0.102197) , 
2, 0.119019, 1, 0, 3.79613e-05,-6.94645e-05) , 
0, 0.00467007, 1, 0, 0.495777,3.88151e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649138,-0.0375135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669,-0.0262322) , 
1, 1.06239, 1, 0, 0.66125,-0.004925) , 
6, 0.0115969, 1, 0, 0.506654,-0.000287477)    );
  // itree = 759
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949375,0.017284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944435,0.0449394) , 
3, 99.1608, 1, 0, 0.948964,0.00044806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130922) , 
2, 0.119053, 1, 0, 0,-6.93102e-05) , 
0, 0.00934014, 1, 0, 0.485134,0.000195182) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983032,0.0791937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987126,-0.0121887) , 
6, 0.0116828, 1, 0, 0.98484,-4.13622e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.28438,-0.0159664) , 
2, 0.0237819, 1, 0, 0.63677,-0.00127998) , 
6, 0.0110166, 1, 0, 0.503466,1.68399e-05)    );
  // itree = 760
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985516,0.000779045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971729,-0.0154273) , 
0, 0.00148224, 1, 0, 0.981751,-0.000574793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624131,-0.0192217) , 
0, 0.00222351, 1, 0, 0.96358,-0.00119111) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130927) , 
2, 0.111552, 1, 0, 0,-8.98191e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00021654,0.459307) , 
2, 0.333476, 1, 0, 7.13865e-05,9.19417e-06) , 
0, 0.00467007, 1, 0, 0.497442,-0.000610412)    );
  // itree = 761
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975692,-0.002728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966392,0.0795693) , 
2, 0.00916545, 1, 0, 0.97495,4.18989e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885789,-0.0287267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899565,-0.016295) , 
4, 0.00463802, 1, 0, 0.894773,-0.00349396) , 
2, 0.0113351, 1, 0, 0.957522,-0.000726676) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568788,0.0129756) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000488487,0.00454302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00111976,-0.0110438) , 
6, 0.00869695, 1, 0, 0.000664878,-0.000104419) , 
2, 0.0465916, 1, 0, 0.0598111,6.05326e-05) , 
2, 0.0238052, 1, 0, 0.507905,-0.000332404)    );
  // itree = 762
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999005,-0.0167823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788505,-0.0147474) , 
2, 0.0231309, 1, 0, 0.984263,-0.000628747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650721,-0.0171448) , 
0, 0.00221718, 1, 0, 0.966083,-0.00114709) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013197) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00017698,0.0913185) , 
6, 0.00869199, 1, 0, 4.5673e-05,3.53148e-05) , 
2, 0.119056, 1, 0, 3.54009e-05,-2.45586e-05) , 
0, 0.00466298, 1, 0, 0.500292,-0.000605849)    );
  // itree = 763
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965717,0.0525089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981302,0.012724) , 
4, 0.00176048, 1, 0, 0.979823,6.33436e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840664,-0.0212015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90711,-0.0270159) , 
4, 0.00406162, 1, 0, 0.893789,-0.00287836) , 
2, 0.00902158, 1, 0, 0.954913,-0.000788376) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0131464,-0.00744087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131007) , 
0, 0.0373606, 1, 0, 0.00300061,-9.37018e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.409307,0.00991876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572152,0.0835715) , 
3, 63.1887, 1, 0, 0.479187,0.00259899) , 
7, 2.1808e-05, 1, 0, 0.0601255,0.000229323) , 
2, 0.023795, 1, 0, 0.50117,-0.000272305)    );
  // itree = 764
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.439624,0.0114134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309107,-0.00449888) , 
3, 50.0051, 1, 0, 0.380414,3.07761e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992507,-0.0133209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400776,-0.0144074) , 
2, 0.0236898, 1, 0, 0.861561,-0.00103898) , 
7, 1.87485e-05, 1, 0, 0.492796,-0.000240316) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641047,-0.0296534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644895,-0.0216437) , 
3, 35.9987, 1, 0, 0.643294,-0.00682718) , 
6, 0.0115963, 1, 0, 0.503253,-0.000698001)    );
  // itree = 765
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947143,-0.00258329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990994,0.168928) , 
5, 0.00205089, 1, 0, 0.961961,0.000189572) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130921) , 
2, 0.143005, 1, 0, 0,-3.20536e-05) , 
0, 0.00466017, 1, 0, 0.151458,2.84086e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923184,-0.010483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382999,-0.0286453) , 
5, 0.00528488, 1, 0, 0.849258,-0.0009853) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671807,-0.00163382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725457,0.0249221) , 
3, 73.1895, 1, 0, 0.685425,0.000213253) , 
4, 0.00545191, 1, 0, 0.812158,-0.000713889) , 
7, 5.71736e-06, 1, 0, 0.496484,-0.000371445)    );
  // itree = 766
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466782,-0.00437268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629382,-0.0113695) , 
6, 0.00999086, 1, 0, 0.487208,-0.000172774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602925,0.000320387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59636,-0.0397311) , 
3, 44.7145, 1, 0, 0.599685,-0.00259637) , 
6, 0.0110444, 1, 0, 0.494165,-0.000322695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973247,-0.00952085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343661,0.0349546) , 
2, 0.0231701, 1, 0, 0.666063,0.00132179) , 
6, 0.0115965, 1, 0, 0.50581,-0.000211295)    );
  // itree = 767
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.420732,0.0222839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2295,-0.0107847) , 
3, 87.9865, 1, 0, 0.385425,3.99681e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592833,-0.0161779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337364,0.00173668) , 
6, 0.0084211, 1, 0, 0.42368,-0.000343682) , 
6, 0.00753696, 1, 0, 0.398094,-8.70868e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830797,0.0372371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777636,-0.00596165) , 
5, 0.00581707, 1, 0, 0.811482,0.000245977) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920537,-0.0269443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892232,-0.0188461) , 
3, 53.7661, 1, 0, 0.909721,-0.00300191) , 
1, 1.20785, 1, 0, 0.844233,-0.00083681) , 
7, 2.18118e-05, 1, 0, 0.493547,-0.000247492)    );
  // itree = 768
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987092,0.0187411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90649,-0.0176599) , 
5, 0.00525409, 1, 0, 0.974851,-1.90831e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651897,-0.0162321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792206,-0.00686187) , 
5, 0.00449154, 1, 0, 0.756671,-0.00215629) , 
2, 0.0113079, 1, 0, 0.910374,-0.000650678) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00192998,0.0303312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000180586,-0.00922244) , 
7, -8.92027e-06, 1, 0, 6.39875e-05,-0.00014033) , 
2, 0.220128, 1, 0, 0.000807977,0.000105768) , 
2, 0.0476074, 1, 0, 0.501656,-0.000310766)    );
  // itree = 769
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.536783,0.00181513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.402415,-0.0176117) , 
3, 49.7233, 1, 0, 0.481576,-0.000917004) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.377687,-0.00639234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435736,0.0269209) , 
6, 0.00811275, 1, 0, 0.394282,6.8656e-05) , 
5, 0.0022524, 1, 0, 0.409375,-0.000101767) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988813,-0.0242538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0922455) , 
3, 40.805, 1, 0, 0.994175,-0.000489412) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.356017,-0.00906495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663991,-0.0230714) , 
7, 3.05849e-05, 1, 0, 0.485795,-0.00488848) , 
2, 0.0234331, 1, 0, 0.85133,-0.00172547) , 
7, 2.18117e-05, 1, 0, 0.506741,-0.000459481)    );
  // itree = 770
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.284174,0.0072051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874876,-0.0131059) , 
7, 1.11979e-05, 1, 0, 0.457167,-0.00015406) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605667,0.0709476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599479,0.0785281) , 
1, 1.22967, 1, 0, 0.602797,0.000799694) , 
6, 0.0099382, 1, 0, 0.467337,-8.74579e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61278,-0.0411836) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595826,0.0137878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665899,-0.0167657) , 
6, 0.0116804, 1, 0, 0.62139,-0.000480718) , 
6, 0.0106865, 1, 0, 0.620082,-0.00117296) , 
6, 0.0104373, 1, 0, 0.494218,-0.000278495)    );
  // itree = 771
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991995,-0.00852444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831718,-0.0142184) , 
0, 0.0015532, 1, 0, 0.965528,-0.000642748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130923) , 
2, 0.11944, 1, 0, 0,-5.99204e-05) , 
0, 0.00466573, 1, 0, 0.40037,-0.000301598) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810931,-0.0276848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877051,-0.0100959) , 
1, 1.13713, 1, 0, 0.856595,-0.0020013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780525,0.0238534) , 
6, 0.011771, 1, 0, 0.844036,-0.00148034) , 
7, 2.18118e-05, 1, 0, 0.496814,-0.000557832)    );
  // itree = 772
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.492394,-0.00507908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315853,-0.0114002) , 
3, 87.4688, 1, 0, 0.460519,-0.000173569) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631559,-0.00428058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587589,-0.0378636) , 
4, 0.00522164, 1, 0, 0.608438,-0.00253536) , 
6, 0.00996716, 1, 0, 0.479555,-0.000477511) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968991,0.0670762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978094,-0.0116934) , 
6, 0.0116828, 1, 0, 0.972998,2.99711e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279769,0.0338432) , 
2, 0.0237819, 1, 0, 0.617091,0.000742838) , 
6, 0.0110166, 1, 0, 0.496199,-0.000329833)    );
  // itree = 773
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547389,-0.00180816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739233,-0.0124518) , 
5, 0.00236999, 1, 0, 0.62101,-0.0005542) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0393357,-0.0144173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89627,0.0094114) , 
7, 1.05531e-05, 1, 0, 0.397985,4.46873e-06) , 
5, 0.00311102, 1, 0, 0.461908,-0.000155656) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504534,-0.0145545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443346,-0.0144433) , 
3, 48.6188, 1, 0, 0.476661,-0.00199465) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729556,0.00545725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483159,-0.0321968) , 
1, 1.18025, 1, 0, 0.684267,-0.000107707) , 
4, 0.00520205, 1, 0, 0.613434,-0.000751507) , 
6, 0.00985765, 1, 0, 0.499634,-0.000304009)    );
  // itree = 774
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973001,0.0188473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760566,0.0136313) , 
2, 0.00894092, 1, 0, 0.937043,0.000235421) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00327147,-0.0109029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130935) , 
0, 0.0467705, 1, 0, 0.000971892,-0.000141733) , 
2, 0.0238052, 1, 0, 0.434589,3.29762e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.321402,-0.0248552) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665393,0.0327933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68173,-0.00802256) , 
6, 0.0106913, 1, 0, 0.672652,-3.52471e-05) , 
5, 0.00447067, 1, 0, 0.619141,-0.000452737) , 
6, 0.00869846, 1, 0, 0.501948,-0.000144305)    );
  // itree = 775
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667425,-0.0182453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600063,-0.00101433) , 
3, 37.4808, 1, 0, 0.632465,-0.00049826) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741603,-0.0565299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717879,-0.0160955) , 
4, 0.00461543, 1, 0, 0.722336,-0.0036504) , 
4, 0.00447331, 1, 0, 0.652806,-0.00121171) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885603,0.0324304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478344,0.0531386) , 
2, 0.0236816, 1, 0, 0.751244,0.00107647) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134269) , 
6, 0.00637745, 1, 0, 0,-0.000112994) , 
2, 0.0714111, 1, 0, 0.286456,0.00034056) , 
4, 0.00521885, 1, 0, 0.50547,-0.000587428)    );
  // itree = 776
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97393,0.00337375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979501,0.0863331) , 
3, 49.5019, 1, 0, 0.97597,0.000333062) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130921) , 
2, 0.119212, 1, 0, 0,-3.34747e-05) , 
0, 0.00467007, 1, 0, 0.152695,2.38716e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731773,-0.0236571) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993006,-0.00713107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255381,-0.0124738) , 
2, 0.0237746, 1, 0, 0.822351,-0.000663409) , 
7, 7.21336e-06, 1, 0, 0.817637,-0.00113583) , 
7, 5.71741e-06, 1, 0, 0.494916,-0.000572984)    );
  // itree = 777
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658549,-0.0100579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343692,0.00949451) , 
4, 0.00463836, 1, 0, 0.511319,-0.000133187) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.367303,-0.0252066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.189496,-0.00142811) , 
3, 134.991, 1, 0, 0.264559,-0.00111647) , 
3, 113.388, 1, 0, 0.486685,-0.000231346) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986653,0.00675541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327149,0.104278) , 
2, 0.0231701, 1, 0, 0.656617,0.00168413) , 
6, 0.0115963, 1, 0, 0.498253,-0.00010096)    );
  // itree = 778
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996413,0.0416733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964626,-0.0127186) , 
0, 0.000211748, 1, 0, 0.981029,-0.000616329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617224,-0.0247726) , 
0, 0.00222351, 1, 0, 0.962656,-0.00143836) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135078) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000166605,0.0910113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130921) , 
0, 0.0403094, 1, 0, 4.63047e-05,3.57656e-05) , 
2, 0.118975, 1, 0, 3.57623e-05,-7.39016e-05) , 
0, 0.00467007, 1, 0, 0.500026,-0.00078261)    );
  // itree = 779
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972447,-0.00795222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768314,-0.0197585) , 
2, 0.0169155, 1, 0, 0.956216,-0.000484194) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230492,0.0129648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000218519,-0.00652603) , 
2, 0.0691267, 1, 0, 0.0267917,3.21698e-05) , 
2, 0.023795, 1, 0, 0.482339,-0.00022092) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65181,-0.0117738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662788,0.0143017) , 
3, 34.743, 1, 0, 0.658157,-0.000240064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613038,-0.0340989) , 
1, 1.10986, 1, 0, 0.645101,-0.00227222) , 
6, 0.0110168, 1, 0, 0.502064,-0.000469509)    );
  // itree = 780
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972103,0.0313974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490936,-0.0153118) , 
2, 0.0113233, 1, 0, 0.884079,-0.000553113) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000898513,0.0287304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131582) , 
2, 0.198568, 1, 0, 0.000315204,3.88934e-05) , 
2, 0.0476074, 1, 0, 0.39399,-0.000224817) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700876,-0.0449288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934082,-0.007078) , 
1, 1.2152, 1, 0, 0.845737,-0.00300864) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956791,-0.0103623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76428,0.00712141) , 
0, 0.001653, 1, 0, 0.849358,-0.000402617) , 
4, 0.00538141, 1, 0, 0.84745,-0.00177593) , 
7, 2.13904e-05, 1, 0, 0.495671,-0.00057263)    );
  // itree = 781
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993253,0.0270448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936734,0.0241719) , 
0, 0.000884819, 1, 0, 0.970019,0.000380414) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130922) , 
2, 0.119107, 1, 0, 0,-5.31229e-05) , 
0, 0.00466298, 1, 0, 0.395353,0.000123575) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993847,0.00516044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460893,0.0318712) , 
2, 0.0236991, 1, 0, 0.805848,0.000960351) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928295,-0.0136611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804944,-0.0332166) , 
4, 0.00520436, 1, 0, 0.899539,-0.00470578) , 
1, 1.17226, 1, 0, 0.851283,-0.00178739) , 
7, 2.13905e-05, 1, 0, 0.497049,-0.000302671)    );
  // itree = 782
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520076,-0.0077751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706814,-0.0177887) , 
5, 0.00249931, 1, 0, 0.590087,-0.000868972) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45854,0.000405258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.231918,0.163058) , 
3, 113.123, 1, 0, 0.434642,0.000130696) , 
5, 0.00328105, 1, 0, 0.478637,-0.000152238) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641981,0.0445304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663284,0.048578) , 
3, 23.8249, 1, 0, 0.651432,0.000874523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654549,-0.0267137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626948,-0.0452871) , 
1, 1.09574, 1, 0, 0.642689,-0.00421162) , 
3, 45.4501, 1, 0, 0.647079,-0.00165783) , 
6, 0.0110169, 1, 0, 0.498646,-0.000331083)    );
  // itree = 783
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.462004,0.00392751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.412608,-0.0154267) , 
3, 57.065, 1, 0, 0.458534,-1.98664e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994708,0.0534309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424437,0.0150027) , 
2, 0.0237819, 1, 0, 0.869491,0.000766975) , 
7, 2.21509e-05, 1, 0, 0.544095,0.000143954) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924071,-0.0164265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925336,0.0701495) , 
4, 0.00533591, 1, 0, 0.924356,-0.00115325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131096) , 
0, 0.00932596, 1, 0, 0.419653,-0.000551124) , 
3, 63.0863, 1, 0, 0.50285,-8.64252e-05)    );
  // itree = 784
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654019,0.000416882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763782,-0.0446781) , 
5, 0.00417224, 1, 0, 0.6631,-0.00036922) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980372,0.0167268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131664) , 
0, 0.00467007, 1, 0, 0.319339,0.000110577) , 
5, 0.00438084, 1, 0, 0.481542,-0.000115815) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645019,-0.00869667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667111,0.00389775) , 
6, 0.0116453, 1, 0, 0.660291,-6.58556e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618321,-0.0524465) , 
1, 1.10994, 1, 0, 0.648105,-0.0027468) , 
6, 0.0110166, 1, 0, 0.501173,-0.000425897)    );
  // itree = 785
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535262,-0.0150203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433934,0.0136691) , 
3, 37.5826, 1, 0, 0.478966,-5.64179e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685664,-0.0204059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479377,0.0141755) , 
5, 0.00553153, 1, 0, 0.56485,-0.00109296) , 
6, 0.0104932, 1, 0, 0.489414,-0.000182518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710569,-0.0250486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611901,-0.0260796) , 
3, 57.9166, 1, 0, 0.669466,-0.00428211) , 
6, 0.0115967, 1, 0, 0.500937,-0.000444883)    );
  // itree = 786
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.420741,-0.00186538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622663,-0.00772067) , 
6, 0.0084106, 1, 0, 0.483031,-0.000134232) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605203,0.00129316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601288,0.0901104) , 
1, 1.11736, 1, 0, 0.603399,0.000651797) , 
6, 0.0110374, 1, 0, 0.490039,-8.84667e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638193,0.00277012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674092,-0.0213892) , 
1, 1.07128, 1, 0, 0.652954,-0.00138846) , 
6, 0.0115965, 1, 0, 0.500802,-0.000174353)    );
  // itree = 787
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.441089,0.00801019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315555,-0.00951735) , 
3, 80.3092, 1, 0, 0.423249,5.13751e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998508,0.00436678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420972,-0.0091358) , 
2, 0.0237799, 1, 0, 0.851532,-0.000691057) , 
7, 2.13905e-05, 1, 0, 0.520682,-0.000117527) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.220875,0.00960333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550413,0.173713) , 
6, 0.00927921, 1, 0, 0.319087,0.00061277) , 
3, 112.434, 1, 0, 0.501716,-4.88188e-05)    );
  // itree = 788
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.250655,0.00987291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832613,-0.0118913) , 
7, 7.88296e-06, 1, 0, 0.469625,-0.000224229) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597825,0.0304859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138679) , 
2, 0.19036, 1, 0, 0.360088,9.91154e-05) , 
3, 37.8518, 1, 0, 0.408229,-4.29918e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870982,0.0651756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872395,-0.00247275) , 
3, 12.9862, 1, 0, 0.871955,0.000370662) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829252,-0.0307367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810176,-0.00759949) , 
4, 0.00542304, 1, 0, 0.819926,-0.00500115) , 
3, 45.4324, 1, 0, 0.8465,-0.00225747) , 
7, 2.20855e-05, 1, 0, 0.50128,-0.000513157)    );
  // itree = 789
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968206,-0.0121805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131049) , 
0, 0.00465688, 1, 0, 0.244071,-0.000192149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968451,0.0451407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133926) , 
0, 0.00466298, 1, 0, 0.557588,0.000363296) , 
6, 0.00456348, 1, 0, 0.425311,0.000128947) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981189,-0.0139731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679598,-0.015892) , 
0, 0.0021907, 1, 0, 0.937158,-0.0014185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013111) , 
0, 0.00926708, 1, 0, 0.636239,-0.000988452) , 
6, 0.00870093, 1, 0, 0.500579,-0.00026979)    );
  // itree = 790
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988405,0.0268987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896181,-0.0109363) , 
5, 0.00525409, 1, 0, 0.975293,2.25147e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940058,-0.0292797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888602,-0.0097562) , 
2, 0.0125209, 1, 0, 0.907424,-0.00318064) , 
2, 0.00902158, 1, 0, 0.956071,-0.000884676) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.134423,-0.00760004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131264) , 
0, 0.01862, 1, 0, 0.0179575,-0.000220309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.193359,0.0106117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337045,0.00461909) , 
6, 0.0114309, 1, 0, 0.255487,0.000752088) , 
6, 0.0104359, 1, 0, 0.0587674,-5.32413e-05) , 
2, 0.023795, 1, 0, 0.505479,-0.00046716)    );
  // itree = 791
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603192,-0.0119186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398242,0.00768544) , 
5, 0.00311102, 1, 0, 0.457496,-3.58991e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626722,0.0252637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675284,-0.0142018) , 
1, 1.22705, 1, 0, 0.649206,-0.00092403) , 
6, 0.00993806, 1, 0, 0.470311,-9.52657e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7612,0.0077907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710782,0.0596464) , 
3, 43.8415, 1, 0, 0.73568,0.00113309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.540853,0.0208555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458383,-0.00767496) , 
3, 73.1913, 1, 0, 0.516944,4.35707e-05) , 
5, 0.0057528, 1, 0, 0.619596,0.000554878) , 
6, 0.0104369, 1, 0, 0.497173,2.17175e-05)    );
  // itree = 792
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976962,-0.00173069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971828,-0.0147988) , 
3, 48.7268, 1, 0, 0.975112,-0.000167429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924356,-0.0255412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887725,0.0128127) , 
2, 0.0125209, 1, 0, 0.900823,-0.00137165) , 
2, 0.00902158, 1, 0, 0.953904,-0.000511208) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851585,0.0104385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134006) , 
0, 0.004655, 1, 0, 0.135774,0.00038569) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130923) , 
0, 0.0420702, 1, 0, 0,-0.000335273) , 
2, 0.205165, 1, 0, 0.057582,-2.95104e-05) , 
2, 0.0238037, 1, 0, 0.500008,-0.000267277)    );
  // itree = 793
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633006,-0.00593273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772701,-0.0378103) , 
4, 0.00441717, 1, 0, 0.64364,-0.000340814) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206941,0.0604065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131118) , 
0, 0.0419413, 1, 0, 0.0295237,3.63524e-05) , 
4, 0.00463834, 1, 0, 0.403831,-0.000193533) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981386,-0.0282237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947785,-0.0299005) , 
3, 68.1355, 1, 0, 0.971978,-0.00404379) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.749185,-0.0243112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770527,0.0321314) , 
3, 24.4124, 1, 0, 0.763857,-5.39686e-05) , 
0, 0.00159038, 1, 0, 0.855363,-0.00180821) , 
7, 2.21849e-05, 1, 0, 0.498717,-0.000532846)    );
  // itree = 794
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990706,-0.00608978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710218,-0.0112979) , 
0, 0.00177231, 1, 0, 0.939082,-0.000569534) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130931) , 
2, 0.119056, 1, 0, 0,-4.32336e-05) , 
0, 0.00932058, 1, 0, 0.479179,-0.000311785) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648423,0.0178602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648368,-0.0188531) , 
1, 1.07996, 1, 0, 0.648398,-0.000863788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595945,-0.0648945) , 
1, 1.11898, 1, 0, 0.637116,-0.00286065) , 
6, 0.011017, 1, 0, 0.497972,-0.000615081)    );
  // itree = 795
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.438571,-0.00353765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662486,0.083926) , 
6, 0.00899041, 1, 0, 0.452672,-1.9672e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607825,-0.033169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609414,-0.00657713) , 
3, 12.2557, 1, 0, 0.609157,-0.000732979) , 
6, 0.00944297, 1, 0, 0.481752,-0.000152226) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71083,-0.0304519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.496132,-0.0488751) , 
4, 0.00577392, 1, 0, 0.628279,-0.00903896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651039,-0.00192939) , 
6, 0.0117363, 1, 0, 0.637394,-0.00544567) , 
6, 0.0110168, 1, 0, 0.500727,-0.00079756)    );
  // itree = 796
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974935,0.0278536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764542,0.0223137) , 
2, 0.0111898, 1, 0, 0.91745,0.000379555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000228647,0.0479504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000344062,-0.0138337) , 
6, 0.00695961, 1, 0, 0.000274725,-0.00015905) , 
2, 0.0475885, 1, 0, 0.521809,0.000147218) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.345218,0.00386692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185504,0.0271278) , 
3, 123.993, 1, 0, 0.253031,0.000132502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491414,-0.0303939) , 
6, 0.00927921, 1, 0, 0.326306,-0.00090948) , 
3, 100.795, 1, 0, 0.496042,7.9446e-06)    );
  // itree = 797
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976307,-0.00435205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873371,0.0523148) , 
2, 0.0124047, 1, 0, 0.958197,0.000110971) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.551945,-0.00691407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0147735) , 
0, 0.00466298, 1, 0, 0.0416767,-0.000326121) , 
2, 0.0238037, 1, 0, 0.500205,-0.000107447) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65644,-0.0389276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65628,-0.0469978) , 
3, 36.008, 1, 0, 0.656343,-0.00459694) , 
6, 0.0115965, 1, 0, 0.510465,-0.000402447)    );
  // itree = 798
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991692,-0.0042087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887076,-0.0196791) , 
5, 0.00525882, 1, 0, 0.977482,-0.000265688) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658487,-0.0213707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831556,-0.0211731) , 
4, 0.00402474, 1, 0, 0.801742,-0.00389357) , 
2, 0.00903466, 1, 0, 0.914779,-0.00156011) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000318705,-0.00906058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130918) , 
0, 0.041906, 1, 0, 0.000109383,-0.000175094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00153998,0.056638) , 
3, 75.7117, 1, 0, 0.000536876,5.80802e-06) , 
2, 0.0476074, 1, 0, 0.50162,-0.00085245)    );
  // itree = 799
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971209,0.0546557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013469) , 
0, 0.00465473, 1, 0, 0.49494,0.00018215) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443002,-0.014193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338961,0.000558909) , 
3, 60.0246, 1, 0, 0.359514,-0.00019924) , 
3, 49.9196, 1, 0, 0.434995,1.33336e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644342,0.00567239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639951,-0.0258383) , 
6, 0.0104815, 1, 0, 0.642021,-0.00133745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684709,-0.037672) , 
1, 1.38575, 1, 0, 0.645157,-0.0018675) , 
6, 0.00869959, 1, 0, 0.51086,-0.000665612)    );
  // itree = 800
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.395026,0.0012254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824725,-0.0152195) , 
7, 5.62886e-06, 1, 0, 0.620281,-0.000492907) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859894,0.0426479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00226382,-0.0120926) , 
2, 0.0238037, 1, 0, 0.197953,1.06478e-05) , 
4, 0.00405874, 1, 0, 0.403861,-0.000234862) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996319,0.0313936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460813,0.0130196) , 
2, 0.0235421, 1, 0, 0.806156,0.000713563) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882925,-0.0298359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942945,-0.00873883) , 
1, 1.24869, 1, 0, 0.917833,-0.00573782) , 
1, 1.20785, 1, 0, 0.843417,-0.00143894) , 
7, 2.18118e-05, 1, 0, 0.498662,-0.000494553)    );
  // itree = 801
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960092,-0.0116731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551928,-0.0167297) , 
2, 0.0181173, 1, 0, 0.906614,-0.000811498) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00123997,0.0198853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137092) , 
2, 0.22002, 1, 0, 0.000487916,1.31604e-06) , 
2, 0.04759, 1, 0, 0.472992,-0.00042253) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651579,-0.00945026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66149,0.0330461) , 
3, 18.6147, 1, 0, 0.657305,-2.67896e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622695,-0.0553914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579205,-0.0302383) , 
3, 78.4201, 1, 0, 0.600174,-0.00964348) , 
3, 48.7984, 1, 0, 0.630283,-0.00457539) , 
6, 0.0110166, 1, 0, 0.491896,-0.000921647)    );
  // itree = 802
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.313497,-0.0122159) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.424354,0.0182619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224084,-0.0128708) , 
3, 87.6879, 1, 0, 0.386299,2.08395e-05) , 
4, 0.00116064, 1, 0, 0.381161,-3.66024e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796995,-0.0127869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676729,-0.0247653) , 
3, 97.4982, 1, 0, 0.783012,-0.00129634) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986112,0.0259515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014325) , 
0, 0.00464147, 1, 0, 0.362496,0.000122805) , 
5, 0.00561442, 1, 0, 0.624141,-0.000760191) , 
6, 0.00753927, 1, 0, 0.496599,-0.000380373)    );
  // itree = 803
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97339,-0.00444156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835561,-0.0251644) , 
2, 0.0169155, 1, 0, 0.961614,-0.000439049) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.557831,0.0604957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000429115,-0.00681581) , 
2, 0.0464652, 1, 0, 0.052517,0.000123698) , 
2, 0.023795, 1, 0, 0.537534,-0.000176536) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.073438,-0.00419666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671217,-0.0087503) , 
7, 7.40948e-06, 1, 0, 0.218405,-0.000136252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782048,-0.0229335) , 
7, 2.18736e-05, 1, 0, 0.327745,-0.00178952) , 
3, 100.214, 1, 0, 0.508864,-0.000396969)    );
  // itree = 804
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67028,-0.0135298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392685,0.00757559) , 
4, 0.00405802, 1, 0, 0.515852,-8.72369e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949889,0.0294512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131013) , 
0, 0.00932597, 1, 0, 0.373788,0.000314989) , 
3, 75.4197, 1, 0, 0.481173,1.09502e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632913,-0.0074454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541752,0.0215499) , 
3, 44.7693, 1, 0, 0.585559,0.000396006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533649,-0.0269976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795685,-0.00555998) , 
6, 0.0117406, 1, 0, 0.684723,-0.00251365) , 
4, 0.00577058, 1, 0, 0.640193,-0.00120705) , 
6, 0.0110166, 1, 0, 0.500249,-0.000135163)    );
  // itree = 805
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82041,0.00863935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132642) , 
2, 0.0238037, 1, 0, 0.187862,-2.89655e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.682093,-0.0151496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846331,-0.00570779) , 
5, 0.00324655, 1, 0, 0.805487,-0.000630072) , 
7, 7.57337e-06, 1, 0, 0.400678,-0.00023609) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764339,-0.0461098) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866587,0.0177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859566,-0.0234827) , 
3, 58.8146, 1, 0, 0.864148,-0.00108633) , 
1, 1.07148, 1, 0, 0.849814,-0.00181806) , 
7, 2.19617e-05, 1, 0, 0.496876,-0.000574921)    );
  // itree = 806
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99914,-0.00459137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96952,-0.0141387) , 
0, 0.00185814, 1, 0, 0.994651,-0.000437707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240634,-0.00873221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614017,-0.0188878) , 
4, 0.00551547, 1, 0, 0.372473,-0.0047269) , 
2, 0.0236845, 1, 0, 0.907757,-0.00103674) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131889) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130934) , 
3, 75.0137, 1, 0, 0,-9.88307e-06) , 
2, 0.119072, 1, 0, 0,-6.09863e-05) , 
0, 0.0139889, 1, 0, 0.505347,-0.000604189)    );
  // itree = 807
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975956,0.00600645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134031) , 
0, 0.00467007, 1, 0, 0.340776,2.86372e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873801,-0.0223728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848491,-0.00260537) , 
3, 36.3438, 1, 0, 0.859816,-0.000647607) , 
7, 1.56394e-05, 1, 0, 0.476223,-0.00016688) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990222,0.0162954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293717,0.0111485) , 
2, 0.0236904, 1, 0, 0.647425,0.000306479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631123,0.0811258) , 
1, 1.119, 1, 0, 0.643933,0.000572305) , 
6, 0.0110166, 1, 0, 0.495845,-8.03933e-05)    );
  // itree = 808
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.50619,-0.00998111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340149,0.0448479) , 
3, 74.573, 1, 0, 0.467305,5.96768e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664296,-0.0226647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690316,0.023086) , 
6, 0.00531094, 1, 0, 0.678258,-0.00222537) , 
4, 0.00234703, 1, 0, 0.531687,-0.000675028) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966058,-0.00814414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646738,0.0583105) , 
2, 0.0203378, 1, 0, 0.913562,0.000129568) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00272149,-0.0110509) , 
7, -1.0033e-05, 1, 0, 0.000707377,-0.000288298) , 
2, 0.0475576, 1, 0, 0.490745,-6.39802e-05) , 
4, 0.0029, 1, 0, 0.499418,-0.000193418)    );
  // itree = 809
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.493215,0.00181777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.307333,-0.0142016) , 
3, 87.9865, 1, 0, 0.461109,-0.000178867) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.612608,0.117456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591476,0.0291911) , 
6, 0.0105668, 1, 0, 0.604455,0.00103234) , 
6, 0.00996733, 1, 0, 0.479554,-2.30206e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653551,0.00814881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683384,-0.0127705) , 
6, 0.0117042, 1, 0, 0.669689,-0.000747149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581655,-0.0408133) , 
1, 1.11925, 1, 0, 0.64977,-0.00222285) , 
6, 0.0110168, 1, 0, 0.499993,-0.000287176)    );
  // itree = 810
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.387979,-0.0107461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588026,-0.0258186) , 
6, 0.0074887, 1, 0, 0.400327,-0.000344495) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580592,-0.0116889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631986,0.0140727) , 
1, 1.18298, 1, 0, 0.626001,0.000145712) , 
6, 0.00786921, 1, 0, 0.483586,-0.000163639) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702933,0.0160467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614486,0.00631836) , 
6, 0.0119551, 1, 0, 0.660543,0.000497331) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60753,0.0809598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692392,-0.0277399) , 
6, 0.0113499, 1, 0, 0.65114,-0.00275826) , 
1, 1.08184, 1, 0, 0.655448,-0.00126654) , 
6, 0.0110166, 1, 0, 0.503843,-0.000293635)    );
  // itree = 811
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641435,-0.013057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.326677,0.0138707) , 
4, 0.00347721, 1, 0, 0.443618,-0.00011273) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60256,0.0135055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596672,-0.0207942) , 
1, 1.20919, 1, 0, 0.599056,-0.00068011) , 
6, 0.00944299, 1, 0, 0.47243,-0.000217901) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675876,0.0125051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627408,-0.00891214) , 
1, 1.10521, 1, 0, 0.659254,-0.000111593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585233,-0.0370159) , 
3, 61.0092, 1, 0, 0.63093,-0.0023018) , 
6, 0.0110168, 1, 0, 0.491518,-0.000468864)    );
  // itree = 812
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.352536,-0.0128429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415472,0.0121911) , 
4, 0.00116044, 1, 0, 0.411749,3.09541e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.259435,0.0178525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630317,-0.0216457) , 
1, 1.40562, 1, 0, 0.392487,-0.000619525) , 
6, 0.00811275, 1, 0, 0.406814,-0.000135694) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878438,0.0729297) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.855304,-0.0220798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843414,-0.00599923) , 
3, 72.6161, 1, 0, 0.851713,-0.00225493) , 
3, 12.6297, 1, 0, 0.855866,-0.00173577) , 
7, 2.18118e-05, 1, 0, 0.503627,-0.00048066)    );
  // itree = 813
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47593,-0.0100013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592676,0.0447133) , 
6, 0.0105165, 1, 0, 0.482771,-0.000267131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620674,-0.0185432) , 
6, 0.0110431, 1, 0, 0.490298,-0.000363049) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986036,-0.00891002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.328318,-0.0424556) , 
2, 0.023654, 1, 0, 0.654127,-0.00522583) , 
6, 0.0115964, 1, 0, 0.501258,-0.000688358)    );
  // itree = 814
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62281,-0.0106395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537866,-0.0137656) , 
3, 49.9835, 1, 0, 0.589324,-0.000574341) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.306189,0.0148509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372294,-0.0173889) , 
6, 0.00869695, 1, 0, 0.321485,-6.73445e-05) , 
5, 0.00332367, 1, 0, 0.409739,-0.000234402) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898096,0.0320681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777397,-0.0159403) , 
6, 0.0116454, 1, 0, 0.871404,-0.000131571) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839265,-0.0332123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.820135,0.0671491) , 
4, 0.00556466, 1, 0, 0.831363,-0.00295909) , 
3, 47.0478, 1, 0, 0.852984,-0.00143229) , 
7, 2.2045e-05, 1, 0, 0.503402,-0.000487529)    );
  // itree = 815
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974634,0.0196989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677657,0.0587768) , 
2, 0.0111762, 1, 0, 0.941997,0.000338743) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0039903,-0.0118494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000140499,0.0185408) , 
2, 0.159912, 1, 0, 0.00131706,-9.59557e-05) , 
2, 0.0238037, 1, 0, 0.428484,0.000101443) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636315,-0.011695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611195,-0.0363908) , 
6, 0.0102592, 1, 0, 0.632382,-0.00126656) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625997,0.000712898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606859,0.0552292) , 
6, 0.0119395, 1, 0, 0.622948,0.000260013) , 
6, 0.0105202, 1, 0, 0.627927,-0.000545538) , 
6, 0.00869771, 1, 0, 0.49974,-0.000129708)    );
  // itree = 816
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650239,-0.0102988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.242785,0.0274355) , 
5, 0.00268204, 1, 0, 0.367118,2.04326e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413798,-0.0070667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583788,-0.0267125) , 
1, 1.5559, 1, 0, 0.460973,-0.000650043) , 
6, 0.00695096, 1, 0, 0.404596,-0.000247302) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861718,-0.0515259) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844644,-0.0233334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828087,0.00170325) , 
4, 0.0054222, 1, 0, 0.836753,-0.00152986) , 
3, 11.7771, 1, 0, 0.840414,-0.00242179) , 
7, 2.1881e-05, 1, 0, 0.497724,-0.000711955)    );
  // itree = 817
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705593,-0.0121493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657511,-0.0221008) , 
3, 31.2405, 1, 0, 0.68934,-0.000890756) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624613,0.024528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425955,-0.0118328) , 
3, 111.764, 1, 0, 0.588634,-2.46576e-05) , 
3, 50.469, 1, 0, 0.649709,-0.000549917) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96013,-0.00766416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966025,0.0232313) , 
5, 0.00498441, 1, 0, 0.964291,0.000436927) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.05507e-05,0.0583597) , 
2, 0.14277, 1, 0, 5.03943e-05,-9.06147e-05) , 
0, 0.00467007, 1, 0, 0.371897,0.000112825) , 
5, 0.00450123, 1, 0, 0.496544,-0.000184531)    );
  // itree = 818
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940078,-0.015407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000496902,0.0307104) , 
2, 0.04759, 1, 0, 0.597571,-0.000647711) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972209,0.0312256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131092) , 
0, 0.00466298, 1, 0, 0.279639,0.000101041) , 
4, 0.0034797, 1, 0, 0.397179,-0.000175774) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0869945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941895,-0.0284915) , 
2, 0.0166713, 1, 0, 0.981201,-0.00291011) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513552,-0.0162294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.776151,0.013833) , 
7, 2.58739e-05, 1, 0, 0.712172,-0.000229914) , 
0, 0.0018626, 1, 0, 0.843494,-0.00153821) , 
7, 2.13905e-05, 1, 0, 0.497696,-0.000482614)    );
  // itree = 819
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870634,-0.0139972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000552566,0.00458212) , 
2, 0.04759, 1, 0, 0.375389,-0.000255567) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.847487,-0.0294933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847158,-0.015983) , 
7, 2.00156e-05, 1, 0, 0.847198,-0.00186178) , 
7, 1.85845e-05, 1, 0, 0.487059,-0.000635732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665445,-0.025153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622836,-0.0282372) , 
3, 47.9525, 1, 0, 0.643924,-0.00391864) , 
6, 0.0115963, 1, 0, 0.497165,-0.000847228)    );
  // itree = 820
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982034,-0.00609158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856403,0.0782973) , 
2, 0.0101493, 1, 0, 0.953888,0.000241303) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.331381,-0.00684677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130985) , 
0, 0.00934014, 1, 0, 0.0276785,-0.000193105) , 
2, 0.0238037, 1, 0, 0.473973,1.62146e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59466,-0.0398334) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636767,-0.0259625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633382,0.0224668) , 
6, 0.0117157, 1, 0, 0.634873,-0.000421874) , 
6, 0.0112957, 1, 0, 0.626497,-0.00194983) , 
6, 0.0110168, 1, 0, 0.492794,-0.000226389)    );
  // itree = 821
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490346,0.0204778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371809,-0.009859) , 
3, 49.7004, 1, 0, 0.438682,-3.56791e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.24755,-0.0115802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62682,-0.0342645) , 
1, 1.38685, 1, 0, 0.317722,-0.00107486) , 
6, 0.00869199, 1, 0, 0.41476,-0.000241193) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872747,-0.0315126) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852487,-0.0194292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82366,0.0222508) , 
4, 0.0054511, 1, 0, 0.839192,-0.00128596) , 
3, 11.3722, 1, 0, 0.843935,-0.00232125) , 
7, 2.20448e-05, 1, 0, 0.507994,-0.000693067)    );
  // itree = 822
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569327,-0.0492794) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646717,-0.022579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508604,0.00638715) , 
5, 0.00342982, 1, 0, 0.550153,-0.000343767) , 
3, 3.60789, 1, 0, 0.552036,-0.000674758) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.428407,0.0021355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582435,-0.00999814) , 
6, 0.010491, 1, 0, 0.437426,-6.43634e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676311,0.0571002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628393,-0.00303353) , 
3, 78.5905, 1, 0, 0.655773,0.000627001) , 
6, 0.0110176, 1, 0, 0.463781,1.90874e-05) , 
3, 37.8545, 1, 0, 0.503185,-0.000290702)    );
  // itree = 823
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0874925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966585,-0.0184695) , 
0, 0.00010588, 1, 0, 0.983759,-0.000846516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631501,-0.0227632) , 
0, 0.00222351, 1, 0, 0.965618,-0.00130561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141331) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000164423,0.0773977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130925) , 
0, 0.040275, 1, 0, 4.76072e-05,3.51363e-05) , 
2, 0.119065, 1, 0, 3.61138e-05,-7.04691e-05) , 
0, 0.00467007, 1, 0, 0.500013,-0.000710024)    );
  // itree = 824
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998662,0.0541097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969742,-0.0160057) , 
0, 0.000211304, 1, 0, 0.984854,-0.000634658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407635,-0.0176301) , 
0, 0.00221903, 1, 0, 0.937539,-0.00124355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134481) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130942) , 
6, 0.00811362, 1, 0, 0,-1.11134e-05) , 
2, 0.118971, 1, 0, 0,-7.75886e-05) , 
0, 0.00933147, 1, 0, 0.505357,-0.000706071)    );
  // itree = 825
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670358,-0.00908665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.213082,-0.00643865) , 
6, 0.00290671, 1, 0, 0.383014,-0.00021608) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96756,0.00809835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131051) , 
0, 0.00467008, 1, 0, 0.137557,-1.91612e-05) , 
4, 0.00174075, 1, 0, 0.175281,-4.94256e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876784,0.00799142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747635,0.0307153) , 
5, 0.00535503, 1, 0, 0.845811,0.000325166) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83773,-0.0269455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80999,-0.0176358) , 
3, 36.1037, 1, 0, 0.815272,-0.00225264) , 
3, 24.8502, 1, 0, 0.824982,-0.00143305) , 
7, 7.02627e-06, 1, 0, 0.500498,-0.000742016)    );
  // itree = 826
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473961,-0.0151987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407511,0.014573) , 
3, 27.0393, 1, 0, 0.43151,-2.82406e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188321,-0.0120151) , 
3, 113.557, 1, 0, 0.408622,-8.45595e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999095,-0.0315999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926201,-0.0154458) , 
0, 0.00212153, 1, 0, 0.985316,-0.00132814) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.404877,-0.00799406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524481,-0.0382328) , 
6, 0.0112362, 1, 0, 0.463621,-0.00860979) , 
2, 0.0236845, 1, 0, 0.844157,-0.0032984) , 
7, 2.18118e-05, 1, 0, 0.502095,-0.000774301)    );
  // itree = 827
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961516,-0.00259111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622617,-0.0255654) , 
2, 0.0145089, 1, 0, 0.935496,-0.00064421) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00127575,-0.00555354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00316865,0.0170316) , 
6, 0.00869124, 1, 0, 0.00167631,-1.91453e-05) , 
2, 0.023795, 1, 0, 0.391603,-0.000280148) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997152,0.00440234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991684,-0.0329453) , 
3, 67.0989, 1, 0, 0.995757,-0.000584781) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421064,-0.00960718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532611,-0.018331) , 
4, 0.00554565, 1, 0, 0.476711,-0.00547836) , 
2, 0.0235276, 1, 0, 0.848165,-0.00197628) , 
7, 2.13904e-05, 1, 0, 0.492749,-0.000655907)    );
  // itree = 828
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532644,0.00373307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498698,-0.011038) , 
3, 28.7875, 1, 0, 0.512379,-0.000305753) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.254975,0.00514539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486804,0.163701) , 
6, 0.00938034, 1, 0, 0.314417,0.000550316) , 
3, 100.788, 1, 0, 0.486996,-0.000195988) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692538,-0.0240555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583275,-0.0312028) , 
6, 0.0119553, 1, 0, 0.648773,-0.00532733) , 
6, 0.0115965, 1, 0, 0.497624,-0.000533095)    );
  // itree = 829
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988961,-0.00704097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762267,-0.0127859) , 
0, 0.00199083, 1, 0, 0.966314,-0.000777809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130933) , 
2, 0.119212, 1, 0, 0,-4.84879e-05) , 
0, 0.00467007, 1, 0, 0.491213,-0.000419228) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648833,-0.00286113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600743,-0.0319392) , 
6, 0.0119553, 1, 0, 0.630711,-0.00324956) , 
6, 0.0115963, 1, 0, 0.500589,-0.000609465)    );
  // itree = 830
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.464448,0.0305256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316425,-0.0101749) , 
3, 62.8507, 1, 0, 0.416485,5.39489e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627833,-0.00600454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628544,-0.0211095) , 
1, 1.408, 1, 0, 0.62794,-0.000455303) , 
6, 0.0083937, 1, 0, 0.48164,-0.000102966) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98086,-0.00910085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980915,0.0148576) , 
1, 1.08646, 1, 0, 0.980888,1.5942e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303604,-0.0283024) , 
2, 0.0237528, 1, 0, 0.644758,-0.00208324) , 
6, 0.0110166, 1, 0, 0.501044,-0.000338526)    );
  // itree = 831
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998648,0.0521383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961022,-0.0127445) , 
0, 0.000211318, 1, 0, 0.980569,-0.000479457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403267,-0.0173669) , 
0, 0.00221904, 1, 0, 0.935086,-0.000878572) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132025) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013094) , 
6, 0.00811658, 1, 0, 0,-1.07183e-05) , 
2, 0.119072, 1, 0, 0,-5.87805e-05) , 
0, 0.00933147, 1, 0, 0.4973,-0.000494764)    );
  // itree = 832
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973406,-0.00860276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625083,-0.0142212) , 
2, 0.00905863, 1, 0, 0.891136,-0.000582005) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00107909,0.0210131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131954) , 
2, 0.198405, 1, 0, 0.000369674,1.6116e-05) , 
2, 0.04759, 1, 0, 0.412003,-0.000260283) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831474,-0.0119467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846451,0.111764) , 
3, 55.9262, 1, 0, 0.836906,-0.000327324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942745,-0.0445229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843947,-0.0134189) , 
4, 0.00546011, 1, 0, 0.864855,-0.00282124) , 
4, 0.00524773, 1, 0, 0.853318,-0.00179183) , 
7, 2.20855e-05, 1, 0, 0.505272,-0.000583962)    );
  // itree = 833
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.449958,-0.00336164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683913,-0.0153977) , 
4, 0.0020104, 1, 0, 0.510179,-0.000387497) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8787,0.0214134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000363849,-0.00898779) , 
2, 0.0714111, 1, 0, 0.480568,0.000156666) , 
4, 0.00234145, 1, 0, 0.485303,6.96626e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637587,-0.0271539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643653,-0.0296034) , 
3, 35.9799, 1, 0, 0.641092,-0.00340708) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547212,0.0301619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74405,0.0405544) , 
6, 0.0119039, 1, 0, 0.632826,0.00141112) , 
4, 0.00582718, 1, 0, 0.637028,-0.00103815) , 
6, 0.0110166, 1, 0, 0.503566,-6.36846e-05)    );
  // itree = 834
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.475497,0.000406011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472385,-0.0157954) , 
3, 30.5899, 1, 0, 0.474976,-0.000130327) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809213,0.0155554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870524,-0.017831) , 
5, 0.0051345, 1, 0, 0.850432,-0.00214951) , 
7, 2.21506e-05, 1, 0, 0.555001,-0.000560695) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413735,-0.00145889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571867,-0.00749611) , 
6, 0.00996716, 1, 0, 0.434551,-8.74834e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992706,0.0682904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349929,0.0657247) , 
2, 0.0234753, 1, 0, 0.644276,0.000999883) , 
6, 0.0110166, 1, 0, 0.460311,4.60734e-05) , 
3, 37.7954, 1, 0, 0.501954,-0.000220772)    );
  // itree = 835
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982409,-0.00541927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982806,-0.0208844) , 
0, 0.00176688, 1, 0, 0.982469,-0.000660275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718497,-0.0181041) , 
0, 0.00218272, 1, 0, 0.964076,-0.0012052) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000317362,0.136496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013093) , 
0, 0.0402659, 1, 0, 8.90996e-05,7.60273e-05) , 
2, 0.119021, 1, 0, 6.89048e-05,-2.1772e-05) , 
0, 0.00466573, 1, 0, 0.491,-0.000624446)    );
  // itree = 836
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535612,-0.00770293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608379,-0.0206942) , 
6, 0.00994532, 1, 0, 0.54911,-0.000439047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.265564,-0.0114562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588187,0.0214747) , 
6, 0.00552175, 1, 0, 0.472278,7.31949e-05) , 
3, 25.2003, 1, 0, 0.495773,-8.34433e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605328,-0.0179552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674723,-0.0237242) , 
1, 1.07351, 1, 0, 0.632094,-0.0026266) , 
6, 0.0115963, 1, 0, 0.505071,-0.000256902)    );
  // itree = 837
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956738,-0.0117622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811563,0.068893) , 
2, 0.0219378, 1, 0, 0.949221,-0.00022699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414727,-0.0207724) , 
2, 0.0271759, 1, 0, 0.912275,-0.000658518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00295996,0.0206433) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130929) , 
0, 0.0467294, 1, 0, 0,-0.000136981) , 
2, 0.1984, 1, 0, 0.00104741,8.5455e-05) , 
2, 0.0475885, 1, 0, 0.506859,-0.000327516)    );
  // itree = 838
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721466,-0.0117326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.047539,0.0359458) , 
5, 0.00237346, 1, 0, 0.276142,-6.75246e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972167,0.0302472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000702756,-0.0125988) , 
2, 0.0237863, 1, 0, 0.551145,0.000144743) , 
6, 0.00502664, 1, 0, 0.408721,3.48093e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709336,-0.0103852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888587,-0.0200491) , 
4, 0.00552048, 1, 0, 0.731968,-0.000870006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936907,-0.00837012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118937,0.0200707) , 
2, 0.023767, 1, 0, 0.370614,0.000256793) , 
4, 0.00579682, 1, 0, 0.633972,-0.000564428) , 
6, 0.00811887, 1, 0, 0.501749,-0.000212675)    );
  // itree = 839
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.463866,-0.00773413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642411,-0.0149338) , 
6, 0.00999153, 1, 0, 0.476094,-0.000258841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601566,0.174899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550009,0.0207629) , 
1, 1.16768, 1, 0, 0.573876,0.00107862) , 
6, 0.0104918, 1, 0, 0.482117,-0.000176461) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619282,-0.0181555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656899,0.0406793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575022,-0.0449729) , 
3, 79.5687, 1, 0, 0.628195,-0.000320362) , 
3, 24.3949, 1, 0, 0.625594,-0.00160133) , 
6, 0.0110169, 1, 0, 0.499721,-0.000351287)    );
  // itree = 840
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.48139,-0.0130992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470164,0.0601261) , 
3, 30.5962, 1, 0, 0.479414,-9.58793e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980951,0.0323149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771229,0.0419955) , 
0, 0.00166443, 1, 0, 0.863024,0.000704346) , 
7, 2.21509e-05, 1, 0, 0.562289,7.70017e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987708,0.00633949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923076,-0.0188595) , 
0, 0.00133132, 1, 0, 0.96406,-0.00146904) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000178236,0.100444) , 
2, 0.333318, 1, 0, 6.11808e-05,1.55189e-05) , 
0, 0.00467007, 1, 0, 0.466631,-0.000703001) , 
3, 37.7954, 1, 0, 0.509569,-0.000352885)    );
  // itree = 841
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240255,-0.000750145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821172,-0.00871433) , 
7, 7.81766e-06, 1, 0, 0.460612,-0.000127687) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989371,0.0232669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445209,0.0376782) , 
2, 0.0232064, 1, 0, 0.858665,0.000898223) , 
7, 2.20856e-05, 1, 0, 0.545469,9.10169e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.30808,-0.0107165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771722,-0.0403288) , 
7, 1.33935e-05, 1, 0, 0.4878,-0.00255607) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.354374,-0.0116178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602969,0.105892) , 
6, 0.0104374, 1, 0, 0.39997,-0.000275101) , 
3, 72.6009, 1, 0, 0.417551,-0.000731671) , 
3, 62.9923, 1, 0, 0.502519,-0.000185206)    );
  // itree = 842
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908278,-0.0067974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836055,0.0446458) , 
4, 0.00233708, 1, 0, 0.849447,0.000229886) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00195942,-0.0102441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130921) , 
0, 0.0420581, 1, 0, 0.000547107,-0.000104654) , 
2, 0.0713828, 1, 0, 0.460806,7.67277e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605558,-0.0322645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660676,-0.00487065) , 
3, 15.7261, 1, 0, 0.648297,-0.000897114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458176,-0.0358145) , 
3, 110.01, 1, 0, 0.626539,-0.00146711) , 
6, 0.00985775, 1, 0, 0.501153,-0.000299113)    );
  // itree = 843
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543879,-0.0148233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.505824,0.0377276) , 
3, 33.5927, 1, 0, 0.532605,-8.93232e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929981,-0.0126146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131038) , 
0, 0.00932058, 1, 0, 0.417593,-0.000871405) , 
3, 50.3989, 1, 0, 0.48275,-0.000428337) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766397,-0.0333091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517904,-0.0411954) , 
6, 0.0114488, 1, 0, 0.655015,-0.00486691) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675514,0.0541846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568953,-0.0336304) , 
3, 55.5763, 1, 0, 0.629488,-0.000706965) , 
4, 0.00582718, 1, 0, 0.642074,-0.00275791) , 
6, 0.0110166, 1, 0, 0.50218,-0.000712437)    );
  // itree = 844
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989104,-0.00476234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91956,0.0900249) , 
0, 0.000653396, 1, 0, 0.966307,0.000308664) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130934) , 
2, 0.143267, 1, 0, 0,-2.88369e-05) , 
0, 0.00466298, 1, 0, 0.155661,2.55308e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822164,-0.0203151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814361,-0.000954143) , 
5, 0.00425943, 1, 0, 0.818126,-0.000810395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921863,-0.0239634) , 
7, 3.40783e-05, 1, 0, 0.826309,-0.00107379) , 
7, 5.71731e-06, 1, 0, 0.50263,-0.000543217)    );
  // itree = 845
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647654,-0.00798225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70925,-0.0120864) , 
4, 0.00441717, 1, 0, 0.652604,-0.00035024) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977032,0.0376959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131084) , 
0, 0.00467007, 1, 0, 0.271443,0.000199204) , 
4, 0.00463838, 1, 0, 0.476434,-9.62909e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662509,0.00311542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646407,-0.0263959) , 
1, 1.08189, 1, 0, 0.656333,-0.000716924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5782,-0.0294394) , 
1, 1.10986, 1, 0, 0.633778,-0.0020276) , 
6, 0.0110166, 1, 0, 0.495381,-0.00032886)    );
  // itree = 846
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.46708,0.00441194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706522,-0.0171172) , 
5, 0.00217764, 1, 0, 0.589565,-0.000635246) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61647,0.0146575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137062,-0.0185835) , 
4, 0.00522397, 1, 0, 0.427901,2.6921e-05) , 
5, 0.00326453, 1, 0, 0.472677,-0.000156481) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989069,0.0117035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975486,0.0629018) , 
2, 0.00903102, 1, 0, 0.982666,0.000170171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279662,-0.026416) , 
2, 0.0237892, 1, 0, 0.624707,-0.00360948) , 
6, 0.0110169, 1, 0, 0.490702,-0.000565883)    );
  // itree = 847
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490619,0.0101838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366729,-0.0264485) , 
6, 0.00868504, 1, 0, 0.468679,-0.000115039) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981175,0.0202173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750396,0.0414223) , 
0, 0.00166443, 1, 0, 0.851999,0.000602715) , 
7, 2.2185e-05, 1, 0, 0.550874,3.8869e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547747,-0.0136186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392143,-0.00382457) , 
5, 0.00323003, 1, 0, 0.432291,-0.000348253) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618631,-0.0349585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617945,-0.00705807) , 
3, 68.9902, 1, 0, 0.618273,-0.00241728) , 
6, 0.011017, 1, 0, 0.454988,-0.000600756) , 
3, 37.8007, 1, 0, 0.497954,-0.000314144)    );
  // itree = 848
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978653,0.00307653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000205886,-0.0156333) , 
0, 0.00368433, 1, 0, 0.703887,-0.000134014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502616,-0.0190165) , 
6, 0.0110108, 1, 0, 0.69498,-0.000308171) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.176973,-0.0125251) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977202,0.0621968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131023) , 
0, 0.00465689, 1, 0, 0.170924,0.00020574) , 
3, 12.5393, 1, 0, 0.171803,7.78284e-05) , 
5, 0.00563012, 1, 0, 0.500438,-0.000164638)    );
  // itree = 849
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.46714,0.00343799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.694828,-0.0194801) , 
4, 0.0023201, 1, 0, 0.579788,-0.000765732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792043,0.0174988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000388373,-0.00873634) , 
2, 0.0475813, 1, 0, 0.292967,4.7024e-05) , 
4, 0.00347903, 1, 0, 0.400843,-0.000258662) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785734,-0.0106214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932356,-0.0213591) , 
7, 3.49118e-05, 1, 0, 0.813391,-0.00139992) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897744,-0.0134333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899597,-0.0282755) , 
4, 0.00500901, 1, 0, 0.898476,-0.00503693) , 
1, 1.20541, 1, 0, 0.841855,-0.00261665) , 
7, 2.19615e-05, 1, 0, 0.495413,-0.000764305)    );
  // itree = 850
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532382,-0.000915689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519968,-0.0157059) , 
3, 26.396, 1, 0, 0.527082,-0.000386843) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634096,-0.0322677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619977,0.0253343) , 
4, 0.00582986, 1, 0, 0.627518,-0.00213466) , 
6, 0.0110177, 1, 0, 0.539239,-0.0005984) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.316194,-0.00370968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526438,-0.0108947) , 
6, 0.00787277, 1, 0, 0.344541,-0.000192195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639935,0.0520261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579602,0.00970107) , 
3, 81.0034, 1, 0, 0.610763,0.000814505) , 
6, 0.00870085, 1, 0, 0.440176,0.000169443) , 
3, 50.3989, 1, 0, 0.495805,-0.000261737)    );
  // itree = 851
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988633,-0.01069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946908,0.0197259) , 
0, 0.000884816, 1, 0, 0.97044,0.000208434) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130967) , 
2, 0.214443, 1, 0, 0,-9.3959e-05) , 
0, 0.00465917, 1, 0, 0.554525,7.88334e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908103,-0.0166967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940392,-0.00407665) , 
3, 70.4574, 1, 0, 0.926868,-0.00119137) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130936) , 
2, 0.214155, 1, 0, 0,-4.44192e-05) , 
0, 0.00932596, 1, 0, 0.440729,-0.000589796) , 
3, 50.469, 1, 0, 0.504719,-0.000213809)    );
  // itree = 852
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937845,0.0442375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753523,-0.00542619) , 
4, 0.00173698, 1, 0, 0.821559,0.000108081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130999) , 
0, 0.0514188, 1, 0, 0,-5.34813e-05) , 
2, 0.0238052, 1, 0, 0.155522,-2.28973e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.372196,-0.0167971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854134,-0.00910062) , 
5, 0.00256274, 1, 0, 0.823237,-0.000703991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684429,-0.0203698) , 
6, 0.011824, 1, 0, 0.813782,-0.000968577) , 
7, 5.71741e-06, 1, 0, 0.50033,-0.00051826)    );
  // itree = 853
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624705,0.00581042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742709,-0.0144127) , 
4, 0.00353111, 1, 0, 0.670214,-0.000237668) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762257,0.150603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.107559,-0.00526136) , 
4, 0.00499518, 1, 0, 0.217974,0.000198008) , 
4, 0.00463582, 1, 0, 0.477791,-5.22923e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966411,-0.0128909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970579,0.0441603) , 
1, 1.08166, 1, 0, 0.969362,-1.11836e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.318355,-0.0057067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190334,-0.0137856) , 
1, 1.10412, 1, 0, 0.245872,-0.00239379) , 
2, 0.0238023, 1, 0, 0.617076,-0.00117134) , 
6, 0.0104369, 1, 0, 0.502963,-0.00025453)    );
  // itree = 854
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.5353,0.00777835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531706,-0.0133121) , 
3, 26.9942, 1, 0, 0.534343,-0.000231478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705061,-0.0193396) , 
6, 0.0115965, 1, 0, 0.544652,-0.000434778) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997565,0.00676652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562433,0.0276338) , 
2, 0.0235523, 1, 0, 0.934607,0.000625406) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130943) , 
2, 0.166565, 1, 0, 0,-4.73345e-05) , 
0, 0.00929543, 1, 0, 0.455899,0.000280826) , 
3, 37.798, 1, 0, 0.494989,-3.43482e-05)    );
  // itree = 855
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623843,-0.0101509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.323697,0.0211375) , 
5, 0.00294937, 1, 0, 0.414269,-2.18849e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598229,-0.0216961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65106,-0.0106579) , 
6, 0.00878415, 1, 0, 0.637313,-0.00137637) , 
6, 0.00844859, 1, 0, 0.45574,-0.000273726) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63105,0.00602725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58002,-0.0122603) , 
1, 1.20647, 1, 0, 0.623975,5.4012e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677328,0.0709042) , 
1, 1.23346, 1, 0, 0.630107,0.000147533) , 
6, 0.00985716, 1, 0, 0.497048,-0.000173928)    );
  // itree = 856
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973571,0.00273375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50466,-0.0171023) , 
2, 0.0113233, 1, 0, 0.88017,-0.000594878) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0014565,0.0328093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.82698e-05,-0.0133831) , 
4, 0.00405872, 1, 0, 0.000485557,5.21572e-05) , 
2, 0.0476103, 1, 0, 0.407991,-0.000247576) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865335,0.00684042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897472,-0.0197887) , 
1, 1.19198, 1, 0, 0.880016,-0.00120955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620045,-0.0238941) , 
4, 0.00593478, 1, 0, 0.838048,-0.00200238) , 
7, 2.19617e-05, 1, 0, 0.498879,-0.000618436)    );
  // itree = 857
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.312209,-0.0128439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393188,0.0318244) , 
6, 0.00576614, 1, 0, 0.347813,-0.000103429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986588,-0.0114965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.276829,-0.0106397) , 
2, 0.0236712, 1, 0, 0.851438,-0.000800051) , 
7, 1.56852e-05, 1, 0, 0.481488,-0.00028833) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617329,0.00696815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649551,-0.0230494) , 
6, 0.0116808, 1, 0, 0.632376,-0.00129097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611483,-0.0411074) , 
3, 83.8684, 1, 0, 0.627992,-0.00310548) , 
6, 0.0110168, 1, 0, 0.499457,-0.000633872)    );
  // itree = 858
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96363,0.0507462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0312828,-0.00947215) , 
2, 0.0237906, 1, 0, 0.545704,1.94528e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667195,0.0885054) , 
6, 0.0115965, 1, 0, 0.553422,0.000143634) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932146,0.0139639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00454008,-0.0115683) , 
2, 0.023795, 1, 0, 0.369015,-9.69229e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863652,-0.0186152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783625,0.00245559) , 
6, 0.0111187, 1, 0, 0.829642,-0.00137749) , 
7, 2.20904e-05, 1, 0, 0.466956,-0.000369203) , 
3, 37.4808, 1, 0, 0.505077,-0.000143103)    );
  // itree = 859
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.290703,0.0239045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361946,-0.0103037) , 
6, 0.00546791, 1, 0, 0.322334,-3.12164e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809359,-0.0255549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898209,-0.000483812) , 
5, 0.00412089, 1, 0, 0.872119,-0.000954619) , 
7, 1.33478e-05, 1, 0, 0.473389,-0.000284924) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65049,-0.0253575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66886,0.0236975) , 
1, 1.06165, 1, 0, 0.664713,-8.99429e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649915,-0.00891314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578061,-0.034417) , 
3, 48.8049, 1, 0, 0.616056,-0.00426194) , 
1, 1.13377, 1, 0, 0.64636,-0.00166355) , 
6, 0.0104373, 1, 0, 0.504378,-0.000531916)    );
  // itree = 860
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504902,-0.0020478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73089,-0.0198259) , 
5, 0.00239951, 1, 0, 0.604472,-0.00105939) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.345049,0.014927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663814,-0.0103486) , 
6, 0.00938732, 1, 0, 0.443442,-9.10702e-05) , 
5, 0.00336032, 1, 0, 0.488111,-0.000359676) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611823,-0.0189609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.694798,-0.0272702) , 
1, 1.07128, 1, 0, 0.644933,-0.00204963) , 
6, 0.0115964, 1, 0, 0.498582,-0.000472515)    );
  // itree = 861
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988212,-0.0120117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859858,-0.0129479) , 
0, 0.00154843, 1, 0, 0.966707,-0.000676841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130938) , 
2, 0.119056, 1, 0, 0,-4.92287e-05) , 
0, 0.00466015, 1, 0, 0.406105,-0.000312883) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821177,-0.00627283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837217,0.0216331) , 
3, 24.3949, 1, 0, 0.832401,0.000223987) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876236,-0.0295338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949782,-0.0162942) , 
1, 1.24869, 1, 0, 0.91841,-0.0051906) , 
1, 1.20785, 1, 0, 0.861395,-0.00160135) , 
7, 2.18118e-05, 1, 0, 0.503738,-0.000589183)    );
  // itree = 862
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.18322,-0.00828421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142602,0.0594862) , 
3, 66.5378, 1, 0, 0.177087,1.35646e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.071555,-0.00983684) , 
3, 87.3669, 1, 0, 0.152428,-4.75549e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8383,-0.00559274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77176,-0.0151471) , 
6, 0.00997734, 1, 0, 0.812885,-0.000769665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897772,-0.0160766) , 
1, 2.17718, 1, 0, 0.818389,-0.00101157) , 
7, 5.71726e-06, 1, 0, 0.499345,-0.000549738)    );
  // itree = 863
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.389711,-0.00568968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587704,0.0887208) , 
6, 0.00757246, 1, 0, 0.401776,-3.90761e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.536627,-0.023826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651816,0.00121115) , 
5, 0.00424368, 1, 0, 0.622815,-0.000718057) , 
6, 0.00795182, 1, 0, 0.472799,-0.000257243) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618723,-0.0183615) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636066,0.00750996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610435,-0.0266024) , 
1, 1.1115, 1, 0, 0.623255,-0.00135929) , 
3, 12.1627, 1, 0, 0.622589,-0.00184565) , 
6, 0.0104375, 1, 0, 0.499954,-0.000545197)    );
  // itree = 864
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.717924,-0.0038754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.175318,-0.0160176) , 
6, 0.00625835, 1, 0, 0.60671,-0.000367817) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946602,0.0399807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0364567,-0.00405222) , 
2, 0.0238037, 1, 0, 0.440915,5.75282e-05) , 
5, 0.00322717, 1, 0, 0.486356,-5.90495e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.512523,0.0500935) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814631,0.0553391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595706,-0.0234922) , 
1, 1.08185, 1, 0, 0.71796,-0.00204807) , 
4, 0.00569968, 1, 0, 0.640665,-0.000863114) , 
6, 0.0110166, 1, 0, 0.505242,-0.000157458)    );
  // itree = 865
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.471346,0.0059171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288485,-0.0114794) , 
3, 75.4174, 1, 0, 0.426489,-5.32645e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245993,-0.0112122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635825,-0.0277217) , 
1, 1.38594, 1, 0, 0.31697,-0.000502379) , 
6, 0.00869695, 1, 0, 0.406457,-0.000135412) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994543,-0.0116741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992177,-0.0359709) , 
2, 0.0169155, 1, 0, 0.994097,-0.00119817) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.54898,-0.0134785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439175,-0.0118381) , 
1, 1.12405, 1, 0, 0.494729,-0.0036777) , 
2, 0.0237746, 1, 0, 0.861319,-0.00185745) , 
7, 2.20854e-05, 1, 0, 0.503085,-0.000501231)    );
  // itree = 866
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.265354,-0.0077397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529569,0.0288172) , 
6, 0.0049713, 1, 0, 0.362936,1.89319e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.403981,0.00314093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593883,-0.0270358) , 
1, 1.55423, 1, 0, 0.456546,-0.000306866) , 
6, 0.00695847, 1, 0, 0.400101,-0.000110415) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994695,-0.0121897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984161,-0.032866) , 
2, 0.0169155, 1, 0, 0.992773,-0.00121045) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.332583,-0.00691221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598964,-0.0202252) , 
7, 3.05792e-05, 1, 0, 0.445996,-0.0067444) , 
2, 0.0237746, 1, 0, 0.837141,-0.0027856) , 
7, 2.18118e-05, 1, 0, 0.495776,-0.000696053)    );
  // itree = 867
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967718,0.0415171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131076) , 
0, 0.00466574, 1, 0, 0.381114,0.000148128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660125,-0.0231692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588228,0.00209003) , 
5, 0.00441568, 1, 0, 0.61454,-0.000578664) , 
6, 0.00734472, 1, 0, 0.481585,-0.000164695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6526,-0.0237713) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677617,0.0171843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605328,-0.0264134) , 
3, 67.376, 1, 0, 0.644705,-0.000652324) , 
3, 24.021, 1, 0, 0.646959,-0.00345783) , 
6, 0.0110166, 1, 0, 0.500992,-0.000551167)    );
  // itree = 868
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988251,-0.00882595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863395,-0.0184716) , 
0, 0.0015279, 1, 0, 0.965897,-0.000716965) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130939) , 
2, 0.118975, 1, 0, 0,-4.36172e-05) , 
0, 0.00466573, 1, 0, 0.407613,-0.000327773) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993882,-0.0293112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4974,-0.017187) , 
2, 0.0236511, 1, 0, 0.876025,-0.003325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686408,-0.00217453) , 
4, 0.00585413, 1, 0, 0.834974,-0.00264577) , 
7, 2.19618e-05, 1, 0, 0.500671,-0.000832517)    );
  // itree = 869
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549063,-0.0168617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720254,0.115326) , 
5, 0.00257344, 1, 0, 0.602032,-0.000405203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536001,-0.0244042) , 
7, 9.92807e-06, 1, 0, 0.591903,-0.000747213) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965418,-0.013492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.734503,0.0149307) , 
2, 0.0101929, 1, 0, 0.859344,0.00022765) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00132543,-0.0119448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130933) , 
0, 0.0560568, 1, 0, 0.000412815,-0.000202712) , 
2, 0.071385, 1, 0, 0.467305,3.1221e-05) , 
5, 0.0033803, 1, 0, 0.501038,-0.000179531)    );
  // itree = 870
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968022,0.00560642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131163) , 
0, 0.00467008, 1, 0, 0.168898,-1.98808e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784523,-0.0148225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800492,-0.00480351) , 
7, 1.06967e-05, 1, 0, 0.795955,-0.000394343) , 
7, 6.4258e-06, 1, 0, 0.399351,-0.000157501) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829294,-0.0252016) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867356,-0.0172769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801471,0.0163172) , 
5, 0.00557537, 1, 0, 0.841824,-0.000746087) , 
3, 12.6297, 1, 0, 0.83972,-0.0015972) , 
7, 2.13905e-05, 1, 0, 0.497589,-0.000478673)    );
  // itree = 871
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969484,-4.00136e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605647,0.0625948) , 
2, 0.00894092, 1, 0, 0.927056,0.000152126) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000653801,-0.0126822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130934) , 
0, 0.0513661, 1, 0, 0.000222374,-9.72653e-05) , 
2, 0.0238052, 1, 0, 0.381283,5.27005e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980891,0.0192408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164195,-0.0101819) , 
2, 0.0237906, 1, 0, 0.642143,-0.000332081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555076,-0.0448724) , 
1, 1.54503, 1, 0, 0.634708,-0.000638048) , 
6, 0.00753827, 1, 0, 0.500791,-0.000298098)    );
  // itree = 872
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986447,-0.00761513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899765,0.0767742) , 
0, 0.000652625, 1, 0, 0.957715,0.000416135) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130926) , 
2, 0.118975, 1, 0, 0,-4.16178e-05) , 
0, 0.00466574, 1, 0, 0.153958,3.19683e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833076,-0.0190035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810134,-0.0083824) , 
3, 47.9268, 1, 0, 0.824345,-0.00140494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75279,-0.0285046) , 
3, 111.828, 1, 0, 0.819293,-0.00160639) , 
7, 5.71736e-06, 1, 0, 0.502304,-0.000825817)    );
  // itree = 873
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700888,-0.0131659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163701,0.0523131) , 
4, 0.00579658, 1, 0, 0.562041,-0.000257956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584179,-0.0234593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508717,0.0417739) , 
3, 34.9606, 1, 0, 0.542974,-0.00223154) , 
3, 32.3897, 1, 0, 0.559562,-0.000514524) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.50147,0.00876483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387142,0.150724) , 
3, 107.718, 1, 0, 0.491803,0.000258069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.265989,-0.0248787) , 
3, 124.189, 1, 0, 0.46235,7.74359e-05) , 
3, 37.798, 1, 0, 0.505673,-0.00018637)    );
  // itree = 874
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982992,-0.00694566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904082,0.0685964) , 
0, 0.000653396, 1, 0, 0.954936,0.000379658) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130925) , 
2, 0.118953, 1, 0, 0,-3.49091e-05) , 
0, 0.00466574, 1, 0, 0.178315,4.2503e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984759,-0.0088228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261607,-0.0219785) , 
0, 0.0021676, 1, 0, 0.832362,-0.00135696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77347,0.022275) , 
3, 100.788, 1, 0, 0.8266,-0.00115846) , 
7, 6.85985e-06, 1, 0, 0.500005,-0.000553437)    );
  // itree = 875
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959474,-0.0147622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131078) , 
0, 0.00467008, 1, 0, 0.18114,-0.000116601) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789065,0.00105515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813926,0.0306447) , 
7, 1.48931e-05, 1, 0, 0.800549,0.000217296) , 
7, 7.27626e-06, 1, 0, 0.396117,-7.16159e-07) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969286,-0.0048114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946424,-0.0283418) , 
4, 0.00528439, 1, 0, 0.956621,-0.00335111) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99559,-0.0236242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.32825,0.0297505) , 
2, 0.0234259, 1, 0, 0.762057,0.000443158) , 
0, 0.00169345, 1, 0, 0.850712,-0.00128574) , 
7, 2.18117e-05, 1, 0, 0.493996,-0.000277396)    );
  // itree = 876
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413037,-0.0079757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85519,0.0204064) , 
7, 1.89042e-05, 1, 0, 0.519083,4.99258e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684501,-0.00599695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730384,-0.0291638) , 
3, 33.3287, 1, 0, 0.707344,-0.00155121) , 
6, 0.0115966, 1, 0, 0.530931,-5.08469e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.400763,-0.0125924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.23612,0.00311422) , 
4, 0.00289379, 1, 0, 0.272351,-0.000225525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831707,-0.0203995) , 
7, 2.24982e-05, 1, 0, 0.382588,-0.00109347) , 
3, 87.6854, 1, 0, 0.504468,-0.000236846)    );
  // itree = 877
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98409,-0.0082938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970014,-0.0221509) , 
4, 0.00527015, 1, 0, 0.981483,-0.000862706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624571,-0.0134711) , 
0, 0.00221718, 1, 0, 0.962522,-0.00115171) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.01342) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130953) , 
6, 0.00868957, 1, 0, 0,-1.20265e-05) , 
2, 0.119026, 1, 0, 0,-9.01745e-05) , 
0, 0.00465677, 1, 0, 0.50313,-0.000645059)    );
  // itree = 878
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.408714,-0.00916865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854468,0.0195019) , 
7, 1.86408e-05, 1, 0, 0.517302,-8.47865e-07) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642352,0.00501982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707339,-0.0216344) , 
1, 1.07128, 1, 0, 0.670979,-0.00133378) , 
6, 0.0115965, 1, 0, 0.527472,-8.90574e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.427526,-0.0261187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2141,-0.0060123) , 
3, 134.238, 1, 0, 0.301243,-0.000966435) , 
3, 112.738, 1, 0, 0.506354,-0.000170958)    );
  // itree = 879
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973137,0.00136791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910597,-0.0109699) , 
2, 0.0109689, 1, 0, 0.961986,-0.000130986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800251,-0.0201801) , 
2, 0.0192697, 1, 0, 0.953162,-0.000524489) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0015847,0.00632852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00808507,-0.0116386) , 
3, 87.525, 1, 0, 0.00315496,-5.71032e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508428,-0.00138369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448492,0.0451063) , 
1, 1.12568, 1, 0, 0.479492,0.00183714) , 
7, 2.1808e-05, 1, 0, 0.0559104,0.000152689) , 
2, 0.0238052, 1, 0, 0.494496,-0.000178323)    );
  // itree = 880
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.325512,0.0128249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578389,-0.006367) , 
6, 0.00621212, 1, 0, 0.419489,-1.66719e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.220564,-0.0114688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64069,-0.0261292) , 
1, 1.38628, 1, 0, 0.29945,-0.000453807) , 
6, 0.0086962, 1, 0, 0.397243,-9.76824e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987136,-0.021726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997943,0.0879851) , 
5, 0.00506364, 1, 0, 0.994856,-0.000346927) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.493578,0.00210468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417994,-0.0138581) , 
1, 1.12519, 1, 0, 0.455664,-0.00277439) , 
2, 0.0236898, 1, 0, 0.843539,-0.00102816) , 
7, 2.18118e-05, 1, 0, 0.493514,-0.000298398)    );
  // itree = 881
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964126,-0.00975469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959065,-0.0225946) , 
4, 0.00432001, 1, 0, 0.963462,-0.000822511) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130968) , 
2, 0.119161, 1, 0, 0,-5.21405e-05) , 
0, 0.00467007, 1, 0, 0.402298,-0.000373813) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994063,0.0357831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387217,-0.00834017) , 
2, 0.0237855, 1, 0, 0.848737,-0.000504822) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784849,-0.0123936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848945,-0.0244534) , 
7, 2.73644e-05, 1, 0, 0.821145,-0.00500233) , 
3, 63.0066, 1, 0, 0.83974,-0.00197141) , 
7, 2.13904e-05, 1, 0, 0.501929,-0.000737678)    );
  // itree = 882
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997033,0.0517459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986758,-0.0182135) , 
3, 95.0512, 1, 0, 0.995998,-0.000108134) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876247,-0.0103821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876565,-0.0171963) , 
7, 2.62962e-05, 1, 0, 0.87633,-0.00170829) , 
0, 0.000443807, 1, 0, 0.934399,-0.000931818) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133174) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130941) , 
6, 0.00811658, 1, 0, 0,-8.31633e-06) , 
2, 0.119065, 1, 0, 0,-6.25125e-05) , 
0, 0.00934014, 1, 0, 0.493731,-0.000521849)    );
  // itree = 883
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70628,-0.0110137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.61063e-05,0.00732497) , 
2, 0.0475551, 1, 0, 0.199621,-9.58129e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838796,-0.00906193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80002,0.0327045) , 
3, 23.8538, 1, 0, 0.812349,0.000258251) , 
7, 7.81772e-06, 1, 0, 0.405359,2.30727e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886789,-0.00185329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85283,-0.0183447) , 
3, 41.7032, 1, 0, 0.869629,-0.00132866) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832066,-0.0057605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82401,0.0695542) , 
3, 24.3949, 1, 0, 0.826311,0.000488285) , 
6, 0.0111182, 1, 0, 0.851668,-0.000575306) , 
7, 2.20855e-05, 1, 0, 0.500627,-0.000104656)    );
  // itree = 884
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678163,-0.00789341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258236,0.00662326) , 
5, 0.00416034, 1, 0, 0.460135,-7.68139e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608535,0.00461034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608012,-0.0248073) , 
1, 1.20859, 1, 0, 0.608386,-0.000868885) , 
6, 0.00993932, 1, 0, 0.486892,-0.000219771) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606415,0.12702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670285,0.0128853) , 
1, 1.06243, 1, 0, 0.644387,0.00106717) , 
6, 0.0115965, 1, 0, 0.497263,-0.000135024)    );
  // itree = 885
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972195,-0.00322475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917642,-0.0187583) , 
2, 0.0120443, 1, 0, 0.967037,-0.000254998) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688512,-0.0221386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720674,-0.0103163) , 
3, 49.7448, 1, 0, 0.705469,-0.00372092) , 
2, 0.0158526, 1, 0, 0.914974,-0.000944863) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00421549,0.00634869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130947) , 
3, 75.4555, 1, 0, 0,-7.73403e-06) , 
0, 0.0280548, 1, 0, 0.000895619,7.94223e-05) , 
2, 0.0476074, 1, 0, 0.497904,-0.000477508)    );
  // itree = 886
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641969,-0.0103328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768538,-0.0233067) , 
5, 0.0040262, 1, 0, 0.653217,-0.000671811) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780505,0.0542769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167369,-0.00734589) , 
5, 0.00508407, 1, 0, 0.347704,5.89974e-05) , 
5, 0.0042284, 1, 0, 0.486122,-0.000272109) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648865,-0.0209648) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648543,-0.0348084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592898,0.00236495) , 
5, 0.00574544, 1, 0, 0.612103,-0.00226597) , 
3, 23.972, 1, 0, 0.621902,-0.00349132) , 
6, 0.0110169, 1, 0, 0.502968,-0.000671505)    );
  // itree = 887
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605812,-0.0117424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357126,0.00476499) , 
5, 0.00280904, 1, 0, 0.421635,-7.44614e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.219437,-0.0119566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608852,-0.0230991) , 
1, 1.38594, 1, 0, 0.294307,-0.00046161) , 
6, 0.0086974, 1, 0, 0.397413,-0.000148109) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.808349,0.0430685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863251,-0.0172848) , 
1, 1.16706, 1, 0, 0.836078,-0.00107545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83835,-0.030053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.841038,-0.0140342) , 
3, 78.3943, 1, 0, 0.839655,-0.00450442) , 
3, 48.7764, 1, 0, 0.837641,-0.00257298) , 
7, 2.18118e-05, 1, 0, 0.493331,-0.000676447)    );
  // itree = 888
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481085,0.0125087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418739,-0.0135209) , 
3, 32.3219, 1, 0, 0.450195,-0.000135068) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978051,0.0239849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131324) , 
0, 0.00466298, 1, 0, 0.293134,0.000180443) , 
3, 75.418, 1, 0, 0.411078,-5.64876e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634481,-0.0118122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956153,0.0162076) , 
4, 0.00483362, 1, 0, 0.834126,8.4099e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875195,-0.0223023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897825,0.0601966) , 
3, 75.6004, 1, 0, 0.880604,-0.00327883) , 
4, 0.0052343, 1, 0, 0.861498,-0.00192755) , 
7, 2.18118e-05, 1, 0, 0.509497,-0.000465328)    );
  // itree = 889
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638151,0.0405391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391814,-0.00483688) , 
6, 0.00291655, 1, 0, 0.463978,7.69108e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721639,-0.0155704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639965,-0.0164178) , 
3, 50.3964, 1, 0, 0.691503,-0.00145162) , 
5, 0.00209272, 1, 0, 0.59489,-0.000802568) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.479296,-0.0193359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421108,4.06527e-05) , 
3, 12.5324, 1, 0, 0.430062,-0.000118418) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643394,0.0419327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66571,0.00651183) , 
6, 0.0113507, 1, 0, 0.660173,0.000681346) , 
6, 0.0110168, 1, 0, 0.466399,7.87236e-06) , 
5, 0.00337964, 1, 0, 0.501365,-0.000212673)    );
  // itree = 890
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283753,-0.00628991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539454,0.0274614) , 
6, 0.0051531, 1, 0, 0.395411,3.11359e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625749,-0.00424244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581419,-0.0311353) , 
1, 1.5424, 1, 0, 0.622852,-0.000326848) , 
6, 0.00772969, 1, 0, 0.491494,-0.000120094) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587968,-0.0175938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668448,0.0122276) , 
1, 1.06021, 1, 0, 0.638309,-0.0010821) , 
6, 0.0115963, 1, 0, 0.501521,-0.000185798)    );
  // itree = 891
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.460228,0.000313845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625418,-0.019073) , 
6, 0.00948892, 1, 0, 0.469763,-0.000102507) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572465,0.131559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673461,-0.00409017) , 
4, 0.00518149, 1, 0, 0.627809,0.000468822) , 
6, 0.00996706, 1, 0, 0.490122,-2.89094e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654003,0.0702255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626015,-0.00723706) , 
3, 24.6484, 1, 0, 0.640968,0.000317641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63144,-0.0289819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596868,-0.00814237) , 
3, 75.6223, 1, 0, 0.612422,-0.00277433) , 
3, 47.0478, 1, 0, 0.627528,-0.00113807) , 
6, 0.0110166, 1, 0, 0.507001,-0.000165155)    );
  // itree = 892
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.212648,0.025063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0915494,-0.0144102) , 
3, 87.9979, 1, 0, 0.186383,4.73414e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.858477,-0.000975169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658502,-0.0170427) , 
4, 0.00428987, 1, 0, 0.803818,-0.000264063) , 
7, 7.28003e-06, 1, 0, 0.407012,-9.13154e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782646,-0.0195726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872248,-0.0216234) , 
1, 1.1397, 1, 0, 0.835021,-0.00270285) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809306,0.00980502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909165,-0.0184308) , 
1, 1.19426, 1, 0, 0.846233,-0.000605369) , 
3, 24.3949, 1, 0, 0.842862,-0.0012359) , 
7, 2.18118e-05, 1, 0, 0.50307,-0.000343574)    );
  // itree = 893
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986498,-0.00934045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970823,-0.0163323) , 
0, 0.00180664, 1, 0, 0.98527,-0.000405994) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703869,-0.0175214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941064,-0.0148109) , 
7, 3.17467e-05, 1, 0, 0.819552,-0.00602792) , 
0, 0.00199697, 1, 0, 0.96253,-0.00117742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013346) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130957) , 
6, 0.00811195, 1, 0, 0,-1.18293e-05) , 
2, 0.119026, 1, 0, 0,-6.12645e-05) , 
0, 0.00466298, 1, 0, 0.505332,-0.00064725)    );
  // itree = 894
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.436769,-0.00187496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615744,0.0433107) , 
6, 0.00901482, 1, 0, 0.459237,1.6332e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628193,-0.0213464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607296,0.00507077) , 
6, 0.0103676, 1, 0, 0.615687,-0.000781163) , 
6, 0.00996741, 1, 0, 0.479412,-8.65131e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966784,0.0824069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992509,-0.0107143) , 
6, 0.011628, 1, 0, 0.979551,3.86886e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.285466,-0.0177724) , 
2, 0.0236584, 1, 0, 0.640058,-0.00231514) , 
6, 0.0110168, 1, 0, 0.498765,-0.000354993)    );
  // itree = 895
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53817,-0.0177539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541153,-0.00310629) , 
3, 4.33173, 1, 0, 0.540854,-0.000137866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516528,-0.0325964) , 
3, 45.4869, 1, 0, 0.538988,-0.000346179) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.364978,0.0123253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579189,-0.0114744) , 
6, 0.00891797, 1, 0, 0.391236,2.56427e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.733752,0.0870936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497232,-0.00704941) , 
5, 0.00565395, 1, 0, 0.613817,0.000766536) , 
6, 0.00985765, 1, 0, 0.446267,0.000208822) , 
3, 50.2768, 1, 0, 0.499022,-0.000106951)    );
  // itree = 896
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473018,0.00896446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864617,-0.0123224) , 
7, 9.45478e-06, 1, 0, 0.67786,-0.000356882) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840677,0.0109123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831854,-0.0271078) , 
3, 40.8383, 1, 0, 0.836203,-0.00339651) , 
7, 2.6942e-05, 1, 0, 0.691027,-0.000609635) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921181,0.0602529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974389,-0.00523004) , 
7, 3.44467e-05, 1, 0, 0.94386,0.00105256) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130938) , 
2, 0.166901, 1, 0, 0,-3.03184e-05) , 
0, 0.00932596, 1, 0, 0.187603,0.000184917) , 
5, 0.00556888, 1, 0, 0.501861,-0.000311075)    );
  // itree = 897
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9973,0.0275984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973193,-0.0131188) , 
0, 0.000422609, 1, 0, 0.985839,-0.000481164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631892,-0.0222336) , 
0, 0.00221886, 1, 0, 0.966325,-0.00108523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132673) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130971) , 
6, 0.00869124, 1, 0, 0,-1.18681e-05) , 
2, 0.119019, 1, 0, 0,-4.98081e-05) , 
0, 0.00466574, 1, 0, 0.497706,-0.000583104)    );
  // itree = 898
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253725,-0.0106299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117158,0.0543955) , 
6, 0.00463162, 1, 0, 0.189719,1.11901e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783993,-0.0168299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794866,0.00118167) , 
7, 1.01776e-05, 1, 0, 0.792654,-0.000222893) , 
7, 7.42022e-06, 1, 0, 0.40299,-7.161e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877837,0.0579136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87269,-0.00711966) , 
3, 12.9825, 1, 0, 0.874296,0.000268738) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832524,-0.0286848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81549,-0.00477965) , 
3, 73.0094, 1, 0, 0.823364,-0.00333043) , 
3, 45.4324, 1, 0, 0.84955,-0.00147994) , 
7, 2.1881e-05, 1, 0, 0.499826,-0.000377007)    );
  // itree = 899
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.486821,-0.00773098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659976,-0.0122867) , 
6, 0.00996741, 1, 0, 0.50868,-0.000283828) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.17563,0.0163018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.363066,0.114402) , 
6, 0.00787889, 1, 0, 0.24463,0.000614442) , 
3, 113.125, 1, 0, 0.482759,-0.000195647) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650239,0.0150985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642678,-0.0211512) , 
1, 1.08194, 1, 0, 0.64738,-0.000460947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571999,-0.03245) , 
1, 1.10993, 1, 0, 0.626052,-0.00276391) , 
6, 0.0110168, 1, 0, 0.499802,-0.000501116)    );
  // itree = 900
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988649,-0.00191416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.820872,-0.0155802) , 
0, 0.00154843, 1, 0, 0.961296,-0.000655107) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130943) , 
2, 0.119026, 1, 0, 0,-4.66861e-05) , 
0, 0.00466298, 1, 0, 0.40415,-0.000302479) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850132,-0.00945192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801231,0.0491347) , 
7, 2.28871e-05, 1, 0, 0.816322,8.09383e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87827,-0.0197612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860318,0.00726533) , 
6, 0.0113813, 1, 0, 0.86974,-0.00255134) , 
7, 2.66183e-05, 1, 0, 0.849136,-0.00153607) , 
7, 2.13904e-05, 1, 0, 0.504249,-0.000579974)    );
  // itree = 901
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660099,-0.00786143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760291,-0.0182922) , 
7, 1.69956e-05, 1, 0, 0.670405,-0.000489031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948729,0.0484209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131329) , 
0, 0.00931374, 1, 0, 0.317864,0.000189789) , 
5, 0.00438084, 1, 0, 0.4857,-0.00013338) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669065,-0.00430202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627807,0.0833582) , 
3, 71.8891, 1, 0, 0.656667,0.000274838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593573,-0.0328877) , 
1, 1.10971, 1, 0, 0.638334,-0.0013825) , 
6, 0.0110166, 1, 0, 0.504605,-0.000288099)    );
  // itree = 902
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508544,-0.0236668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51263,-0.00180836) , 
3, 3.60878, 1, 0, 0.512381,-0.000117374) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.342308,0.00820433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577685,0.0918818) , 
6, 0.00996741, 1, 0, 0.371688,0.000332815) , 
3, 75.7064, 1, 0, 0.478375,-8.56031e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66849,-0.0241588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597807,0.00217566) , 
1, 1.11258, 1, 0, 0.637456,-0.00235259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633758,0.0199096) , 
6, 0.0117359, 1, 0, 0.635956,-0.00123183) , 
6, 0.0110168, 1, 0, 0.497555,-0.000157452)    );
  // itree = 903
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.467427,-0.00305163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69742,-0.0142234) , 
4, 0.00234702, 1, 0, 0.534952,-0.000357016) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.251148,-0.00458179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498396,0.0167468) , 
6, 0.00752983, 1, 0, 0.341469,6.02819e-05) , 
4, 0.00289998, 1, 0, 0.394324,-5.37149e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904705,-0.0105445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931893,-0.0216404) , 
7, 2.4769e-05, 1, 0, 0.915051,-0.00283125) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991527,0.00412108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481697,0.0105016) , 
2, 0.0236584, 1, 0, 0.816425,0.000475562) , 
6, 0.0103654, 1, 0, 0.851501,-0.000700498) , 
7, 2.13904e-05, 1, 0, 0.495859,-0.000197359)    );
  // itree = 904
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991821,-0.00885382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874665,-0.0114501) , 
0, 0.0015279, 1, 0, 0.972359,-0.000559029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130994) , 
2, 0.119026, 1, 0, 0,-4.43736e-05) , 
0, 0.00467007, 1, 0, 0.394358,-0.000253101) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85213,-0.0303588) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867715,-0.0207345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831752,0.00443318) , 
4, 0.00548112, 1, 0, 0.85203,-0.00161736) , 
3, 11.7721, 1, 0, 0.852045,-0.0027595) , 
7, 2.13905e-05, 1, 0, 0.495148,-0.000805052)    );
  // itree = 905
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976497,0.00340833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956978,0.0923112) , 
2, 0.00914074, 1, 0, 0.974868,7.25112e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678065,-0.0157968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806265,-0.00936622) , 
5, 0.00449154, 1, 0, 0.774428,-0.00222196) , 
2, 0.0113351, 1, 0, 0.91567,-0.000605136) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00108514,-0.0119219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130922) , 
0, 0.0466281, 1, 0, 0.000320173,-0.000115898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00143942,0.0104289) , 
6, 0.00869812, 1, 0, 0.000622881,-6.08405e-06) , 
2, 0.0476103, 1, 0, 0.504569,-0.000336001)    );
  // itree = 906
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838742,0.00744241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2649,-0.0161406) , 
4, 0.00258346, 1, 0, 0.597167,-0.000279012) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632265,0.0388651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014013) , 
4, 0.0040591, 1, 0, 0.30911,8.42894e-05) , 
5, 0.00282237, 1, 0, 0.392464,-2.08382e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982951,0.00537026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176077,-0.00924825) , 
2, 0.0237746, 1, 0, 0.636661,-0.000452674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604727,-0.0195916) , 
1, 1.47232, 1, 0, 0.634526,-0.000742497) , 
6, 0.00811938, 1, 0, 0.492242,-0.000318306)    );
  // itree = 907
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.463257,0.00162765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652656,-0.0185535) , 
5, 0.00206802, 1, 0, 0.499108,-0.000544955) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611229,0.0206816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138225) , 
2, 0.19036, 1, 0, 0.376642,0.000105057) , 
5, 0.00228682, 1, 0, 0.397461,-5.44594e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989931,-0.0190025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991905,0.0226856) , 
2, 0.00338309, 1, 0, 0.991488,-6.00526e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.397204,-0.00753608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525068,-0.016487) , 
6, 0.0113418, 1, 0, 0.451115,-0.00623956) , 
2, 0.0237202, 1, 0, 0.837995,-0.00181535) , 
7, 2.13905e-05, 1, 0, 0.496387,-0.000411874)    );
  // itree = 908
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600762,-0.00227906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735745,-0.013717) , 
4, 0.00353129, 1, 0, 0.651425,-0.000325841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84495,0.0225658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000250476,-0.00853834) , 
2, 0.0475551, 1, 0, 0.324174,0.000132166) , 
4, 0.00463582, 1, 0, 0.493315,-0.000104557) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638711,-0.00509141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704263,-0.0190519) , 
1, 1.0735, 1, 0, 0.664882,-0.00282315) , 
6, 0.0115964, 1, 0, 0.504736,-0.000285521)    );
  // itree = 909
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975878,0.0283388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131139) , 
0, 0.00466574, 1, 0, 0.203096,5.4228e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801282,-0.0221785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801037,0.00414249) , 
7, 1.00406e-05, 1, 0, 0.801074,-0.000304577) , 
7, 8.01375e-06, 1, 0, 0.403965,-6.62996e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958437,-0.0303059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968065,-0.0152031) , 
5, 0.00520519, 1, 0, 0.964679,-0.00364032) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98018,-0.00897072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.312362,0.0449581) , 
2, 0.0236991, 1, 0, 0.737777,0.000408424) , 
0, 0.001653, 1, 0, 0.83844,-0.00138776) , 
7, 2.21849e-05, 1, 0, 0.495864,-0.000345812)    );
  // itree = 910
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999083,0.0108362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965256,-0.00888529) , 
0, 0.00010565, 1, 0, 0.982603,-0.000406558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657493,-0.00899855) , 
0, 0.00221886, 1, 0, 0.966082,-0.000576295) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131022) , 
2, 0.110992, 1, 0, 0,-4.44694e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00010836,0.0755153) , 
2, 0.333252, 1, 0, 3.61659e-05,1.12458e-06) , 
0, 0.00466573, 1, 0, 0.500728,-0.000298146)    );
  // itree = 911
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968448,0.0164918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133414) , 
0, 0.00466574, 1, 0, 0.52087,0.000162851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.342931,-0.0100027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5788,-0.0246982) , 
6, 0.0104859, 1, 0, 0.369784,-0.000664924) , 
3, 75.5997, 1, 0, 0.483885,-3.97808e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669883,0.031106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636607,-0.0204727) , 
6, 0.0119552, 1, 0, 0.6573,-0.00136393) , 
6, 0.0115963, 1, 0, 0.495321,-0.000127101)    );
  // itree = 912
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705952,-0.000363385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509179,0.100618) , 
6, 0.00468963, 1, 0, 0.614696,0.000348489) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73431,-0.0211771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316798,0.0155349) , 
4, 0.00378319, 1, 0, 0.406689,-0.000276109) , 
4, 0.00289993, 1, 0, 0.457963,-0.000122145) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615839,-0.0197804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634507,-0.0118387) , 
1, 1.16044, 1, 0, 0.628407,-0.00196714) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602373,0.0306912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664492,-0.00674898) , 
3, 24.3949, 1, 0, 0.64553,-3.7254e-05) , 
6, 0.0114035, 1, 0, 0.634244,-0.00130933) , 
6, 0.00985775, 1, 0, 0.500869,-0.000411104)    );
  // itree = 913
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.49863,0.0055734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.694212,-0.0203329) , 
4, 0.00234692, 1, 0, 0.55864,-0.000460753) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854298,0.039415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000366123,-0.00697979) , 
2, 0.04759, 1, 0, 0.357735,9.22663e-05) , 
4, 0.0028995, 1, 0, 0.411315,-5.52198e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0876023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965971,-0.0502123) , 
0, 0.00212153, 1, 0, 0.993276,-0.000396978) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.42477,-0.0122823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459429,-0.00827169) , 
6, 0.011116, 1, 0, 0.444423,-0.0026716) , 
2, 0.0237746, 1, 0, 0.828514,-0.00107981) , 
7, 2.19618e-05, 1, 0, 0.503388,-0.00028134)    );
  // itree = 914
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972866,0.0245069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793525,0.0590128) , 
2, 0.00902158, 1, 0, 0.938168,0.000285572) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0100553,-0.00895764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130954) , 
0, 0.0326911, 1, 0, 0.00203511,-9.56646e-05) , 
2, 0.0238052, 1, 0, 0.398242,6.56892e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844417,-0.0208227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923671,0.013358) , 
5, 0.00525882, 1, 0, 0.865729,-0.00129126) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559689,-0.0437394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977711,0.0043863) , 
4, 0.00573653, 1, 0, 0.800061,-0.00451822) , 
5, 0.00556275, 1, 0, 0.839447,-0.00258276) , 
7, 2.13905e-05, 1, 0, 0.496529,-0.000524304)    );
  // itree = 915
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701398,-0.0064317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62393,-0.0137408) , 
3, 49.703, 1, 0, 0.670877,-0.000373793) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.698777,-0.0225017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969867,-0.00705802) , 
5, 0.00523143, 1, 0, 0.869969,-0.00326511) , 
7, 2.59796e-05, 1, 0, 0.693661,-0.000704688) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968044,-0.00651483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915656,0.0354972) , 
0, 0.00133143, 1, 0, 0.940618,0.000949057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130984) , 
2, 0.166636, 1, 0, 0,-4.90411e-05) , 
0, 0.00934015, 1, 0, 0.187384,0.000149794) , 
5, 0.00558249, 1, 0, 0.504145,-0.000384827)    );
  // itree = 916
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.469432,-0.0111788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685822,-0.0208533) , 
4, 0.00234702, 1, 0, 0.532886,-0.000633051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0160022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850502,0.0300056) , 
7, 7.57337e-06, 1, 0, 0.352631,6.1494e-05) , 
4, 0.0028995, 1, 0, 0.401079,-0.000125181) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881074,-0.0248679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801271,0.0225224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879908,-0.0120945) , 
1, 1.15184, 1, 0, 0.842002,-0.000404688) , 
3, 11.7721, 1, 0, 0.847753,-0.00133595) , 
7, 2.19617e-05, 1, 0, 0.496863,-0.000384817)    );
  // itree = 917
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952861,-0.007458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969397,0.0245583) , 
3, 49.6004, 1, 0, 0.958471,0.000158574) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130932) , 
2, 0.142846, 1, 0, 0,-2.50474e-05) , 
0, 0.00466574, 1, 0, 0.153563,4.37188e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915355,-0.0249706) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845101,-0.0157737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756667,0.00469895) , 
5, 0.00520392, 1, 0, 0.817749,-0.000606842) , 
6, 0.00548691, 1, 0, 0.822572,-0.00109384) , 
7, 5.71736e-06, 1, 0, 0.500852,-0.00056572)    );
  // itree = 918
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906511,0.0293596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132454) , 
2, 0.0237485, 1, 0, 0.331369,-3.41963e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799479,-0.0156865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929138,-0.0229687) , 
1, 2.3492, 1, 0, 0.815369,-0.000859989) , 
7, 4.4193e-06, 1, 0, 0.652277,-0.000581724) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842585,0.0191321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00016967,-0.0127264) , 
2, 0.04759, 1, 0, 0.317203,5.72864e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.725814,0.0735531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664559,-0.0180637) , 
6, 0.0119278, 1, 0, 0.698828,-0.000817305) , 
6, 0.0115967, 1, 0, 0.359659,-4.00108e-05) , 
5, 0.00457024, 1, 0, 0.492489,-0.000285914)    );
  // itree = 919
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978039,-0.000191661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915015,-0.0202738) , 
2, 0.0109515, 1, 0, 0.966846,-0.0005103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80059,-0.026) , 
2, 0.0191709, 1, 0, 0.95787,-0.000982522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65774,0.00695394) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0170579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.97617e-05,0.0483611) , 
2, 0.137248, 1, 0, 3.73033e-05,-5.7782e-05) , 
0, 0.00467007, 1, 0, 0.0573762,0.000104799) , 
2, 0.0238037, 1, 0, 0.499788,-0.000429401)    );
  // itree = 920
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.468833,-0.0144037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416993,0.0132981) , 
3, 28.7306, 1, 0, 0.440441,-1.69655e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956378,-0.0124653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130998) , 
0, 0.00467009, 1, 0, 0.278432,-0.000447005) , 
3, 75.4178, 1, 0, 0.399506,-0.000125625) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.860554,0.0830092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789164,-0.0110168) , 
3, 32.2754, 1, 0, 0.815748,-0.00057365) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871778,-0.0260099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848805,-0.0153593) , 
6, 0.0111582, 1, 0, 0.859072,-0.00328065) , 
7, 2.61697e-05, 1, 0, 0.845375,-0.00242486) , 
7, 2.18117e-05, 1, 0, 0.495795,-0.000622166)    );
  // itree = 921
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960191,0.0407378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982036,-0.0129376) , 
6, 0.00639021, 1, 0, 0.973165,-5.20841e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891347,-0.0243809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898936,0.0685426) , 
3, 61.0232, 1, 0, 0.89394,-0.00330431) , 
2, 0.00906808, 1, 0, 0.950804,-0.000970019) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.321265,-0.00641809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013118) , 
0, 0.00932596, 1, 0, 0.0267516,-0.000179136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293768,0.0198029) , 
6, 0.0110168, 1, 0, 0.0589102,-5.11424e-05) , 
2, 0.0238052, 1, 0, 0.500957,-0.000506563)    );
  // itree = 922
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986669,-0.00805533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896532,0.0467753) , 
0, 0.000653397, 1, 0, 0.956869,0.0004339) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130926) , 
2, 0.143005, 1, 0, 0,-2.56779e-05) , 
0, 0.0046603, 1, 0, 0.153829,4.8205e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702185,-0.0225123) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794017,-0.000510059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838833,-0.0140925) , 
4, 0.00422382, 1, 0, 0.819945,-0.000765899) , 
7, 7.21136e-06, 1, 0, 0.813996,-0.00100926) , 
7, 5.71741e-06, 1, 0, 0.499104,-0.000504863)    );
  // itree = 923
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.471161,-0.00536487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726352,-0.0172107) , 
7, 5.05003e-06, 1, 0, 0.588785,-0.00115967) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769103,-0.00751965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211057,0.00426365) , 
5, 0.00512578, 1, 0, 0.45099,-8.85774e-05) , 
5, 0.00326233, 1, 0, 0.48711,-0.000369337) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645327,-0.0210542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614079,-0.0339693) , 
6, 0.0119553, 1, 0, 0.633254,-0.00446879) , 
6, 0.0115964, 1, 0, 0.496889,-0.000643665)    );
  // itree = 924
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952668,0.0368665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79246,-0.00248992) , 
4, 0.00172935, 1, 0, 0.840023,7.1357e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013094) , 
4, 0.0040591, 1, 0, 0,-3.33101e-05) , 
2, 0.0237906, 1, 0, 0.171623,-1.19258e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.827571,0.011351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821496,-0.0150682) , 
3, 19.2009, 1, 0, 0.823202,-0.000888719) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636697,-0.00261821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837294,-0.0187346) , 
7, 2.11595e-05, 1, 0, 0.737371,-0.00353175) , 
3, 100.792, 1, 0, 0.814522,-0.00115602) , 
7, 6.69824e-06, 1, 0, 0.491366,-0.000580936)    );
  // itree = 925
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.489916,0.0189411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364126,-0.00917987) , 
3, 50.2798, 1, 0, 0.435611,-6.11541e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225273,-0.0121773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668355,-0.0265978) , 
1, 1.38685, 1, 0, 0.306079,-0.000916042) , 
6, 0.00869213, 1, 0, 0.411927,-0.000217466) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996408,-0.00794481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976387,-0.0208822) , 
2, 0.0168283, 1, 0, 0.992688,-0.000737525) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.412037,-0.0104743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559242,-0.0213665) , 
4, 0.00558993, 1, 0, 0.480172,-0.00520586) , 
2, 0.0236511, 1, 0, 0.853526,-0.0019508) , 
7, 2.18118e-05, 1, 0, 0.508683,-0.000597248)    );
  // itree = 926
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.265633,-0.00526974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466751,0.0465987) , 
6, 0.00496653, 1, 0, 0.305142,3.65679e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.541769,-0.0163363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419713,0.000945405) , 
3, 49.6607, 1, 0, 0.488144,-0.000377503) , 
6, 0.00579347, 1, 0, 0.401358,-0.000181137) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998518,0.0168192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990703,-0.0350341) , 
4, 0.00526559, 1, 0, 0.994397,-0.00114019) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.430526,-0.00610953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513862,-0.0233907) , 
6, 0.0113414, 1, 0, 0.468976,-0.00496287) , 
2, 0.0237274, 1, 0, 0.8538,-0.0021631) , 
7, 2.13905e-05, 1, 0, 0.50212,-0.000622534)    );
  // itree = 927
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648912,-0.0142941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632452,0.0135653) , 
6, 0.00811658, 1, 0, 0.643643,-0.000264914) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996,0.0857508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530153,-0.0172937) , 
5, 0.00512825, 1, 0, 0.775024,-0.00160842) , 
7, 2.40628e-05, 1, 0, 0.655855,-0.000389788) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960644,0.0256426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131042) , 
0, 0.00466298, 1, 0, 0.201048,0.000175317) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781308,-0.00786578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75171,-0.00159706) , 
3, 46.4123, 1, 0, 0.766408,-0.000714925) , 
6, 0.0115967, 1, 0, 0.27936,5.20039e-05) , 
4, 0.00521563, 1, 0, 0.502331,-0.000209638)    );
  // itree = 928
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995538,0.0512218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969217,-0.013538) , 
0, 0.000422318, 1, 0, 0.983079,-0.000519571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6589,-0.023634) , 
0, 0.00221718, 1, 0, 0.965144,-0.00139231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132931) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000163708,0.0551897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013095) , 
0, 0.0403119, 1, 0, 4.57562e-05,3.30774e-05) , 
2, 0.119065, 1, 0, 3.52766e-05,-2.21689e-05) , 
0, 0.00466573, 1, 0, 0.495462,-0.000725516)    );
  // itree = 929
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524652,-0.00213174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477316,-0.0142475) , 
3, 53.9872, 1, 0, 0.519412,-0.000163855) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283262,0.00626537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84466,0.047184) , 
7, 1.873e-05, 1, 0, 0.406539,0.000295495) , 
3, 62.9953, 1, 0, 0.482218,-1.24896e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660277,-0.0244826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63143,0.0276625) , 
3, 35.3272, 1, 0, 0.643368,-0.00204978) , 
6, 0.0115963, 1, 0, 0.49283,-0.000146645)    );
  // itree = 930
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656346,-0.00883797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578682,0.0193646) , 
6, 0.00868415, 1, 0, 0.638292,-0.000131204) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987,0.0470064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584716,-0.0164777) , 
5, 0.00511952, 1, 0, 0.783608,-0.00221715) , 
7, 2.41597e-05, 1, 0, 0.651273,-0.00031755) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968933,0.0380291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133906) , 
0, 0.00466574, 1, 0, 0.306924,0.000360777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0922498,5.21096e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766683,-0.0152014) , 
6, 0.0110168, 1, 0, 0.241056,-0.00039117) , 
3, 62.6427, 1, 0, 0.281288,6.81159e-05) , 
4, 0.00521798, 1, 0, 0.503009,-0.000163002)    );
  // itree = 931
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956116,0.0162797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984791,0.000108026) , 
4, 0.00165888, 1, 0, 0.97365,8.58788e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130953) , 
2, 0.119107, 1, 0, 0,-3.36233e-05) , 
0, 0.00467008, 1, 0, 0.149023,-1.53329e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872796,-0.0164768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753949,0.0108319) , 
6, 0.00794526, 1, 0, 0.80877,-0.00042518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887973,-0.0179372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822366,0.00736291) , 
6, 0.0113813, 1, 0, 0.856313,-0.0014656) , 
7, 2.66161e-05, 1, 0, 0.821671,-0.000707493) , 
7, 5.71741e-06, 1, 0, 0.496865,-0.000373266)    );
  // itree = 932
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96292,-0.0112759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131075) , 
0, 0.00466299, 1, 0, 0.16874,-0.00010221) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813955,0.0352359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678782,-0.00627573) , 
3, 99.4144, 1, 0, 0.801687,0.000299598) , 
7, 6.4575e-06, 1, 0, 0.397302,4.28855e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981477,0.0653828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746315,-0.0227742) , 
5, 0.00503878, 1, 0, 0.845198,-0.00266416) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.808691,-0.0100346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858506,0.0402146) , 
3, 47.0916, 1, 0, 0.831583,-0.000334021) , 
4, 0.00540027, 1, 0, 0.838698,-0.00155184) , 
7, 2.13904e-05, 1, 0, 0.496896,-0.000316939)    );
  // itree = 933
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974342,-0.00814865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822076,-0.0254988) , 
2, 0.0170027, 1, 0, 0.961778,-0.000813235) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0243015,-0.00514481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268071,0.026187) , 
6, 0.0110155, 1, 0, 0.0532757,7.44748e-05) , 
2, 0.0238052, 1, 0, 0.53388,-0.00039513) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485468,0.0260634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0934755,-0.0113507) , 
4, 0.00407195, 1, 0, 0.22713,3.86568e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494311,-0.0232895) , 
6, 0.00927921, 1, 0, 0.307643,-0.00223795) , 
3, 100.556, 1, 0, 0.502392,-0.000651617)    );
  // itree = 934
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.388448,0.00164863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825242,-0.0154522) , 
7, 5.46718e-06, 1, 0, 0.620177,-0.000334444) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957671,0.027003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131369) , 
0, 0.00466574, 1, 0, 0.198835,0.000107857) , 
4, 0.0040582, 1, 0, 0.403873,-0.000107381) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867935,-0.0171131) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817387,0.00170606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909719,-0.0182187) , 
1, 1.19425, 1, 0, 0.852807,-0.000795558) , 
3, 11.3672, 1, 0, 0.854937,-0.00123703) , 
7, 2.18117e-05, 1, 0, 0.500855,-0.000350262)    );
  // itree = 935
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646124,-0.00908204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.090508,0.00301222) , 
4, 0.00405739, 1, 0, 0.375706,-0.000123299) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88598,-0.00960111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706224,-0.0180458) , 
5, 0.00552166, 1, 0, 0.847602,-0.00105776) , 
7, 1.86653e-05, 1, 0, 0.48718,-0.000344041) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643119,-0.0249889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670284,-0.0228641) , 
3, 35.3272, 1, 0, 0.659345,-0.00505179) , 
6, 0.0115965, 1, 0, 0.498295,-0.000647971)    );
  // itree = 936
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971816,-0.00953237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48102,-0.0161719) , 
2, 0.0113233, 1, 0, 0.870521,-0.000851243) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00151927,0.00823598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131385) , 
2, 0.198405, 1, 0, 0.000525152,3.21206e-05) , 
2, 0.04759, 1, 0, 0.40057,-0.000374071) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999086,-0.0136997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963959,-0.0265754) , 
0, 0.00212154, 1, 0, 0.992556,-0.000863284) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499523,-0.0136767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476696,-0.0195914) , 
1, 1.13759, 1, 0, 0.489195,-0.00835733) , 
2, 0.0234311, 1, 0, 0.848923,-0.0030017) , 
7, 2.19618e-05, 1, 0, 0.496531,-0.000936462)    );
  // itree = 937
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.23177,-0.00413194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472975,0.0721274) , 
6, 0.00447206, 1, 0, 0.273916,3.24241e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.389732,-0.0133254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493918,-0.00865994) , 
6, 0.00555489, 1, 0, 0.487078,-0.000263699) , 
6, 0.00521779, 1, 0, 0.400999,-0.000144118) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0875647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976732,-0.0228831) , 
0, 0.00212153, 1, 0, 0.995507,-0.000511312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547325,-0.00941231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470451,-0.0104706) , 
1, 1.12414, 1, 0, 0.509657,-0.00332698) , 
2, 0.0237799, 1, 0, 0.865203,-0.00126647) , 
7, 2.20855e-05, 1, 0, 0.497086,-0.000376436)    );
  // itree = 938
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948127,-0.0125878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976593,0.000668872) , 
5, 0.00312424, 1, 0, 0.964193,-0.000444095) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130945) , 
2, 0.119021, 1, 0, 0,-3.4138e-05) , 
0, 0.00467007, 1, 0, 0.40439,-0.000206077) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844145,-0.020135) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.856749,-0.00267135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853751,-0.0188396) , 
3, 70.2699, 1, 0, 0.855803,-0.000991711) , 
3, 12.2144, 1, 0, 0.854003,-0.00168321) , 
7, 2.18118e-05, 1, 0, 0.500711,-0.000522524)    );
  // itree = 939
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.361941,-0.00840256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.193823,0.0339507) , 
3, 75.7062, 1, 0, 0.317451,-4.29126e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87611,0.0134671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862839,0.0889573) , 
6, 0.00998804, 1, 0, 0.873836,0.000431053) , 
7, 1.33478e-05, 1, 0, 0.469174,8.6335e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677367,-0.0179692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636573,0.0302199) , 
3, 34.0978, 1, 0, 0.65232,-0.00070266) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630533,-0.00593875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565712,-0.0286292) , 
3, 48.8049, 1, 0, 0.601539,-0.00352665) , 
1, 1.1115, 1, 0, 0.626409,-0.0021436) , 
6, 0.0104374, 1, 0, 0.497446,-0.000314626)    );
  // itree = 940
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980488,0.0172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925403,-0.0122049) , 
2, 0.00774275, 1, 0, 0.976436,9.84511e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.747254,-0.0196774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827488,-0.0143642) , 
5, 0.00449154, 1, 0, 0.804176,-0.0026868) , 
2, 0.00906808, 1, 0, 0.915035,-0.000951356) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00256332,0.037425) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130939) , 
0, 0.0467294, 1, 0, 0,-0.000154732) , 
2, 0.220064, 1, 0, 0.00100607,0.000104827) , 
2, 0.0476103, 1, 0, 0.506356,-0.000479117)    );
  // itree = 941
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.311162,0.00328544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558618,-0.0153675) , 
6, 0.00606659, 1, 0, 0.327916,-5.98807e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710652,0.0326416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136598) , 
2, 0.190326, 1, 0, 0.471279,0.000157813) , 
6, 0.00637084, 1, 0, 0.39318,3.92213e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99365,0.0796156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995264,-0.0254175) , 
5, 0.00539542, 1, 0, 0.994369,-0.000630311) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413627,-0.00637832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514166,-0.0168431) , 
6, 0.0113418, 1, 0, 0.457016,-0.00419427) , 
2, 0.0237202, 1, 0, 0.842838,-0.00163533) , 
7, 2.13905e-05, 1, 0, 0.493621,-0.000334827)    );
  // itree = 942
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990252,0.00756729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947127,0.0202472) , 
0, 0.000887546, 1, 0, 0.972452,0.000279172) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131018) , 
2, 0.118975, 1, 0, 0,-4.18916e-05) , 
0, 0.00467007, 1, 0, 0.396911,8.91524e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996405,-0.0117211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996334,0.0434001) , 
2, 0.011277, 1, 0, 0.996377,0.000147303) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474471,-0.0159721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49861,0.0179526) , 
5, 0.005715, 1, 0, 0.485184,-0.00376228) , 
2, 0.0236845, 1, 0, 0.854473,-0.000937974) , 
7, 2.18118e-05, 1, 0, 0.49671,-0.000134875)    );
  // itree = 943
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875911,-0.00720932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874288,-0.0155068) , 
6, 0.00828937, 1, 0, 0.875588,-0.000457529) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131023) , 
2, 0.119053, 1, 0, 0,-3.1291e-05) , 
0, 0.0186803, 1, 0, 0.402883,-0.000227415) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.837351,-0.0267977) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848219,0.0141694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83461,-0.0171456) , 
3, 81.8714, 1, 0, 0.845031,-0.000481955) , 
3, 12.2042, 1, 0, 0.843806,-0.00147344) , 
7, 2.13905e-05, 1, 0, 0.503003,-0.000510349)    );
  // itree = 944
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.419587,-0.00495724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634115,0.0291254) , 
6, 0.00849298, 1, 0, 0.446956,-6.33833e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597283,0.0149259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634341,-0.0191644) , 
1, 1.20219, 1, 0, 0.614724,-0.000648287) , 
6, 0.00938682, 1, 0, 0.487088,-0.000159899) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605431,-0.00104669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685413,-0.022275) , 
1, 1.07351, 1, 0, 0.635326,-0.00284755) , 
6, 0.0115963, 1, 0, 0.497058,-0.000340672)    );
  // itree = 945
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.461693,-0.0117765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448812,0.0550231) , 
3, 30.6398, 1, 0, 0.459428,2.90225e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964998,-0.0104282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013124) , 
0, 0.00466298, 1, 0, 0.348491,-0.000258099) , 
3, 37.855, 1, 0, 0.397475,-0.000131322) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99501,0.0332657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370356,-0.00353304) , 
2, 0.0237819, 1, 0, 0.851008,-3.65005e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967735,-0.0299149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725254,-0.00805971) , 
0, 0.00155127, 1, 0, 0.827563,-0.00421582) , 
3, 60.9671, 1, 0, 0.843113,-0.0014439) , 
7, 2.13905e-05, 1, 0, 0.497313,-0.000425384)    );
  // itree = 946
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553476,0.0499933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533339,-0.00594143) , 
3, 6.00071, 1, 0, 0.538073,1.83553e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650811,-0.0112991) , 
6, 0.0110194, 1, 0, 0.551481,-0.000205675) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.493867,0.0205871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.373102,-0.0135837) , 
3, 58.2214, 1, 0, 0.4316,-0.000449067) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941716,0.0129178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131157) , 
0, 0.0093203, 1, 0, 0.480192,0.000234338) , 
5, 0.00225381, 1, 0, 0.473663,0.000142527) , 
3, 25.1997, 1, 0, 0.497216,3.71378e-05)    );
  // itree = 947
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984913,-0.009762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871831,-0.0119565) , 
0, 0.0015279, 1, 0, 0.965345,-0.000581945) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131001) , 
2, 0.119019, 1, 0, 0,-4.8192e-05) , 
0, 0.00466029, 1, 0, 0.404141,-0.000271647) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909667,-0.00198733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81548,-0.0353698) , 
4, 0.00527813, 1, 0, 0.880301,-0.00393114) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958615,-0.0187644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72323,0.0480567) , 
0, 0.00164365, 1, 0, 0.821644,-8.92113e-05) , 
6, 0.0111187, 1, 0, 0.856207,-0.00235299) , 
7, 2.20873e-05, 1, 0, 0.498944,-0.000708128)    );
  // itree = 948
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962375,-0.0128101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759359,-0.0308897) , 
2, 0.0181362, 1, 0, 0.949506,-0.000833104) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.353321,0.0438726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000210872,-0.00917041) , 
2, 0.0465916, 1, 0, 0.0263957,2.87646e-06) , 
2, 0.0238052, 1, 0, 0.484614,-0.000412092) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649316,0.00665442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637098,-0.0233223) , 
6, 0.0117359, 1, 0, 0.644493,-0.000854769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596706,-0.00537744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565975,-0.0266259) , 
1, 1.08182, 1, 0, 0.578869,-0.00411503) , 
3, 48.7984, 1, 0, 0.612682,-0.00243515) , 
6, 0.0110172, 1, 0, 0.500661,-0.000665573)    );
  // itree = 949
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669316,-0.0121834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2378,0.0212718) , 
4, 0.00347912, 1, 0, 0.418414,-0.000117122) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676812,-0.029978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622051,-0.0133341) , 
3, 12.5046, 1, 0, 0.630772,-0.00132496) , 
6, 0.00844764, 1, 0, 0.472003,-0.000421924) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594988,0.0926348) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636717,-0.00862045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626704,0.0295619) , 
3, 48.6092, 1, 0, 0.631299,0.000153806) , 
3, 12.6113, 1, 0, 0.625382,0.000443701) , 
6, 0.0104369, 1, 0, 0.500134,-0.000263161)    );
  // itree = 950
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91949,0.0110119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000236125,-0.00563591) , 
2, 0.0476074, 1, 0, 0.511631,9.96063e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248572,-0.00120133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490553,-0.01095) , 
6, 0.00937552, 1, 0, 0.307028,-0.000340782) , 
3, 100.938, 1, 0, 0.48542,4.31891e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637916,-0.0179249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646163,0.0441319) , 
3, 35.3125, 1, 0, 0.642664,-0.00176297) , 
6, 0.0115964, 1, 0, 0.496067,-7.91095e-05)    );
  // itree = 951
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544538,-0.00504894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611278,-0.030067) , 
3, 30.3799, 1, 0, 0.549776,-0.000434534) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52121,0.0153153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464626,-0.0122133) , 
3, 78.3708, 1, 0, 0.509688,0.000130278) , 
3, 33.5875, 1, 0, 0.528236,-0.000131049) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0724001,0.0125092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617027,-0.011199) , 
7, 7.27599e-06, 1, 0, 0.205496,-0.000228058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837201,-0.0180402) , 
7, 2.1808e-05, 1, 0, 0.321505,-0.000791738) , 
3, 100.788, 1, 0, 0.499897,-0.000221616)    );
  // itree = 952
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975588,0.0319642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982319,-0.0138114) , 
6, 0.0063995, 1, 0, 0.979597,-9.4995e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846252,-0.00267029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807925,-0.0183208) , 
3, 37.3241, 1, 0, 0.823025,-0.00229978) , 
2, 0.00902158, 1, 0, 0.92377,-0.00088112) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00183926,0.0235127) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130936) , 
0, 0.0420702, 1, 0, 0,-0.000113583) , 
2, 0.198578, 1, 0, 0.000605815,2.97971e-05) , 
2, 0.0476103, 1, 0, 0.501666,-0.000464615)    );
  // itree = 953
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.514989,0.00588318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723924,0.14359) , 
5, 0.0024496, 1, 0, 0.60923,0.000244261) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.398787,-0.016124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.225652,0.0244795) , 
4, 0.00406643, 1, 0, 0.288966,-0.000115596) , 
5, 0.00342916, 1, 0, 0.402332,1.17849e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937409,-0.0125236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869639,-0.0226333) , 
6, 0.00999149, 1, 0, 0.910803,-0.00336233) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962587,-0.0181929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727081,0.0284766) , 
0, 0.00166443, 1, 0, 0.828169,1.86099e-05) , 
6, 0.0103648, 1, 0, 0.85746,-0.00117984) , 
7, 2.13905e-05, 1, 0, 0.503642,-0.000253469)    );
  // itree = 954
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80745,-0.0120725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542803,0.0211197) , 
5, 0.00308618, 1, 0, 0.635905,-0.000115933) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.728298,-0.0262008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741247,-0.0101981) , 
4, 0.00465049, 1, 0, 0.738261,-0.00207013) , 
4, 0.00447259, 1, 0, 0.658928,-0.000555484) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887493,0.00327353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347628,0.0771634) , 
2, 0.0269368, 1, 0, 0.744835,0.00072859) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130919) , 
0, 0.0699949, 1, 0, 0,-0.000163555) , 
2, 0.0714111, 1, 0, 0.280564,0.000172497) , 
4, 0.00521798, 1, 0, 0.506484,-0.000262178)    );
  // itree = 955
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965699,-0.00796962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498259,-0.0134053) , 
2, 0.0169736, 1, 0, 0.874711,-0.000709188) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00108863,0.0415116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134498) , 
4, 0.00463834, 1, 0, 0.000381964,8.40107e-05) , 
2, 0.0713365, 1, 0, 0.493785,-0.000363609) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690723,-0.0229881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683168,-0.0228756) , 
3, 35.3567, 1, 0, 0.686208,-0.00337876) , 
6, 0.0115966, 1, 0, 0.506048,-0.000555756)    );
  // itree = 956
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997168,-0.0113705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97446,-0.0284856) , 
2, 0.0180432, 1, 0, 0.995671,-0.000571338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481378,-0.0137139) , 
2, 0.0237746, 1, 0, 0.938068,-0.00107681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130925) , 
4, 0.00405872, 1, 0, 0,-8.67516e-06) , 
2, 0.119072, 1, 0, 0,-4.23475e-05) , 
0, 0.00933147, 1, 0, 0.504164,-0.000598318)    );
  // itree = 957
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966789,-0.0192598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980463,0.00775761) , 
4, 0.00250212, 1, 0, 0.977543,-0.000145426) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990443,-0.0391564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822049,-0.00852984) , 
4, 0.00555404, 1, 0, 0.881637,-0.00224826) , 
4, 0.00522396, 1, 0, 0.957625,-0.000582155) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654423,0.006703) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013285) , 
6, 0.00927144, 1, 0, 0,-3.26464e-05) , 
0, 0.00466298, 1, 0, 0.0594957,0.000122885) , 
2, 0.0237943, 1, 0, 0.499055,-0.000222173)    );
  // itree = 958
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980715,-0.0162314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964554,0.0460202) , 
5, 0.00306671, 1, 0, 0.969642,-0.000150934) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.742255,-0.00375592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772763,-0.0188813) , 
3, 62.1494, 1, 0, 0.754893,-0.00181648) , 
2, 0.0135585, 1, 0, 0.918728,-0.000545814) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0018576,0.0115808) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136157) , 
7, -9.00638e-06, 1, 0, 0,-0.000145922) , 
2, 0.198476, 1, 0, 0.000656357,-2.29229e-05) , 
2, 0.0476103, 1, 0, 0.504684,-0.000309994)    );
  // itree = 959
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628017,-0.00986903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338596,0.00225848) , 
5, 0.00293139, 1, 0, 0.421209,-5.72582e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.171144,-0.0117615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666783,-0.0278935) , 
1, 1.38628, 1, 0, 0.268906,-0.000493438) , 
6, 0.0086962, 1, 0, 0.393638,-0.000136219) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996558,0.0361439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979335,-0.019903) , 
2, 0.0169176, 1, 0, 0.993591,-0.000184779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.365083,-0.00602505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517009,-0.0174445) , 
4, 0.00557235, 1, 0, 0.438409,-0.00357858) , 
2, 0.0237274, 1, 0, 0.834047,-0.00116006) , 
7, 2.13905e-05, 1, 0, 0.492496,-0.000366038)    );
  // itree = 960
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970891,0.00591733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420038,0.0289851) , 
2, 0.00335285, 1, 0, 0.813819,0.000141411) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130943) , 
4, 0.00406053, 1, 0, 0,-7.39488e-05) , 
2, 0.023795, 1, 0, 0.170547,-2.88171e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877503,-0.00498787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717761,0.095043) , 
5, 0.00549564, 1, 0, 0.843613,0.000182311) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986983,-0.0176459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282818,-0.0141227) , 
2, 0.0237281, 1, 0, 0.81258,-0.00150851) , 
3, 25.1969, 1, 0, 0.822636,-0.000960615) , 
7, 6.55993e-06, 1, 0, 0.497477,-0.000495982)    );
  // itree = 961
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.251648,-0.00772193) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954486,0.0499613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131036) , 
0, 0.00466015, 1, 0, 0.169891,3.4568e-05) , 
4, 0.00116064, 1, 0, 0.177355,5.71114e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841499,-0.0208921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82745,-0.0044114) , 
3, 4.79821, 1, 0, 0.828466,-0.000418115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750707,-0.012908) , 
3, 100.788, 1, 0, 0.82067,-0.000565815) , 
7, 6.85975e-06, 1, 0, 0.499519,-0.000280502)    );
  // itree = 962
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975133,-0.00911116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.886407,0.0659015) , 
2, 0.0125442, 1, 0, 0.961814,-4.50257e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723305,-0.0138847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542477,0.00143539) , 
5, 0.00556895, 1, 0, 0.624591,-0.00205111) , 
2, 0.0203541, 1, 0, 0.916121,-0.000316848) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130917) , 
0, 0.0560094, 1, 0, 0,-8.11598e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00247203,0.0186875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000698196,-0.00737934) , 
4, 0.00580471, 1, 0, 0.00148152,9.19184e-05) , 
3, 50.403, 1, 0, 0.000724972,3.53493e-06) , 
2, 0.0475576, 1, 0, 0.503782,-0.000172532)    );
  // itree = 963
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543692,0.016816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512538,0.140391) , 
3, 30.6059, 1, 0, 0.538108,0.000262605) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.50046,-0.0113214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389838,-2.69027e-05) , 
3, 59.4033, 1, 0, 0.428454,-0.000205891) , 
3, 37.8061, 1, 0, 0.477026,1.63178e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587233,-0.0322692) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787627,0.000604832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513867,-0.0232206) , 
1, 1.0817, 1, 0, 0.680645,-0.00216524) , 
4, 0.00574489, 1, 0, 0.641727,-0.00367589) , 
6, 0.0110166, 1, 0, 0.496619,-0.000435853)    );
  // itree = 964
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687923,-0.00473224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625858,-0.0133637) , 
3, 24.9888, 1, 0, 0.646427,-0.000429335) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964273,0.0300326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0157849) , 
0, 0.00466573, 1, 0, 0.317,0.000138484) , 
4, 0.00463815, 1, 0, 0.488893,-0.0001578) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587724,0.0312492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.697728,-0.021118) , 
1, 1.0735, 1, 0, 0.629581,-0.00106903) , 
6, 0.0115965, 1, 0, 0.498365,-0.000219151)    );
  // itree = 965
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994561,0.00992687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919277,0.0390325) , 
0, 0.000728793, 1, 0, 0.971228,0.000295981) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130925) , 
2, 0.118975, 1, 0, 0,-2.0961e-05) , 
0, 0.00465918, 1, 0, 0.17838,3.72501e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998774,-0.0179504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827833,0.0133505) , 
2, 0.0237746, 1, 0, 0.984807,-0.000226883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152549,-0.0159854) , 
0, 0.00222727, 1, 0, 0.817302,-0.000620016) , 
7, 6.85985e-06, 1, 0, 0.501383,-0.000295026)    );
  // itree = 966
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.540178,-0.0106545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432363,0.0108326) , 
4, 0.00288974, 1, 0, 0.464159,-2.88351e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832438,0.0866602) , 
7, 2.21847e-05, 1, 0, 0.543679,0.00029307) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0971763,-0.00770428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15888,0.0110529) , 
6, 0.00173245, 1, 0, 0.148149,7.52148e-08) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812838,-0.00882652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922639,-0.0158099) , 
7, 3.40784e-05, 1, 0, 0.821496,-0.00062241) , 
7, 5.71741e-06, 1, 0, 0.495067,-0.000320637) , 
3, 12.6014, 1, 0, 0.502659,-0.000224796)    );
  // itree = 967
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99585,0.00385809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99457,0.114182) , 
7, 2.64484e-05, 1, 0, 0.995534,0.000181896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950495,0.0163938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927167,-0.015321) , 
3, 24.9882, 1, 0, 0.934797,-0.00182278) , 
0, 0.000443436, 1, 0, 0.964856,-0.000830643) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131276) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000178871,0.110427) , 
3, 87.4932, 1, 0, 4.56453e-05,3.51097e-05) , 
2, 0.119072, 1, 0, 3.46517e-05,-6.74745e-06) , 
0, 0.00466573, 1, 0, 0.492078,-0.000426921)    );
  // itree = 968
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898756,-0.0172256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000361433,0.00816582) , 
2, 0.023795, 1, 0, 0.321724,-0.000127378) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870233,0.0066973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857216,0.0494503) , 
3, 23.6991, 1, 0, 0.861229,0.000441434) , 
7, 1.33478e-05, 1, 0, 0.473117,3.22388e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635562,0.00899973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598344,-0.0184913) , 
4, 0.00579073, 1, 0, 0.617596,-0.000960418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598453,-0.0206055) , 
1, 1.17082, 1, 0, 0.6142,-0.00159094) , 
6, 0.0104373, 1, 0, 0.498542,-0.000260282)    );
  // itree = 969
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170105,-0.00599963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877668,-0.0140982) , 
7, 4.58883e-06, 1, 0, 0.445477,-0.000357582) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972427,0.023953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0157697) , 
0, 0.00465202, 1, 0, 0.654786,0.000150894) , 
6, 0.00811799, 1, 0, 0.533859,-0.000142875) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.163517,-0.00142378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348945,0.0116711) , 
6, 0.00618863, 1, 0, 0.241904,2.35997e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558406,-0.0161881) , 
6, 0.00928213, 1, 0, 0.333779,-0.0010766) , 
3, 100.947, 1, 0, 0.507402,-0.000266343)    );
  // itree = 970
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.541796,-0.00139278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537547,-0.0187874) , 
3, 25.1365, 1, 0, 0.540468,-0.000372188) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944447,0.0192137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131138) , 
0, 0.00931353, 1, 0, 0.452198,0.000232316) , 
3, 37.7076, 1, 0, 0.491254,-3.51553e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631576,-0.00221947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719166,-0.0215208) , 
1, 1.07128, 1, 0, 0.667785,-0.00236087) , 
6, 0.0115963, 1, 0, 0.50259,-0.000184496)    );
  // itree = 971
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.277163,-0.0101771) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704161,0.0189011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.036887,-0.0127771) , 
4, 0.00221122, 1, 0, 0.141369,5.3902e-06) , 
4, 0.00116083, 1, 0, 0.152533,-2.81459e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821773,-0.0115887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868156,0.0330035) , 
7, 2.36308e-05, 1, 0, 0.837487,-2.71807e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76871,-0.0121426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836525,-0.0181026) , 
7, 2.21384e-05, 1, 0, 0.797104,-0.00177655) , 
3, 37.2482, 1, 0, 0.815745,-0.000969023) , 
7, 5.71728e-06, 1, 0, 0.49548,-0.000514673)    );
  // itree = 972
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.54619,-0.0123274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525674,0.018489) , 
3, 26.1922, 1, 0, 0.537224,1.01268e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673691,-0.0100713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000245076,0.0391439) , 
2, 0.166565, 1, 0, 0.424514,-0.000328209) , 
3, 50.003, 1, 0, 0.487803,-0.000138226) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667864,-0.0238166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63721,-0.0259129) , 
3, 43.8145, 1, 0, 0.652058,-0.002714) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.525309,-0.00061011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756382,0.0301825) , 
6, 0.0119029, 1, 0, 0.619467,0.000162407) , 
4, 0.00582462, 1, 0, 0.63562,-0.00126326) , 
6, 0.0110168, 1, 0, 0.506222,-0.000278411)    );
  // itree = 973
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981633,-0.0176205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986192,0.0306988) , 
3, 49.5792, 1, 0, 0.983407,-0.000426885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646538,-0.0176261) , 
0, 0.00221718, 1, 0, 0.965683,-0.000993039) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131055) , 
2, 0.111277, 1, 0, 0,-4.59521e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000107663,0.100258) , 
2, 0.333354, 1, 0, 3.5376e-05,3.75693e-07) , 
0, 0.00465917, 1, 0, 0.497084,-0.000510966)    );
  // itree = 974
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973524,-0.00918798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460177,-0.0144116) , 
2, 0.0112741, 1, 0, 0.801411,-0.000590892) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00063319,0.0266333) , 
3, 75.4872, 1, 0, 0.000196936,9.61785e-05) , 
2, 0.118975, 1, 0, 0.481473,-0.000316533) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66562,0.00824196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625448,-0.00906201) , 
1, 1.08815, 1, 0, 0.653867,-3.0323e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578179,-0.0247332) , 
1, 1.10994, 1, 0, 0.631667,-0.00283354) , 
6, 0.0110174, 1, 0, 0.499708,-0.000622128)    );
  // itree = 975
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669691,-0.0140269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485264,0.0565142) , 
6, 0.00505309, 1, 0, 0.59403,-0.000214589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618281,-0.0193532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551029,0.00280193) , 
3, 37.2723, 1, 0, 0.583528,-0.00132985) , 
7, 9.16965e-06, 1, 0, 0.591689,-0.000463245) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972323,0.00183319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744903,0.0107925) , 
2, 0.0101711, 1, 0, 0.867769,0.000268288) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000957532,-0.00704659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130962) , 
0, 0.0560615, 1, 0, 0.000301081,-0.000114208) , 
2, 0.0714111, 1, 0, 0.461685,8.9232e-05) , 
5, 0.00337573, 1, 0, 0.496642,-5.93256e-05)    );
  // itree = 976
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.44034,-0.00788851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387549,0.366308) , 
3, 75.4077, 1, 0, 0.43626,-1.55977e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.394726,-0.01679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203971,-0.00544348) , 
4, 0.00291802, 1, 0, 0.245045,-0.000609466) , 
3, 87.987, 1, 0, 0.401598,-0.000123249) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758392,0.00790502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943424,-0.0144823) , 
1, 1.24559, 1, 0, 0.838855,-0.000474722) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922179,-0.0325346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816202,-0.0134092) , 
4, 0.00549916, 1, 0, 0.839605,-0.00319026) , 
4, 0.005284, 1, 0, 0.839277,-0.00200363) , 
7, 2.19618e-05, 1, 0, 0.494102,-0.000520669)    );
  // itree = 977
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.555159,-0.0042037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612546,-0.0223638) , 
3, 26.9859, 1, 0, 0.559971,-0.000209791) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88036,0.0855657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138591) , 
2, 0.0713828, 1, 0, 0.516604,0.000318311) , 
3, 29.8264, 1, 0, 0.539887,3.47896e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.390726,0.0562193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.263634,-0.0114877) , 
3, 81.7321, 1, 0, 0.309916,-0.000101181) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75999,-0.00535182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910639,-0.0203732) , 
1, 1.19199, 1, 0, 0.814041,-0.00259425) , 
7, 2.19616e-05, 1, 0, 0.416374,-0.000627651) , 
3, 62.6348, 1, 0, 0.498702,-0.000186094)    );
  // itree = 978
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964291,0.0553218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131137) , 
0, 0.00466299, 1, 0, 0.186487,7.98235e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937769,-0.0174428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771208,-0.00444691) , 
6, 0.00636625, 1, 0, 0.801255,-0.000400485) , 
7, 7.28118e-06, 1, 0, 0.40556,-9.13351e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815915,-0.0254354) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.860316,-0.00207997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850079,-0.0168254) , 
5, 0.00535533, 1, 0, 0.855061,-0.00123176) , 
3, 12.6163, 1, 0, 0.848387,-0.00180985) , 
7, 2.18118e-05, 1, 0, 0.502028,-0.000465706)    );
  // itree = 979
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675404,-0.00779408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582769,-0.0142819) , 
6, 0.00989062, 1, 0, 0.664809,-0.000415376) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.11694,-0.00183423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703782,0.0491625) , 
6, 0.0110431, 1, 0, 0.195454,0.000114559) , 
4, 0.005218, 1, 0, 0.48843,-0.000216232) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593278,0.0441899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713847,-0.0189259) , 
1, 1.07128, 1, 0, 0.64186,-0.00113143) , 
6, 0.0115963, 1, 0, 0.498375,-0.00027555)    );
  // itree = 980
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865599,0.0334875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013224) , 
2, 0.0714155, 1, 0, 0.453233,0.000123468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523466,-0.0125428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24413,-0.00224097) , 
5, 0.0033786, 1, 0, 0.330331,-0.000411366) , 
3, 50.0032, 1, 0, 0.398254,-0.000115786) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845539,-0.0141429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828318,0.0184935) , 
1, 1.1172, 1, 0, 0.836001,-0.000222678) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879238,-0.0197947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946415,-0.0167604) , 
1, 1.28036, 1, 0, 0.912854,-0.00433986) , 
1, 1.23504, 1, 0, 0.854115,-0.00119308) , 
7, 2.18118e-05, 1, 0, 0.496443,-0.000347827)    );
  // itree = 981
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998927,-0.0157016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984848,-0.0268142) , 
0, 0.00200209, 1, 0, 0.997574,-0.000884731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679988,-0.0129187) , 
2, 0.0230655, 1, 0, 0.968686,-0.00138386) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130957) , 
2, 0.143027, 1, 0, 0,-5.60987e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000306701,0.0780144) , 
3, 86.4451, 1, 0, 7.40536e-05,2.06828e-05) , 
0, 0.00467007, 1, 0, 0.510636,-0.000719662)    );
  // itree = 982
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999082,-0.00796524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989073,-0.0213729) , 
2, 0.0111607, 1, 0, 0.997068,-0.000931393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634079,-0.0107785) , 
2, 0.0235276, 1, 0, 0.964622,-0.00133603) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131125) , 
2, 0.110995, 1, 0, 0,-6.59125e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000223612,0.120749) , 
2, 0.33315, 1, 0, 7.32969e-05,2.1633e-05) , 
0, 0.00466298, 1, 0, 0.503871,-0.000687495)    );
  // itree = 983
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969505,-0.00657954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960289,-0.0223847) , 
4, 0.0043494, 1, 0, 0.968278,-0.000651145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013097) , 
2, 0.119107, 1, 0, 0,-3.48165e-05) , 
0, 0.00467007, 1, 0, 0.400509,-0.000289749) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99221,-0.00749364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993517,0.0774284) , 
2, 0.0122128, 1, 0, 0.992654,4.2121e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.412578,-0.0106763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586189,-0.0169537) , 
3, 58.9771, 1, 0, 0.495089,-0.00514091) , 
2, 0.0234259, 1, 0, 0.853452,-0.00140792) , 
7, 2.18118e-05, 1, 0, 0.498361,-0.000531314)    );
  // itree = 984
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998976,-0.0154622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818306,-0.00756389) , 
2, 0.0225656, 1, 0, 0.985107,-0.000532021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684259,-0.0162966) , 
0, 0.00221543, 1, 0, 0.969112,-0.00101867) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130955) , 
2, 0.142899, 1, 0, 0,-4.5594e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000314382,0.061611) , 
3, 88.3667, 1, 0, 6.99934e-05,2.20651e-05) , 
0, 0.004655, 1, 0, 0.493618,-0.000507997)    );
  // itree = 985
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.217313,-0.0141595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110431,0.0108557) , 
3, 75.4297, 1, 0, 0.186451,-6.88105e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901194,0.0196372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641334,-0.010074) , 
4, 0.00416945, 1, 0, 0.861291,0.000187781) , 
7, 6.14031e-06, 1, 0, 0.425038,2.19066e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648381,0.0105632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610797,-0.0114789) , 
3, 50.4039, 1, 0, 0.631955,-0.00046685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69117,-0.0265533) , 
1, 1.3859, 1, 0, 0.636234,-0.000760943) , 
6, 0.0086986, 1, 0, 0.501329,-0.000260886)    );
  // itree = 986
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990405,-0.00718226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866052,-0.0125421) , 
0, 0.0015532, 1, 0, 0.969737,-0.000571813) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131081) , 
2, 0.1191, 1, 0, 0,-4.28694e-05) , 
0, 0.00467007, 1, 0, 0.40416,-0.000263318) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914817,-0.0179824) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823603,-0.00102787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923426,-0.0249095) , 
1, 1.20614, 1, 0, 0.839617,-0.000433481) , 
6, 0.010036, 1, 0, 0.855717,-0.00141829) , 
7, 2.18809e-05, 1, 0, 0.500241,-0.000509069)    );
  // itree = 987
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.835738,0.0154083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132269) , 
2, 0.0237943, 1, 0, 0.176982,-1.50103e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767225,-0.0133374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920489,0.0632746) , 
1, 1.93752, 1, 0, 0.798941,-0.000610159) , 
7, 6.4575e-06, 1, 0, 0.407686,-0.000235769) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811585,-0.0225371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891138,0.0346223) , 
5, 0.00514704, 1, 0, 0.860533,-3.4005e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839082,-0.0262958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854659,-0.00402146) , 
3, 68.5167, 1, 0, 0.848942,-0.00332945) , 
3, 48.7764, 1, 0, 0.855353,-0.00150661) , 
7, 2.13905e-05, 1, 0, 0.50921,-0.000523977)    );
  // itree = 988
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931043,0.0475616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760526,-0.00107087) , 
4, 0.00173014, 1, 0, 0.820698,0.000107551) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130941) , 
4, 0.00405941, 1, 0, 0,-3.34553e-05) , 
2, 0.023795, 1, 0, 0.152871,-7.18999e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.786453,0.00486254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798947,-0.00797048) , 
3, 63.0018, 1, 0, 0.790375,-7.4695e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990466,-0.00366758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362477,-0.025228) , 
0, 0.00154742, 1, 0, 0.864453,-0.00115527) , 
1, 1.46924, 1, 0, 0.820305,-0.000511292) , 
7, 5.71741e-06, 1, 0, 0.500138,-0.000269475)    );
  // itree = 989
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584474,-0.0250561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532467,0.00111835) , 
3, 3.56935, 1, 0, 0.535407,-5.15734e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466113,-0.0150987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452368,-0.0121694) , 
3, 80.3254, 1, 0, 0.455116,-0.00106524) , 
3, 74.9646, 1, 0, 0.521861,-0.000222585) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568879,0.0986128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106997,-0.00665892) , 
5, 0.00560014, 1, 0, 0.29163,0.000498264) , 
3, 112.5, 1, 0, 0.49843,-0.000149223)    );
  // itree = 990
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481897,-0.00840308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657159,0.0330934) , 
6, 0.00891781, 1, 0, 0.524242,-3.55631e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959768,-0.0134343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000100615,0.00706094) , 
0, 0.00466298, 1, 0, 0.388769,-0.000700176) , 
3, 62.846, 1, 0, 0.479665,-0.000254253) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984638,0.0869402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99616,-0.00766554) , 
6, 0.011628, 1, 0, 0.990399,0.000102166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284749,-0.0179963) , 
2, 0.0237892, 1, 0, 0.634982,-0.00202124) , 
6, 0.0110166, 1, 0, 0.498405,-0.000467452)    );
  // itree = 991
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574176,-0.013013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.339484,0.0146592) , 
4, 0.00231947, 1, 0, 0.390851,-5.56288e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648287,-0.0201073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577709,-0.00207451) , 
3, 37.8518, 1, 0, 0.608515,-0.0005491) , 
6, 0.0077317, 1, 0, 0.483789,-0.000237641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700524,-0.0264442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667808,0.0302899) , 
3, 35.9893, 1, 0, 0.681346,-0.00163363) , 
6, 0.0115965, 1, 0, 0.496712,-0.00032896)    );
  // itree = 992
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963966,-0.0159757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131119) , 
0, 0.00466574, 1, 0, 0.529098,-0.000536267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.409236,-7.32912e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599859,0.0102947) , 
6, 0.0099671, 1, 0, 0.4324,5.33214e-05) , 
3, 37.855, 1, 0, 0.475488,-0.000209395) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640108,-0.0190072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673721,-0.00609738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567027,-0.0248077) , 
1, 1.10965, 1, 0, 0.641541,-0.0013913) , 
3, 24.4195, 1, 0, 0.641129,-0.00243788) , 
6, 0.0110166, 1, 0, 0.495384,-0.000477072)    );
  // itree = 993
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99974,0.001617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98924,-0.0228903) , 
2, 0.0175781, 1, 0, 0.99903,-0.000269937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657399,-0.00762274) , 
2, 0.0231309, 1, 0, 0.966436,-0.000500452) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141635) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000325946,0.0862248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130948) , 
0, 0.0402366, 1, 0, 9.47904e-05,7.76377e-05) , 
2, 0.119026, 1, 0, 7.32079e-05,-1.57385e-05) , 
0, 0.00466015, 1, 0, 0.507944,-0.000270479)    );
  // itree = 994
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932595,0.0245105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000643674,-0.0128288) , 
2, 0.023795, 1, 0, 0.378351,-2.48254e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854541,-0.0238386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850051,-0.0100374) , 
7, 2.01056e-05, 1, 0, 0.850572,-0.00111461) , 
7, 1.8681e-05, 1, 0, 0.490199,-0.000282945) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69569,-0.0258381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646985,-0.0186951) , 
3, 47.0698, 1, 0, 0.671664,-0.00519116) , 
6, 0.0115966, 1, 0, 0.501565,-0.00059036)    );
  // itree = 995
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602852,0.00401121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879966,0.054586) , 
7, 1.56584e-05, 1, 0, 0.706102,0.000201401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619631,-0.00810642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868149,-0.0105254) , 
7, 2.13941e-05, 1, 0, 0.676521,-0.000383118) , 
3, 12.628, 1, 0, 0.681561,-0.000283518) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933052,0.00573787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945216,0.119376) , 
3, 56.8025, 1, 0, 0.937778,0.000768936) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131081) , 
6, 0.00811762, 1, 0, 0,-3.18439e-05) , 
0, 0.00934016, 1, 0, 0.17689,0.000119204) , 
5, 0.00560223, 1, 0, 0.494799,-0.000134484)    );
  // itree = 996
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.291111,0.00138053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869694,-0.0115685) , 
7, 1.1327e-05, 1, 0, 0.458061,-0.000124629) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624594,0.119721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595427,-1.86481e-05) , 
6, 0.0105672, 1, 0, 0.612862,0.000706191) , 
6, 0.00996716, 1, 0, 0.477835,-1.84997e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645168,0.00503083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60559,-0.0223424) , 
1, 1.11174, 1, 0, 0.631707,-0.0017115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633136,-0.0285026) , 
6, 0.0119562, 1, 0, 0.632002,-0.00260766) , 
6, 0.0110166, 1, 0, 0.496559,-0.000332964)    );
  // itree = 997
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964625,0.00988569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751027,-0.0185706) , 
2, 0.0124047, 1, 0, 0.941136,-0.000415805) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00049873,-0.00973657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0102023,0.0276989) , 
6, 0.00809463, 1, 0, 0.0031718,2.48276e-05) , 
2, 0.0238037, 1, 0, 0.413837,-0.000168093) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994457,0.0154645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987929,-0.0290347) , 
2, 0.0169155, 1, 0, 0.993238,-0.000357548) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.43221,-0.0161233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539158,-0.00844358) , 
5, 0.00561991, 1, 0, 0.485298,-0.00388267) , 
2, 0.0236845, 1, 0, 0.849641,-0.00135412) , 
7, 2.2045e-05, 1, 0, 0.508645,-0.000426108)    );
  // itree = 998
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931524,-0.00964593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903587,-0.0195431) , 
4, 0.00432299, 1, 0, 0.927822,-0.000701356) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131184) , 
2, 0.119021, 1, 0, 0,-4.09268e-05) , 
0, 0.00931834, 1, 0, 0.400173,-0.000325772) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817231,-0.028702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8507,-0.0138502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819488,0.0282511) , 
6, 0.0114796, 1, 0, 0.842242,-0.00116543) , 
3, 12.6163, 1, 0, 0.838061,-0.00204329) , 
7, 2.13904e-05, 1, 0, 0.499268,-0.000714452)    );
  // itree = 999
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661749,-0.00542372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810788,-0.0252887) , 
5, 0.00402595, 1, 0, 0.67487,-0.000557475) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973066,0.0195099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132001) , 
0, 0.00467007, 1, 0, 0.295433,6.62624e-05) , 
5, 0.00422851, 1, 0, 0.473766,-0.000226891) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630664,0.0248324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619801,-0.0121442) , 
4, 0.00586452, 1, 0, 0.624956,-0.000634054) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638577,-0.00561685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623636,-0.0229936) , 
6, 0.0110532, 1, 0, 0.633974,-0.00280236) , 
1, 1.1115, 1, 0, 0.629328,-0.00168521) , 
6, 0.0104369, 1, 0, 0.501964,-0.000491236)    );
   return;
};
 
// Clean up
inline void ReadBDTG::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDTG::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
         if (IsNormalised()) {
            // normalise variables
            std::vector<double> iV;
            iV.reserve(inputValues.size());
            int ivar = 0;
            for (std::vector<double>::const_iterator varIt = inputValues.begin();
                 varIt != inputValues.end(); varIt++, ivar++) {
               iV.push_back(NormVariable( *varIt, fVmin[ivar], fVmax[ivar] ));
            }
            retval = GetMvaValue__( iV );
         }
         else {
            retval = GetMvaValue__( inputValues );
         }
      }

      return retval;
   }
