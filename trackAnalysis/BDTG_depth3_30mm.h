// Class: ReadBDTG30
// Automatically generated by MethodBase::MakeClass
//

/* configuration options =====================================================

#GEN -*-*-*-*-*-*-*-*-*-*-*- general info -*-*-*-*-*-*-*-*-*-*-*-

Method         : BDT::BDTG
TMVA Release   : 4.2.1         [262657]
ROOT Release   : 6.10/04       [395780]
Creator        : wfawcett
Date           : Wed Mar 14 20:22:24 2018
Host           : Linux lcgapp-slc6-x86-64-3.cern.ch 2.6.32-642.4.2.el6.x86_64 #1 SMP Wed Aug 24 09:19:54 CEST 2016 x86_64 x86_64 x86_64 GNU/Linux
Dir            : /atlas/users/wfawcett/fcc/testTMVA/tmvatutorial
Training events: 66730
Analysis type  : [Classification]


#OPT -*-*-*-*-*-*-*-*-*-*-*-*- options -*-*-*-*-*-*-*-*-*-*-*-*-

# Set by User:
V: "False" [Verbose output (short form of "VerbosityLevel" below - overrides the latter one)]
H: "False" [Print method-specific help message]
NTrees: "1000" [Number of trees in the forest]
MaxDepth: "3" [Max depth of the decision tree allowed]
MinNodeSize: "2.5%" [Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%)]
nCuts: "20" [Number of grid points in variable range used in finding optimal cut in node splitting]
BoostType: "Grad" [Boosting type for the trees in the forest (note: AdaCost is still experimental)]
UseBaggedBoost: "True" [Use only a random subsample of all events for growing the trees in each boost iteration.]
Shrinkage: "1.000000e-01" [Learning rate for GradBoost algorithm]
BaggedSampleFraction: "5.000000e-01" [Relative size of bagged event sample to original size of the data sample (used whenever bagging is used (i.e. UseBaggedBoost, Bagging,)]
# Default:
VerbosityLevel: "Default" [Verbosity level]
VarTransform: "None" [List of variable transformations performed before training, e.g., "D_Background,P_Signal,G,N_AllClasses" for: "Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed)"]
CreateMVAPdfs: "False" [Create PDFs for classifier outputs (signal and background)]
IgnoreNegWeightsInTraining: "False" [Events with negative weights are ignored in the training (but are included for testing and performance evaluation)]
AdaBoostR2Loss: "quadratic" [Type of Loss function in AdaBoostR2]
AdaBoostBeta: "5.000000e-01" [Learning rate  for AdaBoost algorithm]
UseRandomisedTrees: "False" [Determine at each node splitting the cut variable only as the best out of a random subset of variables (like in RandomForests)]
UseNvars: "3" [Size of the subset of variables used with RandomisedTree option]
UsePoissonNvars: "True" [Interpret "UseNvars" not as fixed number but as mean of a Poisson distribution in each split with RandomisedTree option]
UseYesNoLeaf: "True" [Use Sig or Bkg categories, or the purity=S/(S+B) as classification of the leaf node -> Real-AdaBoost]
NegWeightTreatment: "pray" [How to treat events with negative weights in the BDT training (particular the boosting) : IgnoreInTraining;  Boost With inverse boostweight; Pair events with negative and positive weights in training sample and *annihilate* them (experimental!)]
Css: "1.000000e+00" [AdaCost: cost of true signal selected signal]
Cts_sb: "1.000000e+00" [AdaCost: cost of true signal selected bkg]
Ctb_ss: "1.000000e+00" [AdaCost: cost of true bkg    selected signal]
Cbb: "1.000000e+00" [AdaCost: cost of true bkg    selected bkg ]
NodePurityLimit: "5.000000e-01" [In boosting/pruning, nodes with purity > NodePurityLimit are signal; background otherwise.]
SeparationType: "giniindex" [Separation criterion for node splitting]
RegressionLossFunctionBDTG: "huber" [Loss function for BDTG regression.]
HuberQuantile: "7.000000e-01" [In the Huber loss function this is the quantile that separates the core from the tails in the residuals distribution.]
DoBoostMonitor: "False" [Create control plot with ROC integral vs tree number]
UseFisherCuts: "False" [Use multivariate splits using the Fisher criterion]
MinLinCorrForFisher: "8.000000e-01" [The minimum linear correlation between two variables demanded for use in Fisher criterion in node splitting]
UseExclusiveVars: "False" [Variables already used in fisher criterion are not anymore analysed individually for node splitting]
DoPreselection: "False" [and and apply automatic pre-selection for 100% efficient signal (bkg) cuts prior to training]
SigToBkgFraction: "1.000000e+00" [Sig to Bkg ratio used in Training (similar to NodePurityLimit, which cannot be used in real adaboost]
PruneMethod: "nopruning" [Note: for BDTs use small trees (e.g.MaxDepth=3) and NoPruning:  Pruning: Method used for pruning (removal) of statistically insignificant branches ]
PruneStrength: "0.000000e+00" [Pruning strength]
PruningValFraction: "5.000000e-01" [Fraction of events to use for optimizing automatic pruning.]
SkipNormalization: "False" [Skip normalization at initialization, to keep expectation value of BDT output according to the fraction of events]
nEventsMin: "0" [deprecated: Use MinNodeSize (in % of training events) instead]
UseBaggedGrad: "False" [deprecated: Use *UseBaggedBoost* instead:  Use only a random subsample of all events for growing the trees in each iteration.]
GradBaggingFraction: "5.000000e-01" [deprecated: Use *BaggedSampleFraction* instead: Defines the fraction of events to be used in each iteration, e.g. when UseBaggedGrad=kTRUE. ]
UseNTrainEvents: "0" [deprecated: Use *BaggedSampleFraction* instead: Number of randomly picked training events used in randomised (and bagged) trees]
NNodesMax: "0" [deprecated: Use MaxDepth instead to limit the tree size]
##


#VAR -*-*-*-*-*-*-*-*-*-*-*-* variables *-*-*-*-*-*-*-*-*-*-*-*-

NVar 9
abs(tracks30.kappa_123-tracks30.kappa_013)   abs_tracks30.kappa_123_M_tracks30.kappa_013_ abs(tracks30.kappa_123-tracks30.kappa_013)   |deltaKappa|                                 units                                            'F'    [0,0.0331452377141]
tracks30.pT                   tracks30.pT                   tracks30.pT                   pT                            units                             'F'    [1.04471385479,7333.52880859]
abs(tracks30.zresiduum)       abs_tracks30.zresiduum_       abs(tracks30.zresiduum)       |zresiduum|                   units                             'F'    [0,0.499938964844]
abs(tracks30.beamlineIntersect) abs_tracks30.beamlineIntersect_ abs(tracks30.beamlineIntersect) |beamlineIntersect|             units                               'F'    [0,264.836456299]
abs(tracks30.hit1phi-tracks30.hit2phi)   abs_tracks30.hit1phi_M_tracks30.hit2phi_ abs(tracks30.hit1phi-tracks30.hit2phi)   |dPhi12|                                 units                                        'F'    [4.52995300293e-06,0.0365295410156]
abs(tracks30.hit2phi-tracks30.hit3phi)   abs_tracks30.hit2phi_M_tracks30.hit3phi_ abs(tracks30.hit2phi-tracks30.hit3phi)   |dPhi23|                                 units                                        'F'    [5.48362731934e-06,0.0716737508774]
abs(tracks30.hit1phi-tracks30.hit3phi)   abs_tracks30.hit1phi_M_tracks30.hit3phi_ abs(tracks30.hit1phi-tracks30.hit3phi)   |dPhi13|                                 units                                        'F'    [4.88758087158e-06,0.0365307331085]
tracks30.z_phi12*tracks30.z_phi23   tracks30.z_phi12_T_tracks30.z_phi23 tracks30.z_phi12*tracks30.z_phi23   z phi12*23                          units                                   'F'    [-0.00256652361713,0.000333580654114]
abs(tracks30.zresiduum/tracks30.eta)   abs_tracks30.zresiduum_D_tracks30.eta_ abs(tracks30.zresiduum/tracks30.eta)   |zresiduum/eta|                        units                                      'F'    [0,15894.8427734]
NSpec 0


============================================================================ */

#include <vector>
#include <cmath>
#include <string>
#include <iostream>

#include "IClassifierReader.h"
#include "BDTGNode.h"

#define NN new BDTGNode
   

class ReadBDTG30 : public IClassifierReader {

 public:

   // constructor
   ReadBDTG30( std::vector<std::string>& theInputVars ) 
      : IClassifierReader(),
        fClassName( "ReadBDTG30" ),
        fNvars( 9 ),
        fIsNormalised( false )
   {      
      // the training input variables
      const char* inputVars[] = { "abs(tracks30.kappa_123-tracks30.kappa_013)", "tracks30.pT", "abs(tracks30.zresiduum)", "abs(tracks30.beamlineIntersect)", "abs(tracks30.hit1phi-tracks30.hit2phi)", "abs(tracks30.hit2phi-tracks30.hit3phi)", "abs(tracks30.hit1phi-tracks30.hit3phi)", "tracks30.z_phi12*tracks30.z_phi23", "abs(tracks30.zresiduum/tracks30.eta)" };

      // sanity checks
      if (theInputVars.size() <= 0) {
         std::cout << "Problem in class \"" << fClassName << "\": empty input vector" << std::endl;
         fStatusIsClean = false;
      }

      if (theInputVars.size() != fNvars) {
         std::cout << "Problem in class \"" << fClassName << "\": mismatch in number of input values: "
                   << theInputVars.size() << " != " << fNvars << std::endl;
         fStatusIsClean = false;
      }

      // validate input variables
      for (size_t ivar = 0; ivar < theInputVars.size(); ivar++) {
         if (theInputVars[ivar] != inputVars[ivar]) {
            std::cout << "Problem in class \"" << fClassName << "\": mismatch in input variable names" << std::endl
                      << " for variable [" << ivar << "]: " << theInputVars[ivar].c_str() << " != " << inputVars[ivar] << std::endl;
            fStatusIsClean = false;
         }
      }

      // initialize min and max vectors (for normalisation)
      fVmin[0] = 0;
      fVmax[0] = 0;
      fVmin[1] = 0;
      fVmax[1] = 0;
      fVmin[2] = 0;
      fVmax[2] = 0;
      fVmin[3] = 0;
      fVmax[3] = 0;
      fVmin[4] = 0;
      fVmax[4] = 0;
      fVmin[5] = 0;
      fVmax[5] = 0;
      fVmin[6] = 0;
      fVmax[6] = 0;
      fVmin[7] = 0;
      fVmax[7] = 0;
      fVmin[8] = 0;
      fVmax[8] = 0;

      // initialize input variable types
      fType[0] = 'F';
      fType[1] = 'F';
      fType[2] = 'F';
      fType[3] = 'F';
      fType[4] = 'F';
      fType[5] = 'F';
      fType[6] = 'F';
      fType[7] = 'F';
      fType[8] = 'F';

      // initialize constants
      Initialize();

   }

   // destructor
   virtual ~ReadBDTG30() {
      Clear(); // method-specific
   }

   // the classifier response
   // "inputValues" is a vector of input values in the same order as the 
   // variables given to the constructor
   double GetMvaValue( const std::vector<double>& inputValues ) const;

 private:

   // method-specific destructor
   void Clear();

   // common member variables
   const char* fClassName;

   const size_t fNvars;
   size_t GetNvar()           const { return fNvars; }
   char   GetType( int ivar ) const { return fType[ivar]; }

   // normalisation of input variables
   const bool fIsNormalised;
   bool IsNormalised() const { return fIsNormalised; }
   double fVmin[9];
   double fVmax[9];
   double NormVariable( double x, double xmin, double xmax ) const {
      // normalise to output range: [-1, 1]
      return 2*(x - xmin)/(xmax - xmin) - 1.0;
   }

   // type of input variable: 'F' or 'I'
   char   fType[9];

   // initialize internal variables
   void Initialize();
   double GetMvaValue__( const std::vector<double>& inputValues ) const;

   // private members (method specific)
   std::vector<BDTGNode*> fForest;       // i.e. root nodes of decision trees
   std::vector<double>                fBoostWeights; // the weights applied in the individual boosts
};

double ReadBDTG30::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTGNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTGNode*)current->GetRight();
         else current=(BDTGNode*)current->GetLeft();
      }
      myMVA += current->GetResponse();
   }
   return 2.0/(1.0+exp(-2.0*myMVA))-1.0;
};

void ReadBDTG30::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977911,0.147737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867984,0.073335) , 
2, 0.135324, 1, 0, 0.96183,0.46183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435669,-0.00534758) , 
2, 0.23688, 1, 0, 0.927014,0.427014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000620795,-0.0261644) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0261831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0261831) , 
3, 63.1126, 1, 0, 0,-0.5) , 
0, 0.0131394, 1, 0, 0.000148169,-0.499852) , 
0, 0.00315247, 1, 0, 0.497711,-0.00228891)    );
  // itree = 1
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.152947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926367,0.0896981) , 
0, 0.000150173, 1, 0, 0.962087,0.393954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483597,-0.00121679) , 
2, 0.237122, 1, 0, 0.933943,0.369978) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00105107,-0.0254833) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0255153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0255152) , 
0, 0.018878, 1, 0, 0,-0.486912) , 
0, 0.0117373, 1, 0, 0.000224892,-0.486689) , 
0, 0.00315669, 1, 0, 0.503952,-0.0245301)    );
  // itree = 2
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974677,0.112816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814017,0.0372009) , 
0, 0.00209428, 1, 0, 0.960715,0.335338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46334,-0.00288221) , 
2, 0.238037, 1, 0, 0.931533,0.313705) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0248974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000172916,-0.0248919) , 
3, 75.5897, 1, 0, 5.41438e-05,-0.474124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000758934,-0.0248737) , 
6, 0.0243592, 1, 0, 0.000265401,-0.473914) , 
0, 0.00315669, 1, 0, 0.506506,-0.0457612)    );
  // itree = 3
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972881,0.101447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833651,0.0399826) , 
0, 0.00207713, 1, 0, 0.9602,0.286713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443363,-0.00436107) , 
2, 0.238037, 1, 0, 0.929955,0.266897) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00106973,-0.0242908) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0243237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0243242) , 
6, 0.0226272, 1, 0, 0,-0.461781) , 
0, 0.011725, 1, 0, 0.000231398,-0.461555) , 
0, 0.0031564, 1, 0, 0.507841,-0.0638364)    );
  // itree = 4
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963643,0.0862318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980413,0.107669) , 
5, 0.016234, 1, 0, 0.966384,0.252185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439963,-0.00444337) , 
2, 0.238037, 1, 0, 0.93448,0.233681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00123446,-0.0237548) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0237905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000166238,-0.0237851) , 
4, 0.0278225, 1, 0, 5.18158e-05,-0.449663) , 
0, 0.0131485, 1, 0, 0.000349112,-0.449392) , 
0, 0.00315552, 1, 0, 0.509629,-0.0769868)    );
  // itree = 5
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983625,0.0978746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911561,0.0516169) , 
2, 0.0790609, 1, 0, 0.961454,0.212022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444722,-0.00431437) , 
2, 0.237252, 1, 0, 0.929578,0.195786) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000818006,-0.0232685) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0232933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0232938) , 
6, 0.0243339, 1, 0, 0,-0.437972) , 
0, 0.0117304, 1, 0, 0.000181107,-0.437804) , 
0, 0.00315669, 1, 0, 0.493281,-0.101647)    );
  // itree = 6
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889107,0.0314024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969004,0.080699) , 
7, 2.6838e-05, 1, 0, 0.963938,0.184797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425944,-0.00587902) , 
2, 0.236497, 1, 0, 0.929146,0.168227) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000857102,-0.0228026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0228291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000178236,-0.022823) , 
2, 0.357109, 1, 0, 4.79253e-05,-0.426492) , 
0, 0.0117224, 1, 0, 0.000224724,-0.42633) , 
0, 0.00315552, 1, 0, 0.501477,-0.105503)    );
  // itree = 7
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998116,0.10378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937088,0.0559043) , 
0, 0.000149592, 1, 0, 0.966457,0.161762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.469119,-0.00213786) , 
2, 0.236584, 1, 0, 0.93803,0.151117) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00134767,-0.0223506) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0223945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000172323,-0.0223886) , 
2, 0.357003, 1, 0, 4.70716e-05,-0.415364) , 
0, 0.0117202, 1, 0, 0.000331121,-0.415098) , 
0, 0.00315479, 1, 0, 0.500459,-0.113104)    );
  // itree = 8
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985289,0.0866305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912523,0.0374743) , 
2, 0.0679757, 1, 0, 0.959634,0.132204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425544,-0.0048569) , 
2, 0.238037, 1, 0, 0.926046,0.120169) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00121613,-0.0219474) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.021987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000362411,-0.0219743) , 
2, 0.357027, 1, 0, 9.54511e-05,-0.404483) , 
0, 0.0117224, 1, 0, 0.000336964,-0.404263) , 
0, 0.00315552, 1, 0, 0.499368,-0.121553)    );
  // itree = 9
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898798,0.021159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969059,0.0678817) , 
5, 0.00484402, 1, 0, 0.965104,0.116628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765041,0.0192675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515586,-0.00959043) , 
0, 0.000598009, 1, 0, 0.625098,-0.00550992) , 
2, 0.189802, 1, 0, 0.928763,0.103573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00133129,-0.02156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0216043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0216047) , 
6, 0.0243531, 1, 0, 0,-0.394033) , 
0, 0.0117254, 1, 0, 0.000297832,-0.393761) , 
0, 0.0031564, 1, 0, 0.500049,-0.126069)    );
  // itree = 10
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968786,0.0628537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490907,-0.0247853) , 
2, 0.118248, 1, 0, 0.921975,0.06605) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975048,0.0732277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845403,0.0468581) , 
2, 0.213649, 1, 0, 0.954095,0.139034) , 
5, 0.0137969, 1, 0, 0.933815,0.0929526) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000840836,-0.0212178) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0212443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0212447) , 
2, 0.357152, 1, 0, 0,-0.383765) , 
0, 0.0117263, 1, 0, 0.000184434,-0.38361) , 
0, 0.00315669, 1, 0, 0.498199,-0.129404)    );
  // itree = 11
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973983,0.0652743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.47474,-0.023661) , 
2, 0.141161, 1, 0, 0.922873,0.0582904) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981005,0.0763223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881437,0.0569229) , 
2, 0.203639, 1, 0, 0.960498,0.137442) , 
5, 0.0148352, 1, 0, 0.934147,0.0820074) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00122746,-0.0208634) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0209052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000538338,-0.020885) , 
2, 0.357036, 1, 0, 0.00013976,-0.373627) , 
0, 0.0117295, 1, 0, 0.000368078,-0.37343) , 
0, 0.0031564, 1, 0, 0.496867,-0.13127)    );
  // itree = 12
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978824,0.0678637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.841966,0.000152653) , 
0, 0.00209428, 1, 0, 0.967541,0.0796615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453534,-0.0044512) , 
2, 0.237252, 1, 0, 0.935865,0.0715559) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000551881,-0.0205648) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0205907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0205854) , 
0, 0.0159539, 1, 0, 0,-0.36409) , 
2, 0.167033, 1, 0, 0.000187463,-0.363895) , 
0, 0.00315009, 1, 0, 0.502752,-0.130008)    );
  // itree = 13
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99792,0.0910889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964808,0.0810106) , 
2, 0.158162, 1, 0, 0.994034,0.0916118) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952043,0.0410021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593498,-0.0132649) , 
2, 0.141908, 1, 0, 0.87782,0.0242817) , 
0, 0.00014897, 1, 0, 0.932271,0.0558287) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00149086,-0.0202286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0202831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0202835) , 
2, 0.333308, 1, 0, 0,-0.354562) , 
0, 0.0117331, 1, 0, 0.000331607,-0.354266) , 
0, 0.00315552, 1, 0, 0.496297,-0.13602)    );
  // itree = 14
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825072,-0.0168358) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945662,0.0295838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954482,0.0575456) , 
5, 0.0160691, 1, 0, 0.947413,0.059993) , 
7, 2.83889e-05, 1, 0, 0.938268,0.051679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000857102,-0.0199678) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0199972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0199976) , 
2, 0.333471, 1, 0, 0,-0.345334) , 
0, 0.0117261, 1, 0, 0.000187463,-0.345187) , 
0, 0.00315669, 1, 0, 0.504209,-0.131955)    );
  // itree = 15
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998439,0.0901225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951633,0.0644989) , 
2, 0.16156, 1, 0, 0.992694,0.0741488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941425,0.0269454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525956,-0.016251) , 
2, 0.164716, 1, 0, 0.871841,0.00664888) , 
0, 0.000150173, 1, 0, 0.928501,0.0382953) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00174649,-0.0196591) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0197265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000344587,-0.0197125) , 
2, 0.357109, 1, 0, 9.74267e-05,-0.336252) , 
0, 0.0117261, 1, 0, 0.000457073,-0.335934) , 
0, 0.00315669, 1, 0, 0.503027,-0.133275)    );
  // itree = 16
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975713,0.0531452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845694,-0.00619295) , 
0, 0.00209428, 1, 0, 0.964178,0.0444199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450915,-0.00682895) , 
2, 0.238037, 1, 0, 0.93312,0.0369301) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00142243,-0.0194153) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0194699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00018102,-0.0194622) , 
5, 0.0373293, 1, 0, 4.66778e-05,-0.327555) , 
0, 0.0117263, 1, 0, 0.000332746,-0.327315) , 
0, 0.00315669, 1, 0, 0.498252,-0.132882)    );
  // itree = 17
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998976,0.0892459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981143,0.0873394) , 
2, 0.158162, 1, 0, 0.996844,0.0600122) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943208,0.0227059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.511134,-0.0171282) , 
2, 0.165824, 1, 0, 0.871744,-0.00248953) , 
0, 0.000150173, 1, 0, 0.930419,0.0268258) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000999905,-0.0191892) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000173314,-0.0192187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0192264) , 
5, 0.0169911, 1, 0, 4.9209e-05,-0.319034) , 
0, 0.0117254, 1, 0, 0.000265937,-0.318872) , 
0, 0.0031564, 1, 0, 0.506176,-0.130847)    );
  // itree = 18
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76741,-0.0325875) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933011,0.00819724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959711,0.0508635) , 
5, 0.0150556, 1, 0, 0.940929,0.0303912) , 
5, 0.00483683, 1, 0, 0.931092,0.0222773) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00045386,-0.0189761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0190021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.55815e-05,-0.0189911) , 
0, 0.0159897, 1, 0, 5.67123e-05,-0.310812) , 
2, 0.166641, 1, 0, 0.000189063,-0.310672) , 
0, 0.00315552, 1, 0, 0.504127,-0.130432)    );
  // itree = 19
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990768,0.0715407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969014,0.0375335) , 
2, 0.0509818, 1, 0, 0.983982,0.0417676) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.404004,-0.0325354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911973,0.0287611) , 
5, 0.0136677, 1, 0, 0.755468,-0.0487652) , 
2, 0.119019, 1, 0, 0.930734,0.0206718) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0187765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000175128,-0.0187669) , 
4, 0.0260959, 1, 0, 5.18336e-05,-0.302699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00102981,-0.0187297) , 
6, 0.0243534, 1, 0, 0.000332583,-0.302431) , 
0, 0.00315669, 1, 0, 0.499617,-0.129043)    );
  // itree = 20
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990198,0.0680036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924193,0.00201111) , 
2, 0.0566464, 1, 0, 0.963802,0.0248165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426197,-0.00941939) , 
2, 0.238037, 1, 0, 0.932088,0.0167941) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00103187,-0.0185234) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0185655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0185662) , 
6, 0.0243553, 1, 0, 0,-0.294852) , 
0, 0.011725, 1, 0, 0.000227667,-0.294678) , 
0, 0.0031564, 1, 0, 0.505258,-0.125873)    );
  // itree = 21
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.772862,-0.0289688) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995244,0.0793881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893742,-0.0011145) , 
0, 0.000150299, 1, 0, 0.941541,0.0179312) , 
6, 0.00882949, 1, 0, 0.933464,0.0121735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00133424,-0.0183083) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000174519,-0.0183577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0183662) , 
3, 25.1366, 1, 0, 4.70863e-05,-0.287144) , 
0, 0.0117259, 1, 0, 0.000330475,-0.286918) , 
0, 0.00315669, 1, 0, 0.49804,-0.12739)    );
  // itree = 22
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979093,0.0424397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833085,-0.0181917) , 
0, 0.00209428, 1, 0, 0.966971,0.0215515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483346,-0.0081368) , 
2, 0.235269, 1, 0, 0.936198,0.0146484) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.01818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0181758) , 
0, 0.0160097, 1, 0, 0,-0.279773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0007415,-0.0181417) , 
6, 0.0243561, 1, 0, 0.000217897,-0.279572) , 
0, 0.00315669, 1, 0, 0.493592,-0.124482)    );
  // itree = 23
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980596,0.0392049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579467,-0.0347604) , 
2, 0.0711757, 1, 0, 0.912173,-0.021225) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952561,0.00774594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951181,0.0377445) , 
0, 0.00149592, 1, 0, 0.951875,0.0316087) , 
5, 0.0118855, 1, 0, 0.933462,0.00710497) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0179955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000166238,-0.0179867) , 
3, 75.6293, 1, 0, 5.33197e-05,-0.272451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000988423,-0.0179469) , 
6, 0.0243553, 1, 0, 0.000335214,-0.27219) , 
0, 0.00315669, 1, 0, 0.501339,-0.122234)    );
  // itree = 24
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997941,0.0814369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962692,0.0526315) , 
2, 0.16156, 1, 0, 0.993666,0.0309502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958249,0.0149277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700436,-0.0192092) , 
2, 0.094901, 1, 0, 0.871973,-0.025831) , 
0, 0.000149502, 1, 0, 0.929276,0.000906015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000162648,-0.0178665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000348977,-0.0178049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.017822) , 
5, 0.0190293, 1, 0, 9.49997e-05,-0.265343) , 
5, 0.0102438, 1, 0, 0.00011029,-0.265494) , 
0, 0.00315009, 1, 0, 0.496231,-0.123252)    );
  // itree = 25
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983102,0.0419455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85376,-0.034068) , 
0, 0.00207713, 1, 0, 0.973637,0.0134847) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.456575,-0.0263871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90626,0.0275533) , 
5, 0.0148537, 1, 0, 0.729916,-0.0523086) , 
2, 0.141185, 1, 0, 0.928216,0.0012232) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00170498,-0.017571) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0176554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0176566) , 
6, 0.0243531, 1, 0, 0,-0.258508) , 
0, 0.0117304, 1, 0, 0.00036889,-0.258195) , 
0, 0.00315669, 1, 0, 0.497274,-0.119265)    );
  // itree = 26
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967293,0.00928857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465906,-0.0230291) , 
2, 0.166626, 1, 0, 0.921563,-0.0145679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972355,0.0349064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919436,0.0464449) , 
2, 0.190004, 1, 0, 0.959299,0.0500897) , 
5, 0.0156145, 1, 0, 0.930064,-2.89705e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0174986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000178025,-0.0174874) , 
4, 0.0261016, 1, 0, 5.42023e-05,-0.251777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000996597,-0.0174459) , 
6, 0.0243534, 1, 0, 0.000339921,-0.251519) , 
0, 0.0031564, 1, 0, 0.502785,-0.115594)    );
  // itree = 27
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972779,0.0198618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819081,-0.0251253) , 
0, 0.00208641, 1, 0, 0.958825,0.00419784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413419,-0.0107235) , 
2, 0.238037, 1, 0, 0.926362,-0.00339494) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00039281,-0.0173254) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.4163e-05,-0.0173418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0173506) , 
7, -8.58499e-05, 1, 0, 5.16913e-05,-0.245276) , 
3, 25.2277, 1, 0, 0.000148242,-0.24518) , 
0, 0.0031564, 1, 0, 0.498089,-0.115194)    );
  // itree = 28
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975887,0.0168691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516909,-0.0279948) , 
2, 0.0952148, 1, 0, 0.915431,-0.0220444) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954082,0.00486838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954019,0.0405353) , 
0, 0.00175288, 1, 0, 0.954056,0.027653) , 
5, 0.0125973, 1, 0, 0.933848,0.0016527) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00135069,-0.0171297) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.017201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000162648,-0.0171917) , 
3, 88.2865, 1, 0, 4.8985e-05,-0.238857) , 
0, 0.0117195, 1, 0, 0.00034172,-0.238627) , 
0, 0.00315455, 1, 0, 0.504367,-0.108893)    );
  // itree = 29
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743711,-0.0428724) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927029,-0.00997946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960691,0.0358942) , 
5, 0.0151389, 1, 0, 0.936648,0.00140972) , 
5, 0.00484042, 1, 0, 0.925194,-0.00733487) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000417101,-0.0170391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0170643) , 
2, 0.166641, 1, 0, 0.000141025,-0.232654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000996597,-0.0170045) , 
3, 100.897, 1, 0, 0.000329752,-0.232457) , 
0, 0.00315552, 1, 0, 0.495228,-0.111993)    );
  // itree = 30
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982398,0.0345352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875267,-0.0207902) , 
0, 0.00209428, 1, 0, 0.974742,0.0114798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488237,-0.0231124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905868,0.028196) , 
5, 0.0158467, 1, 0, 0.665326,-0.0852131) , 
2, 0.166077, 1, 0, 0.931765,-0.00195054) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000565273,-0.0168974) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0169287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0169313) , 
6, 0.0226169, 1, 0, 0,-0.226707) , 
5, 0.0167928, 1, 0, 0.000222675,-0.226518) , 
0, 0.0031564, 1, 0, 0.499575,-0.106139)    );
  // itree = 31
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846112,-0.0403508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96828,0.0121289) , 
5, 0.00481067, 1, 0, 0.961777,0.00247909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446323,-0.0101173) , 
2, 0.238037, 1, 0, 0.932227,-0.00383521) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00056002,-0.0167692) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.016801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0168035) , 
6, 0.0243561, 1, 0, 0,-0.220829) , 
5, 0.0167805, 1, 0, 0.000218794,-0.220645) , 
0, 0.00315669, 1, 0, 0.4944,-0.105685)    );
  // itree = 32
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979948,0.025361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861566,-0.0242943) , 
0, 0.00210242, 1, 0, 0.971854,0.00649152) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.444341,-0.0218716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928541,0.0384275) , 
5, 0.0155074, 1, 0, 0.689072,-0.0582035) , 
2, 0.166626, 1, 0, 0.933141,-0.00236525) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000154792,-0.0166695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0166795) , 
6, 0.00811279, 1, 0, 5.35472e-05,-0.215055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000742109,-0.0166345) , 
6, 0.0243491, 1, 0, 0.000261583,-0.214876) , 
0, 0.00315669, 1, 0, 0.500037,-0.101027)    );
  // itree = 33
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997938,0.0767662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984376,0.0665323) , 
2, 0.16156, 1, 0, 0.996357,0.0214027) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9428,-0.0116551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529107,-0.0180408) , 
2, 0.166079, 1, 0, 0.873832,-0.0324482) , 
0, 0.000150173, 1, 0, 0.931167,-0.00724885) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000478894,-0.0165326) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0165608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0165634) , 
6, 0.0243539, 1, 0, 0,-0.209525) , 
5, 0.0169839, 1, 0, 0.000185068,-0.209379) , 
0, 0.00315479, 1, 0, 0.498759,-0.101131)    );
  // itree = 34
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991569,0.0555489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953197,-0.0242498) , 
8, 0.0726267, 1, 0, 0.984002,0.0115485) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443942,-0.0300601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907042,0.00649924) , 
5, 0.0119129, 1, 0, 0.823928,-0.0351687) , 
2, 0.0936802, 1, 0, 0.935742,-0.00253584) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0164508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0164478) , 
0, 0.0174522, 1, 0, 0,-0.204103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000970122,-0.0163863) , 
6, 0.0243503, 1, 0, 0.000297685,-0.203837) , 
0, 0.0031564, 1, 0, 0.500537,-0.0961889)    );
  // itree = 35
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972778,0.00617413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826151,-0.022745) , 
0, 0.00210242, 1, 0, 0.960535,-0.00250977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437611,-0.0112286) , 
2, 0.237252, 1, 0, 0.929396,-0.0091123) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0016508,-0.0162327) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0163396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00035101,-0.0163158) , 
2, 0.357115, 1, 0, 9.34091e-05,-0.198692) , 
0, 0.0117254, 1, 0, 0.000436858,-0.198412) , 
0, 0.0031564, 1, 0, 0.49388,-0.0978601)    );
  // itree = 36
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920188,-0.0428722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979613,0.0198535) , 
5, 0.0054809, 1, 0, 0.974594,0.00391751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.444649,-0.0223395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883834,0.00632358) , 
5, 0.0148026, 1, 0, 0.71393,-0.0690298) , 
2, 0.142822, 1, 0, 0.927236,-0.00933583) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00076731,-0.0161841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00017076,-0.0162234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0162365) , 
7, -0.000764906, 1, 0, 5.31504e-05,-0.193624) , 
4, 0.0122232, 1, 0, 0.000262821,-0.193439) , 
0, 0.00315479, 1, 0, 0.501027,-0.0939838)    );
  // itree = 37
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954725,0.00111687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944949,0.0377449) , 
0, 0.00201811, 1, 0, 0.953935,0.00596103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529542,-0.0257568) , 
0, 0.00223063, 1, 0, 0.933308,-0.00371242) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000459747,-0.0161034) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0161387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0161348) , 
0, 0.0160024, 1, 0, 0,-0.188676) , 
2, 0.166639, 1, 0, 0.000148315,-0.188534) , 
0, 0.00315552, 1, 0, 0.501811,-0.0891747)    );
  // itree = 38
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953229,-0.00340487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959139,0.0445144) , 
0, 0.00192216, 1, 0, 0.95398,0.00484495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516264,-0.026256) , 
0, 0.00224253, 1, 0, 0.933361,-0.00460374) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0160408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0160378) , 
0, 0.017441, 1, 0, 0,-0.183758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000503968,-0.0160041) , 
6, 0.0243531, 1, 0, 0.000148644,-0.183646) , 
0, 0.00315669, 1, 0, 0.498825,-0.0879718)    );
  // itree = 39
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982704,0.0229261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.88181,-0.0153089) , 
0, 0.00208641, 1, 0, 0.975529,0.00514881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506676,-0.0191918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892243,0.0149547) , 
5, 0.0158387, 1, 0, 0.673039,-0.0717989) , 
2, 0.166077, 1, 0, 0.932731,-0.00573829) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00172648,-0.0158206) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0159449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0159467) , 
6, 0.0243561, 1, 0, 0,-0.178975) , 
0, 0.0117261, 1, 0, 0.00036907,-0.178668) , 
0, 0.00315669, 1, 0, 0.499996,-0.0859998)    );
  // itree = 40
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998437,0.0755216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97429,0.0479869) , 
2, 0.158162, 1, 0, 0.995437,0.0160482) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965996,0.00478913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712395,-0.0193609) , 
2, 0.0941235, 1, 0, 0.880946,-0.0282107) , 
0, 0.000150299, 1, 0, 0.934681,-0.00743834) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000325477,-0.0158323) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0158597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0158556) , 
0, 0.0160101, 1, 0, 0,-0.174397) , 
2, 0.166601, 1, 0, 0.000110183,-0.174296) , 
0, 0.00315669, 1, 0, 0.497653,-0.0854648)    );
  // itree = 41
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965043,-0.0164661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984165,0.0390414) , 
5, 0.0131559, 1, 0, 0.97228,0.000988437) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.451942,-0.0194221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87813,0.0126917) , 
7, 0.000236853, 1, 0, 0.673162,-0.0634415) , 
2, 0.165985, 1, 0, 0.929739,-0.00817499) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00134616,-0.0156687) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0157691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0157705) , 
6, 0.022634, 1, 0, 0,-0.169819) , 
0, 0.0117304, 1, 0, 0.000292625,-0.169596) , 
0, 0.00315669, 1, 0, 0.49411,-0.0838325)    );
  // itree = 42
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981526,0.0154193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863292,-0.0196852) , 
0, 0.00210242, 1, 0, 0.973337,0.00158702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.460772,-0.0189212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856636,0.00616896) , 
7, 0.000237302, 1, 0, 0.671809,-0.0663567) , 
2, 0.166077, 1, 0, 0.930346,-0.00810007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000923296,-0.0156138) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0156862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0156895) , 
7, -0.000219642, 1, 0, 0,-0.165462) , 
4, 0.0121795, 1, 0, 0.000258949,-0.165231) , 
0, 0.0031564, 1, 0, 0.49762,-0.0812055)    );
  // itree = 43
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999479,0.0832989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974446,0.0469388) , 
2, 0.155843, 1, 0, 0.996354,0.0143731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949532,-0.0133907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588654,-0.0164325) , 
2, 0.142273, 1, 0, 0.87393,-0.0309642) , 
0, 0.000149592, 1, 0, 0.931075,-0.00980191) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00192751,-0.0154516) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000174317,-0.0155918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0156064) , 
3, 25.3575, 1, 0, 4.73379e-05,-0.161091) , 
0, 0.0117331, 1, 0, 0.000447234,-0.160763) , 
0, 0.00315552, 1, 0, 0.500832,-0.0795936)    );
  // itree = 44
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955947,-0.00356643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944302,0.0355604) , 
0, 0.00202895, 1, 0, 0.955006,0.00199149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532412,-0.0227296) , 
0, 0.00224253, 1, 0, 0.935238,-0.00569942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0155327) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.43357e-05,-0.0155227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000339156,-0.0155008) , 
2, 0.333639, 1, 0, 0.000168973,-0.15684) , 
5, 0.0136566, 1, 0, 0.000114134,-0.156942) , 
0, 0.00315552, 1, 0, 0.505838,-0.0751485)    );
  // itree = 45
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975377,-0.002402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477202,-0.0228246) , 
2, 0.118626, 1, 0, 0.921315,-0.019972) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956021,-0.00925811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954152,0.033843) , 
0, 0.0017951, 1, 0, 0.955106,0.0168562) , 
5, 0.013847, 1, 0, 0.93381,-0.00635392) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000662739,-0.0153989) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0154542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0154568) , 
6, 0.022636, 1, 0, 0,-0.152934) , 
5, 0.0170694, 1, 0, 0.000259076,-0.152717) , 
0, 0.00315669, 1, 0, 0.500493,-0.07429)    );
  // itree = 46
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938832,-0.0124925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97282,0.0316229) , 
5, 0.0141586, 1, 0, 0.950038,-0.000160011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541665,-0.0227021) , 
0, 0.00223229, 1, 0, 0.9292,-0.00860853) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000493646,-0.0153406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0153824) , 
5, 0.0173759, 1, 0, 0.000205184,-0.148782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0153859) , 
6, 0.0260946, 1, 0, 0.000153101,-0.148867) , 
0, 0.0031564, 1, 0, 0.505962,-0.072505)    );
  // itree = 47
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960498,-0.0176172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983939,0.0371527) , 
5, 0.012666, 1, 0, 0.970611,0.000368917) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.41197,-0.0174722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910155,0.0231725) , 
5, 0.0158467, 1, 0, 0.629416,-0.0650926) , 
2, 0.189504, 1, 0, 0.933549,-0.00674167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000332176,-0.0152844) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0153174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0153132) , 
0, 0.0174056, 1, 0, 0,-0.145167) , 
2, 0.166597, 1, 0, 0.000115653,-0.145058) , 
0, 0.00315455, 1, 0, 0.509571,-0.0695667)    );
  // itree = 48
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991518,0.0465279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940299,-0.0184317) , 
2, 0.0339879, 1, 0, 0.962348,-0.0039935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449866,-0.0104367) , 
2, 0.238037, 1, 0, 0.930265,-0.00966432) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0152493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.06831e-05,-0.0152403) , 
5, 0.0135951, 1, 0, 4.67938e-05,-0.141367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000871987,-0.0151647) , 
3, 100.821, 1, 0, 0.000221366,-0.141188) , 
0, 0.0031564, 1, 0, 0.496676,-0.0709813)    );
  // itree = 49
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778274,-0.0318058) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99524,0.053141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891065,-0.0114643) , 
0, 0.000150299, 1, 0, 0.940643,-0.0049312) , 
5, 0.00488218, 1, 0, 0.930823,-0.0102154) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0151845) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000680532,-0.0151168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.015182) , 
5, 0.0247137, 1, 0, 0.000268155,-0.137446) , 
5, 0.0136566, 1, 0, 0.000181282,-0.137572) , 
0, 0.0031564, 1, 0, 0.494063,-0.0699851)    );
  // itree = 50
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825365,-0.0337707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956184,0.00107992) , 
5, 0.00466236, 1, 0, 0.949487,-0.00296478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595675,-0.0189976) , 
0, 0.00223181, 1, 0, 0.932541,-0.00853021) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0151221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0151189) , 
0, 0.0173785, 1, 0, 0,-0.134153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000495269,-0.0150726) , 
6, 0.0243622, 1, 0, 0.000147661,-0.13404) , 
0, 0.00315479, 1, 0, 0.499189,-0.0668639)    );
  // itree = 51
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989835,0.0369658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940658,-0.0160282) , 
0, 0.00178483, 1, 0, 0.983288,0.00558364) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.414024,-0.0260653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900531,-0.00207413) , 
5, 0.0121382, 1, 0, 0.799641,-0.047048) , 
2, 0.094752, 1, 0, 0.928963,-0.00998546) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00156667,-0.0149043) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0150589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000538338,-0.0150039) , 
2, 0.35696, 1, 0, 0.000139588,-0.130507) , 
0, 0.0117261, 1, 0, 0.000440585,-0.130275) , 
0, 0.00315669, 1, 0, 0.494898,-0.0662182)    );
  // itree = 52
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988167,0.0296633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914726,-0.016703) , 
2, 0.0790609, 1, 0, 0.965748,-0.000951496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420428,-0.0113027) , 
2, 0.237252, 1, 0, 0.929822,-0.00768286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000557189,-0.0149436) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0150046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0150005) , 
0, 0.0159819, 1, 0, 0,-0.127336) , 
2, 0.166641, 1, 0, 0.000183044,-0.127159) , 
0, 0.00315046, 1, 0, 0.495278,-0.0635299)    );
  // itree = 53
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878501,-0.0323467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965566,-0.00493039) , 
6, 0.0105824, 1, 0, 0.959387,-0.00678951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441454,-0.00999361) , 
2, 0.237252, 1, 0, 0.928151,-0.0116475) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00181379,-0.0147547) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014945) , 
6, 0.0226157, 1, 0, 0,-0.123977) , 
0, 0.0117261, 1, 0, 0.000381889,-0.123667) , 
0, 0.00315669, 1, 0, 0.504337,-0.062819)    );
  // itree = 54
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949873,-0.0216267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975813,0.0201304) , 
5, 0.0117239, 1, 0, 0.964016,-0.0022691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45156,-0.0104299) , 
2, 0.236584, 1, 0, 0.932463,-0.00766845) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00140584,-0.0147415) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0148894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0148904) , 
6, 0.0226181, 1, 0, 0,-0.120766) , 
0, 0.011689, 1, 0, 0.000298422,-0.120553) , 
0, 0.00314484, 1, 0, 0.504993,-0.0594349)    );
  // itree = 55
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99031,0.0108706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99846,0.0898834) , 
5, 0.0149113, 1, 0, 0.992718,0.00776579) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959994,-0.00813168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688808,-0.0168348) , 
2, 0.094901, 1, 0, 0.867899,-0.0301885) , 
0, 0.000149502, 1, 0, 0.925842,-0.0125695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000658805,-0.014764) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0148412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0148368) , 
0, 0.016017, 1, 0, 0,-0.117712) , 
2, 0.166606, 1, 0, 0.000223833,-0.1175) , 
0, 0.0031564, 1, 0, 0.499719,-0.060876)    );
  // itree = 56
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952676,-0.0160592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977805,0.0245575) , 
5, 0.0126247, 1, 0, 0.964327,-0.00154857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440789,-0.00886408) , 
2, 0.237252, 1, 0, 0.932366,-0.00607234) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00156306,-0.0146109) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00033538,-0.014747) , 
2, 0.357115, 1, 0, 9.36414e-05,-0.114506) , 
0, 0.0117252, 1, 0, 0.000405664,-0.114277) , 
0, 0.0031564, 1, 0, 0.496914,-0.0566301)    );
  // itree = 57
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993023,0.0529037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959067,-0.0134389) , 
2, 0.0237863, 1, 0, 0.972226,-0.000318936) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421208,-0.0178355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.820728,-0.00260348) , 
4, 0.0150676, 1, 0, 0.667906,-0.0600746) , 
2, 0.166626, 1, 0, 0.929281,-0.00875159) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0147399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0147363) , 
0, 0.017427, 1, 0, 0,-0.111684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000748253,-0.0146509) , 
6, 0.024352, 1, 0, 0.000227954,-0.111503) , 
0, 0.00315455, 1, 0, 0.505973,-0.0555686)    );
  // itree = 58
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949827,-0.00777519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962516,0.0468093) , 
0, 0.00202586, 1, 0, 0.950802,-0.00127472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519395,-0.0198952) , 
0, 0.00223966, 1, 0, 0.930157,-0.00785342) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000537218,-0.0146246) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0146922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.28362e-05,-0.0146808) , 
5, 0.0135925, 1, 0, 5.09224e-05,-0.108789) , 
3, 25.2788, 1, 0, 0.000184614,-0.108655) , 
0, 0.0031564, 1, 0, 0.499942,-0.0544853)    );
  // itree = 59
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985138,0.0205162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877045,-0.020207) , 
0, 0.0020823, 1, 0, 0.977359,0.00255629) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.456832,-0.0181051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908448,0.00908372) , 
5, 0.0148537, 1, 0, 0.72429,-0.044862) , 
2, 0.14195, 1, 0, 0.930778,-0.0061717) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000751988,-0.0145513) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0146457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0146426) , 
0, 0.0202858, 1, 0, 0,-0.105991) , 
4, 0.0121749, 1, 0, 0.000219538,-0.105808) , 
0, 0.00315552, 1, 0, 0.496738,-0.0526453)    );
  // itree = 60
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948749,-0.00692927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968361,0.0483219) , 
0, 0.00202895, 1, 0, 0.950276,-0.00136259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50072,-0.023175) , 
0, 0.00224253, 1, 0, 0.928952,-0.0091135) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000320855,-0.0145586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145979) , 
0, 0.0160012, 1, 0, 0,-0.103273) , 
2, 0.166646, 1, 0, 0.000110452,-0.103177) , 
0, 0.00315479, 1, 0, 0.496038,-0.0529543)    );
  // itree = 61
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946235,-0.0324641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723984,-0.030196) , 
0, 0.000292128, 1, 0, 0.833865,-0.063397) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943139,-0.00518038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961383,0.0336698) , 
7, 0.000302682, 1, 0, 0.944831,-0.00124363) , 
5, 0.00600474, 1, 0, 0.934032,-0.00729255) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145544) , 
0, 0.0174352, 1, 0, 0,-0.100577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00060363,-0.0144776) , 
6, 0.0243553, 1, 0, 0.000185753,-0.100428) , 
0, 0.00315552, 1, 0, 0.498467,-0.0507326)    );
  // itree = 62
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96291,0.00767145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721671,-0.0131565) , 
0, 0.00210419, 1, 0, 0.94443,0.000412301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767232,-0.0275548) , 
4, 0.0177561, 1, 0, 0.934797,-0.00420581) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000449458,-0.0144536) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145125) , 
0, 0.0160183, 1, 0, 0,-0.0980003) , 
2, 0.166597, 1, 0, 0.000151752,-0.097863) , 
0, 0.00315669, 1, 0, 0.504921,-0.0472821)    );
  // itree = 63
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900188,-0.0319062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96839,3.44346e-05) , 
5, 0.00589373, 1, 0, 0.962301,-0.00406545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414183,-0.00922028) , 
2, 0.237252, 1, 0, 0.925228,-0.00905707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000573887,-0.0143948) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144745) , 
6, 0.0243539, 1, 0, 0,-0.0954373) , 
5, 0.0170694, 1, 0, 0.000226526,-0.0952563) , 
0, 0.00315669, 1, 0, 0.500242,-0.0486608)    );
  // itree = 64
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983978,0.0141901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918883,-0.0259616) , 
0, 0.0017804, 1, 0, 0.973589,-0.00146285) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435112,-0.018318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901009,0.00589074) , 
5, 0.014826, 1, 0, 0.716828,-0.0491679) , 
2, 0.142273, 1, 0, 0.926439,-0.0102231) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000339156,-0.0143858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0144342) , 
3, 19.1325, 1, 0, 9.33223e-05,-0.0929261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000650274,-0.0143411) , 
3, 100.541, 1, 0, 0.00021753,-0.0927994) , 
0, 0.00315669, 1, 0, 0.493341,-0.0488355)    );
  // itree = 65
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99742,0.0534258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976246,0.0386075) , 
2, 0.16156, 1, 0, 0.994979,0.00805401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986708,0.0416143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823062,-0.0161312) , 
2, 0.0233561, 1, 0, 0.872334,-0.0232523) , 
0, 0.00014931, 1, 0, 0.929631,-0.00862671) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00045858,-0.0143291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143958) , 
3, 23.997, 1, 0, 0.000146464,-0.0904633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00106594,-0.0142396) , 
3, 100.894, 1, 0, 0.000344674,-0.0902661) , 
0, 0.00315455, 1, 0, 0.505736,-0.0458666)    );
  // itree = 66
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779623,-0.0313775) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965218,-0.0037528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454582,-0.00889772) , 
2, 0.23804, 1, 0, 0.933221,-0.00655519) , 
5, 0.00498146, 1, 0, 0.92353,-0.0114622) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143578) , 
0, 0.0131541, 1, 0, 0,-0.0882708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000326653,-0.0143104) , 
3, 100.897, 1, 0, 7.41996e-05,-0.088204) , 
0, 0.00315669, 1, 0, 0.497801,-0.0468415)    );
  // itree = 67
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998111,0.0764308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977291,0.00217997) , 
2, 0.00566464, 1, 0, 0.980342,0.0032481) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.477077,-0.0184577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907781,0.00862802) , 
5, 0.0138798, 1, 0, 0.773627,-0.0287775) , 
2, 0.119019, 1, 0, 0.93253,-0.00415914) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00141575,-0.0141093) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0143231) , 
6, 0.0243553, 1, 0, 0,-0.0859245) , 
0, 0.0117259, 1, 0, 0.000302543,-0.0856941) , 
0, 0.00315669, 1, 0, 0.504815,-0.0415682)    );
  // itree = 68
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972872,-0.00216354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822609,-0.0168855) , 
0, 0.00209428, 1, 0, 0.960314,-0.00509342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450398,-0.00909514) , 
2, 0.238037, 1, 0, 0.928751,-0.00929731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000804893,-0.0141626) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142872) , 
0, 0.0202938, 1, 0, 0,-0.0837411) , 
4, 0.0121782, 1, 0, 0.000227553,-0.0835488) , 
0, 0.00315669, 1, 0, 0.502177,-0.0434093)    );
  // itree = 69
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98354,0.0102285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909037,-0.0150279) , 
0, 0.0019224, 1, 0, 0.974825,-0.000266411) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.408669,-0.0174258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870998,0.00408719) , 
7, 0.000204783, 1, 0, 0.718314,-0.0362966) , 
2, 0.142351, 1, 0, 0.928691,-0.00674644) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00158499,-0.0140037) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000361541,-0.0141947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142538) , 
7, -0.000811943, 1, 0, 9.34671e-05,-0.0814438) , 
0, 0.0117188, 1, 0, 0.000406261,-0.0812198) , 
0, 0.00315479, 1, 0, 0.497296,-0.0413559)    );
  // itree = 70
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998433,0.0620172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986036,0.0532749) , 
2, 0.155843, 1, 0, 0.996819,0.00856409) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828731,-0.0338612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890753,-0.0013324) , 
0, 0.00128993, 1, 0, 0.871669,-0.0224045) , 
0, 0.000149502, 1, 0, 0.930438,-0.007862) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0142237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.45725e-05,-0.0142076) , 
5, 0.0135827, 1, 0, 5.66696e-05,-0.0794528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000588536,-0.0141245) , 
3, 75.6659, 1, 0, 0.000229517,-0.0792862) , 
0, 0.0031564, 1, 0, 0.505703,-0.0404744)    );
  // itree = 71
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981198,0.00726476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846597,-0.0145057) , 
0, 0.00209428, 1, 0, 0.971696,-0.000679966) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662384,-0.019063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690057,0.00431645) , 
0, 0.00164452, 1, 0, 0.675381,-0.0385785) , 
2, 0.166077, 1, 0, 0.928842,-0.00616099) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00109615,-0.0140044) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141917) , 
6, 0.0243378, 1, 0, 0,-0.0774149) , 
5, 0.016778, 1, 0, 0.000408464,-0.0770527) , 
0, 0.0031564, 1, 0, 0.501172,-0.0388163)    );
  // itree = 72
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973961,0.00107221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810248,-0.0138265) , 
0, 0.00208641, 1, 0, 0.959346,-0.00375742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42252,-0.00904387) , 
2, 0.238037, 1, 0, 0.924958,-0.00792097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141616) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000713407,-0.0140358) , 
6, 0.0243553, 1, 0, 0.00022115,-0.0752021) , 
5, 0.0135925, 1, 0, 0.000148133,-0.0753208) , 
0, 0.00315455, 1, 0, 0.497402,-0.0390811)    );
  // itree = 73
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979264,-0.00103761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477539,-0.0241994) , 
2, 0.093657, 1, 0, 0.905197,-0.0232119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949142,-0.0309702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95204,0.0310173) , 
0, 0.00160681, 1, 0, 0.950607,0.00830435) , 
5, 0.0126065, 1, 0, 0.926639,-0.00833026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0141317) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000718168,-0.0140002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.59232e-05,-0.0141143) , 
3, 37.7544, 1, 0, 0.000322573,-0.0731555) , 
5, 0.0136842, 1, 0, 0.000218741,-0.0732989) , 
0, 0.00315669, 1, 0, 0.494028,-0.0386687)    );
  // itree = 74
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998956,0.0707484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97482,0.0358487) , 
2, 0.158162, 1, 0, 0.995897,0.00779467) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.847964,-0.032551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878886,-0.00390834) , 
0, 0.00129689, 1, 0, 0.869418,-0.0220646) , 
0, 0.000150299, 1, 0, 0.928093,-0.00821257) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.014103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140999) , 
0, 0.0174377, 1, 0, 0,-0.0715857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000813588,-0.0139525) , 
6, 0.024359, 1, 0, 0.000258251,-0.0713663) , 
0, 0.00315669, 1, 0, 0.49815,-0.037477)    );
  // itree = 75
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982881,0.0112378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.505222,-0.0284149) , 
2, 0.0472993, 1, 0, 0.890883,-0.0272447) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948723,-0.0217056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925437,0.013454) , 
0, 0.00134379, 1, 0, 0.937795,0.000706533) , 
5, 0.00961338, 1, 0, 0.924128,-0.00743676) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140747) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000585221,-0.0139627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.66149e-05,-0.0140561) , 
5, 0.0247372, 1, 0, 0.000272029,-0.0694663) , 
5, 0.0136918, 1, 0, 0.000184479,-0.0695904) , 
0, 0.0031564, 1, 0, 0.495525,-0.0362689)    );
  // itree = 76
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993804,0.0446281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963144,-0.0120994) , 
2, 0.0339879, 1, 0, 0.979552,0.00206921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.433619,-0.0189707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910841,0.010402) , 
5, 0.0138071, 1, 0, 0.766387,-0.0281844) , 
2, 0.119019, 1, 0, 0.931204,-0.00479261) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000892891,-0.0138736) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140472) , 
6, 0.0243561, 1, 0, 0,-0.0679274) , 
5, 0.0169797, 1, 0, 0.000337467,-0.0676341) , 
0, 0.00315669, 1, 0, 0.501257,-0.0338177)    );
  // itree = 77
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948399,-0.0139824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974565,0.0162711) , 
5, 0.0106812, 1, 0, 0.964696,0.000626102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.457155,-0.00748284) , 
2, 0.237122, 1, 0, 0.935012,-0.00241772) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000142493,-0.0139908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0140196) , 
6, 0.00927456, 1, 0, 5.43784e-05,-0.0661336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00071737,-0.0138782) , 
6, 0.0243553, 1, 0, 0.000261648,-0.065966) , 
0, 0.00315669, 1, 0, 0.503166,-0.0317764)    );
  // itree = 78
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98897,-0.0169315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998428,0.0754034) , 
5, 0.0113897, 1, 0, 0.994493,0.00554103) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81738,-0.0304122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890773,-0.00361897) , 
0, 0.00114723, 1, 0, 0.873445,-0.0208544) , 
0, 0.000149502, 1, 0, 0.929762,-0.00857422) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.55012e-05,-0.0139783) , 
5, 0.0136816, 1, 0, 4.93057e-05,-0.0644663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000678846,-0.0138556) , 
3, 100.433, 1, 0, 0.000191029,-0.0643299) , 
0, 0.00315479, 1, 0, 0.504915,-0.0340565)    );
  // itree = 79
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989263,0.0276046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936048,-0.0375885) , 
8, 0.0855796, 1, 0, 0.983142,0.00214459) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.534751,-0.0197818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910062,0.00521074) , 
5, 0.0130522, 1, 0, 0.802175,-0.0260652) , 
2, 0.0948486, 1, 0, 0.927843,-0.00647553) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000799199,-0.0138029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013971) , 
7, -0.000218234, 1, 0, 0,-0.0628188) , 
4, 0.0121845, 1, 0, 0.000218741,-0.0626338) , 
0, 0.00315552, 1, 0, 0.493772,-0.0327541)    );
  // itree = 80
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.786865,-0.0218075) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934647,-0.0108781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948603,0.0111023) , 
5, 0.0161754, 1, 0, 0.937321,-0.0056352) , 
5, 0.00493196, 1, 0, 0.928542,-0.00840531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00164899,-0.0135943) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000516201,-0.0138329) , 
2, 0.357125, 1, 0, 0.000141956,-0.0610224) , 
0, 0.0117259, 1, 0, 0.000477982,-0.0607593) , 
0, 0.00315669, 1, 0, 0.498474,-0.0326663)    );
  // itree = 81
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999479,0.0772286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972959,0.0277585) , 
2, 0.16156, 1, 0, 0.996325,0.00630502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819304,-0.0273365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893668,-0.00234786) , 
0, 0.0012963, 1, 0, 0.87067,-0.0218173) , 
0, 0.000150299, 1, 0, 0.929091,-0.00874224) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000159886,-0.013886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139217) , 
6, 0.00812429, 1, 0, 5.39886e-05,-0.0595672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000987613,-0.013705) , 
6, 0.0243546, 1, 0, 0.000338056,-0.0593237) , 
0, 0.00315669, 1, 0, 0.5006,-0.0320786)    );
  // itree = 82
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961656,-0.00849435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992398,0.0765737) , 
5, 0.0171358, 1, 0, 0.964423,-0.00146037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429014,-0.0095487) , 
2, 0.237252, 1, 0, 0.931319,-0.00564677) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000569835,-0.0137704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138982) , 
0, 0.0160106, 1, 0, 0,-0.0581168) , 
2, 0.166641, 1, 0, 0.000185341,-0.0579427) , 
0, 0.00315552, 1, 0, 0.498257,-0.0299691)    );
  // itree = 83
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777566,-0.0258285) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929663,-0.0100257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951455,0.0215162) , 
7, 0.000287607, 1, 0, 0.932368,-0.00565332) , 
5, 0.00495395, 1, 0, 0.923164,-0.00912753) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000571709,-0.0137454) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138787) , 
6, 0.0243568, 1, 0, 0,-0.0565871) , 
5, 0.0169717, 1, 0, 0.000221583,-0.0564123) , 
0, 0.00315552, 1, 0, 0.497415,-0.0309398)    );
  // itree = 84
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987277,0.02608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592294,-0.0273487) , 
2, 0.0461716, 1, 0, 0.909425,-0.0169435) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960522,-0.0118894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933292,0.0168275) , 
0, 0.00150173, 1, 0, 0.949215,0.00554914) , 
5, 0.00993277, 1, 0, 0.936829,-0.00145221) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138543) , 
0, 0.0174523, 1, 0, 0,-0.0551248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000508218,-0.0137359) , 
6, 0.0243495, 1, 0, 0.000149827,-0.0550168) , 
0, 0.0031564, 1, 0, 0.505777,-0.0261022)    );
  // itree = 85
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95835,0.0042041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855505,-0.0415036) , 
4, 0.0167733, 1, 0, 0.950613,-0.00324139) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849753,-0.0289185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630217,-0.0063715) , 
2, 0.11808, 1, 0, 0.736846,-0.0466041) , 
0, 0.00210242, 1, 0, 0.929976,-0.00742767) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00230125,-0.0132758) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138354) , 
6, 0.024359, 1, 0, 0,-0.0536738) , 
0, 0.0117211, 1, 0, 0.000482933,-0.0532646) , 
0, 0.00315552, 1, 0, 0.498687,-0.0286962)    );
  // itree = 86
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974128,-0.0062674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491098,-0.0151824) , 
2, 0.118626, 1, 0, 0.922522,-0.0122234) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94888,-0.0373785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960839,0.0351741) , 
0, 0.0017845, 1, 0, 0.954729,0.00581763) , 
5, 0.013847, 1, 0, 0.934415,-0.00556122) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000151675,-0.013776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138145) , 
6, 0.00811895, 1, 0, 5.46546e-05,-0.0522685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00147948,-0.0134442) , 
6, 0.0243546, 1, 0, 0.000492281,-0.0518801) , 
0, 0.00315669, 1, 0, 0.504609,-0.0268779)    );
  // itree = 87
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98349,0.0107103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869548,-0.0175022) , 
0, 0.00210242, 1, 0, 0.976171,0.000707978) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4642,-0.0142428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879603,-0.00197234) , 
5, 0.0148632, 1, 0, 0.718192,-0.0366551) , 
2, 0.142128, 1, 0, 0.92833,-0.00622072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00136291,-0.013449) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137956) , 
6, 0.0226149, 1, 0, 0,-0.0509436) , 
0, 0.011725, 1, 0, 0.000304993,-0.050724) , 
0, 0.0031564, 1, 0, 0.5039,-0.0265742)    );
  // itree = 88
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993299,0.019085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0948774) , 
3, 87.2783, 1, 0, 0.994173,0.00469834) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810128,-0.0263046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891714,-0.00515837) , 
0, 0.0011528, 1, 0, 0.872214,-0.0200368) , 
0, 0.000150299, 1, 0, 0.92958,-0.00840207) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000490964,-0.0136458) , 
6, 0.0173953, 1, 0, 0.00014927,-0.0495142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137782) , 
6, 0.0260959, 1, 0, 0.000110479,-0.049597) , 
0, 0.00315669, 1, 0, 0.499175,-0.027478)    );
  // itree = 89
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992744,0.00365205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.094867) , 
6, 0.0295983, 1, 0, 0.994958,0.00467772) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.804671,-0.0261105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898115,0.000635684) , 
0, 0.00114658, 1, 0, 0.875782,-0.0128282) , 
0, 0.00014931, 1, 0, 0.931756,-0.00460615) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0138684) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000863985,-0.013522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137573) , 
3, 25.2236, 1, 0, 0.000239962,-0.0481565) , 
5, 0.0101008, 1, 0, 0.000186258,-0.0483811) , 
0, 0.00315046, 1, 0, 0.498207,-0.0249789)    );
  // itree = 90
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987351,0.0220679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957319,-0.0514275) , 
4, 0.0157294, 1, 0, 0.983106,0.00280021) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.462868,-0.0176377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905647,0.00121698) , 
5, 0.0124948, 1, 0, 0.799728,-0.0222801) , 
2, 0.0952148, 1, 0, 0.928842,-0.00462137) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.11115e-05,-0.0137165) , 
5, 0.0135675, 1, 0, 5.36234e-05,-0.0471281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000354869,-0.0136405) , 
3, 75.631, 1, 0, 0.000147588,-0.0470318) , 
0, 0.00315669, 1, 0, 0.497521,-0.0243184)    );
  // itree = 91
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954127,0.00260332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842726,-0.0539135) , 
4, 0.0167733, 1, 0, 0.946057,-0.00480185) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859889,-0.0224217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655025,-0.00466392) , 
2, 0.118636, 1, 0, 0.754415,-0.0344068) , 
0, 0.00210242, 1, 0, 0.927684,-0.00764014) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000461861,-0.0135908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013721) , 
4, 0.0139356, 1, 0, 0.000149221,-0.0457726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013724) , 
6, 0.0260881, 1, 0, 0.000110452,-0.0458536) , 
0, 0.00315669, 1, 0, 0.498776,-0.02531)    );
  // itree = 92
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982263,0.00898133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912017,-0.015924) , 
0, 0.00180208, 1, 0, 0.970478,-0.00140998) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660235,-0.0172371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686032,0.0019333) , 
0, 0.00179172, 1, 0, 0.671491,-0.0347892) , 
2, 0.166626, 1, 0, 0.927072,-0.00625587) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137052) , 
6, 0.0226169, 1, 0, 0,-0.0446966) , 
0, 0.0131498, 1, 0, 0,-0.0447721) , 
0, 0.00315552, 1, 0, 0.497068,-0.0241209)    );
  // itree = 93
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0917386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994627,0.0391366) , 
5, 0.00524391, 1, 0, 0.995484,0.00974111) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63291,-0.0310733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921343,-0.000656053) , 
6, 0.0157537, 1, 0, 0.898482,-0.00925691) , 
2, 0.0235269, 1, 0, 0.930392,-0.00300724) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00106219,-0.0133734) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000170374,-0.0136358) , 
0, 0.028052, 1, 0, 4.8356e-05,-0.0434963) , 
0, 0.0117263, 1, 0, 0.00026587,-0.0433538) , 
0, 0.00315669, 1, 0, 0.505311,-0.0214462)    );
  // itree = 94
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951256,-0.00127521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581655,-0.0191159) , 
0, 0.00210419, 1, 0, 0.930813,-0.00657205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961768,0.0319175) , 
7, 0.000301298, 1, 0, 0.933546,-0.00330946) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00105321,-0.0133481) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.82465e-05,-0.0136469) , 
0, 0.0202921, 1, 0, 5.12516e-05,-0.0424004) , 
4, 0.0122028, 1, 0, 0.000332013,-0.0421623) , 
0, 0.0031564, 1, 0, 0.501669,-0.0212899)    );
  // itree = 95
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999477,0.0681825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971139,0.0260584) , 
2, 0.160249, 1, 0, 0.995887,0.00539106) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805927,-0.025551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880434,-0.00326132) , 
0, 0.00115234, 1, 0, 0.862599,-0.0166015) , 
0, 0.000150173, 1, 0, 0.924283,-0.00642366) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.11552e-05,-0.0136295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136584) , 
7, -0.000190627, 1, 0, 5.38727e-05,-0.0413054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00106636,-0.0133202) , 
6, 0.024355, 1, 0, 0.000370341,-0.041042) , 
0, 0.00315669, 1, 0, 0.497022,-0.0224328)    );
  // itree = 96
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959726,0.0128036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931136,-0.021276) , 
4, 0.0157107, 1, 0, 0.95556,0.00297181) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866356,-0.026058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665822,-0.00263316) , 
2, 0.118625, 1, 0, 0.7644,-0.0292255) , 
0, 0.00209428, 1, 0, 0.937322,-9.99968e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000338901,-0.0135317) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013645) , 
7, -8.28466e-05, 1, 0, 0,-0.0403414) , 
2, 0.166707, 1, 0, 0.000111131,-0.04024) , 
0, 0.00315009, 1, 0, 0.498923,-0.0188763)    );
  // itree = 97
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947061,0.00206211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757174,-0.0240472) , 
4, 0.0162787, 1, 0, 0.935618,-0.00266908) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939581,-0.0289301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957932,0.045437) , 
0, 0.00201449, 1, 0, 0.948819,0.0220054) , 
7, 0.000285297, 1, 0, 0.937221,0.00032654) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000555545,-0.0134423) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136283) , 
6, 0.0226202, 1, 0, 0,-0.0392611) , 
5, 0.0170694, 1, 0, 0.00022115,-0.0390855) , 
0, 0.00315669, 1, 0, 0.499776,-0.0180733)    );
  // itree = 98
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948375,-0.0126664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752234,-0.0256432) , 
0, 0.000594944, 1, 0, 0.867309,-0.0294148) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964276,-0.0188829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91622,0.00617342) , 
0, 0.00104714, 1, 0, 0.940547,6.0814e-05) , 
5, 0.00697351, 1, 0, 0.929812,-0.00425972) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000788566,-0.013343) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0136135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.68006e-05,-0.013578) , 
4, 0.0139151, 1, 0, 6.06145e-05,-0.0381856) , 
5, 0.0168104, 1, 0, 0.000337804,-0.0379537) , 
0, 0.00315669, 1, 0, 0.503173,-0.0197256)    );
  // itree = 99
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983334,0.00657743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533084,-0.0198127) , 
2, 0.0714111, 1, 0, 0.907714,-0.0149733) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961529,-0.0180661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94822,0.0205497) , 
0, 0.00149502, 1, 0, 0.954822,0.00733826) , 
5, 0.0117264, 1, 0, 0.933676,-0.00267705) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00108644,-0.0132234) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 6.3663e-05,-0.0135749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135993) , 
6, 0.0243622, 1, 0, 4.68666e-05,-0.0371909) , 
0, 0.0117211, 1, 0, 0.000260613,-0.0370599) , 
0, 0.00315552, 1, 0, 0.499826,-0.0186581)    );
  // itree = 100
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95436,0.00517666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89659,-0.017931) , 
4, 0.0166828, 1, 0, 0.947828,3.30158e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575503,-0.0183802) , 
0, 0.00223181, 1, 0, 0.930345,-0.00437384) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00179434,-0.0129438) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135856) , 
6, 0.0243601, 1, 0, 0,-0.0362774) , 
0, 0.0117261, 1, 0, 0.00037692,-0.0359768) , 
0, 0.00315669, 1, 0, 0.501292,-0.0189543)    );
  // itree = 101
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98361,-0.0368096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762138,-0.0185705) , 
0, 0.000144846, 1, 0, 0.864134,-0.029209) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941936,-0.00314662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954083,0.0187944) , 
7, 0.00027381, 1, 0, 0.944051,0.00119669) , 
5, 0.00692228, 1, 0, 0.932705,-0.00311988) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000977995,-0.0132116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137065) , 
6, 0.0225909, 1, 0, 0,-0.0355647) , 
4, 0.0121977, 1, 0, 0.000298792,-0.0352589) , 
0, 0.00315046, 1, 0, 0.500416,-0.0180204)    );
  // itree = 102
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776973,-0.0205729) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969839,0.00175805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442424,-0.00609859) , 
2, 0.238039, 1, 0, 0.936534,-0.00149242) , 
5, 0.00498011, 1, 0, 0.927028,-0.00412895) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000451818,-0.0133878) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.30798e-05,-0.0135263) , 
0, 0.0160099, 1, 0, 5.63516e-05,-0.0344412) , 
2, 0.166646, 1, 0, 0.000187978,-0.0343243) , 
0, 0.00315669, 1, 0, 0.502533,-0.0179585)    );
  // itree = 103
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990206,0.0396219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647654,-0.032057) , 
2, 0.0230858, 1, 0, 0.894244,-0.024683) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937507,-0.005492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961688,0.0166975) , 
5, 0.0152603, 1, 0, 0.945242,0.0011379) , 
5, 0.00791831, 1, 0, 0.935981,-0.0035513) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000433298,-0.0133782) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135456) , 
0, 0.0160084, 1, 0, 0,-0.0336088) , 
2, 0.166641, 1, 0, 0.000151523,-0.0334755) , 
0, 0.0031564, 1, 0, 0.506388,-0.017288)    );
  // itree = 104
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.759809,-0.0210397) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995654,0.0323235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882933,-0.00914836) , 
0, 0.000150173, 1, 0, 0.935438,-0.00589034) , 
5, 0.00487018, 1, 0, 0.925506,-0.00843381) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000694334,-0.0132561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000348977,-0.0133949) , 
3, 104.807, 1, 0, 0.000100885,-0.0326548) , 
3, 25.157, 1, 0, 0.000259012,-0.0324987) , 
0, 0.00315479, 1, 0, 0.496631,-0.0195885)    );
  // itree = 105
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950385,-0.000671354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970553,0.0482511) , 
0, 0.00201833, 1, 0, 0.951916,0.00301528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601536,-0.0162501) , 
0, 0.00223104, 1, 0, 0.934712,-0.0011655) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013525) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.20007e-05,-0.0134923) , 
5, 0.0136918, 1, 0, 4.81243e-05,-0.0318289) , 
4, 0.0104391, 1, 0, 3.64106e-05,-0.0318827) , 
0, 0.00315669, 1, 0, 0.497252,-0.0155422)    );
  // itree = 106
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952933,-0.0031611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691771,-0.0201298) , 
0, 0.00194103, 1, 0, 0.929391,-0.00858823) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958118,-0.0171597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967704,0.0483149) , 
0, 0.00203787, 1, 0, 0.962999,0.0200432) , 
5, 0.0164544, 1, 0, 0.934662,-0.00409777) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000588536,-0.0132639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135103) , 
5, 0.0173665, 1, 0, 0.000249915,-0.0308094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135133) , 
6, 0.0260946, 1, 0, 0.000184253,-0.0309133) , 
0, 0.00315552, 1, 0, 0.497624,-0.0166389)    );
  // itree = 107
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940958,-0.0053264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970644,0.0293634) , 
7, 0.000285466, 1, 0, 0.944481,-0.000746769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00124192,-0.0162624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000129396,-0.0134435) , 
0, 0.0132219, 1, 0, 0.000598593,-0.0357701) , 
0, 0.00286163, 1, 0, 0.656839,-0.0114199) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000352654,-0.0196409) , 
7, -0.00049044, 1, 0, 0.000148169,-0.0385387) , 
4, 0.0191329, 1, 0, 0.502288,-0.0178023)    );
  // itree = 108
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961337,0.0052924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000964686,-0.0150898) , 
0, 0.00284916, 1, 0, 0.75268,-0.00505794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0176807) , 
4, 0.0191212, 1, 0, 0.614752,-0.0116426) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0313431,-0.0170828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000157875,-0.0134169) , 
0, 0.0173602, 1, 0, 0.0134768,-0.0414212) , 
2, 0.309477, 1, 0, 0.499717,-0.0173398)    );
  // itree = 109
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954664,0.00488681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909073,-0.03774) , 
4, 0.0167577, 1, 0, 0.951459,0.000189739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775639,-0.0102564) , 
0, 0.00210419, 1, 0, 0.934675,-0.00249547) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00119275,-0.0129306) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134763) , 
5, 0.016958, 1, 0, 0,-0.0284816) , 
0, 0.0117295, 1, 0, 0.000262494,-0.0282614) , 
0, 0.0031564, 1, 0, 0.502532,-0.0144116)    );
  // itree = 110
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955437,0.00194031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87475,-0.0424554) , 
4, 0.0169945, 1, 0, 0.950391,-0.00231847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728051,-0.0136427) , 
0, 0.00210419, 1, 0, 0.928835,-0.00642808) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000372263,-0.0132885) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134653) , 
4, 0.0191294, 1, 0, 0,-0.0278284) , 
5, 0.0170953, 1, 0, 0.0001473,-0.0276419) , 
0, 0.00315669, 1, 0, 0.494964,-0.0163389)    );
  // itree = 111
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953615,-0.00988936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936527,0.0124079) , 
0, 0.00128758, 1, 0, 0.94772,0.000824433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.236326,-0.019014) , 
0, 0.00225328, 1, 0, 0.89457,-0.00535357) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013457) , 
4, 0.01095, 1, 0, 0,-0.0271924) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134522) , 
7, -0.000527581, 1, 0, 0,-0.0269431) , 
4, 0.019146, 1, 0, 0,-0.0270633) , 
0, 0.00473459, 1, 0, 0.501119,-0.0149019)    );
  // itree = 112
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915815,-0.0100591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959081,0.0122105) , 
5, 0.011818, 1, 0, 0.939165,0.000824302) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000663887,-0.0150191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000124477,-0.0133856) , 
0, 0.0133847, 1, 0, 0.000355651,-0.0294537) , 
0, 0.00289582, 1, 0, 0.644043,-0.0086938) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0212235) , 
6, 0.0191323, 1, 0, 0,-0.0360165) , 
4, 0.0191255, 1, 0, 0.498093,-0.0148855)    );
  // itree = 113
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933188,-0.00878217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962549,0.0206025) , 
7, 0.000285297, 1, 0, 0.936754,-0.00393075) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000530751,-0.0158145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013438) , 
0, 0.0133852, 1, 0, 0.000221801,-0.0289791) , 
0, 0.00289582, 1, 0, 0.650004,-0.0116001) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0194427) , 
7, -0.00049176, 1, 0, 0,-0.0324675) , 
4, 0.0191066, 1, 0, 0.497491,-0.0164963)    );
  // itree = 114
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977125,-0.000397306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699985,-0.011394) , 
2, 0.141185, 1, 0, 0.93317,-0.00616005) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971505,-0.00589157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872582,0.0315497) , 
2, 0.11844, 1, 0, 0.939218,0.0138576) , 
3, 73.7641, 1, 0, 0.934382,-0.00214776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00180078,-0.012472) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000168469,-0.0133301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134269) , 
5, 0.0170953, 1, 0, 4.87e-05,-0.0247884) , 
0, 0.0117259, 1, 0, 0.000421665,-0.0244204) , 
0, 0.00315669, 1, 0, 0.508031,-0.0123152)    );
  // itree = 115
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949146,-0.00861119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944121,0.0178005) , 
0, 0.00170309, 1, 0, 0.948157,-0.00103543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547704,-0.0142766) , 
0, 0.00223544, 1, 0, 0.928685,-0.00473728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000200942,-0.0133035) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134165) , 
4, 0.0191294, 1, 0, 0,-0.0243356) , 
5, 0.0168375, 1, 0, 7.59964e-05,-0.0241317) , 
0, 0.0031564, 1, 0, 0.502993,-0.0136281)    );
  // itree = 116
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951545,-0.00145368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544468,-0.0180312) , 
0, 0.00180359, 1, 0, 0.922475,-0.0069004) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960047,-0.0115504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963652,0.0294067) , 
0, 0.0017951, 1, 0, 0.961865,0.0101653) , 
5, 0.0148617, 1, 0, 0.934019,-0.00189904) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000475267,-0.0131383) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134079) , 
4, 0.0191368, 1, 0, 0,-0.0237022) , 
5, 0.016958, 1, 0, 0.000181064,-0.0234041) , 
0, 0.0031564, 1, 0, 0.493226,-0.0120499)    );
  // itree = 117
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996297,-0.046679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990664,0.0586814) , 
0, 0.000149912, 1, 0, 0.994056,0.0071196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512169,-0.0227073) , 
0, 0.00157504, 1, 0, 0.882399,-0.000206232) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.105691,-0.0199724) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651015,-0.00775183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.23118e-05,-0.0173262) , 
4, 0.01823, 1, 0, 0.435813,-0.01689) , 
4, 0.00696206, 1, 0, 0.400593,-0.019938) , 
2, 0.0237995, 1, 0, 0.49644,-0.0160126)    );
  // itree = 118
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998386,0.0345129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98928,0.0528601) , 
0, 0.000224951, 1, 0, 0.994963,0.0076197) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.451702,-0.0333987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500539,-0.0062208) , 
5, 0.0134008, 1, 0, 0.484294,-0.0203102) , 
0, 0.00157504, 1, 0, 0.84893,-0.000367237) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.14481,-0.0231062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197184,-0.0148803) , 
6, 0.0174029, 1, 0, 0.174072,-0.0430219) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.482662,-0.00872634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00748855,-0.014629) , 
2, 0.327624, 1, 0, 0.371744,-0.0164617) , 
5, 0.0100743, 1, 0, 0.335301,-0.0213583) , 
2, 0.0476118, 1, 0, 0.497526,-0.0147285)    );
  // itree = 119
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998738,0.0410809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99808,0.0817937) , 
0, 0.000149599, 1, 0, 0.998477,0.00933205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534446,-0.0260482) , 
0, 0.00157091, 1, 0, 0.892023,0.00153647) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0866603,-0.0225068) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524299,-0.00968495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000771239,-0.0166137) , 
2, 0.341248, 1, 0, 0.428372,-0.0164923) , 
5, 0.00665382, 1, 0, 0.397073,-0.0200117) , 
2, 0.0238066, 1, 0, 0.493523,-0.0158126)    );
  // itree = 120
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.734839,-0.00242418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0278283,-0.0153875) , 
2, 0.0441982, 1, 0, 0.282202,-0.018963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903338,-0.00114983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546504,0.0250496) , 
2, 0.23577, 1, 0, 0.883015,0.00262276) , 
7, 6.86137e-05, 1, 0, 0.620684,-0.00680217) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0317614,-0.0152478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000297318,-0.0131907) , 
0, 0.0173618, 1, 0, 0.0133768,-0.0294759) , 
2, 0.309486, 1, 0, 0.500239,-0.011299)    );
  // itree = 121
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932509,0.0583398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707454,-0.0119257) , 
4, 0.00516558, 1, 0, 0.7848,0.00163107) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.503602,-0.0247143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000182944,-0.0132515) , 
0, 0.00473503, 1, 0, 0.0377911,-0.0244995) , 
2, 0.0238059, 1, 0, 0.171499,-0.0198223) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909861,0.00330991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715091,0.0223344) , 
2, 0.211176, 1, 0, 0.897483,0.00405699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15457,-0.0112989) , 
2, 0.260978, 1, 0, 0.821265,-0.000261086) , 
7, 5.99181e-05, 1, 0, 0.497654,-0.0100034)    );
  // itree = 122
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702075,-0.00632802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136173,-0.0156137) , 
2, 0.0475551, 1, 0, 0.24628,-0.0197555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902974,0.00302205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426711,-0.0188828) , 
4, 0.0179269, 1, 0, 0.868698,-0.000526968) , 
7, 6.4789e-05, 1, 0, 0.596226,-0.00894453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00349339,-0.0156846) , 
2, 0.333282, 1, 0, 0.499847,-0.0124684)    );
  // itree = 123
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846958,-0.0188971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955956,0.007388) , 
5, 0.00594207, 1, 0, 0.945898,0.00196202) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00140093,-0.0154782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133593) , 
0, 0.0132219, 1, 0, 0.00058437,-0.0233362) , 
0, 0.00286163, 1, 0, 0.653392,-0.00586593) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0200892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000122653,-0.0132798) , 
2, 0.19038, 1, 0, 7.27307e-05,-0.0254339) , 
4, 0.0191294, 1, 0, 0.498497,-0.0105053)    );
  // itree = 124
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863044,-0.0232128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949586,0.00528733) , 
5, 0.00583036, 1, 0, 0.942262,0.000643643) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00104258,-0.0150346) , 
7, -6.85419e-05, 1, 0, 0.000442635,-0.0223345) , 
0, 0.00286049, 1, 0, 0.65527,-0.00635827) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0205464) , 
6, 0.0191024, 1, 0, 0,-0.0257558) , 
4, 0.0191481, 1, 0, 0.502282,-0.0108871)    );
  // itree = 125
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959037,0.0108214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93826,-0.0319315) , 
7, 0.000253524, 1, 0, 0.956283,0.00240705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74405,-0.0106087) , 
0, 0.00210242, 1, 0, 0.936268,-0.000740015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000767962,-0.0127815) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000116129,-0.0132549) , 
4, 0.0174013, 1, 0, 6.33951e-05,-0.0187284) , 
5, 0.016958, 1, 0, 0.000343626,-0.0182107) , 
0, 0.00315552, 1, 0, 0.510284,-0.00869177)    );
  // itree = 126
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998145,0.0625642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815004,-0.0246163) , 
0, 5.69768e-05, 1, 0, 0.953138,-0.00717514) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945419,0.0160437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647093,-0.00865567) , 
0, 0.00221538, 1, 0, 0.905058,0.0090549) , 
0, 0.00119673, 1, 0, 0.934424,-0.000858147) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000587694,-0.0128919) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133304) , 
4, 0.0191423, 1, 0, 0,-0.0182794) , 
5, 0.0167869, 1, 0, 0.00022328,-0.0178281) , 
0, 0.00315479, 1, 0, 0.501233,-0.00872716)    );
  // itree = 127
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961866,-0.00166421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793256,-0.0108796) , 
0, 0.00210242, 1, 0, 0.946409,-0.0036622) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000694334,-0.0127978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133326) , 
5, 0.0167213, 1, 0, 0.000276422,-0.0174846) , 
0, 0.00315552, 1, 0, 0.593991,-0.00881081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00402546,-0.0145611) , 
2, 0.333282, 1, 0, 0.500096,-0.0114103)    );
  // itree = 128
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953337,-0.00843711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907926,0.0102779) , 
0, 0.00151545, 1, 0, 0.939753,0.000661245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00176491,-0.0152198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133255) , 
0, 0.0133766, 1, 0, 0.00071612,-0.0199114) , 
0, 0.00289582, 1, 0, 0.647166,-0.00574881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0193582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013318) , 
0, 0.0237314, 1, 0, 0,-0.0219341) , 
4, 0.0191329, 1, 0, 0.494906,-0.00955677)    );
  // itree = 129
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949222,7.33167e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583082,-0.0140835) , 
0, 0.00209428, 1, 0, 0.928302,-0.00295535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963073,0.0245784) , 
7, 0.000301292, 1, 0, 0.931315,-0.000716412) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000641374,-0.0127924) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133121) , 
4, 0.0191566, 1, 0, 0,-0.0169051) , 
5, 0.0170929, 1, 0, 0.00025556,-0.0164026) , 
0, 0.00315479, 1, 0, 0.495467,-0.00805944)    );
  // itree = 130
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.089249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984579,-0.231386) , 
7, 0.000110408, 1, 0, 0.995518,0.00493812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534147,-0.0237834) , 
0, 0.00157091, 1, 0, 0.888659,-0.00170671) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0958711,-0.0214256) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520388,-0.00845185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00189291,-0.0155426) , 
2, 0.341232, 1, 0, 0.430794,-0.0122476) , 
5, 0.00678647, 1, 0, 0.396639,-0.0149642) , 
2, 0.0238066, 1, 0, 0.492724,-0.0123752)    );
  // itree = 131
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996749,0.00134733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995902,0.0712821) , 
0, 0.000449903, 1, 0, 0.996433,0.00696045) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.329094,-0.0166118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685089,-5.07754e-05) , 
6, 0.0278364, 1, 0, 0.468084,-0.0114726) , 
0, 0.00157504, 1, 0, 0.847171,0.00175301) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655807,-0.0252826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00188155,-0.0124797) , 
0, 0.00222548, 1, 0, 0.17716,-0.0341039) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932848,0.00219285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000215687,-0.0131292) , 
0, 0.00315552, 1, 0, 0.385414,-0.00834557) , 
5, 0.0102034, 1, 0, 0.343391,-0.0135433) , 
2, 0.0476118, 1, 0, 0.501813,-0.0087331)    );
  // itree = 132
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964852,0.00776445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000231694,-0.0149898) , 
0, 0.00284007, 1, 0, 0.747362,-0.00111819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0168532) , 
4, 0.0191438, 1, 0, 0.612224,-0.00488766) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.029598,-0.015255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013295) , 
0, 0.0173618, 1, 0, 0.0132268,-0.0240217) , 
2, 0.309472, 1, 0, 0.497148,-0.00856358)    );
  // itree = 133
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971678,-0.00264987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581618,-0.0069714) , 
2, 0.188247, 1, 0, 0.936296,-0.00346592) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98399,0.0104266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84133,0.0171832) , 
2, 0.118292, 1, 0, 0.936151,0.0124217) , 
3, 73.7641, 1, 0, 0.936267,-0.000240387) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000286844,-0.0130275) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132898) , 
4, 0.0191048, 1, 0, 0,-0.015209) , 
5, 0.0170694, 1, 0, 0.000111186,-0.0148473) , 
0, 0.00315669, 1, 0, 0.498568,-0.00706982)    );
  // itree = 134
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862459,0.0319762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722307,-0.0268334) , 
2, 0.0102016, 1, 0, 0.803698,0.000700617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615857,-0.0245522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.09282e-05,-0.0132024) , 
0, 0.00315669, 1, 0, 0.0382138,-0.0189022) , 
2, 0.0238055, 1, 0, 0.170614,-0.0155116) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86449,-0.00179299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.412669,-0.0268438) , 
5, 0.0169868, 1, 0, 0.810672,-0.00530566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943695,0.0251417) , 
7, 0.000307478, 1, 0, 0.820815,-0.00295796) , 
7, 5.94779e-05, 1, 0, 0.501508,-0.00912293)    );
  // itree = 135
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964152,0.0129468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873484,-0.0345255) , 
4, 0.0166985, 1, 0, 0.957002,0.00213467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737176,-0.0097615) , 
0, 0.00210242, 1, 0, 0.93533,-0.000820298) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132721) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 9.26337e-05,-0.013206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013279) , 
4, 0.0191402, 1, 0, 4.72785e-05,-0.0143911) , 
5, 0.010177, 1, 0, 3.70009e-05,-0.0142122) , 
0, 0.00315669, 1, 0, 0.499714,-0.00705764)    );
  // itree = 136
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994328,-0.0494519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994409,0.0608803) , 
0, 0.000449894, 1, 0, 0.994358,0.0032165) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.349143,-0.0226589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712801,-0.0176649) , 
6, 0.0279339, 1, 0, 0.485052,-0.0169127) , 
0, 0.00157504, 1, 0, 0.848471,-0.00254938) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60022,-0.0212764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000167346,-0.0131011) , 
0, 0.00335063, 1, 0, 0.17753,-0.0300808) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.480369,-0.00534522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00594105,-0.0148372) , 
2, 0.327628, 1, 0, 0.371648,-0.00905198) , 
5, 0.010273, 1, 0, 0.331289,-0.0134241) , 
2, 0.0476132, 1, 0, 0.490443,-0.0100776)    );
  // itree = 137
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.727874,-0.00371129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0166958,-0.01581) , 
2, 0.0475987, 1, 0, 0.264896,-0.0132976) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906425,-0.00257125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538576,0.0118853) , 
2, 0.222017, 1, 0, 0.873542,0.00121746) , 
7, 6.86136e-05, 1, 0, 0.602845,-0.00523817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00380869,-0.0154239) , 
2, 0.333252, 1, 0, 0.507269,-0.00787788)    );
  // itree = 138
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961298,0.0169894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921412,-0.0192651) , 
3, 47.1465, 1, 0, 0.945488,-0.00345387) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00162937,-0.0186848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.8747e-05,-0.0132056) , 
4, 0.0121942, 1, 0, 0.000474968,-0.0159606) , 
0, 0.00157834, 1, 0, 0.171428,-0.0136982) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631858,-0.0288166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912344,0.00474187) , 
5, 0.00838509, 1, 0, 0.893484,0.00106512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141113,-0.00884291) , 
2, 0.261715, 1, 0, 0.813607,-0.00154618) , 
7, 5.73802e-05, 1, 0, 0.500433,-0.00747239)    );
  // itree = 139
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964922,0.00502369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129877,-0.0126259) , 
0, 0.00157834, 1, 0, 0.471714,-0.00775584) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619061,-0.0377203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540637,-0.0109032) , 
3, 47.5953, 1, 0, 0.581071,-0.0293666) , 
6, 0.0299031, 1, 0, 0.48649,-0.0106759) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.55303,-0.00931062) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.458462,-0.00412865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840905,0.0478221) , 
4, 0.0173936, 1, 0, 0.674125,0.016349) , 
5, 0.0170694, 1, 0, 0.640357,0.00797336) , 
6, 0.0330525, 1, 0, 0.505078,-0.00842299)    );
  // itree = 140
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793724,-0.0054211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00778456,-0.0183437) , 
2, 0.0714198, 1, 0, 0.381931,-0.0146284) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864318,-0.0066659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836569,0.0133063) , 
3, 57.6139, 1, 0, 0.854908,0.000315449) , 
7, 8.05057e-05, 1, 0, 0.656259,-0.00596095) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0230876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132552) , 
4, 0.0257644, 1, 0, 0,-0.0183505) , 
4, 0.0191369, 1, 0, 0.497877,-0.00895107)    );
  // itree = 141
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763854,-0.00712568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976636,0.0402304) , 
6, 0.0329438, 1, 0, 0.790576,-0.00164686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0214757,-0.0183131) , 
5, 0.0182647, 1, 0, 0.648602,-0.00505721) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.024457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132507) , 
4, 0.0257777, 1, 0, 0,-0.0192102) , 
4, 0.0191481, 1, 0, 0.494955,-0.00840991)    );
  // itree = 142
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954425,-0.00120272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000426248,-0.0147111) , 
0, 0.00286586, 1, 0, 0.728819,-0.00456232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0193729) , 
4, 0.0191628, 1, 0, 0.590355,-0.00725722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00380976,-0.0160045) , 
2, 0.333252, 1, 0, 0.495511,-0.00956193)    );
  // itree = 143
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964628,0.00396436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000247289,-0.0157398) , 
0, 0.00284432, 1, 0, 0.757964,-0.00204101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.04004,-0.0140352) , 
2, 0.285671, 1, 0, 0.646411,-0.00531333) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0261268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000125098,-0.0130954) , 
4, 0.0257653, 1, 0, 7.2942e-05,-0.0187289) , 
4, 0.0191367, 1, 0, 0.494664,-0.00846303)    );
  // itree = 144
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758991,-0.00641788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97085,0.0283399) , 
7, 0.000270076, 1, 0, 0.786552,-0.00223481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000132585,-0.0190054) , 
5, 0.0184863, 1, 0, 0.652672,-0.00503745) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000124067,-0.0130838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0228583) , 
6, 0.0208624, 1, 0, 7.33326e-05,-0.0160845) , 
4, 0.0191294, 1, 0, 0.499081,-0.00763741)    );
  // itree = 145
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871193,0.00306643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629208,-0.0429929) , 
3, 113.092, 1, 0, 0.857974,-0.000702326) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.318004,-0.0247189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20352,-0.0183256) , 
3, 37.1115, 1, 0, 0.25046,-0.0172132) , 
4, 0.0173953, 1, 0, 0.752405,-0.00357147) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603716,-0.0161458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850675,-0.0177023) , 
6, 0.0313544, 1, 0, 0.720891,-0.0414963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0117635,-0.0127465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590144,0.00512134) , 
7, 0.000196464, 1, 0, 0.0884876,-0.00999288) , 
0, 0.00157739, 1, 0, 0.166866,-0.0138973) , 
2, 0.142753, 1, 0, 0.499989,-0.00802277)    );
  // itree = 146
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974518,0.0111125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.276018,-0.0230098) , 
2, 0.0238037, 1, 0, 0.652864,-0.0179109) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950178,0.000544059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000450803,-0.0151847) , 
0, 0.00282929, 1, 0, 0.658719,-0.00419041) , 
5, 0.00782428, 1, 0, 0.657688,-0.00660688) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0225532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000118972,-0.0130775) , 
4, 0.0257759, 1, 0, 7.07495e-05,-0.0155367) , 
4, 0.0191402, 1, 0, 0.497434,-0.00878297)    );
  // itree = 147
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686556,-0.00512835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940536,0.0314092) , 
7, 0.00026805, 1, 0, 0.718177,-0.000833088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.017907) , 
4, 0.0191566, 1, 0, 0.570157,-0.00368949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000259203,-0.0167438) , 
2, 0.357099, 1, 0, 0.495044,-0.00568023)    );
  // itree = 148
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901875,0.0182635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260265,-0.0328261) , 
4, 0.00699615, 1, 0, 0.665411,-0.00339223) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0175583,-0.0191954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132198) , 
4, 0.0104415, 1, 0, 0.00423122,-0.0134726) , 
2, 0.0476002, 1, 0, 0.165959,-0.0110069) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81451,0.00329674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8297,-0.0168824) , 
4, 0.0129369, 1, 0, 0.822523,-0.00681621) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874894,-0.00742303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595236,0.0222255) , 
2, 0.142354, 1, 0, 0.778285,0.00759345) , 
3, 62.9854, 1, 0, 0.809735,-0.00265078) , 
7, 5.73802e-05, 1, 0, 0.494794,-0.00673867)    );
  // itree = 149
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886574,-0.020289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961242,0.0106091) , 
5, 0.00793773, 1, 0, 0.947196,0.00211362) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000884272,-0.016523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013224) , 
0, 0.0132173, 1, 0, 0.000369795,-0.0133833) , 
0, 0.00286049, 1, 0, 0.658357,-0.00261386) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0231699) , 
7, -0.00049176, 1, 0, 0,-0.0145923) , 
4, 0.0191346, 1, 0, 0.504625,-0.00541095)    );
  // itree = 150
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591122,-0.0172608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741297,-0.0032422) , 
5, 0.00499262, 1, 0, 0.731779,-0.00360433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0177053) , 
4, 0.0191178, 1, 0, 0.59113,-0.00559469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0038142,-0.0159112) , 
2, 0.333293, 1, 0, 0.498234,-0.00745104)    );
  // itree = 151
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561482,-0.0110402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460141,-0.0331457) , 
3, 36.9574, 1, 0, 0.506912,-0.0310901) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951971,0.00335323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000486472,-0.0146412) , 
0, 0.00289582, 1, 0, 0.666326,-0.00223708) , 
5, 0.00532457, 1, 0, 0.653456,-0.00456649) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0242136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132086) , 
0, 0.0237154, 1, 0, 0,-0.0146251) , 
4, 0.0191288, 1, 0, 0.50483,-0.00685428)    );
  // itree = 152
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942484,0.0250645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.280295,-0.0221647) , 
2, 0.0147196, 1, 0, 0.542513,-0.0151932) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946471,0.00248517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132149) , 
0, 0.00473329, 1, 0, 0.625055,-0.00216706) , 
5, 0.00678871, 1, 0, 0.613348,-0.00401459) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0304277,-0.0147577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132054) , 
0, 0.0189401, 1, 0, 0.013687,-0.0150674) , 
2, 0.309363, 1, 0, 0.503553,-0.0060383)    );
  // itree = 153
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910033,0.010161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349581,-0.00875741) , 
4, 0.0070042, 1, 0, 0.705122,0.000756212) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.027125,-0.0187882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132026) , 
4, 0.0104421, 1, 0, 0.00661998,-0.0121032) , 
2, 0.0476132, 1, 0, 0.176289,-0.00897958) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85159,0.00181834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415477,-0.0220612) , 
5, 0.0170864, 1, 0, 0.803675,-0.00128751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956951,0.0450356) , 
7, 0.000307551, 1, 0, 0.814952,0.000826225) , 
7, 6.01816e-05, 1, 0, 0.498996,-0.00402484)    );
  // itree = 154
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960571,0.0024871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000529011,-0.0141148) , 
0, 0.00286586, 1, 0, 0.731367,-0.00182306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0175691) , 
4, 0.0191099, 1, 0, 0.598,-0.003681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00395422,-0.0153078) , 
2, 0.333252, 1, 0, 0.503978,-0.00545999)    );
  // itree = 155
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802473,-0.00367725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375993,0.0159417) , 
2, 0.217541, 1, 0, 0.765706,-0.000206219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0200533) , 
4, 0.0191317, 1, 0, 0.633067,-0.00278439) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0646371,-0.0127709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131963) , 
0, 0.0142038, 1, 0, 0.0226377,-0.0125552) , 
2, 0.285645, 1, 0, 0.503046,-0.00486556)    );
  // itree = 156
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80477,-0.0203117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00017698,-0.0129123) , 
0, 0.00311234, 1, 0, 0.221364,-0.0160051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781334,0.000835344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226437,-0.0146057) , 
4, 0.0173969, 1, 0, 0.648134,-0.00210561) , 
6, 0.0104557, 1, 0, 0.581592,-0.00427281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000769269,-0.0158503) , 
2, 0.357099, 1, 0, 0.503185,-0.00585025)    );
  // itree = 157
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69451,-0.00793071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956151,0.0250356) , 
7, 0.00026805, 1, 0, 0.727275,-0.00319769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0180783) , 
4, 0.0191111, 1, 0, 0.593951,-0.00495229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0036365,-0.0166812) , 
2, 0.333293, 1, 0, 0.501472,-0.00680989)    );
  // itree = 158
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997381,0.0547803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556248,-0.00906223) , 
0, 0.00157504, 1, 0, 0.902116,0.00252997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819647,-0.0510458) , 
3, 74.2272, 1, 0, 0.888305,-0.0005785) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769715,-0.0177882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013186) , 
0, 0.00325718, 1, 0, 0.325156,-0.019282) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508238,-0.00575346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00138998,-0.0156013) , 
2, 0.341136, 1, 0, 0.419663,-0.00608656) , 
5, 0.0100814, 1, 0, 0.399961,-0.00883743) , 
2, 0.0238037, 1, 0, 0.497274,-0.00719166)    );
  // itree = 159
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968369,0.00951661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00112382,-0.0148388) , 
0, 0.00284432, 1, 0, 0.762358,0.00124848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0435671,-0.0127912) , 
2, 0.285679, 1, 0, 0.65016,-0.00138016) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0243812) , 
6, 0.0208345, 1, 0, 0,-0.0127766) , 
4, 0.019146, 1, 0, 0.496509,-0.00407347)    );
  // itree = 160
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.366599,-0.02524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579885,-0.0132624) , 
5, 0.00510899, 1, 0, 0.43705,-0.0170141) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683723,0.00218078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.42414e-05,-0.0183077) , 
4, 0.015635, 1, 0, 0.484279,-0.00238327) , 
5, 0.00630833, 1, 0, 0.477563,-0.00446378) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.493853,-0.0406489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760705,-0.0167616) , 
1, 1.1189, 1, 0, 0.663406,-0.0253702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.714228,-0.0357929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447604,0.00119964) , 
2, 0.119375, 1, 0, 0.55268,-0.0091533) , 
4, 0.0173927, 1, 0, 0.619341,-0.0189164) , 
6, 0.0313134, 1, 0, 0.503291,-0.00708642)    );
  // itree = 161
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959376,-0.00209466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907086,0.0112803) , 
0, 0.00165209, 1, 0, 0.946532,0.00249458) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000828807,-0.0147185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131942) , 
0, 0.0133816, 1, 0, 0.000351174,-0.00942409) , 
0, 0.00289582, 1, 0, 0.645697,-0.00129492) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0211631) , 
7, -0.000498053, 1, 0, 0,-0.00982337) , 
4, 0.0191674, 1, 0, 0.496503,-0.00326549)    );
  // itree = 162
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961581,0.00370317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00087123,-0.0148205) , 
0, 0.00284782, 1, 0, 0.736818,-0.000942088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0188675) , 
4, 0.0191496, 1, 0, 0.600841,-0.00289679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00226413,-0.0149383) , 
2, 0.333252, 1, 0, 0.504129,-0.00432099)    );
  // itree = 163
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.375208,-0.012843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877512,0.00797933) , 
7, 6.19225e-05, 1, 0, 0.67429,-0.00052857) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000891599,-0.0203289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000117213,-0.0129143) , 
4, 0.0236207, 1, 0, 0.000424347,-0.0100802) , 
4, 0.0156581, 1, 0, 0.473889,-0.00336914) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852414,-0.0426001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961158,-0.0149017) , 
5, 0.0168657, 1, 0, 0.909373,-0.0351494) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.422727,-0.0187834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476077,0.00196555) , 
6, 0.0328117, 1, 0, 0.461119,-0.00430503) , 
0, 0.0015611, 1, 0, 0.611695,-0.0146662) , 
6, 0.0313143, 1, 0, 0.499176,-0.00544212)    );
  // itree = 164
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963502,0.0136551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929526,-0.0639044) , 
6, 0.0243961, 1, 0, 0.95877,0.000427666) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.754891,-0.0144926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000342152,-0.0124907) , 
0, 0.00308153, 1, 0, 0.0827037,-0.00957455) , 
0, 0.00157834, 1, 0, 0.401674,-0.0059328) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610044,-0.0166293) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951908,-0.0139012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848271,0.0223113) , 
0, 0.00164183, 1, 0, 0.897298,0.00586274) , 
4, 0.0145429, 1, 0, 0.848754,0.00170671) , 
7, 0.000196749, 1, 0, 0.495241,-0.00433397)    );
  // itree = 165
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963781,0.00138381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000649993,-0.0148719) , 
0, 0.00286586, 1, 0, 0.766574,-0.00160426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0183202) , 
4, 0.0191111, 1, 0, 0.637763,-0.00299617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0214533,-0.0156697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0314252,-0.00526315) , 
4, 0.01741, 1, 0, 0.0266288,-0.0104109) , 
2, 0.285679, 1, 0, 0.509311,-0.00455465)    );
  // itree = 166
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958646,0.0265178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2719,-0.020477) , 
2, 0.0158662, 1, 0, 0.563285,-0.0112815) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643258,-0.0100798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557058,0.00527413) , 
3, 50.3045, 1, 0, 0.60675,-0.00246295) , 
5, 0.00692206, 1, 0, 0.600583,-0.0037141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00281378,-0.0151631) , 
2, 0.333282, 1, 0, 0.504086,-0.00495615)    );
  // itree = 167
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595309,-0.019499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669725,-0.00124808) , 
5, 0.00668255, 1, 0, 0.659827,-0.002141) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0490422,-0.013043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131677) , 
0, 0.0157834, 1, 0, 0.0199501,-0.0109896) , 
2, 0.285666, 1, 0, 0.529302,-0.00394598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.178898,-0.0185925) , 
3, 126.113, 1, 0, 0.498312,-0.00486094)    );
  // itree = 168
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710392,-0.00285123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950852,0.0334388) , 
7, 0.00026805, 1, 0, 0.740961,0.000368479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0206522) , 
4, 0.0191487, 1, 0, 0.600021,-0.00170809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00491649,-0.0145658) , 
2, 0.333293, 1, 0, 0.509175,-0.00320288)    );
  // itree = 169
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996278,0.0484124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986019,-0.266565) , 
7, 0.000158171, 1, 0, 0.994415,0.00309085) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47826,-0.0318204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532516,-0.00602163) , 
5, 0.0133538, 1, 0, 0.514978,-0.0102201) , 
0, 0.00157091, 1, 0, 0.86031,-0.00063239) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994866,0.0488124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613146,-0.0233538) , 
0, 7.51532e-05, 1, 0, 0.869612,-0.0223345) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00796288,-0.0212601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21739,-0.00168488) , 
4, 0.0121782, 1, 0, 0.165531,-0.00571197) , 
0, 0.00157834, 1, 0, 0.33469,-0.00970562) , 
2, 0.0476132, 1, 0, 0.498627,-0.00687575)    );
  // itree = 170
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971477,0.0128464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683105,-0.0383461) , 
4, 0.00870962, 1, 0, 0.889029,-0.00283421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0490528,-0.0192345) , 
2, 0.0710972, 1, 0, 0.558374,-0.0110532) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954886,0.00410444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00206869,-0.0148217) , 
0, 0.00251678, 1, 0, 0.751215,-1.40546e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00220536,-0.0258155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000105698,-0.0129168) , 
0, 0.0238858, 1, 0, 0.00091172,-0.00997166) , 
5, 0.0183938, 1, 0, 0.48008,-0.00361242) , 
5, 0.00990471, 1, 0, 0.501093,-0.00560941)    );
  // itree = 171
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921785,0.00866272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699695,0.0367866) , 
2, 0.0498744, 1, 0, 0.88206,0.00585037) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789284,0.0069938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68523,-0.0265276) , 
2, 0.0453424, 1, 0, 0.743024,-0.00442058) , 
4, 0.0104583, 1, 0, 0.80152,-9.93612e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172351,-0.0184319) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506331,0.00119484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179097,-0.0128793) , 
5, 0.0159846, 1, 0, 0.291342,-0.00443246) , 
5, 0.0101696, 1, 0, 0.241844,-0.00768592) , 
2, 0.0952265, 1, 0, 0.504668,-0.00412327)    );
  // itree = 172
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863047,0.0200389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130523,-0.0140757) , 
2, 0.0238059, 1, 0, 0.28945,-0.00647173) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97315,0.0245293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450805,-0.0102012) , 
0, 0.00178458, 1, 0, 0.877913,0.00546176) , 
7, 0.000101361, 1, 0, 0.457345,-0.00306698) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836111,-0.00830096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722873,-0.0338) , 
2, 0.0454207, 1, 0, 0.752003,-0.021172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.235756,0.00599697) , 
2, 0.238118, 1, 0, 0.626241,-0.0141346) , 
6, 0.0295733, 1, 0, 0.498847,-0.00578657)    );
  // itree = 173
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530277,-0.01185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675311,-0.022224) , 
6, 0.0314769, 1, 0, 0.545085,-0.00772549) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941194,0.00126335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000163059,-0.0127639) , 
0, 0.00315669, 1, 0, 0.47215,-0.00215709) , 
3, 25.1528, 1, 0, 0.494795,-0.00388599) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677313,-0.0324741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652541,-0.00262084) , 
6, 0.0357029, 1, 0, 0.665317,-0.0157958) , 
6, 0.0347915, 1, 0, 0.505623,-0.00464226)    );
  // itree = 174
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892954,0.020543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.786785,-0.00706693) , 
4, 0.010431, 1, 0, 0.83261,0.0013916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447833,-0.0458387) , 
3, 112.723, 1, 0, 0.804631,-0.000726577) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731924,0.00480068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866493,-0.0284891) , 
4, 0.0129532, 1, 0, 0.824391,-0.0254327) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00464918,-0.016455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171346,-0.000947385) , 
4, 0.0121977, 1, 0, 0.127816,-0.00386932) , 
0, 0.00157739, 1, 0, 0.240105,-0.00734538) , 
2, 0.0952236, 1, 0, 0.501595,-0.00427953)    );
  // itree = 175
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77216,-0.00367286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972467,0.0276155) , 
6, 0.0330601, 1, 0, 0.797574,1.09139e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.021321) , 
5, 0.0185092, 1, 0, 0.657972,-0.00216495) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000134,-0.0127782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.023647) , 
6, 0.0190996, 1, 0, 7.44195e-05,-0.00932771) , 
4, 0.0191381, 1, 0, 0.503434,-0.00384746)    );
  // itree = 176
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.281854,-0.0156472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750331,0.000619501) , 
4, 0.00367159, 1, 0, 0.718853,-0.000790887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0204284) , 
4, 0.0191496, 1, 0, 0.577298,-0.00259522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00064609,-0.0153618) , 
2, 0.357083, 1, 0, 0.500494,-0.00367895)    );
  // itree = 177
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967219,0.0794895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912385,-0.0398765) , 
8, 0.00941381, 1, 0, 0.938803,0.00208991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0940908,-0.0219534) , 
2, 0.023783, 1, 0, 0.441466,-0.0133231) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726339,0.000451455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0181429) , 
4, 0.0191199, 1, 0, 0.589096,-0.00137253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000727885,-0.0169671) , 
2, 0.356958, 1, 0, 0.508455,-0.00291478) , 
5, 0.00683815, 1, 0, 0.499058,-0.00437478)    );
  // itree = 178
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970837,0.0456671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922482,-0.0791483) , 
8, 0.00941381, 1, 0, 0.946407,-0.00316604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0939934,-0.0186805) , 
2, 0.023783, 1, 0, 0.447609,-0.0114569) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831613,-0.0148901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65924,0.0112167) , 
2, 0.0612095, 1, 0, 0.76494,-0.000104446) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771325,-0.0118562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0986225,-0.00678329) , 
0, 0.00157623, 1, 0, 0.183978,-0.00752012) , 
2, 0.142835, 1, 0, 0.507569,-0.00338966) , 
5, 0.00671803, 1, 0, 0.499523,-0.00447211)    );
  // itree = 179
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580724,-0.00311919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530688,-0.0136989) , 
3, 13.8307, 1, 0, 0.542068,-0.00646348) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.138937,-0.0115266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82654,0.0131801) , 
7, 6.01815e-05, 1, 0, 0.469754,0.00158254) , 
3, 72.6077, 1, 0, 0.526475,-0.00472845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147951,-0.0229239) , 
3, 138.625, 1, 0, 0.502149,-0.00560038)    );
  // itree = 180
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778543,-0.0248129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942526,0.000891657) , 
5, 0.00528499, 1, 0, 0.88013,-0.0123146) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131438) , 
4, 0.0191612, 1, 0, 0,-0.00439718) , 
0, 0.00315669, 1, 0, 0.169173,-0.00591901) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951626,-0.0130475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696469,0.0036189) , 
0, 0.00138232, 1, 0, 0.83405,-0.00173845) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934036,-0.013033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.716485,0.0125886) , 
2, 0.0476074, 1, 0, 0.789546,0.0073838) , 
3, 49.4887, 1, 0, 0.815996,0.00196215) , 
7, 5.99181e-05, 1, 0, 0.495052,-0.00194837)    );
  // itree = 181
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9984,0.0373214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988709,0.0504464) , 
2, 0.156006, 1, 0, 0.997197,0.00423205) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900801,-0.00490469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642882,-0.0422594) , 
6, 0.0227161, 1, 0, 0.853039,-0.0325866) , 
0, 7.51467e-05, 1, 0, 0.944726,-0.0091693) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00703454,-0.0225743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.04187e-05,-0.012935) , 
0, 0.0151056, 1, 0, 0.00198952,-0.00915768) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951289,0.0268931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000619009,-0.0126219) , 
0, 0.0030753, 1, 0, 0.47487,0.00916646) , 
6, 0.0243563, 1, 0, 0.215365,-0.000889376) , 
0, 0.0015782, 1, 0, 0.495991,-0.00407513)    );
  // itree = 182
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948263,0.00644235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000423909,-0.0148701) , 
0, 0.00278694, 1, 0, 0.667133,0.000423289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0197138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000230807,-0.0123871) , 
5, 0.0167545, 1, 0, 0.00013837,-0.0063975) , 
4, 0.0173974, 1, 0, 0.489329,-0.00139496) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64093,-0.0255936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644444,-0.0153974) , 
3, 47.6838, 1, 0, 0.642525,-0.0196226) , 
6, 0.0347914, 1, 0, 0.499425,-0.00259624)    );
  // itree = 183
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990123,0.0553592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000771897,-0.0152179) , 
0, 0.00157153, 1, 0, 0.290963,-0.0013106) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931104,-0.0326823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724418,-0.00139884) , 
0, 0.00135166, 1, 0, 0.828326,-0.0129209) , 
7, 8.23201e-05, 1, 0, 0.554422,-0.00700291) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735411,-0.00792728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296064,0.00826756) , 
2, 0.132621, 1, 0, 0.580499,-6.11731e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0184815,-0.0116721) , 
2, 0.309486, 1, 0, 0.473068,-0.00145245) , 
3, 25.2185, 1, 0, 0.498338,-0.00317648)    );
  // itree = 184
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929831,0.060462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825572,-0.00813219) , 
2, 0.0103585, 1, 0, 0.867343,0.00127777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.788126,-0.0344784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.765791,-0.0215375) , 
3, 37.3756, 1, 0, 0.777295,-0.0119568) , 
2, 0.0362723, 1, 0, 0.852508,-0.000902558) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638635,-0.0191417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000358103,-0.0133183) , 
0, 0.00222311, 1, 0, 0.172195,-0.0186058) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644819,0.00180372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149108,-0.00900574) , 
2, 0.176867, 1, 0, 0.378975,-0.00337452) , 
5, 0.0101696, 1, 0, 0.33891,-0.00632565) , 
2, 0.0476132, 1, 0, 0.500419,-0.00462027)    );
  // itree = 185
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919884,-0.0386393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963392,0.0762258) , 
5, 0.00488544, 1, 0, 0.943756,-0.000895714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0974121,-0.0205457) , 
2, 0.0237805, 1, 0, 0.441466,-0.0114671) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676469,0.0079988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0172905) , 
4, 0.0156564, 1, 0, 0.460476,0.000571435) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684014,0.0208533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644659,-0.0136608) , 
1, 1.06571, 1, 0, 0.649542,-0.00786492) , 
6, 0.0295733, 1, 0, 0.512578,-0.00175341) , 
5, 0.00683815, 1, 0, 0.502592,-0.0031174)    );
  // itree = 186
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664756,-0.00355908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330695,-0.0171995) , 
3, 125.659, 1, 0, 0.644608,-0.0027973) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876236,0.0192488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665747,0.0192279) , 
2, 0.119338, 1, 0, 0.759958,0.0112463) , 
6, 0.0347913, 1, 0, 0.653024,-0.00177268) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0248512) , 
6, 0.0191086, 1, 0, 0,-0.00632987) , 
4, 0.0191255, 1, 0, 0.502336,-0.00282427)    );
  // itree = 187
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.387642,-0.0133817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892925,0.0111158) , 
7, 6.48597e-05, 1, 0, 0.683889,0.000790533) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000172718,-0.0244182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000109383,-0.0127089) , 
4, 0.0236198, 1, 0, 0.00013394,-0.00687757) , 
4, 0.0156581, 1, 0, 0.470379,-0.00160392) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87768,-0.035305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967204,-0.000659108) , 
7, 0.000285002, 1, 0, 0.924954,-0.0207429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606439,0.0214416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376278,-0.0139426) , 
5, 0.0171298, 1, 0, 0.463072,-0.00184332) , 
0, 0.00156393, 1, 0, 0.615226,-0.00806926) , 
6, 0.0313144, 1, 0, 0.496402,-0.00276548)    );
  // itree = 188
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989971,0.00520255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454919,-0.0197409) , 
0, 0.00157091, 1, 0, 0.800993,-0.00336339) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918726,-0.0328363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374904,-0.00407092) , 
0, 0.00157776, 1, 0, 0.595726,-0.0167842) , 
2, 0.0850133, 1, 0, 0.76841,-0.00549375) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00911786,-0.0125628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131377) , 
4, 0.0156581, 1, 0, 0.00380442,-0.00650299) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.5887,0.0141052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0525901,-0.010155) , 
2, 0.282227, 1, 0, 0.40446,0.00440711) , 
6, 0.0226243, 1, 0, 0.200745,-0.00114018) , 
2, 0.119029, 1, 0, 0.49673,-0.00341017)    );
  // itree = 189
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963529,0.000801368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965868,0.0512333) , 
0, 0.00104357, 1, 0, 0.964143,0.00711608) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00206161,-0.0161867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131383) , 
4, 0.0139151, 1, 0, 0.000719369,-0.00652561) , 
0, 0.00157623, 1, 0, 0.369995,-0.00129682) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991648,0.0349102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741305,-0.0500086) , 
0, 0.000224285, 1, 0, 0.944168,-0.0157212) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.46732,0.00147208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149188,-0.022487) , 
1, 1.48504, 1, 0, 0.40975,-0.00194905) , 
0, 0.00157032, 1, 0, 0.612949,-0.00718556) , 
6, 0.0208768, 1, 0, 0.499659,-0.00443963)    );
  // itree = 190
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647513,-0.001547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415772,-0.0181581) , 
4, 0.0154528, 1, 0, 0.616492,-0.00275107) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958219,-0.0192282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902986,0.0434453) , 
0, 0.00199999, 1, 0, 0.930291,0.0105234) , 
7, 0.000269265, 1, 0, 0.652457,-0.00122967) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0208934) , 
6, 0.0190996, 1, 0, 0,-0.00622774) , 
4, 0.0191255, 1, 0, 0.50359,-0.00237005)    );
  // itree = 191
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792197,-0.00674532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493309,0.0164647) , 
5, 0.0119583, 1, 0, 0.654303,0.000361887) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200395,-0.0134225) , 
7, -0.000144174, 1, 0, 0.00740276,-0.00691798) , 
2, 0.21425, 1, 0, 0.455894,-0.0018709) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832151,-0.0214103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46042,-0.0248581) , 
4, 0.0177735, 1, 0, 0.755562,-0.0138603) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.266761,-0.00574245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374742,0.0139489) , 
3, 63.0204, 1, 0, 0.314616,0.00203027) , 
2, 0.214458, 1, 0, 0.614892,-0.00879088) , 
6, 0.0295742, 1, 0, 0.494199,-0.00353801)    );
  // itree = 192
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996204,0.0520408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917137,-0.110674) , 
6, 0.0105285, 1, 0, 0.957434,-0.00251728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.100684,-0.0162444) , 
2, 0.0237805, 1, 0, 0.46542,-0.00905151) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949548,0.00261618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000598423,-0.0166788) , 
0, 0.00286049, 1, 0, 0.660539,-0.00149223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.96031e-05,-0.0196817) , 
4, 0.0191288, 1, 0, 0.511839,-0.00255929) , 
5, 0.00686921, 1, 0, 0.505347,-0.00346724)    );
  // itree = 193
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609047,0.00792415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000483904,-0.0158695) , 
2, 0.0679932, 1, 0, 0.217153,-0.00342146) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905699,0.000299328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.47474,0.0164019) , 
2, 0.220775, 1, 0, 0.860147,0.0026103) , 
7, 5.94777e-05, 1, 0, 0.575828,-5.68218e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00109566,-0.0155392) , 
2, 0.357099, 1, 0, 0.495833,-0.00111473)    );
  // itree = 194
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689907,0.000331857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0184131) , 
4, 0.0156901, 1, 0, 0.500818,-0.00169343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151121,-0.0237542) , 
3, 125.972, 1, 0, 0.471171,-0.00267302) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88556,-0.0340271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975328,-0.0168078) , 
5, 0.0168446, 1, 0, 0.934572,-0.0247895) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.531512,-0.0087284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397119,0.0125875) , 
3, 62.5763, 1, 0, 0.481716,-0.00209635) , 
0, 0.00156393, 1, 0, 0.634493,-0.00975219) , 
6, 0.0313166, 1, 0, 0.500007,-0.00392291)    );
  // itree = 195
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781689,0.000685275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0155605,-0.0172296) , 
2, 0.0714166, 1, 0, 0.365973,-0.00455303) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782011,0.00335125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337567,-0.0126536) , 
5, 0.0169717, 1, 0, 0.643399,-0.000594703) , 
6, 0.0191387, 1, 0, 0.530435,-0.00220648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.189612,-0.0167274) , 
3, 126.023, 1, 0, 0.500355,-0.00302074)    );
  // itree = 196
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.698199,-0.00463097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.307259,-0.0233913) , 
3, 125.947, 1, 0, 0.672348,-0.00315761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140048,0.00770852) , 
2, 0.23577, 1, 0, 0.613035,-0.00224772) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00035142,-0.0117064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0339483,-0.0138949) , 
6, 0.0191354, 1, 0, 0.0157764,-0.00774289) , 
2, 0.309472, 1, 0, 0.503728,-0.00325341)    );
  // itree = 197
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979577,0.0472558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91585,-0.0124916) , 
2, 0.011306, 1, 0, 0.954539,0.0018919) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813727,-0.0179006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00104258,-0.0129208) , 
0, 0.00217524, 1, 0, 0.34248,-0.0148121) , 
2, 0.0237995, 1, 0, 0.583006,-0.00824782) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957135,-0.0184035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437684,0.00907559) , 
0, 0.00142003, 1, 0, 0.623671,0.000340314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0211205) , 
4, 0.0191294, 1, 0, 0.470759,-0.00164045) , 
5, 0.010177, 1, 0, 0.502302,-0.00349718)    );
  // itree = 198
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751873,-0.00146766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0180021) , 
4, 0.0191308, 1, 0, 0.624064,-0.00195444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00222185,-0.0164729) , 
2, 0.333293, 1, 0, 0.531832,-0.00305204) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.430695,-0.0579472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141841,-0.00112096) , 
2, 0.118902, 1, 0, 0.237849,-0.0104806) , 
3, 113.372, 1, 0, 0.499769,-0.00386223)    );
  // itree = 199
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853577,-0.00385064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.693042,-0.0292924) , 
2, 0.050511, 1, 0, 0.83932,-0.00308813) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679469,0.0344949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617977,-0.0085565) , 
2, 0.0831299, 1, 0, 0.660388,0.00576812) , 
2, 0.0589425, 1, 0, 0.797996,-0.00104276) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909709,-0.022798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773422,-0.00726921) , 
2, 0.133708, 1, 0, 0.824454,-0.0198529) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0031743,-0.0178379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.170133,-0.000954844) , 
4, 0.0121723, 1, 0, 0.12422,-0.00301994) , 
0, 0.00157623, 1, 0, 0.237874,-0.00575208) , 
2, 0.0952265, 1, 0, 0.496157,-0.00358052)    );
  // itree = 200
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793624,-0.00115449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239855,0.0187649) , 
2, 0.23577, 1, 0, 0.748094,0.00082849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0284153,-0.0116372) , 
2, 0.309486, 1, 0, 0.652487,-0.000430674) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0278339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131253) , 
5, 0.0201503, 1, 0, 0,-0.00694646) , 
4, 0.0191329, 1, 0, 0.499088,-0.00196252)    );
  // itree = 201
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969439,0.0237028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.14234,-0.0128333) , 
0, 0.00125003, 1, 0, 0.600235,0.000600163) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934782,-0.0191134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239433,-0.00302684) , 
0, 0.00157523, 1, 0, 0.44054,-0.0048634) , 
4, 0.0104406, 1, 0, 0.490271,-0.00316199) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628029,-0.0264017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665341,0.0050934) , 
3, 36.2994, 1, 0, 0.648589,-0.0161781) , 
6, 0.0347915, 1, 0, 0.500688,-0.00401844)    );
  // itree = 202
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.375716,-0.0222439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669762,0.000158241) , 
5, 0.00525895, 1, 0, 0.568343,-0.00449593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526965,-0.0238399) , 
7, 8.53062e-05, 1, 0, 0.560598,-0.00689558) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867607,0.0340385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421025,-0.0164757) , 
4, 0.0123525, 1, 0, 0.723984,0.00664182) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940441,-0.0245791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257331,-0.000197846) , 
0, 0.00157728, 1, 0, 0.398875,-0.00314168) , 
5, 0.0129327, 1, 0, 0.468515,-0.00104602) , 
5, 0.0100616, 1, 0, 0.493862,-0.0026562)    );
  // itree = 203
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819874,0.0101801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.045549,-0.0124396) , 
2, 0.21425, 1, 0, 0.680656,0.00220615) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.425813,-0.0341787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.15221e-05,-0.0128198) , 
0, 0.0110069, 1, 0, 0.0450911,-0.00512526) , 
5, 0.0154455, 1, 0, 0.472016,-0.000200574) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820752,-0.0226962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651813,-0.0433741) , 
2, 0.122705, 1, 0, 0.763943,-0.0218202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349799,0.00416239) , 
2, 0.214462, 1, 0, 0.630047,-0.0133166) , 
6, 0.031313, 1, 0, 0.500316,-0.00254937)    );
  // itree = 204
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994747,-0.00249604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567886,-0.017675) , 
0, 0.00156543, 1, 0, 0.892224,-0.00226169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772774,-0.0747232) , 
3, 83.1892, 1, 0, 0.876441,-0.00667154) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.110012,-0.0140118) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675658,0.00788436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.32969e-05,-0.0188996) , 
4, 0.0182266, 1, 0, 0.451233,0.00136706) , 
4, 0.00696167, 1, 0, 0.415651,8.53159e-05) , 
2, 0.0238066, 1, 0, 0.508033,-0.00126934)    );
  // itree = 205
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738341,-0.00601843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798036,-0.0222297) , 
6, 0.031313, 1, 0, 0.74843,-0.00430752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311892,-0.0468017) , 
3, 125.657, 1, 0, 0.722194,-0.00551444) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00449379,-0.011229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0164707,-0.008611) , 
4, 0.0121845, 1, 0, 0.0125585,-0.00378923) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844984,0.000116574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499715,0.0127111) , 
2, 0.229756, 1, 0, 0.655903,0.0116369) , 
7, 0.000195415, 1, 0, 0.129136,-0.000993932) , 
2, 0.166641, 1, 0, 0.493519,-0.00377139)    );
  // itree = 206
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956477,0.00799219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136885,-0.021633) , 
0, 0.00110118, 1, 0, 0.570335,-0.00393593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534137,-0.0236414) , 
7, 8.47209e-05, 1, 0, 0.564005,-0.00701902) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960951,-0.00921953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437332,0.0120777) , 
0, 0.00144791, 1, 0, 0.632979,0.00268503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0222796) , 
4, 0.0191329, 1, 0, 0.485286,0.000496006) , 
5, 0.00995844, 1, 0, 0.506683,-0.00154671)    );
  // itree = 207
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.312233,-0.0226703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452866,0.0055604) , 
5, 0.00352052, 1, 0, 0.385757,-0.00590664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535111,-0.0324117) , 
7, 2.70474e-05, 1, 0, 0.448386,-0.0112784) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753119,0.00429225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.020788) , 
4, 0.0191324, 1, 0, 0.612494,0.00060032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00453227,-0.0153735) , 
2, 0.333282, 1, 0, 0.518116,-0.00065138) , 
5, 0.00671803, 1, 0, 0.508881,-0.0020588)    );
  // itree = 208
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649039,-0.00352808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922957,0.0127676) , 
7, 0.00020495, 1, 0, 0.722494,0.000465702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0236967) , 
4, 0.0191084, 1, 0, 0.581577,-0.000739581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000258758,-0.0160532) , 
2, 0.357056, 1, 0, 0.503607,-0.00155629)    );
  // itree = 209
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680394,-0.000310056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811229,-0.0191305) , 
6, 0.0243563, 1, 0, 0.734677,-0.00348207) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809274,0.00776089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.05184e-05,-0.0127256) , 
0, 0.00315046, 1, 0, 0.236495,0.00213193) , 
2, 0.15288, 1, 0, 0.578971,-0.00172743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0162379) , 
2, 0.357056, 1, 0, 0.500117,-0.0025094)    );
  // itree = 210
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807352,0.00526836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179645,-0.00569665) , 
2, 0.119033, 1, 0, 0.526609,-0.000650162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.178365,-0.013343) , 
3, 126.115, 1, 0, 0.496564,-0.00137156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69462,0.026621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67061,0.00491978) , 
1, 1.06685, 1, 0, 0.681914,0.0087792) , 
6, 0.0347915, 1, 0, 0.50858,-0.000713486)    );
  // itree = 211
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970435,-0.0018512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875409,0.012195) , 
0, 0.00112527, 1, 0, 0.930541,0.00431711) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131165) , 
4, 0.0191402, 1, 0, 0,-0.00291359) , 
0, 0.00473329, 1, 0, 0.595163,0.00171107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00377004,-0.0152292) , 
2, 0.333252, 1, 0, 0.498732,0.000310749)    );
  // itree = 212
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.204589,-0.0110673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898503,0.00602) , 
7, 3.99646e-05, 1, 0, 0.648571,0.000812941) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0421751,-0.0124959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000119633,-0.0123776) , 
0, 0.0142051, 1, 0, 0.0148477,-0.00559145) , 
2, 0.261873, 1, 0, 0.495752,-0.000731442) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657606,-0.00445185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669206,-0.0175142) , 
6, 0.0355373, 1, 0, 0.66407,-0.0119518) , 
6, 0.0347914, 1, 0, 0.507092,-0.00148736)    );
  // itree = 213
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206171,-0.0243987) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965055,0.00211871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251943,-0.00756022) , 
0, 0.00157834, 1, 0, 0.550989,-0.00201401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0805952,-0.00443146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722847,-0.0151468) , 
7, 7.35755e-05, 1, 0, 0.321275,-0.00675488) , 
3, 88.2788, 1, 0, 0.506128,-0.00293985) , 
5, 0.00340347, 1, 0, 0.492557,-0.00342265)    );
  // itree = 214
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857172,-0.0247387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934143,0.0230179) , 
5, 0.00621672, 1, 0, 0.907759,0.000383748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0546531,-0.0223001) , 
2, 0.0714111, 1, 0, 0.578119,-0.00676797) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956115,0.0115631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00460053,-0.0207018) , 
0, 0.00251678, 1, 0, 0.748486,0.00272077) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0233063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013123) , 
0, 0.0241127, 1, 0, 0,-0.00484153) , 
5, 0.0185572, 1, 0, 0.474752,-4.4887e-05) , 
5, 0.0100142, 1, 0, 0.502091,-0.00182303)    );
  // itree = 215
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904323,0.0264206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1079,-0.00826334) , 
2, 0.0951218, 1, 0, 0.641902,0.000700473) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933103,-0.0281149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315967,-0.00363742) , 
0, 0.00157523, 1, 0, 0.467627,-0.00544673) , 
4, 0.0122089, 1, 0, 0.541202,-0.00285152) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.310078,0.00614043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374618,-0.0140327) , 
6, 0.0208798, 1, 0, 0.337375,-0.0013936) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933262,-0.00918291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.785308,0.0337356) , 
0, 0.00168759, 1, 0, 0.852818,0.00853694) , 
7, 0.000196529, 1, 0, 0.447191,0.000722122) , 
3, 50.445, 1, 0, 0.500983,-0.00132267)    );
  // itree = 216
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968599,-0.0123034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946224,0.0277099) , 
0, 0.00044535, 1, 0, 0.957738,0.00542705) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00249543,-0.0171647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.12311e-05,-0.0125247) , 
4, 0.0139356, 1, 0, 0.000905172,-0.00431909) , 
0, 0.00157623, 1, 0, 0.375924,-0.000499212) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901791,-0.0176923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789644,-0.0500159) , 
3, 46.1156, 1, 0, 0.853912,-0.012399) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507175,-0.0044239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317943,0.011828) , 
1, 1.51868, 1, 0, 0.474337,-0.00162247) , 
2, 0.0714198, 1, 0, 0.611594,-0.00551934) , 
6, 0.0208923, 1, 0, 0.500696,-0.00315705)    );
  // itree = 217
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854318,0.011981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732238,-0.0170848) , 
4, 0.0104377, 1, 0, 0.783074,-0.00199208) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504464,0.0202844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478808,0.000181606) , 
4, 0.013925, 1, 0, 0.488055,0.00717335) , 
2, 0.0997489, 1, 0, 0.704013,0.000464129) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.556215,-0.0142028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727935,0.00594604) , 
3, 62.2657, 1, 0, 0.632685,-0.0198959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000118691,-0.0125821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000124067,-0.0121003) , 
4, 0.0191402, 1, 0, 0.000121319,-0.00209736) , 
0, 0.00315669, 1, 0, 0.109643,-0.005179) , 
2, 0.190447, 1, 0, 0.50095,-0.00146381)    );
  // itree = 218
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504432,0.00102037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.693667,-0.0109695) , 
6, 0.0251869, 1, 0, 0.565491,-0.00192268) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757643,-8.68557e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561482,0.0509861) , 
2, 0.219189, 1, 0, 0.709642,0.00764888) , 
6, 0.0330541, 1, 0, 0.58372,-0.000712257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000260548,-0.0181849) , 
2, 0.357088, 1, 0, 0.505931,-0.00151834)    );
  // itree = 219
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971403,0.0817104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892226,-0.0189796) , 
2, 0.00789388, 1, 0, 0.93631,0.00238228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0848351,-0.0204237) , 
2, 0.0237995, 1, 0, 0.43353,-0.00900388) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0909866,-0.0188951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527885,-0.00297037) , 
4, 0.00696167, 1, 0, 0.486773,-0.00179583) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74625,-0.000483812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677012,-0.0193635) , 
6, 0.03562, 1, 0, 0.709424,-0.0123677) , 
6, 0.0347915, 1, 0, 0.502688,-0.0025515) , 
5, 0.00672515, 1, 0, 0.493135,-0.00344278)    );
  // itree = 220
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951893,0.00903341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000640595,-0.0136215) , 
0, 0.00265624, 1, 0, 0.682726,0.00185116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0206571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131127) , 
4, 0.0236097, 1, 0, 0,-0.00443539) , 
4, 0.015653, 1, 0, 0.479927,-1.62214e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933142,-0.00650328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521839,0.0157451) , 
0, 0.00156393, 1, 0, 0.66643,0.00378833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547619,-0.0260651) , 
3, 73.7641, 1, 0, 0.633238,-0.00508309) , 
6, 0.0313131, 1, 0, 0.507202,-0.000917666)    );
  // itree = 221
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955392,0.0251228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922223,-0.038438) , 
3, 34.1866, 1, 0, 0.938056,-0.00086449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106383,-0.0149022) , 
2, 0.023783, 1, 0, 0.45521,-0.00689094) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818215,0.00402672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000127318,-0.026638) , 
5, 0.0184328, 1, 0, 0.651763,-0.000141858) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0231408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013113) , 
5, 0.0285134, 1, 0, 0,-0.00477073) , 
4, 0.0191566, 1, 0, 0.501522,-0.00120888) , 
5, 0.00686921, 1, 0, 0.495032,-0.00200518)    );
  // itree = 222
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522485,-0.00607709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8975,0.0107378) , 
7, 0.000133411, 1, 0, 0.672443,0.000702236) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0226814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131119) , 
4, 0.0246742, 1, 0, 0,-0.0052007) , 
4, 0.0173801, 1, 0, 0.491781,-0.000883679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633645,-0.0175968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657643,-0.00777505) , 
1, 1.06243, 1, 0, 0.648269,-0.0126163) , 
6, 0.0347915, 1, 0, 0.502229,-0.00166703)    );
  // itree = 223
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996074,0.0343273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699616,-0.0165371) , 
0, 0.0010775, 1, 0, 0.928136,0.00261052) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659098,-0.021179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000523981,-0.0103029) , 
0, 0.00222548, 1, 0, 0.178644,-0.0159467) , 
2, 0.0475551, 1, 0, 0.574302,-0.00615028) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785346,-0.00951872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739037,-0.0725624) , 
2, 0.0362732, 1, 0, 0.774533,-0.00800301) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665388,0.010558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0205698) , 
5, 0.0189037, 1, 0, 0.375166,0.00200948) , 
2, 0.0476167, 1, 0, 0.469501,-0.000355574) , 
5, 0.0101837, 1, 0, 0.49947,-0.00201266)    );
  // itree = 224
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568059,-0.0230289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847347,-0.00170145) , 
5, 0.00458145, 1, 0, 0.818759,-0.00350479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0246753) , 
4, 0.0139582, 1, 0, 0.624802,-0.0061139) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00064196,-0.0211144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765977,0.0139859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0586527,-0.0175302) , 
4, 0.0179831, 1, 0, 0.468267,0.00170979) , 
4, 0.0121749, 1, 0, 0.372972,-0.000169769) , 
5, 0.0136566, 1, 0, 0.492771,-0.00299747)    );
  // itree = 225
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901008,0.0286588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775303,-0.00898865) , 
4, 0.0103856, 1, 0, 0.828383,0.000704431) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792387,-0.00867635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000303763,-0.0110953) , 
0, 0.00315455, 1, 0, 0.244913,-0.00552633) , 
2, 0.0952265, 1, 0, 0.540298,-0.00237197) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579754,0.0126125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0335758,-0.0255456) , 
5, 0.0137383, 1, 0, 0.303303,1.8545e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955288,-0.000705415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.78784,0.0491826) , 
0, 0.00175195, 1, 0, 0.865394,0.0133515) , 
7, 0.000196881, 1, 0, 0.413529,0.00261973) , 
3, 63.0581, 1, 0, 0.497572,-0.000689573)    );
  // itree = 226
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97288,0.0205983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670113,-0.0317707) , 
4, 0.00519609, 1, 0, 0.78775,-0.00398455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801204,0.00768464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.841702,0.0228669) , 
6, 0.0330555, 1, 0, 0.80552,0.00249294) , 
5, 0.00668752, 1, 0, 0.8026,0.0014285) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.241319,-0.0165322) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.166954,-0.00123362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.511353,-0.00990019) , 
6, 0.0313094, 1, 0, 0.239439,-0.00239758) , 
3, 12.6102, 1, 0, 0.2397,-0.00423514) , 
2, 0.0952221, 1, 0, 0.500432,-0.00161177)    );
  // itree = 227
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964126,0.00659732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0566153,-0.0127659) , 
0, 0.00157834, 1, 0, 0.471769,-0.00112704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.348497,-0.0266333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706369,-0.0047238) , 
5, 0.0134582, 1, 0, 0.649134,-0.00624686) , 
6, 0.0261007, 1, 0, 0.536793,-0.00300403) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0476035,0.00919885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669553,0.0114058) , 
7, 6.36573e-05, 1, 0, 0.239869,0.00482757) , 
3, 113.354, 1, 0, 0.502695,-0.00210466)    );
  // itree = 228
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880788,-0.0040625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972367,0.0772653) , 
7, 0.000133012, 1, 0, 0.901788,0.00127846) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875998,-0.00726365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000262821,-0.0112599) , 
0, 0.0031564, 1, 0, 0.348114,-0.00398274) , 
2, 0.0238059, 1, 0, 0.468091,-0.00284268) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.540273,-0.07314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791403,-0.0157111) , 
4, 0.0160704, 1, 0, 0.728754,-0.0212446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369364,-7.88007e-05) , 
2, 0.214394, 1, 0, 0.616917,-0.0146629) , 
6, 0.0313131, 1, 0, 0.494828,-0.00496618)    );
  // itree = 229
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964407,0.00474229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198822,-0.0110253) , 
0, 0.00111938, 1, 0, 0.64131,-0.0023921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.127725,-0.0158401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85635,0.0211487) , 
4, 0.00986002, 1, 0, 0.578684,0.00412147) , 
6, 0.0191384, 1, 0, 0.613573,0.000492778) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87778,-0.0511353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957044,-0.0161529) , 
5, 0.0134431, 1, 0, 0.940402,-0.0180332) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.447372,0.00821989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0613902,-0.0119469) , 
2, 0.214281, 1, 0, 0.280648,-1.86206e-05) , 
0, 0.00157776, 1, 0, 0.433379,-0.00418893) , 
4, 0.0121795, 1, 0, 0.504502,-0.00234105)    );
  // itree = 230
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784991,-0.00642129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986231,0.0372006) , 
7, 0.000275873, 1, 0, 0.796636,-0.0025513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000137298,-0.0393803) , 
5, 0.0176885, 1, 0, 0.653791,-0.00530995) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704999,0.00551619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803183,0.0784295) , 
4, 0.017802, 1, 0, 0.751268,0.0173279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0267536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013109) , 
4, 0.0252191, 1, 0, 0,-0.00431185) , 
4, 0.0182877, 1, 0, 0.137587,-0.000348758) , 
4, 0.017375, 1, 0, 0.500235,-0.00383414)    );
  // itree = 231
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777415,-0.0131732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983865,0.0546349) , 
7, 6.69163e-05, 1, 0, 0.854608,-0.000956893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0294369) , 
4, 0.0104155, 1, 0, 0.561783,-0.00624241) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524521,0.000733736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501796,-0.0105757) , 
3, 33.0021, 1, 0, 0.515113,-0.00221626) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708482,0.0211827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0224092) , 
5, 0.0190426, 1, 0, 0.391515,0.00350212) , 
3, 63.0117, 1, 0, 0.471029,-0.000176671) , 
5, 0.0102703, 1, 0, 0.497124,-0.0019208)    );
  // itree = 232
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954573,-0.0120463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239352,3.99861e-05) , 
0, 0.00157834, 1, 0, 0.539271,-0.00242477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518787,-0.0309811) , 
3, 79.8472, 1, 0, 0.538352,-0.00291879) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923282,0.00305516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913861,0.0228321) , 
0, 0.00128966, 1, 0, 0.919509,0.0109702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000408062,-0.00989212) , 
0, 0.00314221, 1, 0, 0.326425,0.0030882) , 
3, 88.2653, 1, 0, 0.49705,-0.00174808)    );
  // itree = 233
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753337,-0.0257559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876575,0.0261563) , 
5, 0.00530995, 1, 0, 0.838539,-0.000577959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926381,0.00262945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0361217,-0.0275715) , 
4, 0.0100195, 1, 0, 0.311167,-0.00906699) , 
4, 0.0086927, 1, 0, 0.57097,-0.00488498) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790835,-0.00653465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719228,-0.0268636) , 
2, 0.0442069, 1, 0, 0.767486,-0.00506203) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624436,0.00613334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0166789) , 
5, 0.0187402, 1, 0, 0.341014,0.00136833) , 
2, 0.0714198, 1, 0, 0.479765,-0.000723769) , 
5, 0.0101043, 1, 0, 0.504994,-0.00187484)    );
  // itree = 234
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966144,-0.00330563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979514,0.0571792) , 
0, 0.0011272, 1, 0, 0.969736,0.00606673) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00762511,-0.0273655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131163) , 
0, 0.0151056, 1, 0, 0.00221564,-0.00577948) , 
0, 0.0015782, 1, 0, 0.415586,-0.000718216) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910248,-0.0385201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946643,-0.0171894) , 
5, 0.0149258, 1, 0, 0.930365,-0.0192844) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687257,0.0219888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.232943,-0.0045074) , 
2, 0.14284, 1, 0, 0.462736,0.00296557) , 
0, 0.00157739, 1, 0, 0.617325,-0.00438984) , 
6, 0.0243562, 1, 0, 0.500266,-0.00225939)    );
  // itree = 235
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648653,0.00135461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950669,0.0536401) , 
7, 0.000200026, 1, 0, 0.685875,0.00288734) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0273604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131065) , 
4, 0.0226045, 1, 0, 0,-0.0042241) , 
4, 0.0156321, 1, 0, 0.472915,0.000679285) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939043,-0.0105171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904213,-0.02841) , 
1, 1.11169, 1, 0, 0.920447,-0.020816) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603554,0.0356393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467929,-0.00567529) , 
5, 0.0168128, 1, 0, 0.512013,0.00220233) , 
0, 0.00156393, 1, 0, 0.658236,-0.0060384) , 
6, 0.0313184, 1, 0, 0.504579,-0.000468498)    );
  // itree = 236
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544332,0.0329562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547024,-0.00466435) , 
3, 2.57552, 1, 0, 0.54688,-0.00160413) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637354,-0.014015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293603,-0.000277694) , 
4, 0.0156564, 1, 0, 0.497283,-0.00455822) , 
3, 54.0391, 1, 0, 0.52991,-0.00261489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196161,0.0126083) , 
3, 126.114, 1, 0, 0.501464,-0.00208062)    );
  // itree = 237
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654943,0.00239697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00980731,-0.0168959) , 
2, 0.214253, 1, 0, 0.456961,-0.00120731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803908,-0.00110942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.285807,-0.0241738) , 
5, 0.0169107, 1, 0, 0.599086,-0.00716185) , 
6, 0.0298215, 1, 0, 0.483312,-0.00231134) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817033,-0.00895021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508668,0.0396394) , 
2, 0.166601, 1, 0, 0.690671,0.00530759) , 
6, 0.0347915, 1, 0, 0.496216,-0.00183722)    );
  // itree = 238
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.788652,-0.00121458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0224853,-0.01761) , 
2, 0.0679815, 1, 0, 0.405575,-0.0034301) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853717,-0.00952634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565738,0.00899293) , 
2, 0.0679904, 1, 0, 0.685592,0.00255252) , 
6, 0.0191387, 1, 0, 0.574421,0.000177331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0172467) , 
2, 0.357056, 1, 0, 0.496445,-0.000702538)    );
  // itree = 239
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.514503,-0.0128082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766248,0.00752007) , 
6, 0.0191431, 1, 0, 0.671758,0.000318216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0166577,-0.0140175) , 
2, 0.285679, 1, 0, 0.544695,-0.000857856) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879466,-0.0282073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112516,-0.00491217) , 
0, 0.00157242, 1, 0, 0.271222,-0.00594327) , 
3, 100.892, 1, 0, 0.504131,-0.00161217)    );
  // itree = 240
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617493,-0.015865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670439,-0.000100223) , 
5, 0.00604546, 1, 0, 0.663352,-0.0011593) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962957,-0.0500881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629505,-0.00291914) , 
0, 0.0015611, 1, 0, 0.756836,-0.00936741) , 
6, 0.0295773, 1, 0, 0.686348,-0.00317836) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00149028,-0.00666398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00018037,-0.0182202) , 
6, 0.0208163, 1, 0, 0.00100413,-0.00292852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604602,0.0153477) , 
7, 0.000195415, 1, 0, 0.0925154,0.000533825) , 
2, 0.214201, 1, 0, 0.505049,-0.00204502)    );
  // itree = 241
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646506,0.0007788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957379,0.05723) , 
7, 0.000201364, 1, 0, 0.683165,0.00210272) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0254865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000104525,-0.011747) , 
4, 0.0226001, 1, 0, 6.59485e-05,-0.00436977) , 
4, 0.0156319, 1, 0, 0.468199,6.58747e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.835724,0.0188457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715149,-0.021515) , 
3, 49.497, 1, 0, 0.78889,-3.14469e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593096,-0.038257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334275,-0.00133738) , 
2, 0.210885, 1, 0, 0.416951,-0.0129278) , 
2, 0.142823, 1, 0, 0.600412,-0.00656659) , 
6, 0.031313, 1, 0, 0.492008,-0.00112849)    );
  // itree = 242
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.228402,-0.025013) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.461943,-0.00339047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647036,0.0277976) , 
6, 0.0281619, 1, 0, 0.472472,-0.0004283) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.497752,-0.0228478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728549,0.00184586) , 
4, 0.0156438, 1, 0, 0.645848,-0.0045166) , 
6, 0.0295738, 1, 0, 0.516035,-0.00145554) , 
5, 0.00342294, 1, 0, 0.50247,-0.00195937)    );
  // itree = 243
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.371363,-0.00357895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314951,0.0327265) , 
3, 37.7065, 1, 0, 0.341342,0.00422959) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605188,-0.0491403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544468,-0.0157198) , 
3, 37.375, 1, 0, 0.574541,-0.0221821) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.546019,-0.00186651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381708,-0.0136677) , 
3, 75.6554, 1, 0, 0.503922,-0.00202942) , 
4, 0.00671152, 1, 0, 0.508009,-0.0031958) , 
4, 0.00522045, 1, 0, 0.494001,-0.00257168)    );
  // itree = 244
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848652,0.000999596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592344,-0.0193428) , 
4, 0.0139319, 1, 0, 0.751554,-0.00272525) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810828,0.0139917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131212) , 
0, 0.00471726, 1, 0, 0.276226,0.00489031) , 
2, 0.147356, 1, 0, 0.61552,-0.000545756) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0292076,-0.0146149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000156562,-0.0110974) , 
0, 0.0173618, 1, 0, 0.0129595,-0.00520215) , 
2, 0.309477, 1, 0, 0.497307,-0.00145927)    );
  // itree = 245
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762167,-0.00686848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371868,0.0132687) , 
2, 0.117828, 1, 0, 0.691892,-0.000369707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.317049,-0.0129879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131114) , 
0, 0.00473503, 1, 0, 0.0422357,-0.00472469) , 
2, 0.19043, 1, 0, 0.474554,-0.00182664) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575503,-0.0285391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645753,-0.0184914) , 
1, 1.17681, 1, 0, 0.610566,-0.0238453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936329,-0.0177137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.480195,0.000813416) , 
0, 0.00156071, 1, 0, 0.632207,-0.00377185) , 
6, 0.032808, 1, 0, 0.626079,-0.00945599) , 
6, 0.0313128, 1, 0, 0.501704,-0.00319368)    );
  // itree = 246
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967264,0.0132115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711771,-0.0431912) , 
4, 0.00867099, 1, 0, 0.878383,-0.000509747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0703448,-0.0190546) , 
2, 0.0714111, 1, 0, 0.575425,-0.00547536) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823734,0.0582832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77734,-0.0277776) , 
3, 12.5295, 1, 0, 0.785183,-0.00458465) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472829,0.00248813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00177855,-0.0148303) , 
2, 0.349157, 1, 0, 0.380256,0.000126059) , 
2, 0.0476111, 1, 0, 0.474752,-0.000973268) , 
5, 0.0102058, 1, 0, 0.503512,-0.00225942)    );
  // itree = 247
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872462,0.0225182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368968,-0.006415) , 
2, 0.0476002, 1, 0, 0.554168,-0.000923951) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8018,-0.0387723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.252357,-0.00650469) , 
2, 0.0942181, 1, 0, 0.533495,-0.0123727) , 
3, 28.7879, 1, 0, 0.549507,-0.00350552) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610297,0.00584139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0120613,-0.0220465) , 
4, 0.0139191, 1, 0, 0.359788,-0.000187678) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896528,-0.00151102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639333,0.0249028) , 
2, 0.211955, 1, 0, 0.828514,0.00607066) , 
7, 0.000197346, 1, 0, 0.460606,0.00115843) , 
3, 37.7847, 1, 0, 0.500541,-0.00093663)    );
  // itree = 248
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991827,0.0385935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984189,-0.0308646) , 
6, 0.0243994, 1, 0, 0.989663,0.00424069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.335676,-0.0165208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470358,0.011484) , 
5, 0.0132876, 1, 0, 0.429185,-0.00194217) , 
0, 0.00157776, 1, 0, 0.759068,0.00169691) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929496,0.020411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561816,-0.00995886) , 
0, 0.000299184, 1, 0, 0.715233,-0.0120862) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000472732,-0.00967947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000184006,-0.01047) , 
4, 0.0173876, 1, 0, 0.000310387,-0.000988132) , 
0, 0.00315247, 1, 0, 0.16182,-0.00349533) , 
2, 0.142787, 1, 0, 0.500609,-0.000550033)    );
  // itree = 249
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509911,-0.00764685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897834,0.0216773) , 
7, 8.6768e-05, 1, 0, 0.589468,-0.000365076) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70132,0.000223136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64602,-0.0379979) , 
3, 41.8607, 1, 0, 0.675054,-0.013002) , 
7, 0.000118924, 1, 0, 0.604883,-0.00264107) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976394,-0.0356982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889946,0.00704007) , 
2, 0.134175, 1, 0, 0.947704,-0.00559808) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935121,0.0145295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.09914e-05,-0.0125451) , 
0, 0.00308383, 1, 0, 0.272978,0.00274605) , 
0, 0.00157834, 1, 0, 0.424159,0.000876438) , 
4, 0.0121723, 1, 0, 0.494604,-0.000494659)    );
  // itree = 250
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.228545,-0.0354722) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646939,-0.0173215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520959,-0.00258986) , 
5, 0.00985762, 1, 0, 0.552188,-0.00254621) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905194,0.0144205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000126782,-0.0117858) , 
0, 0.00471671, 1, 0, 0.391964,0.00368147) , 
3, 75.6683, 1, 0, 0.512016,-0.000984773) , 
5, 0.00339598, 1, 0, 0.499411,-0.00168761)    );
  // itree = 251
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948821,-0.000143833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125475,-0.0168465) , 
2, 0.0237805, 1, 0, 0.518561,-0.00674698) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730817,0.0129156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385546,-0.00550331) , 
4, 0.00978325, 1, 0, 0.446186,-0.000734928) , 
4, 0.00696766, 1, 0, 0.458334,-0.00174405) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958774,-0.0200931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881971,-0.032856) , 
4, 0.0169783, 1, 0, 0.928792,-0.0177064) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.38465,-0.0233566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563353,0.00943118) , 
4, 0.015688, 1, 0, 0.496187,-0.00121206) , 
0, 0.00156954, 1, 0, 0.645588,-0.0069084) , 
6, 0.0295733, 1, 0, 0.503191,-0.00298118)    );
  // itree = 252
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959272,0.0128767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000645167,-0.0152209) , 
0, 0.00265624, 1, 0, 0.688579,0.0027705) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0223035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131031) , 
4, 0.0226404, 1, 0, 0,-0.00285999) , 
4, 0.0156894, 1, 0, 0.471767,0.000997637) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93874,-0.0415271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646737,-0.0139706) , 
0, 0.00155764, 1, 0, 0.764018,-0.0197961) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474498,0.0158636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385618,-0.00783729) , 
1, 1.11141, 1, 0, 0.431086,0.00112224) , 
2, 0.166712, 1, 0, 0.625151,-0.011071) , 
6, 0.031313, 1, 0, 0.49858,-0.00111205)    );
  // itree = 253
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.806265,-0.041745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947831,0.0241728) , 
5, 0.00486195, 1, 0, 0.919128,-0.0023634) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.20139,-0.0251292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.153806,-0.0112132) , 
3, 37.1024, 1, 0, 0.17548,-0.0152075) , 
2, 0.0476074, 1, 0, 0.575821,-0.00829293) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383108,0.00818934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835454,-0.021619) , 
7, 0.000199041, 1, 0, 0.533734,-0.00816224) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0211899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654939,0.00949572) , 
6, 0.0191387, 1, 0, 0.45707,0.00205204) , 
3, 12.6115, 1, 0, 0.468285,0.000557735) , 
5, 0.0101152, 1, 0, 0.497843,-0.00187501)    );
  // itree = 254
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472614,-0.00344843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858542,0.00726) , 
7, 0.000199185, 1, 0, 0.556112,0.000261909) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586597,-0.0250296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445286,-0.00351847) , 
4, 0.0121642, 1, 0, 0.498701,-0.00558117) , 
3, 46.2328, 1, 0, 0.531299,-0.00226351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140388,0.0196617) , 
3, 138.724, 1, 0, 0.505199,-0.00170945)    );
  // itree = 255
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912695,-0.0205407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968303,0.012368) , 
5, 0.00636196, 1, 0, 0.956994,0.00150261) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.772793,-0.0146616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000157011,-0.0115841) , 
0, 0.00308202, 1, 0, 0.0846087,-0.00345501) , 
0, 0.00157834, 1, 0, 0.407723,-0.0016188) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972347,-0.0116254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976976,0.0214963) , 
7, 0.000236277, 1, 0, 0.975543,0.00414431) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.773384,-0.00777469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636765,-0.0232289) , 
5, 0.0169856, 1, 0, 0.721327,-0.0159648) , 
0, 0.000613967, 1, 0, 0.831072,-0.0072837) , 
7, 0.000197346, 1, 0, 0.499507,-0.00284697)    );
  // itree = 256
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621731,-0.00753812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803064,0.0276015) , 
5, 0.0127363, 1, 0, 0.681237,0.00120864) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92165,-0.0236132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131173) , 
0, 0.00315479, 1, 0, 0.0954677,-0.00369745) , 
5, 0.0167093, 1, 0, 0.487683,-0.000412468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839065,0.0225897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555956,-0.0177507) , 
2, 0.119338, 1, 0, 0.674445,-0.00781332) , 
6, 0.0347915, 1, 0, 0.499106,-0.000865133)    );
  // itree = 257
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968656,-0.000849093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91573,0.0369742) , 
0, 0.000437514, 1, 0, 0.944655,0.00568704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000620156,-0.0182545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000426377,-0.00798125) , 
2, 0.142835, 1, 0, 0.000481035,-0.00198469) , 
0, 0.00157834, 1, 0, 0.170936,-0.000599687) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963531,-0.0184512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983316,0.0254754) , 
5, 0.0146198, 1, 0, 0.971027,-0.000843761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8852,-0.0330743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60525,-0.00291195) , 
2, 0.0474559, 1, 0, 0.700077,-0.00840211) , 
0, 0.000835211, 1, 0, 0.814488,-0.00521053) , 
7, 5.73799e-05, 1, 0, 0.503518,-0.00298253)    );
  // itree = 258
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790823,-0.00705244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985119,0.043394) , 
7, 0.000136857, 1, 0, 0.836645,0.000492513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0275737) , 
4, 0.0138523, 1, 0, 0.639849,-0.00288493) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502616,-0.0183342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131205) , 
0, 0.00674627, 1, 0, 0.0956883,-0.00567339) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822962,0.0120065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00021332,-0.025718) , 
4, 0.0182383, 1, 0, 0.482959,0.00132875) , 
4, 0.0139337, 1, 0, 0.3782,-0.00056537) , 
5, 0.013663, 1, 0, 0.500288,-0.0016477)    );
  // itree = 259
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889584,0.0442744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790176,-0.0186191) , 
4, 0.0101805, 1, 0, 0.830935,0.000236346) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.772087,-0.0138257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000169607,-0.0111953) , 
0, 0.00313579, 1, 0, 0.237747,-0.00946033) , 
2, 0.0951887, 1, 0, 0.548708,-0.00437715) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953796,0.00372427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0777345,-0.0110409) , 
0, 0.00157834, 1, 0, 0.373917,-0.00139151) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942417,-0.00585285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79244,0.0218662) , 
0, 0.00181114, 1, 0, 0.861916,0.00620846) , 
7, 0.000196529, 1, 0, 0.476289,0.0002028) , 
3, 25.193, 1, 0, 0.498551,-0.00120508)    );
  // itree = 260
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871854,0.0191988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595769,0.0301591) , 
2, 0.0340053, 1, 0, 0.790985,0.00407223) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303367,-0.00887786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131093) , 
0, 0.00630493, 1, 0, 0.041858,-0.00305209) , 
2, 0.0714166, 1, 0, 0.371532,8.31619e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955121,0.00306408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.434242,-0.0207354) , 
4, 0.0124585, 1, 0, 0.658158,-0.00911894) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.174612,-0.0332405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757853,0.00501426) , 
4, 0.0139013, 1, 0, 0.604351,-0.00113842) , 
5, 0.0136027, 1, 0, 0.623771,-0.00401878) , 
6, 0.0208937, 1, 0, 0.505028,-0.00208777)    );
  // itree = 261
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614795,-0.00236881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746527,0.0156831) , 
4, 0.0119354, 1, 0, 0.646527,0.00077643) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.050244,-0.0235987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131011) , 
4, 0.0192974, 1, 0, 0.013292,-0.00351959) , 
4, 0.0139218, 1, 0, 0.402815,-0.000876968) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89726,-0.00571963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662098,-0.034297) , 
5, 0.0170935, 1, 0, 0.841094,-0.012479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953221,0.0287595) , 
7, 0.000314056, 1, 0, 0.855474,-0.00857295) , 
7, 0.000196881, 1, 0, 0.497316,-0.00248364)    );
  // itree = 262
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.742081,-0.00641876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968797,0.0254059) , 
7, 0.00017804, 1, 0, 0.807413,0.00129022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0240585) , 
4, 0.0173804, 1, 0, 0.664673,-0.000392966) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768507,-0.033307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131204) , 
0, 0.00421618, 1, 0, 0.128384,-0.0115133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000113933,-0.0236229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918982,0.0698168) , 
6, 0.0347914, 1, 0, 0.201152,0.00366931) , 
4, 0.0173908, 1, 0, 0.168935,-0.00305262) , 
5, 0.0169517, 1, 0, 0.494479,-0.00130606)    );
  // itree = 263
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.274463,0.00107735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529946,-0.0114564) , 
6, 0.0147679, 1, 0, 0.402242,-0.0019929) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610567,-0.00585772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633659,0.0188849) , 
1, 1.29992, 1, 0, 0.625446,0.00311744) , 
6, 0.0238535, 1, 0, 0.473993,-0.000350125) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83287,0.0185984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517868,-0.0078719) , 
2, 0.0951727, 1, 0, 0.629622,-0.00164719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619519,-0.0176017) , 
1, 1.16319, 1, 0, 0.627414,-0.00479728) , 
6, 0.0313128, 1, 0, 0.501509,-0.00114771)    );
  // itree = 264
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685058,0.00367505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00713833,-0.0138532) , 
2, 0.214103, 1, 0, 0.487472,-0.00027735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660222,-0.00864159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565205,-0.0225131) , 
3, 83.9237, 1, 0, 0.645069,-0.00783823) , 
6, 0.0295786, 1, 0, 0.526035,-0.00212745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197611,0.0405988) , 
3, 126.022, 1, 0, 0.499245,-0.00116499)    );
  // itree = 265
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.417491,-0.00579866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332985,0.0486813) , 
3, 37.7889, 1, 0, 0.372991,0.00384746) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667153,-0.0163724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475886,-0.00408727) , 
4, 0.00820379, 1, 0, 0.500407,-0.00207656) , 
4, 0.00522181, 1, 0, 0.488824,-0.001538) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991485,-0.00807771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664975,0.0397125) , 
0, 0.00155764, 1, 0, 0.794944,0.00788785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462081,-0.000771591) , 
2, 0.166646, 1, 0, 0.654387,0.00428077) , 
6, 0.0330521, 1, 0, 0.508487,-0.000846935)    );
  // itree = 266
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719867,-0.00804305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652021,0.0108344) , 
5, 0.00918218, 1, 0, 0.673207,0.00100436) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0933076,-0.0107645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000189682,-0.0098097) , 
0, 0.0110484, 1, 0, 0.0243656,-0.00310563) , 
2, 0.214253, 1, 0, 0.478904,-0.000226424) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807573,-0.000616806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643216,-0.035069) , 
2, 0.122462, 1, 0, 0.753101,-0.0120037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.365108,0.00951298) , 
2, 0.214316, 1, 0, 0.628366,-0.00578613) , 
6, 0.0313131, 1, 0, 0.505602,-0.00121957)    );
  // itree = 267
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962189,0.00436453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297013,-0.0205526) , 
2, 0.0237776, 1, 0, 0.580064,-0.0068097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.350041,-0.00400525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686953,0.01733) , 
6, 0.026755, 1, 0, 0.400249,3.27484e-05) , 
5, 0.00917327, 1, 0, 0.450871,-0.00189354) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777538,-0.00684676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272995,-0.0327824) , 
6, 0.0308994, 1, 0, 0.515937,-0.0180259) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649962,-0.0190807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731641,0.0352663) , 
5, 0.0170694, 1, 0, 0.689909,-0.00313545) , 
4, 0.0156563, 1, 0, 0.629507,-0.00830532) , 
6, 0.0295754, 1, 0, 0.49425,-0.00345056)    );
  // itree = 268
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965949,-0.00751153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940789,0.0233557) , 
0, 0.000440023, 1, 0, 0.953727,0.00450553) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00122548,-0.00425943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00016679,-0.0231182) , 
6, 0.0129111, 1, 0, 0.000843189,-0.0026265) , 
0, 0.00157623, 1, 0, 0.372485,0.000155123) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886789,0.0729246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828885,-0.0396021) , 
3, 11.956, 1, 0, 0.839027,-0.00972586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.496138,-0.00701788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437711,0.0128882) , 
3, 62.3596, 1, 0, 0.474157,-0.00104958) , 
2, 0.0714198, 1, 0, 0.607202,-0.00421327) , 
6, 0.0208767, 1, 0, 0.497868,-0.00217841)    );
  // itree = 269
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657862,-0.0221303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60596,0.00851905) , 
3, 73.8738, 1, 0, 0.647762,-0.00633569) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976526,0.0382048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000140762,-0.0144744) , 
0, 0.00157265, 1, 0, 0.257683,0.00133796) , 
5, 0.007902, 1, 0, 0.370757,-0.00088645) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861888,-0.0297937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529306,-0.00429753) , 
2, 0.0475796, 1, 0, 0.615019,-0.00460063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561943,-0.0348398) , 
1, 1.65593, 1, 0, 0.61091,-0.00599414) , 
6, 0.0208768, 1, 0, 0.498198,-0.00359692)    );
  // itree = 270
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839644,0.00233296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593482,-0.0273321) , 
3, 99.4889, 1, 0, 0.818198,-0.000594043) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934068,-0.0196222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.35629,-0.00405328) , 
0, 0.00157776, 1, 0, 0.586353,-0.00908918) , 
2, 0.0680106, 1, 0, 0.745052,-0.00327423) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793672,0.0116162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421163,-0.0044322) , 
0, 0.00202795, 1, 0, 0.653322,0.00869675) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131007) , 
4, 0.0191288, 1, 0, 0,-0.000866667) , 
0, 0.0047346, 1, 0, 0.169759,0.00161829) , 
2, 0.142835, 1, 0, 0.497417,-0.00116825)    );
  // itree = 271
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845734,0.0165435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0710969,-0.02193) , 
4, 0.0139308, 1, 0, 0.670828,0.00344057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00501908,-0.0131868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.019253,-0.00119366) , 
4, 0.0121752, 1, 0, 0.0148454,-0.00217949) , 
2, 0.166601, 1, 0, 0.404775,0.00116119) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954897,-0.0127007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982275,0.0314653) , 
5, 0.015389, 1, 0, 0.974012,0.00507017) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767077,-0.00660123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66207,-0.0264509) , 
5, 0.0167137, 1, 0, 0.719794,-0.0209778) , 
0, 0.000603712, 1, 0, 0.828725,-0.00981644) , 
7, 0.000199575, 1, 0, 0.495463,-0.00118706)    );
  // itree = 272
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61206,-0.0268138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612563,-0.00765577) , 
5, 0.0044213, 1, 0, 0.61252,-0.00505018) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943394,-0.0131578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.249278,0.00873113) , 
0, 0.0015782, 1, 0, 0.39787,0.000150831) , 
4, 0.0122169, 1, 0, 0.487907,-0.00203076) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815258,-0.00252589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.580309,-0.0178108) , 
2, 0.119338, 1, 0, 0.68069,-0.0106258) , 
6, 0.0347913, 1, 0, 0.500116,-0.00257511)    );
  // itree = 273
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846395,0.0072188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904204,-0.0423314) , 
6, 0.0226916, 1, 0, 0.871157,-0.00833642) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0776666,-0.0177077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521485,0.0075672) , 
6, 0.0226241, 1, 0, 0.307235,-0.000642165) , 
2, 0.0713414, 1, 0, 0.565089,-0.00416037) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787047,0.0195285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433513,-0.0251261) , 
3, 113.189, 1, 0, 0.748233,0.00317121) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762255,-0.0155409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115952,-0.000962677) , 
0, 0.00157346, 1, 0, 0.206497,-0.00368455) , 
2, 0.119029, 1, 0, 0.474883,-0.000288083) , 
3, 25.1892, 1, 0, 0.502406,-0.00146959)    );
  // itree = 274
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.25188,-0.0240847) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78214,0.00717231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17794,-0.0048329) , 
2, 0.119036, 1, 0, 0.500346,6.66985e-05) , 
5, 0.00332313, 1, 0, 0.489541,-0.000471307) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681117,-0.00429031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648184,-0.0174764) , 
6, 0.0355372, 1, 0, 0.662141,-0.0128512) , 
6, 0.0347913, 1, 0, 0.500842,-0.0012819)    );
  // itree = 275
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.422859,-0.00024739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626445,-0.0112212) , 
6, 0.0252412, 1, 0, 0.484383,-0.00173541) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571744,0.02256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565701,0.00206218) , 
1, 1.11479, 1, 0, 0.568511,0.00551841) , 
6, 0.0331285, 1, 0, 0.489642,-0.0012819) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.746823,-0.0123237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536022,-0.0174877) , 
2, 0.143107, 1, 0, 0.648317,-0.0133905) , 
6, 0.0347914, 1, 0, 0.500231,-0.0020899)    );
  // itree = 276
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998429,0.046927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989051,0.0505566) , 
2, 0.156006, 1, 0, 0.997252,0.00440153) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910789,-0.000548401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612141,-0.0305277) , 
6, 0.0227031, 1, 0, 0.855454,-0.0221182) , 
0, 7.51022e-05, 1, 0, 0.946307,-0.00512648) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00125308,-0.00264239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00579197,-0.0234985) , 
6, 0.0162383, 1, 0, 0.00271112,-0.00271717) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691988,0.0259309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150047,-0.00494832) , 
2, 0.190401, 1, 0, 0.468945,0.00424492) , 
6, 0.0243562, 1, 0, 0.218625,0.000506982) , 
0, 0.00157739, 1, 0, 0.504153,-0.00170348)    );
  // itree = 277
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761707,-0.0053004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964567,0.0181488) , 
6, 0.027412, 1, 0, 0.79933,-0.00102857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0288272) , 
5, 0.0170619, 1, 0, 0.640931,-0.00287823) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0226522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000242903,-0.00815134) , 
0, 0.0236647, 1, 0, 0.000140499,-0.0026778) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851549,0.00469511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542442,0.0304285) , 
2, 0.189759, 1, 0, 0.754245,0.0069905) , 
6, 0.0313194, 1, 0, 0.274865,0.000844421) , 
4, 0.0156803, 1, 0, 0.498786,-0.00143271)    );
  // itree = 278
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840737,0.0155029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.175765,-0.00741796) , 
2, 0.0713414, 1, 0, 0.491722,-0.000539198) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963652,0.0135351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777319,-0.0173294) , 
2, 0.0479184, 1, 0, 0.833727,-0.0156802) , 
7, 0.000202771, 1, 0, 0.56525,-0.00379439) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787405,-0.0202569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169871,0.000480251) , 
2, 0.0476132, 1, 0, 0.355765,-0.00168664) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932794,0.00310903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681262,0.0174497) , 
2, 0.165914, 1, 0, 0.836266,0.00585727) , 
7, 0.00019548, 1, 0, 0.459951,-5.09117e-05) , 
3, 37.7859, 1, 0, 0.506571,-0.00170832)    );
  // itree = 279
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.319872,-0.0158348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595124,0.00638946) , 
6, 0.0161594, 1, 0, 0.46147,-0.000455518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830981,-0.021148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468735,0.00468336) , 
2, 0.119039, 1, 0, 0.659249,-0.00438691) , 
6, 0.0260981, 1, 0, 0.531987,-0.00185724) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928591,0.00958147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934208,0.0308271) , 
0, 0.0014897, 1, 0, 0.930411,0.0102416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000350738,-0.00793577) , 
0, 0.00314347, 1, 0, 0.380564,0.0038704) , 
3, 75.6554, 1, 0, 0.494509,-0.000439587)    );
  // itree = 280
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639895,-0.00978398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.245605,0.00976091) , 
5, 0.0120919, 1, 0, 0.439013,-0.00123023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940345,-0.0286903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446191,-0.00706792) , 
0, 0.00156658, 1, 0, 0.609211,-0.00941331) , 
6, 0.0283295, 1, 0, 0.470204,-0.00272991) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.604499,-0.0173619) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.374263,-0.00609082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818273,0.0737756) , 
4, 0.0173053, 1, 0, 0.652667,0.0100307) , 
5, 0.0170986, 1, 0, 0.63884,0.00283146) , 
6, 0.0330523, 1, 0, 0.489817,-0.00208312)    );
  // itree = 281
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78533,-0.0239168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926132,0.00879079) , 
5, 0.00582, 1, 0, 0.887223,-0.00150437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0696043,-0.0156929) , 
2, 0.0713986, 1, 0, 0.572758,-0.00465347) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879885,0.0289308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0723781,-0.0190748) , 
5, 0.0137552, 1, 0, 0.514501,0.00320133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926066,-0.0139188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283966,-0.00070472) , 
0, 0.0015782, 1, 0, 0.437043,-0.00248567) , 
4, 0.0139173, 1, 0, 0.468677,-0.000163092) , 
5, 0.010177, 1, 0, 0.498085,-0.00143186)    );
  // itree = 282
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961646,0.0114348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00151761,-0.0174308) , 
0, 0.00157834, 1, 0, 0.352056,-0.00034786) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951833,4.10715e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641505,0.0117752) , 
2, 0.140523, 1, 0, 0.85884,0.00327702) , 
7, 0.000145926, 1, 0, 0.47869,0.000557915) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799523,-0.00354363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532243,-0.0184863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522103,-0.0068224) , 
3, 37.5988, 1, 0, 0.52605,-0.0124298) , 
2, 0.0955901, 1, 0, 0.628646,-0.00840874) , 
6, 0.0330523, 1, 0, 0.496867,-0.00052899)    );
  // itree = 283
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.837693,-0.00182507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109647,-0.0259605) , 
4, 0.0121965, 1, 0, 0.636898,-0.0033887) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0331082,-0.0219526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702791,0.00760319) , 
6, 0.0253441, 1, 0, 0.309903,-0.000247117) , 
5, 0.0124787, 1, 0, 0.465868,-0.00174554) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672051,-0.0184488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68118,0.00260767) , 
6, 0.032808, 1, 0, 0.678649,-0.00377355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549975,-0.0228036) , 
3, 74.6141, 1, 0, 0.643758,-0.00845641) , 
6, 0.0313128, 1, 0, 0.496926,-0.0029172)    );
  // itree = 284
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886698,0.00637446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623409,-0.00800362) , 
4, 0.0138329, 1, 0, 0.794689,0.000173553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582456,0.0380295) , 
2, 0.107683, 1, 0, 0.783919,0.000819241) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948953,0.0153388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625087,-0.0119157) , 
0, 0.000299005, 1, 0, 0.752541,-0.013618) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000794982,0.000545802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.93177e-05,-0.0118566) , 
5, 0.016958, 1, 0, 0.000347311,-0.000457116) , 
0, 0.00315247, 1, 0, 0.199745,-0.00394593) , 
2, 0.119033, 1, 0, 0.505304,-0.00145345)    );
  // itree = 285
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956237,0.0487229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572109,0.0146564) , 
5, 0.00641902, 1, 0, 0.798813,0.00391792) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.48572,-0.00978024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.19832e-05,-0.0115301) , 
0, 0.0047346, 1, 0, 0.0338902,-0.00156037) , 
2, 0.0238059, 1, 0, 0.166106,-0.000613455) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792032,-0.00701683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859319,0.0164569) , 
1, 1.64329, 1, 0, 0.801781,-0.00280776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988911,0.0334921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797653,-0.0398178) , 
0, 0.000288433, 1, 0, 0.880916,-0.022937) , 
1, 1.88295, 1, 0, 0.812597,-0.0055591) , 
7, 5.73802e-05, 1, 0, 0.500017,-0.00316786)    );
  // itree = 286
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.860902,0.0303339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6985,-0.00813204) , 
2, 0.0634766, 1, 0, 0.830924,0.00269034) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798899,0.0287453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756949,-0.0363056) , 
4, 0.0070042, 1, 0, 0.764263,-0.00856958) , 
3, 25.1518, 1, 0, 0.78734,-0.00467164) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.236381,-0.0109854) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751339,0.00420716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.73383e-05,-0.0121243) , 
0, 0.00473218, 1, 0, 0.249647,0.00100984) , 
3, 12.6032, 1, 0, 0.247842,-0.000103178) , 
2, 0.0952265, 1, 0, 0.503467,-0.00226781)    );
  // itree = 287
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829119,0.00447718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48579,0.0268505) , 
2, 0.0543969, 1, 0, 0.71348,0.0036213) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839075,0.00287594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742228,-0.0108923) , 
2, 0.0816127, 1, 0, 0.805735,-0.00163533) , 
6, 0.0260981, 1, 0, 0.744617,0.00184715) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864946,-0.0132655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618547,-0.000684792) , 
2, 0.210316, 1, 0, 0.743573,-0.0104044) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.21327,0.0088288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0145408,-0.0111187) , 
2, 0.261935, 1, 0, 0.0885924,-0.000515541) , 
0, 0.00157834, 1, 0, 0.167156,-0.00170168) , 
2, 0.142833, 1, 0, 0.494663,0.000311041)    );
  // itree = 288
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888024,0.0107471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812352,-0.0266362) , 
3, 50.3077, 1, 0, 0.860511,-0.00121059) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783328,-0.070797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724983,-0.00539691) , 
2, 0.042216, 1, 0, 0.752555,-0.013954) , 
2, 0.0362723, 1, 0, 0.842241,-0.00336722) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0337219,-0.0110772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000697197,-0.00137546) , 
2, 0.155398, 1, 0, 0.00894119,-0.00116183) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752001,0.0137687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.733913,0.000799206) , 
6, 0.0257989, 1, 0, 0.739472,0.00356457) , 
7, 6.37937e-05, 1, 0, 0.347059,0.00102573) , 
2, 0.0476132, 1, 0, 0.505334,-0.000378388)    );
  // itree = 289
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.27277,-0.0142731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53094,-0.0360117) , 
5, 0.00440992, 1, 0, 0.341467,-0.0107039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595046,0.00370618) , 
5, 0.0054467, 1, 0, 0.422157,-0.00684016) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633604,0.00239228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0104864,-0.0138809) , 
2, 0.285671, 1, 0, 0.493699,-0.000156184) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631653,-0.0184024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701843,0.00900045) , 
6, 0.0357029, 1, 0, 0.663431,-0.00916718) , 
6, 0.0347914, 1, 0, 0.505912,-0.000804595) , 
5, 0.00672515, 1, 0, 0.494372,-0.00163621)    );
  // itree = 290
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977727,-0.00866513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955616,0.0282226) , 
0, 0.000526071, 1, 0, 0.968169,0.0037605) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00130499,-0.000760218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440588,-0.0157113) , 
7, 5.3498e-05, 1, 0, 0.0490813,-0.00194314) , 
0, 0.00157834, 1, 0, 0.430152,0.000421696) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615677,-0.0109166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635341,0.00162276) , 
4, 0.0156517, 1, 0, 0.626705,-0.0018169) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657385,-0.00612731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6559,-0.0389657) , 
6, 0.0268076, 1, 0, 0.656653,-0.0133123) , 
1, 1.34985, 1, 0, 0.631121,-0.00351225) , 
6, 0.0260948, 1, 0, 0.502634,-0.000997117)    );
  // itree = 291
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959717,-0.00340046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96297,0.0361394) , 
0, 0.00112691, 1, 0, 0.960602,0.00386738) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00339165,-0.0296755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000912965,-0.00665647) , 
2, 0.142683, 1, 0, 0.0016128,-0.00327112) , 
0, 0.0015782, 1, 0, 0.406382,-0.000258112) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930015,-0.039141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94455,-0.011981) , 
7, 0.000190741, 1, 0, 0.94061,-0.0122511) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658971,0.00677405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.22993,-0.0142206) , 
5, 0.0169717, 1, 0, 0.461198,-0.00110451) , 
0, 0.00157739, 1, 0, 0.616747,-0.00472113) , 
6, 0.0243555, 1, 0, 0.494618,-0.00213009)    );
  // itree = 292
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99652,0.0231666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.090497) , 
6, 0.0313269, 1, 0, 0.99728,0.00409345) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913166,-0.000901385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680584,-0.028023) , 
7, 0.000126083, 1, 0, 0.867687,-0.0181338) , 
0, 7.51277e-05, 1, 0, 0.95121,-0.00380824) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.478195,-0.0174696) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00704738,-0.0179148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254935,0.00959447) , 
4, 0.0121723, 1, 0, 0.193378,0.000853772) , 
2, 0.0238066, 1, 0, 0.216207,-0.000172943) , 
0, 0.00157776, 1, 0, 0.500469,-0.00157889)    );
  // itree = 293
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881849,0.0146459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739993,-0.0151933) , 
4, 0.0104049, 1, 0, 0.801093,-0.00105841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921139,-0.0224192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357587,-0.0056723) , 
0, 0.00157776, 1, 0, 0.583592,-0.0129916) , 
2, 0.0850133, 1, 0, 0.765444,-0.00301428) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957533,0.026543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572973,-7.22992e-05) , 
0, 0.000225164, 1, 0, 0.718736,0.00450571) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.92889e-05,-0.0103628) , 
4, 0.0191545, 1, 0, 5.20306e-05,-0.000610181) , 
0, 0.0047287, 1, 0, 0.208202,0.000871516) , 
2, 0.119029, 1, 0, 0.504569,-0.00119513)    );
  // itree = 294
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846295,-0.0132921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62798,0.00412896) , 
2, 0.0408064, 1, 0, 0.741577,-0.000584228) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818535,0.0200997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768645,0.0508128) , 
2, 0.0680626, 1, 0, 0.796605,0.0103358) , 
6, 0.0330565, 1, 0, 0.747398,0.000570884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752257,-0.0112981) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0761862,-0.0137313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0934337,0.0010789) , 
3, 25.2329, 1, 0, 0.0888625,-0.000929014) , 
0, 0.00157739, 1, 0, 0.166017,-0.00282286) , 
2, 0.14284, 1, 0, 0.498861,-0.00087992)    );
  // itree = 295
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533024,-0.0139033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443874,0.000867712) , 
3, 25.1948, 1, 0, 0.47221,-0.00125275) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794442,-0.00184997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261154,-0.0354803) , 
5, 0.0162749, 1, 0, 0.60757,-0.00745195) , 
6, 0.0299037, 1, 0, 0.489799,-0.00205829) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576809,-0.00607718) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.349894,0.000274171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832176,0.0410095) , 
4, 0.0173602, 1, 0, 0.637143,0.0078402) , 
5, 0.0171564, 1, 0, 0.617876,0.00380935) , 
6, 0.033053, 1, 0, 0.505736,-0.00132818)    );
  // itree = 296
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955872,-0.126143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990548,0.0404071) , 
6, 0.0123063, 1, 0, 0.987035,0.00167102) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780945,-0.026312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883684,-0.0101894) , 
0, 0.000843277, 1, 0, 0.872971,-0.0144913) , 
0, 0.000299183, 1, 0, 0.926884,-0.00685206) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000136923,-0.0116093) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000293266,-0.00742982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013106) , 
5, 0.0168163, 1, 0, 0.000105476,-0.000572222) , 
2, 0.14284, 1, 0, 0.000114221,-0.000704729) , 
0, 0.0031564, 1, 0, 0.504873,-0.00405283)    );
  // itree = 297
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981812,-0.0205411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99068,0.0458242) , 
5, 0.0113581, 1, 0, 0.98695,0.00203768) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866428,-0.00920067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8799,-0.0202474) , 
5, 0.0165897, 1, 0, 0.868451,-0.0130525) , 
0, 0.000299183, 1, 0, 0.924932,-0.00585999) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00190316,0.00674732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000147228,-0.00906406) , 
4, 0.0174013, 1, 0, 9.43156e-05,-0.000570471) , 
0, 0.0117263, 1, 0, 0.000481745,-0.00031061) , 
0, 0.00315669, 1, 0, 0.49435,-0.00327525)    );
  // itree = 298
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763347,-0.0113798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0941715,-0.000499394) , 
2, 0.119029, 1, 0, 0.454384,-0.00195573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911791,-0.0311934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491278,-0.00711839) , 
0, 0.001566, 1, 0, 0.632434,-0.0132179) , 
6, 0.0299031, 1, 0, 0.476738,-0.00336968) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702822,0.0616434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573003,0.00724926) , 
3, 37.5706, 1, 0, 0.626829,0.00853748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65835,-0.0043497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729856,-0.0083165) , 
1, 1.06354, 1, 0, 0.694428,-0.00392574) , 
6, 0.0350407, 1, 0, 0.656888,0.00299556) , 
6, 0.0330524, 1, 0, 0.497623,-0.00263175)    );
  // itree = 299
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.436428,0.0230384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665339,0.0238047) , 
6, 0.0209078, 1, 0, 0.561184,0.00516128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564538,-0.0031693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531436,0.0121849) , 
3, 39.5189, 1, 0, 0.557871,-0.00037452) , 
3, 4.79797, 1, 0, 0.558246,0.000251268) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940201,0.0246184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000833393,-0.0113443) , 
0, 0.00157776, 1, 0, 0.121957,0.000231666) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978748,0.0064859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656913,-0.0156021) , 
0, 0.00082235, 1, 0, 0.784224,-0.00877752) , 
7, 5.94778e-05, 1, 0, 0.428139,-0.0039335) , 
3, 50.3793, 1, 0, 0.500912,-0.00159281)    );
  // itree = 300
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666775,0.0109764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5546,-0.0189993) , 
4, 0.00521762, 1, 0, 0.570524,-0.00327322) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961782,-0.00678469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630433,0.0192294) , 
0, 0.00123123, 1, 0, 0.763764,0.00495455) , 
5, 0.0104971, 1, 0, 0.673398,0.00110695) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913419,-0.0340538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978643,0.0322548) , 
4, 0.0176462, 1, 0, 0.940809,-0.0184869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000106823,-0.0104963) , 
4, 0.0174013, 1, 0, 5.97965e-05,-0.000716788) , 
0, 0.00315552, 1, 0, 0.170531,-0.00393688) , 
5, 0.016958, 1, 0, 0.497936,-0.000652962)    );
  // itree = 301
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775954,0.00368171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9827,0.0424561) , 
6, 0.0308426, 1, 0, 0.800826,0.00325329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0240887) , 
4, 0.0173883, 1, 0, 0.667352,0.00148395) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0338761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976218,0.0167828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000104308,-0.0105771) , 
0, 0.00315669, 1, 0, 0.252847,0.00187871) , 
4, 0.0156901, 1, 0, 0.161354,-0.00321705) , 
5, 0.0170953, 1, 0, 0.492153,-0.000143743)    );
  // itree = 302
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485031,-0.00623012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311252,0.0107288) , 
3, 75.4595, 1, 0, 0.44283,-0.000635478) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559055,-0.00974773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644324,0.0203869) , 
1, 1.2271, 1, 0, 0.627193,0.00406054) , 
6, 0.0268397, 1, 0, 0.477944,0.000258918) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800369,-0.00458274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663455,-0.0240706) , 
2, 0.0816694, 1, 0, 0.73026,-0.0103087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350379,0.00645277) , 
2, 0.214312, 1, 0, 0.608041,-0.00567602) , 
6, 0.0313178, 1, 0, 0.50152,-0.000816607)    );
  // itree = 303
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982095,-0.00789978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995828,0.0668159) , 
5, 0.0157766, 1, 0, 0.984999,0.000743383) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900812,-0.009982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597805,-0.018018) , 
0, 0.00220316, 1, 0, 0.862332,-0.0140896) , 
0, 0.000300346, 1, 0, 0.920588,-0.00704519) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000540107,-0.00160834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.80836e-05,-0.011308) , 
5, 0.0170694, 1, 0, 0.000266542,-0.000364581) , 
2, 0.142905, 1, 0, 0.000189111,-0.000545654) , 
0, 0.00315669, 1, 0, 0.501905,-0.0040886)    );
  // itree = 304
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.403499,-0.0158396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520849,0.0272347) , 
5, 0.00534745, 1, 0, 0.464603,-0.000562149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965917,0.0132407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546725,-0.0249365) , 
4, 0.00914914, 1, 0, 0.721125,-0.00862809) , 
7, 5.54608e-05, 1, 0, 0.5714,-0.00392023) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643772,0.0040826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187323,-0.0135822) , 
4, 0.01741, 1, 0, 0.502597,-4.82836e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.317439,-0.0397745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140156,-0.00986644) , 
4, 0.0156276, 1, 0, 0.209703,-0.00737534) , 
3, 113.486, 1, 0, 0.466485,-0.000951676) , 
5, 0.0102438, 1, 0, 0.496844,-0.00181069)    );
  // itree = 305
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978841,-0.0113608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987556,0.0345857) , 
5, 0.0131113, 1, 0, 0.982592,0.00129958) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863607,-0.0215708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883867,-0.00303796) , 
0, 0.0012529, 1, 0, 0.878373,-0.00975288) , 
0, 0.000300346, 1, 0, 0.928328,-0.00445517) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000154475,-0.0112688) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000885311,0.00671573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.21286e-05,-0.0113783) , 
5, 0.0170953, 1, 0, 0.00039835,-0.000210563) , 
4, 0.010434, 1, 0, 0.000338901,-0.000388189) , 
0, 0.00315479, 1, 0, 0.500371,-0.00257962)    );
  // itree = 306
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956459,-0.0137577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744669,0.0104324) , 
0, 0.000557661, 1, 0, 0.847861,-5.38427e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0290045) , 
4, 0.0104772, 1, 0, 0.560463,-0.00432692) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0208851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683279,0.0373762) , 
6, 0.0198806, 1, 0, 0.292943,0.00286324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70455,-0.0154446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678246,-0.00324518) , 
1, 1.08062, 1, 0, 0.682061,-0.0031604) , 
6, 0.026096, 1, 0, 0.473471,6.86226e-05) , 
5, 0.0101837, 1, 0, 0.498333,-0.0011876)    );
  // itree = 307
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549666,-0.010248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871339,0.0460374) , 
6, 0.00775152, 1, 0, 0.827157,0.00390195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836738,0.00810786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897243,-0.0309011) , 
1, 1.45669, 1, 0, 0.852662,-0.00109934) , 
6, 0.022716, 1, 0, 0.836917,0.00198807) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998979,0.073111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617476,-0.0153016) , 
0, 7.51531e-05, 1, 0, 0.88042,-0.0112439) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00739822,-0.0221374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220632,0.00769737) , 
4, 0.0121795, 1, 0, 0.167623,-0.000438346) , 
0, 0.00157834, 1, 0, 0.334011,-0.0029607) , 
2, 0.0476118, 1, 0, 0.492491,-0.00140121)    );
  // itree = 308
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226182,-0.0224267) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840183,0.00863624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00530056,-0.0296467) , 
5, 0.0175062, 1, 0, 0.673768,0.0015729) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880029,-0.0100435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.43828e-05,-0.0109873) , 
0, 0.0031564, 1, 0, 0.140156,-0.00207928) , 
4, 0.0174193, 1, 0, 0.518058,0.000507186) , 
5, 0.00332021, 1, 0, 0.504881,0.000191912)    );
  // itree = 309
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.416413,-0.00225223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.319016,0.0342459) , 
3, 37.7932, 1, 0, 0.362665,0.00443199) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.438649,-0.00534409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106675,-0.0318826) , 
3, 125.537, 1, 0, 0.405552,-0.00222096) , 
4, 0.00521762, 1, 0, 0.401038,-0.00152071) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923652,-0.0324024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94867,-0.00583156) , 
6, 0.0341017, 1, 0, 0.930836,-0.0176957) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732434,0.00499286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861909,-0.0076888) , 
7, 0.000281581, 1, 0, 0.775313,-0.00115605) , 
0, 0.00181114, 1, 0, 0.847972,-0.00888321) , 
7, 0.000196749, 1, 0, 0.497028,-0.00310198)    );
  // itree = 310
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863465,-0.00990961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879333,0.0368693) , 
3, 21.5954, 1, 0, 0.869849,0.000739652) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853239,-0.0119827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000625954,0.000305649) , 
0, 0.00315046, 1, 0, 0.364804,-0.00598474) , 
2, 0.047566, 1, 0, 0.54692,-0.00355997) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732951,0.0169762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125248,-0.00679139) , 
2, 0.190244, 1, 0, 0.520675,0.00191966) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911833,-0.0121238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130028,-0.00133945) , 
0, 0.00157242, 1, 0, 0.313873,-0.00280971) , 
3, 91.8181, 1, 0, 0.453947,0.000393659) , 
3, 37.8074, 1, 0, 0.49595,-0.0013925)    );
  // itree = 311
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957156,-0.00348687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97209,0.0350609) , 
0, 0.00120245, 1, 0, 0.960482,0.00262264) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99418,-0.0058248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908556,-0.0224051) , 
2, 0.0461704, 1, 0, 0.934826,-0.0132262) , 
7, 0.000158477, 1, 0, 0.95196,-0.00264151) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0081368,-0.0170476) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560045,0.0217735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0211205) , 
4, 0.0191415, 1, 0, 0.276465,0.00284023) , 
4, 0.0121909, 1, 0, 0.212699,0.000913414) , 
0, 0.00157834, 1, 0, 0.497687,-0.000457022)    );
  // itree = 312
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931514,-0.0168521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992105,0.0213239) , 
5, 0.00617353, 1, 0, 0.985494,0.000830322) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898813,-0.00852661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633091,-0.014201) , 
0, 0.00219502, 1, 0, 0.863397,-0.0115583) , 
0, 0.000299183, 1, 0, 0.921882,-0.00562407) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 9.06273e-05,-0.0119145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000100481,-0.00978986) , 
4, 0.01916, 1, 0, 9.53002e-05,-0.000610168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000688936,0.00331615) , 
3, 100.897, 1, 0, 0.000223944,-0.000447875) , 
0, 0.00315479, 1, 0, 0.498472,-0.00324612)    );
  // itree = 313
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619319,0.0427569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17012,-0.000457504) , 
6, 0.00880283, 1, 0, 0.332394,0.00471822) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564675,-0.00152963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858459,-0.0108888) , 
7, 0.00010747, 1, 0, 0.714157,-0.00365563) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936934,-0.0158576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160013,0.00826257) , 
0, 0.0015782, 1, 0, 0.273836,9.54155e-05) , 
4, 0.0156985, 1, 0, 0.522293,-0.00202116) , 
4, 0.00527515, 1, 0, 0.50493,-0.00140496)    );
  // itree = 314
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938183,-0.00168509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796019,-0.0190945) , 
4, 0.0167158, 1, 0, 0.927794,-0.00296166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934036,-0.0213416) , 
5, 0.0175537, 1, 0, 0.928263,-0.00433506) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000130404,-0.0113726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00114732,0.00879455) , 
6, 0.0243495, 1, 0, 0.000348689,-0.00019244) , 
2, 0.142927, 1, 0, 0.000288354,-0.000373125) , 
0, 0.00315669, 1, 0, 0.488616,-0.00245801)    );
  // itree = 315
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552576,-0.00834897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538144,-0.0285472) , 
3, 5.99714, 1, 0, 0.548589,-0.00692658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57565,0.0144281) , 
3, 8.4, 1, 0, 0.557276,-0.00356978) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606514,-0.00307348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947174,0.0175444) , 
7, 0.000267652, 1, 0, 0.645319,2.32787e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0219748) , 
6, 0.0173537, 1, 0, 0,-0.00281844) , 
4, 0.0191066, 1, 0, 0.49013,-0.000676024) , 
3, 12.6032, 1, 0, 0.500448,-0.0011207)    );
  // itree = 316
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.699237,-0.000886117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00415758,-0.021588) , 
2, 0.214201, 1, 0, 0.510158,-0.00146529) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.534287,-0.0231931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73357,-0.00222247) , 
4, 0.0155877, 1, 0, 0.665712,-0.00595665) , 
6, 0.0295743, 1, 0, 0.547859,-0.00255384) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.486954,0.0058908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67411,0.0403908) , 
4, 0.0119307, 1, 0, 0.56005,0.00537875) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.274273,-0.0143003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141748,0.00855833) , 
2, 0.190592, 1, 0, 0.198787,-0.00148722) , 
4, 0.0156506, 1, 0, 0.379594,0.0019491) , 
3, 75.6676, 1, 0, 0.50582,-0.00142883)    );
  // itree = 317
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655915,0.00984098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00647436,-0.0168866) , 
2, 0.0679815, 1, 0, 0.315352,-0.00039229) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947411,-0.0119487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865655,0.00912943) , 
2, 0.0408064, 1, 0, 0.894404,0.00270124) , 
7, 7.55173e-05, 1, 0, 0.633426,0.00130699) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0718739,-0.0110008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000117947,-0.00887161) , 
0, 0.0126268, 1, 0, 0.0233633,-0.00284255) , 
2, 0.285666, 1, 0, 0.500677,0.000404059)    );
  // itree = 318
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918493,0.00613086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885236,0.0354017) , 
2, 0.0136021, 1, 0, 0.907367,0.00212504) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935114,-0.0101593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.208227,-0.00171996) , 
0, 0.0015782, 1, 0, 0.430671,-0.00225319) , 
2, 0.0238066, 1, 0, 0.531148,-0.00133036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0478114,0.0103333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648543,0.0117194) , 
7, 6.37932e-05, 1, 0, 0.237604,0.00340028) , 
3, 113.486, 1, 0, 0.497477,-0.000787741)    );
  // itree = 319
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800235,0.0108053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7599,-0.00513368) , 
3, 38.4118, 1, 0, 0.782123,0.00100956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708179,-0.00710072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000338698,-0.00473069) , 
0, 0.00315669, 1, 0, 0.172774,-0.00283428) , 
2, 0.142833, 1, 0, 0.539472,-0.000521114) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882548,-0.0171682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114934,-5.97429e-05) , 
0, 0.00157242, 1, 0, 0.285179,-0.00483756) , 
3, 100.874, 1, 0, 0.501269,-0.00116958)    );
  // itree = 320
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973819,-0.00353088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512206,0.0109455) , 
0, 0.00143293, 1, 0, 0.763418,0.00162779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0239087) , 
4, 0.0191212, 1, 0, 0.630363,0.000703237) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0627984,-0.0151806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000122853,-0.00847597) , 
0, 0.0142051, 1, 0, 0.0213615,-0.00360789) , 
2, 0.285666, 1, 0, 0.50113,-0.000211606)    );
  // itree = 321
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.855497,-0.00468628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0267197,-0.0244789) , 
4, 0.0121785, 1, 0, 0.635886,-0.00407449) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00503946,-0.0209401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411225,0.0133796) , 
4, 0.0121773, 1, 0, 0.327893,0.00108516) , 
5, 0.0122504, 1, 0, 0.467848,-0.00125943) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799475,-0.00581555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675749,-0.0384415) , 
2, 0.122705, 1, 0, 0.758674,-0.0162422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389404,0.00231523) , 
2, 0.214462, 1, 0, 0.641031,-0.0104747) , 
6, 0.0313131, 1, 0, 0.497605,-0.00284284)    );
  // itree = 322
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564625,-0.0140739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654448,0.00780888) , 
5, 0.00476889, 1, 0, 0.647034,0.00107136) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0475996,-0.0201588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130972) , 
4, 0.0193018, 1, 0, 0.0121773,-0.00176166) , 
4, 0.0139173, 1, 0, 0.401644,-2.3684e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965592,-0.0118352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881564,-0.0224635) , 
4, 0.0164172, 1, 0, 0.928609,-0.0130793) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892253,-0.013912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727491,0.0137056) , 
2, 0.0713763, 1, 0, 0.784842,0.00357098) , 
0, 0.00181114, 1, 0, 0.851767,-0.00417996) , 
7, 0.000196749, 1, 0, 0.499225,-0.000924705)    );
  // itree = 323
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959703,-0.00732605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958185,0.0471212) , 
0, 0.000969026, 1, 0, 0.959209,0.00425731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000400043,-0.0163603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00233417,0.0224525) , 
3, 75.6595, 1, 0, 0.000996231,-0.00165141) , 
0, 0.00157523, 1, 0, 0.387329,0.00073087) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997676,0.0431559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601954,-0.0256812) , 
0, 7.51582e-05, 1, 0, 0.932135,-0.0132179) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498116,-0.0083355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.367887,0.013407) , 
4, 0.0156803, 1, 0, 0.433897,-5.95333e-05) , 
0, 0.00157834, 1, 0, 0.615208,-0.0048479) , 
6, 0.0226161, 1, 0, 0.497277,-0.00196079)    );
  // itree = 324
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.46006,-0.00429567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631212,-0.0104714) , 
6, 0.0299735, 1, 0, 0.481706,-0.00190544) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652656,0.0306463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581396,0.00446801) , 
6, 0.0338424, 1, 0, 0.613934,0.00532359) , 
6, 0.0331302, 1, 0, 0.489517,-0.0014784) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783212,-0.00369708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536359,-0.0163507) , 
2, 0.142584, 1, 0, 0.66096,-0.00834801) , 
6, 0.0347916, 1, 0, 0.500541,-0.00192013)    );
  // itree = 325
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587995,-0.00230145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562543,-0.0256014) , 
7, 9.00583e-05, 1, 0, 0.583751,-0.00367901) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67869,-0.0263236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19331,0.00979426) , 
2, 0.0476111, 1, 0, 0.301293,0.000305203) , 
5, 0.0102034, 1, 0, 0.401593,-0.00110958) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98948,0.0355809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435155,-0.0301896) , 
5, 0.0152711, 1, 0, 0.799486,-0.0184943) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907079,-0.0196075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863246,0.0276388) , 
0, 0.00191779, 1, 0, 0.88393,0.000339178) , 
4, 0.0154693, 1, 0, 0.851556,-0.00688116) , 
7, 0.00019548, 1, 0, 0.498932,-0.00235813)    );
  // itree = 326
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876896,0.0129121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148219,-0.0193845) , 
2, 0.0475278, 1, 0, 0.454652,-0.00227945) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771614,0.0217952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336382,-0.00259109) , 
4, 0.0174456, 1, 0, 0.669312,0.0059844) , 
6, 0.0226264, 1, 0, 0.556882,0.00165613) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4175,-0.0202321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.365292,0.0014457) , 
5, 0.00683103, 1, 0, 0.37463,-0.000804969) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822366,0.000231483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882262,-0.0232602) , 
1, 1.20906, 1, 0, 0.842673,-0.00602855) , 
7, 0.00019548, 1, 0, 0.473665,-0.00191024) , 
3, 25.2086, 1, 0, 0.499328,-0.000810427)    );
  // itree = 327
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.24612,-0.0248443) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283897,0.0283853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504521,-0.00542555) , 
4, 0.00524569, 1, 0, 0.486346,-0.00107189) , 
5, 0.00330418, 1, 0, 0.475377,-0.00174063) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751436,-0.022106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467045,-0.0313732) , 
6, 0.0340615, 1, 0, 0.602364,-0.0211555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.493295,-0.0133427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780537,0.0120303) , 
6, 0.0352242, 1, 0, 0.66421,6.9633e-05) , 
4, 0.017317, 1, 0, 0.636129,-0.00956763) , 
6, 0.0330522, 1, 0, 0.494896,-0.00269098)    );
  // itree = 328
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961481,0.0126923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0590871,-0.00862153) , 
0, 0.00156946, 1, 0, 0.458992,0.000856043) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.324284,-0.0198644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704687,0.000173436) , 
5, 0.0134354, 1, 0, 0.645227,-0.00198147) , 
6, 0.0261007, 1, 0, 0.526833,-0.000177601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128853,-0.0133152) , 
3, 138.725, 1, 0, 0.497941,-0.000610614)    );
  // itree = 329
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900261,0.0129036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810266,0.0430046) , 
3, 73.8638, 1, 0, 0.883519,0.0042) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985384,-0.0194602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531112,0.0196612) , 
0, 0.00157091, 1, 0, 0.742265,0.000169899) , 
4, 0.0104671, 1, 0, 0.801479,0.00185931) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47656,0.00190196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723391,-0.0388208) , 
6, 0.0295096, 1, 0, 0.558736,-0.00816604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472825,0.0225119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132999,-0.00369248) , 
2, 0.168771, 1, 0, 0.183288,0.000169877) , 
2, 0.133815, 1, 0, 0.245858,-0.00121934) , 
2, 0.0952265, 1, 0, 0.503453,0.000207976)    );
  // itree = 330
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.356407,0.00160093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566854,-0.0204375) , 
6, 0.0209849, 1, 0, 0.381748,-0.00108376) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868489,-0.0147192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523132,0.0083501) , 
2, 0.0475992, 1, 0, 0.613695,0.00144049) , 
6, 0.0231953, 1, 0, 0.478161,-3.45041e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661238,0.000450148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659216,-0.0170329) , 
6, 0.0356201, 1, 0, 0.660199,-0.00820701) , 
6, 0.0347914, 1, 0, 0.489988,-0.000565463)    );
  // itree = 331
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994009,0.0185009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87039,-0.00910226) , 
0, 0.000150299, 1, 0, 0.928506,-0.00471864) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000241733,-0.00672162) , 
2, 0.142833, 1, 0, 0.000172126,-0.00045635) , 
0, 0.0031564, 1, 0, 0.528113,-0.00288031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145954,0.0747249) , 
3, 138.566, 1, 0, 0.50178,-0.00211118)    );
  // itree = 332
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.48526,-0.00833757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.37572,-0.0220973) , 
3, 61.5548, 1, 0, 0.451089,-0.00593469) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.36502,-0.00161671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840125,-0.0054628) , 
7, 0.000169215, 1, 0, 0.492546,-0.00126232) , 
5, 0.00661439, 1, 0, 0.48694,-0.0018941) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800708,-0.00549499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498546,-0.0179105) , 
2, 0.166519, 1, 0, 0.671687,-0.0109629) , 
6, 0.0347914, 1, 0, 0.498807,-0.00247661)    );
  // itree = 333
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594064,0.00155999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615982,0.0567904) , 
6, 0.0105183, 1, 0, 0.607954,0.00304468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000876044,-0.0148496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000272694,-0.00510588) , 
2, 0.193869, 1, 0, 0.000441697,-0.000895586) , 
2, 0.0714198, 1, 0, 0.1716,0.000214529) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78854,-0.00697392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832841,0.0147892) , 
1, 1.48389, 1, 0, 0.801325,-0.00145508) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992419,0.0119097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812741,-0.0223256) , 
0, 0.000288433, 1, 0, 0.891013,-0.0103399) , 
1, 1.88322, 1, 0, 0.8135,-0.00266116) , 
7, 5.73802e-05, 1, 0, 0.499452,-0.00125424)    );
  // itree = 334
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994029,-0.0305381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0886809) , 
5, 0.0139786, 1, 0, 0.996262,0.00116169) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913178,0.00137451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672521,-0.0262944) , 
4, 0.0108317, 1, 0, 0.848723,-0.0193468) , 
0, 7.5153e-05, 1, 0, 0.942063,-0.00637216) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00430531,-0.0279738) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938819,0.0147603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131089) , 
0, 0.00308383, 1, 0, 0.283333,0.00280225) , 
4, 0.0121723, 1, 0, 0.215896,-0.000275639) , 
0, 0.00157834, 1, 0, 0.496993,-0.00263558)    );
  // itree = 335
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99802,0.0207159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0884755) , 
5, 0.0148461, 1, 0, 0.998619,0.00228452) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908206,-0.00497423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645019,-0.0239694) , 
6, 0.0226623, 1, 0, 0.859458,-0.0169676) , 
0, 7.51531e-05, 1, 0, 0.948658,-0.0046273) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00346978,-0.0232812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00143873,-0.00490846) , 
2, 0.143141, 1, 0, 0.0020127,-0.00170316) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695163,0.0269899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.230676,-0.00412293) , 
2, 0.14284, 1, 0, 0.464871,0.00293051) , 
6, 0.0243645, 1, 0, 0.214878,0.000427832) , 
0, 0.00157834, 1, 0, 0.497685,-0.00152047)    );
  // itree = 336
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949605,-0.00212412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954418,-0.037384) , 
5, 0.0169467, 1, 0, 0.949934,-0.00244873) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867016,-0.00626092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565452,-0.0220998) , 
2, 0.142344, 1, 0, 0.724257,-0.0301052) , 
0, 0.00210242, 1, 0, 0.927668,-0.00517737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000560714,-0.00123042) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130976) , 
4, 0.0191367, 1, 0, 0,-0.000565618) , 
5, 0.0170929, 1, 0, 0.00022596,-0.000360975) , 
0, 0.00315669, 1, 0, 0.497877,-0.00294538)    );
  // itree = 337
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854218,0.0743491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741499,0.00192724) , 
2, 0.0113351, 1, 0, 0.812826,0.0035471) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507656,-0.00494921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000136263,-0.00937459) , 
0, 0.00473503, 1, 0, 0.0372964,-0.00082437) , 
2, 0.0238059, 1, 0, 0.171373,-6.86147e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86431,-0.00699453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490719,-0.0306036) , 
7, 0.000107348, 1, 0, 0.759572,-0.0103368) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845851,0.000975955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777184,-0.0139263) , 
6, 0.035614, 1, 0, 0.840331,-0.000946815) , 
5, 0.0109315, 1, 0, 0.818247,-0.00351451) , 
7, 5.94779e-05, 1, 0, 0.499603,-0.0018171)    );
  // itree = 338
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.590507,-0.0187697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398986,0.00794763) , 
5, 0.0103085, 1, 0, 0.478124,-0.00242387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846112,-0.0233163) , 
7, 0.000199184, 1, 0, 0.556767,-0.00808761) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544143,0.00137313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.457675,-0.0115914) , 
3, 75.4826, 1, 0, 0.523611,-0.000592751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.161755,-0.0232445) , 
3, 132.72, 1, 0, 0.491518,-0.00146078) , 
3, 12.6113, 1, 0, 0.501541,-0.00247882)    );
  // itree = 339
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.469871,-0.00407807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130916,0.0206625) , 
3, 126.115, 1, 0, 0.439714,-0.000609218) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849306,-0.0092696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470801,0.0234912) , 
2, 0.0714002, 1, 0, 0.597423,0.00374999) , 
6, 0.0268346, 1, 0, 0.470039,0.000228997) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655359,-0.0016274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692519,-0.00920627) , 
6, 0.0350437, 1, 0, 0.666695,-0.00337163) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553589,0.00114989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445154,-0.0274175) , 
1, 1.11123, 1, 0, 0.496266,-0.0151845) , 
3, 75.0981, 1, 0, 0.615575,-0.00691484) , 
6, 0.0313127, 1, 0, 0.496011,-0.00104584)    );
  // itree = 340
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87185,0.0392033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679802,-0.0146768) , 
4, 0.0133488, 1, 0, 0.792845,0.00207999) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766575,-0.019601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.693421,-0.00631068) , 
3, 36.5058, 1, 0, 0.720256,-0.00416763) , 
3, 12.5697, 1, 0, 0.732309,-0.00313027) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.416952,0.014823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188527,-0.00974487) , 
5, 0.0171256, 1, 0, 0.310571,0.0044405) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.90206e-05,-0.00999278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168582,-0.00714097) , 
7, 7.01412e-05, 1, 0, 0.0349485,-0.00183345) , 
2, 0.261945, 1, 0, 0.13521,0.000448786) , 
2, 0.166646, 1, 0, 0.502233,-0.00175118)    );
  // itree = 341
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206948,0.00711214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.479478,-0.0371059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809051,0.00767305) , 
5, 0.00559794, 1, 0, 0.610918,-0.00834882) , 
7, 1.27127e-05, 1, 0, 0.445786,-0.00431041) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96993,0.0136426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.146544,-0.00428282) , 
0, 0.00157739, 1, 0, 0.455896,0.00102309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515391,-0.0176552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731028,0.00569685) , 
4, 0.015647, 1, 0, 0.654624,-0.00253523) , 
6, 0.0295739, 1, 0, 0.509606,6.13788e-05) , 
5, 0.00678647, 1, 0, 0.500688,-0.000549504)    );
  // itree = 342
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882042,0.034948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847244,-0.0226544) , 
3, 53.9991, 1, 0, 0.871406,0.00127752) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896275,-0.00882008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186299,-0.000259759) , 
0, 0.00157834, 1, 0, 0.364069,-0.00184418) , 
2, 0.0476132, 1, 0, 0.531309,-0.000815127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.189927,-0.0224374) , 
3, 126.092, 1, 0, 0.500851,-0.00141229)    );
  // itree = 343
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.311252,0.00951824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218406,-0.0140094) , 
4, 0.00350489, 1, 0, 0.227309,-0.00110539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910129,0.01563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823603,0.000706252) , 
6, 0.0254768, 1, 0, 0.858798,0.00286165) , 
7, 5.94779e-05, 1, 0, 0.581806,0.00112158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000635192,-0.0167614) , 
2, 0.357083, 1, 0, 0.502061,0.000508724)    );
  // itree = 344
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686553,-0.0124618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.231754,0.0166737) , 
5, 0.0126064, 1, 0, 0.478596,-0.00230479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848143,-0.0237293) , 
7, 0.000211103, 1, 0, 0.549197,-0.00592369) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962632,0.00728431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945046,-0.023261) , 
6, 0.0244165, 1, 0, 0.956272,-0.00261787) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00216447,-0.0180325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460473,0.0166005) , 
6, 0.0243554, 1, 0, 0.212144,0.00137652) , 
0, 0.00157834, 1, 0, 0.490733,-0.000118915) , 
3, 12.6137, 1, 0, 0.49973,-0.00101221)    );
  // itree = 345
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935652,-0.0108494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976113,0.0323498) , 
5, 0.0090524, 1, 0, 0.955207,0.00247021) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932866,-0.0215873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972689,0.00179982) , 
7, 0.000289242, 1, 0, 0.941201,-0.0120904) , 
6, 0.0243994, 1, 0, 0.950148,-0.00278922) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0064992,-0.0195601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.36914e-05,-0.010574) , 
0, 0.0151017, 1, 0, 0.00197268,-0.00227017) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686962,0.0190283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257365,-0.00382268) , 
5, 0.0170026, 1, 0, 0.490589,0.00336479) , 
6, 0.0243555, 1, 0, 0.221708,0.000263931) , 
0, 0.00157776, 1, 0, 0.506761,-0.000930827)    );
  // itree = 346
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961762,0.00950745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127762,-0.00724972) , 
0, 0.00157265, 1, 0, 0.45807,0.00029612) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652976,-0.0202783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582083,0.00390832) , 
3, 46.1204, 1, 0, 0.618342,-0.0068803) , 
6, 0.0299027, 1, 0, 0.478332,-0.000611136) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939791,-0.0130651) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651137,0.0412619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308261,0.00345965) , 
2, 0.142848, 1, 0, 0.459439,0.00791683) , 
0, 0.00156071, 1, 0, 0.621877,0.00325669) , 
6, 0.0330521, 1, 0, 0.495269,-0.00015476)    );
  // itree = 347
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997396,0.0236275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9536,0.0584733) , 
0, 0.000120127, 1, 0, 0.977378,0.0084887) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61724,-0.010899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131121) , 
0, 0.00366416, 1, 0, 0.118831,-0.00370447) , 
0, 0.00126142, 1, 0, 0.568005,0.00267475) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.486215,-0.00260851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549303,-0.0175218) , 
7, 0.000172944, 1, 0, 0.495969,-0.00374201) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.414204,-0.0120453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468076,0.00484915) , 
4, 0.0141846, 1, 0, 0.46015,0.000303683) , 
5, 0.0136566, 1, 0, 0.473259,-0.00117697) , 
4, 0.0104574, 1, 0, 0.50256,1.41876e-05)    );
  // itree = 348
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632387,-0.0134629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742234,0.0211198) , 
5, 0.0104398, 1, 0, 0.668729,-0.000910892) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504243,-0.0282857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401109,-0.0168697) , 
3, 36.7031, 1, 0, 0.444449,-0.0168493) , 
6, 0.02609, 1, 0, 0.638117,-0.00308634) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973064,0.00195907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892535,-0.0189081) , 
4, 0.0167106, 1, 0, 0.943514,-0.00525923) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0239715,-0.00899007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829668,0.0140649) , 
7, 0.000196881, 1, 0, 0.23643,0.00209292) , 
0, 0.00157776, 1, 0, 0.383121,0.00056765) , 
5, 0.0136907, 1, 0, 0.504594,-0.00117301)    );
  // itree = 349
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922482,-0.0158871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000112655,-0.010059) , 
0, 0.00315669, 1, 0, 0.217696,-0.00196213) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842766,0.0343399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131014) , 
0, 0.00473218, 1, 0, 0.141156,0.00146872) , 
3, 37.8326, 1, 0, 0.172348,7.05513e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.837799,-0.0102187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838666,0.0069553) , 
3, 12.4354, 1, 0, 0.838361,-0.000480467) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824733,-0.0440958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782071,-0.00405129) , 
3, 47.9734, 1, 0, 0.790682,-0.00526656) , 
3, 37.3065, 1, 0, 0.813184,-0.00300782) , 
7, 5.73802e-05, 1, 0, 0.50014,-0.00150406)    );
  // itree = 350
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953929,-0.130927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989976,0.023829) , 
6, 0.0122881, 1, 0, 0.986123,0.000193391) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906265,-0.00576454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649655,-0.0125831) , 
0, 0.00220316, 1, 0, 0.876251,-0.00744012) , 
0, 0.000300346, 1, 0, 0.92876,-0.003792) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131217) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000697711,0.00183608) , 
6, 0.0243269, 1, 0, 0.000209464,-0.000202874) , 
2, 0.14284, 1, 0, 0.000148938,-0.000375443) , 
0, 0.00315669, 1, 0, 0.497932,-0.00220689)    );
  // itree = 351
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983286,-0.00829054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548459,-0.0132512) , 
2, 0.0691354, 1, 0, 0.912432,-0.0062884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000110102,-0.0105154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000235498,-0.00117239) , 
2, 0.261865, 1, 0, 0.000170696,-0.000241349) , 
0, 0.00314529, 1, 0, 0.384802,-0.00279093) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88587,0.044355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835559,-0.0102883) , 
3, 12.4352, 1, 0, 0.84432,-0.00162401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62269,0.0191498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0402224,-0.0106896) , 
2, 0.307109, 1, 0, 0.451487,0.00462346) , 
2, 0.0951949, 1, 0, 0.624837,0.00186657) , 
6, 0.0226206, 1, 0, 0.498288,-0.000588918)    );
  // itree = 352
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.437888,0.00396931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327664,0.0654453) , 
3, 37.7889, 1, 0, 0.377354,0.00625883) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762227,-0.0158998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731611,0.00550106) , 
5, 0.00993058, 1, 0, 0.740144,-0.000164356) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716095,-0.00753358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.21142e-05,-0.0109718) , 
0, 0.0031564, 1, 0, 0.145834,-0.00280727) , 
2, 0.166626, 1, 0, 0.515058,-0.00116532) , 
4, 0.0052228, 1, 0, 0.504166,-0.000578069)    );
  // itree = 353
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760272,-0.00914139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447889,0.0039924) , 
5, 0.00970625, 1, 0, 0.579705,-0.00123599) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92539,-0.0136751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374263,-0.0251003) , 
2, 0.189923, 1, 0, 0.817213,-0.0129462) , 
7, 0.000160964, 1, 0, 0.641979,-0.00430634) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942455,-0.0102865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548787,0.0321787) , 
0, 0.00142391, 1, 0, 0.69034,0.00506375) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0257055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000240767,-0.00247282) , 
0, 0.0237207, 1, 0, 0.000143785,-0.00298462) , 
4, 0.0186516, 1, 0, 0.276775,0.000241174) , 
4, 0.0156719, 1, 0, 0.496459,-0.00249433)    );
  // itree = 354
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.49669,0.0153302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374445,-0.027425) , 
3, 49.4154, 1, 0, 0.445426,-0.00610102) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673,0.0116293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00651382,-0.0170042) , 
2, 0.214253, 1, 0, 0.458869,0.000875718) , 
5, 0.00613672, 1, 0, 0.457106,-3.9223e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650027,0.00596909) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.350623,-0.0265244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713566,-0.00653558) , 
4, 0.0156517, 1, 0, 0.615828,-0.00797193) , 
6, 0.0305751, 1, 0, 0.620566,-0.00658263) , 
6, 0.0295733, 1, 0, 0.496781,-0.00162745)    );
  // itree = 355
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.855825,-0.017957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795405,-0.0727541) , 
2, 0.0349731, 1, 0, 0.850237,-0.00627566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772114,0.0419781) , 
2, 0.0408064, 1, 0, 0.84219,-0.00475707) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0636695,-0.00359675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803016,0.00875237) , 
7, 0.000103727, 1, 0, 0.245501,0.000973634) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.463786,-0.0235837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654333,-0.00238912) , 
4, 0.0156876, 1, 0, 0.587954,-0.00537519) , 
6, 0.0295739, 1, 0, 0.33975,-0.000773667) , 
2, 0.0476111, 1, 0, 0.49928,-0.00203844)    );
  // itree = 356
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.391045,0.00742251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.275533,0.0394746) , 
3, 50.1034, 1, 0, 0.341412,0.00566782) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836569,0.00493785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0233531) , 
4, 0.0171481, 1, 0, 0.685244,0.000552892) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.148594,-0.0274604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.238304,0.0284849) , 
4, 0.0171585, 1, 0, 0.205277,-0.00220064) , 
5, 0.0167877, 1, 0, 0.514722,-0.000425379) , 
4, 0.00522181, 1, 0, 0.499342,0.000115343)    );
  // itree = 357
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798,-0.010379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865317,0.00477383) , 
5, 0.00910648, 1, 0, 0.836024,-0.000836127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0276076) , 
4, 0.0139582, 1, 0, 0.639877,-0.00306091) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933582,-0.0243307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948046,-0.00299191) , 
5, 0.0148693, 1, 0, 0.944315,-0.00430195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.366088,0.0135132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0244749) , 
4, 0.0191255, 1, 0, 0.232083,0.00121198) , 
0, 0.00157523, 1, 0, 0.375224,0.000103813) , 
5, 0.013663, 1, 0, 0.499082,-0.00137728)    );
  // itree = 358
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999463,0.0648207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996364,0.0494525) , 
2, 0.155901, 1, 0, 0.999065,0.00252485) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912422,-0.00160919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645683,-0.0243761) , 
7, 0.000126424, 1, 0, 0.861548,-0.0155356) , 
0, 7.50005e-05, 1, 0, 0.949285,-0.0040129) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00758221,-0.0219158) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931121,0.00920743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133149) , 
0, 0.00308281, 1, 0, 0.285688,0.00172742) , 
4, 0.0121723, 1, 0, 0.216535,-0.000239735) , 
0, 0.00157728, 1, 0, 0.49869,-0.00169264)    );
  // itree = 359
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915345,0.0125619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197275,-0.013737) , 
2, 0.0475609, 1, 0, 0.583108,-0.00314595) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760077,0.0057603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.270842,-0.00626626) , 
5, 0.0161026, 1, 0, 0.508203,0.00036376) , 
5, 0.0102506, 1, 0, 0.530719,-0.000691255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.182763,-0.019037) , 
3, 126.113, 1, 0, 0.500616,-0.00131842)    );
  // itree = 360
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.808522,0.0430661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396787,0.00475783) , 
4, 0.00526316, 1, 0, 0.52637,0.00444141) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640983,-0.0173159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131022) , 
0, 0.00788697, 1, 0, 0.0487006,-0.000787011) , 
5, 0.00679359, 1, 0, 0.167002,0.000507877) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801394,-0.0164144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563834,-0.0297622) , 
3, 113.373, 1, 0, 0.785323,-0.010928) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916278,-0.00557302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708118,0.0192497) , 
2, 0.214185, 1, 0, 0.869399,0.00102902) , 
7, 0.000241522, 1, 0, 0.807034,-0.00784042) , 
7, 5.73802e-05, 1, 0, 0.49393,-0.00375644)    );
  // itree = 361
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769706,-0.00070872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327806,-0.0375599) , 
3, 125.657, 1, 0, 0.744212,-0.00104604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841204,0.0129221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131019) , 
0, 0.00469122, 1, 0, 0.329894,0.00417055) , 
2, 0.149606, 1, 0, 0.64813,0.000163712) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000172323,-0.00850058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130951) , 
4, 0.0191356, 1, 0, 8.54843e-05,-0.000246586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150311,-0.0143272) , 
7, 5.73178e-05, 1, 0, 0.031129,-0.00354768) , 
2, 0.261873, 1, 0, 0.4936,-0.000765818)    );
  // itree = 362
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.408102,-0.0190255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57107,0.0297147) , 
5, 0.00524577, 1, 0, 0.451534,-0.00379047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671454,0.00836096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.69147e-05,-0.0311645) , 
4, 0.0156727, 1, 0, 0.464746,0.000886746) , 
5, 0.00612041, 1, 0, 0.462984,0.000263095) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63536,-0.0130949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624109,0.00512322) , 
1, 1.12957, 1, 0, 0.629993,-0.00359215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60006,-0.0377221) , 
1, 1.22313, 1, 0, 0.624698,-0.00659496) , 
6, 0.0295755, 1, 0, 0.50298,-0.00143308)    );
  // itree = 363
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77556,0.0106454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192454,-0.0105369) , 
2, 0.0453288, 1, 0, 0.581218,-0.00102628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939442,-0.0105994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909682,-0.0293047) , 
3, 66.0415, 1, 0, 0.932755,-0.00648434) , 
7, 8.87929e-05, 1, 0, 0.777343,-0.00407137) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00512731,0.000748742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470132,-0.0122077) , 
7, 0.000119238, 1, 0, 0.121563,-0.00351864) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00288557,-0.00737575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818298,0.016172) , 
7, 0.000196815, 1, 0, 0.236807,0.0024362) , 
4, 0.0139322, 1, 0, 0.198745,0.000469517) , 
2, 0.119033, 1, 0, 0.499779,-0.00189302)    );
  // itree = 364
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987918,-0.01618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985187,0.0364865) , 
3, 46.0977, 1, 0, 0.98678,0.0003495) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826838,-0.0262029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890586,-0.0102652) , 
0, 0.000984383, 1, 0, 0.881146,-0.0138164) , 
0, 0.000300598, 1, 0, 0.931868,-0.00701434) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00102485,0.00609177) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130956) , 
4, 0.0191329, 1, 0, 0,-0.000351536) , 
0, 0.0117259, 1, 0, 0.000228185,-0.000201303) , 
0, 0.00315669, 1, 0, 0.507083,-0.00390791)    );
  // itree = 365
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964389,0.0210486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0090326,-0.0149411) , 
0, 0.0012405, 1, 0, 0.532334,0.000363562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923981,-0.0284349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506667,0.000378321) , 
0, 0.00129336, 1, 0, 0.691309,-0.00783348) , 
4, 0.00926755, 1, 0, 0.594166,-0.00282464) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.827127,0.0142588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.120736,-0.00709088) , 
2, 0.261799, 1, 0, 0.710399,0.00293725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.393071,-0.0171963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.60347e-05,-0.0085252) , 
0, 0.00789099, 1, 0, 0.0454633,-0.0023555) , 
4, 0.0179565, 1, 0, 0.428061,0.000689897) , 
4, 0.0121642, 1, 0, 0.493624,-0.00069732)    );
  // itree = 366
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.368431,-0.000732493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851557,-0.0165946) , 
7, 5.26362e-05, 1, 0, 0.675672,-0.00562773) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226162,-0.00376497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80587,0.0163874) , 
6, 0.0347913, 1, 0, 0.313408,0.000546724) , 
4, 0.0156866, 1, 0, 0.546449,-0.00342525) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902821,0.016238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.60705e-05,-0.00982614) , 
0, 0.00470971, 1, 0, 0.418601,0.00280765) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544975,-0.00841634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61562,-0.0170982) , 
6, 0.0350407, 1, 0, 0.577313,-0.00677701) , 
6, 0.033053, 1, 0, 0.439487,0.00154631) , 
3, 50.4096, 1, 0, 0.500503,-0.00128966)    );
  // itree = 367
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933111,0.00542034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920161,-0.0137921) , 
4, 0.0106743, 1, 0, 0.925063,-0.00593944) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00134767,0.024837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131045) , 
5, 0.016076, 1, 0, 0.000565185,0.000134903) , 
0, 0.0031564, 1, 0, 0.535084,-0.00337711) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.548969,-0.0137021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498523,0.00495149) , 
4, 0.00869989, 1, 0, 0.508569,-0.000346015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851605,0.0167215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000174722,-0.00621964) , 
0, 0.00471726, 1, 0, 0.278099,0.00334359) , 
3, 101.478, 1, 0, 0.43063,0.000901717) , 
3, 50.4369, 1, 0, 0.490359,-0.00154502)    );
  // itree = 368
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.163614,-0.00300485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817577,-0.00706991) , 
7, 4.49326e-05, 1, 0, 0.532587,-0.00216837) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.373663,0.0295916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279863,0.000141895) , 
4, 0.0104444, 1, 0, 0.305606,0.00203429) , 
3, 87.7725, 1, 0, 0.487846,-0.00133996) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796167,0.00700468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522619,-0.0196982) , 
2, 0.142427, 1, 0, 0.655171,-0.00988084) , 
6, 0.0347918, 1, 0, 0.498842,-0.00190124)    );
  // itree = 369
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883999,0.0261343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327908,0.00525315) , 
4, 0.0069966, 1, 0, 0.613838,0.00309938) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00170113,-0.018342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000209853,-0.00211655) , 
4, 0.0121956, 1, 0, 0.000644389,-0.0013685) , 
2, 0.0714177, 1, 0, 0.185129,-2.42985e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.797356,-0.0283332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840341,-0.00650157) , 
5, 0.0125166, 1, 0, 0.822294,-0.00943124) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934102,0.00865517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633331,-0.00927625) , 
2, 0.0952148, 1, 0, 0.802521,-0.0025412) , 
3, 24.8725, 1, 0, 0.809034,-0.00481064) , 
7, 6.51623e-05, 1, 0, 0.499861,-0.00243879)    );
  // itree = 370
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.246622,-0.0218141) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980666,0.0409733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140035,-0.00496097) , 
0, 0.00125263, 1, 0, 0.575016,0.00306277) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952817,-0.0143438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.280991,0.00376648) , 
0, 0.00157776, 1, 0, 0.484968,-0.00125247) , 
4, 0.0104444, 1, 0, 0.511876,3.70067e-05) , 
5, 0.00336176, 1, 0, 0.500473,-0.000421048)    );
  // itree = 371
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56594,0.035519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531989,-0.0153231) , 
3, 2.56994, 1, 0, 0.546943,-0.00129617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846726,0.00780945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291654,0.0294385) , 
2, 0.0714079, 1, 0, 0.546242,0.00409302) , 
3, 5.40201, 1, 0, 0.546552,0.00170517) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543377,-0.0148843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535743,-1.38965e-05) , 
3, 29.7692, 1, 0, 0.539703,-0.00295579) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.501723,-0.00670368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424653,0.00309111) , 
5, 0.0102941, 1, 0, 0.444963,-0.000190778) , 
3, 48.6436, 1, 0, 0.48998,-0.00150461) , 
3, 12.6113, 1, 0, 0.499051,-0.000989952)    );
  // itree = 372
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.330333,-0.00578968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879924,0.0112321) , 
7, 9.88562e-05, 1, 0, 0.507256,0.000891051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153862,-0.00130179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.820611,-0.0143801) , 
7, 9.75716e-05, 1, 0, 0.305344,-0.00294099) , 
3, 75.6717, 1, 0, 0.456088,-8.00584e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652756,-0.000832777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665258,-0.0329322) , 
1, 1.22313, 1, 0, 0.654838,-0.00351401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662763,-0.0418505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436787,-0.00346121) , 
3, 101.937, 1, 0, 0.536461,-0.0119253) , 
3, 75.0993, 1, 0, 0.62311,-0.00576843) , 
6, 0.0295739, 1, 0, 0.497306,-0.00148386)    );
  // itree = 373
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.412037,-0.000608032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6946,-0.0350061) , 
4, 0.00534845, 1, 0, 0.524416,-0.00460136) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.563949,0.000447003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583929,0.035175) , 
3, 28.7905, 1, 0, 0.568124,0.00148493) , 
4, 0.0070035, 1, 0, 0.56143,0.000552848) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.422221,-0.0159059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300604,0.0232712) , 
5, 0.00532747, 1, 0, 0.315672,0.00122388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944972,-0.0180773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355326,-0.0030992) , 
0, 0.00157776, 1, 0, 0.557457,-0.00326079) , 
6, 0.0208798, 1, 0, 0.443913,-0.00115475) , 
3, 37.7907, 1, 0, 0.494802,-0.000415297)    );
  // itree = 374
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944124,-0.0197038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334073,0.00691405) , 
0, 0.00116176, 1, 0, 0.622841,-0.00239872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767983,-0.032178) , 
5, 0.012928, 1, 0, 0.634413,-0.00393509) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619592,-0.0102406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013103) , 
0, 0.00788881, 1, 0, 0.0562375,-0.000944087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943267,-0.00807366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816608,0.0214143) , 
0, 0.00189072, 1, 0, 0.885873,0.00305384) , 
7, 0.00019548, 1, 0, 0.382819,0.000629677) , 
5, 0.0135738, 1, 0, 0.501715,-0.0015275)    );
  // itree = 375
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.411391,-0.0163976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489993,0.0187281) , 
5, 0.00536072, 1, 0, 0.45451,-0.00105918) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474086,-0.0387041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846882,-0.0080143) , 
5, 0.0082479, 1, 0, 0.718604,-0.0114777) , 
7, 5.54608e-05, 1, 0, 0.56384,-0.00537226) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846342,0.0178964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0262373) , 
5, 0.0160193, 1, 0, 0.579471,0.00170339) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.263467,-0.0197465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346807,0.00297162) , 
5, 0.0161046, 1, 0, 0.331786,-0.00297893) , 
4, 0.0156564, 1, 0, 0.464841,-0.000463609) , 
5, 0.0102506, 1, 0, 0.493366,-0.00187793)    );
  // itree = 376
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961726,0.0135357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00128688,-0.014603) , 
0, 0.0015782, 1, 0, 0.439659,0.00112287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.134464,-0.0140434) , 
3, 113.505, 1, 0, 0.404417,0.00011813) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992011,-0.0172414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894813,-0.0205106) , 
2, 0.0439034, 1, 0, 0.923789,-0.0161633) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45987,-0.0130849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467887,0.00698519) , 
1, 1.13449, 1, 0, 0.465668,-0.00142024) , 
0, 0.00157174, 1, 0, 0.621553,-0.00643684) , 
6, 0.0243623, 1, 0, 0.49561,-0.00263484)    );
  // itree = 377
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904623,0.0498902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595033,0.00682373) , 
4, 0.00526475, 1, 0, 0.683534,0.00295541) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00510085,-0.0232097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0040132,0.00756683) , 
3, 37.8326, 1, 0, 0.00443581,-0.000672361) , 
2, 0.0476111, 1, 0, 0.169733,0.000210663) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783137,-0.00490485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82805,0.0276842) , 
1, 1.51438, 1, 0, 0.788238,-0.00124112) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88963,-0.0108473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791655,-0.0427048) , 
4, 0.0106812, 1, 0, 0.870924,-0.0105287) , 
1, 1.62503, 1, 0, 0.810827,-0.00377838) , 
7, 5.73802e-05, 1, 0, 0.500929,-0.00185012)    );
  // itree = 378
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838617,0.0209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0482532,-0.0195164) , 
2, 0.0713986, 1, 0, 0.427498,-0.00166449) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77309,0.0252036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553969,0.00460033) , 
4, 0.0156926, 1, 0, 0.68625,0.004786) , 
6, 0.0208788, 1, 0, 0.560669,0.00165536) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.336635,0.0311958) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592037,-0.0136148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368172,-0.000282779) , 
5, 0.0135925, 1, 0, 0.464208,-0.00252839) , 
4, 0.00522239, 1, 0, 0.453799,-0.00186717) , 
3, 37.8347, 1, 0, 0.501099,-0.000308129)    );
  // itree = 379
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811468,-0.0141065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6152,0.011867) , 
3, 86.3018, 1, 0, 0.78438,-0.00230643) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68701,0.0119319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.014713,-0.00386247) , 
0, 0.00157776, 1, 0, 0.0734505,0.000984542) , 
2, 0.0952236, 1, 0, 0.429456,-0.000663448) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.5001,-0.0391771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374051,-0.0159779) , 
3, 37.581, 1, 0, 0.426064,-0.0115023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.693392,0.00133132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740792,-0.0134097) , 
6, 0.0355371, 1, 0, 0.699125,-0.00111355) , 
4, 0.0139397, 1, 0, 0.627015,-0.00385702) , 
6, 0.0260954, 1, 0, 0.499829,-0.00180103)    );
  // itree = 380
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.350188,-0.00635106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588596,-0.0207301) , 
7, 2.70474e-05, 1, 0, 0.454457,-0.00462513) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965487,0.00862245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0939508,-0.0102067) , 
0, 0.00157728, 1, 0, 0.38845,-0.000370994) , 
5, 0.00685897, 1, 0, 0.400133,-0.00112397) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656128,-0.0359741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921266,-0.0220318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850438,0.00848127) , 
0, 0.00188787, 1, 0, 0.885669,-0.00408518) , 
4, 0.014574, 1, 0, 0.845924,-0.00802459) , 
7, 0.00019548, 1, 0, 0.497222,-0.00262687)    );
  // itree = 381
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.556457,-0.000200079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50968,-0.0582629) , 
3, 11.6525, 1, 0, 0.546678,-0.00426874) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.565758,0.0040362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527332,-0.0189345) , 
3, 46.9585, 1, 0, 0.562625,4.54051e-05) , 
3, 14.396, 1, 0, 0.557506,-0.00133949) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9189,-0.0170323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00101279,0.00987716) , 
0, 0.00157776, 1, 0, 0.126865,-0.000628416) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917518,-0.00129379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672391,0.00878787) , 
2, 0.0713763, 1, 0, 0.781848,0.0028096) , 
7, 5.94778e-05, 1, 0, 0.42842,0.00095445) , 
3, 50.3876, 1, 0, 0.5008,-0.000331782)    );
  // itree = 382
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231218,-0.0215632) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98343,0.033356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0106717,-0.00954048) , 
0, 0.00120833, 1, 0, 0.525688,0.00224401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.353464,-0.0196907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530834,-0.000979695) , 
5, 0.00986781, 1, 0, 0.507957,-0.000972007) , 
4, 0.00870096, 1, 0, 0.511591,-0.000312776) , 
5, 0.00339598, 1, 0, 0.499341,-0.000634785)    );
  // itree = 383
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751646,-0.00174341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437722,0.0213133) , 
2, 0.134888, 1, 0, 0.722624,0.000385124) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643725,-0.00873816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130994) , 
0, 0.00315046, 1, 0, 0.10675,-0.00213958) , 
2, 0.166646, 1, 0, 0.486621,-0.000582344) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654971,-0.0157443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65362,0.00737263) , 
6, 0.0357029, 1, 0, 0.654331,-0.00542817) , 
6, 0.0347916, 1, 0, 0.497503,-0.000896782)    );
  // itree = 384
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962685,0.0307381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0233756) , 
0, 0.00157265, 1, 0, 0.27583,0.000263384) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939111,-0.00813115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476957,-0.015535) , 
2, 0.141509, 1, 0, 0.828286,-0.00763157) , 
7, 8.21113e-05, 1, 0, 0.545657,-0.00359262) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716136,0.0011115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.244097,0.0123835) , 
2, 0.152985, 1, 0, 0.555642,0.00155232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00195942,-0.0180313) , 
2, 0.357099, 1, 0, 0.478519,0.000971526) , 
3, 25.2225, 1, 0, 0.49941,-0.000448646)    );
  // itree = 385
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993095,-0.0009677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852504,0.0216677) , 
2, 0.16156, 1, 0, 0.974353,0.00151367) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945382,-0.00137109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762838,-0.0180613) , 
4, 0.0106962, 1, 0, 0.895803,-0.0119606) , 
0, 0.000525004, 1, 0, 0.949928,-0.00267607) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00573909,-0.0193498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00160537,-0.00284474) , 
2, 0.142964, 1, 0, 0.00277407,-0.00151998) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729047,0.0282157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264338,0.000607648) , 
2, 0.119015, 1, 0, 0.463373,0.00366547) , 
6, 0.0243563, 1, 0, 0.216839,0.00088997) , 
0, 0.00157623, 1, 0, 0.500573,-0.000490227)    );
  // itree = 386
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495507,-0.00891654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750778,0.0106721) , 
4, 0.00795259, 1, 0, 0.654827,0.00110676) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.107137,-0.0258586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.05176e-05,-0.00928996) , 
0, 0.0157834, 1, 0, 0.0211295,-0.00254429) , 
4, 0.0139173, 1, 0, 0.40793,-0.000315731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964374,0.0516282) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687611,-0.0164747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869595,0.00954809) , 
7, 0.000237801, 1, 0, 0.833262,0.00194364) , 
6, 0.0297835, 1, 0, 0.853134,0.00333572) , 
7, 0.000198687, 1, 0, 0.502952,0.000463617)    );
  // itree = 387
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956937,0.00662745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939081,-0.0442985) , 
7, 8.414e-05, 1, 0, 0.949542,-0.00825023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640215,0.0110951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0234929) , 
4, 0.0140429, 1, 0, 0.357455,0.000642476) , 
0, 0.00118438, 1, 0, 0.633355,-0.00350134) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867529,0.0247313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127692,-0.0216074) , 
5, 0.0153431, 1, 0, 0.389101,-0.00185313) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79653,0.025654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0178257) , 
4, 0.0186333, 1, 0, 0.374303,0.00286719) , 
4, 0.0156521, 1, 0, 0.380846,0.00078012) , 
5, 0.0135641, 1, 0, 0.498404,-0.00121316)    );
  // itree = 388
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527247,-0.00670032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512737,0.029045) , 
3, 71.3757, 1, 0, 0.525794,-0.00129959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.786989,0.00189344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366487,0.0224306) , 
2, 0.214231, 1, 0, 0.670989,0.00293536) , 
6, 0.0313134, 1, 0, 0.551457,-0.000551061) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898086,-0.0184728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248293,0.0119035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.076656,-0.0185585) , 
5, 0.016433, 1, 0, 0.139935,-0.000796268) , 
0, 0.00157091, 1, 0, 0.329853,-0.00433245) , 
3, 88.1791, 1, 0, 0.507145,-0.00130719)    );
  // itree = 389
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985815,0.00380223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649888,0.0148785) , 
2, 0.166626, 1, 0, 0.957542,0.00204707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00965297,-0.0195273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.256333,0.00308375) , 
4, 0.012193, 1, 0, 0.196766,-0.00124466) , 
0, 0.0015782, 1, 0, 0.492019,3.2844e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782327,-0.026821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479584,-0.000940002) , 
2, 0.166611, 1, 0, 0.647664,-0.0100131) , 
6, 0.0347915, 1, 0, 0.502506,-0.000644019)    );
  // itree = 390
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960671,0.0094273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00155424,-0.0178746) , 
0, 0.00157834, 1, 0, 0.441549,2.74482e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947203,-0.0153708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.496987,0.00048593) , 
0, 0.00157739, 1, 0, 0.649361,-0.00221427) , 
6, 0.0243555, 1, 0, 0.529463,-0.000920899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137777,-0.0309897) , 
3, 138.725, 1, 0, 0.502713,-0.00144524)    );
  // itree = 391
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992263,0.00984346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839221,0.0135421) , 
2, 0.094901, 1, 0, 0.964892,0.00341026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909493,-0.0200817) , 
4, 0.0165777, 1, 0, 0.959199,0.00163631) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00614261,-0.0313103) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619602,0.0220608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.245546,-0.000131626) , 
4, 0.0133683, 1, 0, 0.278846,0.00068833) , 
4, 0.0122097, 1, 0, 0.215158,-0.00175768) , 
0, 0.00157834, 1, 0, 0.500603,-0.000455606)    );
  // itree = 392
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.484808,0.00220923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461493,-0.01362) , 
3, 28.8098, 1, 0, 0.479468,-0.000623646) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821593,-0.0206045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860465,0.00417273) , 
3, 14.4116, 1, 0, 0.844672,-0.00718681) , 
7, 0.00020795, 1, 0, 0.551773,-0.00192307) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.265843,0.0182106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862198,0.0405974) , 
7, 9.36259e-05, 1, 0, 0.534464,0.0047818) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.489016,-0.001612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138372,0.0267804) , 
3, 141.302, 1, 0, 0.440595,0.000260144) , 
3, 48.6495, 1, 0, 0.458078,0.00110232) , 
3, 37.8338, 1, 0, 0.499881,-0.000247478)    );
  // itree = 393
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547004,-0.00085426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497757,-0.0129694) , 
3, 52.143, 1, 0, 0.543371,-0.000773193) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.181891,0.00399391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85301,0.0262373) , 
7, 5.94156e-05, 1, 0, 0.541646,0.00444084) , 
3, 57.6419, 1, 0, 0.543094,6.2693e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787976,0.00237553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554707,-0.0368158) , 
4, 0.010471, 1, 0, 0.635215,-0.00953381) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0349061,-0.00977236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438352,0.0180376) , 
6, 0.0261101, 1, 0, 0.193929,0.000350762) , 
2, 0.118975, 1, 0, 0.376588,-0.0037407) , 
3, 75.6583, 1, 0, 0.500776,-0.000903948)    );
  // itree = 394
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880674,0.00499359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845375,-0.0274982) , 
3, 47.1157, 1, 0, 0.868824,-0.00247308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608604,-0.0455014) , 
3, 98.9668, 1, 0, 0.846116,-0.00481769) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.187999,-0.0165681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131118,-0.00334928) , 
3, 36.7321, 1, 0, 0.15444,-0.0038702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47323,0.00209563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00161555,-0.0156327) , 
2, 0.349172, 1, 0, 0.375651,-8.92509e-05) , 
5, 0.00992864, 1, 0, 0.335589,-0.000773999) , 
2, 0.0476132, 1, 0, 0.493979,-0.00202854)    );
  // itree = 395
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955248,0.0818891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90757,0.033477) , 
4, 0.00525405, 1, 0, 0.918314,0.00309269) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832086,-0.0144636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392194,0.0109453) , 
5, 0.0164377, 1, 0, 0.725665,-0.00483006) , 
2, 0.0113351, 1, 0, 0.766864,-0.00313574) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700137,0.0252257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0410745,0.000333277) , 
0, 0.0015782, 1, 0, 0.0897151,0.00145194) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636954,-0.0145577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.35403,0.00251202) , 
2, 0.20976, 1, 0, 0.478595,-0.00296905) , 
6, 0.0295793, 1, 0, 0.196951,0.000232825) , 
2, 0.119033, 1, 0, 0.494557,-0.00152623)    );
  // itree = 396
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962011,-0.0301006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986297,0.0171321) , 
6, 0.0122861, 1, 0, 0.983774,0.000458319) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825469,-0.0217799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890832,-0.00241318) , 
0, 0.00111188, 1, 0, 0.877558,-0.00646631) , 
0, 0.000299183, 1, 0, 0.928408,-0.00315122) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131234) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00051857,0.00637967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.35475e-05,-0.00916626) , 
4, 0.0121831, 1, 0, 0.000206379,-6.95895e-05) , 
2, 0.14284, 1, 0, 0.000148206,-0.000223921) , 
0, 0.00315552, 1, 0, 0.500945,-0.0018032)    );
  // itree = 397
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545286,-0.00536525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398325,-0.0167604) , 
3, 49.258, 1, 0, 0.483648,-0.0047077) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970586,0.010151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.054985,-0.00935357) , 
0, 0.00157776, 1, 0, 0.411979,0.000456825) , 
5, 0.00599526, 1, 0, 0.421924,-0.000259849) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851923,-0.0119039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740024,-0.0235772) , 
4, 0.0160682, 1, 0, 0.806783,-0.00737851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883587,0.0194355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211813,-0.00509047) , 
0, 0.00157225, 1, 0, 0.358703,0.000412373) , 
2, 0.166585, 1, 0, 0.633739,-0.00436975) , 
6, 0.0260954, 1, 0, 0.498507,-0.00174582)    );
  // itree = 398
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736929,0.00539927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.059451,-0.0107642) , 
2, 0.142835, 1, 0, 0.456197,-0.000348283) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696574,-0.0237513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566629,-0.00166986) , 
3, 47.5953, 1, 0, 0.633352,-0.0102858) , 
6, 0.0299027, 1, 0, 0.478309,-0.00158867) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964704,0.0128915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517692,0.0230934) , 
0, 0.00155928, 1, 0, 0.669564,0.00671613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510813,-0.00805786) , 
3, 75.0894, 1, 0, 0.624175,0.0039531) , 
6, 0.0330521, 1, 0, 0.495801,-0.000924102)    );
  // itree = 399
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616398,-0.000333578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933836,-0.015752) , 
7, 0.000141665, 1, 0, 0.72259,-0.00261383) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.804396,-0.0303488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738362,-0.0304595) , 
2, 0.0872599, 1, 0, 0.777586,-0.016775) , 
6, 0.0330532, 1, 0, 0.728787,-0.00420965) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0123697,-0.00815775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0165591,0.00667998) , 
3, 75.6757, 1, 0, 0.0137142,-0.000595) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.58393,0.00329051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814099,0.0242538) , 
7, 0.000281438, 1, 0, 0.668778,0.00713835) , 
7, 0.000196815, 1, 0, 0.137282,0.00086378) , 
2, 0.166626, 1, 0, 0.5052,-0.00229191)    );
  // itree = 400
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.295249,-0.0134662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548398,0.0140614) , 
4, 0.00372011, 1, 0, 0.390081,-0.00512645) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726343,0.00498027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0659411,-0.00868067) , 
2, 0.166646, 1, 0, 0.47676,6.06513e-06) , 
4, 0.00521929, 1, 0, 0.468574,-0.000478636) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641914,-0.0129049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641578,0.0108886) , 
6, 0.0340864, 1, 0, 0.641777,-0.0026673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626018,-0.0222268) , 
6, 0.0357868, 1, 0, 0.639308,-0.00616121) , 
6, 0.0313126, 1, 0, 0.498546,-0.00147618)    );
  // itree = 401
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953933,-0.000214085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851079,-0.0261885) , 
4, 0.0166985, 1, 0, 0.946025,-0.00176538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72414,-0.0129568) , 
0, 0.00210419, 1, 0, 0.925244,-0.00364006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00169348,0.0219301) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00017951,0.00598704) , 
2, 0.357115, 1, 0, 4.78339e-05,-0.000205843) , 
0, 0.0117304, 1, 0, 0.000410285,7.13882e-05) , 
0, 0.00315669, 1, 0, 0.498899,-0.00192909)    );
  // itree = 402
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.551483,0.0038035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576029,-0.0191359) , 
3, 4.79974, 1, 0, 0.559147,-0.00188871) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.280863,0.00506125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848099,0.0213378) , 
7, 7.60622e-05, 1, 0, 0.559808,0.00390069) , 
3, 7.20733, 1, 0, 0.559614,0.00220235) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975101,-0.00245025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767891,-0.0119261) , 
2, 0.11844, 1, 0, 0.921375,-0.00489521) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00104258,0.0141574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.22424e-05,-0.00935422) , 
4, 0.0121953, 1, 0, 0.000357193,3.07312e-05) , 
0, 0.00315552, 1, 0, 0.471427,-0.00248872) , 
3, 25.2206, 1, 0, 0.498327,-0.0010578)    );
  // itree = 403
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.468284,-0.0084259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409444,0.00579558) , 
3, 30.0217, 1, 0, 0.432695,1.4147e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.111699,-0.0160995) , 
3, 126.095, 1, 0, 0.401934,-0.000470094) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889811,-0.02843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964018,-0.0057664) , 
5, 0.0162808, 1, 0, 0.923702,-0.0147675) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880272,-0.00750951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614958,0.0115034) , 
2, 0.142347, 1, 0, 0.772341,0.000842314) , 
0, 0.00171389, 1, 0, 0.840939,-0.00623214) , 
7, 0.000196529, 1, 0, 0.495974,-0.00170439)    );
  // itree = 404
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.496607,-0.0130434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565619,0.00272716) , 
4, 0.00698229, 1, 0, 0.554525,0.000103767) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504728,-0.0277942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555722,0.00464753) , 
3, 27.5411, 1, 0, 0.539984,-0.00411459) , 
3, 23.4214, 1, 0, 0.549348,-0.00139789) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0390044,-0.0145988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789834,0.0120581) , 
7, 1.88059e-05, 1, 0, 0.424535,0.00200593) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.604648,0.000422588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516079,-0.0131423) , 
1, 1.10038, 1, 0, 0.571852,-0.00482004) , 
6, 0.0330532, 1, 0, 0.443307,0.00113611) , 
3, 37.8347, 1, 0, 0.490139,1.69987e-05)    );
  // itree = 405
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.224196,0.0190895) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906044,0.00888974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774946,-0.0119516) , 
4, 0.00977585, 1, 0, 0.823853,-0.00186349) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658577,0.0113255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.22154,-0.00360034) , 
2, 0.112332, 1, 0, 0.30187,-2.01276e-05) , 
2, 0.0714166, 1, 0, 0.512217,-0.000762957) , 
4, 0.00348272, 1, 0, 0.498222,-0.000498508)    );
  // itree = 406
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.25698,-0.00574049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867901,0.0274325) , 
7, 6.86552e-05, 1, 0, 0.490407,0.00240825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.447786,-0.00992897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279177,0.00507478) , 
3, 72.6628, 1, 0, 0.392519,-0.00139352) , 
3, 12.6141, 1, 0, 0.407343,-0.000817807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.503855,-0.0449251) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913103,0.00248346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828639,-0.0213358) , 
3, 74.6171, 1, 0, 0.892289,-0.00380604) , 
4, 0.0143534, 1, 0, 0.842207,-0.00834898) , 
7, 0.000196749, 1, 0, 0.501332,-0.00244557)    );
  // itree = 407
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706191,0.0506265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0137717,-0.0126449) , 
2, 0.047566, 1, 0, 0.226481,0.000123452) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938811,-0.0131759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430381,-0.0186308) , 
2, 0.142366, 1, 0, 0.821436,-0.0103702) , 
7, 6.4789e-05, 1, 0, 0.543931,-0.00547562) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.546543,0.014915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513915,-0.0045432) , 
3, 44.2415, 1, 0, 0.525725,0.000233879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872303,0.0202146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000530128,0.00820938) , 
0, 0.00314484, 1, 0, 0.259491,0.00451097) , 
3, 105.097, 1, 0, 0.472523,0.00108858) , 
3, 25.2235, 1, 0, 0.494556,-0.000936772)    );
  // itree = 408
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57631,-0.0125496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409714,0.000862541) , 
5, 0.00914858, 1, 0, 0.456878,-0.000736968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768382,-0.0272292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358849,0.0135393) , 
2, 0.190434, 1, 0, 0.620518,-0.00843143) , 
6, 0.0298175, 1, 0, 0.486331,-0.00212187) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689421,0.00219677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664428,0.0351216) , 
3, 35.8121, 1, 0, 0.674726,0.00574302) , 
6, 0.0347914, 1, 0, 0.498449,-0.001616)    );
  // itree = 409
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.368737,0.00946965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639453,-0.00740271) , 
6, 0.0182229, 1, 0, 0.531103,-0.0015466) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881469,0.00854387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131003) , 
0, 0.00472037, 1, 0, 0.388015,0.00191129) , 
3, 62.9854, 1, 0, 0.482934,-0.000382521) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850774,0.0478021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492655,0.00130387) , 
2, 0.166316, 1, 0, 0.694561,0.00537289) , 
6, 0.0347914, 1, 0, 0.496165,-2.26784e-05)    );
  // itree = 410
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0819978,-0.0230633) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853599,0.0586837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0484933,-0.00132448) , 
2, 0.0475952, 1, 0, 0.369583,0.00172376) , 
6, 0.00498414, 1, 0, 0.309243,0.000753327) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984608,0.00820142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878177,-0.0112982) , 
0, 0.000448775, 1, 0, 0.927978,-0.00586167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000969862,0.0337038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000140762,-0.009021) , 
6, 0.025604, 1, 0, 0.000526686,0.000156805) , 
0, 0.00315669, 1, 0, 0.597117,-0.00371463) , 
6, 0.0174043, 1, 0, 0.494694,-0.00212496)    );
  // itree = 411
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950081,-0.00774001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939634,0.0195837) , 
0, 0.00202219, 1, 0, 0.949262,-0.00219462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545634,-0.0100843) , 
0, 0.00223544, 1, 0, 0.928908,-0.00332092) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131148) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000491632,0.0139442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013104) , 
5, 0.0170694, 1, 0, 0.000196166,-6.31824e-05) , 
4, 0.0104471, 1, 0, 0.000143477,-0.000202001) , 
0, 0.00315669, 1, 0, 0.489155,-0.00184417)    );
  // itree = 412
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.428604,-0.00603676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129445,0.0426869) , 
3, 113.486, 1, 0, 0.390658,-0.000225514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533714,-0.0265457) , 
6, 0.0215607, 1, 0, 0.399669,-0.00129543) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939049,0.0144997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165911,-0.0123649) , 
4, 0.0167172, 1, 0, 0.771286,0.00376164) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.187878,-0.017615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552106,0.0398771) , 
4, 0.0174034, 1, 0, 0.347918,-0.00118274) , 
5, 0.0170953, 1, 0, 0.62467,0.00204935) , 
6, 0.0226412, 1, 0, 0.507919,0.000313785)    );
  // itree = 413
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976388,-0.00109841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720579,-0.00912096) , 
2, 0.142273, 1, 0, 0.93322,-0.00249143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860933,-0.0218372) , 
3, 110.792, 1, 0, 0.928712,-0.00344395) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000134961,-0.00983588) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 7.56149e-05,-0.00787111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00108254,0.0228961) , 
6, 0.0243374, 1, 0, 0.000372987,0.000121745) , 
2, 0.142835, 1, 0, 0.000305612,-2.6858e-05) , 
0, 0.0031564, 1, 0, 0.506487,-0.00188991)    );
  // itree = 414
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930889,0.0817791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859399,-0.0145793) , 
2, 0.00345285, 1, 0, 0.870211,-0.00250413) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824581,-0.00984948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73074,-0.0319578) , 
3, 37.576, 1, 0, 0.776838,-0.0128565) , 
2, 0.0362723, 1, 0, 0.854837,-0.00420874) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995943,0.0196598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660822,-0.00818212) , 
0, 7.51277e-05, 1, 0, 0.899049,-0.00411506) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.274086,0.0105361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0788194,-0.0113218) , 
5, 0.016958, 1, 0, 0.168244,0.000526732) , 
0, 0.0015782, 1, 0, 0.337297,-0.000547024) , 
2, 0.0476118, 1, 0, 0.499987,-0.00169809)    );
  // itree = 415
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530225,-0.001139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67279,-0.0100346) , 
6, 0.034792, 1, 0, 0.539684,-0.000758572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468735,-0.0166382) , 
3, 91.2662, 1, 0, 0.53695,-0.00122313) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889453,0.0132646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000537058,0.0127948) , 
0, 0.00314347, 1, 0, 0.294669,0.00355386) , 
3, 100.89, 1, 0, 0.502245,-0.000538872)    );
  // itree = 416
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.373566,0.00111181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56295,-0.0235694) , 
6, 0.0215276, 1, 0, 0.384754,-0.000892956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911107,0.015757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131012) , 
0, 0.00473329, 1, 0, 0.445989,0.00304926) , 
6, 0.0226106, 1, 0, 0.404829,0.000399445) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635026,-0.0343363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679564,-0.0168214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956314,0.00918779) , 
4, 0.0153485, 1, 0, 0.879855,0.000443983) , 
5, 0.0146187, 1, 0, 0.840964,-0.00371087) , 
7, 0.000196881, 1, 0, 0.499298,-0.000490865)    );
  // itree = 417
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820932,0.00968938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229327,-0.0048064) , 
2, 0.0952236, 1, 0, 0.52304,9.42872e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179504,-0.0163887) , 
3, 126.094, 1, 0, 0.492982,-0.000345344) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657658,-0.00278967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676963,-0.012844) , 
6, 0.0355372, 1, 0, 0.668465,-0.00846815) , 
6, 0.0347913, 1, 0, 0.504489,-0.000878013)    );
  // itree = 418
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771058,-0.00786591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968656,0.0187825) , 
7, 9.23139e-05, 1, 0, 0.825384,0.000124752) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918225,-0.0341457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0012983,-0.00121983) , 
0, 0.00263433, 1, 0, 0.221572,-0.00623365) , 
5, 0.0114223, 1, 0, 0.610101,-0.00214227) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868637,0.0202284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0208372,-0.0198737) , 
4, 0.0168175, 1, 0, 0.583244,0.0023305) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936287,-0.0107465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.94966e-05,-0.00842972) , 
0, 0.00315455, 1, 0, 0.235383,-0.00248954) , 
5, 0.0169717, 1, 0, 0.434416,0.000268296) , 
4, 0.0121795, 1, 0, 0.503759,-0.000683163)    );
  // itree = 419
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91714,0.0128708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856673,-0.0115091) , 
3, 61.5646, 1, 0, 0.9014,-0.00013479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0667815,-0.0124968) , 
2, 0.0714111, 1, 0, 0.570107,-0.00239246) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849646,0.0166093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.23126,-0.0143392) , 
4, 0.0156888, 1, 0, 0.752774,0.00286683) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0324359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351548,0.0171878) , 
4, 0.0156564, 1, 0, 0.245157,-0.00114885) , 
5, 0.0160054, 1, 0, 0.474347,0.000664236) , 
5, 0.0101989, 1, 0, 0.501611,-0.000206039)    );
  // itree = 420
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.246479,-0.00266044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.402471,-0.0277642) , 
6, 0.0143928, 1, 0, 0.2655,-0.00143156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574628,0.00437549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.496461,0.0541826) , 
3, 37.8486, 1, 0, 0.534259,0.00351097) , 
6, 0.0159085, 1, 0, 0.351715,0.000153951) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7217,-0.00673014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509653,0.00403706) , 
4, 0.0156853, 1, 0, 0.636685,-0.00140364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.319447,-0.0278956) , 
3, 126.022, 1, 0, 0.614218,-0.00228202) , 
6, 0.0208787, 1, 0, 0.488934,-0.00111941)    );
  // itree = 421
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924347,0.0747761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866894,-0.022704) , 
8, 0.0324361, 1, 0, 0.894601,0.000102094) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.381336,-0.0215637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395868,-0.00638072) , 
5, 0.0127434, 1, 0, 0.390625,-0.00928197) , 
2, 0.0475686, 1, 0, 0.578695,-0.00578009) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991139,0.0251723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880512,-0.0133417) , 
0, 0.000225307, 1, 0, 0.953337,-0.00301065) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00849422,-0.0191043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279622,0.00793862) , 
4, 0.0121782, 1, 0, 0.215489,0.000349181) , 
0, 0.00157834, 1, 0, 0.494986,-0.000923525) , 
3, 12.6092, 1, 0, 0.50791,-0.00167331)    );
  // itree = 422
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857055,-0.0215667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849473,0.0201004) , 
6, 0.0261368, 1, 0, 0.85527,-0.00174119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.749939,-0.0380964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766742,-0.00488793) , 
2, 0.0416768, 1, 0, 0.758708,-0.00994437) , 
2, 0.0362723, 1, 0, 0.839261,-0.00310122) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697331,-0.00885063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00068502,-0.0009348) , 
0, 0.00223375, 1, 0, 0.183897,-0.00366772) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.224471,0.0145937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419158,-0.00329148) , 
4, 0.0121795, 1, 0, 0.3698,0.000129992) , 
5, 0.0102811, 1, 0, 0.333131,-0.000619097) , 
2, 0.0476118, 1, 0, 0.492258,-0.00139948)    );
  // itree = 423
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982967,-0.0061617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993659,0.0544353) , 
5, 0.015769, 1, 0, 0.985231,0.000557407) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810252,-0.0216094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884843,-0.00538212) , 
0, 0.00110968, 1, 0, 0.869735,-0.00922151) , 
0, 0.000297941, 1, 0, 0.924569,-0.00457878) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000711962,0.0104458) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0001564,0.000285967) , 
2, 0.309486, 1, 0, 6.02268e-05,-0.000197515) , 
5, 0.0170694, 1, 0, 0.000302619,-7.64349e-06) , 
0, 0.00314692, 1, 0, 0.500949,-0.00248368)    );
  // itree = 424
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.2112,0.0371715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393041,-0.00544048) , 
4, 0.00348846, 1, 0, 0.380708,-0.000514102) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927,-0.013271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822812,0.0128221) , 
2, 0.0237122, 1, 0, 0.838022,0.00424219) , 
7, 0.000171774, 1, 0, 0.485685,0.000577712) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82175,0.00106677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54747,-0.0137085) , 
2, 0.142877, 1, 0, 0.68124,-0.00627037) , 
6, 0.0347914, 1, 0, 0.498056,0.000144501)    );
  // itree = 425
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764745,-0.00164198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850089,0.0167328) , 
4, 0.0104645, 1, 0, 0.80915,0.00270834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0202774) , 
5, 0.0170391, 1, 0, 0.645543,0.00154853) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974432,0.0111257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89426,-0.0243411) , 
1, 1.11093, 1, 0, 0.931927,-0.0102307) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.347305,-0.026113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136113,0.00344366) , 
2, 0.0477222, 1, 0, 0.159598,-0.000308924) , 
0, 0.00157834, 1, 0, 0.270592,-0.00173482) , 
4, 0.0156623, 1, 0, 0.496827,0.000246258)    );
  // itree = 426
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962217,0.00462912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730757,0.0263821) , 
0, 0.000450328, 1, 0, 0.847005,0.00534998) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000506936,0.039972) , 
2, 0.357088, 1, 0, 0.000135731,-0.000127143) , 
0, 0.0047346, 1, 0, 0.171264,0.000979626) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807401,-0.0140203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839556,0.0064483) , 
7, 0.000149479, 1, 0, 0.826217,-0.000515452) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.740085,-0.000937412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794389,-0.0174534) , 
7, 0.000162629, 1, 0, 0.771764,-0.00628124) , 
3, 50.3914, 1, 0, 0.804508,-0.00281417) , 
7, 5.73797e-05, 1, 0, 0.500427,-0.000992408)    );
  // itree = 427
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897509,-0.00941518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695268,0.0246113) , 
5, 0.00724387, 1, 0, 0.775089,0.00053359) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924656,0.0777477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845489,-0.0169848) , 
2, 0.00680451, 1, 0, 0.855793,-0.00621824) , 
6, 0.0209212, 1, 0, 0.814086,-0.00272898) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0791359,0.00195018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452228,-0.00945416) , 
6, 0.0239387, 1, 0, 0.176126,-0.000732006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.563563,0.0390055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550713,0.00359937) , 
6, 0.031564, 1, 0, 0.554424,0.00409929) , 
6, 0.0295708, 1, 0, 0.282361,0.000624731) , 
2, 0.0714177, 1, 0, 0.497423,-0.000731716)    );
  // itree = 428
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948898,-0.0147573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.225848,0.00246399) , 
0, 0.00111688, 1, 0, 0.590558,-0.00205063) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653997,0.0101139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0213297) , 
4, 0.0191663, 1, 0, 0.525108,0.00176411) , 
5, 0.0102143, 1, 0, 0.545302,0.000587095) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970629,0.0112113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837696,-0.0159474) , 
0, 0.000744852, 1, 0, 0.902291,-0.0109625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000569404,0.0096742) , 
0, 0.00314347, 1, 0, 0.368291,-0.00432816) , 
3, 75.6692, 1, 0, 0.50023,-0.000664478)    );
  // itree = 429
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975187,-0.00156374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939498,0.0192496) , 
0, 0.000372702, 1, 0, 0.957671,0.00418896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00136642,0.0228274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00034617,-0.0240524) , 
6, 0.00993764, 1, 0, 0.000837497,-0.00133958) , 
0, 0.00157623, 1, 0, 0.370148,0.000794274) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60399,0.00266924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636817,-0.00486254) , 
6, 0.0283562, 1, 0, 0.622665,-0.00100082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.574608,-0.0188214) , 
1, 1.65588, 1, 0, 0.618949,-0.00163458) , 
6, 0.0208779, 1, 0, 0.501972,-0.000492617)    );
  // itree = 430
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982426,0.0108785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992521,0.0621275) , 
7, 0.000238044, 1, 0, 0.984834,0.00200772) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812085,-0.0239106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927482,0.00969385) , 
0, 0.00115252, 1, 0, 0.870545,-0.0134678) , 
0, 0.00030051, 1, 0, 0.946235,-0.00321881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00793094,-0.0122182) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93402,0.01086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000103519,-0.0080407) , 
0, 0.00308472, 1, 0, 0.274762,0.00195879) , 
4, 0.0121795, 1, 0, 0.209696,0.000572821) , 
0, 0.00157776, 1, 0, 0.491822,-0.000879539)    );
  // itree = 431
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226766,0.0261466) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630931,0.00278035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567614,-0.0186096) , 
3, 25.2358, 1, 0, 0.588805,-0.00503812) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53051,0.0027583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192421,-0.015476) , 
3, 126.114, 1, 0, 0.499775,0.000263072) , 
4, 0.00820894, 1, 0, 0.512825,-0.000513959) , 
4, 0.00348177, 1, 0, 0.499386,-0.000262374)    );
  // itree = 432
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.34965,0.00559396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672228,-0.0259206) , 
6, 0.00994086, 1, 0, 0.493864,-0.00266646) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965943,0.0137519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000503547,-0.0107755) , 
0, 0.00264317, 1, 0, 0.691614,0.0029393) , 
6, 0.0139189, 1, 0, 0.637581,0.00140761) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880501,-0.0327316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957182,-0.00532073) , 
5, 0.015344, 1, 0, 0.931565,-0.00997587) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.5753,-0.0127152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195214,0.00206183) , 
4, 0.0150017, 1, 0, 0.229162,-0.000612078) , 
0, 0.00157728, 1, 0, 0.36883,-0.002474) , 
4, 0.0139173, 1, 0, 0.502231,-0.000547263)    );
  // itree = 433
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96686,-0.00397241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59787,-0.0134566) , 
2, 0.189802, 1, 0, 0.933736,-0.0030297) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0003438,0.0072279) , 
2, 0.14284, 1, 0, 0.000246803,-6.86291e-05) , 
0, 0.00315669, 1, 0, 0.532285,-0.00175628) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919668,-0.00260029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80577,0.0438196) , 
0, 0.00134464, 1, 0, 0.874092,0.00969129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131001) , 
0, 0.00471521, 1, 0, 0.325358,0.00345577) , 
3, 88.2653, 1, 0, 0.491758,-0.000735474)    );
  // itree = 434
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618056,-0.00808213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75435,0.0214804) , 
5, 0.0115918, 1, 0, 0.629925,-0.00201351) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0189852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715725,0.0180204) , 
6, 0.0239404, 1, 0, 0.291268,0.00151084) , 
5, 0.012172, 1, 0, 0.458512,-0.000229643) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79144,-0.0074512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651976,-0.0224636) , 
2, 0.15305, 1, 0, 0.761388,-0.00739338) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466953,0.0100943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253522,-0.00464116) , 
5, 0.0170953, 1, 0, 0.330002,0.00028556) , 
2, 0.214312, 1, 0, 0.624665,-0.00495963) , 
6, 0.0295755, 1, 0, 0.499179,-0.00138735)    );
  // itree = 435
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628005,-0.0119835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510047,0.0149483) , 
5, 0.00947629, 1, 0, 0.54383,0.0016902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944534,-0.0088128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160006,0.00138592) , 
0, 0.00157776, 1, 0, 0.440959,-0.00158274) , 
3, 37.8074, 1, 0, 0.487094,-0.000114902) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73613,-0.0113071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39563,0.0113681) , 
2, 0.213462, 1, 0, 0.628001,-0.00266037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656128,-0.015427) , 
6, 0.0358702, 1, 0, 0.633777,-0.00559196) , 
6, 0.033052, 1, 0, 0.50513,-0.000788353)    );
  // itree = 436
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907762,0.0790934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550031,-0.000885509) , 
8, 0.0766286, 1, 0, 0.79453,0.00415822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152933,-0.0077231) , 
2, 0.142698, 1, 0, 0.561801,0.00165893) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932162,-0.0050428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9249,-0.0131229) , 
7, 0.000285401, 1, 0, 0.931233,-0.00353237) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000683621,0.0112124) , 
6, 0.0243561, 1, 0, 0.000214903,-7.58509e-05) , 
0, 0.0031564, 1, 0, 0.487794,-0.00188605) , 
3, 12.6135, 1, 0, 0.499224,-0.00133851)    );
  // itree = 437
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561514,-0.0101879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43029,0.0106866) , 
4, 0.00694696, 1, 0, 0.456395,0.000783105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.133796,-0.0107611) , 
3, 125.947, 1, 0, 0.428069,0.000295245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.385705,-0.0239266) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700649,-0.0125728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66429,0.00129648) , 
3, 12.4378, 1, 0, 0.669782,-0.00088295) , 
5, 0.0135675, 1, 0, 0.621987,-0.00287559) , 
6, 0.0260979, 1, 0, 0.497341,-0.000837459)    );
  // itree = 438
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994775,0.0158358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501732,-0.00727244) , 
0, 0.00157091, 1, 0, 0.843789,0.000367002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696354,0.0327149) , 
2, 0.057809, 1, 0, 0.827303,0.00121903) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935933,-0.00759618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579617,-0.0151707) , 
0, 0.000526108, 1, 0, 0.855223,-0.0123639) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0944012,-0.0160729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176543,0.00590984) , 
4, 0.0139173, 1, 0, 0.148653,-0.000622205) , 
0, 0.00157834, 1, 0, 0.287924,-0.00293658) , 
2, 0.0714198, 1, 0, 0.501258,-0.00129296)    );
  // itree = 439
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97016,0.0235992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000764067,-0.0189336) , 
0, 0.00157623, 1, 0, 0.452085,0.00119909) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.364602,-0.0392569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.256112,0.00517747) , 
3, 72.4732, 1, 0, 0.277705,-0.00301102) , 
3, 62.8879, 1, 0, 0.392444,-0.000240829) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968926,-0.00417497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.116283,-0.0237341) , 
4, 0.0135017, 1, 0, 0.614414,-0.00850465) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667707,0.00227524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497889,-0.0156837) , 
3, 75.6131, 1, 0, 0.620918,-0.00104648) , 
5, 0.0137209, 1, 0, 0.61875,-0.00353267) , 
6, 0.0226171, 1, 0, 0.500948,-0.00181912)    );
  // itree = 440
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4892,-0.0194257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518594,-0.00244963) , 
5, 0.00631709, 1, 0, 0.514539,-0.00142963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.139373,0.0631447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313287,-0.00278162) , 
6, 0.0209002, 1, 0, 0.207064,0.00397295) , 
3, 113.486, 1, 0, 0.480852,-0.000837728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815157,0.0118632) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632602,-0.00373766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523161,-0.0211) , 
1, 1.11136, 1, 0, 0.576269,-0.00778433) , 
2, 0.0476739, 1, 0, 0.624179,-0.00561801) , 
6, 0.0313127, 1, 0, 0.506521,-0.00169386)    );
  // itree = 441
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53108,0.00404862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895969,0.0157093) , 
7, 0.00020795, 1, 0, 0.611815,0.00189413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000150764,-0.016897) , 
2, 0.356993, 1, 0, 0.532785,0.00128759) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0452492,0.0222986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619957,-0.0174552) , 
7, 6.42706e-05, 1, 0, 0.225356,-0.00349741) , 
3, 113.483, 1, 0, 0.496565,0.000723845)    );
  // itree = 442
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882908,-0.0208321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897569,0.0419957) , 
3, 35.7835, 1, 0, 0.886229,-0.0018965) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820906,-0.0612559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.786828,-0.0229369) , 
3, 60.2544, 1, 0, 0.794752,-0.00952489) , 
3, 50.0986, 1, 0, 0.852986,-0.00466869) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.392467,0.00664538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356161,-0.01177) , 
3, 21.6079, 1, 0, 0.372602,-0.0016948) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891962,0.0143273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000162297,-0.00588814) , 
0, 0.00315552, 1, 0, 0.3047,0.00291055) , 
3, 50.3995, 1, 0, 0.340736,0.000466479) , 
2, 0.0476118, 1, 0, 0.502616,-0.00115632)    );
  // itree = 443
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.232653,0.036787) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676404,0.0401683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00738833,-0.0118766) , 
2, 0.0476118, 1, 0, 0.165096,-7.45461e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909846,-0.00228439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387307,-0.00819802) , 
2, 0.189802, 1, 0, 0.813189,-0.00224369) , 
7, 5.94779e-05, 1, 0, 0.51553,-0.00124744) , 
4, 0.00348979, 1, 0, 0.502248,-0.000909184)    );
  // itree = 444
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.251315,-0.00950167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835476,-0.0192175) , 
7, 7.19616e-05, 1, 0, 0.551094,-0.00634948) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851581,0.0254393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314647,-0.00417865) , 
2, 0.0712193, 1, 0, 0.564306,0.00111453) , 
3, 15.6026, 1, 0, 0.555929,-0.00361775) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.312027,-0.013982) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86683,-0.0171073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414733,0.005884) , 
2, 0.0238095, 1, 0, 0.490125,0.000959407) , 
4, 0.0052151, 1, 0, 0.47444,0.000348377) , 
3, 25.2044, 1, 0, 0.499212,-0.000857303)    );
  // itree = 445
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721223,0.0186103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466862,-0.0414257) , 
6, 0.0139329, 1, 0, 0.593452,-0.00303495) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755267,0.0301396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0932194,-0.00819) , 
2, 0.190141, 1, 0, 0.551095,0.00399776) , 
4, 0.00873905, 1, 0, 0.560973,0.0023578) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828458,-0.0347626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790126,-0.00698642) , 
5, 0.00665257, 1, 0, 0.796619,-0.00405163) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253395,0.00530123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593002,-0.00790962) , 
6, 0.034788, 1, 0, 0.279123,0.000764215) , 
2, 0.0714198, 1, 0, 0.473953,-0.00104888) , 
3, 25.2206, 1, 0, 0.500565,-7.04433e-06)    );
  // itree = 446
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84195,0.0157053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774884,-0.00756827) , 
3, 46.1852, 1, 0, 0.815343,0.000559945) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811853,-0.00720204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000464392,0.0102931) , 
0, 0.00315669, 1, 0, 0.252857,-0.00226831) , 
2, 0.0952236, 1, 0, 0.525109,-0.000899389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132666,0.0374136) , 
3, 138.701, 1, 0, 0.498457,-0.000496459)    );
  // itree = 447
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877436,-0.00875662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703424,0.00453367) , 
2, 0.0396729, 1, 0, 0.796723,-7.07244e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662323,0.0380548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423328,0.0025718) , 
2, 0.0623111, 1, 0, 0.574837,0.00561478) , 
3, 87.0583, 1, 0, 0.764159,0.000763674) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72917,-0.0181212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795771,-0.00395732) , 
3, 23.8208, 1, 0, 0.779454,-0.0109862) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000520511,0.0203396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.05477e-05,-0.00941621) , 
3, 37.8375, 1, 0, 0.000248759,-6.84354e-06) , 
0, 0.00315479, 1, 0, 0.203724,-0.00287391) , 
2, 0.119029, 1, 0, 0.499621,-0.000953346)    );
  // itree = 448
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613538,-0.0184067) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869834,-0.000849427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000470517,-0.0294268) , 
5, 0.0126771, 1, 0, 0.602803,-0.00210219) , 
5, 0.00454052, 1, 0, 0.603736,-0.00324458) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919814,-0.0269075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943085,-0.00661917) , 
5, 0.0134431, 1, 0, 0.938311,-0.0053024) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939512,0.0166313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.53779e-05,-0.0102437) , 
0, 0.00308515, 1, 0, 0.28602,0.00267877) , 
0, 0.0015782, 1, 0, 0.440721,0.00078591) , 
4, 0.0121845, 1, 0, 0.506007,-0.000828263)    );
  // itree = 449
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.773971,-0.00733931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983217,0.0192644) , 
7, 0.000131567, 1, 0, 0.825711,-0.000951547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.019422) , 
4, 0.0139419, 1, 0, 0.634511,-0.00205355) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846704,0.00960223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129273,-0.0211461) , 
5, 0.0153452, 1, 0, 0.402215,-0.00171898) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793225,0.0184717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000218741,-0.0126701) , 
4, 0.0186415, 1, 0, 0.373282,0.00232803) , 
4, 0.0156581, 1, 0, 0.386061,0.0005405) , 
5, 0.0135577, 1, 0, 0.502013,-0.000670148)    );
  // itree = 450
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243437,-0.0364845) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790258,0.00572308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577228,0.0485539) , 
2, 0.107698, 1, 0, 0.77964,0.00190736) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524716,-0.0208646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179296,-0.00194759) , 
2, 0.137216, 1, 0, 0.207196,-0.00155266) , 
2, 0.119036, 1, 0, 0.510466,0.000280394) , 
5, 0.00339236, 1, 0, 0.498686,-0.000104639)    );
  // itree = 451
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562027,-0.0084338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.505067,0.00687536) , 
3, 23.9818, 1, 0, 0.523242,0.00027227) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697526,0.00973372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689914,0.0300561) , 
6, 0.0355373, 1, 0, 0.6933,0.00648778) , 
6, 0.0347914, 1, 0, 0.534105,0.000669303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190195,-0.0217613) , 
3, 125.969, 1, 0, 0.503895,-5.71578e-05)    );
  // itree = 452
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750397,-0.00520348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648146,0.00432499) , 
5, 0.0104557, 1, 0, 0.681006,0.000431459) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904617,0.000445695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.240929,0.0280871) , 
0, 0.00141812, 1, 0, 0.457409,0.00470504) , 
3, 100.526, 1, 0, 0.65419,0.000943987) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0274371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130949) , 
4, 0.025755, 1, 0, 0,-0.00256571) , 
4, 0.0191329, 1, 0, 0.499784,0.000115606)    );
  // itree = 453
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666836,-0.000646849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682125,0.0388751) , 
3, 13.1978, 1, 0, 0.673934,0.00252817) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939543,-0.0211029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.326497,0.0120758) , 
0, 0.00157095, 1, 0, 0.4845,-0.000611056) , 
4, 0.0121628, 1, 0, 0.564733,0.000718539) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.536379,-0.0240587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551184,-0.00939905) , 
3, 27.9104, 1, 0, 0.547673,-0.0068176) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842902,-0.0142148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303974,0.00170427) , 
2, 0.0476111, 1, 0, 0.450124,-0.00059693) , 
3, 36.5967, 1, 0, 0.467709,-0.00171833) , 
3, 25.1959, 1, 0, 0.497074,-0.000980804)    );
  // itree = 454
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520091,-0.00336555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636573,-0.0108402) , 
6, 0.0314819, 1, 0, 0.534144,-0.00123742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676821,0.0208698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644203,-0.00309743) , 
3, 33.6194, 1, 0, 0.658467,0.00233849) , 
6, 0.0347927, 1, 0, 0.542733,-0.000990373) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.375649,0.0352711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492716,0.0183887) , 
6, 0.0208825, 1, 0, 0.438847,0.00605191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156345,-0.0084643) , 
4, 0.0156564, 1, 0, 0.287192,0.00193844) , 
3, 100.874, 1, 0, 0.504811,-0.000555732)    );
  // itree = 455
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65396,0.00144141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719908,0.017925) , 
4, 0.0148892, 1, 0, 0.667825,0.00147541) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000116308,-0.000374744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00016716,-0.0213391) , 
6, 0.0198824, 1, 0, 0.000137173,-0.00202375) , 
4, 0.0174013, 1, 0, 0.488048,0.000533251) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75314,-0.000421076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549435,-0.0163963) , 
2, 0.14312, 1, 0, 0.655507,-0.00672888) , 
6, 0.0347914, 1, 0, 0.499227,4.84715e-05)    );
  // itree = 456
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.392854,0.00987502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260474,-0.00399062) , 
4, 0.00521365, 1, 0, 0.279088,-1.36783e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962963,0.000805462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.693209,0.0135368) , 
2, 0.0945173, 1, 0, 0.875415,0.00332166) , 
7, 9.77925e-05, 1, 0, 0.458658,0.000990681) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571761,-0.012799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.457526,-0.0273808) , 
3, 46.4734, 1, 0, 0.516367,-0.0109247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656522,-0.00780123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758562,0.0150215) , 
5, 0.0170694, 1, 0, 0.706244,0.000900137) , 
4, 0.0156563, 1, 0, 0.640198,-0.00321299) , 
6, 0.0295739, 1, 0, 0.502266,-1.90829e-05)    );
  // itree = 457
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244872,-0.02082) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928781,0.0239168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.75471e-05,-0.010754) , 
0, 0.00315669, 1, 0, 0.160156,0.000750608) , 
5, 0.00342575, 1, 0, 0.167515,3.77008e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929192,-0.00188431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51749,-0.00829626) , 
2, 0.142347, 1, 0, 0.824719,-0.00232171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579979,-0.0219151) , 
3, 124.352, 1, 0, 0.812356,-0.00317455) , 
7, 5.73798e-05, 1, 0, 0.502225,-0.00162965)    );
  // itree = 458
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787227,0.0132084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0205737,-0.0163212) , 
2, 0.0714166, 1, 0, 0.345778,-0.000562041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637047,0.0424509) , 
6, 0.0198831, 1, 0, 0.367712,5.92452e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84152,-0.0249353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935822,-0.00920816) , 
5, 0.0115718, 1, 0, 0.923657,-0.00906049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000387339,0.000312474) , 
0, 0.0031564, 1, 0, 0.617175,-0.00604988) , 
6, 0.0208779, 1, 0, 0.500799,-0.00319993)    );
  // itree = 459
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931316,0.0360109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922001,-0.0162907) , 
5, 0.00898736, 1, 0, 0.926025,-0.00102499) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891216,0.0101386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000816343,-0.00393626) , 
0, 0.00249828, 1, 0, 0.496864,0.00309467) , 
2, 0.0476111, 1, 0, 0.676203,0.00137314) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0281485) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722335,0.0144392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000114365,-0.0153005) , 
4, 0.0186703, 1, 0, 0.246181,0.00118616) , 
4, 0.0156835, 1, 0, 0.159486,-0.00127431) , 
5, 0.0170929, 1, 0, 0.495325,0.000446397)    );
  // itree = 460
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0873194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986165,-0.0848168) , 
8, 0.100853, 1, 0, 0.997678,0.000345418) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921741,0.000364385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691716,-0.0161306) , 
4, 0.0107204, 1, 0, 0.857643,-0.0113347) , 
0, 7.5153e-05, 1, 0, 0.946966,-0.00388436) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0027818,-0.0138205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656794,0.0212581) , 
5, 0.0121108, 1, 0, 0.342842,0.00157828) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0278476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156468,0.0219255) , 
4, 0.0156521, 1, 0, 0.0985449,-0.00136628) , 
5, 0.016958, 1, 0, 0.21537,4.18319e-05) , 
0, 0.00157834, 1, 0, 0.495948,-0.00146392)    );
  // itree = 461
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592034,-0.00617049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.243131,0.0109994) , 
5, 0.0100136, 1, 0, 0.366583,0.000143406) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918883,0.00529674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817853,-0.00996297) , 
6, 0.0288247, 1, 0, 0.849691,-0.0035899) , 
7, 0.000166891, 1, 0, 0.480031,-0.000733282) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793942,0.0168916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519972,0.00189014) , 
2, 0.166601, 1, 0, 0.677625,0.00333134) , 
6, 0.0347914, 1, 0, 0.492056,-0.000485922)    );
  // itree = 462
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.21974,0.00744463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522388,0.0972279) , 
4, 0.00322341, 1, 0, 0.361377,0.00392598) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.551802,-0.00379316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486657,0.0181463) , 
3, 84.0719, 1, 0, 0.543251,-0.000508245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.193609,-0.0172486) , 
3, 126.113, 1, 0, 0.513677,-0.000961945) , 
4, 0.0052197, 1, 0, 0.501271,-0.000563779)    );
  // itree = 463
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620045,-0.000332093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779733,-0.011136) , 
7, 0.00014534, 1, 0, 0.650399,-0.00121656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366751,-0.0164195) , 
3, 113.184, 1, 0, 0.62686,-0.00227263) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840489,0.0299687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632827,-0.00665815) , 
4, 0.0155865, 1, 0, 0.774925,0.0040739) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0263427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.324406,0.0206194) , 
4, 0.0156736, 1, 0, 0.218259,-0.000976056) , 
5, 0.0164255, 1, 0, 0.381127,0.000501444) , 
5, 0.0136566, 1, 0, 0.498728,-0.000826149)    );
  // itree = 464
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977596,-0.0185527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991502,0.0280409) , 
5, 0.0113766, 1, 0, 0.985661,0.000406063) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785209,-0.0223672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882555,-0.00560709) , 
0, 0.000981748, 1, 0, 0.867496,-0.00941772) , 
0, 0.000300598, 1, 0, 0.92361,-0.0047526) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00106594,0.0112304) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000160567,0.00364845) , 
2, 0.333323, 1, 0, 4.87157e-05,-0.000169596) , 
0, 0.0117259, 1, 0, 0.000267624,-2.8346e-05) , 
0, 0.00315669, 1, 0, 0.502526,-0.00259813)    );
  // itree = 465
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.440104,-0.00872196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663806,-0.0271596) , 
4, 0.00596687, 1, 0, 0.50428,-0.00371604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730134,0.0195317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462866,-0.00373612) , 
4, 0.0125674, 1, 0, 0.553904,0.000676044) , 
4, 0.00695734, 1, 0, 0.546556,2.57316e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413353,0.0128237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625439,-0.0266338) , 
4, 0.0104358, 1, 0, 0.518453,-0.00666348) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233678,-0.00876429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197654,0.0603186) , 
5, 0.0168812, 1, 0, 0.210516,0.00133771) , 
4, 0.0156566, 1, 0, 0.370767,-0.00282614) , 
3, 75.6709, 1, 0, 0.502247,-0.000693119)    );
  // itree = 466
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741897,3.44678e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0266367,-0.0126141) , 
2, 0.142835, 1, 0, 0.450929,-0.000982545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917478,0.00985083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.53303e-05,-0.00880096) , 
0, 0.00314347, 1, 0, 0.295721,0.00155061) , 
3, 63.05, 1, 0, 0.398312,-0.000123788) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996561,-0.000956766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855009,-0.0260193) , 
0, 0.00063024, 1, 0, 0.919065,-0.0109732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711577,0.0189132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679984,0.00360208) , 
5, 0.0163721, 1, 0, 0.694726,0.00735301) , 
2, 0.166138, 1, 0, 0.846907,-0.00507863) , 
7, 0.00019548, 1, 0, 0.495189,-0.00119381)    );
  // itree = 467
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968878,-0.00312003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741287,0.0247892) , 
0, 0.00059444, 1, 0, 0.852469,0.00346247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0374608) , 
5, 0.0109274, 1, 0, 0.575867,0.00134912) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995815,-0.0128636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718838,-0.0165724) , 
0, 7.51277e-05, 1, 0, 0.936862,-0.00848579) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60542,-0.0426651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241752,0.00075511) , 
2, 0.0238528, 1, 0, 0.272461,-0.00101309) , 
0, 0.0015782, 1, 0, 0.473373,-0.0032728) , 
4, 0.0104402, 1, 0, 0.504515,-0.00186846)    );
  // itree = 468
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995863,0.0104396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902586,-0.0113223) , 
0, 0.000106615, 1, 0, 0.947518,-0.00458185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53667,-0.0133413) , 
0, 0.00223966, 1, 0, 0.928242,-0.00606557) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131892) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000814321,0.0266919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013099) , 
5, 0.0169815, 1, 0, 0.000314601,0.000101235) , 
2, 0.14284, 1, 0, 0.000226016,-8.31134e-05) , 
0, 0.00314451, 1, 0, 0.503493,-0.00332742)    );
  // itree = 469
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984158,-0.0112075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995508,0.0522365) , 
5, 0.0148357, 1, 0, 0.987533,0.000678128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926124,-0.0121317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725754,-0.0187627) , 
4, 0.0107408, 1, 0, 0.87458,-0.0162254) , 
0, 0.000300409, 1, 0, 0.949324,-0.00503989) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.156911,-0.00384365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711734,0.0243295) , 
6, 0.0261244, 1, 0, 0.429181,0.00244332) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0227359,0.00692856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609423,-0.0106272) , 
7, 0.000196464, 1, 0, 0.112989,-0.00123188) , 
2, 0.119029, 1, 0, 0.219189,2.52111e-06) , 
0, 0.00157728, 1, 0, 0.501372,-0.00194627)    );
  // itree = 470
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874913,0.0121387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359241,-0.00486994) , 
2, 0.0475784, 1, 0, 0.536512,-0.00043796) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485119,-0.0412219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447791,-0.00456235) , 
3, 84.8501, 1, 0, 0.455887,-0.00510879) , 
3, 77.9913, 1, 0, 0.522564,-0.00124603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185037,0.015949) , 
3, 126.095, 1, 0, 0.493714,-0.000819054)    );
  // itree = 471
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78113,0.00460869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472605,0.0426434) , 
2, 0.154157, 1, 0, 0.754615,0.00192575) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.305497,-0.0194735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0502615,0.00257719) , 
2, 0.234683, 1, 0, 0.0990153,-0.00167521) , 
2, 0.190453, 1, 0, 0.548776,0.000795156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898476,-0.0106209) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00284604,0.0682032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528833,-0.0109544) , 
7, 6.11108e-05, 1, 0, 0.136552,-0.000155337) , 
0, 0.00157224, 1, 0, 0.329566,-0.00258155) , 
3, 88.163, 1, 0, 0.505296,0.00012539)    );
  // itree = 472
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936044,-0.0101992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000126729,-0.00766185) , 
0, 0.00315479, 1, 0, 0.539714,-0.00288377) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.146484,-0.0131202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815721,0.0192304) , 
7, 6.42713e-05, 1, 0, 0.484515,0.00170384) , 
3, 60.0543, 1, 0, 0.523203,-0.00151156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201067,-0.0277189) , 
3, 126.114, 1, 0, 0.496559,-0.00235564)    );
  // itree = 473
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.412646,-1.60366e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594023,-0.0125237) , 
6, 0.0241407, 1, 0, 0.449315,-0.000994742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624487,0.0388421) , 
6, 0.0281623, 1, 0, 0.459974,-0.000523067) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763448,-0.00975276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678344,-0.0337997) , 
2, 0.192203, 1, 0, 0.751025,-0.00586047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239292,0.00464569) , 
2, 0.237528, 1, 0, 0.623662,-0.00380428) , 
6, 0.0295755, 1, 0, 0.500429,-0.001334)    );
  // itree = 474
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561776,-0.0179133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433573,0.00584988) , 
4, 0.00873307, 1, 0, 0.470643,-0.000363184) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957585,0.0145869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758688,-0.0158338) , 
0, 0.0012421, 1, 0, 0.849202,-0.00972522) , 
7, 0.000202771, 1, 0, 0.55032,-0.00233365) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222704,-0.00046285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881416,0.0146274) , 
7, 5.97823e-05, 1, 0, 0.595726,0.00260344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0299502,-0.00959702) , 
2, 0.28554, 1, 0, 0.463926,0.001567) , 
3, 37.8347, 1, 0, 0.502798,-0.000188074)    );
  // itree = 475
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784993,-0.0332223) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944754,-0.000880142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895942,-0.0114669) , 
4, 0.0159861, 1, 0, 0.934641,-0.0019117) , 
5, 0.00490834, 1, 0, 0.925867,-0.00294956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00119681,0.0149254) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130944) , 
4, 0.0191563, 1, 0, 0,-0.000200423) , 
0, 0.0117252, 1, 0, 0.000259586,-2.03863e-05) , 
0, 0.0031564, 1, 0, 0.495817,-0.00158862)    );
  // itree = 476
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675682,-0.0106067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649654,0.0160002) , 
3, 57.5731, 1, 0, 0.669056,-0.0010125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393981,-0.0169138) , 
3, 100.758, 1, 0, 0.637233,-0.0023453) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.371775,-0.00959018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947156,0.0208724) , 
6, 0.029586, 1, 0, 0.744836,0.00368889) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000175741,-0.021256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130947) , 
4, 0.0252037, 1, 0, 6.87476e-05,-0.00207116) , 
4, 0.018231, 1, 0, 0.374735,0.000826518) , 
4, 0.0139284, 1, 0, 0.504885,-0.000746113)    );
  // itree = 477
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.282245,0.0392029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.682582,0.00623679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0054682,-0.0135813) , 
2, 0.21425, 1, 0, 0.47554,0.000542896) , 
4, 0.00353272, 1, 0, 0.464475,0.00101586) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777176,-0.0133105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605972,-0.0265814) , 
2, 0.173247, 1, 0, 0.751763,-0.00786823) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4306,0.015775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261431,-0.00172531) , 
5, 0.0170694, 1, 0, 0.327042,0.00260154) , 
2, 0.214024, 1, 0, 0.618789,-0.00459029) , 
6, 0.0295733, 1, 0, 0.502711,-0.000373242)    );
  // itree = 478
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970766,0.00991706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296614,-0.0139681) , 
0, 0.00111688, 1, 0, 0.67113,-0.00178027) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616409,-0.000253208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512068,0.0171533) , 
3, 63.0172, 1, 0, 0.582556,0.000942922) , 
5, 0.0102838, 1, 0, 0.609919,0.000101656) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000161774,0.000217871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0361938,-0.0153702) , 
6, 0.0191356, 1, 0, 0.0160769,-0.00258921) , 
2, 0.309472, 1, 0, 0.497922,-0.000405833)    );
  // itree = 479
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76711,-0.00737776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.11315,0.00905885) , 
2, 0.166601, 1, 0, 0.549418,-0.00105813) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.306983,0.0246266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813944,-0.0305756) , 
7, 9.62443e-05, 1, 0, 0.534841,-0.00794999) , 
3, 43.2416, 1, 0, 0.54773,-0.00185614) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.411565,0.0065077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549564,-0.0116073) , 
6, 0.0314731, 1, 0, 0.427487,0.000285603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700804,0.0452588) , 
6, 0.0347918, 1, 0, 0.444921,0.000733492) , 
3, 50.4488, 1, 0, 0.503654,-0.000745908)    );
  // itree = 480
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881657,-0.0183812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984213,0.0493659) , 
5, 0.00525437, 1, 0, 0.961047,0.00225112) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986027,0.00382245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837852,-0.0169531) , 
0, 0.000375791, 1, 0, 0.952035,-0.00498572) , 
4, 0.00975866, 1, 0, 0.955555,-0.00215943) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.546829,0.0170841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0183294) , 
4, 0.0174438, 1, 0, 0.357407,0.00227518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0596369,-0.0206315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118364,0.0591225) , 
4, 0.0174013, 1, 0, 0.091643,-0.000793937) , 
5, 0.0170953, 1, 0, 0.22033,0.000692168) , 
0, 0.00157834, 1, 0, 0.504996,-0.000411922)    );
  // itree = 481
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971107,0.079971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.734787,0.028776) , 
4, 0.00524114, 1, 0, 0.820092,0.00310028) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63401,-0.00604917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.35251e-05,-0.00780276) , 
0, 0.00315046, 1, 0, 0.0422555,-0.000661972) , 
2, 0.0238059, 1, 0, 0.183712,2.22265e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792489,-0.00520311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810217,-0.0196566) , 
7, 0.000209385, 1, 0, 0.796889,-0.00443465) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863258,-0.0112448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892532,0.0202722) , 
1, 1.07004, 1, 0, 0.883697,0.00290648) , 
7, 0.000268713, 1, 0, 0.812409,-0.00312214) , 
7, 6.11109e-05, 1, 0, 0.507271,-0.00159602)    );
  // itree = 482
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522311,-0.00907546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485612,0.0719914) , 
3, 25.8654, 1, 0, 0.506238,-0.000102191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.378315,-0.021033) , 
3, 49.3984, 1, 0, 0.451432,-0.00493275) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470862,-0.000871744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857559,-0.0100932) , 
7, 0.000202771, 1, 0, 0.566534,-0.00160019) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587825,0.00932511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0523103,-0.00867071) , 
2, 0.261873, 1, 0, 0.443889,0.00107658) , 
3, 50.445, 1, 0, 0.512779,-0.000426967) , 
5, 0.00671221, 1, 0, 0.504794,-0.00101342)    );
  // itree = 483
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57315,0.0901895) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52219,0.0232338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657961,-0.00707435) , 
6, 0.0295895, 1, 0, 0.554322,0.000945917) , 
3, 2.4, 1, 0, 0.558122,0.0020844) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909453,0.0102513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853434,0.0481932) , 
6, 0.0244503, 1, 0, 0.893873,0.00189514) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894974,-0.0075757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000263358,-0.00223632) , 
0, 0.00315552, 1, 0, 0.385062,-0.00254897) , 
2, 0.0238055, 1, 0, 0.482307,-0.0016996) , 
3, 12.6113, 1, 0, 0.493919,-0.00112001)    );
  // itree = 484
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535668,0.00612922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401812,-0.0341622) , 
3, 52.7505, 1, 0, 0.492716,-0.00612438) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.541359,0.00106031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489374,-0.0253298) , 
3, 91.1453, 1, 0, 0.539362,-7.37834e-05) , 
5, 0.00679359, 1, 0, 0.533009,-0.00089791) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.449214,0.039033) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.313803,-0.00589623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140913,0.00409896) , 
3, 131.983, 1, 0, 0.220974,-0.000149943) , 
5, 0.0130881, 1, 0, 0.290078,0.00315344) , 
3, 100.775, 1, 0, 0.498071,-0.000315258)    );
  // itree = 485
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997587,0.00408768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0880156) , 
7, 0.000238121, 1, 0, 0.998165,0.0010568) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9982,0.0598654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744184,-0.0138015) , 
2, 0.0237252, 1, 0, 0.85984,-0.0125332) , 
0, 7.51467e-05, 1, 0, 0.948534,-0.00381933) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.557629,-0.0186928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394849,-0.00675633) , 
3, 49.7091, 1, 0, 0.493012,-0.00442421) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.856753,0.00781268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000162692,-0.00527499) , 
0, 0.00308153, 1, 0, 0.170826,0.00108983) , 
2, 0.0476118, 1, 0, 0.215961,0.000317381) , 
0, 0.00157834, 1, 0, 0.499705,-0.00128488)    );
  // itree = 486
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22103,-0.0395757) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.50797,-0.0189407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689846,0.00452763) , 
6, 0.0278405, 1, 0, 0.560896,-0.00290133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577384,0.0130799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418107,-0.00340126) , 
4, 0.0121616, 1, 0, 0.476586,0.000607654) , 
3, 37.8338, 1, 0, 0.514483,-0.000969589) , 
5, 0.00342538, 1, 0, 0.500891,-0.00141315)    );
  // itree = 487
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.259881,0.023582) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606304,-0.0190356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540801,-0.00138794) , 
4, 0.00663768, 1, 0, 0.546802,-0.00092364) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.43257,-0.0253048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127346,0.0227287) , 
4, 0.01606, 1, 0, 0.25661,-0.00576792) , 
3, 113.183, 1, 0, 0.515325,-0.00144911) , 
4, 0.0034831, 1, 0, 0.503803,-0.00117931)    );
  // itree = 488
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57564,-0.000188176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730036,-0.017378) , 
5, 0.00808594, 1, 0, 0.603483,-0.00120318) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748755,0.0189314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.200621,0.00103929) , 
5, 0.0114959, 1, 0, 0.35319,0.00152369) , 
5, 0.00893784, 1, 0, 0.429271,0.00069481) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625367,0.00106759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642604,-0.00849716) , 
6, 0.0335533, 1, 0, 0.631415,-0.00132386) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634358,-0.0245319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576791,-0.0300509) , 
6, 0.0268198, 1, 0, 0.604972,-0.0161772) , 
1, 1.34931, 1, 0, 0.627282,-0.0036455) , 
6, 0.0261083, 1, 0, 0.499897,-0.000853282)    );
  // itree = 489
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530218,-0.0110007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56135,0.00752013) , 
4, 0.00699292, 1, 0, 0.556376,0.00113027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678151,-0.0104113) , 
6, 0.0347926, 1, 0, 0.564394,0.000582052) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969537,-0.0131518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727429,-0.0133457) , 
2, 0.164716, 1, 0, 0.925307,-0.00710177) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000642645,0.00742314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131029) , 
5, 0.017114, 1, 0, 0.000239618,-6.21808e-05) , 
0, 0.00315455, 1, 0, 0.452936,-0.00350712) , 
3, 37.8074, 1, 0, 0.501643,-0.00172018)    );
  // itree = 490
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.40664,0.00118858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639285,-0.0120292) , 
6, 0.0241408, 1, 0, 0.452725,-0.000765837) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624339,-0.00234807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629194,0.0295997) , 
1, 1.19092, 1, 0, 0.626949,0.00270402) , 
6, 0.0281635, 1, 0, 0.493866,5.35403e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69243,0.000873728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682806,-0.0134273) , 
6, 0.0355372, 1, 0, 0.687111,-0.00580906) , 
6, 0.0347919, 1, 0, 0.505723,-0.000306163)    );
  // itree = 491
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809736,-0.00185016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546189,-0.0315908) , 
2, 0.115593, 1, 0, 0.785294,-0.00181661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338969,-0.036515) , 
3, 125.247, 1, 0, 0.759089,-0.00275529) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819077,0.0140211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131013) , 
0, 0.00471726, 1, 0, 0.302817,0.00337402) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0477406,-0.0111468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000557085,0.0429961) , 
0, 0.0157834, 1, 0, 0.0186919,-0.00132699) , 
2, 0.295846, 1, 0, 0.167922,0.0011421) , 
2, 0.142822, 1, 0, 0.50687,-0.00109248)    );
  // itree = 492
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668126,-0.0172646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71035,-0.00579176) , 
3, 14.4082, 1, 0, 0.6852,-0.00525458) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.458771,0.0440767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1182,-0.00747897) , 
2, 0.142949, 1, 0, 0.248911,0.000923813) , 
5, 0.0166148, 1, 0, 0.549472,-0.00333251) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61546,0.00910712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421628,0.0276088) , 
3, 82.1894, 1, 0, 0.562771,0.00289748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929451,-0.0142687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.243074,0.00710616) , 
0, 0.00157834, 1, 0, 0.430543,-0.00122596) , 
4, 0.0104585, 1, 0, 0.46799,-5.82184e-05) , 
3, 25.2194, 1, 0, 0.493086,-0.00106668)    );
  // itree = 493
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963091,0.00666573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136971,-0.00754233) , 
0, 0.00157834, 1, 0, 0.488161,0.000111338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140783,-0.0146707) , 
3, 125.97, 1, 0, 0.45698,-0.00023972) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641209,-0.0281741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602942,-0.00759661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654258,0.00705001) , 
6, 0.0341202, 1, 0, 0.62563,-0.000845169) , 
6, 0.0309045, 1, 0, 0.628609,-0.00304256) , 
6, 0.0295734, 1, 0, 0.498805,-0.000922758)    );
  // itree = 494
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766248,-0.0126184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.265917,0.00724055) , 
2, 0.091762, 1, 0, 0.611976,-0.00124971) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992434,0.00353781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827763,-0.0137383) , 
0, 0.00063024, 1, 0, 0.902791,-0.00555964) , 
7, 0.000201097, 1, 0, 0.681248,-0.00227633) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000332176,-0.014781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00320233,0.0133117) , 
3, 63.0196, 1, 0, 0.00143322,-0.000240985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596039,0.0250392) , 
7, 0.000195415, 1, 0, 0.0923802,0.0013123) , 
2, 0.214233, 1, 0, 0.504778,-0.0012009)    );
  // itree = 495
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957483,-0.00563171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880724,-0.01429) , 
0, 0.00119602, 1, 0, 0.927314,-0.0059829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00100323,0.0378205) , 
0, 0.00315669, 1, 0, 0.563838,-0.00334636) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838733,0.0387922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192338,0.0120187) , 
5, 0.00616789, 1, 0, 0.40918,0.00491791) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637357,-0.0105807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39671,0.00709037) , 
4, 0.0125972, 1, 0, 0.470839,-0.000362339) , 
4, 0.0069609, 1, 0, 0.461854,0.000407106) , 
3, 37.8338, 1, 0, 0.506986,-0.00125395)    );
  // itree = 496
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646603,0.00230239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0104673,-0.0162534) , 
2, 0.309486, 1, 0, 0.540277,-1.81527e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522659,-0.0317727) , 
3, 79.8491, 1, 0, 0.53945,-0.000644264) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836901,0.026679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909961,0.00134656) , 
6, 0.0245806, 1, 0, 0.877802,0.00722191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131082) , 
0, 0.00471521, 1, 0, 0.334761,0.00256877) , 
3, 88.2653, 1, 0, 0.499762,-2.12833e-05)    );
  // itree = 497
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226135,-0.0195186) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793948,0.00272902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169045,-0.0091845) , 
2, 0.142838, 1, 0, 0.553475,-0.000737569) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.109773,-0.00644262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801532,0.00992018) , 
7, 6.01811e-05, 1, 0, 0.426339,0.00149909) , 
3, 63.0563, 1, 0, 0.511168,6.72453e-06) , 
5, 0.00341826, 1, 0, 0.497911,-0.000315759)    );
  // itree = 498
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.380307,-0.00292363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623794,0.0179054) , 
5, 0.00489681, 1, 0, 0.503821,0.000499125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375452,-0.0362554) , 
3, 49.1533, 1, 0, 0.449317,-0.00705118) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715653,0.00411415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0766899,-0.00741344) , 
2, 0.166641, 1, 0, 0.475531,-0.000134778) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62324,-0.0268985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68287,-0.00691271) , 
5, 0.0161819, 1, 0, 0.671109,-0.00625376) , 
6, 0.0313179, 1, 0, 0.513666,-0.00132789) , 
5, 0.00683815, 1, 0, 0.504555,-0.00213822)    );
  // itree = 499
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967523,0.0100425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0276911,-0.0107848) , 
0, 0.00157834, 1, 0, 0.423872,0.000289952) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942582,-0.020724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460015,0.000958262) , 
0, 0.00157095, 1, 0, 0.619663,-0.00279931) , 
6, 0.0251826, 1, 0, 0.484099,-0.000660341) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933692,-0.00800812) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.467524,0.0390895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545521,0.0105324) , 
6, 0.0348816, 1, 0, 0.506961,0.0073889) , 
0, 0.00155764, 1, 0, 0.650052,0.0040474) , 
6, 0.0330523, 1, 0, 0.503751,-0.000102862)    );
  // itree = 500
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985825,0.0315045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87187,-0.0116178) , 
0, 0.0003649, 1, 0, 0.959476,-2.83631e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95234,0.0226008) , 
0, 0.00127717, 1, 0, 0.958583,0.00140967) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950492,0.000206295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739861,-0.0114579) , 
2, 0.118599, 1, 0, 0.868486,-0.00556072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000186975,-0.00796363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00101792,0.031027) , 
3, 100.894, 1, 0, 0.000366466,-4.05649e-05) , 
0, 0.00308126, 1, 0, 0.211751,-0.0013847) , 
0, 0.0015782, 1, 0, 0.496911,-0.000317738)    );
  // itree = 501
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998136,0.00683087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838127,-0.0157787) , 
0, 6.07579e-05, 1, 0, 0.954805,-0.00502041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950885,0.0212243) , 
0, 0.00127602, 1, 0, 0.954308,-0.00306285) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00118471,0.0185508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00257568,-0.0231167) , 
6, 0.0115996, 1, 0, 0.00188143,-0.00152958) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640998,0.0165607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118211,-0.00829407) , 
2, 0.214181, 1, 0, 0.46531,0.00267738) , 
6, 0.0243555, 1, 0, 0.21963,0.000447124) , 
0, 0.00157739, 1, 0, 0.50568,-0.000919501)    );
  // itree = 502
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6004,-0.0229389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464788,0.00292413) , 
4, 0.00873758, 1, 0, 0.502025,-0.00112129) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.531981,0.032199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.182635,-0.00473211) , 
4, 0.0121785, 1, 0, 0.315444,0.00259727) , 
3, 75.6709, 1, 0, 0.455395,-0.000191951) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623076,-0.00880238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633677,-0.0265024) , 
1, 1.20658, 1, 0, 0.624485,-0.0058268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643616,0.0366643) , 
1, 1.23357, 1, 0, 0.626761,-0.00436324) , 
6, 0.0295757, 1, 0, 0.496924,-0.00120282)    );
  // itree = 503
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912356,0.037712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444838,-0.00326001) , 
2, 0.0238059, 1, 0, 0.549128,-0.000281659) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991067,0.104981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.269793,0.0138679) , 
0, 0.00155833, 1, 0, 0.552239,0.00434714) , 
3, 64.7855, 1, 0, 0.549406,0.000131675) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610468,-0.00586248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730098,-0.0370121) , 
6, 0.0243852, 1, 0, 0.657015,-0.0094284) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413223,0.0322578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137643,-0.00479012) , 
2, 0.17341, 1, 0, 0.193595,0.000230225) , 
2, 0.118989, 1, 0, 0.378933,-0.00363258) , 
3, 75.5851, 1, 0, 0.505251,-0.000843324)    );
  // itree = 504
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952706,-0.0911308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689804,-0.0111623) , 
0, 0.000337102, 1, 0, 0.81447,-0.0141183) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.327855,-0.019411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195571,0.0106563) , 
3, 37.8157, 1, 0, 0.248823,-0.000565574) , 
5, 0.00611782, 1, 0, 0.467868,-0.00581382) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95731,-0.0123929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519907,0.0282699) , 
2, 0.0238052, 1, 0, 0.668462,0.00322221) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.717667,-0.0113756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382956,-0.000718222) , 
4, 0.0136048, 1, 0, 0.480824,-0.00138611) , 
4, 0.00978254, 1, 0, 0.507035,-0.000742378) , 
4, 0.00696167, 1, 0, 0.501315,-0.00148303)    );
  // itree = 505
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928107,-0.00488366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735383,0.022857) , 
2, 0.0203857, 1, 0, 0.79717,0.00285319) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921523,0.0332287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.697809,-0.0140345) , 
2, 0.00680106, 1, 0, 0.726963,-0.00459503) , 
3, 12.5799, 1, 0, 0.738973,-0.00332086) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0499764,-0.011278) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844034,0.0173162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.51622e-05,-0.00766812) , 
0, 0.00473503, 1, 0, 0.215299,0.00265612) , 
5, 0.0134306, 1, 0, 0.167876,0.000629192) , 
2, 0.142835, 1, 0, 0.495396,-0.00163613)    );
  // itree = 506
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248535,0.0217122) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849492,-0.00208405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0732074,-0.0268643) , 
5, 0.0143477, 1, 0, 0.682154,-0.00260128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942195,-0.0123521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.216519,0.00939925) , 
0, 0.00157623, 1, 0, 0.354547,0.000351502) , 
4, 0.0145026, 1, 0, 0.522494,-0.00116224) , 
4, 0.00348272, 1, 0, 0.509108,-0.000862399)    );
  // itree = 507
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.557001,0.00079251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512895,-0.00608306) , 
3, 35.8573, 1, 0, 0.534456,-0.000769946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430365,0.0475145) , 
3, 107.569, 1, 0, 0.529999,-0.000545929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181572,-0.0102901) , 
3, 125.538, 1, 0, 0.498682,-0.000950593)    );
  // itree = 508
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485477,-0.00235836) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240658,-0.0131933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584661,-0.0381302) , 
7, 1.6997e-05, 1, 0, 0.423927,-0.00779705) , 
3, 23.5742, 1, 0, 0.443023,-0.00547219) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.344739,-0.00388204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509749,0.0147315) , 
6, 0.0226106, 1, 0, 0.405367,0.000779596) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93886,-0.0163241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771654,0.00100908) , 
0, 0.00175195, 1, 0, 0.847305,-0.00301754) , 
7, 0.000201097, 1, 0, 0.511826,-0.0001351) , 
5, 0.00668175, 1, 0, 0.502751,-0.00083906)    );
  // itree = 509
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846235,0.00368028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744969,-0.0156134) , 
3, 59.2509, 1, 0, 0.816494,-0.00335709) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760828,0.00169607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639743,0.029536) , 
2, 0.0816127, 1, 0, 0.722725,0.0021394) , 
5, 0.00991145, 1, 0, 0.752623,0.000386855) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.416323,-0.0123787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828106,-0.00656105) , 
4, 0.0141102, 1, 0, 0.707212,-0.011079) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000811396,0.0207632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.22632e-05,-0.00723695) , 
5, 0.0170694, 1, 0, 0.000358042,0.000123807) , 
0, 0.0031564, 1, 0, 0.163146,-0.00245619) , 
2, 0.142835, 1, 0, 0.497795,-0.000842185)    );
  // itree = 510
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829298,0.00626847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880101,0.0451437) , 
5, 0.00934437, 1, 0, 0.840595,0.00286725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0167768) , 
5, 0.0109274, 1, 0, 0.571231,0.00135666) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859428,-0.0042778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160649,-0.0204192) , 
2, 0.19043, 1, 0, 0.716986,-0.0043293) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554284,-0.0237345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.259827,0.00942599) , 
2, 0.0476946, 1, 0, 0.302243,0.000255716) , 
4, 0.0154142, 1, 0, 0.473386,-0.00163629) , 
4, 0.0104406, 1, 0, 0.503289,-0.000721577)    );
  // itree = 511
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233016,-0.0236894) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65616,0.00242257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493801,-0.0209208) , 
7, 8.62244e-05, 1, 0, 0.628621,-0.00160967) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966193,0.0108572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.256411,-0.00223952) , 
0, 0.0015782, 1, 0, 0.47033,0.00041803) , 
5, 0.00992035, 1, 0, 0.506715,-4.80552e-05) , 
5, 0.00341826, 1, 0, 0.494668,-0.00049478)    );
  // itree = 512
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975539,0.0758704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892703,-0.00677555) , 
4, 0.00695189, 1, 0, 0.924614,0.000808515) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769055,-0.0101209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64811,-0.0172901) , 
2, 0.0828552, 1, 0, 0.758784,-0.00338879) , 
2, 0.00906227, 1, 0, 0.793163,-0.00251862) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.447272,0.0123155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749671,-0.0112288) , 
6, 0.0330527, 1, 0, 0.495639,0.00237078) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00506564,-0.0163491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.146511,0.00671148) , 
5, 0.0134297, 1, 0, 0.105199,-0.000694353) , 
2, 0.191563, 1, 0, 0.246436,0.000414419) , 
2, 0.0952148, 1, 0, 0.503155,-0.000962809)    );
  // itree = 513
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900322,0.0113275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774373,-0.012509) , 
4, 0.0119238, 1, 0, 0.847199,-0.000868458) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825525,-0.0401739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703021,-0.00460813) , 
3, 70.3926, 1, 0, 0.755384,-0.00616331) , 
3, 50.1027, 1, 0, 0.812801,-0.00285213) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572281,0.0180881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00822639,-0.00881484) , 
2, 0.193935, 1, 0, 0.27692,0.00311596) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888846,-0.0188957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167181,0.0102689) , 
0, 0.00157834, 1, 0, 0.281398,-0.000607435) , 
4, 0.0139188, 1, 0, 0.279748,0.000765203) , 
2, 0.0714198, 1, 0, 0.494327,-0.000690944)    );
  // itree = 514
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552588,-0.00941429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.306354,0.0173898) , 
5, 0.00523112, 1, 0, 0.340775,0.00064478) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594956,0.000965057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573511,-0.0181536) , 
1, 1.8068, 1, 0, 0.590681,-0.0012899) , 
6, 0.0186402, 1, 0, 0.436476,-9.6103e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.360888,-0.0257145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672429,-0.0100542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687405,0.00461805) , 
6, 0.0310749, 1, 0, 0.680896,-0.000536762) , 
5, 0.0135577, 1, 0, 0.625569,-0.0025496) , 
6, 0.0260955, 1, 0, 0.50584,-0.000996103)    );
  // itree = 515
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920741,-0.00905827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000113847,-0.00781693) , 
0, 0.00314529, 1, 0, 0.373331,-0.00174804) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807102,0.0145532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171197,-0.00323742) , 
2, 0.190455, 1, 0, 0.6245,0.00240845) , 
6, 0.0220439, 1, 0, 0.478662,-4.96024e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800123,0.0292145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72409,-0.00412029) , 
2, 0.0514221, 1, 0, 0.762366,0.00198787) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.557228,-0.0234862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492559,-0.0124836) , 
1, 1.08204, 1, 0, 0.519371,-0.010985) , 
2, 0.119364, 1, 0, 0.625815,-0.00530221) , 
6, 0.0330547, 1, 0, 0.496634,-0.000651899)    );
  // itree = 516
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871706,0.0038694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821289,0.0949531) , 
3, 75.45, 1, 0, 0.86515,0.00140211) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.388517,-0.012396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352535,0.00208419) , 
5, 0.0136816, 1, 0, 0.366311,-0.00167961) , 
2, 0.0476118, 1, 0, 0.534616,-0.000639859) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490305,-0.0340354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1585,-0.00930402) , 
2, 0.0712193, 1, 0, 0.233631,-0.00771955) , 
3, 113.186, 1, 0, 0.50071,-0.00143739)    );
  // itree = 517
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.496153,-0.0164049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557599,0.00495396) , 
4, 0.00700193, 1, 0, 0.547949,0.000484722) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495943,-0.0463369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486761,-0.0081347) , 
3, 56.9105, 1, 0, 0.4877,-0.00339373) , 
3, 52.822, 1, 0, 0.52535,-0.000970064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145975,0.0285083) , 
3, 138.704, 1, 0, 0.500457,-0.000585186)    );
  // itree = 518
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.540169,-0.0137374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429608,-0.0137692) , 
3, 36.9353, 1, 0, 0.480511,-0.00493634) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970048,0.0152764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000809942,-0.00506214) , 
0, 0.00157623, 1, 0, 0.357932,0.000985263) , 
5, 0.00531323, 1, 0, 0.374753,0.000172643) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946091,-0.0159727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429213,-0.00230892) , 
0, 0.00157095, 1, 0, 0.635131,-0.00343826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.285124,-0.0324156) , 
3, 125.657, 1, 0, 0.607627,-0.00445061) , 
6, 0.0208857, 1, 0, 0.499181,-0.00229763)    );
  // itree = 519
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774797,0.00325545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.325075,0.0246393) , 
2, 0.16196, 1, 0, 0.706819,0.0018027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172186,-0.0128487) , 
2, 0.261801, 1, 0, 0.562042,0.00105498) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.786864,-0.0224285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.159663,0.00462842) , 
2, 0.0476074, 1, 0, 0.339962,-0.000605694) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918957,-0.0252906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761667,0.00389421) , 
0, 0.00181114, 1, 0, 0.836384,-0.00604711) , 
7, 0.000196529, 1, 0, 0.443352,-0.00173898) , 
3, 37.7916, 1, 0, 0.494927,-0.000524903)    );
  // itree = 520
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985171,-0.00589269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779841,0.0229539) , 
2, 0.166077, 1, 0, 0.961996,0.000182924) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949279,0.022139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519721,-0.00189865) , 
0, 0.00215743, 1, 0, 0.84228,0.00615465) , 
0, 0.00112664, 1, 0, 0.910753,0.00273906) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130995) , 
2, 0.238066, 1, 0, 0,-0.00038128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000171734,0.0137515) , 
7, -0.000527581, 1, 0, 7.5577e-05,-6.77389e-05) , 
4, 0.0191346, 1, 0, 3.86232e-05,-0.000221046) , 
0, 0.00473218, 1, 0, 0.501762,0.00140971)    );
  // itree = 521
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.23774,-0.0267861) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.55348,-0.00316807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720287,0.00644759) , 
6, 0.031313, 1, 0, 0.58485,-0.000241381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00125838,-0.0175178) , 
2, 0.357101, 1, 0, 0.50911,-0.000545561) , 
5, 0.00347412, 1, 0, 0.496905,-0.000724778)    );
  // itree = 522
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999461,0.0578162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983786,-0.025784) , 
8, 0.105288, 1, 0, 0.997227,1.58777e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799019,-0.0198199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935979,0.00776453) , 
0, 0.00114686, 1, 0, 0.864987,-0.00842742) , 
0, 7.50133e-05, 1, 0, 0.950058,-0.0029958) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0102858,-0.0120979) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570145,0.011104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0193086) , 
4, 0.0191416, 1, 0, 0.290177,0.00115579) , 
4, 0.0121909, 1, 0, 0.220905,0.000215743) , 
0, 0.00157623, 1, 0, 0.505114,-0.00103605)    );
  // itree = 523
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977932,-0.00275046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966053,0.0421576) , 
3, 83.1652, 1, 0, 0.976108,0.000605192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937003,0.00306372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.734068,-0.0165916) , 
4, 0.0107408, 1, 0, 0.882759,-0.00928796) , 
0, 0.000525182, 1, 0, 0.946238,-0.00256047) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00100707,-3.96919e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00643531,-0.0321764) , 
6, 0.0173969, 1, 0, 0.00253354,-0.00126657) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880914,0.0139406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000253319,0.00018344) , 
0, 0.00458452, 1, 0, 0.466026,0.00350596) , 
6, 0.0243555, 1, 0, 0.217706,0.000949029) , 
0, 0.00157739, 1, 0, 0.497231,-0.000397504)    );
  // itree = 524
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971994,-0.00413702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627895,-0.0168841) , 
2, 0.213527, 1, 0, 0.949327,-0.00265409) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874735,-0.00781235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635974,-0.0115981) , 
2, 0.118625, 1, 0, 0.748034,-0.0146529) , 
0, 0.00209303, 1, 0, 0.929012,-0.00386501) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000328076,0.0132359) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000164065,-0.0103064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130979) , 
0, 0.0188642, 1, 0, 4.81397e-05,-0.000302802) , 
5, 0.0100549, 1, 0, 0.000111653,-0.000196995) , 
0, 0.0031564, 1, 0, 0.500147,-0.00217152)    );
  // itree = 525
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96707,0.0114273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.13958,-0.00878286) , 
0, 0.00126142, 1, 0, 0.575149,0.000112953) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945292,-0.0312609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563606,0.00120708) , 
0, 0.00133015, 1, 0, 0.708953,-0.00664198) , 
4, 0.0106017, 1, 0, 0.625424,-0.00242512) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953435,-0.000749706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613917,0.0142064) , 
0, 0.00140539, 1, 0, 0.748445,0.00300245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000176772,-0.0212036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130948) , 
4, 0.0252131, 1, 0, 7.06831e-05,-0.00272972) , 
4, 0.0182295, 1, 0, 0.382082,0.000196292) , 
4, 0.0139191, 1, 0, 0.503616,-0.00111294)    );
  // itree = 526
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99563,0.0296289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398441,-0.0113406) , 
0, 0.00123647, 1, 0, 0.849729,0.00148489) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750629,-0.0156448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629359,0.00229783) , 
2, 0.0793457, 1, 0, 0.719089,-0.00295148) , 
4, 0.0104702, 1, 0, 0.770718,-0.00119823) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.444398,0.0143241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2094,-0.00749862) , 
5, 0.0168431, 1, 0, 0.33011,0.00253156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0392608,-0.0143193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000320741,0.0193184) , 
0, 0.0173618, 1, 0, 0.0172351,-0.00150257) , 
2, 0.300434, 1, 0, 0.20315,0.000894566) , 
2, 0.119029, 1, 0, 0.503414,-0.000212598)    );
  // itree = 527
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52317,0.00728753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655644,-0.0213906) , 
6, 0.0261648, 1, 0, 0.571401,-0.00583021) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.358744,-0.0103227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634484,0.00371708) , 
6, 0.0191375, 1, 0, 0.521004,3.54286e-05) , 
3, 6.60293, 1, 0, 0.525272,-0.000461217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129233,-0.0178332) , 
3, 138.703, 1, 0, 0.497015,-0.00106014)    );
  // itree = 528
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995878,-0.135714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997959,0.0483706) , 
5, 0.0131071, 1, 0, 0.996808,1.14215e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909101,-0.00285112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659772,-0.0178679) , 
6, 0.0226062, 1, 0, 0.861307,-0.0101579) , 
0, 7.51531e-05, 1, 0, 0.948593,-0.00360711) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0132522,-0.0166679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.25701,0.0100253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639824,-0.00770029) , 
6, 0.0347915, 1, 0, 0.286268,0.000859219) , 
4, 0.0122197, 1, 0, 0.221201,-0.000366034) , 
0, 0.00157834, 1, 0, 0.505877,-0.00163448)    );
  // itree = 529
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585523,-0.00400924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442364,-0.0173154) , 
3, 62.9776, 1, 0, 0.542282,-0.00351936) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.355204,-0.0137096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359271,0.0169387) , 
5, 0.010273, 1, 0, 0.358217,0.000612397) , 
4, 0.00869233, 1, 0, 0.407835,-0.000501393) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803146,-0.0345792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751099,-0.00716338) , 
3, 52.1289, 1, 0, 0.782089,-0.0163914) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909628,0.00329726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675544,-0.0218524) , 
5, 0.0179447, 1, 0, 0.867999,-0.00272078) , 
7, 0.000235893, 1, 0, 0.840183,-0.007147) , 
7, 0.000196749, 1, 0, 0.501298,-0.00193801)    );
  // itree = 530
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654507,0.0319649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168143,0.00607955) , 
6, 0.00882684, 1, 0, 0.343747,0.003276) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985689,-0.00306804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866427,-0.010266) , 
2, 0.0714144, 1, 0, 0.938774,-0.00369622) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000230454,0.000588156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132073) , 
6, 0.0260922, 1, 0, 0.000170809,-0.000104539) , 
0, 0.0031564, 1, 0, 0.519912,-0.0020934) , 
4, 0.00522814, 1, 0, 0.504879,-0.00163518)    );
  // itree = 531
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987557,-0.01551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97383,0.00771745) , 
0, 0.00105121, 1, 0, 0.982264,-0.000390386) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907574,-0.0172464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703443,-0.000124279) , 
2, 0.152117, 1, 0, 0.794948,-0.00639917) , 
2, 0.0946336, 1, 0, 0.92544,-0.00221321) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000163886,-0.0058378) , 
2, 0.149606, 1, 0, 7.07495e-05,-0.000300214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000150614,0.00280355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000637208,0.0316347) , 
3, 50.4916, 1, 0, 0.00038709,0.000232175) , 
2, 0.261873, 1, 0, 0.000221801,-4.60001e-05) , 
0, 0.00315669, 1, 0, 0.495501,-0.00120613)    );
  // itree = 532
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80224,0.0139346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87423,-0.0168602) , 
6, 0.0244373, 1, 0, 0.829052,-0.00157539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.102831,0.00306388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767021,0.0370183) , 
7, 0.000202705, 1, 0, 0.238113,0.00293918) , 
2, 0.0951981, 1, 0, 0.546555,0.000582783) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926591,-0.00663399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923788,-0.0229031) , 
4, 0.0145922, 1, 0, 0.925638,-0.00696246) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00035183,0.00203127) , 
6, 0.0226102, 1, 0, 0.00012366,-0.000154872) , 
0, 0.00315479, 1, 0, 0.4588,-0.00352865) , 
3, 37.8074, 1, 0, 0.498376,-0.0016745)    );
  // itree = 533
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47354,-0.0123511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423196,0.00139834) , 
3, 33.0242, 1, 0, 0.445024,-0.00105279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678475,-0.00740627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654546,0.0144407) , 
1, 1.11652, 1, 0, 0.660587,0.00162018) , 
6, 0.0260948, 1, 0, 0.521383,-0.000105946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135117,-0.0240978) , 
3, 138.724, 1, 0, 0.494231,-0.000657781)    );
  // itree = 534
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809414,0.0297791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327277,0.00345815) , 
4, 0.00527392, 1, 0, 0.468745,0.00270903) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0987938,-0.0184715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535652,-0.000696708) , 
4, 0.00696959, 1, 0, 0.494953,-0.000510427) , 
5, 0.00670509, 1, 0, 0.49135,-6.78204e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705398,-0.00302171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655481,-0.0178001) , 
3, 48.7749, 1, 0, 0.681551,-0.00561693) , 
6, 0.0347913, 1, 0, 0.503679,-0.000427505)    );
  // itree = 535
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912279,-0.000198409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869548,-0.0402854) , 
2, 0.00971331, 1, 0, 0.896959,-0.00321182) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850656,0.0576241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748819,0.00410558) , 
4, 0.0103077, 1, 0, 0.784853,0.00367611) , 
2, 0.0170027, 1, 0, 0.828835,0.000973783) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598225,-0.0103624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534999,-0.0123579) , 
5, 0.0132509, 1, 0, 0.558323,-0.00468683) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0252146,-0.014993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681001,0.0133724) , 
7, 0.000196464, 1, 0, 0.153682,2.04716e-05) , 
2, 0.153085, 1, 0, 0.284709,-0.0015038) , 
2, 0.0714198, 1, 0, 0.502403,-0.00051257)    );
  // itree = 536
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.236719,0.0569207) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893987,-0.0200927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.405237,-0.00230743) , 
2, 0.0238066, 1, 0, 0.501598,-0.00112991) , 
4, 0.00352096, 1, 0, 0.487885,-0.000734437) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779351,-0.000821445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530591,-0.0221652) , 
2, 0.142707, 1, 0, 0.659276,-0.0100444) , 
6, 0.0347924, 1, 0, 0.499368,-0.00135821)    );
  // itree = 537
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998584,0.0406849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984168,-0.0157867) , 
0, 0.000825657, 1, 0, 0.994447,0.000246862) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913355,0.00649818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898803,0.0331277) , 
0, 0.0011272, 1, 0, 0.910616,0.00621289) , 
2, 0.0476074, 1, 0, 0.960248,0.00268069) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00856563,-0.0139644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203195,0.00743618) , 
4, 0.0121798, 1, 0, 0.154518,-0.000187179) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64167,-0.0262283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.294947,0.00308388) , 
2, 0.166641, 1, 0, 0.481269,-0.00633338) , 
6, 0.0313131, 1, 0, 0.216367,-0.00135055) , 
0, 0.0015782, 1, 0, 0.501679,0.000195614)    );
  // itree = 538
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990886,-0.0169454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703664,-0.0145448) , 
2, 0.0474505, 1, 0, 0.931612,-0.00672258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00128858,0.000432464) , 
0, 0.00223375, 1, 0, 0.577351,-0.00414937) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.168583,-0.0238335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704144,0.0107539) , 
4, 0.0104488, 1, 0, 0.642866,0.0016444) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.461345,-0.00920339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130971) , 
0, 0.0047346, 1, 0, 0.064608,-0.00190568) , 
2, 0.238055, 1, 0, 0.471441,0.000591977) , 
5, 0.0102506, 1, 0, 0.501282,-0.000743955)    );
  // itree = 539
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850652,0.00222064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83694,0.0234687) , 
3, 37.5755, 1, 0, 0.844364,0.00189315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508625,-0.0143433) , 
3, 112.723, 1, 0, 0.823078,0.0013569) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947458,0.00286837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590035,-0.0104468) , 
0, 0.000525182, 1, 0, 0.867626,-0.00422044) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0650252,-0.00641123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395483,0.0150568) , 
6, 0.0295703, 1, 0, 0.144863,0.000559755) , 
0, 0.00157776, 1, 0, 0.283008,-0.000353903) , 
2, 0.0714166, 1, 0, 0.498823,0.000329744)    );
  // itree = 540
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961223,-0.00383417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845974,-0.0242787) , 
4, 0.0166985, 1, 0, 0.952028,-0.00273635) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830443,-0.0111096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649083,-0.0128716) , 
2, 0.118632, 1, 0, 0.734506,-0.018434) , 
0, 0.00209428, 1, 0, 0.930563,-0.00428538) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0010185,0.0221285) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130957) , 
4, 0.019155, 1, 0, 0,-0.000254417) , 
4, 0.0121977, 1, 0, 0.000301483,6.69094e-06) , 
0, 0.00315479, 1, 0, 0.502767,-0.0023116)    );
  // itree = 541
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967349,0.0162385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721908,-0.0273356) , 
4, 0.011969, 1, 0, 0.915983,3.63618e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736767,-0.0127669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00013484,-0.0102729) , 
0, 0.00234329, 1, 0, 0.254389,-0.00550742) , 
2, 0.0714111, 1, 0, 0.633195,-0.00233324) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764867,0.0189018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272807,0.00216269) , 
5, 0.0161268, 1, 0, 0.427472,0.00189489) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526384,-0.019966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29284,-0.00603872) , 
2, 0.0479983, 1, 0, 0.326476,-0.00207793) , 
3, 63.0109, 1, 0, 0.389829,0.000414152) , 
5, 0.0134424, 1, 0, 0.501838,-0.000850331)    );
  // itree = 542
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547523,-0.00847297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553312,0.0226621) , 
3, 17.3871, 1, 0, 0.548857,-0.000782447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577304,-0.0240121) , 
3, 22.821, 1, 0, 0.551487,-0.00171676) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.304257,0.00538565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556129,-0.017421) , 
6, 0.0183148, 1, 0, 0.370025,-0.000916537) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954818,0.0149585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131813) , 
0, 0.00315479, 1, 0, 0.608818,0.00321811) , 
6, 0.0226205, 1, 0, 0.485599,0.00108461) , 
3, 25.2246, 1, 0, 0.50609,0.00021343)    );
  // itree = 543
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784159,-0.0144423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493509,0.00543007) , 
5, 0.00956818, 1, 0, 0.613091,-0.00111562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880059,0.00636303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523053,-0.0308319) , 
2, 0.0711866, 1, 0, 0.680075,-0.0142664) , 
7, 0.000165093, 1, 0, 0.622027,-0.00286993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0204106) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823297,0.0171724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00180141,-0.0136819) , 
4, 0.0182042, 1, 0, 0.476595,0.00207656) , 
5, 0.0134323, 1, 0, 0.368929,0.000781089) , 
4, 0.0139009, 1, 0, 0.496254,-0.00105562)    );
  // itree = 544
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602633,0.00573851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748923,0.0425692) , 
4, 0.0110168, 1, 0, 0.624462,0.00230878) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935404,-0.0186471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.111551,0.00765667) , 
0, 0.0015782, 1, 0, 0.196516,-0.000776935) , 
4, 0.0121782, 1, 0, 0.407686,0.000745711) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574446,-0.0253043) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711935,-0.0154366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956427,0.00537172) , 
4, 0.0153485, 1, 0, 0.879046,-0.00143275) , 
5, 0.0143707, 1, 0, 0.839983,-0.00455305) , 
7, 0.00019548, 1, 0, 0.501432,-0.000403366)    );
  // itree = 545
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963137,0.021939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.256715,-0.0106548) , 
0, 0.00157504, 1, 0, 0.568579,0.000142176) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.740115,-0.0287361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124272,0.00728875) , 
2, 0.166641, 1, 0, 0.522494,-0.00590379) , 
3, 28.8257, 1, 0, 0.550454,-0.00223563) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.480877,-0.00396971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549144,0.0811893) , 
3, 54.8235, 1, 0, 0.51751,0.00348881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.837956,0.0405077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335816,-0.00168417) , 
2, 0.0237979, 1, 0, 0.410446,0.00014397) , 
3, 60.6579, 1, 0, 0.431073,0.000788389) , 
3, 50.4459, 1, 0, 0.499038,-0.000933212)    );
  // itree = 546
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784916,0.0141633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.67938e-05,-0.0102242) , 
0, 0.00473218, 1, 0, 0.0849644,0.000379775) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974073,-0.00385918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.694421,-0.0102126) , 
0, 0.00079966, 1, 0, 0.815087,-0.00343893) , 
7, 3.08655e-05, 1, 0, 0.492446,-0.00175145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777236,-0.0229986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545591,-0.00634604) , 
2, 0.166417, 1, 0, 0.683827,-0.0104436) , 
6, 0.0347915, 1, 0, 0.504656,-0.00230599)    );
  // itree = 547
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954074,-0.00119582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852615,-0.033427) , 
4, 0.0164895, 1, 0, 0.944773,-0.00271133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524675,-0.0165825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915695,-0.00857735) , 
7, 0.000301298, 1, 0, 0.709917,-0.0214791) , 
0, 0.00210242, 1, 0, 0.920975,-0.00461312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131436) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000525199,0.0139176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.36194e-05,-0.00811808) , 
4, 0.012182, 1, 0, 0.000207302,-4.59357e-06) , 
2, 0.1428, 1, 0, 0.00014916,-0.000131113) , 
0, 0.00315669, 1, 0, 0.495095,-0.0025402)    );
  // itree = 548
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940734,-0.00638188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981083,0.0323347) , 
5, 0.00907056, 1, 0, 0.956697,0.00163273) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000648524,0.00146791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00033538,-0.0274772) , 
6, 0.0150553, 1, 0, 0.000546475,-0.00128655) , 
0, 0.00157265, 1, 0, 0.387085,-0.00010639) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95029,-0.00945536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818082,-0.012653) , 
0, 0.00209428, 1, 0, 0.930726,-0.00655388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000518808,0.00837744) , 
0, 0.00314451, 1, 0, 0.612063,-0.00424098) , 
6, 0.0226161, 1, 0, 0.494635,-0.00208291)    );
  // itree = 549
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.307191,0.0180869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551404,-0.0128102) , 
6, 0.0170969, 1, 0, 0.371729,0.000113989) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776952,0.0438675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424067,-0.00642164) , 
4, 0.0122096, 1, 0, 0.607508,0.00354222) , 
6, 0.0211219, 1, 0, 0.43066,0.000970846) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615384,-0.00426316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656922,0.0180934) , 
6, 0.0356787, 1, 0, 0.619788,-0.00064196) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.682359,-0.0171207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607977,-0.043868) , 
6, 0.0268069, 1, 0, 0.644557,-0.0108926) , 
1, 1.3499, 1, 0, 0.623307,-0.00209846) , 
6, 0.0260948, 1, 0, 0.49978,-0.000130395)    );
  // itree = 550
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582647,0.0179916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586493,-0.0301494) , 
3, 2.82321, 1, 0, 0.584835,-0.0092649) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.456051,-0.00657631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670875,0.00635415) , 
6, 0.0260947, 1, 0, 0.533959,-0.000157328) , 
3, 6.60218, 1, 0, 0.538455,-0.000962166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140186,0.0313577) , 
3, 138.724, 1, 0, 0.51092,-0.00051724)    );
  // itree = 551
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736181,0.000760425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29118,0.027557) , 
2, 0.111084, 1, 0, 0.66759,0.00115503) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0529629,-0.0115377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.11505e-05,-0.00657295) , 
0, 0.0125812, 1, 0, 0.013289,-0.00122229) , 
2, 0.166646, 1, 0, 0.400478,0.000184514) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977555,0.0238588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975683,-4.0957e-05) , 
3, 34.8639, 1, 0, 0.976508,0.00142386) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769538,-0.0169521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.693209,0.00198336) , 
4, 0.016934, 1, 0, 0.742795,-0.00945304) , 
0, 0.00063024, 1, 0, 0.844928,-0.0046998) , 
7, 0.000196749, 1, 0, 0.494329,-0.000846869)    );
  // itree = 552
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975275,-0.0265231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944193,0.00773039) , 
0, 0.000450919, 1, 0, 0.960138,7.33323e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911669,-0.0261977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973416,0.00748336) , 
5, 0.0157395, 1, 0, 0.937023,-0.0090433) , 
6, 0.0244126, 1, 0, 0.952038,-0.00312133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00765981,-0.0141744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602433,0.0129855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0211622,-0.0163788) , 
4, 0.0179954, 1, 0, 0.285107,0.00112767) , 
4, 0.0121977, 1, 0, 0.21734,0.000118123) , 
0, 0.00157834, 1, 0, 0.503928,-0.00114551)    );
  // itree = 553
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84864,0.0087643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0894406,-0.0275659) , 
5, 0.0162478, 1, 0, 0.704749,0.0013539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.237643,-0.0219133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0237666,0.00260717) , 
2, 0.234722, 1, 0, 0.0613397,-0.00168316) , 
2, 0.190447, 1, 0, 0.486411,0.000323288) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798661,-0.00775679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650316,-0.0259944) , 
2, 0.101715, 1, 0, 0.734575,-0.0116566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409682,0.00947131) , 
2, 0.213573, 1, 0, 0.630884,-0.00690269) , 
6, 0.0330524, 1, 0, 0.50378,-0.000545426)    );
  // itree = 554
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996475,0.0263595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984781,-0.0213723) , 
3, 45.5764, 1, 0, 0.991875,-0.000318982) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.492551,-0.0376653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447302,-0.0123001) , 
2, 0.0136021, 1, 0, 0.457191,-0.00891407) , 
0, 0.00156543, 1, 0, 0.810609,-0.00323284) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0757192,-0.0130588) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609927,0.018635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.194893,-0.000264882) , 
5, 0.0161343, 1, 0, 0.344211,0.00222271) , 
5, 0.010273, 1, 0, 0.290673,0.000731019) , 
2, 0.0714177, 1, 0, 0.501233,-0.000874237)    );
  // itree = 555
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862162,-0.0069939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888816,0.0497631) , 
6, 0.031341, 1, 0, 0.8654,-0.000210987) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831997,-0.0171411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560134,-0.0281548) , 
3, 111.395, 1, 0, 0.784942,-0.00808005) , 
3, 50.3074, 1, 0, 0.835437,-0.0031415) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614472,0.017957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.496606,-0.00281048) , 
4, 0.0139359, 1, 0, 0.545553,0.00211082) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0226712,-0.012935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177587,0.00720001) , 
4, 0.0139191, 1, 0, 0.127016,-0.000927461) , 
2, 0.173488, 1, 0, 0.28681,0.000232531) , 
2, 0.0714198, 1, 0, 0.502823,-0.00109594)    );
  // itree = 556
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233228,0.0199965) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966641,0.0142294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 4.70422e-05,-0.01504) , 
0, 0.00157834, 1, 0, 0.165122,-5.21837e-05) , 
4, 0.00348772, 1, 0, 0.171615,0.000352216) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936683,0.00721934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892686,-0.00961228) , 
4, 0.0134121, 1, 0, 0.917884,-0.000856606) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.733526,-0.0190282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30784,0.0024274) , 
2, 0.227237, 1, 0, 0.522739,-0.00866916) , 
2, 0.142439, 1, 0, 0.81549,-0.00288108) , 
7, 5.99181e-05, 1, 0, 0.502186,-0.00130779)    );
  // itree = 557
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831122,0.012466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181735,-0.00995855) , 
4, 0.0156888, 1, 0, 0.696856,0.00214426) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.266638,-0.0205671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.34757e-05,-0.00699177) , 
0, 0.0141999, 1, 0, 0.0379477,-0.00107793) , 
5, 0.0162725, 1, 0, 0.48927,0.00112913) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625169,-0.00769497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649672,0.0119139) , 
3, 19.0489, 1, 0, 0.639077,3.83931e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722668,-0.0669426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460171,-0.00671438) , 
2, 0.16688, 1, 0, 0.592136,-0.0150744) , 
3, 50.0604, 1, 0, 0.618171,-0.00669226) , 
6, 0.0330546, 1, 0, 0.505323,0.000155075)    );
  // itree = 558
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970316,0.0219949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937476,-0.0168912) , 
4, 0.00978069, 1, 0, 0.951516,-0.00234088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907762,-0.0171016) , 
0, 0.00135285, 1, 0, 0.947328,-0.00398837) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.124679,0.000890942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452601,-0.0115001) , 
6, 0.0298215, 1, 0, 0.189782,-0.000930216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515882,0.0130388) , 
6, 0.0347915, 1, 0, 0.213619,-0.000448139) , 
0, 0.00157834, 1, 0, 0.498931,-0.0018248)    );
  // itree = 559
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997645,0.0243546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885229,-0.021655) , 
0, 5.57843e-05, 1, 0, 0.961596,-0.0049772) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643354,0.0116211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0227262) , 
4, 0.0140511, 1, 0, 0.368256,0.00059573) , 
0, 0.00117164, 1, 0, 0.642941,-0.00198424) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245425,-0.00795644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845448,0.0125584) , 
4, 0.013813, 1, 0, 0.747925,0.00295859) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.017234) , 
6, 0.0226137, 1, 0, 0,-0.000695131) , 
5, 0.0191879, 1, 0, 0.380128,0.00116185) , 
5, 0.013663, 1, 0, 0.502659,-0.000304943)    );
  // itree = 560
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956167,0.074348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692085,-0.00888689) , 
4, 0.0136571, 1, 0, 0.898431,0.00155147) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.436502,-0.0121252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423363,-0.00227143) , 
4, 0.0121782, 1, 0, 0.427736,-0.00214635) , 
2, 0.0238066, 1, 0, 0.524827,-0.00138359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142801,0.0399389) , 
3, 138.726, 1, 0, 0.499911,-0.000990567)    );
  // itree = 561
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87167,-0.0138199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68223,-0.00128727) , 
4, 0.0122029, 1, 0, 0.783946,-0.00195862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581189,-0.0157628) , 
2, 0.102016, 1, 0, 0.768679,-0.00241501) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689824,0.0317075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901234,0.0096156) , 
6, 0.0296267, 1, 0, 0.814569,0.00939266) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792237,-0.00702596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000139631,-0.00824639) , 
0, 0.00308368, 1, 0, 0.104468,-0.00120812) , 
0, 0.0015782, 1, 0, 0.198117,0.00018992) , 
2, 0.119033, 1, 0, 0.494149,-0.00116163)    );
  // itree = 562
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530756,-0.00167712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512518,-0.0244601) , 
3, 79.8575, 1, 0, 0.529934,-0.000567559) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859913,0.0152767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000147951,-0.00488333) , 
0, 0.00471331, 1, 0, 0.309097,0.00252513) , 
3, 88.2816, 1, 0, 0.487294,2.95834e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676891,0.00633208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709706,0.0255856) , 
6, 0.0357029, 1, 0, 0.69196,0.00487693) , 
6, 0.0347914, 1, 0, 0.500226,0.000335852)    );
  // itree = 563
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.46349,-0.0174871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.457543,0.0073508) , 
5, 0.0058484, 1, 0, 0.458402,0.000359828) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666798,-0.0112952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647567,-0.0053123) , 
3, 13.2114, 1, 0, 0.650893,-0.00286604) , 
6, 0.0260981, 1, 0, 0.528921,-0.000821972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150205,0.0461973) , 
3, 138.725, 1, 0, 0.503603,-0.000367173)    );
  // itree = 564
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825572,-0.0407106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282884,-0.0140396) , 
5, 0.00604984, 1, 0, 0.496204,-0.0069031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317687,0.018911) , 
3, 75.5857, 1, 0, 0.452887,-0.00403258) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899599,0.0214845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343173,-0.0138878) , 
4, 0.0167929, 1, 0, 0.774691,0.0018929) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803885,-0.00840395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00029424,0.00555257) , 
0, 0.00315669, 1, 0, 0.23571,-0.00229617) , 
2, 0.119019, 1, 0, 0.514036,-0.000132966) , 
4, 0.0069594, 1, 0, 0.504818,-0.000720806)    );
  // itree = 565
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982472,-0.0411786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99393,0.0494605) , 
5, 0.0148494, 1, 0, 0.985818,-0.00161749) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929128,-0.00304084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677258,-0.0179964) , 
4, 0.0112082, 1, 0, 0.87985,-0.00873216) , 
0, 0.000300409, 1, 0, 0.950246,-0.00400583) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761211,-0.00795145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000440731,0.0094143) , 
0, 0.00307995, 1, 0, 0.0841523,-0.000698537) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757336,0.00364429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890468,0.0341183) , 
7, 0.000287601, 1, 0, 0.79564,0.00627209) , 
7, 0.00019548, 1, 0, 0.225483,0.000686114) , 
0, 0.00157739, 1, 0, 0.50948,-0.00115242)    );
  // itree = 566
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.453865,-0.00982703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8464,-0.0129755) , 
7, 0.000204822, 1, 0, 0.534389,-0.00328761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621374,0.00659177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0331451,-0.0142137) , 
2, 0.285679, 1, 0, 0.492627,0.000841059) , 
3, 46.2194, 1, 0, 0.51647,-0.00151613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.14969,-0.0238859) , 
3, 138.726, 1, 0, 0.491821,-0.0020274)    );
  // itree = 567
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.251967,-0.028809) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709026,0.00913702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0197041) , 
4, 0.0104535, 1, 0, 0.370088,0.00040219) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948568,-0.0132298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435916,-0.000827238) , 
0, 0.0015782, 1, 0, 0.642374,-0.00208868) , 
6, 0.0208816, 1, 0, 0.516796,-0.000939887) , 
5, 0.00340347, 1, 0, 0.505219,-0.00124763)    );
  // itree = 568
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585672,-0.00615394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893843,0.028063) , 
7, 0.000166537, 1, 0, 0.632671,-0.000375175) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983961,0.000587746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591957,-0.0222234) , 
5, 0.01533, 1, 0, 0.779447,-0.0102503) , 
7, 0.000214606, 1, 0, 0.647173,-0.00135086) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.396293,-0.00211823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965474,0.0252998) , 
7, 0.000269265, 1, 0, 0.704941,0.00361379) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0171225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000344062,0.0282619) , 
4, 0.025461, 1, 0, 0.000209853,-0.000433225) , 
4, 0.0186424, 1, 0, 0.269945,0.00111576) , 
4, 0.0156581, 1, 0, 0.497043,-0.000369183)    );
  // itree = 569
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98482,-0.00417841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743617,0.0381172) , 
0, 0.000225164, 1, 0, 0.857124,0.00505101) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130944) , 
4, 0.0191212, 1, 0, 0,-0.000210223) , 
0, 0.00473503, 1, 0, 0.170232,0.000834699) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780455,-0.0128977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850755,0.00476284) , 
1, 1.48617, 1, 0, 0.80386,-0.00346353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891848,-0.0219453) , 
1, 2.07676, 1, 0, 0.810146,-0.00434765) , 
7, 5.73802e-05, 1, 0, 0.501181,-0.0018455)    );
  // itree = 570
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495792,0.00737749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677205,0.01888) , 
6, 0.0261024, 1, 0, 0.559239,0.00239614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612739,-0.00664235) , 
3, 21.615, 1, 0, 0.566249,0.00178989) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91497,-0.0162386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000125202,-0.00659336) , 
0, 0.00315046, 1, 0, 0.533433,-0.00475886) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.3743,0.0340045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429737,-0.00358051) , 
4, 0.00700437, 1, 0, 0.421839,0.000125692) , 
3, 59.4473, 1, 0, 0.475464,-0.00222155) , 
3, 25.2194, 1, 0, 0.503343,-0.00098972)    );
  // itree = 571
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850271,0.0129276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768418,-0.0167977) , 
2, 0.0404576, 1, 0, 0.833561,-0.00038923) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70369,0.0195436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611735,0.00299149) , 
4, 0.0123508, 1, 0, 0.646024,0.00296446) , 
2, 0.0566755, 1, 0, 0.773188,0.00069042) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892162,0.0107203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670766,-0.0102864) , 
0, 0.000598367, 1, 0, 0.767679,-0.00670305) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000222347,0.00618581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131777) , 
3, 75.2788, 1, 0, 0.000148291,-6.12817e-05) , 
0, 0.00315479, 1, 0, 0.201038,-0.00179966) , 
2, 0.119033, 1, 0, 0.501168,-0.000493451)    );
  // itree = 572
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992459,-0.0105834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813902,-0.0112112) , 
2, 0.0474505, 1, 0, 0.931522,-0.0048425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00142944,-2.82794e-05) , 
0, 0.00233672, 1, 0, 0.627304,-0.00325948) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916212,-0.0270206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96721,0.0123673) , 
5, 0.0150086, 1, 0, 0.952866,-0.00284395) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656754,0.0277135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124973,-0.00526684) , 
5, 0.0164484, 1, 0, 0.235868,0.00101477) , 
0, 0.00157834, 1, 0, 0.380251,0.000237737) , 
5, 0.0136842, 1, 0, 0.497515,-0.00142222)    );
  // itree = 573
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995924,0.0153265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904987,0.0278844) , 
2, 0.165548, 1, 0, 0.984796,0.00202752) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945011,0.00185618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708267,-0.0238331) , 
4, 0.010863, 1, 0, 0.889152,-0.0106058) , 
0, 0.000374958, 1, 0, 0.952905,-0.00218486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00909069,-0.0125246) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600261,0.0157152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0256941,-0.0126797) , 
4, 0.017971, 1, 0, 0.284159,0.00171128) , 
4, 0.0121749, 1, 0, 0.215953,0.000548015) , 
0, 0.00157504, 1, 0, 0.497941,-0.000497693)    );
  // itree = 574
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83012,-0.0206722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956076,-0.00165409) , 
5, 0.00466236, 1, 0, 0.949249,-0.00142678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600505,-0.0106914) , 
0, 0.0022255, 1, 0, 0.931747,-0.00242424) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000539624,0.0209007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130949) , 
4, 0.0191121, 1, 0, 0,-0.000262175) , 
3, 25.2236, 1, 0, 0.000150426,-9.85632e-05) , 
0, 0.00315552, 1, 0, 0.502534,-0.00135273)    );
  // itree = 575
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0873214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977494,-0.0397524) , 
8, 0.109662, 1, 0, 0.997229,0.000318134) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930874,-0.00338916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669553,-0.0157635) , 
4, 0.010863, 1, 0, 0.86476,-0.0105121) , 
0, 7.51531e-05, 1, 0, 0.949483,-0.00358542) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914248,0.012754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000935335,-0.00484195) , 
0, 0.00275834, 1, 0, 0.348896,0.00188845) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0738917,-0.0145056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122021,0.0319697) , 
4, 0.0173974, 1, 0, 0.100507,-0.000712337) , 
5, 0.0169457, 1, 0, 0.220851,0.00054774) , 
0, 0.00157834, 1, 0, 0.502566,-0.00105029)    );
  // itree = 576
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526627,-0.00779687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686251,0.00826279) , 
6, 0.0313235, 1, 0, 0.554055,-0.000762381) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621563,0.025467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377763,-0.00737044) , 
4, 0.0139158, 1, 0, 0.492954,0.00155585) , 
3, 60.0553, 1, 0, 0.536017,-7.80006e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192549,-0.012495) , 
3, 126.115, 1, 0, 0.506745,-0.000417157)    );
  // itree = 577
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.439132,-0.0109113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.373786,0.00224805) , 
3, 25.2268, 1, 0, 0.394918,-0.000408782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643993,0.0385972) , 
6, 0.0231943, 1, 0, 0.411199,-1.81703e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971872,-0.0151174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690354,0.0096129) , 
0, 0.00156658, 1, 0, 0.803874,-0.000518465) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831783,-0.0139975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000933789,0.0238458) , 
0, 0.00314451, 1, 0, 0.363401,-0.0063405) , 
2, 0.142842, 1, 0, 0.606566,-0.00312641) , 
6, 0.0243554, 1, 0, 0.496123,-0.00136929)    );
  // itree = 578
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819874,0.0223459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376454,0.00652101) , 
5, 0.00584379, 1, 0, 0.554727,0.00245287) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.43784,-0.0155695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351829,0.00512595) , 
5, 0.00862094, 1, 0, 0.370288,-0.000246584) , 
4, 0.00694696, 1, 0, 0.407545,0.00029871) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614718,-0.00881041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655394,0.0149307) , 
1, 1.3017, 1, 0, 0.623505,-0.00165922) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623411,-0.0369305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597004,0.00353288) , 
1, 1.44785, 1, 0, 0.607383,-0.00918474) , 
1, 1.40469, 1, 0, 0.620702,-0.00296786) , 
6, 0.0243555, 1, 0, 0.497465,-0.00107929)    );
  // itree = 579
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676046,-0.00847517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799189,-0.018653) , 
7, 0.000211889, 1, 0, 0.688284,-0.00342201) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909261,-0.0119009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195168,0.0149094) , 
0, 0.00157834, 1, 0, 0.322731,0.000837287) , 
4, 0.0156295, 1, 0, 0.556113,-0.001882) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593244,-0.00768226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57413,0.0126795) , 
4, 0.00870788, 1, 0, 0.57811,0.00121102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0196604,-0.0163699) , 
2, 0.309297, 1, 0, 0.460645,0.000446244) , 
3, 37.8317, 1, 0, 0.503369,-0.00059571)    );
  // itree = 580
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970562,-0.0058661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927981,-0.0151962) , 
3, 96.6368, 1, 0, 0.966901,-0.00296765) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519233,-0.0146525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722067,-0.00481654) , 
3, 49.1862, 1, 0, 0.629416,-0.0125901) , 
2, 0.189802, 1, 0, 0.930354,-0.00400968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00171469,0.0195047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130942) , 
4, 0.019146, 1, 0, 0,-0.000162257) , 
0, 0.0117252, 1, 0, 0.000375792,9.25554e-05) , 
0, 0.0031564, 1, 0, 0.502757,-0.0021235)    );
  // itree = 581
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982509,-0.0011622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989727,0.0604412) , 
6, 0.0295909, 1, 0, 0.984719,0.00118955) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778627,-0.0199265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879854,-0.0045129) , 
0, 0.000981932, 1, 0, 0.864503,-0.00641424) , 
0, 0.000300346, 1, 0, 0.921446,-0.00281256) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131379) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000661409,0.0198995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131049) , 
5, 0.0170929, 1, 0, 0.000263097,6.70593e-05) , 
2, 0.14284, 1, 0, 0.00018635,-7.49005e-05) , 
0, 0.00315669, 1, 0, 0.495373,-0.00154642)    );
  // itree = 582
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584549,0.0146065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535756,-0.0166682) , 
3, 4.26989, 1, 0, 0.558386,-0.00298384) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.460676,-0.00155974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663272,0.0104265) , 
6, 0.0243687, 1, 0, 0.545781,0.00111471) , 
3, 8.96607, 1, 0, 0.547874,0.00043409) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646985,-0.0279757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413592,0.0131657) , 
4, 0.0137884, 1, 0, 0.533472,-0.00984774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681247,-0.00683264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.214689,0.0038028) , 
2, 0.0951524, 1, 0, 0.377209,-0.000168742) , 
3, 72.3348, 1, 0, 0.405492,-0.00192063) , 
3, 62.7692, 1, 0, 0.50004,-0.000357006)    );
  // itree = 583
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911984,0.00195978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827585,-0.0690053) , 
3, 49.4861, 1, 0, 0.880887,-0.00311441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.497398,0.00610748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.034691,-0.0175472) , 
5, 0.0136816, 1, 0, 0.272745,0.0003198) , 
2, 0.0238066, 1, 0, 0.407249,-0.000439753) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99207,0.088829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968292,-0.00901256) , 
7, 0.000235014, 1, 0, 0.975606,0.000554527) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765924,-0.00952572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670721,-0.0303532) , 
3, 74.6201, 1, 0, 0.741655,-0.0117157) , 
0, 0.000613967, 1, 0, 0.843031,-0.00639877) , 
7, 0.00019548, 1, 0, 0.501756,-0.00173207)    );
  // itree = 584
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.555747,-0.0100485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557952,0.00703971) , 
3, 8.74732, 1, 0, 0.557,-0.00076892) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675485,-0.0229193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508641,-0.00510997) , 
5, 0.0129324, 1, 0, 0.589158,-0.00637865) , 
3, 20.4196, 1, 0, 0.562932,-0.00180368) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585496,0.000824518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927868,0.016521) , 
7, 0.000270312, 1, 0, 0.624306,0.000915358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0216816) , 
4, 0.0191367, 1, 0, 0.470366,0.000298594) , 
3, 25.2246, 1, 0, 0.498296,-0.000335735)    );
  // itree = 585
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958925,-0.0114612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297316,0.00333748) , 
0, 0.00138038, 1, 0, 0.624609,-0.00118138) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0927503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613523,-0.0226006) , 
5, 0.0153478, 1, 0, 0.801688,-0.00914691) , 
7, 0.000214153, 1, 0, 0.642137,-0.00196983) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947456,-0.00187066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568432,0.0233363) , 
0, 0.00143025, 1, 0, 0.712172,0.00404716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0157263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000451705,0.0280251) , 
2, 0.261923, 1, 0, 0.000214129,-0.000460978) , 
4, 0.0186436, 1, 0, 0.278588,0.0013017) , 
4, 0.0156665, 1, 0, 0.498377,-0.00067615)    );
  // itree = 586
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650612,-0.00638781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629077,-0.0164298) , 
7, 0.000130849, 1, 0, 0.647926,-0.00292999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3042,-0.0235573) , 
3, 113.186, 1, 0, 0.616681,-0.00397744) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92088,-0.0147203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948068,-0.000873978) , 
1, 1.22861, 1, 0, 0.934224,-0.00359009) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225931,0.00359753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595965,0.0225743) , 
6, 0.033052, 1, 0, 0.275412,0.00152823) , 
0, 0.00157728, 1, 0, 0.423816,0.000375278) , 
4, 0.0121799, 1, 0, 0.498328,-0.00130636)    );
  // itree = 587
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660546,0.000486568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819168,-0.0128901) , 
7, 0.00021106, 1, 0, 0.676976,-0.000667672) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664205,-0.0162474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519713,-0.00823457) , 
5, 0.00955364, 1, 0, 0.558968,-0.00561851) , 
3, 62.9854, 1, 0, 0.641407,-0.0021599) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0216962) , 
7, -0.000386755, 1, 0, 0,-0.00121691) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927193,-0.00807634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604112,0.0337201) , 
0, 0.00156071, 1, 0, 0.730035,0.00420612) , 
6, 0.0313127, 1, 0, 0.271508,0.000799974) , 
4, 0.0156581, 1, 0, 0.493693,-0.000977919)    );
  // itree = 588
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.540711,0.0378344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54882,-0.0208171) , 
3, 2.57585, 1, 0, 0.545376,-0.00416016) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957448,0.00521541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227671,-0.00390037) , 
0, 0.00157834, 1, 0, 0.524245,-2.97557e-07) , 
3, 6.00608, 1, 0, 0.526003,-0.0003464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.191339,-0.0188182) , 
3, 126.094, 1, 0, 0.496383,-0.000775013)    );
  // itree = 589
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67727,-0.0060037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623877,-0.0132297) , 
3, 65.0816, 1, 0, 0.664653,-0.00288728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332982,0.0226193) , 
3, 124.339, 1, 0, 0.645131,-0.00232167) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0227749) , 
6, 0.0178849, 1, 0, 0,-0.00132638) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939575,-0.00278037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639921,0.0322854) , 
0, 0.00156342, 1, 0, 0.762463,0.00477701) , 
6, 0.0313128, 1, 0, 0.274274,0.000869132) , 
4, 0.0156606, 1, 0, 0.497483,-0.00105133)    );
  // itree = 590
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708119,-0.00102822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620719,0.0136011) , 
3, 74.7007, 1, 0, 0.689349,0.000596981) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0950627,-0.0263751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130966) , 
5, 0.0213399, 1, 0, 0.0235321,-0.00171963) , 
5, 0.0163601, 1, 0, 0.4844,-0.000116108) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686041,0.0150182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639754,-0.0161873) , 
1, 1.07275, 1, 0, 0.654486,-0.00254954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520742,-0.0373912) , 
3, 84.7083, 1, 0, 0.623113,-0.00551078) , 
6, 0.0330523, 1, 0, 0.501505,-0.000781335)    );
  // itree = 591
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963786,-0.0110341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952011,0.0241604) , 
0, 0.000497899, 1, 0, 0.958287,0.00204178) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00185953,0.0424656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000110831,-0.0190662) , 
6, 0.00893767, 1, 0, 0.000906261,-0.000318893) , 
0, 0.00157346, 1, 0, 0.376016,0.000606039) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777643,-0.0472754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95627,0.0123241) , 
8, 0.0471554, 1, 0, 0.885538,-0.0102815) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.449979,0.0276689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585587,-0.00767612) , 
6, 0.0223703, 1, 0, 0.57476,-0.00237048) , 
2, 0.0237972, 1, 0, 0.620364,-0.00353134) , 
6, 0.0208768, 1, 0, 0.505798,-0.00159147)    );
  // itree = 592
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.257929,-0.00850251) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964048,0.00916697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129885,-0.0045396) , 
0, 0.0015782, 1, 0, 0.469571,0.000644359) , 
4, 0.00350731, 1, 0, 0.457868,0.000366239) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675864,0.0109657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679601,-0.00728886) , 
1, 1.1286, 1, 0, 0.678027,-0.000352492) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532424,-0.00883214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539705,-0.0398207) , 
6, 0.0338886, 1, 0, 0.535525,-0.00912767) , 
3, 75.0877, 1, 0, 0.639557,-0.00272149) , 
6, 0.0295734, 1, 0, 0.501786,-0.000380132)    );
  // itree = 593
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.460649,0.0523042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4492,-0.00564183) , 
3, 6.60441, 1, 0, 0.455358,0.000316885) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66819,0.00193722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705548,0.0478454) , 
3, 4.20165, 1, 0, 0.691961,0.00491713) , 
6, 0.0226523, 1, 0, 0.564881,0.00244632) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.427849,-0.0219532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382285,0.00034644) , 
5, 0.0066479, 1, 0, 0.3899,-0.000867033) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923076,-0.0280758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761577,0.00343828) , 
0, 0.00181114, 1, 0, 0.835622,-0.00519707) , 
7, 0.000197346, 1, 0, 0.485095,-0.00179182) , 
3, 12.6113, 1, 0, 0.497438,-0.0011362)    );
  // itree = 594
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980704,-0.019611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960358,0.00444766) , 
0, 0.00120138, 1, 0, 0.973335,-0.00217707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869317,-0.00245161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585115,-0.0155756) , 
0, 0.000595881, 1, 0, 0.708464,-0.0152391) , 
2, 0.142822, 1, 0, 0.924504,-0.00458512) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.72739e-05,-0.00840089) , 
2, 0.142835, 1, 0, 4.8543e-05,-0.000178631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000706713,0.0209749) , 
3, 100.894, 1, 0, 0.000190402,-4.80715e-05) , 
0, 0.0031564, 1, 0, 0.506036,-0.00253104)    );
  // itree = 595
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53739,-0.0121709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514281,0.0012668) , 
3, 6.60466, 1, 0, 0.516376,-0.000178723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127842,-0.0147294) , 
3, 138.626, 1, 0, 0.49001,-0.000603705) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76777,-0.0240049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545448,0.00453061) , 
2, 0.11935, 1, 0, 0.641376,-0.00611695) , 
6, 0.0347923, 1, 0, 0.499873,-0.000962953)    );
  // itree = 596
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675383,0.0385654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.320097,-0.00695181) , 
4, 0.00870522, 1, 0, 0.449438,0.000219486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923962,0.0117652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51562,0.0497756) , 
2, 0.0952084, 1, 0, 0.732476,0.00566388) , 
6, 0.0227096, 1, 0, 0.577498,0.0026828) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800968,0.0719476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0379966,-0.0043952) , 
2, 0.0238066, 1, 0, 0.168998,0.000154751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778475,-0.0141415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829037,-0.000778922) , 
4, 0.012723, 1, 0, 0.806739,-0.00280752) , 
7, 5.94779e-05, 1, 0, 0.495127,-0.0013601) , 
3, 12.6161, 1, 0, 0.507593,-0.000748247)    );
  // itree = 597
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615151,0.0014696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493429,-0.0148514) , 
3, 61.7456, 1, 0, 0.580386,-0.00214322) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753749,0.0224852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141325,-0.00969829) , 
5, 0.0129543, 1, 0, 0.315581,0.000909646) , 
5, 0.0100743, 1, 0, 0.405907,-0.0001317) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538561,-0.0304239) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88735,0.003931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934749,-0.0143832) , 
5, 0.0176501, 1, 0, 0.896517,-0.000626484) , 
4, 0.0145179, 1, 0, 0.843551,-0.00337771) , 
7, 0.000199184, 1, 0, 0.49873,-0.000820167)    );
  // itree = 598
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968408,0.0160873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204997,-0.00924664) , 
0, 0.0015782, 1, 0, 0.537435,0.000325431) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926089,-0.0188109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123613,0.0107553) , 
0, 0.00157174, 1, 0, 0.347645,-0.00292795) , 
3, 75.6683, 1, 0, 0.489524,-0.000495862) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.500448,-0.0294896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702526,-0.00184773) , 
1, 1.10587, 1, 0, 0.611858,-0.00914041) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678563,0.0105385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623636,-0.0102469) , 
3, 37.5439, 1, 0, 0.647036,-0.00148463) , 
4, 0.0174307, 1, 0, 0.628948,-0.0054212) , 
6, 0.0330523, 1, 0, 0.506918,-0.00111034)    );
  // itree = 599
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.218925,-0.016307) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962329,0.00729444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906353,-0.00931696) , 
0, 0.00135285, 1, 0, 0.957172,0.000615558) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00472205,-0.0189867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296417,7.3975e-05) , 
4, 0.0121795, 1, 0, 0.224249,-0.00139376) , 
0, 0.00157834, 1, 0, 0.507328,-0.000617695) , 
5, 0.00340103, 1, 0, 0.493801,-0.000856283)    );
  // itree = 600
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965838,-0.00373522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975618,0.0506187) , 
0, 0.00046523, 1, 0, 0.970218,0.00403824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00698305,-0.00835745) , 
0, 0.00122233, 1, 0, 0.538054,0.00173433) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926195,-0.0255756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419934,-0.000828573) , 
0, 0.00116263, 1, 0, 0.581793,-0.00370711) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.242968,-0.00929327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462792,0.00535707) , 
4, 0.0140012, 1, 0, 0.426969,0.000222222) , 
5, 0.0136566, 1, 0, 0.490373,-0.00138691) , 
4, 0.0087, 1, 0, 0.500557,-0.000720207)    );
  // itree = 601
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880482,-0.0120259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71794,0.00733462) , 
2, 0.0339704, 1, 0, 0.797644,0.000125434) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774302,-0.00807645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000513658,0.0279527) , 
0, 0.00315669, 1, 0, 0.210593,-0.00165322) , 
2, 0.118998, 1, 0, 0.530346,-0.000684429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185922,-0.0160774) , 
3, 126.113, 1, 0, 0.500259,-0.00111848)    );
  // itree = 602
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861506,-0.0496322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609572,0.00541571) , 
5, 0.00647172, 1, 0, 0.69264,-0.00203546) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9636,-0.0458945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915233,-0.00870711) , 
6, 0.0238995, 1, 0, 0.931887,-0.00694347) , 
7, 8.8793e-05, 1, 0, 0.816554,-0.00457747) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997184,0.0395391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513995,-0.00708072) , 
0, 7.51582e-05, 1, 0, 0.854955,-0.00283672) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.331692,0.0169101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0673739,-0.00287857) , 
2, 0.173483, 1, 0, 0.148682,0.000557861) , 
0, 0.00157834, 1, 0, 0.285026,-9.74554e-05) , 
2, 0.0714166, 1, 0, 0.500083,-0.00191007)    );
  // itree = 603
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872116,-0.00626908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.88603,0.0276516) , 
6, 0.0227046, 1, 0, 0.876939,0.000628667) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800888,0.0532662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800646,0.0175703) , 
2, 0.0398472, 1, 0, 0.800748,0.00636106) , 
2, 0.0340053, 1, 0, 0.861446,0.00179433) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943678,-0.0017843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802606,-0.00849694) , 
0, 0.000450519, 1, 0, 0.866398,-0.005508) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00149086,0.0249763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.43e-05,-0.00800629) , 
0, 0.0131463, 1, 0, 0.000408948,0.000171669) , 
0, 0.00315455, 1, 0, 0.341632,-0.00206628) , 
2, 0.0476111, 1, 0, 0.504124,-0.000859472)    );
  // itree = 604
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564718,0.000947762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744015,-0.015857) , 
4, 0.00948473, 1, 0, 0.596235,-0.00116834) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744525,0.00740881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.222549,-0.00840382) , 
4, 0.0166815, 1, 0, 0.497907,0.000492326) , 
4, 0.0104768, 1, 0, 0.528691,-2.7598e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190808,-0.0106054) , 
3, 126.022, 1, 0, 0.49934,-0.00033795)    );
  // itree = 605
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953453,-0.00521944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867749,-0.0124016) , 
0, 0.00163932, 1, 0, 0.932343,-0.00402424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000267014,0.00120275) , 
0, 0.00314191, 1, 0, 0.546353,-0.00234859) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833073,-0.0243373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0526071,0.00795187) , 
2, 0.0475609, 1, 0, 0.314707,-0.000827448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914641,0.00952945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131003) , 
0, 0.00473218, 1, 0, 0.586359,0.0020907) , 
6, 0.0191375, 1, 0, 0.47537,0.000898429) , 
3, 25.2185, 1, 0, 0.497473,-0.000112658)    );
  // itree = 606
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654593,-0.0149026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679478,-0.00113614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839102,-0.0116272) , 
6, 0.0226171, 1, 0, 0.761419,-0.0019207) , 
4, 0.00525439, 1, 0, 0.752935,-0.00239456) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.331301,0.022662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834309,0.0107127) , 
7, 0.000201639, 1, 0, 0.661266,0.0092456) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130945) , 
4, 0.0191253, 1, 0, 0,-0.000155781) , 
0, 0.0047346, 1, 0, 0.165576,0.00219825) , 
2, 0.142833, 1, 0, 0.498677,-0.000406402)    );
  // itree = 607
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842299,-0.0607031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95611,-0.00192502) , 
5, 0.00463643, 1, 0, 0.949729,-0.001715) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532199,-0.0220952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924092,0.0152953) , 
4, 0.015753, 1, 0, 0.802775,-0.0114724) , 
0, 0.00195389, 1, 0, 0.92698,-0.00322551) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00158499,0.0257039) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000333524,0.0382699) , 
2, 0.356992, 1, 0, 9.58459e-05,-4.98598e-05) , 
0, 0.0117295, 1, 0, 0.000414389,0.000180121) , 
0, 0.0031564, 1, 0, 0.500247,-0.00165703)    );
  // itree = 608
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889638,0.0461727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301971,-0.0025543) , 
4, 0.00694333, 1, 0, 0.601862,0.00294731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00187304,-0.0196268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000346489,0.0117916) , 
2, 0.193878, 1, 0, 0.00078805,-0.00100629) , 
2, 0.0713915, 1, 0, 0.177977,0.000159177) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971876,0.00791128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707129,-0.008182) , 
0, 0.000857734, 1, 0, 0.818659,-0.00244429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62856,-0.0198017) , 
3, 111.918, 1, 0, 0.804461,-0.00368582) , 
7, 6.11109e-05, 1, 0, 0.495943,-0.00179232)    );
  // itree = 609
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.847931,-0.0271454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241403,0.0180113) , 
2, 0.047566, 1, 0, 0.482983,-0.000622517) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953997,0.00692651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.745805,-0.0162765) , 
0, 0.00114259, 1, 0, 0.835267,-0.00942237) , 
7, 0.000199185, 1, 0, 0.563053,-0.00262262) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.423099,-0.00168801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125917,-0.0129366) , 
3, 116.351, 1, 0, 0.374952,-0.000966216) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583567,0.0327482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593934,0.000957245) , 
6, 0.0246075, 1, 0, 0.592457,0.00120415) , 
6, 0.0226161, 1, 0, 0.481494,9.69082e-05) , 
3, 25.1892, 1, 0, 0.506555,-0.000738729)    );
  // itree = 610
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601226,-0.00854217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301317,-8.80634e-05) , 
6, 0.00890257, 1, 0, 0.391162,-0.00134857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69546,-0.0343555) , 
4, 0.00601295, 1, 0, 0.469064,-0.00321206) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688731,0.00314801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952634,0.0239503) , 
7, 0.000274281, 1, 0, 0.723974,0.00165395) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0160752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130945) , 
4, 0.0252197, 1, 0, 0,-0.000917893) , 
4, 0.0182548, 1, 0, 0.50711,0.000883564) , 
4, 0.00700607, 1, 0, 0.50152,0.000281858)    );
  // itree = 611
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466309,0.00334462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432274,0.0709746) , 
3, 75.6167, 1, 0, 0.46392,0.000846079) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882322,-0.0111756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0321521,0.000599475) , 
0, 0.00157242, 1, 0, 0.239785,-0.00251303) , 
3, 88.2653, 1, 0, 0.421291,0.000207192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673217,-0.0174682) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658572,-0.0104779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603609,0.00352517) , 
3, 24.8704, 1, 0, 0.619914,-0.000787895) , 
6, 0.0270942, 1, 0, 0.625343,-0.00164155) , 
6, 0.0260954, 1, 0, 0.494229,-0.000453636)    );
  // itree = 612
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.238281,-0.059139) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248613,0.0315559) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.496062,-0.000586412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674205,-0.00597387) , 
6, 0.0313142, 1, 0, 0.529391,-0.000550838) , 
4, 0.00522673, 1, 0, 0.506645,-0.000191795) , 
5, 0.00341826, 1, 0, 0.495182,-0.000515349)    );
  // itree = 613
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68852,-0.00698466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300448,-0.0189857) , 
3, 125.249, 1, 0, 0.663655,-0.00231863) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.158601,0.0181626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130957) , 
0, 0.00787615, 1, 0, 0.0333876,0.00102205) , 
2, 0.238066, 1, 0, 0.496398,-0.0014321) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.754198,-0.0280548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.457305,-0.00751632) , 
2, 0.166601, 1, 0, 0.630205,-0.0104377) , 
6, 0.0347914, 1, 0, 0.505589,-0.00205065)    );
  // itree = 614
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909489,-0.0273909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00129135,-0.000644571) , 
0, 0.00156221, 1, 0, 0.193444,-0.00193377) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633177,-0.00482013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550504,0.0047697) , 
3, 25.2194, 1, 0, 0.576527,0.000321978) , 
6, 0.0116146, 1, 0, 0.492355,-0.000173659) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672107,0.00551176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67665,-0.0166533) , 
6, 0.0357857, 1, 0, 0.67398,-0.00431572) , 
6, 0.0347924, 1, 0, 0.504032,-0.00043995)    );
  // itree = 615
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966687,0.0838996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905542,0.00849188) , 
4, 0.00686946, 1, 0, 0.928194,0.00183755) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871778,-0.0326282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826279,-0.116802) , 
3, 59.3583, 1, 0, 0.858802,-0.00826424) , 
2, 0.0102016, 1, 0, 0.895212,-0.00296383) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781545,0.0422086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747883,0.0202646) , 
4, 0.00882619, 1, 0, 0.754371,0.0049488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.223076,0.00232707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563918,-0.00962404) , 
6, 0.0313095, 1, 0, 0.294553,-0.0004343) , 
2, 0.0692052, 1, 0, 0.407719,0.000890531) , 
2, 0.0238066, 1, 0, 0.503492,0.000133303)    );
  // itree = 616
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799668,-0.00955173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71168,0.0031497) , 
3, 49.3165, 1, 0, 0.765966,-0.00126199) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8058,-0.000809569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754988,-0.0413937) , 
3, 36.3133, 1, 0, 0.780059,-0.00821219) , 
6, 0.0330532, 1, 0, 0.767385,-0.00196173) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253801,0.0126642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00862109,-0.0125169) , 
2, 0.173447, 1, 0, 0.0558628,-0.000275637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676937,-0.00164851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796914,0.014689) , 
7, 0.000235656, 1, 0, 0.758979,0.00405078) , 
7, 0.000196464, 1, 0, 0.203089,0.000630278) , 
2, 0.119029, 1, 0, 0.49818,-0.000725177)    );
  // itree = 617
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.420792,-0.0039534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654263,0.0133113) , 
6, 0.0204764, 1, 0, 0.533552,0.00121971) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.316107,0.00144582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560223,-0.00924566) , 
6, 0.0204622, 1, 0, 0.434921,-0.00138939) , 
3, 37.8374, 1, 0, 0.479371,-0.000213562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809629,-0.00820308) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657311,-0.0249276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368514,-0.00573464) , 
2, 0.211099, 1, 0, 0.493386,-0.0104269) , 
2, 0.0955901, 1, 0, 0.604428,-0.0075609) , 
6, 0.0330523, 1, 0, 0.494986,-0.00113097)    );
  // itree = 618
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0937709,-0.00334569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857116,0.0123792) , 
7, 2.85616e-05, 1, 0, 0.526425,0.0016429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507281,-0.0119194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248647,0.0153309) , 
3, 104.975, 1, 0, 0.45679,-0.00150262) , 
3, 25.1948, 1, 0, 0.478801,-0.000508342) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636905,-0.0189943) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642813,0.000695544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601988,-0.0142432) , 
1, 1.09611, 1, 0, 0.625572,-0.00199024) , 
3, 24.6049, 1, 0, 0.629119,-0.00701105) , 
6, 0.033052, 1, 0, 0.497075,-0.00129887)    );
  // itree = 619
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89349,-0.0116241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29724,0.00950869) , 
2, 0.0713937, 1, 0, 0.625235,-0.000385042) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901238,-0.00435447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590038,-0.0295213) , 
2, 0.142831, 1, 0, 0.77976,-0.0122894) , 
7, 0.000207258, 1, 0, 0.643849,-0.00181904) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0169737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000107817,0.00581535) , 
4, 0.0226254, 1, 0, 6.69152e-05,-0.000714926) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944078,-0.000751966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646924,0.0269234) , 
0, 0.00156393, 1, 0, 0.768026,0.00417192) , 
6, 0.0313142, 1, 0, 0.271209,0.00101047) , 
4, 0.0156719, 1, 0, 0.495131,-0.000689798)    );
  // itree = 620
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916459,0.0133377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410258,-0.00501103) , 
2, 0.0238066, 1, 0, 0.51945,-0.000726871) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841312,0.0104841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48298,-0.0204642) , 
2, 0.142715, 1, 0, 0.658584,-0.00729203) , 
6, 0.0347916, 1, 0, 0.529206,-0.00118719) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931776,0.016772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732733,0.0272912) , 
0, 0.000897955, 1, 0, 0.831218,0.0106927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000174722,-0.00475106) , 
0, 0.00471726, 1, 0, 0.282823,0.00357142) , 
3, 100.89, 1, 0, 0.492733,-0.000482755)    );
  // itree = 621
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994828,0.015529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870485,-0.0133501) , 
0, 0.000299004, 1, 0, 0.92975,-0.00548535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0004088,0.00937462) , 
0, 0.00314307, 1, 0, 0.553189,-0.00319597) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.503694,0.00140805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652157,-0.0104057) , 
6, 0.0347915, 1, 0, 0.513708,-9.86565e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.374485,0.0314201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124968,0.0276566) , 
4, 0.0156321, 1, 0, 0.230996,0.00457727) , 
3, 116.488, 1, 0, 0.472486,0.000583136) , 
3, 25.2185, 1, 0, 0.497603,-0.000593031)    );
  // itree = 622
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553513,-0.0106499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336781,0.00603847) , 
5, 0.00482378, 1, 0, 0.374583,-0.000451131) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973821,0.0279903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254582,-0.00639513) , 
0, 0.00171547, 1, 0, 0.830237,0.00439888) , 
7, 6.37206e-05, 1, 0, 0.61643,0.0021231) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925619,-0.0205964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920768,0.00372608) , 
0, 0.00180359, 1, 0, 0.923252,-0.00352279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000324193,0.0309497) , 
4, 0.0279087, 1, 0, 0.000116129,-3.0252e-05) , 
0, 0.00315669, 1, 0, 0.373121,-0.00144145) , 
4, 0.0139151, 1, 0, 0.495507,0.00035154)    );
  // itree = 623
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917227,0.0183136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131117) , 
0, 0.00473459, 1, 0, 0.478193,0.00147008) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91619,-0.00658548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000268155,0.000544973) , 
0, 0.00315669, 1, 0, 0.375004,-0.00115238) , 
3, 25.1119, 1, 0, 0.405735,-0.00037139) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850729,-0.00711205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847248,0.0169968) , 
3, 46.1871, 1, 0, 0.849705,-0.00130464) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750793,-0.0252524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86746,-0.011862) , 
7, 0.000261327, 1, 0, 0.808349,-0.00719323) , 
3, 74.6112, 1, 0, 0.84022,-0.0026551) , 
7, 0.00019548, 1, 0, 0.502276,-0.000878822)    );
  // itree = 624
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965249,-0.0070784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897724,0.0191198) , 
2, 0.152879, 1, 0, 0.961159,-0.00187176) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523669,-0.0218341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727132,0.001342) , 
3, 47.9499, 1, 0, 0.629651,-0.0118407) , 
2, 0.189197, 1, 0, 0.925896,-0.00293216) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000445032,0.016489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.68102e-05,-0.00925818) , 
2, 0.166641, 1, 0, 0.000202427,-3.2086e-05) , 
4, 0.0104415, 1, 0, 0.000151294,-0.000151024) , 
0, 0.00315552, 1, 0, 0.501078,-0.00165591)    );
  // itree = 625
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861979,0.0635898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920205,-0.0157749) , 
3, 6.6033, 1, 0, 0.888586,-0.000311706) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.860293,-0.0171974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195817,-0.0114073) , 
0, 0.00157095, 1, 0, 0.379289,-0.00691276) , 
2, 0.0475943, 1, 0, 0.565644,-0.00449739) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.464167,0.00392245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350502,-0.0160381) , 
3, 71.3753, 1, 0, 0.431971,-0.00305325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562137,-0.00681071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448341,0.0126704) , 
3, 48.6106, 1, 0, 0.500245,0.000372264) , 
5, 0.00678159, 1, 0, 0.490599,-0.000111718) , 
3, 12.6044, 1, 0, 0.502087,-0.000783108)    );
  // itree = 626
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63844,-0.0413828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518339,0.00783247) , 
5, 0.00940313, 1, 0, 0.552096,-0.000564661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678974,-0.0200373) , 
6, 0.0313248, 1, 0, 0.574711,-0.00307363) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547058,0.0090323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464595,-0.00655032) , 
3, 69.1597, 1, 0, 0.522863,0.000601209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119094,0.067817) , 
3, 144.708, 1, 0, 0.493046,0.000925916) , 
3, 12.6115, 1, 0, 0.505268,0.000327334)    );
  // itree = 627
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527537,-0.00848794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410256,0.00643413) , 
3, 37.8347, 1, 0, 0.463244,-0.00011759) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830973,0.0426882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421913,0.028652) , 
2, 0.140869, 1, 0, 0.632376,0.00612714) , 
6, 0.0298161, 1, 0, 0.475285,0.000326993) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652254,-0.0134728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657123,-0.0093628) , 
3, 14.3016, 1, 0, 0.656128,-0.00547388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45961,0.0210822) , 
3, 100.117, 1, 0, 0.625612,-0.00393774) , 
6, 0.0313142, 1, 0, 0.50219,-0.000436288)    );
  // itree = 628
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997527,0.0210641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856073,-0.0125313) , 
2, 0.17506, 1, 0, 0.98234,0.000336759) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9301,-0.0108877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708876,-0.0213484) , 
4, 0.010863, 1, 0, 0.876962,-0.0125515) , 
0, 0.000375765, 1, 0, 0.947272,-0.00395227) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784596,-2.40019e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781776,0.0219113) , 
3, 71.7528, 1, 0, 0.783919,0.00255395) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.56149e-05,-0.00255883) , 
4, 0.0191294, 1, 0, 3.89025e-05,-0.000158058) , 
0, 0.00458472, 1, 0, 0.217878,0.000595605) , 
0, 0.00157834, 1, 0, 0.500635,-0.00116742)    );
  // itree = 629
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.235905,0.0350377) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.286304,-0.0125575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853776,0.00908692) , 
7, 8.21116e-05, 1, 0, 0.572692,0.00097241) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650536,-0.00925168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.111371,0.00618378) , 
2, 0.21426, 1, 0, 0.469497,-0.001607) , 
3, 37.8277, 1, 0, 0.515468,-0.000457932) , 
4, 0.00348272, 1, 0, 0.501081,-0.000167323)    );
  // itree = 630
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.795796,0.0400967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579121,-0.0134036) , 
3, 75.4596, 1, 0, 0.752618,0.00156824) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907771,-0.037768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956598,0.0118795) , 
5, 0.0121361, 1, 0, 0.936969,-0.00438801) , 
7, 8.86567e-05, 1, 0, 0.842451,-0.00133421) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884088,0.0182277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897251,-0.00772969) , 
4, 0.0138679, 1, 0, 0.890096,0.00365303) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0523331,-0.00766569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751766,0.00843509) , 
7, 0.000196529, 1, 0, 0.179988,0.000200817) , 
0, 0.00157739, 1, 0, 0.352946,0.00104166) , 
2, 0.0476132, 1, 0, 0.509872,0.000279999)    );
  // itree = 631
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752226,-0.00789974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658845,0.0154667) , 
3, 83.8375, 1, 0, 0.741247,-0.00157604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349518,-0.0213076) , 
3, 125.759, 1, 0, 0.719749,-0.0019582) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782809,0.00692217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 9.28049e-05,-0.00752006) , 
0, 0.00315247, 1, 0, 0.202548,0.0013153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000438554,-0.014141) , 
2, 0.372979, 1, 0, 0.137868,0.000286075) , 
2, 0.166641, 1, 0, 0.503255,-0.0011232)    );
  // itree = 632
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905513,0.0352985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.342386,0.013551) , 
5, 0.00645861, 1, 0, 0.58552,0.00290138) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000720229,-0.0166903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000211226,0.00731551) , 
4, 0.0121795, 1, 0, 0.000354313,-0.000665047) , 
2, 0.0713937, 1, 0, 0.171047,0.000375281) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991155,-0.0089712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852054,0.0326277) , 
2, 0.16555, 1, 0, 0.969576,0.0010813) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677074,-0.00570489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796111,-0.016847) , 
1, 1.62503, 1, 0, 0.708872,-0.00559284) , 
0, 0.000850645, 1, 0, 0.819236,-0.00276747) , 
7, 5.73802e-05, 1, 0, 0.503556,-0.00123689)    );
  // itree = 633
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523036,-0.00319912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518329,-0.0192516) , 
3, 25.2177, 1, 0, 0.521594,-0.00220166) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.455552,0.0214275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428711,-0.000214634) , 
4, 0.0069609, 1, 0, 0.433116,0.000700694) , 
3, 37.832, 1, 0, 0.473378,-0.00062003) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931153,-0.00527058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493613,0.0374494) , 
0, 0.00156342, 1, 0, 0.643062,0.00384241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662132,-0.0060782) , 
6, 0.0355379, 1, 0, 0.64695,0.00225581) , 
6, 0.031313, 1, 0, 0.503412,-0.000122409)    );
  // itree = 634
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95479,-0.00157908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876087,0.0640029) , 
2, 0.015859, 1, 0, 0.913019,0.00159047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694547,-0.0183579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136514,-0.0100078) , 
2, 0.155258, 1, 0, 0.379879,-0.00657229) , 
2, 0.0475943, 1, 0, 0.567117,-0.00370553) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839028,0.0317186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121825,-0.011401) , 
5, 0.00835751, 1, 0, 0.501508,0.00276087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711032,-0.00803646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300372,0.00740425) , 
4, 0.0153061, 1, 0, 0.48818,-0.000876904) , 
4, 0.00868717, 1, 0, 0.490993,-0.000109134) , 
3, 12.6032, 1, 0, 0.502687,-0.000661611)    );
  // itree = 635
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.835499,0.0675738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801012,-0.0202558) , 
3, 48.3333, 1, 0, 0.822469,9.91859e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864529,-0.0139932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86342,-0.148602) , 
1, 1.88339, 1, 0, 0.86438,-0.00681948) , 
6, 0.0175355, 1, 0, 0.847499,-0.0040327) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.112707,-0.00938346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.285662,0.00815996) , 
5, 0.00916244, 1, 0, 0.251279,0.000420947) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.573536,-0.00267762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546504,-0.0192288) , 
1, 1.22298, 1, 0, 0.569139,-0.00256364) , 
6, 0.0295738, 1, 0, 0.343255,-0.000442679) , 
2, 0.0476132, 1, 0, 0.503142,-0.00158101)    );
  // itree = 636
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0872377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987589,-0.0193777) , 
8, 0.103012, 1, 0, 0.99815,0.000452823) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92357,-0.00206791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667682,-0.0180821) , 
6, 0.0226623, 1, 0, 0.875191,-0.00812054) , 
0, 7.51584e-05, 1, 0, 0.954798,-0.00256994) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00259324,-0.0112637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671229,0.0168778) , 
6, 0.0226171, 1, 0, 0.404004,0.0017008) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697914,-0.00764231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131083) , 
0, 0.00310955, 1, 0, 0.0678694,-0.0010625) , 
2, 0.166641, 1, 0, 0.213839,0.000137487) , 
0, 0.00157834, 1, 0, 0.498488,-0.000902605)    );
  // itree = 637
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945176,-0.00193954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988674,0.0723267) , 
5, 0.0105568, 1, 0, 0.955878,0.00238493) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00710484,-0.0192672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.17948e-05,-0.00548368) , 
0, 0.0151071, 1, 0, 0.00205997,-0.0018636) , 
0, 0.00157834, 1, 0, 0.406479,-6.22276e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.55059,0.00024417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671693,-0.0120956) , 
5, 0.0135675, 1, 0, 0.639772,-0.00374762) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560734,-0.0155527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547231,0.0109345) , 
6, 0.0266802, 1, 0, 0.549608,0.000491399) , 
3, 63.0127, 1, 0, 0.609431,-0.00232116) , 
6, 0.024357, 1, 0, 0.492395,-0.00101851)    );
  // itree = 638
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.772259,-0.0232753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795211,0.00503725) , 
4, 0.00700062, 1, 0, 0.791388,-3.34519e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661965,-0.0182731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710356,-0.0101495) , 
5, 0.00650999, 1, 0, 0.703886,-0.00335699) , 
3, 37.698, 1, 0, 0.746401,-0.00174217) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.342681,0.0567886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370758,0.000734226) , 
3, 47.7101, 1, 0, 0.356903,0.00465838) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.312843,-0.00633401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.57289e-05,-0.00466184) , 
0, 0.0047346, 1, 0, 0.0441147,-0.00101888) , 
2, 0.244899, 1, 0, 0.162932,0.00113771) , 
2, 0.14284, 1, 0, 0.496757,-0.000509976)    );
  // itree = 639
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99278,-0.0110291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93551,0.0484696) , 
2, 0.152669, 1, 0, 0.984883,0.000524317) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927689,-0.00659768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651356,-0.0195348) , 
6, 0.022356, 1, 0, 0.871072,-0.00999334) , 
0, 0.000375765, 1, 0, 0.946424,-0.00302981) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00501275,-0.0126118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013096) , 
0, 0.0166103, 1, 0, 0.00160052,-0.00087058) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474569,0.0280898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475057,-0.00206521) , 
6, 0.0289984, 1, 0, 0.47487,0.00155601) , 
6, 0.0243569, 1, 0, 0.220042,0.000249431) , 
0, 0.00157834, 1, 0, 0.505607,-0.00103975)    );
  // itree = 640
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597278,-0.00308211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70999,-0.014424) , 
4, 0.0106021, 1, 0, 0.640518,-0.00292769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0192543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422724,0.0148778) , 
5, 0.0133037, 1, 0, 0.324249,0.000465416) , 
4, 0.0139191, 1, 0, 0.49159,-0.00132991) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.797141,-0.00827523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510653,-0.0157937) , 
2, 0.14312, 1, 0, 0.654882,-0.00740235) , 
6, 0.0347915, 1, 0, 0.502306,-0.00172842)    );
  // itree = 641
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994075,0.0620693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981851,-0.0230405) , 
3, 21.833, 1, 0, 0.985482,-0.000734654) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898115,-0.00783639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836413,-0.0205586) , 
3, 58.9305, 1, 0, 0.880491,-0.00919388) , 
0, 0.000375766, 1, 0, 0.950972,-0.0035151) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864442,-0.00441941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000261377,-0.000872814) , 
0, 0.00308153, 1, 0, 0.234207,-0.00086747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0788409,0.0554476) , 
3, 126.113, 1, 0, 0.216216,-0.000300189) , 
0, 0.00157834, 1, 0, 0.500589,-0.00154446)    );
  // itree = 642
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799755,-0.00183618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00992359,-0.0244476) , 
2, 0.214196, 1, 0, 0.626427,-0.00132552) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996236,0.0495787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59874,-0.0210822) , 
5, 0.0153431, 1, 0, 0.798051,-0.00854372) , 
7, 0.000214153, 1, 0, 0.643575,-0.00204675) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722641,0.0211298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0176531) , 
4, 0.0186418, 1, 0, 0.305893,0.00108787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128132,-0.0299081) , 
3, 113.501, 1, 0, 0.276975,0.000157254) , 
4, 0.0156566, 1, 0, 0.498599,-0.00117515)    );
  // itree = 643
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0871993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991093,-0.0288743) , 
8, 0.100853, 1, 0, 0.998601,0.000352725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919923,-0.00138973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775409,-0.019614) , 
4, 0.00978069, 1, 0, 0.860388,-0.0113273) , 
0, 7.49244e-05, 1, 0, 0.948735,-0.00386136) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.010278,-0.0142355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931517,0.0126393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000109741,-0.00573176) , 
0, 0.00307894, 1, 0, 0.287742,0.00180804) , 
4, 0.0121723, 1, 0, 0.219147,0.000563563) , 
0, 0.00157346, 1, 0, 0.502745,-0.00115645)    );
  // itree = 644
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.398083,-0.0101898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.302151,0.00313607) , 
3, 37.665, 1, 0, 0.344902,-0.000480627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617464,0.0582456) , 
6, 0.0198832, 1, 0, 0.366464,0.000154421) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60826,0.0201385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655332,-0.00682638) , 
6, 0.0223703, 1, 0, 0.651221,-0.00143574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279643,-0.0210251) , 
3, 125.971, 1, 0, 0.622422,-0.0020068) , 
6, 0.0208788, 1, 0, 0.501396,-0.000984901)    );
  // itree = 645
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889696,-0.0757138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9568,-0.00131652) , 
5, 0.00529548, 1, 0, 0.950602,-0.00191155) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705604,-0.020078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926021,-0.00543804) , 
4, 0.0126476, 1, 0, 0.878822,-0.00953041) , 
0, 0.00150173, 1, 0, 0.928643,-0.00424236) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000813588,0.0298473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131021) , 
5, 0.016958, 1, 0, 0.000313184,0.000133256) , 
2, 0.14284, 1, 0, 0.000223005,-3.05554e-05) , 
0, 0.00315669, 1, 0, 0.497108,-0.00228469)    );
  // itree = 646
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.2353,0.0160746) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958287,-0.00200103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857079,-0.011192) , 
0, 0.00180208, 1, 0, 0.937318,-0.00230338) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000724385,0.031928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000108477,-0.0071503) , 
3, 25.2329, 1, 0, 0.000276248,4.56425e-05) , 
0, 0.00315669, 1, 0, 0.513713,-0.00124147) , 
4, 0.00351963, 1, 0, 0.500253,-0.000971072)    );
  // itree = 647
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0911244,0.0253353) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.174741,-0.00164848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.266453,-0.0203698) , 
1, 3.80106, 1, 0, 0.186123,-0.000558117) , 
6, 0.00695304, 1, 0, 0.163724,-0.000197342) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905884,-0.00823245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97076,0.0294329) , 
7, 0.000294127, 1, 0, 0.911969,-0.00196158) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697259,-0.0221053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.270806,-0.00450477) , 
0, 0.00170129, 1, 0, 0.40047,-0.00923405) , 
2, 0.189918, 1, 0, 0.817535,-0.00330424) , 
7, 5.73802e-05, 1, 0, 0.497133,-0.0017817)    );
  // itree = 648
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913407,-0.00574422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845241,-0.0654086) , 
2, 0.0103585, 1, 0, 0.900002,-0.00594455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873495,-0.0142327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797106,0.045286) , 
3, 35.6134, 1, 0, 0.834464,0.00183277) , 
2, 0.0136021, 1, 0, 0.87758,-0.00328375) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899546,0.050601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686127,0.0164231) , 
5, 0.0132834, 1, 0, 0.809789,0.00575473) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.286138,0.00372173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567446,-0.0121246) , 
6, 0.0313143, 1, 0, 0.344954,-0.000396179) , 
2, 0.0465349, 1, 0, 0.409562,0.000458741) , 
2, 0.0238066, 1, 0, 0.503925,-0.00029583)    );
  // itree = 649
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227572,-0.0322969) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972413,0.0272252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0100147,-0.00508285) , 
0, 0.00120462, 1, 0, 0.513126,0.00154283) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796228,-0.0108728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343599,-0.000301246) , 
2, 0.0714198, 1, 0, 0.5047,-0.00106873) , 
4, 0.00872952, 1, 0, 0.506449,-0.000526665) , 
5, 0.00341826, 1, 0, 0.493387,-0.000760147)    );
  // itree = 650
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899235,-0.0462974) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988044,-0.00354449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884155,-0.0116195) , 
0, 0.000375638, 1, 0, 0.954798,-0.00301861) , 
5, 0.00542699, 1, 0, 0.94945,-0.00464429) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00155937,0.0221693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00411006,-0.0212981) , 
6, 0.016233, 1, 0, 0.00240188,-0.000743057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666068,0.0125573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226685,-0.00536419) , 
5, 0.017114, 1, 0, 0.468543,0.00156308) , 
6, 0.0243554, 1, 0, 0.21893,0.000328172) , 
0, 0.0015782, 1, 0, 0.501708,-0.00159662)    );
  // itree = 651
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992319,-0.0354477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930992,0.0163943) , 
0, 0.000150316, 1, 0, 0.961002,0.0021597) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00247401,0.0109973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00138325,-0.0220842) , 
6, 0.00928221, 1, 0, 0.00181848,-0.000576064) , 
0, 0.00157834, 1, 0, 0.40787,0.000582066) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945303,-0.0309948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940868,-0.00147241) , 
4, 0.0146748, 1, 0, 0.942621,-0.00609478) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45163,0.00743805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462521,-0.00837835) , 
6, 0.0324734, 1, 0, 0.455211,3.40005e-05) , 
0, 0.00157739, 1, 0, 0.611806,-0.00193505) , 
6, 0.0243562, 1, 0, 0.494903,-0.000492147)    );
  // itree = 652
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.288302,0.00903459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561388,-0.0217825) , 
5, 0.0038757, 1, 0, 0.459808,-0.00385625) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963051,0.0129471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.262848,-0.00283428) , 
0, 0.00157739, 1, 0, 0.534335,0.000666561) , 
5, 0.00678159, 1, 0, 0.523956,3.66865e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186503,-0.0152216) , 
3, 126.113, 1, 0, 0.494915,-0.000437918)    );
  // itree = 653
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930341,-0.00969117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000337888,0.00586864) , 
0, 0.00315009, 1, 0, 0.561903,-0.00234289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592079,0.0761455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563415,-0.00224001) , 
3, 35.2591, 1, 0, 0.578934,0.00275362) , 
3, 32.4274, 1, 0, 0.56404,-0.00170328) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942082,0.0153185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131201) , 
0, 0.00315552, 1, 0, 0.524517,0.0020824) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413572,-0.010611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166168,0.0110515) , 
3, 133.077, 1, 0, 0.314616,-0.00121665) , 
3, 91.8853, 1, 0, 0.454819,0.000986948) , 
3, 37.8374, 1, 0, 0.502833,-0.000195672)    );
  // itree = 654
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925964,0.0376873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518874,-0.0155432) , 
4, 0.0156208, 1, 0, 0.859294,0.00196115) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811563,-0.0122939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735477,-0.00243757) , 
3, 37.576, 1, 0, 0.774392,-0.0027094) , 
2, 0.0362723, 1, 0, 0.845282,0.00119035) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.745522,-0.0111804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936783,-0.00649055) , 
5, 0.0105012, 1, 0, 0.890135,-0.00532275) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.407522,0.0174754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135823,-0.00145911) , 
2, 0.0907142, 1, 0, 0.172973,0.000180575) , 
0, 0.00157834, 1, 0, 0.338643,-0.00109074) , 
2, 0.0476132, 1, 0, 0.497292,-0.000376442)    );
  // itree = 655
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.455405,-0.00185672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6435,0.025677) , 
6, 0.0253461, 1, 0, 0.491319,0.000602222) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821078,-0.0219843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558791,0.00208123) , 
2, 0.0713915, 1, 0, 0.641373,-0.00165625) , 
6, 0.0295734, 1, 0, 0.528694,3.96937e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187315,-0.0240653) , 
3, 126.113, 1, 0, 0.49988,-0.000414983)    );
  // itree = 656
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.468514,-0.00797048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847036,0.0216519) , 
7, 7.50765e-05, 1, 0, 0.657743,0.00182314) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930178,-0.0189898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.249514,0.00149799) , 
0, 0.00157834, 1, 0, 0.39642,-0.00112588) , 
4, 0.0139535, 1, 0, 0.531397,0.000397331) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0540822,0.0206923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611117,-0.0218805) , 
7, 8.11752e-05, 1, 0, 0.213801,-0.00425454) , 
3, 113.504, 1, 0, 0.493555,-0.000156952)    );
  // itree = 657
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970306,-0.00780413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873233,0.0197554) , 
2, 0.150757, 1, 0, 0.961795,-0.00135925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58744,-0.00862129) , 
2, 0.211742, 1, 0, 0.92762,-0.00214405) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00187093,0.0241914) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.38195e-05,-0.000844128) , 
4, 0.019146, 1, 0, 4.79558e-05,-0.000102396) , 
0, 0.0117259, 1, 0, 0.0004489,0.000175785) , 
0, 0.00315669, 1, 0, 0.502362,-0.00108003)    );
  // itree = 658
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907273,0.0366074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807491,-0.00933594) , 
2, 0.0103585, 1, 0, 0.837864,-0.00086974) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654773,0.0353767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599489,0.000385422) , 
4, 0.0122078, 1, 0, 0.617322,0.00332476) , 
2, 0.0544085, 1, 0, 0.751114,0.000780164) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574548,-0.0220699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874102,0.00519245) , 
7, 0.000237155, 1, 0, 0.730564,-0.00856015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00115486,0.0502942) , 
6, 0.0243498, 1, 0, 0.000365742,0.000157287) , 
0, 0.00315669, 1, 0, 0.16493,-0.00180735) , 
2, 0.142833, 1, 0, 0.501614,-0.000321172)    );
  // itree = 659
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90351,-0.0177446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969183,-0.00437019) , 
5, 0.00545001, 1, 0, 0.964099,-0.00217856) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844307,-0.0380572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464715,0.0032054) , 
2, 0.233878, 1, 0, 0.61992,-0.0106342) , 
2, 0.189802, 1, 0, 0.924858,-0.00314263) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000548965,0.0131755) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000179297,-0.00975235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130971) , 
0, 0.0145771, 1, 0, 5.13565e-05,-0.000225503) , 
3, 25.2544, 1, 0, 0.000186859,-9.28805e-05) , 
0, 0.0031564, 1, 0, 0.4972,-0.00173213)    );
  // itree = 660
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973408,-0.0251655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952999,0.0306418) , 
0, 0.000450345, 1, 0, 0.963711,0.00294293) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00121442,0.0219635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0025801,-0.0169561) , 
6, 0.0092781, 1, 0, 0.00204849,-0.000626455) , 
0, 0.00157623, 1, 0, 0.414024,0.00090267) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921823,-0.0290918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93645,-0.0123948) , 
6, 0.0266846, 1, 0, 0.933657,-0.00685478) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704966,0.0169273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.320658,-0.0100025) , 
2, 0.0952317, 1, 0, 0.465645,-0.000408079) , 
0, 0.00157174, 1, 0, 0.618774,-0.00251738) , 
6, 0.0243555, 1, 0, 0.500733,-0.000545667)    );
  // itree = 661
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741542,-0.0210909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932729,-0.00867952) , 
5, 0.00509964, 1, 0, 0.905364,-0.00512482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013144) , 
0, 0.00395149, 1, 0, 0.601909,-0.00353395) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713534,0.0301063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803419,-0.00148914) , 
6, 0.0294174, 1, 0, 0.738848,0.00349142) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.255933,-0.0164979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279194,0.0222367) , 
5, 0.0167928, 1, 0, 0.269638,-0.000184139) , 
4, 0.0156491, 1, 0, 0.423997,0.00102504) , 
4, 0.0121726, 1, 0, 0.493643,-0.000759628)    );
  // itree = 662
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0872732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927433,0.0378773) , 
0, 0.000116307, 1, 0, 0.963078,0.00461175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00768349,-0.00574362) , 
0, 0.00122233, 1, 0, 0.527438,0.00199807) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918015,-0.0293584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198254,-0.00438465) , 
0, 0.00108699, 1, 0, 0.325073,-0.00337557) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778078,-0.00296101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250035,0.0103097) , 
2, 0.142735, 1, 0, 0.541308,0.000567274) , 
5, 0.0101411, 1, 0, 0.501499,-0.000158615) , 
4, 0.00869764, 1, 0, 0.507165,0.000312516)    );
  // itree = 663
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658129,0.00918147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44493,-0.00583258) , 
4, 0.0121751, 1, 0, 0.539755,-1.39559e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506009,-0.0130387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.274859,0.00363511) , 
3, 101.478, 1, 0, 0.427543,-0.00188779) , 
3, 50.4403, 1, 0, 0.491652,-0.000817233) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704789,0.0225432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654702,-0.00516839) , 
1, 1.06907, 1, 0, 0.680863,0.00237201) , 
6, 0.0347916, 1, 0, 0.503771,-0.000612952)    );
  // itree = 664
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543045,0.00770834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705977,-0.0068396) , 
4, 0.00968115, 1, 0, 0.626473,-0.000494741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0910398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699451,-0.029377) , 
5, 0.0152676, 1, 0, 0.835599,-0.01125) , 
7, 0.000211889, 1, 0, 0.647925,-0.00159805) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0218012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130935) , 
4, 0.0236207, 1, 0, 0,-0.00108306) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931407,-0.00357843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659117,0.033674) , 
0, 0.00156393, 1, 0, 0.769276,0.00449095) , 
6, 0.0313143, 1, 0, 0.27214,0.000888808) , 
4, 0.0156623, 1, 0, 0.496412,-0.000595367)    );
  // itree = 665
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.786905,0.0513214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502881,0.0599935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.28439,0.00760695) , 
6, 0.0121606, 1, 0, 0.34658,0.00096302) , 
4, 0.00525568, 1, 0, 0.467341,0.00327881) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86481,-0.0263142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812416,0.00364874) , 
3, 25.1592, 1, 0, 0.831372,-0.00161236) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.212047,0.0167721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418503,-0.00206393) , 
4, 0.0104402, 1, 0, 0.374065,0.000158601) , 
2, 0.0475992, 1, 0, 0.503932,-0.000344318) , 
5, 0.00681441, 1, 0, 0.498927,0.000151235)    );
  // itree = 666
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230665,-0.00460895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501886,-0.0373146) , 
7, 1.27025e-05, 1, 0, 0.364229,-0.0077003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60767,0.0123002) , 
5, 0.0055247, 1, 0, 0.447507,-0.00455996) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566718,-0.00229872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521062,-0.0127658) , 
3, 39.0341, 1, 0, 0.552326,-0.00146608) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95041,0.012745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000102533,-0.00854824) , 
0, 0.00315552, 1, 0, 0.417238,0.00169846) , 
3, 63.0581, 1, 0, 0.50574,-0.000374763) , 
5, 0.00681732, 1, 0, 0.49771,-0.000951863)    );
  // itree = 667
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.242795,0.0267613) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73455,0.00310781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0887037,-0.014327) , 
2, 0.166601, 1, 0, 0.494656,-0.000515058) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659732,-0.000266224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636926,-0.0171961) , 
1, 1.10527, 1, 0, 0.651841,-0.00402443) , 
6, 0.0330525, 1, 0, 0.513764,-0.000941669) , 
4, 0.00352096, 1, 0, 0.501012,-0.000650525)    );
  // itree = 668
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0872013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98562,-0.0175575) , 
2, 0.156006, 1, 0, 0.998176,0.000401573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826661,-0.0156007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949387,0.00243245) , 
0, 0.00128984, 1, 0, 0.868708,-0.00880009) , 
0, 7.50005e-05, 1, 0, 0.952108,-0.0028726) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.385381,-0.0130909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718475,-0.0215898) , 
6, 0.02962, 1, 0, 0.491996,-0.00627783) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732009,0.00758632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000171783,-0.000256224) , 
0, 0.00457837, 1, 0, 0.170893,0.00104627) , 
2, 0.0476118, 1, 0, 0.216934,-3.88252e-06) , 
0, 0.00157523, 1, 0, 0.50309,-0.00112049)    );
  // itree = 669
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.238652,0.0435355) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.51206,-0.0325613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499632,-0.00211521) , 
4, 0.00509905, 1, 0, 0.500125,-0.000683142) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802543,0.0112831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559894,-0.0163569) , 
2, 0.142798, 1, 0, 0.681907,-0.00549203) , 
6, 0.0347914, 1, 0, 0.512034,-0.000998181) , 
4, 0.00350489, 1, 0, 0.499292,-0.000712363)    );
  // itree = 670
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488456,0.00645936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439338,-0.0138339) , 
3, 27.0038, 1, 0, 0.462635,-0.000706851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963971,0.0174647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787187,-0.0141928) , 
2, 0.0478868, 1, 0, 0.836588,-0.00583953) , 
7, 0.000199185, 1, 0, 0.546718,-0.00186093) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.249974,0.00284964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449866,-0.0150743) , 
6, 0.019395, 1, 0, 0.287991,-0.00124518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658044,0.0148498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264064,-0.00275152) , 
4, 0.0174024, 1, 0, 0.538141,0.00273268) , 
6, 0.022636, 1, 0, 0.411595,0.000720358) , 
3, 63.0148, 1, 0, 0.501278,-0.00099289)    );
  // itree = 671
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988982,0.000315653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891365,-0.0148662) , 
0, 0.000375638, 1, 0, 0.956685,-0.00343597) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000387422,-0.0190593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.480432,0.011) , 
6, 0.0226171, 1, 0, 0.239804,0.00085399) , 
0, 0.00157834, 1, 0, 0.534852,-0.000911636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17272,-0.0303796) , 
3, 125.949, 1, 0, 0.503786,-0.00191645)    );
  // itree = 672
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842597,-0.0071635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16515,0.00178302) , 
2, 0.0476074, 1, 0, 0.408686,-0.000293337) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60689,-0.0120348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610556,-0.00149983) , 
6, 0.0295845, 1, 0, 0.608818,-0.00233484) , 
6, 0.0248518, 1, 0, 0.480353,-0.0010244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660918,0.0276942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65092,0.0155955) , 
1, 1.06685, 1, 0, 0.655893,0.00468898) , 
6, 0.0347914, 1, 0, 0.492002,-0.000645275)    );
  // itree = 673
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.221327,-0.0249278) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.565111,0.0185147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000477982,-0.010366) , 
2, 0.0714198, 1, 0, 0.156502,0.000182263) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848637,0.00361657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793617,-0.00921172) , 
3, 37.3092, 1, 0, 0.819246,-0.00161005) , 
7, 5.73802e-05, 1, 0, 0.509014,-0.000771067) , 
5, 0.00340347, 1, 0, 0.494915,-0.00119338)    );
  // itree = 674
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.255365,0.00274662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103092,-0.0144777) , 
3, 88.2278, 1, 0, 0.221462,-0.000562912) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867515,0.00277401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834041,0.025423) , 
3, 73.7671, 1, 0, 0.860327,0.00201687) , 
7, 5.99181e-05, 1, 0, 0.575672,0.000867414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000990861,-0.0170311) , 
2, 0.356533, 1, 0, 0.495863,0.000515435)    );
  // itree = 675
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.555845,0.00690506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541677,-0.00525924) , 
3, 17.8332, 1, 0, 0.547535,-0.000165654) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655087,0.0272652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461561,0.00314587) , 
5, 0.0132294, 1, 0, 0.551521,0.00226423) , 
3, 46.8118, 1, 0, 0.54863,0.000502298) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958863,0.00780207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811015,-0.0182067) , 
0, 0.000741833, 1, 0, 0.884638,-0.0109863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000229401,-0.00522267) , 
0, 0.00314347, 1, 0, 0.366303,-0.00463069) , 
3, 75.6164, 1, 0, 0.50183,-0.000815244)    );
  // itree = 676
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615573,-0.00546879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504912,-0.0107764) , 
3, 61.7456, 1, 0, 0.583658,-0.00223635) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.489437,-0.00871139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377211,0.014228) , 
3, 50.3885, 1, 0, 0.438952,-0.000213637) , 
5, 0.00981091, 1, 0, 0.479867,-0.00078555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94995,0.00490257) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499491,-0.0087578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425579,-0.0283449) , 
3, 49.7408, 1, 0, 0.464697,-0.00850138) , 
0, 0.00156071, 1, 0, 0.625622,-0.00541128) , 
6, 0.033052, 1, 0, 0.497956,-0.00135963)    );
  // itree = 677
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566416,-0.0114586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.249913,0.0148348) , 
6, 0.00860858, 1, 0, 0.381846,-0.000777684) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576085,-0.0342138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468973,-0.0374198) , 
3, 36.9189, 1, 0, 0.515275,-0.00729635) , 
7, 2.75342e-05, 1, 0, 0.439926,-0.00361515) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73368,0.00675161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.019079) , 
4, 0.019112, 1, 0, 0.586294,0.000999178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00045443,-0.0190689) , 
2, 0.357099, 1, 0, 0.50893,0.000541586) , 
5, 0.00672042, 1, 0, 0.499678,-1.57029e-05)    );
  // itree = 678
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413186,0.00222039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622817,-0.0119972) , 
6, 0.0242062, 1, 0, 0.464949,-0.000594155) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947676,5.20425e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.496016,0.0516702) , 
0, 0.00156583, 1, 0, 0.651145,0.00418989) , 
6, 0.0299027, 1, 0, 0.487889,-4.74851e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664048,-0.0180091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526862,0.0242113) , 
3, 62.176, 1, 0, 0.61305,-0.00232145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663551,-0.0166917) , 
6, 0.0355374, 1, 0, 0.628342,-0.00484998) , 
6, 0.0330521, 1, 0, 0.504929,-0.000592574)    );
  // itree = 679
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659256,-0.00253949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831864,0.0154068) , 
6, 0.0236164, 1, 0, 0.686041,0.000177103) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802576,-0.00456843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822407,-0.0326353) , 
1, 1.34984, 1, 0, 0.806164,-0.00431396) , 
6, 0.0261007, 1, 0, 0.72913,-0.00143387) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00957874,-0.011729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0198749,0.00973934) , 
3, 62.7014, 1, 0, 0.0135835,-5.55975e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.860107,-0.00433212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542572,0.0256446) , 
0, 0.00186314, 1, 0, 0.685913,0.00424464) , 
7, 0.000196684, 1, 0, 0.135083,0.000721518) , 
2, 0.166641, 1, 0, 0.501996,-0.000609756)    );
  // itree = 680
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980971,-0.0225015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945539,0.00315803) , 
0, 0.00119673, 1, 0, 0.967502,-0.00168979) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655307,0.00110435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553992,-0.0113543) , 
0, 0.00134379, 1, 0, 0.603457,-0.00965401) , 
2, 0.19043, 1, 0, 0.927212,-0.00257122) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000653801,0.0165837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.47148e-05,-0.00662053) , 
4, 0.0121831, 1, 0, 0.00025638,5.89249e-05) , 
2, 0.142783, 1, 0, 0.000185524,-7.53137e-05) , 
0, 0.00315669, 1, 0, 0.496154,-0.00141065)    );
  // itree = 681
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627404,-0.0070997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407744,0.0191354) , 
3, 87.0217, 1, 0, 0.591684,-0.000457554) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910103,-0.0315262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418716,-0.00466428) , 
2, 0.0712585, 1, 0, 0.664093,-0.00863611) , 
7, 0.000117351, 1, 0, 0.605536,-0.00202221) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504946,-0.00812745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759152,0.0107831) , 
5, 0.0130999, 1, 0, 0.708456,0.00143604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000242903,0.039937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0221507) , 
6, 0.0208386, 1, 0, 0.000145451,-0.00120828) , 
4, 0.0191191, 1, 0, 0.431764,0.000403072) , 
4, 0.0121675, 1, 0, 0.499372,-0.000540522)    );
  // itree = 682
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936698,-0.0100511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813843,-0.0248232) , 
4, 0.00952768, 1, 0, 0.917377,-0.00747083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000618247,-0.00516659) , 
0, 0.00222311, 1, 0, 0.561653,-0.00469423) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653862,0.0271892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184631,-0.00515118) , 
4, 0.0173879, 1, 0, 0.512326,0.00238916) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.280417,-0.000618141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844271,-0.0130738) , 
7, 0.00019548, 1, 0, 0.443507,-0.00131229) , 
3, 25.2246, 1, 0, 0.463907,-0.000215075) , 
5, 0.010177, 1, 0, 0.491439,-0.0014767)    );
  // itree = 683
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838096,-0.00427216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791947,0.0110457) , 
3, 37.574, 1, 0, 0.815417,0.000725797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662336,0.0638622) , 
2, 0.0770787, 1, 0, 0.79997,0.0012344) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.167215,-0.00788174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167584,0.0041013) , 
3, 25.2235, 1, 0, 0.16748,-1.82792e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.581788,-0.0224461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466663,0.0252314) , 
4, 0.0174543, 1, 0, 0.534369,-0.00349247) , 
6, 0.0313097, 1, 0, 0.24226,-0.00072639) , 
2, 0.0952236, 1, 0, 0.502356,0.000188051)    );
  // itree = 684
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88363,0.00477869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845924,0.0268087) , 
3, 61.5548, 1, 0, 0.873294,0.00378343) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130946) , 
4, 0.0191402, 1, 0, 0,-0.000178439) , 
0, 0.00473329, 1, 0, 0.183035,0.000651936) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944397,-0.00147878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839422,-0.015041) , 
3, 95.648, 1, 0, 0.935173,-0.00140196) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631759,-0.00176107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640666,-0.0146684) , 
3, 37.0524, 1, 0, 0.637114,-0.00589884) , 
2, 0.0949622, 1, 0, 0.815883,-0.00320171) , 
7, 6.4789e-05, 1, 0, 0.502362,-0.00129257)    );
  // itree = 685
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862255,-0.00718384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86917,-0.0193621) , 
6, 0.020957, 1, 0, 0.865235,-0.003109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787671,0.0184722) , 
2, 0.0385393, 1, 0, 0.855326,-0.00214739) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869965,0.0286254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919561,0.000495551) , 
4, 0.0108317, 1, 0, 0.906784,0.00381437) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00073071,-0.0118607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372325,0.00579518) , 
6, 0.0226161, 1, 0, 0.171405,0.00024059) , 
0, 0.00157623, 1, 0, 0.341164,0.00106558) , 
2, 0.0476132, 1, 0, 0.504316,4.60573e-05)    );
  // itree = 686
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8359,0.0100532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.22713,-0.0218084) , 
5, 0.0132876, 1, 0, 0.667903,0.00104975) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0471873,-0.0119127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000301182,0.0263443) , 
0, 0.0126191, 1, 0, 0.0123191,-0.000970065) , 
2, 0.166641, 1, 0, 0.408448,0.000250383) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945625,0.0145944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861231,-0.0232522) , 
4, 0.0169964, 1, 0, 0.921866,-0.00117607) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710586,-0.0257017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760576,-0.00854184) , 
4, 0.0160604, 1, 0, 0.736491,-0.0116641) , 
2, 0.118394, 1, 0, 0.834597,-0.00611353) , 
7, 0.00019548, 1, 0, 0.502866,-0.0011596)    );
  // itree = 687
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96217,0.0182247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00779351,-0.0244319) , 
0, 0.00121199, 1, 0, 0.525443,-0.00191617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.349052,0.0074717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387112,-0.00853062) , 
6, 0.0260523, 1, 0, 0.356563,0.000290655) , 
4, 0.00871837, 1, 0, 0.403292,-0.000319963) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832317,0.0272695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809125,-0.042896) , 
7, 0.000210651, 1, 0, 0.818324,-0.0127348) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752587,-0.00715794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901024,0.00657507) , 
5, 0.0160598, 1, 0, 0.859288,-0.000173478) , 
7, 0.000235053, 1, 0, 0.845865,-0.00428932) , 
7, 0.00019548, 1, 0, 0.498447,-0.00117339)    );
  // itree = 688
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748639,0.0185381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0101505,-0.0162823) , 
2, 0.0475943, 1, 0, 0.230483,-0.000214092) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8154,-0.00555538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876408,-0.0198796) , 
1, 1.50754, 1, 0, 0.83852,-0.0056569) , 
7, 6.4789e-05, 1, 0, 0.557815,-0.00314419) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.539095,-0.0134965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526507,0.00357042) , 
3, 29.5677, 1, 0, 0.527599,0.000263296) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.357712,-0.0176132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115903,0.014111) , 
3, 144.742, 1, 0, 0.217354,-0.00231281) , 
3, 116.488, 1, 0, 0.479733,-0.000134156) , 
3, 25.2222, 1, 0, 0.503597,-0.00105409)    );
  // itree = 689
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862934,0.00794966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431643,0.0777931) , 
2, 0.126953, 1, 0, 0.830212,0.00261684) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842593,-0.0236151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512794,0.0106643) , 
4, 0.0150095, 1, 0, 0.568329,2.84127e-05) , 
4, 0.0139359, 1, 0, 0.728732,0.00161382) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839563,0.0108166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565096,-0.0113062) , 
0, 0.000744852, 1, 0, 0.68746,-0.00655746) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130961) , 
0, 0.0160178, 1, 0, 0,-0.000177153) , 
0, 0.0031564, 1, 0, 0.133445,-0.00141565) , 
2, 0.166641, 1, 0, 0.503725,0.000468739)    );
  // itree = 690
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872894,-0.0174203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752036,-0.013494) , 
2, 0.0362723, 1, 0, 0.821279,-0.00326769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464724,0.0187632) , 
3, 113.184, 1, 0, 0.796788,-0.00261886) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.229192,-0.0118804) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828146,0.00673311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00020809,-0.00234842) , 
0, 0.00315669, 1, 0, 0.241771,0.00102834) , 
3, 12.6032, 1, 0, 0.240055,0.000328064) , 
2, 0.0952265, 1, 0, 0.495885,-0.0010261)    );
  // itree = 691
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.599335,-0.0121088) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.457788,-0.0244111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.341963,0.00737832) , 
3, 37.6137, 1, 0, 0.393624,-0.00158184) , 
6, 0.0105598, 1, 0, 0.462781,-0.00308334) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731712,0.021488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45527,0.000344041) , 
4, 0.012595, 1, 0, 0.551455,0.00110726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634917,-0.00874264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391749,0.000132471) , 
4, 0.0125972, 1, 0, 0.464435,-0.000998619) , 
3, 37.5552, 1, 0, 0.503223,-5.99484e-05) , 
4, 0.00696129, 1, 0, 0.497354,-0.000498693)    );
  // itree = 692
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.234216,0.0343343) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874664,0.00194818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.146799,-0.0322065) , 
4, 0.00978694, 1, 0, 0.557995,-0.00290292) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.330963,0.00742317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854237,-0.00610345) , 
7, 0.000196749, 1, 0, 0.496497,-0.000298223) , 
5, 0.0102069, 1, 0, 0.513866,-0.00103387) , 
4, 0.00348979, 1, 0, 0.500025,-0.000752908)    );
  // itree = 693
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.229577,0.0408465) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495839,0.00362177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606102,-0.0335959) , 
4, 0.00573124, 1, 0, 0.538867,-0.0037014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.542174,0.00203545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142244,-0.0142196) , 
3, 138.091, 1, 0, 0.513906,0.00014961) , 
4, 0.00663164, 1, 0, 0.516271,-0.000215261) , 
4, 0.00348353, 1, 0, 0.50258,6.22474e-05)    );
  // itree = 694
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.440224,0.0289285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818882,-0.00380799) , 
6, 0.00872922, 1, 0, 0.783551,-0.00034209) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506511,-0.0176549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454671,0.0376065) , 
2, 0.14849, 1, 0, 0.492591,-0.00381836) , 
2, 0.103149, 1, 0, 0.720554,-0.00109475) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65915,0.0120215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131081) , 
0, 0.0031564, 1, 0, 0.126854,0.0014171) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0468776,0.0167786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426903,-0.0191777) , 
6, 0.0295724, 1, 0, 0.15805,-0.00136349) , 
3, 75.5897, 1, 0, 0.136988,0.000513825) , 
2, 0.166646, 1, 0, 0.498106,-0.000481584)    );
  // itree = 695
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810085,-0.0182134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938346,-0.00514968) , 
6, 0.0105363, 1, 0, 0.929144,-0.00267536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910183,-0.0197365) , 
5, 0.0177995, 1, 0, 0.928145,-0.0034567) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130973) , 
0, 0.0160087, 1, 0, 0,-0.000248222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000633057,0.0144471) , 
6, 0.0243553, 1, 0, 0.000186258,-8.33115e-05) , 
0, 0.0031564, 1, 0, 0.496432,-0.00188731)    );
  // itree = 696
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992759,0.00920671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67333,0.0227284) , 
0, 0.00115179, 1, 0, 0.873626,0.00275691) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975288,-0.0206124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483877,0.00124183) , 
0, 0.00157776, 1, 0, 0.642544,-0.00114756) , 
5, 0.0131013, 1, 0, 0.777577,0.00113401) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894467,-0.0138567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00117415,0.0224347) , 
0, 0.00313165, 1, 0, 0.407275,-0.00464447) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000735249,-0.00860785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559664,0.0191999) , 
7, 0.000195414, 1, 0, 0.0715626,0.0006339) , 
2, 0.227897, 1, 0, 0.20233,-0.00142214) , 
2, 0.119033, 1, 0, 0.49967,-0.000100891)    );
  // itree = 697
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.438075,-0.0112469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537697,0.00732394) , 
6, 0.00871208, 1, 0, 0.5205,-0.00039093) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.855887,-0.00955449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445798,-0.0208089) , 
5, 0.0115398, 1, 0, 0.695939,-0.0069729) , 
4, 0.00928042, 1, 0, 0.588837,-0.00295473) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992254,0.00992876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590897,0.0343026) , 
0, 0.00157091, 1, 0, 0.742865,0.00341906) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654235,-0.0162977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329854,-0.00180233) , 
4, 0.0133398, 1, 0, 0.356908,-0.000969035) , 
2, 0.0476152, 1, 0, 0.431558,-0.000120308) , 
4, 0.0121795, 1, 0, 0.494871,-0.00126131)    );
  // itree = 698
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964411,0.00291893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253558,-0.00467469) , 
0, 0.00157776, 1, 0, 0.592829,-0.000266438) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969595,0.0048443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626179,0.0223329) , 
0, 0.00155764, 1, 0, 0.75692,0.00398848) , 
6, 0.0330532, 1, 0, 0.612783,0.00025096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0298646,-0.0175002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000173514,0.0112519) , 
0, 0.0189401, 1, 0, 0.0139998,-0.0026482) , 
2, 0.309486, 1, 0, 0.501334,-0.000288649)    );
  // itree = 699
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935389,0.01962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834215,-0.00975968) , 
2, 0.0362491, 1, 0, 0.921168,0.000656761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831849,-0.0147254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00106469,0.00593026) , 
0, 0.00269851, 1, 0, 0.375871,-0.00670839) , 
2, 0.0475842, 1, 0, 0.629466,-0.00328317) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943392,-0.00490349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619029,0.0176984) , 
0, 0.00142003, 1, 0, 0.748406,0.00232924) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000174116,-0.0149668) , 
6, 0.0208708, 1, 0, 6.93489e-05,-0.000753073) , 
4, 0.018231, 1, 0, 0.374066,0.000787378) , 
4, 0.0139284, 1, 0, 0.501687,-0.00124664)    );
  // itree = 700
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.496213,-0.0248815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473493,-0.000915056) , 
4, 0.00697644, 1, 0, 0.477925,-0.000929181) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842859,-0.0234549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856218,-0.00423632) , 
3, 16.2134, 1, 0, 0.850174,-0.00772328) , 
7, 0.000207846, 1, 0, 0.552291,-0.00228648) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.417644,-0.00714064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261183,0.0187223) , 
3, 81.0783, 1, 0, 0.354861,0.000183304) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830693,0.0441672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819187,0.00893916) , 
3, 58.6365, 1, 0, 0.823365,0.00424862) , 
7, 0.000197345, 1, 0, 0.455319,0.001055) , 
3, 37.8338, 1, 0, 0.499154,-0.000455465)    );
  // itree = 701
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.302393,0.0362707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835021,-0.018924) , 
7, 9.29301e-05, 1, 0, 0.551848,-0.00462396) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543248,-0.016444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529947,-0.000839274) , 
4, 0.00874178, 1, 0, 0.532911,-0.000976035) , 
3, 9.59785, 1, 0, 0.535581,-0.00149043) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900938,0.0208004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013143) , 
0, 0.00314447, 1, 0, 0.273568,0.00224191) , 
3, 100.758, 1, 0, 0.495405,-0.00091812)    );
  // itree = 702
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818175,-0.00914609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550652,0.025811) , 
2, 0.051008, 1, 0, 0.782191,-0.000138521) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829345,-0.00671068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859731,-0.028884) , 
1, 1.51593, 1, 0, 0.837169,-0.00467035) , 
6, 0.0209488, 1, 0, 0.808529,-0.00230957) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.319,0.0309422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254685,-0.00375212) , 
3, 37.8282, 1, 0, 0.281719,0.00136271) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473391,-0.0127679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0925049,0.00849319) , 
2, 0.234692, 1, 0, 0.291316,-0.000873821) , 
4, 0.0139108, 1, 0, 0.287882,-7.3443e-05) , 
2, 0.0714177, 1, 0, 0.496997,-0.000971569)    );
  // itree = 703
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448079,-0.000396279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952042,0.0121376) , 
7, 6.55807e-05, 1, 0, 0.689209,0.00139591) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.014532,-0.0145818) , 
7, -0.000170125, 1, 0, 0.0055173,-0.00133435) , 
2, 0.166639, 1, 0, 0.425864,0.000344265) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650732,0.00806277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626997,-0.00835397) , 
6, 0.0286705, 1, 0, 0.631519,-0.00203664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650306,-0.0230858) , 
1, 1.38584, 1, 0, 0.632977,-0.00275989) , 
6, 0.0260948, 1, 0, 0.499592,-0.000760739)    );
  // itree = 704
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96984,-0.00981487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963405,0.0192926) , 
0, 0.000465442, 1, 0, 0.966932,0.00026132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00653651,-0.0159948) , 
0, 0.00122388, 1, 0, 0.525191,-0.00206941) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950268,0.00919327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446635,0.0367813) , 
2, 0.0474002, 1, 0, 0.695568,0.00483212) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.528637,0.00620924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441424,-0.00631114) , 
3, 37.8338, 1, 0, 0.479745,-0.000156488) , 
4, 0.0100424, 1, 0, 0.496481,0.000230351) , 
4, 0.00871599, 1, 0, 0.502747,-0.000271552)    );
  // itree = 705
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8461,-0.0097305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688486,0.0208731) , 
2, 0.0550188, 1, 0, 0.819838,-0.00103306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611982,-0.0181272) , 
2, 0.0770787, 1, 0, 0.797748,-0.00148502) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0713444,-0.00640773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583367,0.0150092) , 
6, 0.0243704, 1, 0, 0.329738,0.00136833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00100996,-0.0174834) , 
2, 0.345767, 1, 0, 0.236044,0.00028825) , 
2, 0.0952221, 1, 0, 0.496575,-0.000534232)    );
  // itree = 706
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970809,0.0698436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429111,-0.0183687) , 
2, 0.0101989, 1, 0, 0.63111,-0.00298237) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737047,-0.00348641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66356,0.00910085) , 
3, 25.1518, 1, 0, 0.68756,0.000897705) , 
5, 0.00672565, 1, 0, 0.679954,0.000374932) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576726,-0.0131652) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000331688,0.0286688) , 
2, 0.37752, 1, 0, 0.00013063,-2.18844e-05) , 
0, 0.0031564, 1, 0, 0.0886301,-0.00189684) , 
2, 0.214201, 1, 0, 0.498143,-0.000323556)    );
  // itree = 707
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.211743,0.0050217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461979,-0.0146253) , 
6, 0.012207, 1, 0, 0.322412,-0.000738435) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777389,0.0455265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428401,-0.00053483) , 
4, 0.0104432, 1, 0, 0.592147,0.00292047) , 
6, 0.0183088, 1, 0, 0.392731,0.000215431) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.604403,0.0175316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65093,-0.00410708) , 
6, 0.034428, 1, 0, 0.623433,0.0014383) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932127,-0.0140257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00105969,0.0242076) , 
0, 0.00315455, 1, 0, 0.61487,-0.00411671) , 
1, 1.21142, 1, 0, 0.61831,-0.00188493) , 
6, 0.0226171, 1, 0, 0.499847,-0.000781919)    );
  // itree = 708
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761497,-0.000643563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653938,-0.0111735) , 
3, 37.698, 1, 0, 0.704082,-0.00170793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282961,-0.0175897) , 
2, 0.183629, 1, 0, 0.676527,-0.00210691) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.563937,0.0111028) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00015804,0.0121961) , 
4, 0.0226032, 1, 0, 6.30238e-05,-8.98301e-05) , 
0, 0.00315669, 1, 0, 0.0815252,0.000887389) , 
2, 0.214253, 1, 0, 0.488629,-0.00116133)    );
  // itree = 709
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894777,-0.00493176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801502,0.0456858) , 
2, 0.0135945, 1, 0, 0.846282,0.0023469) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825803,-0.00636167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00487811,0.00447936) , 
0, 0.00157265, 1, 0, 0.154608,-0.000873328) , 
2, 0.04759, 1, 0, 0.406696,0.000300321) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913379,0.0258609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813144,-0.037017) , 
2, 0.0124581, 1, 0, 0.864594,-0.00707567) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937019,-0.0137961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431843,0.000809291) , 
0, 0.00157095, 1, 0, 0.59189,-0.0012697) , 
2, 0.0238175, 1, 0, 0.628337,-0.00204567) , 
6, 0.0243563, 1, 0, 0.500437,-0.000691893)    );
  // itree = 710
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.241638,-0.0190817) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591363,-0.016725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425822,0.00381137) , 
5, 0.00607263, 1, 0, 0.441311,-9.88971e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6741,-0.0131371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597407,0.00957329) , 
3, 62.5826, 1, 0, 0.648633,-0.0027813) , 
6, 0.0260948, 1, 0, 0.517582,-0.00108571) , 
5, 0.00333714, 1, 0, 0.506293,-0.00135657)    );
  // itree = 711
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.400487,0.00289605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250975,-0.0116966) , 
3, 63.0497, 1, 0, 0.34849,-0.000545592) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954403,0.00253409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788483,-0.0124965) , 
2, 0.071064, 1, 0, 0.864755,-0.00409906) , 
7, 0.00014172, 1, 0, 0.484936,-0.00148475) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730029,0.02406) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743398,0.0193738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472187,-0.015128) , 
5, 0.0174207, 1, 0, 0.616147,0.000641788) , 
1, 1.07263, 1, 0, 0.649711,0.00211905) , 
6, 0.0330523, 1, 0, 0.504654,-0.0010535)    );
  // itree = 712
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982048,-0.013733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.496626,0.0125666) , 
0, 0.00157504, 1, 0, 0.802404,-0.00106656) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.378146,-0.0333335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0496088,-9.1526e-05) , 
2, 0.227626, 1, 0, 0.153038,-0.00674735) , 
2, 0.142683, 1, 0, 0.564647,-0.00314651) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.531142,-0.00158402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676653,-0.0107335) , 
4, 0.00984212, 1, 0, 0.577988,-0.00178075) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939118,-0.0125017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261901,0.0137971) , 
0, 0.00157834, 1, 0, 0.410304,0.000658334) , 
4, 0.0121616, 1, 0, 0.474335,-0.000273041) , 
3, 25.2225, 1, 0, 0.501809,-0.00114717)    );
  // itree = 713
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997991,0.0632731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884567,-0.00158272) , 
2, 0.165548, 1, 0, 0.984508,0.00127534) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.890387,-0.00593866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794809,-0.0134517) , 
3, 95.2458, 1, 0, 0.879714,-0.00603177) , 
0, 0.000299004, 1, 0, 0.930052,-0.00252183) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000127967,-0.00984913) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00136014,0.0246701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.82384e-05,-0.00574254) , 
5, 0.0168104, 1, 0, 0.000588704,0.000288554) , 
2, 0.142905, 1, 0, 0.000452836,9.71604e-05) , 
0, 0.0031564, 1, 0, 0.503294,-0.00131951)    );
  // itree = 714
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956123,-0.00818087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903411,-0.0460819) , 
4, 0.00892382, 1, 0, 0.946366,-0.00587125) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0617165,-0.0107163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558151,0.0315425) , 
5, 0.00881277, 1, 0, 0.222859,-0.000242139) , 
0, 0.00111688, 1, 0, 0.57708,-0.00299808) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949684,-0.0084605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620153,0.0149406) , 
0, 0.00122948, 1, 0, 0.753011,0.00222573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0251105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.365385,0.0217455) , 
4, 0.0156392, 1, 0, 0.245023,-0.000713558) , 
5, 0.016128, 1, 0, 0.476007,0.000622952) , 
5, 0.01028, 1, 0, 0.505231,-0.000424033)    );
  // itree = 715
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616923,-0.0292756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.200858,0.00503915) , 
6, 0.00885723, 1, 0, 0.363932,-0.00585349) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655665,0.0115703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604846,0.0773112) , 
4, 0.00753702, 1, 0, 0.642467,0.00270769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706176,-0.00749391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426338,0.000203271) , 
4, 0.0122885, 1, 0, 0.498965,-0.000635755) , 
4, 0.00824877, 1, 0, 0.515435,-0.000252021) , 
4, 0.00526881, 1, 0, 0.502571,-0.000727637)    );
  // itree = 716
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961708,-0.00856613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706645,-0.0139774) , 
0, 0.00150173, 1, 0, 0.923897,-0.00413339) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00125822,0.0152149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.94769e-05,-0.00473974) , 
0, 0.0160097, 1, 0, 0.000400868,0.000148459) , 
0, 0.00315669, 1, 0, 0.426514,-0.00182724) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958177,0.0206792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419388,-0.00504717) , 
5, 0.0164506, 1, 0, 0.746786,0.00247477) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619101,-0.0153014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291152,0.00857091) , 
2, 0.09556, 1, 0, 0.38389,-0.00116742) , 
4, 0.0173927, 1, 0, 0.637843,0.00138137) , 
6, 0.0260979, 1, 0, 0.501858,-0.000683294)    );
  // itree = 717
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.209537,-0.0396148) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530487,0.0118213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377449,-0.0033367) , 
4, 0.00870096, 1, 0, 0.418283,6.18349e-05) , 
5, 0.00343617, 1, 0, 0.406349,-0.00023369) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844968,-0.0115488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863827,0.0103852) , 
3, 20.3215, 1, 0, 0.856523,-0.00121734) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844425,-0.0343812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764366,-0.00522449) , 
3, 98.1278, 1, 0, 0.813857,-0.00906909) , 
3, 60.9663, 1, 0, 0.84225,-0.00384395) , 
7, 0.00019548, 1, 0, 0.502434,-0.00102949)    );
  // itree = 718
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586046,-0.0410485) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944359,0.00426333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766436,-0.0199389) , 
5, 0.0132435, 1, 0, 0.889477,-0.00134967) , 
6, 0.00885057, 1, 0, 0.85777,-0.00269145) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771463,0.0160418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000143853,-0.00845169) , 
0, 0.00390723, 1, 0, 0.296108,0.0032155) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625607,-0.0299952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.331461,0.00496222) , 
4, 0.013332, 1, 0, 0.357435,8.3082e-05) , 
4, 0.0121726, 1, 0, 0.339874,0.000980053) , 
2, 0.0476132, 1, 0, 0.502985,-0.000176279)    );
  // itree = 719
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701988,-0.00514672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823342,-0.0160076) , 
6, 0.0238432, 1, 0, 0.743029,-0.00241872) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824987,-0.00238044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757166,0.0249841) , 
5, 0.0168098, 1, 0, 0.785376,0.002252) , 
6, 0.0313157, 1, 0, 0.749825,-0.00166913) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511982,0.0216768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.319821,0.00276262) , 
4, 0.0156435, 1, 0, 0.407617,0.00465204) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650909,0.0132283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0566372,-0.00662955) , 
0, 0.00157834, 1, 0, 0.105041,-0.000102596) , 
2, 0.19394, 1, 0, 0.168013,0.000886946) , 
2, 0.142833, 1, 0, 0.503626,-0.000587499)    );
  // itree = 720
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830813,0.025776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560474,-0.0115539) , 
2, 0.103149, 1, 0, 0.781265,0.00144227) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843501,-0.00322068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.574435,-0.0125808) , 
2, 0.0476074, 1, 0, 0.704785,-0.00223189) , 
3, 25.1314, 1, 0, 0.730157,-0.001013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686446,0.0164243) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0400426,0.0100051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298316,-0.00928294) , 
6, 0.0330499, 1, 0, 0.0689296,9.14233e-05) , 
0, 0.00157739, 1, 0, 0.129422,0.000926928) , 
2, 0.166641, 1, 0, 0.496976,-0.000260001)    );
  // itree = 721
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227839,0.0163524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.511652,-0.00657618) , 
6, 0.0128762, 1, 0, 0.383462,-6.12369e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75573,0.0156504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366082,0.000302) , 
4, 0.0139278, 1, 0, 0.608269,0.00212522) , 
6, 0.0225304, 1, 0, 0.452949,0.000614588) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810923,0.0078931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445704,-0.0227889) , 
2, 0.118636, 1, 0, 0.61186,-0.00512252) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689375,0.0123252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576667,-0.00813672) , 
3, 73.7865, 1, 0, 0.655824,0.00129475) , 
6, 0.0342134, 1, 0, 0.626826,-0.00293794) , 
6, 0.0295734, 1, 0, 0.495704,-0.000258969)    );
  // itree = 722
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549907,-0.00809108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506164,0.00525053) , 
3, 24.0253, 1, 0, 0.520241,5.1276e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156207,-0.0131332) , 
3, 126.115, 1, 0, 0.486647,-0.000393862) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6368,-0.0205522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546,0.0283074) , 
3, 62.5731, 1, 0, 0.605049,-0.00193019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648097,-0.0113617) , 
6, 0.0355401, 1, 0, 0.61782,-0.00437707) , 
6, 0.0330531, 1, 0, 0.503199,-0.000896482)    );
  // itree = 723
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974861,0.0523981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952081,-0.0111501) , 
4, 0.010863, 1, 0, 0.963279,0.000897428) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953131,0.00338409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960783,0.0439072) , 
6, 0.0209281, 1, 0, 0.957297,0.00852187) , 
0, 0.00120164, 1, 0, 0.962358,0.00207089) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535466,-0.0408261) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.102776,-0.0154766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224772,0.00727923) , 
5, 0.0133374, 1, 0, 0.189409,-0.000300636) , 
2, 0.023864, 1, 0, 0.214927,-0.000891337) , 
0, 0.00157776, 1, 0, 0.501883,0.000245927)    );
  // itree = 724
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881905,-0.0215169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958181,-0.00431381) , 
5, 0.00556105, 1, 0, 0.952013,-0.00260527) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701446,-0.0170627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766189,-0.00818494) , 
3, 37.3056, 1, 0, 0.736251,-0.0142449) , 
0, 0.00209428, 1, 0, 0.92961,-0.00381385) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000116218,0.00223556) , 
2, 0.261865, 1, 0, 5.43e-05,-0.000176594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00101678,0.019546) , 
6, 0.0243553, 1, 0, 0.000342411,4.1283e-05) , 
0, 0.00315479, 1, 0, 0.503435,-0.00204583)    );
  // itree = 725
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66984,-0.0184649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890133,0.00109206) , 
6, 0.012188, 1, 0, 0.855505,-0.00114047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666796,-0.0146727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000640595,0.0084082) , 
0, 0.00277734, 1, 0, 0.179686,-0.00570927) , 
2, 0.14284, 1, 0, 0.649266,-0.00253473) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767821,0.0218209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0159269) , 
4, 0.0186436, 1, 0, 0.363385,0.000951035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0216448,-0.0158491) , 
2, 0.309518, 1, 0, 0.271069,0.000132349) , 
4, 0.0156623, 1, 0, 0.498217,-0.00146951)    );
  // itree = 726
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780321,-0.00543999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453207,-0.0169297) , 
2, 0.115618, 1, 0, 0.751047,-0.00167463) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775237,-0.00492196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768196,-0.0839087) , 
1, 1.09575, 1, 0, 0.772273,-0.00694271) , 
6, 0.0330523, 1, 0, 0.753284,-0.00222996) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0267101,-0.0101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0371111,0.0162002) , 
3, 63.0549, 1, 0, 0.0306747,-0.000179565) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685612,-0.0012791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784888,0.0289992) , 
1, 1.1952, 1, 0, 0.719395,0.00419465) , 
7, 0.000195415, 1, 0, 0.170066,0.000705741) , 
2, 0.142833, 1, 0, 0.506161,-0.000986035)    );
  // itree = 727
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952816,0.0283437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738751,0.0240043) , 
2, 0.0271577, 1, 0, 0.89324,0.00341863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0115701,-0.00615837) , 
2, 0.0713414, 1, 0, 0.520933,0.00155797) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.46242,0.00320475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69983,-0.00577719) , 
6, 0.0295734, 1, 0, 0.533785,-0.000217973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186782,-0.0206918) , 
3, 126.022, 1, 0, 0.501755,-0.000721674) , 
4, 0.00869764, 1, 0, 0.505945,-0.00022362)    );
  // itree = 728
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980505,-0.00799497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876737,-0.0175004) , 
0, 0.000386436, 1, 0, 0.95332,-0.00334204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941461,0.0170256) , 
0, 0.00135264, 1, 0, 0.952313,-0.00226233) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894823,0.0125081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131269) , 
0, 0.00458343, 1, 0, 0.389931,0.0021615) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636515,-0.00961516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000118925,-0.00339717) , 
0, 0.00311621, 1, 0, 0.0556324,-0.00128318) , 
2, 0.190453, 1, 0, 0.217213,0.000381772) , 
0, 0.0015782, 1, 0, 0.503068,-0.000646428)    );
  // itree = 729
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621407,0.00305825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538436,-0.0101852) , 
3, 36.3501, 1, 0, 0.577073,-0.00161097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675332,0.0146381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0818116,-0.00776784) , 
2, 0.166382, 1, 0, 0.428946,0.000918252) , 
5, 0.00951038, 1, 0, 0.472034,0.000182534) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632398,-0.0205053) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611772,-0.024143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644909,0.000726297) , 
6, 0.0328117, 1, 0, 0.635698,-0.00201389) , 
3, 12.5169, 1, 0, 0.635187,-0.00403169) , 
6, 0.0313128, 1, 0, 0.501084,-0.000567818)    );
  // itree = 730
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986636,-0.0160028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992785,0.0332948) , 
5, 0.0131113, 1, 0, 0.989297,0.000252026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875462,-0.00598243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842414,-0.0132059) , 
3, 74.6112, 1, 0, 0.868572,-0.00621496) , 
0, 0.000300346, 1, 0, 0.925706,-0.0031544) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000284541,0.00886445) , 
6, 0.00746638, 1, 0, 0.000200541,-1.8455e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131912) , 
6, 0.0260917, 1, 0, 0.000149864,-0.000100641) , 
0, 0.00315669, 1, 0, 0.500829,-0.00175257)    );
  // itree = 731
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913809,0.00627119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9001,0.0351609) , 
3, 32.9649, 1, 0, 0.906463,0.00167996) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.437299,-0.0069066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382843,0.00547045) , 
3, 72.6087, 1, 0, 0.424749,-0.00107211) , 
2, 0.0238055, 1, 0, 0.52474,-0.000500857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143427,-0.0191872) , 
3, 138.625, 1, 0, 0.500128,-0.00105129)    );
  // itree = 732
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95186,-0.0136239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970151,0.0203149) , 
0, 0.0011273, 1, 0, 0.956529,-0.000723292) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919308,-0.0264239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953048,0.000890828) , 
5, 0.0160167, 1, 0, 0.932,-0.00757125) , 
7, 0.000158188, 1, 0, 0.948272,-0.00302858) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128631,-0.00483661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522566,-0.0252012) , 
4, 0.0132527, 1, 0, 0.177705,-0.00314443) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00395155,-0.0137002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867119,0.0135856) , 
7, 0.00019548, 1, 0, 0.232188,0.00114459) , 
4, 0.0139173, 1, 0, 0.213366,-0.000337137) , 
0, 0.00157834, 1, 0, 0.498535,-0.00138151)    );
  // itree = 733
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976836,0.00152578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939846,-0.0246025) , 
4, 0.0167733, 1, 0, 0.973073,-0.00095921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652885,-0.0142334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804971,0.0237443) , 
4, 0.0167002, 1, 0, 0.70676,-0.0100755) , 
2, 0.166626, 1, 0, 0.936451,-0.00221284) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 8.1639e-05,-0.00980324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000322113,0.0490172) , 
4, 0.0243401, 1, 0, 0.000162531,-6.80611e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00125792,0.0224442) , 
6, 0.0243539, 1, 0, 0.000492281,0.000168063) , 
0, 0.00315669, 1, 0, 0.509206,-0.00112601)    );
  // itree = 734
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.301789,-0.00118671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.326465,0.0324246) , 
3, 5.40826, 1, 0, 0.315573,0.000395869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950771,0.0131407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695221,0.0154677) , 
2, 0.0948656, 1, 0, 0.855431,0.00371077) , 
7, 9.45736e-05, 1, 0, 0.56435,0.00192344) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645685,-0.00089526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777553,-0.00941475) , 
6, 0.0260981, 1, 0, 0.694447,-0.00131391) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671734,0.00974038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0580979,1.52291e-05) , 
0, 0.00157834, 1, 0, 0.112767,0.000546161) , 
2, 0.190453, 1, 0, 0.488796,-0.000656286) , 
3, 12.6157, 1, 0, 0.500288,-0.0002639)    );
  // itree = 735
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.409816,0.000230681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317627,0.0212022) , 
3, 62.6399, 1, 0, 0.37828,0.00197387) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966659,-0.0163811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337203,-0.0213713) , 
0, 0.00130241, 1, 0, 0.68972,-0.00708753) , 
4, 0.00580691, 1, 0, 0.607428,-0.00469322) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704467,-0.00928706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.274205,0.00244338) , 
2, 0.119006, 1, 0, 0.462404,-0.000662422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.23552,0.033262) , 
3, 113.502, 1, 0, 0.433605,-0.000110901) , 
4, 0.0121831, 1, 0, 0.50222,-0.00191973)    );
  // itree = 736
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882502,-0.0311458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952321,-0.00792752) , 
5, 0.00569755, 1, 0, 0.927684,-0.00736008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00164659,-0.000738279) , 
0, 0.00242398, 1, 0, 0.517864,-0.00413924) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626136,0.00484872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00691663,-0.0176067) , 
2, 0.214203, 1, 0, 0.413226,7.8104e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559175,-0.0246723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728581,-0.00260398) , 
4, 0.0153256, 1, 0, 0.691349,-0.00282931) , 
6, 0.0295739, 1, 0, 0.490148,-0.000726019) , 
4, 0.00870132, 1, 0, 0.496082,-0.00145677)    );
  // itree = 737
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552173,-0.00696107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509467,0.0034531) , 
3, 45.2812, 1, 0, 0.535038,-0.000643232) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.546504,0.0341211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314371,0.0318369) , 
4, 0.0139939, 1, 0, 0.410716,0.00469777) , 
3, 105.66, 1, 0, 0.526414,-0.000272724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141782,-0.013592) , 
3, 138.705, 1, 0, 0.500076,-0.000600234)    );
  // itree = 738
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.320562,0.0763784) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86359,-0.0160007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499173,-0.00501551) , 
5, 0.00897483, 1, 0, 0.623834,-0.00311339) , 
6, 0.00697003, 1, 0, 0.596502,-0.00221123) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508057,-0.0088414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797699,0.0153248) , 
5, 0.0129023, 1, 0, 0.748884,0.00233525) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000149049,0.00845863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.266638,-0.0124289) , 
7, 6.01816e-05, 1, 0, 0.0384753,-0.000670704) , 
4, 0.0179778, 1, 0, 0.431946,0.000994191) , 
4, 0.0121799, 1, 0, 0.497029,-0.000273563)    );
  // itree = 739
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.483405,-0.00251011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840522,-0.0113866) , 
7, 0.000199185, 1, 0, 0.561095,-0.00188212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550071,-0.0311663) , 
3, 22.7911, 1, 0, 0.560057,-0.00280784) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522348,0.00289852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80282,0.02588) , 
7, 0.000120432, 1, 0, 0.606821,0.00235156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704957,-0.0108703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241808,0.00455136) , 
4, 0.0160882, 1, 0, 0.357339,-0.000798653) , 
4, 0.0139337, 1, 0, 0.479707,0.000746493) , 
3, 25.1944, 1, 0, 0.504341,-0.000343244)    );
  // itree = 740
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560233,-0.00276707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48713,-0.0239153) , 
3, 12.3512, 1, 0, 0.548591,-0.00245138) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.449188,-0.000795976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85849,0.0131146) , 
7, 0.00019548, 1, 0, 0.541764,0.000604342) , 
3, 14.4142, 1, 0, 0.543415,-0.00013442) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925025,-0.00413342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834791,-0.0181365) , 
0, 0.0013353, 1, 0, 0.890633,-0.0105897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000345377,-0.00200297) , 
0, 0.00314447, 1, 0, 0.3644,-0.00436424) , 
3, 75.6692, 1, 0, 0.498626,-0.00119271)    );
  // itree = 741
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611212,0.00993062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.178279,0.0138147) , 
6, 0.00880283, 1, 0, 0.330901,0.00211904) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990434,0.000354373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878557,-0.00749092) , 
2, 0.0476109, 1, 0, 0.932061,-0.00230495) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000726598,0.0192864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0134181) , 
2, 0.166702, 1, 0, 0.000255973,1.26711e-05) , 
0, 0.0031564, 1, 0, 0.515721,-0.00126941) , 
4, 0.00521721, 1, 0, 0.498681,-0.000957009)    );
  // itree = 742
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574474,-0.0126931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742728,0.00848114) , 
5, 0.0105647, 1, 0, 0.624485,-0.0014363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76309,-0.028826) , 
5, 0.0130399, 1, 0, 0.635911,-0.00223291) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.795547,0.0391177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747701,0.00386742) , 
5, 0.0144795, 1, 0, 0.755594,0.00217408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0160531) , 
6, 0.0226202, 1, 0, 0,-0.00074222) , 
5, 0.0192137, 1, 0, 0.378301,0.000717875) , 
5, 0.0136907, 1, 0, 0.501001,-0.00068758)    );
  // itree = 743
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868343,-0.0211694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95795,-0.0025515) , 
5, 0.00578229, 1, 0, 0.946572,-0.00195318) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.367119,0.0131168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0410925,-0.011572) , 
2, 0.166641, 1, 0, 0.179786,0.000375195) , 
0, 0.00157834, 1, 0, 0.484287,-0.000549433) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942518,0.0122417) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52783,-0.00791391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.412101,-0.042577) , 
1, 1.09589, 1, 0, 0.47846,-0.0100677) , 
0, 0.00155717, 1, 0, 0.632277,-0.00627818) , 
6, 0.0330522, 1, 0, 0.502077,-0.00123808)    );
  // itree = 744
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948061,-0.0115152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933664,0.00509286) , 
0, 0.00130137, 1, 0, 0.943736,-0.00156695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846947,-0.00340989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656878,-0.0186533) , 
2, 0.120085, 1, 0, 0.750212,-0.0115969) , 
0, 0.00210242, 1, 0, 0.92518,-0.00252868) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000838496,0.0300457) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000178659,-0.0110753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130976) , 
0, 0.0145771, 1, 0, 5.10432e-05,-0.000292805) , 
3, 25.2119, 1, 0, 0.000261712,-7.08448e-05) , 
0, 0.0031564, 1, 0, 0.499145,-0.00139655)    );
  // itree = 745
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976927,-0.00131974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907731,-0.0067981) , 
0, 0.000498628, 1, 0, 0.945341,-0.00215201) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572859,-0.0167242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912128,0.0097796) , 
4, 0.0171964, 1, 0, 0.754322,-0.0148828) , 
0, 0.00209428, 1, 0, 0.926293,-0.00342147) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132335) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0014042,0.0402445) , 
6, 0.024336, 1, 0, 0.000420008,0.000186587) , 
2, 0.142899, 1, 0, 0.000299163,-3.07662e-05) , 
0, 0.00315669, 1, 0, 0.498651,-0.00185558)    );
  // itree = 746
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931462,-0.00628458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000352065,0.00297309) , 
0, 0.0031564, 1, 0, 0.50698,-0.00113909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142106,0.0121125) , 
3, 126.115, 1, 0, 0.474432,-0.000792265) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845702,0.0186509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582301,-0.0104045) , 
4, 0.0176862, 1, 0, 0.774174,0.00122737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.377315,0.0194434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.47474,0.0268216) , 
6, 0.0343057, 1, 0, 0.42266,0.0044319) , 
2, 0.190514, 1, 0, 0.649688,0.00236223) , 
6, 0.0313127, 1, 0, 0.504629,-0.000248753)    );
  // itree = 747
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949144,-0.00745955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603373,-0.0209085) , 
0, 0.0017951, 1, 0, 0.925082,-0.00424751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000130235,-0.00753132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000761749,0.022329) , 
6, 0.0197154, 1, 0, 0.000319333,8.32508e-06) , 
0, 0.0031564, 1, 0, 0.462342,-0.00211794) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82656,0.0110507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335193,0.0378167) , 
2, 0.190171, 1, 0, 0.669988,0.00425731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.446911,-0.00901496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642783,0.00822026) , 
4, 0.0156517, 1, 0, 0.571475,-2.97626e-05) , 
3, 50.4087, 1, 0, 0.62479,0.00229041) , 
6, 0.0295739, 1, 0, 0.501711,-0.00104958)    );
  // itree = 748
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922349,0.0351938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447734,-0.010232) , 
2, 0.0237995, 1, 0, 0.555813,-0.00194739) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520254,0.0319843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519745,-0.0141322) , 
3, 52.9712, 1, 0, 0.520033,0.000648744) , 
3, 41.9776, 1, 0, 0.546303,-0.00125734) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888688,0.0474706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936603,0.00699446) , 
4, 0.00834391, 1, 0, 0.927658,0.00439072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000370432,-0.00208526) , 
0, 0.00314692, 1, 0, 0.412166,0.00191404) , 
3, 62.9767, 1, 0, 0.501205,-0.0001911)    );
  // itree = 749
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 1,0.0871429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99255,0.0452484) , 
2, 0.155901, 1, 0, 0.999062,0.00131316) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975892,-0.00426984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.511234,-0.00964944) , 
2, 0.0714111, 1, 0, 0.863684,-0.00613559) , 
0, 7.51277e-05, 1, 0, 0.950217,-0.00137436) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83904,0.010584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953716,-0.00136295) , 
5, 0.0156229, 1, 0, 0.884089,0.00297355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.01319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000249171,-0.000582554) , 
4, 0.0104754, 1, 0, 0.00018635,-0.000142744) , 
0, 0.0030807, 1, 0, 0.21779,0.000624442) , 
0, 0.00157776, 1, 0, 0.498632,-0.000141982)    );
  // itree = 750
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243827,-0.0173967) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979733,0.0359806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0377665,-0.0168623) , 
0, 0.00125736, 1, 0, 0.625428,0.00179851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71383,-0.00915215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382477,0.00334151) , 
4, 0.0136271, 1, 0, 0.479581,-0.000616409) , 
4, 0.00981005, 1, 0, 0.512787,-6.65951e-05) , 
4, 0.00352057, 1, 0, 0.500065,-0.000377637)    );
  // itree = 751
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550076,-0.00851729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794266,0.00830228) , 
6, 0.0161559, 1, 0, 0.690839,0.000263113) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570003,-0.0384031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824386,-0.0117494) , 
5, 0.0134515, 1, 0, 0.790668,-0.00374511) , 
6, 0.0260955, 1, 0, 0.726771,-0.00117962) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.557857,0.0187971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833212,0.00410333) , 
6, 0.0313984, 1, 0, 0.69784,0.0083587) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000163265,0.0104645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137621) , 
7, -8.18298e-05, 1, 0, 0.000112444,-0.000124947) , 
0, 0.00315247, 1, 0, 0.136108,0.00152862) , 
2, 0.166639, 1, 0, 0.500562,-0.000142431)    );
  // itree = 752
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845363,0.0138823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87841,-0.017761) , 
3, 46.4737, 1, 0, 0.850708,0.000468389) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822919,-0.0662711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712356,-0.00774168) , 
3, 70.3053, 1, 0, 0.737742,-0.0104216) , 
3, 61.0001, 1, 0, 0.818732,-0.00261408) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00103187,-0.0128785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.99934e-05,-0.0072826) , 
2, 0.19393, 1, 0, 0.000348228,-0.000388395) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611212,0.0223935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.697499,0.00695618) , 
6, 0.0229056, 1, 0, 0.686403,0.00340002) , 
7, 5.94155e-05, 1, 0, 0.289066,0.00120591) , 
2, 0.0714177, 1, 0, 0.500566,-0.00031944)    );
  // itree = 753
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.332875,-0.0156219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103489,0.0390018) , 
3, 100.436, 1, 0, 0.289827,-0.000873867) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763075,0.0118931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268494,-0.011739) , 
4, 0.0121749, 1, 0, 0.560868,0.00105397) , 
6, 0.0161549, 1, 0, 0.425958,9.43942e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705419,0.0138716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675235,-0.00767825) , 
6, 0.0335507, 1, 0, 0.697128,0.0012588) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678412,-0.0316436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571867,-0.00743455) , 
3, 47.7134, 1, 0, 0.60604,-0.00554757) , 
3, 25.0493, 1, 0, 0.632645,-0.00355961) , 
6, 0.0260948, 1, 0, 0.499132,-0.00119925)    );
  // itree = 754
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.512438,0.00431449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804025,0.0220293) , 
7, 7.588e-05, 1, 0, 0.63355,0.00188872) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.725509,-0.00497073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.207685,0.0103883) , 
4, 0.0168316, 1, 0, 0.453661,-0.000321493) , 
4, 0.0122053, 1, 0, 0.526024,0.000567595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198678,-0.00655537) , 
3, 125.949, 1, 0, 0.499006,0.000335994)    );
  // itree = 755
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954881,-0.00192509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850824,-0.0156391) , 
4, 0.0166828, 1, 0, 0.946496,-0.00139205) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567173,-0.0189315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907456,0.037179) , 
4, 0.01729, 1, 0, 0.73327,-0.0140793) , 
0, 0.00210242, 1, 0, 0.925439,-0.00264497) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00014524,-0.00921493) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 6.96697e-05,-0.00414624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0010366,0.0214229) , 
6, 0.0243283, 1, 0, 0.00034754,0.000135547) , 
4, 0.0104402, 1, 0, 0.000296003,1.80058e-05) , 
0, 0.0031564, 1, 0, 0.496398,-0.00141)    );
  // itree = 756
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231811,-0.0720322) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.198221,0.000980532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876997,0.0110798) , 
7, 6.15829e-05, 1, 0, 0.43979,0.00100101) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642086,-0.0114054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646773,0.00263276) , 
6, 0.0310663, 1, 0, 0.644536,-0.0013962) , 
6, 0.0260948, 1, 0, 0.514309,0.000128526) , 
5, 0.00341826, 1, 0, 0.50138,-0.000132985)    );
  // itree = 757
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884445,0.0311642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.480494,-0.00135963) , 
5, 0.0161172, 1, 0, 0.79345,0.00254664) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.162488,0.00400049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130415,-0.0153085) , 
3, 12.0123, 1, 0, 0.145353,-0.00142328) , 
2, 0.142698, 1, 0, 0.557354,0.00110044) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950445,-0.0193463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934788,0.00117184) , 
3, 69.6588, 1, 0, 0.945133,-0.00400484) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.436819,-0.00708258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160991,0.00240118) , 
2, 0.0476581, 1, 0, 0.199508,-2.27482e-05) , 
0, 0.00157739, 1, 0, 0.475751,-0.00149806) , 
3, 25.2222, 1, 0, 0.500713,-0.000703188)    );
  // itree = 758
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899698,0.0019872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0234618,-0.0125362) , 
2, 0.0713414, 1, 0, 0.55974,-0.00124328) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874521,-0.0675392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438336,-0.0132634) , 
2, 0.0469725, 1, 0, 0.620079,-0.0111679) , 
7, 8.74839e-05, 1, 0, 0.572761,-0.00338504) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53813,0.0516777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494061,-0.00294623) , 
3, 6.00372, 1, 0, 0.497704,-0.000240408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196397,0.0483455) , 
3, 126.093, 1, 0, 0.470712,0.000149565) , 
4, 0.0104402, 1, 0, 0.501796,-0.000927064)    );
  // itree = 759
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646331,0.0292591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168653,0.00282912) , 
6, 0.0088269, 1, 0, 0.335637,0.00267651) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665344,0.00181215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719816,-0.0186803) , 
4, 0.0108912, 1, 0, 0.680934,-0.00191853) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670924,0.0242632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.278912,-0.00569139) , 
2, 0.0952359, 1, 0, 0.410699,0.000119746) , 
4, 0.0126694, 1, 0, 0.509981,-0.000629097) , 
4, 0.00521929, 1, 0, 0.495366,-0.000352001)    );
  // itree = 760
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949092,-0.0144319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.339767,0.0100201) , 
0, 0.00117164, 1, 0, 0.626104,-0.00108838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705522,-0.019449) , 
5, 0.0129216, 1, 0, 0.63305,-0.00178557) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897867,-0.0029256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645599,0.0260177) , 
2, 0.119142, 1, 0, 0.787016,0.00310813) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.020607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334608,0.010954) , 
4, 0.0156564, 1, 0, 0.225652,-0.000248586) , 
5, 0.016313, 1, 0, 0.386082,0.000710719) , 
5, 0.0135675, 1, 0, 0.50234,-0.000464383)    );
  // itree = 761
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951176,-0.000521475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950519,0.0386702) , 
0, 0.0012776, 1, 0, 0.951047,0.00181788) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00147992,0.0312203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0021275,-0.0149281) , 
6, 0.0092781, 1, 0, 0.00188259,-0.000905775) , 
0, 0.00157834, 1, 0, 0.402839,0.000244783) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851674,-0.0216407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753929,-0.0123974) , 
4, 0.0126523, 1, 0, 0.764037,-0.0060498) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244088,-0.0103737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624087,0.0362118) , 
4, 0.0172804, 1, 0, 0.416563,-0.000668148) , 
5, 0.0168188, 1, 0, 0.630518,-0.00398187) , 
6, 0.0243554, 1, 0, 0.496766,-0.00149888)    );
  // itree = 762
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.745547,0.0331642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00801737,-0.0197628) , 
2, 0.0476111, 1, 0, 0.212831,-1.31638e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70913,0.0426736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846202,-0.0147685) , 
4, 0.00938737, 1, 0, 0.825327,-0.00491559) , 
7, 5.99177e-05, 1, 0, 0.542473,-0.00264615) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940237,0.000879674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766211,0.0283353) , 
0, 0.0017977, 1, 0, 0.899045,0.00289598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131153) , 
0, 0.00473329, 1, 0, 0.409446,0.00120895) , 
3, 63.0469, 1, 0, 0.498341,-0.00136721)    );
  // itree = 763
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918796,0.0459864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779282,-0.0218702) , 
2, 0.0136021, 1, 0, 0.840761,-0.00232723) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517631,0.00827175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.035632,-0.00638115) , 
2, 0.133812, 1, 0, 0.189207,1.23378e-05) , 
2, 0.0476118, 1, 0, 0.399894,-0.000744184) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943965,0.0126547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884207,-0.0116068) , 
2, 0.111008, 1, 0, 0.928489,0.00085682) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659458,0.0066379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667871,0.0302725) , 
1, 1.11301, 1, 0, 0.66458,0.00753361) , 
2, 0.16627, 1, 0, 0.843003,0.00301959) , 
7, 0.00019548, 1, 0, 0.496344,7.50625e-05)    );
  // itree = 764
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.32005,-0.0036274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5734,-0.0186681) , 
6, 0.0182682, 1, 0, 0.386315,-0.00173026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915336,0.0086351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130998) , 
0, 0.00473329, 1, 0, 0.446903,0.00135493) , 
6, 0.0225661, 1, 0, 0.406261,-0.00071458) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971828,0.0429973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966326,-0.00592685) , 
6, 0.0304179, 1, 0, 0.967948,0.000697484) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.482381,-0.0252138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802333,-0.0062653) , 
4, 0.0146443, 1, 0, 0.726943,-0.00796081) , 
0, 0.00063024, 1, 0, 0.831536,-0.00420324) , 
7, 0.00019548, 1, 0, 0.501127,-0.00149279)    );
  // itree = 765
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950148,-0.00828653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979642,0.0325696) , 
7, 6.05751e-05, 1, 0, 0.96561,0.000912099) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99492,-0.0592907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727966,-0.0151481) , 
0, 7.51582e-05, 1, 0, 0.945575,-0.00657554) , 
4, 0.0107517, 1, 0, 0.955581,-0.00283602) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.110799,-0.0181012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518726,0.00516122) , 
6, 0.0278498, 1, 0, 0.243522,-0.00103002) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891387,0.0169735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000229926,-0.00469686) , 
0, 0.00308071, 1, 0, 0.185423,0.00159201) , 
3, 50.3876, 1, 0, 0.216013,0.000211494) , 
0, 0.00157834, 1, 0, 0.50585,-0.000982826)    );
  // itree = 766
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826453,0.00646066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124049,-0.0124397) , 
5, 0.0144529, 1, 0, 0.63384,0.000609984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788382,0.0312777) , 
4, 0.0149062, 1, 0, 0.645238,0.00107056) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737896,-0.0018264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740163,-0.0428304) , 
4, 0.017079, 1, 0, 0.738594,-0.00354025) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.479864,0.0274747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0165445) , 
4, 0.0194508, 1, 0, 0.0963787,5.79351e-05) , 
4, 0.0176487, 1, 0, 0.278728,-0.000963723) , 
4, 0.0156584, 1, 0, 0.500335,0.000266291)    );
  // itree = 767
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953469,0.0216806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000251081,-0.0102726) , 
0, 0.00157834, 1, 0, 0.18696,0.000228243) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.788757,-0.0138532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844836,-0.0023818) , 
4, 0.0113647, 1, 0, 0.827054,-0.00221272) , 
7, 5.73801e-05, 1, 0, 0.529134,-0.00107662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198439,0.0123845) , 
3, 126.114, 1, 0, 0.501362,-0.000775818)    );
  // itree = 768
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935164,-0.0179202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958816,0.00570489) , 
4, 0.00877215, 1, 0, 0.952518,-0.000232942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.581938,-0.0217595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915214,0.0063141) , 
4, 0.015753, 1, 0, 0.804449,-0.011948) , 
0, 0.00193661, 1, 0, 0.928111,-0.00216398) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132218) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000977202,0.028026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.5002e-05,-0.00489541) , 
5, 0.0170694, 1, 0, 0.00042266,0.000202005) , 
2, 0.1428, 1, 0, 0.000304454,2.44397e-05) , 
0, 0.00314692, 1, 0, 0.504715,-0.00116532)    );
  // itree = 769
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92829,-0.0171497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902911,0.0696016) , 
2, 0.00431606, 1, 0, 0.91623,-0.000158168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840674,-0.0657573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851937,0.0237095) , 
2, 0.0153983, 1, 0, 0.846473,-0.00731566) , 
2, 0.00906808, 1, 0, 0.87921,-0.00395661) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75981,0.0459751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751828,0.00292985) , 
4, 0.00873042, 1, 0, 0.753382,0.00235705) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630764,-0.0182429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247409,-0.000586668) , 
2, 0.0896955, 1, 0, 0.282995,-0.000885175) , 
2, 0.0691637, 1, 0, 0.396224,-0.000104722) , 
2, 0.0238066, 1, 0, 0.491861,-0.00086744)    );
  // itree = 770
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851853,-0.0110135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912268,-0.0310207) , 
4, 0.0110419, 1, 0, 0.86164,-0.00408206) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544595,0.023032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868859,-0.0151138) , 
6, 0.0295739, 1, 0, 0.673787,-0.000995422) , 
4, 0.0121999, 1, 0, 0.771625,-0.00260302) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00383827,-0.0121016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221736,0.00738444) , 
4, 0.0104391, 1, 0, 0.173796,0.00054525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548645,-0.0109965) , 
6, 0.0347879, 1, 0, 0.203216,0.000114684) , 
2, 0.119029, 1, 0, 0.504759,-0.00132707)    );
  // itree = 771
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888038,0.00373462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922277,-0.0272276) , 
4, 0.0062253, 1, 0, 0.903857,-0.00449201) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 6.02268e-05,-0.0103836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000311135,0.0307676) , 
2, 0.357125, 1, 0, 0.000130254,-9.47347e-05) , 
0, 0.00315669, 1, 0, 0.180197,-0.000970887) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866585,-0.00856926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853096,0.013719) , 
3, 6.60057, 1, 0, 0.860233,-0.00108806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921985,0.0189507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41411,-0.00070863) , 
2, 0.19043, 1, 0, 0.821785,0.00327389) , 
3, 12.5991, 1, 0, 0.82807,0.00256086) , 
7, 6.37935e-05, 1, 0, 0.504149,0.000795069)    );
  // itree = 772
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782278,0.0203834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939904,-0.0213605) , 
7, 8.86566e-05, 1, 0, 0.861422,-0.00190746) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.190235,-0.00969641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406709,0.00930547) , 
5, 0.0102438, 1, 0, 0.362185,0.00072883) , 
2, 0.0475842, 1, 0, 0.526055,-0.000136512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150693,0.0454601) , 
3, 138.702, 1, 0, 0.502693,0.000210897)    );
  // itree = 773
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.487703,-0.00986059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407582,0.00906651) , 
3, 29.9837, 1, 0, 0.438366,0.000173257) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918937,2.29995e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56477,-0.022849) , 
2, 0.213288, 1, 0, 0.850043,-0.00239625) , 
7, 0.000196749, 1, 0, 0.532074,-0.000411629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195423,-0.023908) , 
3, 125.969, 1, 0, 0.503344,-0.000823672)    );
  // itree = 774
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955987,0.00362483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.237853,-0.00644783) , 
0, 0.00157834, 1, 0, 0.542046,-0.000537497) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664661,0.0924674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.40299,0.0155661) , 
4, 0.0137899, 1, 0, 0.527962,0.00369972) , 
3, 64.8549, 1, 0, 0.54076,-0.000150422) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954959,0.0072981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865993,-0.0114548) , 
0, 0.000741833, 1, 0, 0.910292,-0.00550825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000340177,-0.00434237) , 
0, 0.00313908, 1, 0, 0.365832,-0.00229917) , 
3, 75.6676, 1, 0, 0.496188,-0.000697927)    );
  // itree = 775
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85873,-0.0067365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647825,0.0073569) , 
5, 0.0130211, 1, 0, 0.772236,-0.00048643) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260749,0.00668833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712039,-0.0255634) , 
6, 0.0260641, 1, 0, 0.50322,-0.00754355) , 
2, 0.111084, 1, 0, 0.724921,-0.00172764) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0619309,-0.00517199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000299386,0.0240036) , 
0, 0.0126268, 1, 0, 0.0160478,-0.000308763) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711255,0.018788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651652,-0.00133477) , 
6, 0.0341475, 1, 0, 0.687153,0.00453388) , 
7, 0.000198621, 1, 0, 0.139686,0.000583398) , 
2, 0.166646, 1, 0, 0.502409,-0.000848959)    );
  // itree = 776
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93786,0.0256323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787741,-0.0197373) , 
4, 0.0086881, 1, 0, 0.852258,-0.0011359) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0510521,-0.00114659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.820738,0.0214846) , 
7, 9.77929e-05, 1, 0, 0.251229,0.00163323) , 
2, 0.0476118, 1, 0, 0.463658,0.000654504) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658004,-0.0119423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634609,0.0103921) , 
1, 1.11269, 1, 0, 0.6448,-0.000650158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678793,-0.0235225) , 
1, 1.2232, 1, 0, 0.650207,-0.00234938) , 
6, 0.0295742, 1, 0, 0.50779,-5.61344e-05)    );
  // itree = 777
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886156,0.0422445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241602,-0.0132258) , 
2, 0.0475943, 1, 0, 0.493075,-0.00174114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850215,-0.0143767) , 
7, 0.000199184, 1, 0, 0.571991,-0.00426936) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.359617,0.00152142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822944,-0.00826315) , 
7, 0.000166838, 1, 0, 0.469944,-0.000528291) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801866,0.0188125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578528,0.0150942) , 
2, 0.136785, 1, 0, 0.688885,0.00289153) , 
6, 0.0347915, 1, 0, 0.483354,-0.000318824) , 
3, 12.6113, 1, 0, 0.496693,-0.000913361)    );
  // itree = 778
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.336698,-0.000160008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538858,-0.0211155) , 
6, 0.01893, 1, 0, 0.348634,-0.000212335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600276,0.0602395) , 
6, 0.0198831, 1, 0, 0.368556,0.000151385) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.257206,-0.0124183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847972,-0.0183748) , 
4, 0.0110223, 1, 0, 0.490508,-0.00571056) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710784,-0.00859148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575887,0.00963858) , 
1, 1.31624, 1, 0, 0.658933,-0.00118322) , 
4, 0.0121831, 1, 0, 0.61558,-0.00234857) , 
6, 0.0208787, 1, 0, 0.499829,-0.00117714)    );
  // itree = 779
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.24839,-0.0207894) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833573,-0.0180661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450486,-0.00409665) , 
5, 0.00629538, 1, 0, 0.57036,-0.00201941) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592879,0.00911809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423106,-0.0040324) , 
5, 0.0136842, 1, 0, 0.495336,0.000306194) , 
4, 0.00821321, 1, 0, 0.507013,-5.57576e-05) , 
4, 0.00348272, 1, 0, 0.495492,-0.00041859)    );
  // itree = 780
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962674,0.00920953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0911535,-0.0129366) , 
0, 0.00157739, 1, 0, 0.43461,-0.00012276) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829659,-0.00306383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897383,0.0310577) , 
1, 1.19342, 1, 0, 0.856813,0.00178708) , 
7, 0.000196529, 1, 0, 0.528313,0.000301106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140332,-0.0113664) , 
3, 138.568, 1, 0, 0.502559,5.98e-05)    );
  // itree = 781
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996955,0.0176642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87745,-0.0134693) , 
2, 0.165548, 1, 0, 0.982973,-0.000964515) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892884,-0.00745562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784759,-0.0204335) , 
4, 0.0172356, 1, 0, 0.881788,-0.00664068) , 
0, 0.000300598, 1, 0, 0.930075,-0.00393189) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000165325,-0.00936187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130964) , 
4, 0.0139234, 1, 0, 5.38535e-05,-0.000191713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0014639,0.0399337) , 
6, 0.0243546, 1, 0, 0.000485687,0.000166682) , 
0, 0.00315669, 1, 0, 0.49968,-0.00203427)    );
  // itree = 782
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.54827,0.000686252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499412,-0.00601739) , 
3, 48.0924, 1, 0, 0.529477,-0.00040624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.405434,0.0416313) , 
3, 112.28, 1, 0, 0.523759,-0.000185336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.133293,-0.0106702) , 
3, 138.724, 1, 0, 0.496814,-0.000471697)    );
  // itree = 783
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859597,0.00152554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878732,0.0196656) , 
6, 0.0226865, 1, 0, 0.867047,0.00108035) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878659,-0.00818787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000348804,0.000896921) , 
0, 0.00315247, 1, 0, 0.371141,-0.00198604) , 
2, 0.0476132, 1, 0, 0.537773,-0.000955687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19271,-0.0194156) , 
3, 126.093, 1, 0, 0.507397,-0.00142708)    );
  // itree = 784
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.337012,-0.00450369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.310999,0.0195191) , 
3, 37.8068, 1, 0, 0.323476,0.00172693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.727998,0.0041932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653754,-0.012749) , 
3, 24.9042, 1, 0, 0.678146,-0.00290891) , 
4, 0.00521325, 1, 0, 0.597843,-0.00185929) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721337,-0.0144739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740738,0.0165303) , 
4, 0.012659, 1, 0, 0.73778,0.00256807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.266933,-0.0177189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.290706,0.0144461) , 
5, 0.0167869, 1, 0, 0.280723,-0.000895085) , 
4, 0.0156361, 1, 0, 0.436587,0.000285912) , 
4, 0.0121602, 1, 0, 0.500975,-0.000570642)    );
  // itree = 785
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826894,0.00497315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454698,-0.00931298) , 
3, 111.923, 1, 0, 0.800322,0.000341148) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625512,0.031723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297116,-0.00663992) , 
5, 0.0165424, 1, 0, 0.492131,0.0035671) , 
2, 0.0918143, 1, 0, 0.699576,0.00139569) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.329571,-0.027374) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000499019,-0.00526175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446736,0.0067297) , 
7, 0.000196683, 1, 0, 0.0470006,0.00020957) , 
2, 0.241554, 1, 0, 0.0846364,-0.000758902) , 
2, 0.21426, 1, 0, 0.505807,0.000716772)    );
  // itree = 786
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681649,0.0108043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639853,-0.00910531) , 
3, 21.3585, 1, 0, 0.652246,-0.00135897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329465,-0.0180611) , 
3, 112.125, 1, 0, 0.625564,-0.00236474) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595932,-0.00208748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351282,0.0188994) , 
2, 0.147404, 1, 0, 0.494224,0.00108352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0218244,-0.0127245) , 
2, 0.309521, 1, 0, 0.381387,0.000383808) , 
5, 0.013663, 1, 0, 0.49729,-0.000920836)    );
  // itree = 787
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655241,-0.0182351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645808,0.00425572) , 
3, 6.00064, 1, 0, 0.646862,-0.000312192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859716,-0.0275399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227027,0.000531393) , 
2, 0.0475609, 1, 0, 0.499169,-0.00483871) , 
3, 62.9767, 1, 0, 0.604112,-0.00162238) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950953,-0.0170563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932676,0.00718756) , 
6, 0.0319894, 1, 0, 0.944279,-0.00254777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93954,0.0110606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135166) , 
0, 0.00308368, 1, 0, 0.282409,0.00105314) , 
0, 0.0015782, 1, 0, 0.435031,0.000222796) , 
4, 0.0121675, 1, 0, 0.501584,-0.000503492)    );
  // itree = 788
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967449,-0.0178866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690089,-0.0222449) , 
2, 0.138075, 1, 0, 0.926927,-0.00856392) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90026,-0.0140424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946928,0.00647979) , 
5, 0.0106408, 1, 0, 0.930473,-0.00144188) , 
3, 36.2395, 1, 0, 0.928792,-0.00481878) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000885311,0.008354) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130963) , 
4, 0.0202887, 1, 0, 0,-0.000216704) , 
4, 0.0121688, 1, 0, 0.000263808,-6.58991e-05) , 
0, 0.00315669, 1, 0, 0.502273,-0.00263555)    );
  // itree = 789
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586223,-0.01407) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.305155,0.0168633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689845,-0.0129196) , 
4, 0.00598734, 1, 0, 0.427108,-0.000456055) , 
6, 0.00870837, 1, 0, 0.462038,-0.00213763) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945776,0.00983016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547243,0.0238061) , 
2, 0.0236693, 1, 0, 0.687232,0.00272117) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.160487,-0.0171448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538199,0.00222706) , 
5, 0.010282, 1, 0, 0.476373,-0.000108539) , 
4, 0.00980045, 1, 0, 0.50446,0.000268392) , 
4, 0.00698368, 1, 0, 0.49828,-8.21263e-05)    );
  // itree = 790
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.422915,0.0122881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729411,-0.0129131) , 
4, 0.00583477, 1, 0, 0.649912,-0.00234236) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.388515,-0.00544523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605586,-0.0200565) , 
4, 0.0075392, 1, 0, 0.508452,-0.00803449) , 
3, 62.9884, 1, 0, 0.607935,-0.00403147) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498816,0.0457707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472722,-0.012045) , 
3, 3.57515, 1, 0, 0.476468,-0.00276791) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943353,0.0103273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0137654) , 
0, 0.00315552, 1, 0, 0.412884,0.00115504) , 
3, 25.0341, 1, 0, 0.431392,1.31548e-05) , 
4, 0.0121782, 1, 0, 0.5006,-0.00157241)    );
  // itree = 791
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839697,0.0112474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770066,-0.00534855) , 
4, 0.00873758, 1, 0, 0.789925,-0.000259124) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515049,0.032168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451514,-0.000266366) , 
3, 50.0593, 1, 0, 0.485155,0.00339895) , 
2, 0.0997489, 1, 0, 0.707435,0.000730986) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663488,-0.014894) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22633,-0.00760142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0247349,0.00284009) , 
2, 0.234683, 1, 0, 0.0585737,-0.000242099) , 
0, 0.00157834, 1, 0, 0.113902,-0.00122325) , 
2, 0.190453, 1, 0, 0.506143,6.8224e-05)    );
  // itree = 792
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.379087,0.00342077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610006,-0.0115546) , 
6, 0.0213549, 1, 0, 0.406541,-0.000149831) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610382,0.0666493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583845,0.0129914) , 
6, 0.0245591, 1, 0, 0.595223,0.00373907) , 
6, 0.0236088, 1, 0, 0.433232,0.000400281) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629139,-0.010114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631928,0.0045913) , 
6, 0.0309823, 1, 0, 0.630752,-0.000761502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650909,-0.018962) , 
1, 1.38584, 1, 0, 0.632282,-0.00172332) , 
6, 0.0260947, 1, 0, 0.504894,-0.000364253)    );
  // itree = 793
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980056,-0.00548332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988688,0.0338004) , 
3, 81.621, 1, 0, 0.981195,-0.00019248) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56932,-0.01271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.88927,-0.00290636) , 
4, 0.0127669, 1, 0, 0.811652,-0.0052179) , 
2, 0.094901, 1, 0, 0.931051,-0.0016788) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000887397,0.0359748) , 
6, 0.0186173, 1, 0, 0.000244638,-1.72412e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0135741) , 
6, 0.0260657, 1, 0, 0.000182468,-0.000131518) , 
0, 0.00315669, 1, 0, 0.498588,-0.000959961)    );
  // itree = 794
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.21835,-0.0442921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.252237,0.0300363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520009,-0.00409293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652312,-0.00990464) , 
6, 0.033052, 1, 0, 0.537471,-0.00111276) , 
4, 0.00524303, 1, 0, 0.516066,-0.000801207) , 
5, 0.00341826, 1, 0, 0.502302,-0.00115582)    );
  // itree = 795
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961967,0.0147605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00238864,-0.0159219) , 
0, 0.00157504, 1, 0, 0.47257,0.00054463) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685236,-0.00662192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638224,-0.0177602) , 
1, 1.404, 1, 0, 0.676211,-0.00426176) , 
6, 0.0243645, 1, 0, 0.557739,-0.00146556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.395501,0.0150977) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.259201,-0.00742462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611543,0.00824915) , 
6, 0.022624, 1, 0, 0.440879,0.000400728) , 
4, 0.00695311, 1, 0, 0.434876,0.000887919) , 
3, 50.4106, 1, 0, 0.504393,-0.000443697)    );
  // itree = 796
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.218979,0.0401572) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481187,-0.0305063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348085,-0.0178526) , 
3, 48.5213, 1, 0, 0.421992,-0.00302514) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743195,0.00417056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157738,-0.00726834) , 
2, 0.166649, 1, 0, 0.520652,-0.000123666) , 
5, 0.00683103, 1, 0, 0.507896,-0.00049882) , 
4, 0.00348147, 1, 0, 0.493383,-0.0002752)    );
  // itree = 797
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206518,-0.018201) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53566,-0.00293552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699721,0.0124008) , 
6, 0.0295809, 1, 0, 0.574215,0.000461529) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.347058,0.000647553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836898,-0.0155213) , 
7, 0.000196881, 1, 0, 0.454802,-0.00138785) , 
3, 50.4369, 1, 0, 0.522409,-0.000340803) , 
4, 0.00348353, 1, 0, 0.506253,-0.000630631)    );
  // itree = 798
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.237024,0.0448055) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776649,-0.0109092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183679,0.00226302) , 
2, 0.142836, 1, 0, 0.535064,-0.00113582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183322,-0.0178818) , 
3, 126.113, 1, 0, 0.503817,-0.00168554) , 
4, 0.00353341, 1, 0, 0.491104,-0.0013129)    );
  // itree = 799
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926623,0.0333652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807073,-0.0114734) , 
2, 0.0226702, 1, 0, 0.880025,-0.000379613) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881958,0.0150947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773358,-0.0273658) , 
2, 0.00906808, 1, 0, 0.805338,-0.0062642) , 
3, 49.711, 1, 0, 0.852668,-0.00253504) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.198143,-0.00765353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406547,0.0034846) , 
5, 0.010177, 1, 0, 0.367734,0.000119906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15627,0.0291856) , 
3, 126.113, 1, 0, 0.344005,0.000474926) , 
2, 0.0476118, 1, 0, 0.505004,-0.000477769)    );
  // itree = 800
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71218,0.00932687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0185851) , 
4, 0.0156813, 1, 0, 0.515785,0.000959198) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.471115,-0.0138981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0998033,-0.00267512) , 
2, 0.0952148, 1, 0, 0.211878,-0.00309833) , 
3, 113.504, 1, 0, 0.481774,0.000505115) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65852,-0.012658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622522,0.0357773) , 
1, 1.07001, 1, 0, 0.637058,-0.00055146) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631691,-0.0233915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494602,0.00395618) , 
3, 63.0204, 1, 0, 0.582559,-0.00609628) , 
1, 1.11143, 1, 0, 0.608705,-0.00343622) , 
6, 0.0313128, 1, 0, 0.505122,-0.000219864)    );
  // itree = 801
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675638,-0.00514051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441572,0.0155686) , 
5, 0.0133382, 1, 0, 0.556368,0.000693318) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.514148,0.0170094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493426,-0.0068416) , 
3, 44.3407, 1, 0, 0.495501,-0.00115723) , 
3, 39.6225, 1, 0, 0.525663,-0.000240217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143957,0.0184203) , 
3, 138.702, 1, 0, 0.499673,7.37029e-07)    );
  // itree = 802
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.411579,-0.00304884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609352,-0.0148711) , 
6, 0.0248371, 1, 0, 0.424086,-0.000885481) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.693977,0.0387822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19108,0.00611537) , 
6, 0.0270828, 1, 0, 0.316233,0.00205071) , 
6, 0.0260871, 1, 0, 0.404909,-0.000363403) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924121,-0.0102571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703348,-0.0233259) , 
2, 0.0947149, 1, 0, 0.802449,-0.01104) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820551,-0.0155557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895086,0.0133544) , 
1, 1.08684, 1, 0, 0.870633,6.02059e-05) , 
7, 0.000235893, 1, 0, 0.849315,-0.0034103) , 
7, 0.000196749, 1, 0, 0.501154,-0.00102327)    );
  // itree = 803
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998969,-0.0205758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932609,-0.0101784) , 
0, 7.51022e-05, 1, 0, 0.974581,-0.00301868) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568057,-0.0326713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381652,0.00737438) , 
2, 0.0158691, 1, 0, 0.402691,0.000556883) , 
0, 0.00157728, 1, 0, 0.726025,-0.00146466) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729934,0.0256079) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0053391,-0.00751875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542231,0.00598301) , 
7, 0.000196683, 1, 0, 0.0676171,2.21683e-05) , 
0, 0.0015782, 1, 0, 0.131228,0.000986009) , 
2, 0.166639, 1, 0, 0.498842,-0.000528626)    );
  // itree = 804
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22251,-0.00155173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489844,-0.0349041) , 
6, 0.0127391, 1, 0, 0.256939,-0.000855406) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77275,0.00957667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000284139,-0.01915) , 
4, 0.0156039, 1, 0, 0.578654,0.00131523) , 
6, 0.0140833, 1, 0, 0.46329,0.000536861) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681354,0.00534762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646594,-0.0166902) , 
1, 1.22308, 1, 0, 0.67517,-0.00026821) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.516262,-0.0302083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548003,-0.0449432) , 
6, 0.0338823, 1, 0, 0.528974,-0.0116214) , 
3, 75.0907, 1, 0, 0.635483,-0.00335019) , 
6, 0.0295733, 1, 0, 0.504893,-0.000402283)    );
  // itree = 805
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553169,0.0182886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548698,-0.0122846) , 
3, 11.1942, 1, 0, 0.551658,0.00011654) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283429,0.0177821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8788,0.024814) , 
7, 8.23198e-05, 1, 0, 0.572392,0.00270621) , 
3, 16.7938, 1, 0, 0.558381,0.000956218) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997229,-0.00971509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848021,-0.0138274) , 
0, 7.51582e-05, 1, 0, 0.944756,-0.00450657) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.469533,-0.0198935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.159474,0.00484956) , 
2, 0.0476002, 1, 0, 0.199978,-0.000403954) , 
0, 0.00157834, 1, 0, 0.473383,-0.00191001) , 
3, 25.1938, 1, 0, 0.499742,-0.00102116)    );
  // itree = 806
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470015,-0.00107651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489277,-0.0181348) , 
3, 20.3621, 1, 0, 0.473429,-0.00124452) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900612,0.0101272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131693) , 
0, 0.00473329, 1, 0, 0.400523,0.00129202) , 
3, 25.1561, 1, 0, 0.424152,0.000469929) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603895,-0.0089815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618467,0.0301223) , 
1, 1.30623, 1, 0, 0.605483,-0.00176593) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666845,-0.0114798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65835,-0.0535579) , 
6, 0.0268076, 1, 0, 0.662538,-0.00959531) , 
1, 1.34985, 1, 0, 0.613504,-0.00286662) , 
6, 0.0260955, 1, 0, 0.492559,-0.000735465)    );
  // itree = 807
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902556,-0.0142367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013139) , 
0, 0.00315669, 1, 0, 0.216168,-0.000908571) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889593,0.0257641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000141889,-0.00535849) , 
0, 0.00315455, 1, 0, 0.143382,0.000972445) , 
3, 37.8387, 1, 0, 0.173204,0.000201745) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992375,-0.00986249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827752,0.0341573) , 
2, 0.165548, 1, 0, 0.966308,0.00105109) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821994,-0.0288359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672521,-0.0070458) , 
6, 0.0194704, 1, 0, 0.69127,-0.00573048) , 
0, 0.000857734, 1, 0, 0.806385,-0.00289211) , 
7, 5.94779e-05, 1, 0, 0.496302,-0.00137698)    );
  // itree = 808
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509326,0.00829242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386014,-0.0157071) , 
3, 48.4791, 1, 0, 0.457163,-0.00216069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608269,0.00626851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00916421,-0.016551) , 
4, 0.0139173, 1, 0, 0.385076,0.000288686) , 
5, 0.00681732, 1, 0, 0.397605,-0.000137043) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939808,-0.0228584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976289,0.0292165) , 
5, 0.0156178, 1, 0, 0.96183,-0.000211178) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705902,-0.00706212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840038,-0.0146171) , 
7, 0.000281006, 1, 0, 0.750793,-0.00743233) , 
0, 0.0012421, 1, 0, 0.842855,-0.0042822) , 
7, 0.00019548, 1, 0, 0.49472,-0.00104116)    );
  // itree = 809
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880923,-0.014014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943495,-0.0230892) , 
5, 0.00476976, 1, 0, 0.912436,-0.00910268) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975896,0.0190408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935342,-0.00779857) , 
4, 0.0103123, 1, 0, 0.950093,-0.000575406) , 
5, 0.00624162, 1, 0, 0.945066,-0.00171363) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.503883,0.0144747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.174045,-0.00786822) , 
4, 0.0156888, 1, 0, 0.342474,0.0014561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909703,-0.00594619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131113) , 
0, 0.00314149, 1, 0, 0.087275,-0.000574509) , 
5, 0.0170953, 1, 0, 0.208353,0.000388905) , 
0, 0.00157739, 1, 0, 0.491215,-0.000418366)    );
  // itree = 810
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602584,0.000129993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435463,-0.0166753) , 
3, 62.9814, 1, 0, 0.551813,-0.00151416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723901,-0.0158254) , 
4, 0.00993933, 1, 0, 0.569315,-0.0021423) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943231,-0.00760178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540759,0.013773) , 
0, 0.00143025, 1, 0, 0.698889,0.00116778) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0177937) , 
7, -0.00049176, 1, 0, 0,-0.000952401) , 
4, 0.0191359, 1, 0, 0.461846,0.000448677) , 
4, 0.0104415, 1, 0, 0.494246,-0.000332444)    );
  // itree = 811
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.211751,-0.0237538) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758556,0.0150037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0185765,-0.00675283) , 
2, 0.0952148, 1, 0, 0.378917,0.000491797) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552128,-0.0117745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652209,-0.00293605) , 
6, 0.0231148, 1, 0, 0.638643,-0.00139502) , 
6, 0.0208779, 1, 0, 0.519562,-0.000529943) , 
5, 0.00339598, 1, 0, 0.506026,-0.000689536)    );
  // itree = 812
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225046,0.000153373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831599,-0.0150332) , 
7, 6.47885e-05, 1, 0, 0.551509,-0.0029626) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.367551,-0.00967394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634833,0.00430723) , 
6, 0.0191375, 1, 0, 0.527168,-0.000132294) , 
3, 19.7854, 1, 0, 0.533677,-0.000889203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141929,0.0289453) , 
3, 138.566, 1, 0, 0.506466,-0.000519317)    );
  // itree = 813
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.314806,-0.0102681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711982,0.0481928) , 
5, 0.00393416, 1, 0, 0.551174,0.00226182) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783478,-0.0186853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131418) , 
0, 0.00631105, 1, 0, 0.0547007,-0.000761761) , 
5, 0.00685897, 1, 0, 0.176373,-2.07642e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930995,-0.00176585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851498,-0.0125348) , 
3, 86.5941, 1, 0, 0.920761,-0.00118768) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47374,-0.0146891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611999,0.00267661) , 
6, 0.0336324, 1, 0, 0.513851,-0.00765231) , 
2, 0.142753, 1, 0, 0.809143,-0.00296096) , 
7, 5.94779e-05, 1, 0, 0.505688,-0.00155094)    );
  // itree = 814
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.241528,-0.0410918) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968253,0.0256688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947986,-0.00311252) , 
4, 0.010279, 1, 0, 0.956738,0.00115383) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888468,-0.00510089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000314792,-0.00188526) , 
0, 0.00308227, 1, 0, 0.225472,-0.000921793) , 
0, 0.00157834, 1, 0, 0.510855,-0.000111763) , 
5, 0.00339354, 1, 0, 0.499841,-0.000380175)    );
  // itree = 815
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984437,0.000936626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811173,-0.0122127) , 
2, 0.071064, 1, 0, 0.927563,-0.00270288) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00151757,0.0117567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131013) , 
0, 0.0131528, 1, 0, 0.000360819,6.06549e-05) , 
0, 0.0031564, 1, 0, 0.479462,-0.00136731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617709,-0.00178068) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.335182,-0.00125846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832992,0.0632105) , 
4, 0.0173602, 1, 0, 0.630821,0.003771) , 
5, 0.017152, 1, 0, 0.626682,0.00234859) , 
6, 0.0330525, 1, 0, 0.497137,-0.000921186)    );
  // itree = 816
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917718,-0.0615196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885603,0.000813724) , 
5, 0.00573673, 1, 0, 0.89352,-0.00275021) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722473,0.0445028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802109,0.0092976) , 
5, 0.00678135, 1, 0, 0.793182,0.00255041) , 
2, 0.0135905, 1, 0, 0.827443,0.000740486) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513311,-0.00578552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731277,-0.0239702) , 
6, 0.0312975, 1, 0, 0.565796,-0.00427914) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.354728,0.0112225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0794623,-0.00746795) , 
2, 0.219117, 1, 0, 0.148351,-6.8582e-05) , 
2, 0.153007, 1, 0, 0.277067,-0.00136688) , 
2, 0.0713986, 1, 0, 0.493112,-0.000539648)    );
  // itree = 817
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.397963,0.0341234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.265849,-0.020433) , 
3, 50.3873, 1, 0, 0.338437,-0.00366367) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644215,0.111346) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798626,-0.00429958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.275597,0.00630918) , 
2, 0.0952326, 1, 0, 0.510117,0.000192077) , 
4, 0.00671581, 1, 0, 0.517097,0.000393008) , 
4, 0.00522239, 1, 0, 0.501378,3.6098e-05)    );
  // itree = 818
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57816,0.0274668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699412,-0.0118221) , 
5, 0.00830703, 1, 0, 0.621165,-0.000432693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596725,-0.0349337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430557,-0.00439727) , 
3, 79.5819, 1, 0, 0.519216,-0.0067635) , 
3, 49.4971, 1, 0, 0.580955,-0.00292963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0919388,-0.0129532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800186,0.00914561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.286217,-0.00056216) , 
5, 0.0161181, 1, 0, 0.53176,0.00104135) , 
4, 0.0104574, 1, 0, 0.465485,0.000601408) , 
5, 0.0102506, 1, 0, 0.498157,-0.000397686)    );
  // itree = 819
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226717,-0.0178389) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571294,0.00114928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557998,0.0239177) , 
3, 51.0446, 1, 0, 0.569466,0.000652559) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544145,-0.011892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.378588,-0.000645293) , 
4, 0.0113739, 1, 0, 0.422712,-0.00108401) , 
3, 63.0581, 1, 0, 0.52062,7.45617e-05) , 
4, 0.00350731, 1, 0, 0.505009,-0.000329121)    );
  // itree = 820
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530717,-0.00439425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486253,0.0104543) , 
3, 66.0466, 1, 0, 0.520017,-0.000287304) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811489,-0.00381773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.543929,-0.0130624) , 
2, 0.143123, 1, 0, 0.680313,-0.00444251) , 
6, 0.0347915, 1, 0, 0.530906,-0.000569565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168726,-0.0203666) , 
3, 126.092, 1, 0, 0.49799,-0.000994333)    );
  // itree = 821
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832742,0.0117451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663434,0.0332179) , 
2, 0.0881871, 1, 0, 0.801654,0.00218671) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153675,-0.010558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143523,0.00822491) , 
3, 13.2098, 1, 0, 0.148777,-0.00142979) , 
2, 0.142698, 1, 0, 0.558021,0.000837151) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.195417,0.0162112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0624064,-0.00954444) , 
3, 93.6961, 1, 0, 0.151573,5.9121e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822322,-0.0116787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748728,0.00325399) , 
3, 80.7241, 1, 0, 0.802848,-0.0027117) , 
7, 5.73802e-05, 1, 0, 0.475182,-0.00131766) , 
3, 25.2235, 1, 0, 0.500714,-0.00065353)    );
  // itree = 822
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283739,0.0255742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95606,-0.0241022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39751,-0.00250196) , 
0, 0.00118438, 1, 0, 0.664019,-0.00282641) , 
6, 0.00696412, 1, 0, 0.630369,-0.00214722) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.450331,0.0321733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891557,0.0560886) , 
6, 0.0296467, 1, 0, 0.687638,0.00335694) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.281813,-0.00390253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718847,0.01601) , 
6, 0.0347915, 1, 0, 0.327048,-0.000126735) , 
2, 0.0476961, 1, 0, 0.387264,0.000455007) , 
5, 0.0135925, 1, 0, 0.502063,-0.000773815)    );
  // itree = 823
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958827,0.00368443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127992,-0.00859494) , 
0, 0.0015782, 1, 0, 0.461876,-0.000357089) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826895,0.0099314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41324,0.0349982) , 
2, 0.141479, 1, 0, 0.619078,0.00397899) , 
6, 0.0298157, 1, 0, 0.473426,-3.84959e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.795699,-0.011622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.402717,0.00615706) , 
2, 0.166641, 1, 0, 0.649915,-0.00231693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508708,-0.0371564) , 
3, 75.0894, 1, 0, 0.610585,-0.00478429) , 
6, 0.0313128, 1, 0, 0.498155,-0.000894141)    );
  // itree = 824
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91394,0.0679167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8379,-0.0109731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950656,0.0259067) , 
7, 0.000116998, 1, 0, 0.882984,0.000992911) , 
4, 0.00525405, 1, 0, 0.88792,0.00163674) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73031,-0.0047111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5354,-0.0177945) , 
2, 0.0993703, 1, 0, 0.684444,-0.00257324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.403615,0.0118478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0923404,-0.00388718) , 
2, 0.206282, 1, 0, 0.176823,0.000511898) , 
2, 0.137175, 1, 0, 0.40559,-0.000878469) , 
2, 0.0238055, 1, 0, 0.502427,-0.000373492)    );
  // itree = 825
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988622,-0.00516481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869223,-0.0115368) , 
2, 0.0474505, 1, 0, 0.93174,-0.00360814) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895355,0.0142472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930712,-0.00179739) , 
4, 0.0115691, 1, 0, 0.917864,0.00277447) , 
3, 86.0589, 1, 0, 0.929793,-0.00271268) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132169) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00109566,0.0227793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132357) , 
5, 0.0168315, 1, 0, 0.000440263,0.000103695) , 
4, 0.0104391, 1, 0, 0.000333155,-7.87465e-05) , 
0, 0.0031564, 1, 0, 0.497802,-0.00148849)    );
  // itree = 826
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738576,-0.0185104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539502,-0.00415112) , 
5, 0.00625491, 1, 0, 0.582533,-0.00192254) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662738,0.0123142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.107366,-0.0141486) , 
2, 0.190444, 1, 0, 0.453989,0.000386841) , 
4, 0.0104282, 1, 0, 0.495331,-0.000355899) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789598,-0.0159108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50317,0.00231093) , 
2, 0.166885, 1, 0, 0.672915,-0.00452968) , 
6, 0.0347914, 1, 0, 0.506703,-0.000623163)    );
  // itree = 827
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.742265,-0.0202253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754742,-0.00361304) , 
5, 0.00662151, 1, 0, 0.753036,-0.00177931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483367,-0.0195032) , 
2, 0.142718, 1, 0, 0.733822,-0.00226522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739639,0.0131357) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000174317,-0.0232804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0932219,0.0020816) , 
4, 0.0121795, 1, 0, 0.0670568,-0.000424199) , 
0, 0.0015782, 1, 0, 0.131647,0.000256588) , 
2, 0.166597, 1, 0, 0.501346,-0.00129165)    );
  // itree = 828
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.369472,-0.00650872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677729,-0.0262456) , 
4, 0.00563547, 1, 0, 0.47059,-0.00280048) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782823,0.00364858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206514,-0.00609737) , 
2, 0.142833, 1, 0, 0.542723,-0.000119886) , 
4, 0.00696167, 1, 0, 0.531983,-0.000519026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144269,0.0284141) , 
3, 138.725, 1, 0, 0.506045,-0.00025124)    );
  // itree = 829
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59823,0.00387122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73524,-0.010761) , 
4, 0.00969179, 1, 0, 0.678334,-0.00205509) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.749685,0.0248711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.10896,-0.0179888) , 
4, 0.0176483, 1, 0, 0.30619,1.69294e-05) , 
4, 0.0156566, 1, 0, 0.537547,-0.00127122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203374,0.0167176) , 
3, 126.022, 1, 0, 0.508623,-0.000913369)    );
  // itree = 830
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522211,0.00797393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355515,-0.017672) , 
3, 49.1323, 1, 0, 0.447939,-0.00427712) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961978,0.00717439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196633,-0.0111226) , 
0, 0.00157834, 1, 0, 0.487678,-0.000421494) , 
5, 0.00630833, 1, 0, 0.482572,-0.000916875) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957968,0.00360834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502816,0.0301943) , 
0, 0.0015548, 1, 0, 0.6498,0.0041534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582335,0.00053545) , 
1, 1.11013, 1, 0, 0.629871,0.0029604) , 
6, 0.0330531, 1, 0, 0.500187,-0.000453204)    );
  // itree = 831
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741073,0.00695012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842513,-0.0144857) , 
6, 0.0248486, 1, 0, 0.748494,0.00070551) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.314922,-0.00971417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131122) , 
0, 0.0047346, 1, 0, 0.0389797,-0.00145118) , 
2, 0.119029, 1, 0, 0.427348,-0.000270669) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775424,0.0202329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218144,-0.00801426) , 
4, 0.0155483, 1, 0, 0.638715,0.00271007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626233,0.00367557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621849,-0.0261584) , 
1, 1.14975, 1, 0, 0.625187,-0.000803382) , 
6, 0.0315641, 1, 0, 0.632376,0.00106365) , 
6, 0.0260955, 1, 0, 0.501133,0.000209527)    );
  // itree = 832
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878521,-0.0275649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391105,0.000839882) , 
2, 0.0475609, 1, 0, 0.571732,-0.00266584) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794048,0.00778333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220964,-0.00618785) , 
2, 0.118998, 1, 0, 0.518377,0.000287082) , 
3, 24.0003, 1, 0, 0.535352,-0.000652375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.18941,-0.011876) , 
3, 126.023, 1, 0, 0.505004,-0.00102343)    );
  // itree = 833
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874706,-0.00690892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941582,-0.0271901) , 
7, 2.27755e-05, 1, 0, 0.907487,-0.00447493) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995984,0.00669183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893157,0.0178893) , 
0, 0.000150001, 1, 0, 0.963794,0.00274518) , 
5, 0.00619831, 1, 0, 0.956172,0.00176789) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.104105,-0.00283183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630616,-0.013945) , 
5, 0.0130316, 1, 0, 0.175061,-0.00173289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663814,0.00820898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.116823,-0.00516553) , 
5, 0.0164443, 1, 0, 0.226826,0.000183718) , 
5, 0.0136816, 1, 0, 0.210606,-0.000416837) , 
0, 0.00157523, 1, 0, 0.49675,0.00042165)    );
  // itree = 834
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947049,-0.0156933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96181,0.0209723) , 
0, 0.0012776, 1, 0, 0.949489,-0.00276718) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.315411,-0.0189881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0617843,0.00371872) , 
2, 0.0238055, 1, 0, 0.0808645,-8.15517e-06) , 
0, 0.00157834, 1, 0, 0.402456,-0.00102963) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866668,0.0316655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93599,-0.0025907) , 
1, 1.23695, 1, 0, 0.888603,0.00401814) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549192,-0.0164265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949184,0.00781412) , 
7, 0.000314161, 1, 0, 0.732374,-0.00312911) , 
5, 0.0174414, 1, 0, 0.846161,0.00207648) , 
7, 0.00019548, 1, 0, 0.498786,-0.000355284)    );
  // itree = 835
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.272273,-0.0358656) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689401,0.00484027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0452177,-0.010511) , 
2, 0.21426, 1, 0, 0.496051,0.000283309) , 
5, 0.00326024, 1, 0, 0.486237,2.14959e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815967,0.0114501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542147,-0.00421983) , 
2, 0.119154, 1, 0, 0.650618,0.000154989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592462,-0.0290319) , 
1, 1.11013, 1, 0, 0.633265,-0.00358774) , 
6, 0.0330521, 1, 0, 0.50366,-0.000423255)    );
  // itree = 836
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.189505,0.0155749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494414,-0.010896) , 
6, 0.0116933, 1, 0, 0.353422,-0.000640122) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615278,0.0521054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541142,0.0251011) , 
3, 37.8202, 1, 0, 0.574978,0.00400516) , 
6, 0.0204616, 1, 0, 0.382463,-3.12441e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711044,0.0142226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615988,-0.0101713) , 
3, 12.5705, 1, 0, 0.630313,-0.00207634) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807319,-0.0446578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577552,-0.00480374) , 
2, 0.119381, 1, 0, 0.68083,-0.00779396) , 
6, 0.0345432, 1, 0, 0.638099,-0.00295759) , 
6, 0.0226161, 1, 0, 0.501404,-0.0013928)    );
  // itree = 837
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987979,-0.00247256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939998,-0.0172161) , 
8, 0.0855796, 1, 0, 0.983611,-0.00143544) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840787,-0.0139564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83598,-0.00279323) , 
3, 71.7826, 1, 0, 0.839431,-0.0075663) , 
2, 0.0711757, 1, 0, 0.928032,-0.00379879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132497) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0012411,0.0419809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.84976e-05,-0.00209314) , 
5, 0.0170953, 1, 0, 0.000539044,0.000314072) , 
2, 0.142927, 1, 0, 0.000380634,7.9398e-05) , 
0, 0.0031564, 1, 0, 0.507193,-0.00203941)    );
  // itree = 838
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589977,-0.0157525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796305,0.0164598) , 
6, 0.0208035, 1, 0, 0.697599,-3.74251e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185825,-0.0224449) , 
5, 0.0169275, 1, 0, 0.537441,-0.00236482) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744608,-0.00152744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.786588,-0.0144026) , 
6, 0.0330532, 1, 0, 0.749091,-0.00083267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657431,0.0158163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131211) , 
0, 0.00473218, 1, 0, 0.167506,0.00172355) , 
2, 0.142797, 1, 0, 0.496205,0.000278833) , 
3, 12.6123, 1, 0, 0.502939,-0.000152927)    );
  // itree = 839
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977116,-0.00285506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780746,-0.00773038) , 
2, 0.0711757, 1, 0, 0.901015,-0.00213473) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130997) , 
2, 0.190529, 1, 0, 0,-0.000164119) , 
0, 0.00473459, 1, 0, 0.530653,-0.00132471) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.395388,0.0259033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122091,0.00278011) , 
4, 0.0156333, 1, 0, 0.233215,0.00289322) , 
3, 113.486, 1, 0, 0.495921,-0.00083218)    );
  // itree = 840
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974842,0.00285264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925179,0.0132501) , 
0, 0.000447243, 1, 0, 0.951183,0.00209611) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00163467,-0.0108887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000208018,0.0073177) , 
2, 0.190453, 1, 0, 0.000762777,-0.000603512) , 
0, 0.00157504, 1, 0, 0.335855,0.000348299) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843855,-0.00904256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884784,-0.0258191) , 
1, 1.66269, 1, 0, 0.85264,-0.00327149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783645,0.0295853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369484,-0.00417568) , 
2, 0.11221, 1, 0, 0.463929,-0.000130532) , 
2, 0.0714002, 1, 0, 0.613682,-0.0013406) , 
6, 0.0191563, 1, 0, 0.49817,-0.00063841)    );
  // itree = 841
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983763,-0.000805795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645119,-0.0115915) , 
2, 0.0934594, 1, 0, 0.926744,-0.0025052) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000215919,0.000916452) , 
2, 0.142835, 1, 0, 0.000155151,-0.000128245) , 
0, 0.00315669, 1, 0, 0.401092,-0.00115676) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915582,-0.0134856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942367,0.000455548) , 
5, 0.0155867, 1, 0, 0.932151,-0.00240183) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72644,-0.00342326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814009,0.0278296) , 
1, 1.0858, 1, 0, 0.792701,0.00493291) , 
0, 0.00175195, 1, 0, 0.855819,0.00161305) , 
7, 0.00019548, 1, 0, 0.500741,-0.000549784)    );
  // itree = 842
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909334,-0.00234249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854352,0.0755934) , 
2, 0.0135847, 1, 0, 0.891056,0.0008798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767396,-0.0215032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636799,-0.00514566) , 
2, 0.0306004, 1, 0, 0.647613,-0.0025036) , 
2, 0.0237906, 1, 0, 0.725518,-0.00142086) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738406,0.0221336) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671854,-0.00655484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.6058e-05,-0.0103879) , 
0, 0.00310249, 1, 0, 0.0672511,-0.000890378) , 
0, 0.00157834, 1, 0, 0.135211,0.00030152) , 
2, 0.166626, 1, 0, 0.501219,-0.00076641)    );
  // itree = 843
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.422804,0.0110632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.304898,-0.00892177) , 
3, 62.9776, 1, 0, 0.383641,-0.000951061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665832,-0.0611439) , 
4, 0.00598999, 1, 0, 0.454422,-0.00336875) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809277,0.00842976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0159699) , 
4, 0.0182172, 1, 0, 0.629465,0.0012072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0182315,-0.00901336) , 
2, 0.309401, 1, 0, 0.519142,0.000793978) , 
4, 0.00698368, 1, 0, 0.50936,0.000164779)    );
  // itree = 844
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472631,0.00533436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391234,-0.0283883) , 
3, 49.262, 1, 0, 0.439996,-0.0033066) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507465,-0.0104833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442174,0.00817896) , 
3, 25.0384, 1, 0, 0.462499,0.000168543) , 
5, 0.00611348, 1, 0, 0.459534,-0.000289273) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744579,0.0080129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565366,-0.00979787) , 
5, 0.016958, 1, 0, 0.64133,-0.00109612) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614569,0.0121549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647657,-0.0286283) , 
6, 0.0303149, 1, 0, 0.630418,-0.00615698) , 
1, 1.21249, 1, 0, 0.638922,-0.00221281) , 
6, 0.0295733, 1, 0, 0.502894,-0.000754207)    );
  // itree = 845
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98001,-0.021162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995439,0.090408) , 
7, 0.000253911, 1, 0, 0.982966,-0.00165192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945603,0.00294341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787451,-0.0161933) , 
4, 0.00977075, 1, 0, 0.876546,-0.00822782) , 
0, 0.000375287, 1, 0, 0.947547,-0.00384053) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0074576,-0.0123533) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606689,0.0559185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251488,0.00105457) , 
4, 0.013347, 1, 0, 0.284925,0.000746953) , 
4, 0.012182, 1, 0, 0.219408,3.73427e-05) , 
0, 0.00157623, 1, 0, 0.505455,-0.00148607)    );
  // itree = 846
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829238,0.00778737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.14878,-0.00688936) , 
2, 0.0714198, 1, 0, 0.459806,-0.000204881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947591,-0.00696852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769861,0.0170933) , 
0, 0.00189072, 1, 0, 0.862869,0.00195509) , 
7, 0.000196749, 1, 0, 0.548314,0.000269424) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968427,0.00660484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809932,-0.0237352) , 
0, 0.00067592, 1, 0, 0.922233,-0.00846757) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00210826,0.0185026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585483,-0.00631316) , 
7, 6.01812e-05, 1, 0, 0.173781,-0.000378253) , 
0, 0.00157776, 1, 0, 0.41085,-0.00294051) , 
3, 62.9749, 1, 0, 0.501889,-0.000814653)    );
  // itree = 847
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.759895,-0.0103158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0855507,0.0103473) , 
2, 0.190396, 1, 0, 0.552509,-0.00159776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67206,0.0125001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143261,-0.018557) , 
4, 0.0173932, 1, 0, 0.510381,0.00124659) , 
3, 41.9979, 1, 0, 0.533064,-0.000284866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203873,-0.0308129) , 
3, 126.093, 1, 0, 0.505476,-0.00125089)    );
  // itree = 848
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657891,-1.51701e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400602,-0.0180137) , 
4, 0.0139802, 1, 0, 0.543469,-0.00488613) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737441,-0.00665797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.116691,0.00422444) , 
2, 0.190453, 1, 0, 0.530305,-0.000839288) , 
3, 6.00513, 1, 0, 0.531392,-0.00117339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203138,0.0125189) , 
3, 126.113, 1, 0, 0.503502,-0.000845009)    );
  // itree = 849
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.40198,0.00684497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317928,-0.0135531) , 
3, 37.9858, 1, 0, 0.356705,-0.00262547) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435458,-0.00256593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645461,0.00420163) , 
6, 0.026756, 1, 0, 0.489755,-4.71252e-05) , 
4, 0.00522814, 1, 0, 0.477314,-0.00028821) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796605,-0.00460716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703486,-0.03702) , 
3, 50.0604, 1, 0, 0.757397,-0.00515465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387507,0.0123449) , 
2, 0.214227, 1, 0, 0.632534,-0.00236793) , 
6, 0.0330523, 1, 0, 0.496129,-0.000540305)    );
  // itree = 850
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86569,0.0185669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867612,-0.0147558) , 
6, 0.0175027, 1, 0, 0.866767,-0.000659984) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753466,0.0397397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668569,0.00728784) , 
2, 0.0614973, 1, 0, 0.712961,0.00377014) , 
2, 0.0362491, 1, 0, 0.800721,0.00124236) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90419,0.00527654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72073,-0.00948627) , 
0, 0.000598009, 1, 0, 0.802188,-0.00436458) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000967008,0.0217158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.63817e-05,-0.0050302) , 
5, 0.016958, 1, 0, 0.000421248,0.000178084) , 
0, 0.00315669, 1, 0, 0.244726,-0.0012061) , 
2, 0.0952148, 1, 0, 0.504684,-6.13139e-05)    );
  // itree = 851
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.325062,0.000789506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607766,-0.034899) , 
5, 0.00484898, 1, 0, 0.457259,-0.00402657) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.565863,-0.00329688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.228703,0.0150969) , 
4, 0.0121782, 1, 0, 0.389817,0.00021709) , 
5, 0.00678647, 1, 0, 0.401604,-0.000524549) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.555158,-0.0224477) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928642,-0.0158443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790772,0.0125426) , 
0, 0.00205147, 1, 0, 0.883978,-0.00208187) , 
4, 0.0144509, 1, 0, 0.827522,-0.00443299) , 
7, 0.00019548, 1, 0, 0.496855,-0.00139863)    );
  // itree = 852
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989599,0.00433805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863489,-0.0162296) , 
0, 0.000297472, 1, 0, 0.923678,-0.00645817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00027531,-0.00235209) , 
0, 0.0031564, 1, 0, 0.55024,-0.0038675) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875573,0.0194691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123719,0.00689387) , 
5, 0.00830598, 1, 0, 0.499742,0.00269432) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674889,0.0199652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451749,-0.00581131) , 
4, 0.0100349, 1, 0, 0.468083,-0.00085406) , 
4, 0.00870659, 1, 0, 0.474582,-0.000125637) , 
3, 25.1892, 1, 0, 0.498023,-0.00128498)    );
  // itree = 853
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569009,-0.00612647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000679472,0.0122837) , 
2, 0.118998, 1, 0, 0.239905,-0.000328814) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950866,-0.0208536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775443,0.00113551) , 
0, 0.00126594, 1, 0, 0.869198,-0.00332538) , 
7, 7.69046e-05, 1, 0, 0.443787,-0.00129966) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803258,0.0204223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.33014,0.0488483) , 
2, 0.166646, 1, 0, 0.621397,0.00450026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932148,-0.00939796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51048,0.00870255) , 
0, 0.0015699, 1, 0, 0.658669,0.000713737) , 
4, 0.0157013, 1, 0, 0.642582,0.00234809) , 
6, 0.0278341, 1, 0, 0.502045,-0.000230671)    );
  // itree = 854
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836523,0.00495837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155149,-0.0066465) , 
2, 0.0714177, 1, 0, 0.466664,-0.000412791) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862731,-0.00522645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827313,-0.0295343) , 
3, 45.0197, 1, 0, 0.854643,-0.0049959) , 
7, 0.000196749, 1, 0, 0.554359,-0.00144871) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961204,0.00948662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880327,0.0285137) , 
3, 110.231, 1, 0, 0.942201,0.00403249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000182225,-0.008301) , 
0, 0.00314692, 1, 0, 0.411303,0.0016406) , 
3, 63.0461, 1, 0, 0.505874,-0.000401681)    );
  // itree = 855
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.699943,-0.0178235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615527,-0.0027843) , 
5, 0.00731008, 1, 0, 0.632038,-0.0014206) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992205,0.0178264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564315,-0.0229473) , 
5, 0.0153517, 1, 0, 0.764629,-0.0094845) , 
7, 0.000214606, 1, 0, 0.645788,-0.00225685) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0172253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000225116,0.0238334) , 
5, 0.0157916, 1, 0, 0.000138433,-0.000726438) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.747954,-9.26791e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750067,0.0329088) , 
1, 1.10399, 1, 0, 0.749075,0.0023171) , 
6, 0.0313142, 1, 0, 0.27576,0.000393636) , 
4, 0.0156623, 1, 0, 0.499804,-0.00121118)    );
  // itree = 856
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974465,0.0796266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895684,0.0210189) , 
5, 0.00583091, 1, 0, 0.918005,0.00155016) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87768,-0.0728096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848611,-0.0117889) , 
2, 0.012566, 1, 0, 0.85654,-0.0090871) , 
2, 0.00905645, 1, 0, 0.88603,-0.00398351) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121186,-0.0046119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847081,0.0145261) , 
7, 9.77928e-05, 1, 0, 0.325055,0.000618343) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.734551,-0.0141898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455996,0.00289114) , 
5, 0.017045, 1, 0, 0.59548,-0.00265997) , 
6, 0.0295733, 1, 0, 0.39733,-0.000257835) , 
2, 0.0238037, 1, 0, 0.492474,-0.000983183)    );
  // itree = 857
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506449,0.00207446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650655,0.0269784) , 
6, 0.0331154, 1, 0, 0.514652,0.000521224) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73416,-0.00127282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66041,-0.0111867) , 
1, 1.06685, 1, 0, 0.696287,-0.00301125) , 
6, 0.0347914, 1, 0, 0.526083,0.000298903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.146066,-0.0149638) , 
3, 138.726, 1, 0, 0.501113,3.92828e-05)    );
  // itree = 858
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86381,0.00124128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.37652,0.0231495) , 
2, 0.147356, 1, 0, 0.772824,0.00129171) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.314248,-0.0126444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298858,0.0376655) , 
4, 0.0173723, 1, 0, 0.30627,-0.000684329) , 
5, 0.0165141, 1, 0, 0.624388,0.000663023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000323496,0.0266121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0265672,-0.0162551) , 
6, 0.0208794, 1, 0, 0.011868,-0.00181598) , 
2, 0.309486, 1, 0, 0.506883,0.000187451)    );
  // itree = 859
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596371,-0.0204064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492927,0.00935618) , 
3, 37.7317, 1, 0, 0.542359,-0.000976071) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93718,-0.00486609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551231,-0.0190723) , 
2, 0.0949011, 1, 0, 0.799471,-0.00790166) , 
7, 0.000118325, 1, 0, 0.621002,-0.00309439) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.038606,-0.0108216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757057,0.0152686) , 
6, 0.0283295, 1, 0, 0.276449,0.000573868) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760752,0.00184154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715637,-0.0250163) , 
1, 1.10965, 1, 0, 0.747202,-0.0022774) , 
6, 0.0330523, 1, 0, 0.371005,1.16184e-06) , 
4, 0.0139138, 1, 0, 0.495965,-0.00154614)    );
  // itree = 860
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.382475,0.00950482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865109,-0.0099333) , 
7, 0.000143446, 1, 0, 0.515227,-0.00030362) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667314,0.0512427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703719,0.00363405) , 
6, 0.0348797, 1, 0, 0.685952,0.00334398) , 
6, 0.0330521, 1, 0, 0.535416,0.000127712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180488,-0.0214271) , 
3, 126.113, 1, 0, 0.505692,-0.000438747)    );
  // itree = 861
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987836,-0.000999428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62065,0.0176546) , 
0, 0.0011606, 1, 0, 0.836143,0.00193241) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671295,-0.0147472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581102,0.00539131) , 
2, 0.0396511, 1, 0, 0.607913,-0.000623799) , 
5, 0.0132687, 1, 0, 0.733479,0.00078256) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.773624,0.0104832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.543586,-0.0135608) , 
0, 0.000751496, 1, 0, 0.645108,-0.00689638) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000692897,0.0233703) , 
3, 75.6257, 1, 0, 0.000228791,7.42691e-05) , 
0, 0.0031564, 1, 0, 0.131114,-0.0013405) , 
2, 0.166601, 1, 0, 0.503404,-2.83461e-05)    );
  // itree = 862
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.235637,-0.0033094) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641618,0.0500164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.543629,0.0570941) , 
3, 48.5101, 1, 0, 0.603512,0.00268651) , 
4, 0.00369772, 1, 0, 0.47048,0.00137) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.573851,-0.00604537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579271,0.0216486) , 
3, 4.19983, 1, 0, 0.577392,0.00116036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937857,-0.00738389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000155592,-0.00303758) , 
0, 0.00315479, 1, 0, 0.501082,-0.0014749) , 
3, 12.6092, 1, 0, 0.512674,-0.00107459) , 
4, 0.00700686, 1, 0, 0.506566,-0.000720697)    );
  // itree = 863
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577781,0.00481309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546504,-0.0122195) , 
3, 10.8673, 1, 0, 0.561329,-0.00121997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514088,-0.061741) , 
3, 22.8217, 1, 0, 0.556601,-0.00409064) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.364918,-0.0195619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591845,-0.00110768) , 
5, 0.00551357, 1, 0, 0.438783,-0.00428353) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593841,0.00442093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00629221,-0.0202331) , 
2, 0.333202, 1, 0, 0.49019,0.000238677) , 
5, 0.00683103, 1, 0, 0.483246,-0.000372195) , 
3, 25.2246, 1, 0, 0.505711,-0.00151096)    );
  // itree = 864
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994475,-0.0269067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.830281,-0.0145892) , 
2, 0.0238037, 1, 0, 0.927808,-0.00625266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00113498,0.00283523) , 
0, 0.00223375, 1, 0, 0.576806,-0.00382301) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817554,-0.0311883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759991,-0.00296156) , 
2, 0.0170027, 1, 0, 0.777022,-0.00230289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.458773,0.0137572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0175645,-0.016728) , 
2, 0.31631, 1, 0, 0.335449,0.000993857) , 
2, 0.0714198, 1, 0, 0.4742,-4.20492e-05) , 
5, 0.010177, 1, 0, 0.502925,-0.00110056)    );
  // itree = 865
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.265769,0.0135588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49257,-0.00321927) , 
4, 0.00348353, 1, 0, 0.480845,-0.000394328) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568389,-0.0206083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583275,-0.016372) , 
1, 1.17014, 1, 0, 0.575924,-0.00482052) , 
6, 0.0314768, 1, 0, 0.486503,-0.000657731) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820415,0.0599328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475075,0.00301209) , 
2, 0.142718, 1, 0, 0.670037,0.00343861) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63518,-0.00389877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583674,0.0128005) , 
3, 79.5347, 1, 0, 0.609057,0.000795135) , 
3, 49.4921, 1, 0, 0.641463,0.00219994) , 
6, 0.0330532, 1, 0, 0.504752,-0.000321203)    );
  // itree = 866
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869066,-0.020837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731238,0.00472265) , 
5, 0.00486151, 1, 0, 0.75662,-0.000921988) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852661,-0.0118488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87252,-0.0471176) , 
1, 1.79081, 1, 0, 0.856551,-0.00463829) , 
6, 0.0174171, 1, 0, 0.818981,-0.00324111) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945424,-0.000285023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578528,-0.011985) , 
0, 0.000525182, 1, 0, 0.861821,-0.0047703) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.698364,0.00947484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000133564,-0.00138983) , 
0, 0.00458537, 1, 0, 0.144063,0.000797632) , 
0, 0.0015782, 1, 0, 0.282714,-0.000277937) , 
2, 0.0714198, 1, 0, 0.497527,-0.0014649)    );
  // itree = 867
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554531,-0.00715029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558206,-0.0487295) , 
3, 57.5855, 1, 0, 0.555066,-0.00417371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372823,0.0138506) , 
3, 75.5857, 1, 0, 0.513886,-0.00248219) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930319,-0.00682315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475642,0.040953) , 
2, 0.0476201, 1, 0, 0.707008,0.00377979) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533402,0.00410816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414925,-0.00622214) , 
3, 50.4134, 1, 0, 0.479738,-0.000130658) , 
4, 0.0100666, 1, 0, 0.497678,0.000178015) , 
4, 0.00874274, 1, 0, 0.501321,-0.000420019)    );
  // itree = 868
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659179,-0.0054479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541667,0.028277) , 
4, 0.0122599, 1, 0, 0.596858,0.0013287) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910828,0.00822904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347504,-0.0181948) , 
2, 0.0475943, 1, 0, 0.540173,-0.00597714) , 
3, 4.80641, 1, 0, 0.561288,-0.00325584) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579579,0.00167847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641799,-0.0164385) , 
7, 0.000124268, 1, 0, 0.58913,-0.00143212) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707761,0.0365754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346113,-0.00131926) , 
2, 0.0476187, 1, 0, 0.415883,0.000405221) , 
4, 0.0121884, 1, 0, 0.483481,-0.00031167) , 
3, 12.6135, 1, 0, 0.495407,-0.000762973)    );
  // itree = 869
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870222,-0.00207455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764841,0.0279061) , 
2, 0.0408064, 1, 0, 0.839678,0.000965026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842178,-0.00609952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000461233,0.00554737) , 
0, 0.00315669, 1, 0, 0.307214,-0.00115511) , 
2, 0.0714166, 1, 0, 0.531832,-0.000260738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177609,-0.0220196) , 
3, 126.093, 1, 0, 0.500382,-0.000795494)    );
  // itree = 870
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927266,-0.0113709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000664619,0.0201583) , 
0, 0.0031564, 1, 0, 0.471087,-0.00168604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0767096,-0.0133616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465931,0.00780075) , 
6, 0.00621569, 1, 0, 0.402436,0.000577511) , 
3, 25.2235, 1, 0, 0.424594,-0.000153071) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718666,-0.00920343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686684,0.019901) , 
3, 14.4, 1, 0, 0.699039,0.000396613) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554326,-0.0300295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602206,-0.00768979) , 
6, 0.029576, 1, 0, 0.586486,-0.00402221) , 
3, 37.8065, 1, 0, 0.635124,-0.00211269) , 
6, 0.0260947, 1, 0, 0.497852,-0.00083496)    );
  // itree = 871
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874395,0.00199473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602207,-0.0080972) , 
2, 0.0453113, 1, 0, 0.730836,-0.0011299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.319886,-0.018083) , 
3, 125.146, 1, 0, 0.705738,-0.00145081) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.316896,0.0467857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283764,0.0293253) , 
4, 0.0157073, 1, 0, 0.297886,0.0045557) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000497723,0.00190542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197232,-0.00633495) , 
6, 0.0295705, 1, 0, 0.0406663,-0.000449262) , 
2, 0.249372, 1, 0, 0.105957,0.000821164) , 
2, 0.19043, 1, 0, 0.496453,-0.000658034)    );
  // itree = 872
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.37856,-0.0138165) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793475,0.00501138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783574,-0.0141174) , 
6, 0.0338807, 1, 0, 0.7926,0.000493374) , 
6, 0.0087034, 1, 0, 0.755765,-1.62568e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820629,0.0086445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66419,-0.0158688) , 
0, 0.00104279, 1, 0, 0.738189,-0.00902913) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000705059,0.0133067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.40173e-05,-0.00946734) , 
4, 0.0121772, 1, 0, 0.000260639,-2.13205e-05) , 
0, 0.00315479, 1, 0, 0.164149,-0.00202188) , 
2, 0.14284, 1, 0, 0.50177,-0.000877318)    );
  // itree = 873
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861081,0.00121314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767051,-0.0138698) , 
2, 0.0466134, 1, 0, 0.851449,-0.000633487) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944475,0.0122962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000256555,-0.00696995) , 
0, 0.00315552, 1, 0, 0.545225,0.00229039) , 
2, 0.0544085, 1, 0, 0.703612,0.000778081) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666633,0.0152781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587599,-0.00922519) , 
0, 0.00134379, 1, 0, 0.62521,-0.00372641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130954) , 
0, 0.0160084, 1, 0, 0,-0.000130252) , 
0, 0.0031564, 1, 0, 0.101662,-0.000715002) , 
2, 0.190453, 1, 0, 0.492765,0.000255093)    );
  // itree = 874
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936782,0.0117859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173081,-0.0124895) , 
2, 0.0476132, 1, 0, 0.583085,-0.000981215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374863,-0.0253965) , 
7, 0.000102862, 1, 0, 0.557607,-0.00228501) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730437,-0.000360093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479273,-0.0169875) , 
3, 87.0556, 1, 0, 0.687466,-0.00106566) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794724,0.0146873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000371987,0.0132083) , 
0, 0.00314692, 1, 0, 0.174862,0.0018226) , 
2, 0.166601, 1, 0, 0.468097,0.000170367) , 
4, 0.0104563, 1, 0, 0.495812,-0.00058989)    );
  // itree = 875
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95273,0.0324933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314329,-0.00914219) , 
2, 0.0238037, 1, 0, 0.585451,-0.00151447) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488998,0.00765208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298277,-0.00756313) , 
3, 75.5848, 1, 0, 0.437842,0.00058879) , 
5, 0.00936818, 1, 0, 0.478635,7.53608e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602936,-0.0218847) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781545,0.00877071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48135,-0.00629299) , 
2, 0.142848, 1, 0, 0.630535,-0.000106047) , 
6, 0.0328117, 1, 0, 0.622882,-0.00229158) , 
6, 0.0313143, 1, 0, 0.50457,-0.00040582)    );
  // itree = 876
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671358,0.0282055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000118132,-0.0145204) , 
2, 0.0714002, 1, 0, 0.225614,0.000320928) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812851,-0.0100685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884026,0.00376044) , 
7, 0.000231225, 1, 0, 0.833823,-0.00239103) , 
7, 6.4789e-05, 1, 0, 0.545914,-0.00110727) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916464,0.0101955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000153687,-0.00751111) , 
0, 0.00423069, 1, 0, 0.633219,0.0022662) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805984,-0.0222651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000205745,0.0176381) , 
0, 0.00473329, 1, 0, 0.110386,-0.00090008) , 
4, 0.0174081, 1, 0, 0.451005,0.00116271) , 
3, 37.6646, 1, 0, 0.494149,0.000130816)    );
  // itree = 877
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957653,0.00831868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000241927,-0.00814698) , 
0, 0.00315455, 1, 0, 0.600168,0.00121512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00407259,-0.0178659) , 
2, 0.309477, 1, 0, 0.4854,0.00068023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771533,-0.0244157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578159,0.00606741) , 
2, 0.118902, 1, 0, 0.662241,-0.00395331) , 
6, 0.0347914, 1, 0, 0.496508,0.000389189)    );
  // itree = 878
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864392,0.0323789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340596,0.00704993) , 
4, 0.0070042, 1, 0, 0.614545,0.00264886) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00122461,-0.0147026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000270248,0.0270575) , 
4, 0.0121785, 1, 0, 0.000536132,-0.000575737) , 
2, 0.0714177, 1, 0, 0.182055,0.000377547) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94377,-0.000670429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5927,-0.0107785) , 
2, 0.118623, 1, 0, 0.833989,-0.00195645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640735,-0.0188384) , 
3, 122.941, 1, 0, 0.823949,-0.00260377) , 
7, 6.51624e-05, 1, 0, 0.50123,-0.00110489)    );
  // itree = 879
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567595,0.00177891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54935,-0.0222857) , 
3, 11.2578, 1, 0, 0.559674,-0.00264243) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454561,-0.0185266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517108,0.000634665) , 
5, 0.00679359, 1, 0, 0.508714,-0.000510683) , 
3, 19.7021, 1, 0, 0.521758,-0.00105633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143983,0.0239927) , 
3, 137.926, 1, 0, 0.496377,-0.00077131)    );
  // itree = 880
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850091,-0.00852947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602158,-0.0190742) , 
2, 0.0747477, 1, 0, 0.786225,-0.00390575) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0289938,-0.00427557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703196,0.0135496) , 
7, 0.000199119, 1, 0, 0.15521,0.00092722) , 
2, 0.1428, 1, 0, 0.548365,-0.00208397) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755584,0.0132306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.457889,-0.00145578) , 
4, 0.0139371, 1, 0, 0.616331,0.00175496) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6079,-0.00900433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000385111,0.0155976) , 
0, 0.00314221, 1, 0, 0.0988513,-0.00101375) , 
2, 0.21426, 1, 0, 0.427096,0.000742482) , 
3, 50.4125, 1, 0, 0.495273,-0.000846535)    );
  // itree = 881
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864488,0.0196287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766762,0.0177113) , 
5, 0.00527598, 1, 0, 0.782749,0.00222824) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00583169,-0.00983984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206192,0.0106227) , 
6, 0.0178916, 1, 0, 0.0396251,-0.000404329) , 
2, 0.0714111, 1, 0, 0.363921,0.000744513) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997423,0.0246075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678942,0.0412321) , 
0, 0.00156543, 1, 0, 0.85251,0.00291137) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922414,-0.0103227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000195848,-0.0092786) , 
0, 0.00315479, 1, 0, 0.561952,-0.00320216) , 
2, 0.0238037, 1, 0, 0.60646,-0.00226569) , 
6, 0.0208768, 1, 0, 0.492272,-0.000848479)    );
  // itree = 882
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751258,0.00314323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641033,-0.0070526) , 
3, 37.6971, 1, 0, 0.692385,-0.000718591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330802,-0.024034) , 
2, 0.203927, 1, 0, 0.668657,-0.00136493) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000257872,0.006461) , 
2, 0.3503, 1, 0, 0.000141025,-0.000113097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423531,0.0115265) , 
7, 0.000196815, 1, 0, 0.0496297,0.000580856) , 
2, 0.237972, 1, 0, 0.497062,-0.000825554)    );
  // itree = 883
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944841,-0.020684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979225,0.0100356) , 
5, 0.00619745, 1, 0, 0.97539,0.000219352) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941287,-0.00743762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513995,-0.013729) , 
2, 0.16599, 1, 0, 0.871587,-0.0064481) , 
0, 0.000450897, 1, 0, 0.921871,-0.00321827) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132236) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000589919,0.0181173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131578) , 
5, 0.0169457, 1, 0, 0.00023784,7.01495e-06) , 
4, 0.0104563, 1, 0, 0.000179126,-0.000113593) , 
0, 0.00315669, 1, 0, 0.486525,-0.00175183)    );
  // itree = 884
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955304,0.000233455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847337,0.0208598) , 
0, 0.00134126, 1, 0, 0.92734,0.00233343) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000869136,0.0200581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.29263e-05,-0.011206) , 
3, 25.1366, 1, 0, 0.000271343,-6.72554e-05) , 
0, 0.00315669, 1, 0, 0.401027,0.000970519) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961031,0.00430039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704688,-0.0163442) , 
5, 0.0163927, 1, 0, 0.887344,-0.00165992) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650267,-0.0265135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857538,0.00155886) , 
6, 0.0351518, 1, 0, 0.763469,-0.00867136) , 
4, 0.0170252, 1, 0, 0.845515,-0.00402749) , 
7, 0.00019548, 1, 0, 0.497722,-0.000116762)    );
  // itree = 885
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.400021,-0.00735337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.326026,0.0144271) , 
6, 0.0231961, 1, 0, 0.382001,-0.000592823) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914746,-0.00908576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563034,-0.0196937) , 
2, 0.189713, 1, 0, 0.838451,-0.00525768) , 
7, 0.000166891, 1, 0, 0.490969,-0.00170646) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820614,0.0462638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48079,0.0161838) , 
2, 0.165977, 1, 0, 0.671498,0.00410371) , 
6, 0.0347919, 1, 0, 0.502604,-0.00133202)    );
  // itree = 886
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844783,-0.000119448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590396,0.0411461) , 
2, 0.051008, 1, 0, 0.809113,0.000788393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812295,-0.0230999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856365,-0.00318742) , 
4, 0.0123537, 1, 0, 0.84206,-0.00302741) , 
6, 0.0209152, 1, 0, 0.82518,-0.0010725) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0693149,-0.00113786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770468,0.0162421) , 
7, 0.000109127, 1, 0, 0.380647,0.00246103) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233281,-0.0136977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20588,0.00325695) , 
3, 25.2263, 1, 0, 0.212985,-0.000662496) , 
4, 0.0156566, 1, 0, 0.2909,0.000789043) , 
2, 0.0714198, 1, 0, 0.504233,4.57469e-05)    );
  // itree = 887
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972612,0.0232834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91585,-0.00233611) , 
2, 0.00789388, 1, 0, 0.947147,0.000776281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112366,-0.015496) , 
2, 0.0237805, 1, 0, 0.466255,-0.00317854) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660475,0.00788277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0170471,-0.0067923) , 
2, 0.166567, 1, 0, 0.394885,0.000410434) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787032,-0.0154956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872047,7.24461e-05) , 
4, 0.0153466, 1, 0, 0.843168,-0.00229106) , 
7, 0.000196529, 1, 0, 0.508362,-0.000273414) , 
4, 0.00700193, 1, 0, 0.502335,-0.000689234)    );
  // itree = 888
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.477385,-0.0110382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679319,0.00536113) , 
6, 0.0243686, 1, 0, 0.560923,-0.00040433) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448997,-0.00481594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614843,-0.0232833) , 
6, 0.0261137, 1, 0, 0.510521,-0.00292929) , 
3, 36.0322, 1, 0, 0.542635,-0.00132051) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934267,0.0122192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930497,-0.0047078) , 
6, 0.0331164, 1, 0, 0.93358,0.00272482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000185707,-0.0073268) , 
0, 0.00314692, 1, 0, 0.409073,0.00108897) , 
3, 63.0581, 1, 0, 0.498473,-0.000523825)    );
  // itree = 889
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.219799,0.0189883) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814198,-0.00365822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492182,-0.0155888) , 
3, 110.956, 1, 0, 0.793468,-0.00112703) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.352832,0.0050282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.175691,-0.00600523) , 
4, 0.016083, 1, 0, 0.257644,0.000265904) , 
2, 0.0952043, 1, 0, 0.514106,-0.000400796) , 
4, 0.00348177, 1, 0, 0.499372,-0.000197491)    );
  // itree = 890
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861873,-0.0148372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935308,0.0145038) , 
5, 0.00755242, 1, 0, 0.908411,-0.000511736) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696018,-0.0276905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623726,-0.00877063) , 
4, 0.0155478, 1, 0, 0.660356,-0.00588604) , 
5, 0.0132108, 1, 0, 0.820168,-0.00242358) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0400865,-0.0120594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66534,0.00992409) , 
6, 0.0191276, 1, 0, 0.487682,0.0011191) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.54428,-0.0105764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000197301,0.00559533) , 
0, 0.0031564, 1, 0, 0.086211,-0.00148569) , 
2, 0.214269, 1, 0, 0.282095,-0.000214772) , 
2, 0.0714177, 1, 0, 0.497946,-0.00110085)    );
  // itree = 891
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924062,-0.0143853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847332,0.0461083) , 
0, 0.000446208, 1, 0, 0.887683,0.00276482) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000119019,0.00305972) , 
0, 0.0174352, 1, 0, 8.62183e-05,-0.00011465) , 
0, 0.00315552, 1, 0, 0.165659,0.000422487) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932886,-0.00516997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844798,0.00815838) , 
2, 0.110677, 1, 0, 0.918428,-0.000801279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.36895,-0.0130597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601209,0.00766366) , 
6, 0.0335181, 1, 0, 0.440808,-0.00494666) , 
2, 0.166072, 1, 0, 0.811731,-0.00172733) , 
7, 5.73802e-05, 1, 0, 0.496161,-0.000677267)    );
  // itree = 892
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951871,-0.00811561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749835,-0.0143402) , 
0, 0.00111109, 1, 0, 0.902307,-0.00485272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131689) , 
0, 0.00335063, 1, 0, 0.564627,-0.00309343) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785522,0.0165163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298773,-0.00108212) , 
5, 0.0158836, 1, 0, 0.53079,0.00150661) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485969,-0.0199575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375498,0.00645869) , 
3, 70.2659, 1, 0, 0.427256,-0.00100053) , 
3, 37.8338, 1, 0, 0.471026,5.94026e-05) , 
5, 0.0102703, 1, 0, 0.498316,-0.000859819)    );
  // itree = 893
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863628,0.0313428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894752,-0.0194119) , 
6, 0.017486, 1, 0, 0.882071,-0.00238255) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862784,-0.0602914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758982,-0.00729012) , 
3, 70.667, 1, 0, 0.803251,-0.00937687) , 
3, 50.3036, 1, 0, 0.853714,-0.00489887) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.118243,-0.00289272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800521,-0.00652039) , 
7, 0.000141275, 1, 0, 0.29774,-0.00112236) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571014,0.071198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624927,0.00147768) , 
6, 0.034213, 1, 0, 0.60821,0.00208246) , 
6, 0.0330522, 1, 0, 0.340734,-0.000678555) , 
2, 0.0476132, 1, 0, 0.502675,-0.00201085)    );
  // itree = 894
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925291,-0.00753872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.120291,-0.0148551) , 
2, 0.0236962, 1, 0, 0.476911,-0.00353069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.463628,-0.00156328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676959,0.0140311) , 
6, 0.0299027, 1, 0, 0.494373,0.000213923) , 
4, 0.00696167, 1, 0, 0.49151,-0.000400184) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941014,0.00517943) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473736,-0.00619139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429263,-0.0294419) , 
1, 1.10524, 1, 0, 0.45841,-0.00648442) , 
0, 0.00156071, 1, 0, 0.617798,-0.00414437) , 
6, 0.0330521, 1, 0, 0.507281,-0.000867774)    );
  // itree = 895
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89859,0.0109796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867597,-0.0547711) , 
3, 66.0013, 1, 0, 0.892213,-0.000819808) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739346,0.012586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221964,-0.000480553) , 
2, 0.114508, 1, 0, 0.435674,0.000982728) , 
2, 0.0238066, 1, 0, 0.532998,0.00059847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.175124,-0.00899286) , 
3, 126.022, 1, 0, 0.50107,0.000292056)    );
  // itree = 896
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976607,-0.00739325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958392,0.0179873) , 
0, 0.0005077, 1, 0, 0.968063,0.00154293) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867041,-0.026314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949041,-0.00811697) , 
5, 0.0115686, 1, 0, 0.937286,-0.00560365) , 
4, 0.010863, 1, 0, 0.952973,-0.00196102) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00102818,0.00428546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0039046,-0.0272407) , 
6, 0.0173983, 1, 0, 0.00184263,-0.000682064) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519419,0.00931252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.275522,-0.00917652) , 
3, 100.526, 1, 0, 0.479408,0.00132199) , 
6, 0.0243569, 1, 0, 0.219176,0.000229952) , 
0, 0.0015782, 1, 0, 0.503275,-0.00061831)    );
  // itree = 897
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870984,0.0133599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131634) , 
0, 0.0046963, 1, 0, 0.276549,0.000829194) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936002,-0.0123514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000561062,0.0112718) , 
0, 0.00315669, 1, 0, 0.56089,-0.00238133) , 
6, 0.0154924, 1, 0, 0.447595,-0.00110211) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810279,0.0204715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500227,-0.00512691) , 
2, 0.09556, 1, 0, 0.615557,0.000333239) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810429,0.00603198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514215,0.0612603) , 
2, 0.0945871, 1, 0, 0.635422,0.0039813) , 
1, 1.19152, 1, 0, 0.621562,0.00143595) , 
6, 0.0295738, 1, 0, 0.489701,-0.000487811)    );
  // itree = 898
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231521,0.0303169) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.542584,0.00100269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392099,-0.0102597) , 
3, 63.0525, 1, 0, 0.492185,-0.000624924) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819838,-0.000758413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557831,-0.0124313) , 
2, 0.0952486, 1, 0, 0.653057,-0.00404786) , 
6, 0.033052, 1, 0, 0.511999,-0.00104653) , 
4, 0.0034831, 1, 0, 0.498771,-0.000765461)    );
  // itree = 899
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917184,-0.0165475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951243,-0.00240587) , 
5, 0.00672078, 1, 0, 0.946792,-0.00148931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556798,-0.0118273) , 
0, 0.00223229, 1, 0, 0.927913,-0.0023009) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00123929,0.00917321) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139666) , 
6, 0.0226089, 1, 0, 0,-0.000205782) , 
4, 0.0121795, 1, 0, 0.000369251,-2.40591e-05) , 
0, 0.0031564, 1, 0, 0.494999,-0.00123822)    );
  // itree = 900
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89669,-0.00292696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773044,0.014058) , 
5, 0.00983351, 1, 0, 0.826323,0.000803004) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824014,-0.00675149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000376331,0.00566113) , 
0, 0.00315669, 1, 0, 0.237621,-0.00109333) , 
2, 0.0714002, 1, 0, 0.481893,-0.000306477) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944357,0.0111555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541159,0.019685) , 
0, 0.00155258, 1, 0, 0.687545,0.0034932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55438,-0.00124917) , 
3, 73.7641, 1, 0, 0.64736,0.00231755) , 
6, 0.0330521, 1, 0, 0.502,1.23907e-05)    );
  // itree = 901
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93145,-0.0154838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00102369,4.08242e-05) , 
0, 0.00156547, 1, 0, 0.272413,-0.00161926) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770449,0.0165604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218487,-0.0105556) , 
4, 0.0139181, 1, 0, 0.583493,0.00181478) , 
6, 0.0154934, 1, 0, 0.457841,0.000427698) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.255237,-0.0141406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749389,0.000635171) , 
4, 0.015688, 1, 0, 0.626755,-0.00173333) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62689,-0.0288697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628457,0.00309271) , 
1, 1.23777, 1, 0, 0.627639,-0.00961262) , 
1, 1.21264, 1, 0, 0.626948,-0.00345456) , 
6, 0.0295743, 1, 0, 0.49883,-0.000513295)    );
  // itree = 902
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.581821,0.0037982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572909,-0.0169557) , 
7, 9.15347e-05, 1, 0, 0.580335,-0.00118268) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0145062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823559,0.0074421) , 
7, 6.59998e-05, 1, 0, 0.303814,0.000520162) , 
5, 0.010291, 1, 0, 0.404446,-9.95375e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93522,0.0248142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881432,-0.0177214) , 
2, 0.0448056, 1, 0, 0.897184,-0.00455097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485716,0.0160325) , 
2, 0.235269, 1, 0, 0.834158,-0.00265529) , 
7, 0.000196529, 1, 0, 0.498269,-0.000657558)    );
  // itree = 903
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.467208,-0.00394302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854864,0.00585822) , 
7, 0.000199185, 1, 0, 0.551041,2.91848e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617068,-0.00123898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397024,-0.0447797) , 
4, 0.0143372, 1, 0, 0.516061,-0.00364063) , 
3, 43.2329, 1, 0, 0.546999,-0.000418108) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.255952,0.00160829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49123,-0.0102231) , 
6, 0.0183236, 1, 0, 0.314468,-0.000492889) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524589,0.0376137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.574835,0.0156774) , 
4, 0.0139117, 1, 0, 0.55596,0.00283962) , 
6, 0.022636, 1, 0, 0.431232,0.00111842) , 
3, 50.4388, 1, 0, 0.49677,0.000248555)    );
  // itree = 904
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952626,0.0181496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962204,0.0674936) , 
0, 0.00120001, 1, 0, 0.954136,0.00310812) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.228723,-0.0129587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.246657,0.00489321) , 
3, 7.19952, 1, 0, 0.242984,-0.000555458) , 
0, 0.00157523, 1, 0, 0.549061,0.00102133) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.492928,-0.0371758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530798,0.0113082) , 
3, 40.9121, 1, 0, 0.518819,-0.00368095) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.460546,-0.0090088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441195,0.00370175) , 
4, 0.00870096, 1, 0, 0.445021,4.39313e-05) , 
3, 48.638, 1, 0, 0.459239,-0.000673686) , 
3, 37.8297, 1, 0, 0.499258,8.15194e-05)    );
  // itree = 905
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997152,-0.0708617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869159,-0.015685) , 
0, 7.50006e-05, 1, 0, 0.949779,-0.00445941) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.252148,-0.00547908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250099,0.0458221) , 
3, 25.2, 1, 0, 0.251528,0.000138652) , 
0, 0.00157523, 1, 0, 0.552759,-0.00184499) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803217,0.043049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66918,0.0115532) , 
4, 0.0104704, 1, 0, 0.7172,0.00303422) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.179311,-0.0107826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169574,0.00722291) , 
4, 0.0156584, 1, 0, 0.173676,-0.00121342) , 
2, 0.142835, 1, 0, 0.456252,0.000994912) , 
3, 37.8277, 1, 0, 0.499364,-0.00027374)    );
  // itree = 906
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.311477,0.106301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6352,-0.0112089) , 
5, 0.00412015, 1, 0, 0.565933,-0.000802148) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943001,-0.00338228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568249,0.0316492) , 
0, 0.00116836, 1, 0, 0.710084,0.00306459) , 
5, 0.00960059, 1, 0, 0.633541,0.00101138) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00122603,-0.0236506) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753396,-0.00841481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.270985,0.012572) , 
4, 0.0168274, 1, 0, 0.492205,-0.000494812) , 
4, 0.0121845, 1, 0, 0.399168,-0.00127877) , 
5, 0.0134417, 1, 0, 0.509719,-0.000198528)    );
  // itree = 907
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.408092,0.0114258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577231,-0.00815484) , 
6, 0.0208035, 1, 0, 0.472661,-0.000271576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860862,0.0323863) , 
7, 0.000199184, 1, 0, 0.556748,0.00125269) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961252,-0.00580945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876313,-0.0085934) , 
0, 0.00102988, 1, 0, 0.924537,-0.00305698) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000812856,0.00753051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131907) , 
2, 0.166646, 1, 0, 0.000266857,-2.51157e-05) , 
0, 0.00315479, 1, 0, 0.495485,-0.00164957) , 
3, 12.6113, 1, 0, 0.505113,-0.00119347)    );
  // itree = 908
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561695,-0.0216502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505731,-0.0361956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.36718,0.00676392) , 
3, 37.872, 1, 0, 0.427599,-0.00246085) , 
6, 0.00889429, 1, 0, 0.459757,-0.00525972) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882508,0.0178542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858796,-0.0363042) , 
2, 0.0113351, 1, 0, 0.871198,-0.0034489) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53818,0.0489668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430511,-0.000407861) , 
4, 0.00978272, 1, 0, 0.442082,0.000449086) , 
2, 0.0238059, 1, 0, 0.511214,-0.00017889) , 
4, 0.00695902, 1, 0, 0.503532,-0.000937367)    );
  // itree = 909
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866173,0.0375469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815935,-0.000286164) , 
4, 0.0070042, 1, 0, 0.826533,0.000883358) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828123,-0.010189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109233,-0.00250707) , 
0, 0.00157265, 1, 0, 0.236544,-0.00155086) , 
2, 0.0714177, 1, 0, 0.48434,-0.000528484) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644021,0.00859168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801001,-0.0308221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44541,-0.00275246) , 
2, 0.166641, 1, 0, 0.642384,-0.00965433) , 
6, 0.0340475, 1, 0, 0.642814,-0.00668275) , 
6, 0.0330522, 1, 0, 0.503732,-0.00128155)    );
  // itree = 910
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911678,-0.0505921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999014,0.0201127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87883,-0.0106305) , 
0, 7.5153e-05, 1, 0, 0.957857,-0.00222488) , 
4, 0.00492072, 1, 0, 0.954552,-0.00315376) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547379,-0.00507409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430323,0.0144095) , 
2, 0.0136348, 1, 0, 0.449405,0.0016253) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791514,-0.00946022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000183222,-0.00651498) , 
0, 0.00308387, 1, 0, 0.128748,-0.00112092) , 
2, 0.0952312, 1, 0, 0.214642,-0.000385295) , 
0, 0.00157834, 1, 0, 0.497678,-0.00144431)    );
  // itree = 911
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98499,-0.00126437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929462,-0.0119532) , 
0, 0.0017804, 1, 0, 0.976839,-0.00118203) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671333,-0.0173885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89227,0.00487453) , 
7, 0.000236853, 1, 0, 0.780587,-0.00730741) , 
2, 0.118626, 1, 0, 0.931345,-0.002602) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000692419,0.0108376) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000176772,-0.0104803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 7.20696e-05,-0.00364482) , 
0, 0.0145748, 1, 0, 0.000102394,-0.000174031) , 
3, 25.1622, 1, 0, 0.000261648,-6.22294e-05) , 
0, 0.00315247, 1, 0, 0.505311,-0.00143988)    );
  // itree = 912
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905379,0.0505404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902716,-0.0331511) , 
3, 32.8451, 1, 0, 0.904714,-0.000221856) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904763,0.0526731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832945,0.0582998) , 
2, 0.00906808, 1, 0, 0.866502,0.0036298) , 
3, 45.9819, 1, 0, 0.889584,0.00130322) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897977,-0.0025395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860418,-0.0112942) , 
3, 96.6368, 1, 0, 0.893673,-0.00223946) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00199737,0.0255365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000108477,-0.00678578) , 
4, 0.0121856, 1, 0, 0.000655181,0.000219198) , 
0, 0.00315669, 1, 0, 0.401847,-0.000885362) , 
2, 0.0238066, 1, 0, 0.496221,-0.000461885)    );
  // itree = 913
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86635,-0.00511285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579845,-0.0141556) , 
3, 100.61, 1, 0, 0.839929,-0.00162391) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.312925,-0.0005702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115263,0.0317099) , 
3, 126.115, 1, 0, 0.292235,0.00029288) , 
2, 0.0476074, 1, 0, 0.47283,-0.000339158) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7624,-0.0407856) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.555861,-0.0239417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57843,-0.000107683) , 
6, 0.0342182, 1, 0, 0.571324,-0.00447891) , 
2, 0.0718166, 1, 0, 0.626067,-0.0077846) , 
6, 0.0330524, 1, 0, 0.491459,-0.00124428)    );
  // itree = 914
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.264292,0.00120268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397999,-0.0241425) , 
6, 0.0146192, 1, 0, 0.282614,-0.00068937) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770123,0.0167624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.285318,-0.0081764) , 
4, 0.012144, 1, 0, 0.574009,0.00129036) , 
6, 0.0161594, 1, 0, 0.425772,0.00028324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64719,-0.03519) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615377,0.0269312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616414,-0.00659438) , 
6, 0.0297915, 1, 0, 0.616132,-0.000403873) , 
6, 0.0270923, 1, 0, 0.619092,-0.00151859) , 
6, 0.0260981, 1, 0, 0.496006,-0.000371378)    );
  // itree = 915
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549659,0.00466677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550605,-0.0119019) , 
3, 3.86808, 1, 0, 0.550188,-0.00184444) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.221434,0.00181419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845249,0.0107198) , 
7, 6.4789e-05, 1, 0, 0.547359,0.00160119) , 
3, 9.0153, 1, 0, 0.548065,0.000741553) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972899,-0.00461396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881325,-0.00986566) , 
0, 0.000438724, 1, 0, 0.925553,-0.00372424) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000280175,-0.00750185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013098) , 
4, 0.0173955, 1, 0, 0.000119207,-0.000166253) , 
0, 0.00315552, 1, 0, 0.45515,-0.00191569) , 
3, 37.8408, 1, 0, 0.496219,-0.000741154)    );
  // itree = 916
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82577,0.0408715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131704) , 
0, 0.00310681, 1, 0, 0.143165,0.00110851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537897,-0.00420023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.37782,-0.0262072) , 
1, 2.76018, 1, 0, 0.504592,-0.00176268) , 
6, 0.00927887, 1, 0, 0.407744,-0.000993317) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980473,0.0120331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924696,-0.0148041) , 
4, 0.0146492, 1, 0, 0.946039,-0.00155617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884036,0.0144606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000255251,0.00396355) , 
0, 0.00457264, 1, 0, 0.466731,0.00287789) , 
0, 0.00157095, 1, 0, 0.622595,0.001436) , 
6, 0.0243555, 1, 0, 0.498496,3.2813e-05)    );
  // itree = 917
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981732,-0.00740418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.88979,-0.00986908) , 
0, 0.000450897, 1, 0, 0.934423,-0.00343543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000388588,0.00541415) , 
2, 0.14284, 1, 0, 0.000284676,-8.02067e-05) , 
0, 0.0031564, 1, 0, 0.536861,-0.00200747) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900593,0.0137501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000530751,0.00142326) , 
0, 0.00314221, 1, 0, 0.299036,0.00215758) , 
3, 100.893, 1, 0, 0.502171,-0.00139995)    );
  // itree = 918
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735163,-0.00736095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611256,0.00135082) , 
5, 0.00944843, 1, 0, 0.650181,-0.000382686) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.759024,-0.0192713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766187,0.037663) , 
6, 0.0352931, 1, 0, 0.76075,-0.00333885) , 
6, 0.0313195, 1, 0, 0.670358,-0.000922113) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000379293,0.0191015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000171734,-0.0136174) , 
6, 0.0190704, 1, 0, 0.000291281,-0.000345422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488237,0.0373778) , 
7, 0.000196464, 1, 0, 0.0532916,0.000815422) , 
2, 0.238055, 1, 0, 0.504667,-0.000455562)    );
  // itree = 919
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592937,-0.000481133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770202,-0.0257315) , 
7, 0.000122579, 1, 0, 0.619322,-0.00184239) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760531,0.0312107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0792829,-0.000605009) , 
4, 0.0133618, 1, 0, 0.187752,0.000628181) , 
4, 0.0121977, 1, 0, 0.401312,-0.000594367) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969245,0.000603033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45621,-0.0264126) , 
5, 0.0165012, 1, 0, 0.858048,-0.00664532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885202,-0.0184333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808953,0.0362112) , 
0, 0.00201757, 1, 0, 0.843841,0.0011027) , 
4, 0.0167184, 1, 0, 0.852687,-0.00372167) , 
7, 0.00019548, 1, 0, 0.497941,-0.00126385)    );
  // itree = 920
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.211583,-0.0203013) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.265603,0.00322936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844916,-0.0093085) , 
7, 7.60623e-05, 1, 0, 0.564318,-0.00155398) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544193,0.0220504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463318,-0.0032712) , 
4, 0.0104402, 1, 0, 0.486869,0.000385299) , 
3, 25.1892, 1, 0, 0.510487,-0.000206076) , 
5, 0.00341826, 1, 0, 0.496384,-0.000421881)    );
  // itree = 921
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935202,-0.000182916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968961,0.0165115) , 
7, 6.45951e-05, 1, 0, 0.956955,0.00210288) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00230706,-0.0132993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0681185,0.0141215) , 
5, 0.0119313, 1, 0, 0.0497791,-0.000336003) , 
0, 0.00157834, 1, 0, 0.42368,0.000669205) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810199,-0.0665033) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632873,0.00320234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548814,-0.0131355) , 
3, 50.0652, 1, 0, 0.593535,-0.000644687) , 
2, 0.0238001, 1, 0, 0.621126,-0.00195978) , 
6, 0.0260947, 1, 0, 0.495437,-0.000286228)    );
  // itree = 922
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889942,0.0756209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93414,0.0181167) , 
6, 0.0105492, 1, 0, 0.922926,0.00120435) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851891,-0.05925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780043,-0.0055251) , 
2, 0.0160335, 1, 0, 0.791453,-0.00347024) , 
2, 0.0102016, 1, 0, 0.825606,-0.0022559) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.404538,0.0219678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.242298,-0.000560713) , 
5, 0.0153318, 1, 0, 0.317713,0.00181141) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.242384,-0.00480044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557906,0.0127243) , 
6, 0.03305, 1, 0, 0.288558,-0.000272937) , 
3, 12.6123, 1, 0, 0.292557,1.30184e-05) , 
2, 0.0714198, 1, 0, 0.50339,-0.000884391)    );
  // itree = 923
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957228,-0.0114142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24117,0.000177394) , 
0, 0.00157834, 1, 0, 0.540812,-0.00116519) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595476,0.0141736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375883,-0.00119121) , 
4, 0.0139009, 1, 0, 0.480379,0.00119535) , 
3, 72.0647, 1, 0, 0.528341,-0.000678068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173275,-0.0120913) , 
3, 126.114, 1, 0, 0.497481,-0.000936219)    );
  // itree = 924
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965379,0.0358772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.236395,-0.00357152) , 
0, 0.00157095, 1, 0, 0.549951,0.000632195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933081,-0.017538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000401892,0.00589805) , 
0, 0.00315669, 1, 0, 0.554228,-0.00367071) , 
3, 10.8145, 1, 0, 0.552928,-0.00236289) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443357,-0.0162746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508526,0.00157911) , 
5, 0.00679359, 1, 0, 0.499612,-0.000195709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155086,0.0280757) , 
3, 135.124, 1, 0, 0.454982,0.000266463) , 
3, 37.8381, 1, 0, 0.498697,-0.000907051)    );
  // itree = 925
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899323,-0.0112275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967269,0.0296775) , 
7, 0.000204091, 1, 0, 0.908751,-0.00132129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.319941,-0.159113) , 
4, 0.0173051, 1, 0, 0.844143,-0.00243429) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696863,0.0152707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131939) , 
0, 0.00314529, 1, 0, 0.101005,0.000904678) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.827088,-0.0153768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453457,2.07411e-05) , 
2, 0.0906735, 1, 0, 0.538236,-0.00121992) , 
6, 0.0208767, 1, 0, 0.345277,-0.00028229) , 
2, 0.0476074, 1, 0, 0.50215,-0.000959005)    );
  // itree = 926
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920704,-0.0088327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826564,-0.0204801) , 
4, 0.00937151, 1, 0, 0.900973,-0.00527901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132554) , 
0, 0.00333467, 1, 0, 0.581634,-0.00349006) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510905,-0.00890004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507029,0.00491245) , 
3, 7.20821, 1, 0, 0.507502,0.000432301) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506835,0.0118954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160043,-0.0245763) , 
2, 0.190379, 1, 0, 0.347092,-0.00140537) , 
3, 75.6583, 1, 0, 0.463641,-7.01727e-05) , 
5, 0.010273, 1, 0, 0.496691,-0.00102809)    );
  // itree = 927
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66294,0.0151299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195024,-0.000862515) , 
6, 0.0087964, 1, 0, 0.367499,0.00122343) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.356604,-0.01483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0898688,0.0246401) , 
5, 0.00670509, 1, 0, 0.144312,-0.000130924) , 
4, 0.00522239, 1, 0, 0.181119,9.24318e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961542,-0.00950945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506112,-0.01641) , 
2, 0.0946049, 1, 0, 0.877693,-0.00528227) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.837103,0.0142233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750073,-0.0101324) , 
6, 0.0298233, 1, 0, 0.783526,-0.00124727) , 
6, 0.0247926, 1, 0, 0.817282,-0.00269368) , 
7, 6.37937e-05, 1, 0, 0.501464,-0.00131054)    );
  // itree = 928
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.449374,-0.0128261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.28772,0.00124591) , 
5, 0.00629628, 1, 0, 0.316172,-0.000386168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933023,-0.00881876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349359,-0.0168172) , 
2, 0.188465, 1, 0, 0.848456,-0.00481638) , 
7, 0.000121963, 1, 0, 0.459884,-0.00158229) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987698,0.0315786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880032,-0.00907508) , 
4, 0.0169003, 1, 0, 0.930628,-0.000167921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.469822,0.00633925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521271,0.0450459) , 
6, 0.0340503, 1, 0, 0.494767,0.00407951) , 
0, 0.00156342, 1, 0, 0.643722,0.00262795) , 
6, 0.0313143, 1, 0, 0.491512,-0.000857949)    );
  // itree = 929
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922756,0.0252029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.070716,-0.00838581) , 
2, 0.0237688, 1, 0, 0.416941,-0.000730692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645452,-0.0705179) , 
4, 0.00629793, 1, 0, 0.458145,-0.00298633) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.746157,-0.00526057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665945,0.0128351) , 
3, 24.8686, 1, 0, 0.691765,0.00138589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915228,-0.0156785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224503,-0.00130139) , 
0, 0.00157834, 1, 0, 0.359463,-0.00101624) , 
4, 0.0140018, 1, 0, 0.498476,-1.13543e-05) , 
4, 0.0069609, 1, 0, 0.492637,-0.000442054)    );
  // itree = 930
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.720643,0.0219864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627279,0.024675) , 
3, 49.258, 1, 0, 0.682878,0.00495839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0158778) , 
4, 0.00696206, 1, 0, 0.201252,0.00109189) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992621,-0.00392648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828604,-0.0120547) , 
0, 0.000224425, 1, 0, 0.904252,-0.00393815) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.013135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000348171,0.0574411) , 
2, 0.309181, 1, 0, 0.000126304,-2.17048e-05) , 
0, 0.00472569, 1, 0, 0.586761,-0.00256286) , 
6, 0.0121818, 1, 0, 0.5005,-0.00174508)    );
  // itree = 931
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.565513,0.0160255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584091,-0.0188366) , 
3, 3.71042, 1, 0, 0.572208,-0.00260491) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636186,0.0162086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474315,-0.00129741) , 
4, 0.0121916, 1, 0, 0.542008,0.000754836) , 
3, 6.00417, 1, 0, 0.545365,0.000381284) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593917,-0.00589635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757653,-0.0590515) , 
5, 0.0151559, 1, 0, 0.619305,-0.00395885) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874542,0.0692612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000143991,0.00406416) , 
0, 0.00631105, 1, 0, 0.158384,0.0017249) , 
5, 0.0167462, 1, 0, 0.416338,-0.001456) , 
3, 63.0563, 1, 0, 0.502154,-0.000234018)    );
  // itree = 932
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.528979,-0.0265005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615997,-0.0261376) , 
4, 0.00372796, 1, 0, 0.585706,-0.00971716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.300931,-0.012374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794718,-0.0144947) , 
1, 2.32675, 1, 0, 0.487198,-0.00227874) , 
6, 0.012203, 1, 0, 0.523663,-0.00503223) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815101,0.0576614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769123,-0.00144937) , 
2, 0.0362723, 1, 0, 0.805173,0.00219706) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90054,-0.00516006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00025033,-0.000389618) , 
0, 0.0031564, 1, 0, 0.376647,-0.000991173) , 
2, 0.0476118, 1, 0, 0.484785,-0.000186626) , 
4, 0.00870096, 1, 0, 0.492974,-0.00120727)    );
  // itree = 933
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784937,-0.0205802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952991,0.00191089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933867,-0.00849163) , 
3, 24.589, 1, 0, 0.940158,-0.00189497) , 
6, 0.00882949, 1, 0, 0.932764,-0.0024415) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132886) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000840836,0.0194853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131893) , 
4, 0.0121795, 1, 0, 0.000250413,1.03296e-05) , 
2, 0.118989, 1, 0, 0.000192052,-0.000144116) , 
0, 0.00315669, 1, 0, 0.507826,-0.00139467)    );
  // itree = 934
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.268964,-0.0239338) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.804169,-0.0102564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70781,0.00788517) , 
3, 49.711, 1, 0, 0.766016,-0.000883156) , 
6, 0.00697172, 1, 0, 0.730858,-0.00129226) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.727832,0.0365341) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202375,0.00983886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0417178,-0.0067896) , 
2, 0.214223, 1, 0, 0.0694387,-2.71862e-06) , 
0, 0.0015782, 1, 0, 0.136453,0.000945096) , 
2, 0.166626, 1, 0, 0.502372,-0.000432233)    );
  // itree = 935
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989668,0.00347064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782259,-0.011083) , 
2, 0.094901, 1, 0, 0.949025,-0.000948789) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94341,0.0198985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000270531,-0.0151406) , 
0, 0.00245143, 1, 0, 0.429636,0.00225815) , 
0, 0.00125561, 1, 0, 0.670331,0.000771989) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.34596,-0.0275186) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.252943,0.0323879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.100541,-0.00591036) , 
2, 0.15323, 1, 0, 0.136531,-8.60464e-05) , 
2, 0.0715746, 1, 0, 0.173632,-0.00118348) , 
5, 0.016958, 1, 0, 0.499216,9.83229e-05)    );
  // itree = 936
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653951,0.0180028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490122,-0.00253773) , 
4, 0.0121751, 1, 0, 0.561588,0.000484575) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646419,-0.0277105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453945,0.0105308) , 
5, 0.0133374, 1, 0, 0.55152,-0.00326453) , 
3, 23.4267, 1, 0, 0.557983,-0.000857715) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913252,0.0284445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934627,-2.62239e-05) , 
7, 0.000142008, 1, 0, 0.925441,0.00280732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000352241,-0.00977867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130965) , 
0, 0.0174273, 1, 0, 0.000123508,-0.000270943) , 
0, 0.00315455, 1, 0, 0.457806,0.00125163) , 
3, 37.8409, 1, 0, 0.502448,0.000311641)    );
  // itree = 937
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902897,-0.0260897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84646,0.010796) , 
5, 0.0061651, 1, 0, 0.855433,0.000239006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724555,-0.0300117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640223,-0.00608988) , 
2, 0.058492, 1, 0, 0.659697,-0.00662273) , 
2, 0.0498425, 1, 0, 0.795501,-0.00186199) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799576,0.0171414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889938,-0.00381292) , 
4, 0.0156315, 1, 0, 0.833708,0.00502345) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0036011,-0.0138817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17582,0.00508509) , 
4, 0.0121795, 1, 0, 0.129606,2.04024e-05) , 
0, 0.00157834, 1, 0, 0.242692,0.000823944) , 
2, 0.0951981, 1, 0, 0.502192,-0.000436888)    );
  // itree = 938
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986718,0.0041027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766566,0.0138562) , 
2, 0.119019, 1, 0, 0.958619,0.00131321) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862252,-0.00874007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000276683,-0.00233115) , 
0, 0.00308082, 1, 0, 0.169249,-0.000934547) , 
0, 0.00157776, 1, 0, 0.476483,-5.96858e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842406,-0.0211258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75448,-0.0320072) , 
2, 0.0510385, 1, 0, 0.798253,-0.0123426) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622338,-0.00469669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459558,0.0359776) , 
1, 1.08652, 1, 0, 0.533788,0.00156956) , 
2, 0.119036, 1, 0, 0.649346,-0.00450936) , 
6, 0.0330541, 1, 0, 0.496579,-0.000576987)    );
  // itree = 939
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569771,-0.0258911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794793,-0.0135335) , 
4, 0.00377509, 1, 0, 0.763925,-0.0057273) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845025,0.00528514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385951,-0.0130659) , 
5, 0.0136212, 1, 0, 0.58782,-0.00128254) , 
5, 0.00970028, 1, 0, 0.642219,-0.00265552) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.117712,0.00591117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.697598,-0.0142475) , 
6, 0.0331341, 1, 0, 0.194098,-0.000190729) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811193,0.0182394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.805153,-0.00377629) , 
1, 1.06907, 1, 0, 0.808287,0.00182925) , 
6, 0.0347914, 1, 0, 0.276313,7.96658e-05) , 
4, 0.0156375, 1, 0, 0.495944,-0.0015621)    );
  // itree = 940
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906503,-0.0267814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131724) , 
0, 0.00315009, 1, 0, 0.231396,-0.00198089) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908829,0.0193307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131356) , 
0, 0.00315552, 1, 0, 0.156813,0.000644743) , 
3, 37.7371, 1, 0, 0.188161,-0.000458824) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.860611,0.00547241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606859,-0.0135649) , 
7, 0.000231591, 1, 0, 0.840923,0.000460161) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75501,0.0290292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858552,0.00103614) , 
6, 0.0350508, 1, 0, 0.783832,0.0033987) , 
5, 0.0155786, 1, 0, 0.8239,0.00133635) , 
7, 6.55703e-05, 1, 0, 0.504493,0.000434421)    );
  // itree = 941
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965567,0.0108446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929411,-0.0171194) , 
4, 0.010167, 1, 0, 0.946948,-0.00231091) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00112506,-0.0123273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794278,0.0113434) , 
7, 0.000146868, 1, 0, 0.178357,0.000254201) , 
0, 0.00157739, 1, 0, 0.482807,-0.000761878) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659071,0.00101966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649068,-0.013936) , 
3, 49.2033, 1, 0, 0.654486,-0.00183325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605897,-0.0305642) , 
1, 1.10993, 1, 0, 0.639064,-0.00516633) , 
6, 0.0330525, 1, 0, 0.501496,-0.00128867)    );
  // itree = 942
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789329,0.00184619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797393,-0.0104202) , 
3, 7.75451, 1, 0, 0.792339,-0.00104363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98243,0.0260771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131427) , 
0, 0.00315455, 1, 0, 0.741157,0.00275079) , 
3, 12.5286, 1, 0, 0.749715,0.00211633) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144549,-0.0142129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.003578,0.0126601) , 
2, 0.193917, 1, 0, 0.0283202,-6.03714e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715771,-0.0290789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677809,-0.00273254) , 
6, 0.0316541, 1, 0, 0.692901,-0.00797642) , 
7, 0.000195415, 1, 0, 0.159322,-0.00162078) , 
2, 0.14284, 1, 0, 0.493652,0.000495484)    );
  // itree = 943
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.236018,-0.0273746) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.273033,0.0264196) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668495,-0.0218548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523329,-0.00109966) , 
4, 0.0067327, 1, 0, 0.531123,-0.000426686) , 
4, 0.00524245, 1, 0, 0.51207,-0.000189687) , 
5, 0.00335529, 1, 0, 0.499814,-0.000387549)    );
  // itree = 944
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949036,-0.00981038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944602,0.0150439) , 
0, 0.00125848, 1, 0, 0.948327,-0.000763905) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944946,-0.0128265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516851,-0.014628) , 
0, 0.00222405, 1, 0, 0.851172,-0.0103184) , 
0, 0.0016519, 1, 0, 0.923392,-0.00321615) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00116837,0.0111475) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0133849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.29883e-05,-0.00164309) , 
0, 0.0202938, 1, 0, 5.45556e-05,-0.000123135) , 
4, 0.0121795, 1, 0, 0.000384129,4.20352e-05) , 
0, 0.00315669, 1, 0, 0.504157,-0.00173627)    );
  // itree = 945
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707114,-0.00199606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737554,0.0600867) , 
3, 21.3501, 1, 0, 0.711093,0.000279796) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876279,-0.00369095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359263,-0.0106025) , 
2, 0.0951102, 1, 0, 0.651442,-0.0020846) , 
3, 24.9191, 1, 0, 0.670825,-0.00131633) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0189874) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981201,0.0142882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000108516,-0.00123057) , 
0, 0.00315009, 1, 0, 0.271915,0.00105442) , 
4, 0.0156521, 1, 0, 0.178065,0.000236342) , 
5, 0.0169813, 1, 0, 0.50425,-0.000791456)    );
  // itree = 946
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.214999,-0.0347283) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495789,-0.00298993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821041,-0.011461) , 
7, 0.000213323, 1, 0, 0.560185,-0.00204794) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.3795,-0.00723258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639116,0.00528509) , 
6, 0.0226161, 1, 0, 0.503532,2.56544e-06) , 
3, 12.5946, 1, 0, 0.512363,-0.000317096) , 
5, 0.00341826, 1, 0, 0.498528,-0.000563374)    );
  // itree = 947
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868245,-0.016126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796324,-0.00315623) , 
4, 0.00873042, 1, 0, 0.818803,-0.00177527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635428,-0.0256433) , 
2, 0.0770787, 1, 0, 0.799526,-0.00260968) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.772918,0.00966373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000255251,0.00484237) , 
0, 0.00315669, 1, 0, 0.191237,0.00120681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513468,-0.0107735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55478,-0.00652979) , 
4, 0.0174209, 1, 0, 0.533785,-0.00381082) , 
6, 0.033049, 1, 0, 0.24133,0.000473045) , 
2, 0.0952265, 1, 0, 0.503653,-0.000975673)    );
  // itree = 948
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598072,-0.00292276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767364,0.0109183) , 
6, 0.0295756, 1, 0, 0.640397,0.000210389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0108566,-0.0155036) , 
2, 0.309486, 1, 0, 0.527265,-0.000149566) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.49218,-0.019522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16561,0.00526709) , 
2, 0.119036, 1, 0, 0.279506,-0.00366887) , 
3, 100.818, 1, 0, 0.4903,-0.00067463)    );
  // itree = 949
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.255238,-0.00783072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488096,0.0221705) , 
6, 0.0141917, 1, 0, 0.328344,-5.1208e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593485,-0.00505623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544045,-0.0597863) , 
1, 1.8579, 1, 0, 0.587536,-0.00339179) , 
6, 0.0186389, 1, 0, 0.425382,-0.00130188) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899489,0.0795738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522881,0.0287743) , 
2, 0.0949464, 1, 0, 0.707155,0.00486753) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62278,-0.00137654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637837,0.0134959) , 
1, 1.24221, 1, 0, 0.628426,0.000858988) , 
3, 12.6022, 1, 0, 0.639793,0.00143776) , 
6, 0.0260961, 1, 0, 0.502197,-0.000320376)    );
  // itree = 950
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649911,0.00236814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610891,-0.0153686) , 
3, 33.5365, 1, 0, 0.630698,-0.00143244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.299814,-0.00711994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54476,-0.015457) , 
4, 0.00869838, 1, 0, 0.4007,-0.00643357) , 
3, 88.0347, 1, 0, 0.593462,-0.0022421) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.277867,0.00386737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867519,-0.0128674) , 
7, 0.000211246, 1, 0, 0.469139,-0.00292567) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.195891,-0.00375518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870817,0.0097345) , 
7, 0.000196529, 1, 0, 0.427683,0.000630315) , 
3, 12.6191, 1, 0, 0.433873,9.94045e-05) , 
4, 0.0121795, 1, 0, 0.497623,-0.000835942)    );
  // itree = 951
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921287,-0.0127294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869892,-0.0172481) , 
3, 58.9257, 1, 0, 0.906781,-0.00550168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947251,0.00543246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947644,-0.0146938) , 
5, 0.015826, 1, 0, 0.947382,-0.0009401) , 
5, 0.0107248, 1, 0, 0.932081,-0.00265917) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000132994,-0.00554223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00156486,0.0600201) , 
6, 0.0186402, 1, 0, 0.000529113,0.000192131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139256) , 
6, 0.0260953, 1, 0, 0.000398925,1.03926e-05) , 
0, 0.00315669, 1, 0, 0.494828,-0.0014063)    );
  // itree = 952
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.590042,0.0165895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165432,0.0111973) , 
6, 0.0088259, 1, 0, 0.325095,0.00239102) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644797,-0.00550789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673754,-0.018583) , 
4, 0.010328, 1, 0, 0.649659,-0.00196665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608572,0.00832646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.228154,-0.00400711) , 
5, 0.016958, 1, 0, 0.454566,0.000751106) , 
4, 0.0111858, 1, 0, 0.509512,-1.43241e-05) , 
4, 0.00522239, 1, 0, 0.493351,0.000196467)    );
  // itree = 953
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.521751,-0.0105071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672054,0.0246382) , 
6, 0.0330546, 1, 0, 0.538584,-0.00127986) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.196902,-0.00389591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817949,0.0150606) , 
7, 5.73802e-05, 1, 0, 0.534672,0.00174846) , 
3, 24.0208, 1, 0, 0.536412,0.000401417) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971752,0.000767488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866955,-0.0183941) , 
0, 0.000823261, 1, 0, 0.944789,-0.00544229) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248206,-0.0163793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.134275,0.00846718) , 
3, 91.8875, 1, 0, 0.179525,-0.000307903) , 
0, 0.00157174, 1, 0, 0.423145,-0.00194242) , 
3, 63.0563, 1, 0, 0.499464,-0.000363159)    );
  // itree = 954
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902103,-0.0654017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955183,-0.0159281) , 
5, 0.0052273, 1, 0, 0.946919,-0.00628697) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.728122,0.00687904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.10779,-0.00985857) , 
2, 0.0952241, 1, 0, 0.357054,-0.000517218) , 
0, 0.00117164, 1, 0, 0.628406,-0.00317144) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684245,-0.00907207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 5.7956e-05,-0.006337) , 
0, 0.00788697, 1, 0, 0.0538284,-0.000369348) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873732,-0.00843975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895294,0.0142812) , 
1, 1.0858, 1, 0, 0.890894,0.00211219) , 
7, 0.00019548, 1, 0, 0.382529,0.000605109) , 
5, 0.0136036, 1, 0, 0.498348,-0.00117381)    );
  // itree = 955
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240562,-0.0933257) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758358,-0.00481586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148052,0.00492006) , 
2, 0.166463, 1, 0, 0.541498,-0.000344436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.194385,0.0237365) , 
3, 126.117, 1, 0, 0.512746,-6.73058e-06) , 
5, 0.00341826, 1, 0, 0.501213,-0.000401175)    );
  // itree = 956
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958367,-0.00677822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119849,0.0169737) , 
0, 0.00156946, 1, 0, 0.480974,-0.000241692) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85582,-0.0170638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869713,0.00282067) , 
3, 13.2033, 1, 0, 0.862485,-0.00732354) , 
7, 0.000202771, 1, 0, 0.560705,-0.00172171) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79156,-0.0286752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.033177,0.0117632) , 
2, 0.0238066, 1, 0, 0.149201,-0.000124434) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828685,0.00711009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706005,0.0488471) , 
3, 113.959, 1, 0, 0.816538,0.00239711) , 
7, 5.94779e-05, 1, 0, 0.472921,0.00109874) , 
3, 25.2053, 1, 0, 0.499741,0.000237023)    );
  // itree = 957
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763947,-0.00617426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698309,0.00592352) , 
3, 18.0169, 1, 0, 0.71426,0.000352174) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000891423,0.000902641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615607,-0.0125611) , 
7, 0.000196684, 1, 0, 0.0904906,-0.00101715) , 
2, 0.214196, 1, 0, 0.528877,-5.47862e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183886,-0.0116088) , 
3, 126.095, 1, 0, 0.500109,-0.000364754)    );
  // itree = 958
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550923,0.0199783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428244,-0.0250934) , 
3, 36.8507, 1, 0, 0.484055,-0.00445865) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977361,0.0132037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000696318,-0.00888421) , 
0, 0.00157224, 1, 0, 0.385331,0.000716183) , 
5, 0.00542282, 1, 0, 0.397993,5.24686e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898642,-0.00615601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589324,-0.0177418) , 
2, 0.0952265, 1, 0, 0.745987,-0.00497307) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818811,0.0290107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.12952,-0.00448681) , 
1, 1.07239, 1, 0, 0.301852,0.00110938) , 
4, 0.0174248, 1, 0, 0.62479,-0.00331326) , 
6, 0.022624, 1, 0, 0.506429,-0.00155676)    );
  // itree = 959
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996561,0.034582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934008,-0.0065484) , 
0, 0.00030023, 1, 0, 0.974931,-0.000669149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621423,-0.0170675) , 
2, 0.19043, 1, 0, 0.948034,-0.00164916) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951726,0.0169487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628296,-0.00630548) , 
0, 0.00220787, 1, 0, 0.881837,0.00236326) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000153374,-0.010346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000147324,-0.00460939) , 
4, 0.0104321, 1, 0, 0.000148791,-0.00016653) , 
0, 0.00307743, 1, 0, 0.21376,0.000446376) , 
0, 0.00157623, 1, 0, 0.49759,-0.000363644)    );
  // itree = 960
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535985,-0.00549231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538758,0.00900538) , 
3, 14.4148, 1, 0, 0.537662,0.000225898) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617556,-0.00838065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.043237,0.0174045) , 
2, 0.238037, 1, 0, 0.443984,-0.00115991) , 
3, 37.8317, 1, 0, 0.485761,-0.000541896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.699028,-0.00428038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649702,-0.0298748) , 
6, 0.0357856, 1, 0, 0.678693,-0.00512559) , 
6, 0.0347915, 1, 0, 0.498002,-0.000832731)    );
  // itree = 961
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854032,-0.0123367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0553872,0.00157721) , 
2, 0.142797, 1, 0, 0.648238,-0.00253987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355089,-0.0147578) , 
3, 113.186, 1, 0, 0.625925,-0.00341667) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781248,0.028868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.265679,-0.00182066) , 
5, 0.0162424, 1, 0, 0.421639,0.00153287) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0975049,-0.02678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43487,0.00307929) , 
4, 0.0139216, 1, 0, 0.347548,-0.00098225) , 
3, 37.6156, 1, 0, 0.378267,6.05387e-05) , 
5, 0.0135925, 1, 0, 0.495124,-0.00158018)    );
  // itree = 962
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965353,-0.00879796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972553,0.00215411) , 
7, 0.000172137, 1, 0, 0.9681,-0.00157785) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73641,0.00272975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586382,-0.0220177) , 
0, 0.00120239, 1, 0, 0.659751,-0.0141025) , 
2, 0.166626, 1, 0, 0.925007,-0.00332825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000502986,0.018111) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000162472,-0.0115912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131052) , 
0, 0.0188759, 1, 0, 4.88104e-05,-0.00026663) , 
5, 0.010177, 1, 0, 0.000151218,-0.000142355) , 
0, 0.00315669, 1, 0, 0.504245,-0.00187883)    );
  // itree = 963
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230404,0.0177343) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594215,-0.0211734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129009,0.00872115) , 
4, 0.00506442, 1, 0, 0.159622,-5.97438e-05) , 
4, 0.00348979, 1, 0, 0.166431,0.000308272) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.728922,-0.0243325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817416,-0.00408032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.765071,-0.0145824) , 
6, 0.0355911, 1, 0, 0.814122,-0.00157701) , 
7, 7.05552e-05, 1, 0, 0.80945,-0.00242835) , 
7, 5.73799e-05, 1, 0, 0.495191,-0.0010909)    );
  // itree = 964
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895748,0.000692194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926383,0.0141317) , 
5, 0.0106274, 1, 0, 0.914967,0.00217954) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 8.88107e-05,0.0065454) , 
4, 0.0191346, 1, 0, 4.44597e-05,-0.000107416) , 
0, 0.00473183, 1, 0, 0.528526,0.00121359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180261,-0.00730268) , 
3, 126.115, 1, 0, 0.49843,0.000924091)    );
  // itree = 965
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.389868,0.00426605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316366,-0.0207991) , 
3, 50.1203, 1, 0, 0.358402,-0.00379227) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.484151,-0.00194505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644372,0.0109115) , 
6, 0.0314734, 1, 0, 0.503058,-2.03882e-05) , 
4, 0.0052151, 1, 0, 0.490582,-0.000345694) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703198,-0.00448082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663267,-0.0382977) , 
6, 0.0357856, 1, 0, 0.685995,-0.00747909) , 
6, 0.034792, 1, 0, 0.502695,-0.000787872)    );
  // itree = 966
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984168,-0.027679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763006,0.0246104) , 
0, 0.000225164, 1, 0, 0.862416,0.00382784) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000516791,0.0841867) , 
2, 0.357152, 1, 0, 0.000132819,-4.07988e-05) , 
0, 0.00473503, 1, 0, 0.171372,0.000727468) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878335,-0.0135021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848552,-0.00194724) , 
5, 0.00947772, 1, 0, 0.853586,-0.00185202) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830367,-0.0238959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558955,0.00268755) , 
2, 0.166311, 1, 0, 0.727232,-0.00703612) , 
4, 0.0158838, 1, 0, 0.82021,-0.0032214) , 
7, 5.73802e-05, 1, 0, 0.502592,-0.00128836)    );
  // itree = 967
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649014,0.000118647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609653,-0.011403) , 
3, 47.8914, 1, 0, 0.635846,-0.00108208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352897,-0.0156854) , 
3, 100.61, 1, 0, 0.602514,-0.00242228) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940151,0.0268311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 6.0958e-05,-0.00943639) , 
0, 0.0031564, 1, 0, 0.271378,0.00104657) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741813,-0.0117681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674553,0.00926991) , 
3, 61.5081, 1, 0, 0.718594,-0.00292195) , 
6, 0.0295804, 1, 0, 0.426865,-0.000333195) , 
4, 0.0121795, 1, 0, 0.4964,-0.00116021)    );
  // itree = 968
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231793,0.0255806) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701932,0.00622555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48966,-0.00744664) , 
3, 99.6029, 1, 0, 0.678032,0.000696002) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905248,-0.00925493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000194499,0.0141522) , 
0, 0.00315669, 1, 0, 0.252297,-0.000910822) , 
4, 0.0160763, 1, 0, 0.51392,7.66022e-05) , 
4, 0.00350282, 1, 0, 0.500242,0.000277855)    );
  // itree = 969
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.364391,0.00516186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681592,-0.0214279) , 
7, 1.35854e-05, 1, 0, 0.498921,-0.00303771) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969014,0.0205377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000411405,-0.0102365) , 
0, 0.00157346, 1, 0, 0.358906,0.000854163) , 
5, 0.00538992, 1, 0, 0.37836,0.000313426) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997894,0.0470315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751994,-0.0160143) , 
0, 7.51583e-05, 1, 0, 0.946649,-0.00465817) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.304475,-0.014099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445741,0.00362453) , 
5, 0.0135853, 1, 0, 0.402784,-0.000733776) , 
0, 0.00157834, 1, 0, 0.612368,-0.00224608) , 
6, 0.0208816, 1, 0, 0.503667,-0.00105714)    );
  // itree = 970
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.746566,-0.00681612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.215916,0.00503829) , 
2, 0.112154, 1, 0, 0.620726,-0.000911946) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984278,-0.00880592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833111,-0.017795) , 
0, 0.00063024, 1, 0, 0.901349,-0.00537261) , 
7, 0.000202203, 1, 0, 0.686547,-0.0019582) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00374103,-0.0349872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00971566,0.00845603) , 
3, 50.4442, 1, 0, 0.00667146,-0.000466351) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713643,0.046641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145362,0.00594294) , 
2, 0.268752, 1, 0, 0.33824,0.00332497) , 
6, 0.0295724, 1, 0, 0.0908951,0.000496703) , 
2, 0.21426, 1, 0, 0.499294,-0.00118646)    );
  // itree = 971
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958635,0.0701017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905885,0.00168918) , 
4, 0.00686387, 1, 0, 0.925741,0.00119597) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878417,-0.0875657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860052,0.0378289) , 
2, 0.0153983, 1, 0, 0.869015,-0.00504853) , 
2, 0.00906808, 1, 0, 0.896421,-0.00203164) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743709,0.0561398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756967,0.00285259) , 
4, 0.00882213, 1, 0, 0.754225,0.00234885) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0832921,-0.0129921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.344086,0.0032909) , 
5, 0.0102438, 1, 0, 0.296118,-0.000155468) , 
2, 0.0692037, 1, 0, 0.409328,0.00046341) , 
2, 0.0238059, 1, 0, 0.506348,-3.35613e-05)    );
  // itree = 972
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921699,0.0798493) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907069,0.00145113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858146,0.0434824) , 
2, 0.00905882, 1, 0, 0.879222,0.00165838) , 
4, 0.00524114, 1, 0, 0.885761,0.00232593) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764822,-0.0082858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21397,0.035751) , 
4, 0.0174099, 1, 0, 0.63311,-0.0021428) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66749,0.0087851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0611101,0.00101359) , 
0, 0.00157835, 1, 0, 0.116983,0.000437094) , 
2, 0.182495, 1, 0, 0.404164,-0.000998401) , 
2, 0.0238037, 1, 0, 0.500238,-0.000335233)    );
  // itree = 973
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631095,0.0139613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0166686) , 
2, 0.0714177, 1, 0, 0.216082,-0.000196768) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840922,-0.00874914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825912,-0.030451) , 
3, 38.4256, 1, 0, 0.838007,-0.0046462) , 
7, 5.99181e-05, 1, 0, 0.553851,-0.00261327) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985827,-0.0216392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811652,0.00795661) , 
0, 0.000224185, 1, 0, 0.892052,0.00124878) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130943) , 
4, 0.0209, 1, 0, 0,-0.000169211) , 
0, 0.00471671, 1, 0, 0.440883,0.000531611) , 
3, 50.4378, 1, 0, 0.505478,-0.00126662)    );
  // itree = 974
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578995,-0.0212404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740005,-0.00555853) , 
4, 0.00525413, 1, 0, 0.727089,-0.00177494) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690281,0.0042066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000137737,0.00226382) , 
0, 0.00315669, 1, 0, 0.112682,0.000465221) , 
2, 0.190447, 1, 0, 0.528639,-0.00105138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142017,0.0162178) , 
3, 138.724, 1, 0, 0.501891,-0.000751374)    );
  // itree = 975
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580988,-0.0198055) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.172071,-0.0342246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.105111,0.00935819) , 
3, 37.0339, 1, 0, 0.13215,-0.000241097) , 
5, 0.00456767, 1, 0, 0.203962,-0.00152259) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.556145,0.005646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605351,0.0867246) , 
6, 0.0276423, 1, 0, 0.558784,0.00131651) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572973,-0.0113374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679643,0.00435593) , 
4, 0.0156517, 1, 0, 0.63588,-0.000600919) , 
6, 0.028417, 1, 0, 0.586038,0.000638685) , 
6, 0.012188, 1, 0, 0.502767,0.00016765)    );
  // itree = 976
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233155,0.0233062) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.55578,-0.00532373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537127,0.0110676) , 
3, 57.5857, 1, 0, 0.550817,-0.000465212) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.417256,-0.0155191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.230082,-3.02833e-05) , 
4, 0.0129577, 1, 0, 0.28731,-0.00366231) , 
3, 100.775, 1, 0, 0.510553,-0.00095373) , 
4, 0.00348315, 1, 0, 0.497096,-0.000677735)    );
  // itree = 977
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967543,0.072101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94141,-0.0298359) , 
2, 0.011306, 1, 0, 0.957619,-6.80168e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596452,0.0209364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.23029,0.00375049) , 
4, 0.00869014, 1, 0, 0.343173,0.00228964) , 
2, 0.0238037, 1, 0, 0.580956,0.00137726) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.366537,-0.0326589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79449,-0.00892738) , 
4, 0.0103956, 1, 0, 0.738868,-0.00473902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000986343,-0.0190243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376453,0.0163675) , 
4, 0.015653, 1, 0, 0.262354,0.000229377) , 
5, 0.0158429, 1, 0, 0.474789,-0.00198559) , 
5, 0.0100846, 1, 0, 0.504257,-0.00105219)    );
  // itree = 978
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832132,0.00862612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570757,0.0298061) , 
2, 0.0951451, 1, 0, 0.776017,0.00179577) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.278293,-0.0117027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0640927,0.0095319) , 
2, 0.214214, 1, 0, 0.105773,-0.000652049) , 
2, 0.16658, 1, 0, 0.546574,0.000957811) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.788241,-0.00784548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241796,0.000377523) , 
2, 0.0714198, 1, 0, 0.423204,-0.00075199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659749,-0.0257847) , 
6, 0.034792, 1, 0, 0.43896,-0.00124017) , 
3, 50.4469, 1, 0, 0.49943,-5.09104e-06)    );
  // itree = 979
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.494049,-0.00159458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498934,-0.0956196) , 
3, 29.9467, 1, 0, 0.496178,-0.00521227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.339498,0.0146886) , 
3, 62.8879, 1, 0, 0.445871,-0.00237464) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914227,0.00380912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544687,0.0111529) , 
2, 0.0714198, 1, 0, 0.722758,0.00170322) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0160416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000117671,0.00875529) , 
4, 0.0252075, 1, 0, 7.06499e-05,-0.00099267) , 
4, 0.0182373, 1, 0, 0.515394,0.000929675) , 
4, 0.00698291, 1, 0, 0.504937,0.000432659)    );
  // itree = 980
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.359263,0.0218119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875618,-0.00705083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721204,-0.0163713) , 
2, 0.0498763, 1, 0, 0.828583,-0.00250571) , 
6, 0.00706375, 1, 0, 0.796396,-0.00199854) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0494711,0.00879424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187474,-0.014617) , 
6, 0.0243495, 1, 0, 0.091073,-0.000514334) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741627,0.00459658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834768,0.0393006) , 
1, 1.20923, 1, 0, 0.770389,0.00420702) , 
7, 0.000195414, 1, 0, 0.238705,0.000511732) , 
2, 0.0952265, 1, 0, 0.498723,-0.000658658)    );
  // itree = 981
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794479,0.022521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353991,0.00170063) , 
5, 0.00546905, 1, 0, 0.488258,0.00163929) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811031,-0.0106703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277543,0.00093125) , 
2, 0.0714111, 1, 0, 0.48751,-0.000786676) , 
4, 0.00696689, 1, 0, 0.487631,-0.000395833) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977721,0.010465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600604,-0.0167306) , 
0, 0.00155311, 1, 0, 0.74416,-0.00677933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.378965,0.0100433) , 
2, 0.214425, 1, 0, 0.623797,-0.0038271) , 
6, 0.0330525, 1, 0, 0.504177,-0.000812775)    );
  // itree = 982
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637627,-0.000176015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537926,-0.0100979) , 
3, 62.9739, 1, 0, 0.609234,-0.00110669) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792039,-0.0430687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726291,-0.0200541) , 
3, 36.039, 1, 0, 0.756838,-0.007614) , 
5, 0.0123504, 1, 0, 0.631499,-0.00208829) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.469493,0.0121558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452979,0.0669175) , 
4, 0.0157254, 1, 0, 0.460643,0.00341388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474953,0.000465844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0207529,-0.0172036) , 
2, 0.309401, 1, 0, 0.359815,-0.000488145) , 
3, 12.6113, 1, 0, 0.373355,3.58602e-05) , 
5, 0.013663, 1, 0, 0.495305,-0.000967613)    );
  // itree = 983
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992078,0.0150081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842299,0.0135314) , 
0, 0.00017833, 1, 0, 0.911253,0.00295516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131886) , 
0, 0.00378425, 1, 0, 0.568255,0.00168753) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744159,-0.00473641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632563,-0.0245306) , 
2, 0.0770787, 1, 0, 0.728233,-0.00168435) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56049,0.0113134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.134291,-0.0034089) , 
2, 0.191619, 1, 0, 0.298281,0.000594803) , 
2, 0.0952221, 1, 0, 0.467024,-0.000299696) , 
4, 0.0104302, 1, 0, 0.497509,0.000298745)    );
  // itree = 984
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793309,0.00251485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438083,0.0374988) , 
2, 0.144903, 1, 0, 0.758374,0.00104116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.51596,-0.00827668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131786) , 
0, 0.00315247, 1, 0, 0.0830359,-0.0013205) , 
2, 0.190396, 1, 0, 0.550311,0.000313567) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777699,0.0813222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0275328,-0.0038346) , 
2, 0.0238066, 1, 0, 0.126991,0.00048844) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839563,-0.0190241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76747,-0.00816082) , 
6, 0.0224855, 1, 0, 0.784927,-0.00557167) , 
7, 5.94774e-05, 1, 0, 0.439109,-0.00238642) , 
3, 50.4435, 1, 0, 0.502238,-0.000853634)    );
  // itree = 985
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.408398,0.00148517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596849,-0.015027) , 
6, 0.024131, 1, 0, 0.422132,-0.000262558) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.745504,0.0589741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488426,-0.00376723) , 
4, 0.0139482, 1, 0, 0.62943,0.00366806) , 
6, 0.0253461, 1, 0, 0.460238,0.000459981) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617858,0.0321913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61659,-0.00952206) , 
6, 0.0320812, 1, 0, 0.616924,-0.000711571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588734,-0.0178744) , 
1, 1.22308, 1, 0, 0.611919,-0.00203143) , 
6, 0.0295734, 1, 0, 0.498092,-0.000161786)    );
  // itree = 986
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.429737,-0.0013815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651488,-0.0101529) , 
6, 0.0220328, 1, 0, 0.457486,-0.000522903) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852772,0.020763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131522) , 
0, 0.00471671, 1, 0, 0.276007,0.00224206) , 
3, 75.6757, 1, 0, 0.411255,0.000181466) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971719,-0.00582135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859674,-0.0160415) , 
2, 0.117112, 1, 0, 0.929297,-0.00473825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000600741,-0.00240324) , 
0, 0.00314451, 1, 0, 0.614658,-0.00316191) , 
6, 0.0243563, 1, 0, 0.496712,-0.00122321)    );
  // itree = 987
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894019,-0.0242197) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975922,0.0183197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936507,-0.00809866) , 
4, 0.011975, 1, 0, 0.959264,0.00131041) , 
5, 0.00533926, 1, 0, 0.953461,0.000425882) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833071,-0.0185765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906405,-0.00443843) , 
4, 0.0147104, 1, 0, 0.87353,-0.00761969) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000487258,-0.00993883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131038) , 
0, 0.0116735, 1, 0, 0.000111158,-0.00028782) , 
0, 0.0030807, 1, 0, 0.216177,-0.00210158) , 
0, 0.00157776, 1, 0, 0.500725,-0.00112613)    );
  // itree = 988
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576062,-0.0110489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431985,0.00945184) , 
4, 0.00700607, 1, 0, 0.460967,0.000368441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821616,0.0010676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431725,-0.0136494) , 
2, 0.14284, 1, 0, 0.656272,-0.00178437) , 
6, 0.0260981, 1, 0, 0.531206,-0.000405792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.191993,-0.017102) , 
3, 126.115, 1, 0, 0.503447,-0.000990736)    );
  // itree = 989
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582995,-0.0145498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.189316,-0.00248258) , 
6, 0.0088259, 1, 0, 0.340329,-0.00342156) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.465911,0.000441228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668483,-0.0110299) , 
6, 0.0299029, 1, 0, 0.492329,-0.000385314) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697303,0.0627689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623757,-0.00625878) , 
3, 49.178, 1, 0, 0.663226,0.00194838) , 
6, 0.0330523, 1, 0, 0.513847,-9.14715e-05) , 
4, 0.00522181, 1, 0, 0.498888,-0.000378554)    );
  // itree = 990
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97147,-0.00608046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492334,-0.0153208) , 
2, 0.237252, 1, 0, 0.945776,-0.0022782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49113,-0.0114647) , 
0, 0.00224387, 1, 0, 0.924141,-0.00310059) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000331834,0.0136814) , 
2, 0.142899, 1, 0, 0.000241423,2.52515e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0139277) , 
6, 0.0260463, 1, 0, 0.000181588,-7.05265e-05) , 
0, 0.0031564, 1, 0, 0.489354,-0.00167474)    );
  // itree = 991
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844447,0.0080121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229015,-0.00403118) , 
2, 0.0714177, 1, 0, 0.500759,0.000136557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165784,-0.0118469) , 
3, 126.116, 1, 0, 0.472382,-0.000247811) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845874,-0.00370136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802869,0.0308136) , 
3, 46.1653, 1, 0, 0.828111,0.000978083) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63948,-0.0255617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381748,0.00067105) , 
2, 0.20992, 1, 0, 0.488475,-0.0055851) , 
2, 0.119356, 1, 0, 0.63596,-0.00273509) , 
6, 0.0313128, 1, 0, 0.50152,-0.000690871)    );
  // itree = 992
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989106,0.0760957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.000160396,-0.0140958) , 
0, 0.0015782, 1, 0, 0.278133,-1.67357e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81169,-0.0253866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.820124,-0.0057984) , 
4, 0.0123567, 1, 0, 0.817014,-0.00571288) , 
7, 7.60625e-05, 1, 0, 0.555218,-0.00294561) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.423892,-0.00198424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597271,-0.0446247) , 
6, 0.0283251, 1, 0, 0.446977,-0.00106019) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666767,-0.000225826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.580776,0.0467169) , 
3, 58.5017, 1, 0, 0.619514,0.00230462) , 
6, 0.0313128, 1, 0, 0.477429,-0.000466311) , 
3, 25.2225, 1, 0, 0.501499,-0.00123348)    );
  // itree = 993
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975561,-0.0235808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997208,0.0536052) , 
8, 0.01527, 1, 0, 0.990417,3.82081e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948208,-0.00508024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857713,-0.00770134) , 
0, 0.00089755, 1, 0, 0.900971,-0.00363626) , 
2, 0.0237122, 1, 0, 0.930661,-0.00241661) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00115641,0.0141294) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130986) , 
4, 0.0191413, 1, 0, 0,-0.000163343) , 
4, 0.0121749, 1, 0, 0.000335132,1.38339e-05) , 
0, 0.00315669, 1, 0, 0.501101,-0.0012944)    );
  // itree = 994
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.417839,0.023887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640115,-0.102128) , 
7, 2.60439e-05, 1, 0, 0.513911,-0.00113992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.37445,-0.0198667) , 
3, 49.3984, 1, 0, 0.455099,-0.00525026) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.398943,-0.0189451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51485,0.00373114) , 
4, 0.0086928, 1, 0, 0.493834,-4.24204e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661343,-0.0127157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65389,-0.00506117) , 
3, 25.0292, 1, 0, 0.65621,-0.00309352) , 
6, 0.033052, 1, 0, 0.516454,-0.000434593) , 
5, 0.00672042, 1, 0, 0.508314,-0.00107347)    );
  // itree = 995
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681445,-0.00164642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762208,-0.0143434) , 
6, 0.0330531, 1, 0, 0.690851,-0.000829011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371422,-0.0190227) , 
2, 0.215367, 1, 0, 0.676125,-0.00113548) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421271,0.0183694) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.000361108,0.0553659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0131123) , 
6, 0.013899, 1, 0, 0.000141889,4.70048e-05) , 
0, 0.00315669, 1, 0, 0.0505272,0.000877069) , 
2, 0.238059, 1, 0, 0.501854,-0.00057485)    );
  // itree = 996
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466653,-0.00643619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46448,0.0229979) , 
3, 36.0237, 1, 0, 0.466137,-0.000233658) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900715,-0.0233183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792656,0.00519209) , 
0, 0.00179362, 1, 0, 0.84449,-0.00314598) , 
7, 0.000206181, 1, 0, 0.543674,-0.000830489) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998773,0.0495406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868448,0.0198323) , 
0, 7.51022e-05, 1, 0, 0.953532,0.00443304) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.232824,-0.0025739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0743519,0.028149) , 
3, 121.896, 1, 0, 0.187365,0.000276847) , 
0, 0.00157776, 1, 0, 0.442974,0.00166344) , 
3, 50.4407, 1, 0, 0.500675,0.000234419)    );
  // itree = 997
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.238136,-0.0325587) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.581928,0.0153002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436525,0.0436265) , 
3, 61.7929, 1, 0, 0.535566,0.00381845) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.318972,0.00233737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645979,-0.00642093) , 
6, 0.0208787, 1, 0, 0.509648,-0.0009669) , 
5, 0.00667017, 1, 0, 0.512215,-0.000493107) , 
5, 0.00341826, 1, 0, 0.500544,-0.000734966)    );
  // itree = 998
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924827,-0.00665183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935097,0.0108421) , 
6, 0.0329904, 1, 0, 0.925931,-0.00175976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910732,-0.0295348) , 
5, 0.0177995, 1, 0, 0.925132,-0.00245127) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0132019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0130989) , 
4, 0.0138917, 1, 0, 0,-0.000177848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00103423,0.0148371) , 
6, 0.0243503, 1, 0, 0.000304762,-3.44287e-06) , 
0, 0.00315669, 1, 0, 0.501995,-0.00133131)    );
  // itree = 999
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466099,-0.00173121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864193,-0.0109724) , 
7, 8.61208e-05, 1, 0, 0.686045,-0.00339357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173091,0.0185932) , 
4, 0.0173717, 1, 0, 0.558044,-0.00227909) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621705,0.0299526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338917,0.025326) , 
6, 0.0104342, 1, 0, 0.431852,0.0034921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.551419,0.00614282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397266,-0.00595144) , 
3, 70.8163, 1, 0, 0.486939,4.05935e-06) , 
5, 0.00679359, 1, 0, 0.479569,0.000470711) , 
3, 25.2044, 1, 0, 0.503885,-0.00038133)    );
   return;
};
 
// Clean up
inline void ReadBDTG30::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDTG30::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
         if (IsNormalised()) {
            // normalise variables
            std::vector<double> iV;
            iV.reserve(inputValues.size());
            int ivar = 0;
            for (std::vector<double>::const_iterator varIt = inputValues.begin();
                 varIt != inputValues.end(); varIt++, ivar++) {
               iV.push_back(NormVariable( *varIt, fVmin[ivar], fVmax[ivar] ));
            }
            retval = GetMvaValue__( iV );
         }
         else {
            retval = GetMvaValue__( inputValues );
         }
      }

      return retval;
   }
